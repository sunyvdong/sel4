/*
 * Copyright 2020, Data61, CSIRO (ABN 41 687 119 230)
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */


/* This header was generated by kernel/tools/syscall_header_gen.py.
 *
 * To add a system call number, edit kernel/libsel4/include/api/syscall.xml
 *
 */
#pragma once

#include <sel4/config.h>

typedef enum {
       seL4_SysCall = -1,
       seL4_SysReplyRecv = -2,
       seL4_SysSend = -3,
       seL4_SysNBSend = -4,
       seL4_SysRecv = -5,
       seL4_SysReply = -6,
       seL4_SysYield = -7,
       seL4_SysNBRecv = -8,
#if defined(CONFIG_PRINTING)
       seL4_SysDebugPutChar = -9,
       seL4_SysDebugDumpScheduler = -10,
#endif /* defined(CONFIG_PRINTING) */
#if defined(CONFIG_DEBUG_BUILD)
       seL4_SysDebugHalt = -11,
       seL4_SysDebugCapIdentify = -12,
       seL4_SysDebugSnapshot = -13,
       seL4_SysDebugNameThread = -14,
#endif /* defined(CONFIG_DEBUG_BUILD) */
#if (defined(CONFIG_DEBUG_BUILD) && defined(CONFIG_ENABLE_SMP_SUPPORT))
       seL4_SysDebugSendIPI = -15,
#endif /* (defined(CONFIG_DEBUG_BUILD) && defined(CONFIG_ENABLE_SMP_SUPPORT)) */
#if defined(CONFIG_DANGEROUS_CODE_INJECTION)
       seL4_SysDebugRun = -16,
#endif /* defined(CONFIG_DANGEROUS_CODE_INJECTION) */
#if defined(CONFIG_ENABLE_BENCHMARKS)
       seL4_SysBenchmarkFlushCaches = -17,
       seL4_SysBenchmarkResetLog = -18,
       seL4_SysBenchmarkFinalizeLog = -19,
       seL4_SysBenchmarkSetLogBuffer = -20,
       seL4_SysBenchmarkNullSyscall = -21,
#endif /* defined(CONFIG_ENABLE_BENCHMARKS) */
#if defined(CONFIG_BENCHMARK_TRACK_UTILISATION)
       seL4_SysBenchmarkGetThreadUtilisation = -22,
       seL4_SysBenchmarkResetThreadUtilisation = -23,
#endif /* defined(CONFIG_BENCHMARK_TRACK_UTILISATION) */
#if (defined(CONFIG_DEBUG_BUILD) && defined(CONFIG_BENCHMARK_TRACK_UTILISATION))
       seL4_SysBenchmarkDumpAllThreadsUtilisation = -24,
       seL4_SysBenchmarkResetAllThreadsUtilisation = -25,
#endif /* (defined(CONFIG_DEBUG_BUILD) && defined(CONFIG_BENCHMARK_TRACK_UTILISATION)) */
#if defined(CONFIG_KERNEL_X86_DANGEROUS_MSR)
       seL4_SysX86DangerousWRMSR = -26,
       seL4_SysX86DangerousRDMSR = -27,
#endif /* defined(CONFIG_KERNEL_X86_DANGEROUS_MSR) */
#if defined(CONFIG_VTX)
       seL4_SysVMEnter = -28,
#endif /* defined(CONFIG_VTX) */
#if defined(CONFIG_SET_TLS_BASE_SELF)
       seL4_SysSetTLSBase = -29,
#endif /* defined(CONFIG_SET_TLS_BASE_SELF) */
    SEL4_FORCE_LONG_ENUM(seL4_Syscall_ID)
} seL4_Syscall_ID;
