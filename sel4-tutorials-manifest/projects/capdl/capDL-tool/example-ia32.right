arch ia32

objects {

  a = tcb (dom: 0)
  b = tcb (dom: 0)
  cnode_booter = cnode (8 bits)
  control = ep
  frame_name = frame (4k)
  frame_nic1[64] = frame (4k)
  frame_nic2[64] = frame (4k)
  frame_nic3[4] = frame (4k)
  io_ports = io_ports (ports: [4096..45894])
  io_pt1 = io_pt (level: 1)
  io_pt2 = io_pt (level: 2)
  io_pt3 = io_pt (level: 3)
  iospace = io_device (domainID: 50, 15:10.3)
  irq_handler[3] = irq
  linux_pd = pd
  nic1 = io_device (domainID: 0, 0:0.0)
  nic1_notification = notification
  nic2 = io_device (domainID: 0, 0:0.0)
  nic3 = io_device (domainID: 50, 15:10.3)
  rm_ap = asid_pool (asid_high: 0x0)
  rm_cn = cnode (10 bits)
  rm_pd = pd
  rm_tcb = tcb (dom: 0)
  some_pt = pt
  timer = notification
  x = tcb (dom: 0)
  y = ep
  z = ep

  name = ut (8 bits) {y, z, name3, a, b}
  name2 = ut (8 bits) {rm_cn}
  name3 = ut {x}
  name_b = ut (10 bits)
  rm_ut = ut {rm_tcb, name2, rm_pd, rm_ap, linux_pd,
              rm_ut_small[0..49], rm_ut_big[0..99], frame_nic1[0..63], nic1,
              frame_nic2[0..63], nic2, frame_nic3[0..3], nic3, timer, control,
              io_pt1, io_pt2, io_pt3}
  rm_ut_big[100] = ut (20 bits)
  rm_ut_small[50] = ut (12 bits)

} caps {

  cnode_booter {1: rm_ut}

  io_pt1 {0: io_pt2}

  io_pt2 {0: io_pt3}

  io_pt3 {0: frame_nic3[0]}

  linux_pd {
    10: frame_name
    255: some_pt
    256: frame_nic1[0..30]
    304: frame_nic1[31..63]
    352: frame_nic2[10]
    384: frame_nic2[11..17, 0..2, 10, 10..63]
  }

  nic1 {0: io_pt1}

  rm_cn {
    1: rm_tcb
    2: rm_cn
    3: rm_pd
    6: rm_ap
    7: io_ports
    11: linux_pd
    12: rm_ut_small[3..5, 7..20, 23, 27..49]
    62: rm_ut_big[0..99]
    163: irq_handler[0]
    164: frame_nic1[0..63]
    228: iospace
    229: irq_handler[1]
    230: frame_nic2[0..63]
    295: irq_handler[2]
    296: frame_nic3[0..3]
    301: timer (G)
    302: control (badge: 10)
    303: frame_nic1[0]
    320: io_space_master
    325: nic2
    327: io_pt1
    328: io_ports
    528: x
  }

  rm_tcb {
    0: rm_cn
    1: rm_pd
  }

  some_pt {37: frame_nic3[0..2]}

} cdt {

} irq maps {

  0: irq_handler[0..2]

}