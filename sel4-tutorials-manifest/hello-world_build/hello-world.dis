
hello-world:     file format elf32-littlearm


Disassembly of section .note.gnu.build-id:

000100f4 <__executable_start+0xf4>:
   100f4:	00000004 	andeq	r0, r0, r4
   100f8:	00000014 	andeq	r0, r0, r4, lsl r0
   100fc:	00000003 	andeq	r0, r0, r3
   10100:	00554e47 	subseq	r4, r5, r7, asr #28
   10104:	3aca974e 	bcc	ff2b5e44 <__bss_end__+0xff16cdfc>
   10108:	372c95af 	strcc	r9, [ip, -pc, lsr #11]!
   1010c:	b3d15757 	bicslt	r5, r1, #22806528	; 0x15c0000
   10110:	761b046f 	ldrvc	r0, [fp], -pc, ror #8
   10114:	42ac8067 	adcmi	r8, ip, #103	; 0x67

Disassembly of section .init:

00010118 <_init>:
.syntax unified

.section .init
.global _init
_init:
	stmdb sp!, {fp, lr}
   10118:	e92d4800 	push	{fp, lr}
	mov fp, sp
   1011c:	e1a0b00d 	mov	fp, sp
 * SPDX-License-Identifier: BSD-2-Clause
 */
.syntax unified

.section .init
	ldmia sp!, {fp, lr}
   10120:	e8bd4800 	pop	{fp, lr}
	bx lr
   10124:	e12fff1e 	bx	lr

Disassembly of section .text:

00010128 <exit>:
   10128:	e92d4010 	push	{r4, lr}
   1012c:	e1a04000 	mov	r4, r0
   10130:	eb00391b 	bl	1e5a4 <__funcs_on_exit>
   10134:	eb00391b 	bl	1e5a8 <__libc_exit_fini>
   10138:	eb005680 	bl	25b40 <__stdio_exit>
   1013c:	e1a00004 	mov	r0, r4
   10140:	eb004918 	bl	225a8 <_Exit>

00010144 <_start>:
.syntax unified

.section .text
.global _start
_start:
	mov fp, 0
   10144:	e3a0b000 	mov	fp, #0
	mov lr, 0
   10148:	e3a0e000 	mov	lr, #0

	mov a1, sp
   1014c:	e1a0000d 	mov	r0, sp
	bl __sel4_start_c
   10150:	eb000034 	bl	10228 <__sel4_start_c>

	/* should not return */
1:
	b 1b
   10154:	eafffffe 	b	10154 <_start+0x10>

00010158 <deregister_tm_clones>:
   10158:	e59f0018 	ldr	r0, [pc, #24]	; 10178 <deregister_tm_clones+0x20>
   1015c:	e59f3018 	ldr	r3, [pc, #24]	; 1017c <deregister_tm_clones+0x24>
   10160:	e1530000 	cmp	r3, r0
   10164:	012fff1e 	bxeq	lr
   10168:	e59f3010 	ldr	r3, [pc, #16]	; 10180 <deregister_tm_clones+0x28>
   1016c:	e3530000 	cmp	r3, #0
   10170:	012fff1e 	bxeq	lr
   10174:	e12fff13 	bx	r3
   10178:	0002c8d8 	ldrdeq	ip, [r2], -r8
   1017c:	0002c8d8 	ldrdeq	ip, [r2], -r8
   10180:	00000000 	andeq	r0, r0, r0

00010184 <register_tm_clones>:
   10184:	e59f0024 	ldr	r0, [pc, #36]	; 101b0 <register_tm_clones+0x2c>
   10188:	e59f1024 	ldr	r1, [pc, #36]	; 101b4 <register_tm_clones+0x30>
   1018c:	e0413000 	sub	r3, r1, r0
   10190:	e1a01fa3 	lsr	r1, r3, #31
   10194:	e0811143 	add	r1, r1, r3, asr #2
   10198:	e1b010c1 	asrs	r1, r1, #1
   1019c:	012fff1e 	bxeq	lr
   101a0:	e59f3010 	ldr	r3, [pc, #16]	; 101b8 <register_tm_clones+0x34>
   101a4:	e3530000 	cmp	r3, #0
   101a8:	012fff1e 	bxeq	lr
   101ac:	e12fff13 	bx	r3
   101b0:	0002c8d8 	ldrdeq	ip, [r2], -r8
   101b4:	0002c8d8 	ldrdeq	ip, [r2], -r8
   101b8:	00000000 	andeq	r0, r0, r0

000101bc <__do_global_dtors_aux>:
   101bc:	e92d4010 	push	{r4, lr}
   101c0:	e59f4018 	ldr	r4, [pc, #24]	; 101e0 <__do_global_dtors_aux+0x24>
   101c4:	e5d43000 	ldrb	r3, [r4]
   101c8:	e3530000 	cmp	r3, #0
   101cc:	18bd8010 	popne	{r4, pc}
   101d0:	ebffffe0 	bl	10158 <deregister_tm_clones>
   101d4:	e3a03001 	mov	r3, #1
   101d8:	e5c43000 	strb	r3, [r4]
   101dc:	e8bd8010 	pop	{r4, pc}
   101e0:	00030000 	andeq	r0, r3, r0

000101e4 <frame_dummy>:
   101e4:	eaffffe6 	b	10184 <register_tm_clones>

000101e8 <main>:

#include <stdio.h>


int main(int argc, char *argv[]) {
   101e8:	e92d4800 	push	{fp, lr}
   101ec:	e28db004 	add	fp, sp, #4
   101f0:	e24dd008 	sub	sp, sp, #8
   101f4:	e50b0008 	str	r0, [fp, #-8]
   101f8:	e50b100c 	str	r1, [fp, #-12]
    printf("Hello, World!\n");
   101fc:	e3070658 	movw	r0, #30296	; 0x7658
   10200:	e3400002 	movt	r0, #2
   10204:	eb003d8d 	bl	1f840 <puts>

    return 0;
   10208:	e3a03000 	mov	r3, #0
}
   1020c:	e1a00003 	mov	r0, r3
   10210:	e24bd004 	sub	sp, fp, #4
   10214:	e8bd8800 	pop	{fp, pc}

00010218 <_sel4_start>:
.syntax unified

.section .text
.global _sel4_start
_sel4_start:
	ldr sp, =__stack_top
   10218:	e59fd004 	ldr	sp, [pc, #4]	; 10224 <_sel4_start+0xc>
	bl __sel4_start_root
   1021c:	eb000046 	bl	1033c <__sel4_start_root>
	/* should not return */
1:
	b 1b
   10220:	eafffffe 	b	10220 <_sel4_start+0x8>
	ldr sp, =__stack_top
   10224:	00044000 	andeq	r4, r4, r0

00010228 <__sel4_start_c>:
 * * array of auxiliary vector entries,
 * * an 'zero' auxiliary vector, then
 * * unspecified data.
 */
void __sel4_start_c(void const *stack)
{
   10228:	e92d4800 	push	{fp, lr}
   1022c:	e28db004 	add	fp, sp, #4
   10230:	e24dd028 	sub	sp, sp, #40	; 0x28
   10234:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    // First word on the stack is argument count.
    unsigned long argc = *((unsigned long const *) stack);
   10238:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1023c:	e5933000 	ldr	r3, [r3]
   10240:	e50b300c 	str	r3, [fp, #-12]

    // Second word on the stack is the start of the argument vector.
    char const *const *argv = &((char const * const *) stack)[1];
   10244:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   10248:	e2833004 	add	r3, r3, #4
   1024c:	e50b3010 	str	r3, [fp, #-16]

    // The environment pointer vector follows after the argv.
    char const *const *envp = &argv[argc + 1];
   10250:	e51b300c 	ldr	r3, [fp, #-12]
   10254:	e2833001 	add	r3, r3, #1
   10258:	e1a03103 	lsl	r3, r3, #2
   1025c:	e51b2010 	ldr	r2, [fp, #-16]
   10260:	e0823003 	add	r3, r2, r3
   10264:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    int envc = 0;
   10268:	e3a03000 	mov	r3, #0
   1026c:	e50b3008 	str	r3, [fp, #-8]
    while (envp[envc] != SEL4RUNTIME_NULL) {
   10270:	ea000002 	b	10280 <__sel4_start_c+0x58>
        envc++;
   10274:	e51b3008 	ldr	r3, [fp, #-8]
   10278:	e2833001 	add	r3, r3, #1
   1027c:	e50b3008 	str	r3, [fp, #-8]
    while (envp[envc] != SEL4RUNTIME_NULL) {
   10280:	e51b3008 	ldr	r3, [fp, #-8]
   10284:	e1a03103 	lsl	r3, r3, #2
   10288:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1028c:	e0823003 	add	r3, r2, r3
   10290:	e5933000 	ldr	r3, [r3]
   10294:	e3530000 	cmp	r3, #0
   10298:	1afffff5 	bne	10274 <__sel4_start_c+0x4c>
    }


    // The auxiliary vector follows the environment pointer vector.
    auxv_t const *auxv = (void const *)(&envp[envc + 1]);
   1029c:	e51b3008 	ldr	r3, [fp, #-8]
   102a0:	e2833001 	add	r3, r3, #1
   102a4:	e1a03103 	lsl	r3, r3, #2
   102a8:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   102ac:	e0823003 	add	r3, r2, r3
   102b0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

    __sel4runtime_start_main(main, argc, argv, envp, auxv);
   102b4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   102b8:	e58d3000 	str	r3, [sp]
   102bc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   102c0:	e51b2010 	ldr	r2, [fp, #-16]
   102c4:	e51b100c 	ldr	r1, [fp, #-12]
   102c8:	e30001e8 	movw	r0, #488	; 0x1e8
   102cc:	e3400001 	movt	r0, #1
   102d0:	eb000002 	bl	102e0 <__sel4runtime_start_main>
}
   102d4:	e320f000 	nop	{0}
   102d8:	e24bd004 	sub	sp, fp, #4
   102dc:	e8bd8800 	pop	{fp, pc}

000102e0 <__sel4runtime_start_main>:
    unsigned long argc,
    char const *const *argv,
    char const *const *envp,
    auxv_t const auxv[]
)
{
   102e0:	e92d4800 	push	{fp, lr}
   102e4:	e28db004 	add	fp, sp, #4
   102e8:	e24dd010 	sub	sp, sp, #16
   102ec:	e50b0008 	str	r0, [fp, #-8]
   102f0:	e50b100c 	str	r1, [fp, #-12]
   102f4:	e50b2010 	str	r2, [fp, #-16]
   102f8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    __sel4runtime_load_env(argc, argv, envp, auxv);
   102fc:	e51b000c 	ldr	r0, [fp, #-12]
   10300:	e59b3004 	ldr	r3, [fp, #4]
   10304:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10308:	e51b1010 	ldr	r1, [fp, #-16]
   1030c:	eb0001f3 	bl	10ae0 <__sel4runtime_load_env>

    sel4runtime_exit(main(argc, argv, envp));
   10310:	e51b3008 	ldr	r3, [fp, #-8]
   10314:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10318:	e51b1010 	ldr	r1, [fp, #-16]
   1031c:	e51b000c 	ldr	r0, [fp, #-12]
   10320:	e12fff33 	blx	r3
   10324:	e1a03000 	mov	r3, r0
   10328:	e1a00003 	mov	r0, r3
   1032c:	eb0001a4 	bl	109c4 <sel4runtime_exit>
}
   10330:	e320f000 	nop	{0}
   10334:	e24bd004 	sub	sp, fp, #4
   10338:	e8bd8800 	pop	{fp, pc}

0001033c <__sel4_start_root>:
 *
 * This is invoked by _sel4_start, which simply sets up a static stack
 * and passes the argument to us.
 */
void __sel4_start_root(seL4_BootInfo *boot_info)
{
   1033c:	e92d4800 	push	{fp, lr}
   10340:	e28db004 	add	fp, sp, #4
   10344:	e24dd088 	sub	sp, sp, #136	; 0x88
   10348:	e50b0080 	str	r0, [fp, #-128]	; 0xffffff80
    sel4runtime_uintptr_t tdata_start = (sel4runtime_uintptr_t) &_tdata_start[0];
   1034c:	e30a380c 	movw	r3, #43020	; 0xa80c
   10350:	e3403002 	movt	r3, #2
   10354:	e50b3008 	str	r3, [fp, #-8]
    sel4runtime_uintptr_t tdata_end = (sel4runtime_uintptr_t) &_tdata_end[0];
   10358:	e30a380c 	movw	r3, #43020	; 0xa80c
   1035c:	e3403002 	movt	r3, #2
   10360:	e50b300c 	str	r3, [fp, #-12]
    sel4runtime_uintptr_t tbss_start = (sel4runtime_uintptr_t) &_tbss_start[0];
   10364:	e30a380c 	movw	r3, #43020	; 0xa80c
   10368:	e3403002 	movt	r3, #2
   1036c:	e50b3010 	str	r3, [fp, #-16]
    sel4runtime_uintptr_t tbss_end = (sel4runtime_uintptr_t) &_tbss_end[0];
   10370:	e30a3814 	movw	r3, #43028	; 0xa814
   10374:	e3403002 	movt	r3, #2
   10378:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
     * region p_memsz value will be wrong.
     * Assigning empty tbss_start to tdata[_start|_end] will
     * follow ld.bfd and results in the proper 0 p_memsz.
     * The .tdata section is empty and hence, the linker script variables are zero
     */
    if (tdata_start == 0) {
   1037c:	e51b3008 	ldr	r3, [fp, #-8]
   10380:	e3530000 	cmp	r3, #0
   10384:	1a000003 	bne	10398 <__sel4_start_root+0x5c>
        tdata_start = tbss_start;
   10388:	e51b3010 	ldr	r3, [fp, #-16]
   1038c:	e50b3008 	str	r3, [fp, #-8]
        tdata_end = tbss_start;
   10390:	e51b3010 	ldr	r3, [fp, #-16]
   10394:	e50b300c 	str	r3, [fp, #-12]
    }

    Elf_Phdr tls_header = {
   10398:	e24b3034 	sub	r3, fp, #52	; 0x34
   1039c:	e3a02020 	mov	r2, #32
   103a0:	e3a01000 	mov	r1, #0
   103a4:	e1a00003 	mov	r0, r3
   103a8:	eb004652 	bl	21cf8 <memset>
   103ac:	e3a03007 	mov	r3, #7
   103b0:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
   103b4:	e51b3008 	ldr	r3, [fp, #-8]
   103b8:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
        .p_type   = PT_TLS,
        .p_offset = 0,
        .p_vaddr  = (Elf_Addr) tdata_start,
        .p_paddr  = 0,
        .p_filesz = tdata_end - tdata_start,
   103bc:	e51b200c 	ldr	r2, [fp, #-12]
   103c0:	e51b3008 	ldr	r3, [fp, #-8]
   103c4:	e0423003 	sub	r3, r2, r3
    Elf_Phdr tls_header = {
   103c8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
        .p_memsz  = tbss_end - tdata_start,
   103cc:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   103d0:	e51b3008 	ldr	r3, [fp, #-8]
   103d4:	e0423003 	sub	r3, r2, r3
    Elf_Phdr tls_header = {
   103d8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   103dc:	e3a03004 	mov	r3, #4
   103e0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

    struct {
        char const *const argv[2];
        char const *const envp[2];
        auxv_t auxv[7];
    } info = {
   103e4:	e3073674 	movw	r3, #30324	; 0x7674
   103e8:	e3403002 	movt	r3, #2
   103ec:	e50b307c 	str	r3, [fp, #-124]	; 0xffffff84
   103f0:	e3a03000 	mov	r3, #0
   103f4:	e50b3078 	str	r3, [fp, #-120]	; 0xffffff88
   103f8:	e3073680 	movw	r3, #30336	; 0x7680
   103fc:	e3403002 	movt	r3, #2
   10400:	e50b3074 	str	r3, [fp, #-116]	; 0xffffff8c
   10404:	e3a03000 	mov	r3, #0
   10408:	e50b3070 	str	r3, [fp, #-112]	; 0xffffff90
   1040c:	e3a03004 	mov	r3, #4
   10410:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
   10414:	e3a03020 	mov	r3, #32
   10418:	e50b3068 	str	r3, [fp, #-104]	; 0xffffff98
   1041c:	e3a03005 	mov	r3, #5
   10420:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
   10424:	e3a03001 	mov	r3, #1
   10428:	e50b3060 	str	r3, [fp, #-96]	; 0xffffffa0
   1042c:	e3a03003 	mov	r3, #3
   10430:	e50b305c 	str	r3, [fp, #-92]	; 0xffffffa4
   10434:	e24b3034 	sub	r3, fp, #52	; 0x34
   10438:	e50b3058 	str	r3, [fp, #-88]	; 0xffffffa8
   1043c:	e3a03020 	mov	r3, #32
   10440:	e50b3054 	str	r3, [fp, #-84]	; 0xffffffac
   10444:	e30437d4 	movw	r3, #18388	; 0x47d4
   10448:	e3403001 	movt	r3, #1
   1044c:	e50b3050 	str	r3, [fp, #-80]	; 0xffffffb0
   10450:	e3a03040 	mov	r3, #64	; 0x40
   10454:	e50b304c 	str	r3, [fp, #-76]	; 0xffffffb4
   10458:	e51b3080 	ldr	r3, [fp, #-128]	; 0xffffff80
   1045c:	e50b3048 	str	r3, [fp, #-72]	; 0xffffffb8
   10460:	e3a03045 	mov	r3, #69	; 0x45
   10464:	e50b3044 	str	r3, [fp, #-68]	; 0xffffffbc
   10468:	e3a03001 	mov	r3, #1
   1046c:	e50b3040 	str	r3, [fp, #-64]	; 0xffffffc0
   10470:	e3a03000 	mov	r3, #0
   10474:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
   10478:	e3a03000 	mov	r3, #0
   1047c:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
                .a_un.a_val = 0
            },
        },
    };

    __sel4runtime_start_main(main, ARRAY_LENGTH(info.argv) - 1, info.argv, info.envp, info.auxv);
   10480:	e24b307c 	sub	r3, fp, #124	; 0x7c
   10484:	e2831008 	add	r1, r3, #8
   10488:	e24b207c 	sub	r2, fp, #124	; 0x7c
   1048c:	e24b307c 	sub	r3, fp, #124	; 0x7c
   10490:	e2833010 	add	r3, r3, #16
   10494:	e58d3000 	str	r3, [sp]
   10498:	e1a03001 	mov	r3, r1
   1049c:	e3a01001 	mov	r1, #1
   104a0:	e30001e8 	movw	r0, #488	; 0x1e8
   104a4:	e3400001 	movt	r0, #1
   104a8:	ebffff8c 	bl	102e0 <__sel4runtime_start_main>
}
   104ac:	e320f000 	nop	{0}
   104b0:	e24bd004 	sub	sp, fp, #4
   104b4:	e8bd8800 	pop	{fp, pc}

000104b8 <seL4_GetIPCBuffer>:
    __sel4_ipc_buffer = ipc_buffer;
    return;
}

LIBSEL4_INLINE_FUNC seL4_IPCBuffer *seL4_GetIPCBuffer(void)
{
   104b8:	e92d4800 	push	{fp, lr}
   104bc:	e28db004 	add	fp, sp, #4
    return __sel4_ipc_buffer;
   104c0:	eb00078d 	bl	122fc <__aeabi_read_tp>
   104c4:	e1a03000 	mov	r3, r0
   104c8:	e59f2008 	ldr	r2, [pc, #8]	; 104d8 <seL4_GetIPCBuffer+0x20>
   104cc:	e7933002 	ldr	r3, [r3, r2]
}
   104d0:	e1a00003 	mov	r0, r3
   104d4:	e8bd8800 	pop	{fp, pc}
   104d8:	00000008 	andeq	r0, r0, r8

000104dc <arm_sys_send_recv>:
}

static inline void arm_sys_send_recv(seL4_Word sys, seL4_Word dest, seL4_Word *out_badge, seL4_Word info_arg,
                                     seL4_Word *out_info, seL4_Word *in_out_mr0, seL4_Word *in_out_mr1, seL4_Word *in_out_mr2, seL4_Word *in_out_mr3,
                                     LIBSEL4_UNUSED seL4_Word reply)
{
   104dc:	e92d08b0 	push	{r4, r5, r7, fp}
   104e0:	e28db00c 	add	fp, sp, #12
   104e4:	e24dd010 	sub	sp, sp, #16
   104e8:	e50b0010 	str	r0, [fp, #-16]
   104ec:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   104f0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   104f4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    register seL4_Word destptr asm("r0") = dest;
   104f8:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    register seL4_Word info asm("r1") = info_arg;
   104fc:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4

    /* Load beginning of the message into registers. */
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   10500:	e59b3008 	ldr	r3, [fp, #8]
   10504:	e5933000 	ldr	r3, [r3]
   10508:	e1a02003 	mov	r2, r3
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   1050c:	e59b300c 	ldr	r3, [fp, #12]
   10510:	e5933000 	ldr	r3, [r3]
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   10514:	e59bc010 	ldr	ip, [fp, #16]
   10518:	e59cc000 	ldr	ip, [ip]
   1051c:	e1a0400c 	mov	r4, ip
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   10520:	e59bc014 	ldr	ip, [fp, #20]
   10524:	e59cc000 	ldr	ip, [ip]
   10528:	e1a0500c 	mov	r5, ip

    /* Perform the system call. */
    MCS_PARAM_DECL("r6");
    register seL4_Word scno asm("r7") = sys;
   1052c:	e51b7010 	ldr	r7, [fp, #-16]
    asm volatile(
   10530:	ef000000 	svc	0x00000000
        : "+r"(msg0), "+r"(msg1), "+r"(msg2), "+r"(msg3),
        "+r"(info), "+r"(destptr)
        : "r"(scno) MCS_PARAM
        : "memory"
    );
    *out_info = info;
   10534:	e1a0c001 	mov	ip, r1
   10538:	e59b1004 	ldr	r1, [fp, #4]
   1053c:	e581c000 	str	ip, [r1]
    *out_badge = destptr;
   10540:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   10544:	e5810000 	str	r0, [r1]
    *in_out_mr0 = msg0;
   10548:	e1a01002 	mov	r1, r2
   1054c:	e59b2008 	ldr	r2, [fp, #8]
   10550:	e5821000 	str	r1, [r2]
    *in_out_mr1 = msg1;
   10554:	e1a02003 	mov	r2, r3
   10558:	e59b300c 	ldr	r3, [fp, #12]
   1055c:	e5832000 	str	r2, [r3]
    *in_out_mr2 = msg2;
   10560:	e1a02004 	mov	r2, r4
   10564:	e59b3010 	ldr	r3, [fp, #16]
   10568:	e5832000 	str	r2, [r3]
    *in_out_mr3 = msg3;
   1056c:	e1a02005 	mov	r2, r5
   10570:	e59b3014 	ldr	r3, [fp, #20]
   10574:	e5832000 	str	r2, [r3]
}
   10578:	e320f000 	nop	{0}
   1057c:	e24bd00c 	sub	sp, fp, #12
   10580:	e8bd08b0 	pop	{r4, r5, r7, fp}
   10584:	e12fff1e 	bx	lr

00010588 <seL4_DebugNameThread>:
    return (seL4_Uint32)cap;
}

char *strcpy(char *, const char *);
LIBSEL4_INLINE_FUNC void seL4_DebugNameThread(seL4_CPtr tcb, const char *name)
{
   10588:	e92d4800 	push	{fp, lr}
   1058c:	e28db004 	add	fp, sp, #4
   10590:	e24dd038 	sub	sp, sp, #56	; 0x38
   10594:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   10598:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
    strcpy((char *)seL4_GetIPCBuffer()->msg, name);
   1059c:	ebffffc5 	bl	104b8 <seL4_GetIPCBuffer>
   105a0:	e1a03000 	mov	r3, r0
   105a4:	e2833004 	add	r3, r3, #4
   105a8:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   105ac:	e1a00003 	mov	r0, r3
   105b0:	eb00463c 	bl	21ea8 <strcpy>

    seL4_Word unused0 = 0;
   105b4:	e3a03000 	mov	r3, #0
   105b8:	e50b3008 	str	r3, [fp, #-8]
    seL4_Word unused1 = 0;
   105bc:	e3a03000 	mov	r3, #0
   105c0:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word unused2 = 0;
   105c4:	e3a03000 	mov	r3, #0
   105c8:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word unused3 = 0;
   105cc:	e3a03000 	mov	r3, #0
   105d0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word unused4 = 0;
   105d4:	e3a03000 	mov	r3, #0
   105d8:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    seL4_Word unused5 = 0;
   105dc:	e3a03000 	mov	r3, #0
   105e0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4

    arm_sys_send_recv(seL4_SysDebugNameThread, tcb, &unused0, 0, &unused1, &unused2, &unused3, &unused4, &unused5, 0);
   105e4:	e24b2008 	sub	r2, fp, #8
   105e8:	e3a03000 	mov	r3, #0
   105ec:	e58d3014 	str	r3, [sp, #20]
   105f0:	e24b301c 	sub	r3, fp, #28
   105f4:	e58d3010 	str	r3, [sp, #16]
   105f8:	e24b3018 	sub	r3, fp, #24
   105fc:	e58d300c 	str	r3, [sp, #12]
   10600:	e24b3014 	sub	r3, fp, #20
   10604:	e58d3008 	str	r3, [sp, #8]
   10608:	e24b3010 	sub	r3, fp, #16
   1060c:	e58d3004 	str	r3, [sp, #4]
   10610:	e24b300c 	sub	r3, fp, #12
   10614:	e58d3000 	str	r3, [sp]
   10618:	e3a03000 	mov	r3, #0
   1061c:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   10620:	e3e0000d 	mvn	r0, #13
   10624:	ebffffac 	bl	104dc <arm_sys_send_recv>
}
   10628:	e320f000 	nop	{0}
   1062c:	e24bd004 	sub	sp, fp, #4
   10630:	e8bd8800 	pop	{fp, pc}

00010634 <sel4runtime_read_tpidr_el0>:
#if defined(__ARM_ARCH_7A__) || \
    defined(__ARM_ARCH_7R__) || \
    (defined(__ARM_ARCH) && __ARM_ARCH >= 7)

static inline sel4runtime_uintptr_t sel4runtime_read_tpidr_el0(void)
{
   10634:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10638:	e28db000 	add	fp, sp, #0
   1063c:	e24dd00c 	sub	sp, sp, #12
    sel4runtime_uintptr_t reg;
    __asm__ __volatile__("mrc p15,0,%0,c13,c0,2" : "=r"(reg));
   10640:	ee1d3f50 	mrc	15, 0, r3, cr13, cr0, {2}
   10644:	e50b3008 	str	r3, [fp, #-8]
    return reg;
   10648:	e51b3008 	ldr	r3, [fp, #-8]
}
   1064c:	e1a00003 	mov	r0, r3
   10650:	e28bd000 	add	sp, fp, #0
   10654:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10658:	e12fff1e 	bx	lr

0001065c <sel4runtime_write_tpidr_el0>:

static inline void sel4runtime_write_tpidr_el0(sel4runtime_uintptr_t reg)
{
   1065c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10660:	e28db000 	add	fp, sp, #0
   10664:	e24dd00c 	sub	sp, sp, #12
   10668:	e50b0008 	str	r0, [fp, #-8]
    __asm__ __volatile__("mcr p15,0,%0,c13,c0,2" :: "r"(reg));
   1066c:	e51b3008 	ldr	r3, [fp, #-8]
   10670:	ee0d3f50 	mcr	15, 0, r3, cr13, cr0, {2}
}
   10674:	e320f000 	nop	{0}
   10678:	e28bd000 	add	sp, fp, #0
   1067c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10680:	e12fff1e 	bx	lr

00010684 <sel4runtime_set_tls_base>:

/*
 * Set the value of the TLS base for the current thread.
 */
static inline void sel4runtime_set_tls_base(sel4runtime_uintptr_t tls_base)
{
   10684:	e92d4800 	push	{fp, lr}
   10688:	e28db004 	add	fp, sp, #4
   1068c:	e24dd008 	sub	sp, sp, #8
   10690:	e50b0008 	str	r0, [fp, #-8]
    sel4runtime_write_tpidr_el0(tls_base);
   10694:	e51b0008 	ldr	r0, [fp, #-8]
   10698:	ebffffef 	bl	1065c <sel4runtime_write_tpidr_el0>
}
   1069c:	e320f000 	nop	{0}
   106a0:	e24bd004 	sub	sp, fp, #4
   106a4:	e8bd8800 	pop	{fp, pc}

000106a8 <sel4runtime_get_tls_base>:

/*
 * Obtain the value of the TLS base for the current thread.
 */
static inline sel4runtime_uintptr_t sel4runtime_get_tls_base(void)
{
   106a8:	e92d4800 	push	{fp, lr}
   106ac:	e28db004 	add	fp, sp, #4
    return sel4runtime_read_tpidr_el0();
   106b0:	ebffffdf 	bl	10634 <sel4runtime_read_tpidr_el0>
   106b4:	e1a03000 	mov	r3, r0
}
   106b8:	e1a00003 	mov	r0, r3
   106bc:	e8bd8800 	pop	{fp, pc}

000106c0 <sel4runtime_process_name>:
static const sel4runtime_size_t tls_region_size(sel4runtime_size_t mem_size, sel4runtime_size_t align);
static void empty_tls(void);
static int is_initial_thread(void);

char const *sel4runtime_process_name(void)
{
   106c0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   106c4:	e28db000 	add	fp, sp, #0
    return env.process_name;
   106c8:	e3083000 	movw	r3, #32768	; 0x8000
   106cc:	e3403004 	movt	r3, #4
   106d0:	e5933000 	ldr	r3, [r3]
}
   106d4:	e1a00003 	mov	r0, r3
   106d8:	e28bd000 	add	sp, fp, #0
   106dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   106e0:	e12fff1e 	bx	lr

000106e4 <sel4runtime_argv>:

char const *const *sel4runtime_argv(void)
{
   106e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   106e8:	e28db000 	add	fp, sp, #0
    return env.argv;
   106ec:	e3083000 	movw	r3, #32768	; 0x8000
   106f0:	e3403004 	movt	r3, #4
   106f4:	e5933038 	ldr	r3, [r3, #56]	; 0x38
}
   106f8:	e1a00003 	mov	r0, r3
   106fc:	e28bd000 	add	sp, fp, #0
   10700:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10704:	e12fff1e 	bx	lr

00010708 <sel4runtime_argc>:

int sel4runtime_argc(void)
{
   10708:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1070c:	e28db000 	add	fp, sp, #0
    return env.argc;
   10710:	e3083000 	movw	r3, #32768	; 0x8000
   10714:	e3403004 	movt	r3, #4
   10718:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
}
   1071c:	e1a00003 	mov	r0, r3
   10720:	e28bd000 	add	sp, fp, #0
   10724:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10728:	e12fff1e 	bx	lr

0001072c <sel4runtime_envp>:

char const *const *sel4runtime_envp(void)
{
   1072c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10730:	e28db000 	add	fp, sp, #0
    return env.envp;
   10734:	e3083000 	movw	r3, #32768	; 0x8000
   10738:	e3403004 	movt	r3, #4
   1073c:	e5933044 	ldr	r3, [r3, #68]	; 0x44
}
   10740:	e1a00003 	mov	r0, r3
   10744:	e28bd000 	add	sp, fp, #0
   10748:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1074c:	e12fff1e 	bx	lr

00010750 <sel4runtime_auxv>:

auxv_t const *sel4runtime_auxv(void)
{
   10750:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10754:	e28db000 	add	fp, sp, #0
    return env.auxv;
   10758:	e3083000 	movw	r3, #32768	; 0x8000
   1075c:	e3403004 	movt	r3, #4
   10760:	e5933040 	ldr	r3, [r3, #64]	; 0x40
}
   10764:	e1a00003 	mov	r0, r3
   10768:	e28bd000 	add	sp, fp, #0
   1076c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10770:	e12fff1e 	bx	lr

00010774 <sel4runtime_bootinfo>:

seL4_BootInfo *sel4runtime_bootinfo(void)
{
   10774:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10778:	e28db000 	add	fp, sp, #0
    return env.bootinfo;
   1077c:	e3083000 	movw	r3, #32768	; 0x8000
   10780:	e3403004 	movt	r3, #4
   10784:	e5933004 	ldr	r3, [r3, #4]
}
   10788:	e1a00003 	mov	r0, r3
   1078c:	e28bd000 	add	sp, fp, #0
   10790:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10794:	e12fff1e 	bx	lr

00010798 <sel4runtime_get_tls_size>:

sel4runtime_size_t sel4runtime_get_tls_size(void)
{
   10798:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1079c:	e28db000 	add	fp, sp, #0
    return env.tls.region_size;
   107a0:	e3083000 	movw	r3, #32768	; 0x8000
   107a4:	e3403004 	movt	r3, #4
   107a8:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
}
   107ac:	e1a00003 	mov	r0, r3
   107b0:	e28bd000 	add	sp, fp, #0
   107b4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   107b8:	e12fff1e 	bx	lr

000107bc <sel4runtime_initial_tls_enabled>:

int sel4runtime_initial_tls_enabled(void)
{
   107bc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   107c0:	e28db000 	add	fp, sp, #0
    /*
     * If the TLS for the initial process has been activated, the thread
     * object in the TLS will be used rather than the static thread
     * object.
     */
    return env.initial_thread_tls_base != (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   107c4:	e3083000 	movw	r3, #32768	; 0x8000
   107c8:	e3403004 	movt	r3, #4
   107cc:	e5933008 	ldr	r3, [r3, #8]
   107d0:	e3530000 	cmp	r3, #0
   107d4:	13a03001 	movne	r3, #1
   107d8:	03a03000 	moveq	r3, #0
   107dc:	e6ef3073 	uxtb	r3, r3
}
   107e0:	e1a00003 	mov	r0, r3
   107e4:	e28bd000 	add	sp, fp, #0
   107e8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   107ec:	e12fff1e 	bx	lr

000107f0 <sel4runtime_write_tls_image>:

sel4runtime_uintptr_t sel4runtime_write_tls_image(void *tls_memory)
{
   107f0:	e92d4800 	push	{fp, lr}
   107f4:	e28db004 	add	fp, sp, #4
   107f8:	e24dd008 	sub	sp, sp, #8
   107fc:	e50b0008 	str	r0, [fp, #-8]
    if (tls_memory == SEL4RUNTIME_NULL) {
   10800:	e51b3008 	ldr	r3, [fp, #-8]
   10804:	e3530000 	cmp	r3, #0
   10808:	1a000001 	bne	10814 <sel4runtime_write_tls_image+0x24>
        return (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   1080c:	e3a03000 	mov	r3, #0
   10810:	ea000004 	b	10828 <sel4runtime_write_tls_image+0x38>
    }

    copy_tls_data(tls_memory);
   10814:	e51b0008 	ldr	r0, [fp, #-8]
   10818:	eb0001e7 	bl	10fbc <copy_tls_data>

    return tls_base_from_tls_region(tls_memory);
   1081c:	e51b0008 	ldr	r0, [fp, #-8]
   10820:	eb000214 	bl	11078 <tls_base_from_tls_region>
   10824:	e1a03000 	mov	r3, r0
}
   10828:	e1a00003 	mov	r0, r3
   1082c:	e24bd004 	sub	sp, fp, #4
   10830:	e8bd8800 	pop	{fp, pc}

00010834 <sel4runtime_move_initial_tls>:

sel4runtime_uintptr_t sel4runtime_move_initial_tls(void *tls_memory)
{
   10834:	e92d4800 	push	{fp, lr}
   10838:	e28db004 	add	fp, sp, #4
   1083c:	e24dd010 	sub	sp, sp, #16
   10840:	e50b0010 	str	r0, [fp, #-16]
    if (tls_memory == SEL4RUNTIME_NULL) {
   10844:	e51b3010 	ldr	r3, [fp, #-16]
   10848:	e3530000 	cmp	r3, #0
   1084c:	1a000001 	bne	10858 <sel4runtime_move_initial_tls+0x24>
        return (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   10850:	e3a03000 	mov	r3, #0
   10854:	ea000034 	b	1092c <sel4runtime_move_initial_tls+0xf8>
    }

    sel4runtime_uintptr_t tls_base = sel4runtime_write_tls_image(tls_memory);
   10858:	e51b0010 	ldr	r0, [fp, #-16]
   1085c:	ebffffe3 	bl	107f0 <sel4runtime_write_tls_image>
   10860:	e50b0008 	str	r0, [fp, #-8]
    if (tls_base == (sel4runtime_uintptr_t)SEL4RUNTIME_NULL) {
   10864:	e51b3008 	ldr	r3, [fp, #-8]
   10868:	e3530000 	cmp	r3, #0
   1086c:	1a000001 	bne	10878 <sel4runtime_move_initial_tls+0x44>
        return (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   10870:	e3a03000 	mov	r3, #0
   10874:	ea00002c 	b	1092c <sel4runtime_move_initial_tls+0xf8>
    }

    sel4runtime_set_tls_base(tls_base);
   10878:	e51b0008 	ldr	r0, [fp, #-8]
   1087c:	ebffff80 	bl	10684 <sel4runtime_set_tls_base>

    if (env.initial_thread_ipc_buffer != SEL4RUNTIME_NULL) {
   10880:	e3083000 	movw	r3, #32768	; 0x8000
   10884:	e3403004 	movt	r3, #4
   10888:	e5933010 	ldr	r3, [r3, #16]
   1088c:	e3530000 	cmp	r3, #0
   10890:	0a000006 	beq	108b0 <sel4runtime_move_initial_tls+0x7c>
        __sel4_ipc_buffer = env.initial_thread_ipc_buffer;
   10894:	e3083000 	movw	r3, #32768	; 0x8000
   10898:	e3403004 	movt	r3, #4
   1089c:	e5933010 	ldr	r3, [r3, #16]
   108a0:	eb000695 	bl	122fc <__aeabi_read_tp>
   108a4:	e1a02000 	mov	r2, r0
   108a8:	e59f1088 	ldr	r1, [pc, #136]	; 10938 <sel4runtime_move_initial_tls+0x104>
   108ac:	e7823001 	str	r3, [r2, r1]
    }

    env.initial_thread_tls_base = tls_base;
   108b0:	e3083000 	movw	r3, #32768	; 0x8000
   108b4:	e3403004 	movt	r3, #4
   108b8:	e51b2008 	ldr	r2, [fp, #-8]
   108bc:	e5832008 	str	r2, [r3, #8]

#if defined(CONFIG_DEBUG_BUILD)
    if (env.initial_thread_tcb && env.initial_thread_ipc_buffer && env.process_name) {
   108c0:	e3083000 	movw	r3, #32768	; 0x8000
   108c4:	e3403004 	movt	r3, #4
   108c8:	e593300c 	ldr	r3, [r3, #12]
   108cc:	e3530000 	cmp	r3, #0
   108d0:	0a000012 	beq	10920 <sel4runtime_move_initial_tls+0xec>
   108d4:	e3083000 	movw	r3, #32768	; 0x8000
   108d8:	e3403004 	movt	r3, #4
   108dc:	e5933010 	ldr	r3, [r3, #16]
   108e0:	e3530000 	cmp	r3, #0
   108e4:	0a00000d 	beq	10920 <sel4runtime_move_initial_tls+0xec>
   108e8:	e3083000 	movw	r3, #32768	; 0x8000
   108ec:	e3403004 	movt	r3, #4
   108f0:	e5933000 	ldr	r3, [r3]
   108f4:	e3530000 	cmp	r3, #0
   108f8:	0a000008 	beq	10920 <sel4runtime_move_initial_tls+0xec>
        // The thread can only be named after the TLS is initialised
        // and if an IPC buffer is present.
        seL4_DebugNameThread(env.initial_thread_tcb, env.process_name);
   108fc:	e3083000 	movw	r3, #32768	; 0x8000
   10900:	e3403004 	movt	r3, #4
   10904:	e593200c 	ldr	r2, [r3, #12]
   10908:	e3083000 	movw	r3, #32768	; 0x8000
   1090c:	e3403004 	movt	r3, #4
   10910:	e5933000 	ldr	r3, [r3]
   10914:	e1a01003 	mov	r1, r3
   10918:	e1a00002 	mov	r0, r2
   1091c:	ebffff19 	bl	10588 <seL4_DebugNameThread>
    }
#endif

    return env.initial_thread_tls_base;
   10920:	e3083000 	movw	r3, #32768	; 0x8000
   10924:	e3403004 	movt	r3, #4
   10928:	e5933008 	ldr	r3, [r3, #8]
}
   1092c:	e1a00003 	mov	r0, r3
   10930:	e24bd004 	sub	sp, fp, #4
   10934:	e8bd8800 	pop	{fp, pc}
   10938:	00000008 	andeq	r0, r0, r8

0001093c <sel4runtime_set_exit>:

sel4runtime_exit_cb *sel4runtime_set_exit(sel4runtime_exit_cb *cb)
{
   1093c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10940:	e28db000 	add	fp, sp, #0
   10944:	e24dd014 	sub	sp, sp, #20
   10948:	e50b0010 	str	r0, [fp, #-16]
    sel4runtime_exit_cb *old = env.exit_cb;
   1094c:	e3083000 	movw	r3, #32768	; 0x8000
   10950:	e3403004 	movt	r3, #4
   10954:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   10958:	e50b3008 	str	r3, [fp, #-8]
    env.exit_cb = cb;
   1095c:	e3083000 	movw	r3, #32768	; 0x8000
   10960:	e3403004 	movt	r3, #4
   10964:	e51b2010 	ldr	r2, [fp, #-16]
   10968:	e5832048 	str	r2, [r3, #72]	; 0x48
    return old;
   1096c:	e51b3008 	ldr	r3, [fp, #-8]
}
   10970:	e1a00003 	mov	r0, r3
   10974:	e28bd000 	add	sp, fp, #0
   10978:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1097c:	e12fff1e 	bx	lr

00010980 <sel4runtime_set_pre_exit>:

sel4runtime_pre_exit_cb *sel4runtime_set_pre_exit(sel4runtime_pre_exit_cb *cb)
{
   10980:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10984:	e28db000 	add	fp, sp, #0
   10988:	e24dd014 	sub	sp, sp, #20
   1098c:	e50b0010 	str	r0, [fp, #-16]
    sel4runtime_pre_exit_cb *old = env.pre_exit_cb;
   10990:	e3083000 	movw	r3, #32768	; 0x8000
   10994:	e3403004 	movt	r3, #4
   10998:	e593304c 	ldr	r3, [r3, #76]	; 0x4c
   1099c:	e50b3008 	str	r3, [fp, #-8]
    env.pre_exit_cb = cb;
   109a0:	e3083000 	movw	r3, #32768	; 0x8000
   109a4:	e3403004 	movt	r3, #4
   109a8:	e51b2010 	ldr	r2, [fp, #-16]
   109ac:	e583204c 	str	r2, [r3, #76]	; 0x4c
    return old;
   109b0:	e51b3008 	ldr	r3, [fp, #-8]
}
   109b4:	e1a00003 	mov	r0, r3
   109b8:	e28bd000 	add	sp, fp, #0
   109bc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   109c0:	e12fff1e 	bx	lr

000109c4 <sel4runtime_exit>:

void sel4runtime_exit(int code)
{
   109c4:	e92d4800 	push	{fp, lr}
   109c8:	e28db004 	add	fp, sp, #4
   109cc:	e24dd008 	sub	sp, sp, #8
   109d0:	e50b0008 	str	r0, [fp, #-8]
    if (env.pre_exit_cb != SEL4RUNTIME_NULL) {
   109d4:	e3083000 	movw	r3, #32768	; 0x8000
   109d8:	e3403004 	movt	r3, #4
   109dc:	e593304c 	ldr	r3, [r3, #76]	; 0x4c
   109e0:	e3530000 	cmp	r3, #0
   109e4:	0a000005 	beq	10a00 <sel4runtime_exit+0x3c>
        code = env.pre_exit_cb(code);
   109e8:	e3083000 	movw	r3, #32768	; 0x8000
   109ec:	e3403004 	movt	r3, #4
   109f0:	e593304c 	ldr	r3, [r3, #76]	; 0x4c
   109f4:	e51b0008 	ldr	r0, [fp, #-8]
   109f8:	e12fff33 	blx	r3
   109fc:	e50b0008 	str	r0, [fp, #-8]
    }

    __sel4runtime_run_destructors();
   10a00:	eb00029b 	bl	11474 <__sel4runtime_run_destructors>

    /* If the exit is never set this will try and call a NULL function
     * pointer which should result in a fault. This is as good a way as
     * any to exit the process if we don't know anything better about
     * the environment. */
    env.exit_cb(code);
   10a04:	e3083000 	movw	r3, #32768	; 0x8000
   10a08:	e3403004 	movt	r3, #4
   10a0c:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   10a10:	e51b0008 	ldr	r0, [fp, #-8]
   10a14:	e12fff33 	blx	r3
}
   10a18:	e320f000 	nop	{0}
   10a1c:	e24bd004 	sub	sp, fp, #4
   10a20:	e8bd8800 	pop	{fp, pc}

00010a24 <__sel4runtime_write_tls_variable>:
    sel4runtime_uintptr_t dest_tls_base,
    unsigned char *local_tls_dest,
    unsigned char *src,
    sel4runtime_size_t bytes
)
{
   10a24:	e92d4800 	push	{fp, lr}
   10a28:	e28db004 	add	fp, sp, #4
   10a2c:	e24dd028 	sub	sp, sp, #40	; 0x28
   10a30:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   10a34:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   10a38:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   10a3c:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    sel4runtime_uintptr_t local_tls_base = sel4runtime_get_tls_base();
   10a40:	ebffff18 	bl	106a8 <sel4runtime_get_tls_base>
   10a44:	e50b0008 	str	r0, [fp, #-8]
    unsigned char *local_tls = tls_from_tls_base(local_tls_base);
   10a48:	e51b0008 	ldr	r0, [fp, #-8]
   10a4c:	eb0001ab 	bl	11100 <tls_from_tls_base>
   10a50:	e50b000c 	str	r0, [fp, #-12]
    sel4runtime_size_t offset = local_tls_dest - local_tls;
   10a54:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   10a58:	e51b300c 	ldr	r3, [fp, #-12]
   10a5c:	e0423003 	sub	r3, r2, r3
   10a60:	e50b3010 	str	r3, [fp, #-16]
    sel4runtime_size_t tls_size = env.tls.memory_size;
   10a64:	e3083000 	movw	r3, #32768	; 0x8000
   10a68:	e3403004 	movt	r3, #4
   10a6c:	e5933028 	ldr	r3, [r3, #40]	; 0x28
   10a70:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

    // Write must not go past end of TLS.
    if (offset > tls_size || offset + bytes > tls_size) {
   10a74:	e51b2010 	ldr	r2, [fp, #-16]
   10a78:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   10a7c:	e1520003 	cmp	r2, r3
   10a80:	8a000005 	bhi	10a9c <__sel4runtime_write_tls_variable+0x78>
   10a84:	e51b2010 	ldr	r2, [fp, #-16]
   10a88:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   10a8c:	e0823003 	add	r3, r2, r3
   10a90:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10a94:	e1520003 	cmp	r2, r3
   10a98:	2a000001 	bcs	10aa4 <__sel4runtime_write_tls_variable+0x80>
        return -1;
   10a9c:	e3e03000 	mvn	r3, #0
   10aa0:	ea00000b 	b	10ad4 <__sel4runtime_write_tls_variable+0xb0>
    }

    unsigned char *dest_tls = tls_from_tls_base(dest_tls_base);
   10aa4:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   10aa8:	eb000194 	bl	11100 <tls_from_tls_base>
   10aac:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    unsigned char *dest_addr = dest_tls + offset;
   10ab0:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   10ab4:	e51b3010 	ldr	r3, [fp, #-16]
   10ab8:	e0823003 	add	r3, r2, r3
   10abc:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4

    __sel4runtime_memcpy(dest_addr, src, bytes);
   10ac0:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
   10ac4:	e51b1028 	ldr	r1, [fp, #-40]	; 0xffffffd8
   10ac8:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
   10acc:	eb000368 	bl	11874 <__sel4runtime_memcpy>

    return 0;
   10ad0:	e3a03000 	mov	r3, #0
}
   10ad4:	e1a00003 	mov	r0, r3
   10ad8:	e24bd004 	sub	sp, fp, #4
   10adc:	e8bd8800 	pop	{fp, pc}

00010ae0 <__sel4runtime_load_env>:
    int argc,
    char const *const *argv,
    char const *const *envp,
    auxv_t const auxv[]
)
{
   10ae0:	e92d4800 	push	{fp, lr}
   10ae4:	e28db004 	add	fp, sp, #4
   10ae8:	e24dd010 	sub	sp, sp, #16
   10aec:	e50b0008 	str	r0, [fp, #-8]
   10af0:	e50b100c 	str	r1, [fp, #-12]
   10af4:	e50b2010 	str	r2, [fp, #-16]
   10af8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    empty_tls();
   10afc:	eb0001f4 	bl	112d4 <empty_tls>
    parse_auxv(auxv);
   10b00:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   10b04:	eb00003c 	bl	10bfc <parse_auxv>
    parse_phdrs();
   10b08:	eb0000b4 	bl	10de0 <parse_phdrs>
    if (argc > 0) {
   10b0c:	e51b3008 	ldr	r3, [fp, #-8]
   10b10:	e3530000 	cmp	r3, #0
   10b14:	da000003 	ble	10b28 <__sel4runtime_load_env+0x48>
        name_process(argv[0]);
   10b18:	e51b300c 	ldr	r3, [fp, #-12]
   10b1c:	e5933000 	ldr	r3, [r3]
   10b20:	e1a00003 	mov	r0, r3
   10b24:	eb000014 	bl	10b7c <name_process>
    }
    try_init_static_tls();
   10b28:	eb000117 	bl	10f8c <try_init_static_tls>

    env.argc = argc;
   10b2c:	e3083000 	movw	r3, #32768	; 0x8000
   10b30:	e3403004 	movt	r3, #4
   10b34:	e51b2008 	ldr	r2, [fp, #-8]
   10b38:	e583203c 	str	r2, [r3, #60]	; 0x3c
    env.argv = argv;
   10b3c:	e3083000 	movw	r3, #32768	; 0x8000
   10b40:	e3403004 	movt	r3, #4
   10b44:	e51b200c 	ldr	r2, [fp, #-12]
   10b48:	e5832038 	str	r2, [r3, #56]	; 0x38
    env.auxv = auxv;
   10b4c:	e3083000 	movw	r3, #32768	; 0x8000
   10b50:	e3403004 	movt	r3, #4
   10b54:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   10b58:	e5832040 	str	r2, [r3, #64]	; 0x40
    env.envp = envp;
   10b5c:	e3083000 	movw	r3, #32768	; 0x8000
   10b60:	e3403004 	movt	r3, #4
   10b64:	e51b2010 	ldr	r2, [fp, #-16]
   10b68:	e5832044 	str	r2, [r3, #68]	; 0x44

    __sel4runtime_run_constructors();
   10b6c:	eb00020c 	bl	113a4 <__sel4runtime_run_constructors>
}
   10b70:	e320f000 	nop	{0}
   10b74:	e24bd004 	sub	sp, fp, #4
   10b78:	e8bd8800 	pop	{fp, pc}

00010b7c <name_process>:

static void name_process(char const *name)
{
   10b7c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10b80:	e28db000 	add	fp, sp, #0
   10b84:	e24dd00c 	sub	sp, sp, #12
   10b88:	e50b0008 	str	r0, [fp, #-8]
    env.process_name = name;
   10b8c:	e3083000 	movw	r3, #32768	; 0x8000
   10b90:	e3403004 	movt	r3, #4
   10b94:	e51b2008 	ldr	r2, [fp, #-8]
   10b98:	e5832000 	str	r2, [r3]

    while (name && *name != '\0') {
   10b9c:	ea00000b 	b	10bd0 <name_process+0x54>
        if (*name == '/') {
   10ba0:	e51b3008 	ldr	r3, [fp, #-8]
   10ba4:	e5d33000 	ldrb	r3, [r3]
   10ba8:	e353002f 	cmp	r3, #47	; 0x2f
   10bac:	1a000004 	bne	10bc4 <name_process+0x48>
            env.process_name = name + 1;
   10bb0:	e51b3008 	ldr	r3, [fp, #-8]
   10bb4:	e2832001 	add	r2, r3, #1
   10bb8:	e3083000 	movw	r3, #32768	; 0x8000
   10bbc:	e3403004 	movt	r3, #4
   10bc0:	e5832000 	str	r2, [r3]
        }

        name++;
   10bc4:	e51b3008 	ldr	r3, [fp, #-8]
   10bc8:	e2833001 	add	r3, r3, #1
   10bcc:	e50b3008 	str	r3, [fp, #-8]
    while (name && *name != '\0') {
   10bd0:	e51b3008 	ldr	r3, [fp, #-8]
   10bd4:	e3530000 	cmp	r3, #0
   10bd8:	0a000003 	beq	10bec <name_process+0x70>
   10bdc:	e51b3008 	ldr	r3, [fp, #-8]
   10be0:	e5d33000 	ldrb	r3, [r3]
   10be4:	e3530000 	cmp	r3, #0
   10be8:	1affffec 	bne	10ba0 <name_process+0x24>
    }
}
   10bec:	e320f000 	nop	{0}
   10bf0:	e28bd000 	add	sp, fp, #0
   10bf4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10bf8:	e12fff1e 	bx	lr

00010bfc <parse_auxv>:

static void parse_auxv(auxv_t const auxv[])
{
   10bfc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10c00:	e28db000 	add	fp, sp, #0
   10c04:	e24dd014 	sub	sp, sp, #20
   10c08:	e50b0010 	str	r0, [fp, #-16]
    for (int i = 0; auxv[i].a_type != AT_NULL; i++) {
   10c0c:	e3a03000 	mov	r3, #0
   10c10:	e50b3008 	str	r3, [fp, #-8]
   10c14:	ea000065 	b	10db0 <parse_auxv+0x1b4>
        switch (auxv[i].a_type) {
   10c18:	e51b3008 	ldr	r3, [fp, #-8]
   10c1c:	e1a03183 	lsl	r3, r3, #3
   10c20:	e51b2010 	ldr	r2, [fp, #-16]
   10c24:	e0823003 	add	r3, r2, r3
   10c28:	e5933000 	ldr	r3, [r3]
   10c2c:	e3530045 	cmp	r3, #69	; 0x45
   10c30:	0a00004e 	beq	10d70 <parse_auxv+0x174>
   10c34:	e3530045 	cmp	r3, #69	; 0x45
   10c38:	ca000056 	bgt	10d98 <parse_auxv+0x19c>
   10c3c:	e3530043 	cmp	r3, #67	; 0x43
   10c40:	0a000041 	beq	10d4c <parse_auxv+0x150>
   10c44:	e3530043 	cmp	r3, #67	; 0x43
   10c48:	ca000052 	bgt	10d98 <parse_auxv+0x19c>
   10c4c:	e3530040 	cmp	r3, #64	; 0x40
   10c50:	0a000026 	beq	10cf0 <parse_auxv+0xf4>
   10c54:	e3530040 	cmp	r3, #64	; 0x40
   10c58:	ca00004e 	bgt	10d98 <parse_auxv+0x19c>
   10c5c:	e3530005 	cmp	r3, #5
   10c60:	0a00000f 	beq	10ca4 <parse_auxv+0xa8>
   10c64:	e3530005 	cmp	r3, #5
   10c68:	ca00004a 	bgt	10d98 <parse_auxv+0x19c>
   10c6c:	e3530003 	cmp	r3, #3
   10c70:	0a000015 	beq	10ccc <parse_auxv+0xd0>
   10c74:	e3530004 	cmp	r3, #4
   10c78:	1a000046 	bne	10d98 <parse_auxv+0x19c>
        case AT_PHENT: {
            env.program_header.size = auxv[i].a_un.a_val;
   10c7c:	e51b3008 	ldr	r3, [fp, #-8]
   10c80:	e1a03183 	lsl	r3, r3, #3
   10c84:	e51b2010 	ldr	r2, [fp, #-16]
   10c88:	e0823003 	add	r3, r2, r3
   10c8c:	e5933004 	ldr	r3, [r3, #4]
   10c90:	e1a02003 	mov	r2, r3
   10c94:	e3083000 	movw	r3, #32768	; 0x8000
   10c98:	e3403004 	movt	r3, #4
   10c9c:	e5832018 	str	r2, [r3, #24]
            break;
   10ca0:	ea00003f 	b	10da4 <parse_auxv+0x1a8>
        }
        case AT_PHNUM: {
            env.program_header.count = auxv[i].a_un.a_val;
   10ca4:	e51b3008 	ldr	r3, [fp, #-8]
   10ca8:	e1a03183 	lsl	r3, r3, #3
   10cac:	e51b2010 	ldr	r2, [fp, #-16]
   10cb0:	e0823003 	add	r3, r2, r3
   10cb4:	e5933004 	ldr	r3, [r3, #4]
   10cb8:	e1a02003 	mov	r2, r3
   10cbc:	e3083000 	movw	r3, #32768	; 0x8000
   10cc0:	e3403004 	movt	r3, #4
   10cc4:	e5832014 	str	r2, [r3, #20]
            break;
   10cc8:	ea000035 	b	10da4 <parse_auxv+0x1a8>
        }
        case AT_PHDR: {
            env.program_header.headers = auxv[i].a_un.a_ptr;
   10ccc:	e51b3008 	ldr	r3, [fp, #-8]
   10cd0:	e1a03183 	lsl	r3, r3, #3
   10cd4:	e51b2010 	ldr	r2, [fp, #-16]
   10cd8:	e0823003 	add	r3, r2, r3
   10cdc:	e5932004 	ldr	r2, [r3, #4]
   10ce0:	e3083000 	movw	r3, #32768	; 0x8000
   10ce4:	e3403004 	movt	r3, #4
   10ce8:	e583201c 	str	r2, [r3, #28]
            break;
   10cec:	ea00002c 	b	10da4 <parse_auxv+0x1a8>
        }
        case AT_SEL4_BOOT_INFO: {
            seL4_BootInfo *bootinfo = auxv[i].a_un.a_ptr;
   10cf0:	e51b3008 	ldr	r3, [fp, #-8]
   10cf4:	e1a03183 	lsl	r3, r3, #3
   10cf8:	e51b2010 	ldr	r2, [fp, #-16]
   10cfc:	e0823003 	add	r3, r2, r3
   10d00:	e5933004 	ldr	r3, [r3, #4]
   10d04:	e50b300c 	str	r3, [fp, #-12]
            if (bootinfo == SEL4RUNTIME_NULL) {
   10d08:	e51b300c 	ldr	r3, [fp, #-12]
   10d0c:	e3530000 	cmp	r3, #0
   10d10:	0a000022 	beq	10da0 <parse_auxv+0x1a4>
                break;
            }
            env.bootinfo = bootinfo;
   10d14:	e3083000 	movw	r3, #32768	; 0x8000
   10d18:	e3403004 	movt	r3, #4
   10d1c:	e51b200c 	ldr	r2, [fp, #-12]
   10d20:	e5832004 	str	r2, [r3, #4]
            env.initial_thread_ipc_buffer = bootinfo->ipcBuffer;
   10d24:	e51b300c 	ldr	r3, [fp, #-12]
   10d28:	e5932010 	ldr	r2, [r3, #16]
   10d2c:	e3083000 	movw	r3, #32768	; 0x8000
   10d30:	e3403004 	movt	r3, #4
   10d34:	e5832010 	str	r2, [r3, #16]
            env.initial_thread_tcb = seL4_CapInitThreadTCB;
   10d38:	e3083000 	movw	r3, #32768	; 0x8000
   10d3c:	e3403004 	movt	r3, #4
   10d40:	e3a02001 	mov	r2, #1
   10d44:	e583200c 	str	r2, [r3, #12]
            break;
   10d48:	ea000015 	b	10da4 <parse_auxv+0x1a8>
        }
        case AT_SEL4_IPC_BUFFER_PTR: {
            env.initial_thread_ipc_buffer = auxv[i].a_un.a_ptr;
   10d4c:	e51b3008 	ldr	r3, [fp, #-8]
   10d50:	e1a03183 	lsl	r3, r3, #3
   10d54:	e51b2010 	ldr	r2, [fp, #-16]
   10d58:	e0823003 	add	r3, r2, r3
   10d5c:	e5932004 	ldr	r2, [r3, #4]
   10d60:	e3083000 	movw	r3, #32768	; 0x8000
   10d64:	e3403004 	movt	r3, #4
   10d68:	e5832010 	str	r2, [r3, #16]
            break;
   10d6c:	ea00000c 	b	10da4 <parse_auxv+0x1a8>
        }
        case AT_SEL4_TCB: {
            env.initial_thread_tcb = auxv[i].a_un.a_val;
   10d70:	e51b3008 	ldr	r3, [fp, #-8]
   10d74:	e1a03183 	lsl	r3, r3, #3
   10d78:	e51b2010 	ldr	r2, [fp, #-16]
   10d7c:	e0823003 	add	r3, r2, r3
   10d80:	e5933004 	ldr	r3, [r3, #4]
   10d84:	e1a02003 	mov	r2, r3
   10d88:	e3083000 	movw	r3, #32768	; 0x8000
   10d8c:	e3403004 	movt	r3, #4
   10d90:	e583200c 	str	r2, [r3, #12]
            break;
   10d94:	ea000002 	b	10da4 <parse_auxv+0x1a8>
        }
        default:
            break;
   10d98:	e320f000 	nop	{0}
   10d9c:	ea000000 	b	10da4 <parse_auxv+0x1a8>
                break;
   10da0:	e320f000 	nop	{0}
    for (int i = 0; auxv[i].a_type != AT_NULL; i++) {
   10da4:	e51b3008 	ldr	r3, [fp, #-8]
   10da8:	e2833001 	add	r3, r3, #1
   10dac:	e50b3008 	str	r3, [fp, #-8]
   10db0:	e51b3008 	ldr	r3, [fp, #-8]
   10db4:	e1a03183 	lsl	r3, r3, #3
   10db8:	e51b2010 	ldr	r2, [fp, #-16]
   10dbc:	e0823003 	add	r3, r2, r3
   10dc0:	e5933000 	ldr	r3, [r3]
   10dc4:	e3530000 	cmp	r3, #0
   10dc8:	1affff92 	bne	10c18 <parse_auxv+0x1c>
        }
    }
}
   10dcc:	e320f000 	nop	{0}
   10dd0:	e320f000 	nop	{0}
   10dd4:	e28bd000 	add	sp, fp, #0
   10dd8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10ddc:	e12fff1e 	bx	lr

00010de0 <parse_phdrs>:

static void parse_phdrs(void)
{
   10de0:	e92d4800 	push	{fp, lr}
   10de4:	e28db004 	add	fp, sp, #4
   10de8:	e24dd008 	sub	sp, sp, #8
    for (sel4runtime_size_t h = 0; h < env.program_header.count; h++) {
   10dec:	e3a03000 	mov	r3, #0
   10df0:	e50b3008 	str	r3, [fp, #-8]
   10df4:	ea000011 	b	10e40 <parse_phdrs+0x60>
        Elf_Phdr *header = &env.program_header.headers[h];
   10df8:	e3083000 	movw	r3, #32768	; 0x8000
   10dfc:	e3403004 	movt	r3, #4
   10e00:	e593201c 	ldr	r2, [r3, #28]
   10e04:	e51b3008 	ldr	r3, [fp, #-8]
   10e08:	e1a03283 	lsl	r3, r3, #5
   10e0c:	e0823003 	add	r3, r2, r3
   10e10:	e50b300c 	str	r3, [fp, #-12]
        switch (header->p_type) {
   10e14:	e51b300c 	ldr	r3, [fp, #-12]
   10e18:	e5933000 	ldr	r3, [r3]
   10e1c:	e3530007 	cmp	r3, #7
   10e20:	1a000002 	bne	10e30 <parse_phdrs+0x50>
        case PT_TLS:
            load_tls_data(header);
   10e24:	e51b000c 	ldr	r0, [fp, #-12]
   10e28:	eb00000e 	bl	10e68 <load_tls_data>
            break;
   10e2c:	ea000000 	b	10e34 <parse_phdrs+0x54>
        default:
            break;
   10e30:	e320f000 	nop	{0}
    for (sel4runtime_size_t h = 0; h < env.program_header.count; h++) {
   10e34:	e51b3008 	ldr	r3, [fp, #-8]
   10e38:	e2833001 	add	r3, r3, #1
   10e3c:	e50b3008 	str	r3, [fp, #-8]
   10e40:	e3083000 	movw	r3, #32768	; 0x8000
   10e44:	e3403004 	movt	r3, #4
   10e48:	e5933014 	ldr	r3, [r3, #20]
   10e4c:	e51b2008 	ldr	r2, [fp, #-8]
   10e50:	e1520003 	cmp	r2, r3
   10e54:	3affffe7 	bcc	10df8 <parse_phdrs+0x18>
        }
    }
}
   10e58:	e320f000 	nop	{0}
   10e5c:	e320f000 	nop	{0}
   10e60:	e24bd004 	sub	sp, fp, #4
   10e64:	e8bd8800 	pop	{fp, pc}

00010e68 <load_tls_data>:

static void load_tls_data(Elf_Phdr *header)
{
   10e68:	e92d4800 	push	{fp, lr}
   10e6c:	e28db004 	add	fp, sp, #4
   10e70:	e24dd010 	sub	sp, sp, #16
   10e74:	e50b0010 	str	r0, [fp, #-16]
    env.tls.image = (void *) header->p_vaddr;
   10e78:	e51b3010 	ldr	r3, [fp, #-16]
   10e7c:	e5933008 	ldr	r3, [r3, #8]
   10e80:	e1a02003 	mov	r2, r3
   10e84:	e3083000 	movw	r3, #32768	; 0x8000
   10e88:	e3403004 	movt	r3, #4
   10e8c:	e5832020 	str	r2, [r3, #32]
    if (header->p_align > MIN_ALIGN_BYTES) {
   10e90:	e51b3010 	ldr	r3, [fp, #-16]
   10e94:	e593301c 	ldr	r3, [r3, #28]
   10e98:	e3530010 	cmp	r3, #16
   10e9c:	9a000005 	bls	10eb8 <load_tls_data+0x50>
        env.tls.align = header->p_align;
   10ea0:	e51b3010 	ldr	r3, [fp, #-16]
   10ea4:	e593201c 	ldr	r2, [r3, #28]
   10ea8:	e3083000 	movw	r3, #32768	; 0x8000
   10eac:	e3403004 	movt	r3, #4
   10eb0:	e5832030 	str	r2, [r3, #48]	; 0x30
   10eb4:	ea000003 	b	10ec8 <load_tls_data+0x60>
    } else {
        env.tls.align = MIN_ALIGN_BYTES;
   10eb8:	e3083000 	movw	r3, #32768	; 0x8000
   10ebc:	e3403004 	movt	r3, #4
   10ec0:	e3a02010 	mov	r2, #16
   10ec4:	e5832030 	str	r2, [r3, #48]	; 0x30
    }
    env.tls.image_size = header->p_filesz;
   10ec8:	e51b3010 	ldr	r3, [fp, #-16]
   10ecc:	e5932010 	ldr	r2, [r3, #16]
   10ed0:	e3083000 	movw	r3, #32768	; 0x8000
   10ed4:	e3403004 	movt	r3, #4
   10ed8:	e5832024 	str	r2, [r3, #36]	; 0x24
    env.tls.memory_size = ROUND_UP(header->p_memsz, header->p_align);
   10edc:	e51b3010 	ldr	r3, [fp, #-16]
   10ee0:	e5933014 	ldr	r3, [r3, #20]
   10ee4:	e50b3008 	str	r3, [fp, #-8]
   10ee8:	e51b3010 	ldr	r3, [fp, #-16]
   10eec:	e593301c 	ldr	r3, [r3, #28]
   10ef0:	e50b300c 	str	r3, [fp, #-12]
   10ef4:	e51b3008 	ldr	r3, [fp, #-8]
   10ef8:	e51b100c 	ldr	r1, [fp, #-12]
   10efc:	e1a00003 	mov	r0, r3
   10f00:	eb005564 	bl	26498 <__aeabi_uidivmod>
   10f04:	e1a03001 	mov	r3, r1
   10f08:	e3530000 	cmp	r3, #0
   10f0c:	0a000008 	beq	10f34 <load_tls_data+0xcc>
   10f10:	e51b3008 	ldr	r3, [fp, #-8]
   10f14:	e51b100c 	ldr	r1, [fp, #-12]
   10f18:	e1a00003 	mov	r0, r3
   10f1c:	eb00555d 	bl	26498 <__aeabi_uidivmod>
   10f20:	e1a03001 	mov	r3, r1
   10f24:	e1a02003 	mov	r2, r3
   10f28:	e51b300c 	ldr	r3, [fp, #-12]
   10f2c:	e0433002 	sub	r3, r3, r2
   10f30:	ea000000 	b	10f38 <load_tls_data+0xd0>
   10f34:	e3a03000 	mov	r3, #0
   10f38:	e51b2008 	ldr	r2, [fp, #-8]
   10f3c:	e0832002 	add	r2, r3, r2
   10f40:	e3083000 	movw	r3, #32768	; 0x8000
   10f44:	e3403004 	movt	r3, #4
   10f48:	e5832028 	str	r2, [r3, #40]	; 0x28
    env.tls.region_size = tls_region_size(
   10f4c:	e3083000 	movw	r3, #32768	; 0x8000
   10f50:	e3403004 	movt	r3, #4
   10f54:	e5932028 	ldr	r2, [r3, #40]	; 0x28
   10f58:	e3083000 	movw	r3, #32768	; 0x8000
   10f5c:	e3403004 	movt	r3, #4
   10f60:	e5933030 	ldr	r3, [r3, #48]	; 0x30
   10f64:	e1a01003 	mov	r1, r3
   10f68:	e1a00002 	mov	r0, r2
   10f6c:	eb000087 	bl	11190 <tls_region_size>
   10f70:	e1a02000 	mov	r2, r0
   10f74:	e3083000 	movw	r3, #32768	; 0x8000
   10f78:	e3403004 	movt	r3, #4
   10f7c:	e583202c 	str	r2, [r3, #44]	; 0x2c
                              env.tls.memory_size,
                              env.tls.align
                          );
}
   10f80:	e320f000 	nop	{0}
   10f84:	e24bd004 	sub	sp, fp, #4
   10f88:	e8bd8800 	pop	{fp, pc}

00010f8c <try_init_static_tls>:

static void try_init_static_tls(void)
{
   10f8c:	e92d4800 	push	{fp, lr}
   10f90:	e28db004 	add	fp, sp, #4
    if (env.tls.region_size <= sizeof(static_tls)) {
   10f94:	e3083000 	movw	r3, #32768	; 0x8000
   10f98:	e3403004 	movt	r3, #4
   10f9c:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   10fa0:	e3530901 	cmp	r3, #16384	; 0x4000
   10fa4:	8a000002 	bhi	10fb4 <try_init_static_tls+0x28>
        sel4runtime_move_initial_tls(static_tls);
   10fa8:	e3040000 	movw	r0, #16384	; 0x4000
   10fac:	e3400004 	movt	r0, #4
   10fb0:	ebfffe1f 	bl	10834 <sel4runtime_move_initial_tls>
    }
}
   10fb4:	e320f000 	nop	{0}
   10fb8:	e8bd8800 	pop	{fp, pc}

00010fbc <copy_tls_data>:

static void copy_tls_data(unsigned char *tls_region)
{
   10fbc:	e92d4800 	push	{fp, lr}
   10fc0:	e28db004 	add	fp, sp, #4
   10fc4:	e24dd018 	sub	sp, sp, #24
   10fc8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    unsigned char *tls = tls_from_tls_region(tls_region);
   10fcc:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   10fd0:	eb000058 	bl	11138 <tls_from_tls_region>
   10fd4:	e50b0008 	str	r0, [fp, #-8]
    __sel4runtime_memcpy(tls, env.tls.image, env.tls.image_size);
   10fd8:	e3083000 	movw	r3, #32768	; 0x8000
   10fdc:	e3403004 	movt	r3, #4
   10fe0:	e5931020 	ldr	r1, [r3, #32]
   10fe4:	e3083000 	movw	r3, #32768	; 0x8000
   10fe8:	e3403004 	movt	r3, #4
   10fec:	e5933024 	ldr	r3, [r3, #36]	; 0x24
   10ff0:	e1a02003 	mov	r2, r3
   10ff4:	e51b0008 	ldr	r0, [fp, #-8]
   10ff8:	eb00021d 	bl	11874 <__sel4runtime_memcpy>
    unsigned char *tbss = &tls[env.tls.image_size];
   10ffc:	e3083000 	movw	r3, #32768	; 0x8000
   11000:	e3403004 	movt	r3, #4
   11004:	e5933024 	ldr	r3, [r3, #36]	; 0x24
   11008:	e51b2008 	ldr	r2, [fp, #-8]
   1100c:	e0823003 	add	r3, r2, r3
   11010:	e50b300c 	str	r3, [fp, #-12]
    __sel4runtime_memset(tbss, 0, env.tls.memory_size - env.tls.image_size);
   11014:	e3083000 	movw	r3, #32768	; 0x8000
   11018:	e3403004 	movt	r3, #4
   1101c:	e5932028 	ldr	r2, [r3, #40]	; 0x28
   11020:	e3083000 	movw	r3, #32768	; 0x8000
   11024:	e3403004 	movt	r3, #4
   11028:	e5933024 	ldr	r3, [r3, #36]	; 0x24
   1102c:	e0423003 	sub	r3, r2, r3
   11030:	e1a02003 	mov	r2, r3
   11034:	e3a01000 	mov	r1, #0
   11038:	e51b000c 	ldr	r0, [fp, #-12]
   1103c:	eb000129 	bl	114e8 <__sel4runtime_memset>

    thread_lookup_t *lookup = thread_lookup_from_tls_region(tls_region);
   11040:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   11044:	eb000048 	bl	1116c <thread_lookup_from_tls_region>
   11048:	e50b0010 	str	r0, [fp, #-16]
    if (lookup != SEL4RUNTIME_NULL) {
   1104c:	e51b3010 	ldr	r3, [fp, #-16]
   11050:	e3530000 	cmp	r3, #0
   11054:	0a000004 	beq	1106c <copy_tls_data+0xb0>
        lookup->tls_base = tls_base_from_tls_region(tls_region);
   11058:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1105c:	eb000005 	bl	11078 <tls_base_from_tls_region>
   11060:	e1a02000 	mov	r2, r0
   11064:	e51b3010 	ldr	r3, [fp, #-16]
   11068:	e5832000 	str	r2, [r3]
    }
}
   1106c:	e320f000 	nop	{0}
   11070:	e24bd004 	sub	sp, fp, #4
   11074:	e8bd8800 	pop	{fp, pc}

00011078 <tls_base_from_tls_region>:

static sel4runtime_uintptr_t tls_base_from_tls_region(unsigned char *tls_region)
{
   11078:	e92d4800 	push	{fp, lr}
   1107c:	e28db004 	add	fp, sp, #4
   11080:	e24dd018 	sub	sp, sp, #24
   11084:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    sel4runtime_uintptr_t tls_base = (sel4runtime_uintptr_t)tls_region;
   11088:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1108c:	e50b3008 	str	r3, [fp, #-8]
#if !defined(TLS_ABOVE_TP)
    tls_base += env.tls.memory_size;
#endif
    return ROUND_UP(tls_base, env.tls.align);
   11090:	e51b3008 	ldr	r3, [fp, #-8]
   11094:	e50b300c 	str	r3, [fp, #-12]
   11098:	e3083000 	movw	r3, #32768	; 0x8000
   1109c:	e3403004 	movt	r3, #4
   110a0:	e5933030 	ldr	r3, [r3, #48]	; 0x30
   110a4:	e50b3010 	str	r3, [fp, #-16]
   110a8:	e51b300c 	ldr	r3, [fp, #-12]
   110ac:	e51b1010 	ldr	r1, [fp, #-16]
   110b0:	e1a00003 	mov	r0, r3
   110b4:	eb0054f7 	bl	26498 <__aeabi_uidivmod>
   110b8:	e1a03001 	mov	r3, r1
   110bc:	e3530000 	cmp	r3, #0
   110c0:	0a000008 	beq	110e8 <tls_base_from_tls_region+0x70>
   110c4:	e51b300c 	ldr	r3, [fp, #-12]
   110c8:	e51b1010 	ldr	r1, [fp, #-16]
   110cc:	e1a00003 	mov	r0, r3
   110d0:	eb0054f0 	bl	26498 <__aeabi_uidivmod>
   110d4:	e1a03001 	mov	r3, r1
   110d8:	e1a02003 	mov	r2, r3
   110dc:	e51b3010 	ldr	r3, [fp, #-16]
   110e0:	e0433002 	sub	r3, r3, r2
   110e4:	ea000000 	b	110ec <tls_base_from_tls_region+0x74>
   110e8:	e3a03000 	mov	r3, #0
   110ec:	e51b200c 	ldr	r2, [fp, #-12]
   110f0:	e0833002 	add	r3, r3, r2
}
   110f4:	e1a00003 	mov	r0, r3
   110f8:	e24bd004 	sub	sp, fp, #4
   110fc:	e8bd8800 	pop	{fp, pc}

00011100 <tls_from_tls_base>:

static unsigned char *tls_from_tls_base(sel4runtime_uintptr_t tls_base)
{
   11100:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   11104:	e28db000 	add	fp, sp, #0
   11108:	e24dd014 	sub	sp, sp, #20
   1110c:	e50b0010 	str	r0, [fp, #-16]
    sel4runtime_uintptr_t tls_addr = tls_base;
   11110:	e51b3010 	ldr	r3, [fp, #-16]
   11114:	e50b3008 	str	r3, [fp, #-8]
#if !defined(TLS_ABOVE_TP)
    tls_addr -= env.tls.memory_size;
#endif
#if defined(GAP_ABOVE_TP)
    tls_addr +=  GAP_ABOVE_TP;
   11118:	e51b3008 	ldr	r3, [fp, #-8]
   1111c:	e2833008 	add	r3, r3, #8
   11120:	e50b3008 	str	r3, [fp, #-8]
#endif
    return (unsigned char *)tls_addr;
   11124:	e51b3008 	ldr	r3, [fp, #-8]
}
   11128:	e1a00003 	mov	r0, r3
   1112c:	e28bd000 	add	sp, fp, #0
   11130:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   11134:	e12fff1e 	bx	lr

00011138 <tls_from_tls_region>:

static unsigned char *tls_from_tls_region(unsigned char *tls_region)
{
   11138:	e92d4800 	push	{fp, lr}
   1113c:	e28db004 	add	fp, sp, #4
   11140:	e24dd008 	sub	sp, sp, #8
   11144:	e50b0008 	str	r0, [fp, #-8]
    return tls_from_tls_base(tls_base_from_tls_region(tls_region));
   11148:	e51b0008 	ldr	r0, [fp, #-8]
   1114c:	ebffffc9 	bl	11078 <tls_base_from_tls_region>
   11150:	e1a03000 	mov	r3, r0
   11154:	e1a00003 	mov	r0, r3
   11158:	ebffffe8 	bl	11100 <tls_from_tls_base>
   1115c:	e1a03000 	mov	r3, r0
}
   11160:	e1a00003 	mov	r0, r3
   11164:	e24bd004 	sub	sp, fp, #4
   11168:	e8bd8800 	pop	{fp, pc}

0001116c <thread_lookup_from_tls_region>:

static thread_lookup_t *thread_lookup_from_tls_region(
    unsigned char *tls_region
)
{
   1116c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   11170:	e28db000 	add	fp, sp, #0
   11174:	e24dd00c 	sub	sp, sp, #12
   11178:	e50b0008 	str	r0, [fp, #-8]
#if !defined(TLS_ABOVE_TP)
    return (thread_lookup_t *)tls_base_from_tls_region(tls_region);
#else
    return SEL4RUNTIME_NULL;
   1117c:	e3a03000 	mov	r3, #0
#endif
}
   11180:	e1a00003 	mov	r0, r3
   11184:	e28bd000 	add	sp, fp, #0
   11188:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1118c:	e12fff1e 	bx	lr

00011190 <tls_region_size>:

static const sel4runtime_size_t tls_region_size(sel4runtime_size_t mem_size, sel4runtime_size_t align)
{
   11190:	e92d4810 	push	{r4, fp, lr}
   11194:	e28db008 	add	fp, sp, #8
   11198:	e24dd024 	sub	sp, sp, #36	; 0x24
   1119c:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   111a0:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
    return align
           + ROUND_UP(sizeof(thread_lookup_t), align)
   111a4:	e3a03004 	mov	r3, #4
   111a8:	e50b3010 	str	r3, [fp, #-16]
   111ac:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   111b0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
   111b4:	e51b3010 	ldr	r3, [fp, #-16]
   111b8:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   111bc:	e1a00003 	mov	r0, r3
   111c0:	eb0054b4 	bl	26498 <__aeabi_uidivmod>
   111c4:	e1a03001 	mov	r3, r1
   111c8:	e3530000 	cmp	r3, #0
   111cc:	0a000008 	beq	111f4 <tls_region_size+0x64>
   111d0:	e51b3010 	ldr	r3, [fp, #-16]
   111d4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   111d8:	e1a00003 	mov	r0, r3
   111dc:	eb0054ad 	bl	26498 <__aeabi_uidivmod>
   111e0:	e1a03001 	mov	r3, r1
   111e4:	e1a02003 	mov	r2, r3
   111e8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   111ec:	e0433002 	sub	r3, r3, r2
   111f0:	ea000000 	b	111f8 <tls_region_size+0x68>
   111f4:	e3a03000 	mov	r3, #0
   111f8:	e51b2010 	ldr	r2, [fp, #-16]
   111fc:	e0832002 	add	r2, r3, r2
   11200:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   11204:	e0824003 	add	r4, r2, r3
#if defined(GAP_ABOVE_TP)
           + ROUND_UP(GAP_ABOVE_TP, align)
   11208:	e3a03008 	mov	r3, #8
   1120c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
   11210:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   11214:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
   11218:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1121c:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   11220:	e1a00003 	mov	r0, r3
   11224:	eb00549b 	bl	26498 <__aeabi_uidivmod>
   11228:	e1a03001 	mov	r3, r1
   1122c:	e3530000 	cmp	r3, #0
   11230:	0a000008 	beq	11258 <tls_region_size+0xc8>
   11234:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11238:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1123c:	e1a00003 	mov	r0, r3
   11240:	eb005494 	bl	26498 <__aeabi_uidivmod>
   11244:	e1a03001 	mov	r3, r1
   11248:	e1a02003 	mov	r2, r3
   1124c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   11250:	e0433002 	sub	r3, r3, r2
   11254:	ea000000 	b	1125c <tls_region_size+0xcc>
   11258:	e3a03000 	mov	r3, #0
   1125c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11260:	e0833002 	add	r3, r3, r2
   11264:	e0834004 	add	r4, r3, r4
#endif
           + ROUND_UP(mem_size, align);
   11268:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1126c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   11270:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   11274:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
   11278:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1127c:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   11280:	e1a00003 	mov	r0, r3
   11284:	eb005483 	bl	26498 <__aeabi_uidivmod>
   11288:	e1a03001 	mov	r3, r1
   1128c:	e3530000 	cmp	r3, #0
   11290:	0a000008 	beq	112b8 <tls_region_size+0x128>
   11294:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11298:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   1129c:	e1a00003 	mov	r0, r3
   112a0:	eb00547c 	bl	26498 <__aeabi_uidivmod>
   112a4:	e1a03001 	mov	r3, r1
   112a8:	e1a02003 	mov	r2, r3
   112ac:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   112b0:	e0433002 	sub	r3, r3, r2
   112b4:	ea000000 	b	112bc <tls_region_size+0x12c>
   112b8:	e3a03000 	mov	r3, #0
   112bc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   112c0:	e0833002 	add	r3, r3, r2
   112c4:	e0833004 	add	r3, r3, r4
}
   112c8:	e1a00003 	mov	r0, r3
   112cc:	e24bd008 	sub	sp, fp, #8
   112d0:	e8bd8810 	pop	{r4, fp, pc}

000112d4 <empty_tls>:

static void empty_tls(void)
{
   112d4:	e92d4800 	push	{fp, lr}
   112d8:	e28db004 	add	fp, sp, #4
    env.tls.image = SEL4RUNTIME_NULL;
   112dc:	e3083000 	movw	r3, #32768	; 0x8000
   112e0:	e3403004 	movt	r3, #4
   112e4:	e3a02000 	mov	r2, #0
   112e8:	e5832020 	str	r2, [r3, #32]
    env.tls.align = MIN_ALIGN_BYTES;
   112ec:	e3083000 	movw	r3, #32768	; 0x8000
   112f0:	e3403004 	movt	r3, #4
   112f4:	e3a02010 	mov	r2, #16
   112f8:	e5832030 	str	r2, [r3, #48]	; 0x30
    env.tls.image_size = 0;
   112fc:	e3083000 	movw	r3, #32768	; 0x8000
   11300:	e3403004 	movt	r3, #4
   11304:	e3a02000 	mov	r2, #0
   11308:	e5832024 	str	r2, [r3, #36]	; 0x24
    env.tls.memory_size = 0;
   1130c:	e3083000 	movw	r3, #32768	; 0x8000
   11310:	e3403004 	movt	r3, #4
   11314:	e3a02000 	mov	r2, #0
   11318:	e5832028 	str	r2, [r3, #40]	; 0x28
    env.tls.region_size = tls_region_size(
   1131c:	e3083000 	movw	r3, #32768	; 0x8000
   11320:	e3403004 	movt	r3, #4
   11324:	e5932028 	ldr	r2, [r3, #40]	; 0x28
   11328:	e3083000 	movw	r3, #32768	; 0x8000
   1132c:	e3403004 	movt	r3, #4
   11330:	e5933030 	ldr	r3, [r3, #48]	; 0x30
   11334:	e1a01003 	mov	r1, r3
   11338:	e1a00002 	mov	r0, r2
   1133c:	ebffff93 	bl	11190 <tls_region_size>
   11340:	e1a02000 	mov	r2, r0
   11344:	e3083000 	movw	r3, #32768	; 0x8000
   11348:	e3403004 	movt	r3, #4
   1134c:	e583202c 	str	r2, [r3, #44]	; 0x2c
                              env.tls.memory_size,
                              env.tls.align
                          );
}
   11350:	e320f000 	nop	{0}
   11354:	e8bd8800 	pop	{fp, pc}

00011358 <is_initial_thread>:
 *
 * This will optimistically assume that the current thread is the
 * initial thread of no thread ever had TLS configured.
 */
static int is_initial_thread(void)
{
   11358:	e92d4800 	push	{fp, lr}
   1135c:	e28db004 	add	fp, sp, #4
    return env.initial_thread_tls_base == (sel4runtime_uintptr_t)SEL4RUNTIME_NULL
   11360:	e3083000 	movw	r3, #32768	; 0x8000
   11364:	e3403004 	movt	r3, #4
   11368:	e5933008 	ldr	r3, [r3, #8]
           || sel4runtime_get_tls_base() == env.initial_thread_tls_base;
   1136c:	e3530000 	cmp	r3, #0
   11370:	0a000006 	beq	11390 <is_initial_thread+0x38>
   11374:	ebfffccb 	bl	106a8 <sel4runtime_get_tls_base>
   11378:	e1a02000 	mov	r2, r0
   1137c:	e3083000 	movw	r3, #32768	; 0x8000
   11380:	e3403004 	movt	r3, #4
   11384:	e5933008 	ldr	r3, [r3, #8]
   11388:	e1520003 	cmp	r2, r3
   1138c:	1a000001 	bne	11398 <is_initial_thread+0x40>
   11390:	e3a03001 	mov	r3, #1
   11394:	ea000000 	b	1139c <is_initial_thread+0x44>
   11398:	e3a03000 	mov	r3, #0
}
   1139c:	e1a00003 	mov	r0, r3
   113a0:	e8bd8800 	pop	{fp, pc}

000113a4 <__sel4runtime_run_constructors>:
void _fini(void);
extern routine __fini_array_start[];
extern routine __fini_array_end[];

void __sel4runtime_run_constructors(void)
{
   113a4:	e92d4800 	push	{fp, lr}
   113a8:	e28db004 	add	fp, sp, #4
   113ac:	e24dd010 	sub	sp, sp, #16
    int preinit_array_len
        = &__preinit_array_end[0]
          - &__preinit_array_start[0];
   113b0:	e30b2fe8 	movw	r2, #49128	; 0xbfe8
   113b4:	e3402002 	movt	r2, #2
   113b8:	e30b3fe8 	movw	r3, #49128	; 0xbfe8
   113bc:	e3403002 	movt	r3, #2
   113c0:	e0423003 	sub	r3, r2, r3
    int preinit_array_len
   113c4:	e1a03143 	asr	r3, r3, #2
   113c8:	e50b3010 	str	r3, [fp, #-16]
    for (int f = 0; f < preinit_array_len; f++) {
   113cc:	e3a03000 	mov	r3, #0
   113d0:	e50b3008 	str	r3, [fp, #-8]
   113d4:	ea000007 	b	113f8 <__sel4runtime_run_constructors+0x54>
        __preinit_array_start[f]();
   113d8:	e30b3fe8 	movw	r3, #49128	; 0xbfe8
   113dc:	e3403002 	movt	r3, #2
   113e0:	e51b2008 	ldr	r2, [fp, #-8]
   113e4:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   113e8:	e12fff33 	blx	r3
    for (int f = 0; f < preinit_array_len; f++) {
   113ec:	e51b3008 	ldr	r3, [fp, #-8]
   113f0:	e2833001 	add	r3, r3, #1
   113f4:	e50b3008 	str	r3, [fp, #-8]
   113f8:	e51b2008 	ldr	r2, [fp, #-8]
   113fc:	e51b3010 	ldr	r3, [fp, #-16]
   11400:	e1520003 	cmp	r2, r3
   11404:	bafffff3 	blt	113d8 <__sel4runtime_run_constructors+0x34>
    }
    _init();
   11408:	ebfffb42 	bl	10118 <_init>
    int init_array_len
        = &__init_array_end[0]
          - &__init_array_start[0];
   1140c:	e30b2ffc 	movw	r2, #49148	; 0xbffc
   11410:	e3402002 	movt	r2, #2
   11414:	e30b3fe8 	movw	r3, #49128	; 0xbfe8
   11418:	e3403002 	movt	r3, #2
   1141c:	e0423003 	sub	r3, r2, r3
    int init_array_len
   11420:	e1a03143 	asr	r3, r3, #2
   11424:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    for (int f = 0; f < init_array_len; f++) {
   11428:	e3a03000 	mov	r3, #0
   1142c:	e50b300c 	str	r3, [fp, #-12]
   11430:	ea000007 	b	11454 <__sel4runtime_run_constructors+0xb0>
        __init_array_start[f]();
   11434:	e30b3fe8 	movw	r3, #49128	; 0xbfe8
   11438:	e3403002 	movt	r3, #2
   1143c:	e51b200c 	ldr	r2, [fp, #-12]
   11440:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   11444:	e12fff33 	blx	r3
    for (int f = 0; f < init_array_len; f++) {
   11448:	e51b300c 	ldr	r3, [fp, #-12]
   1144c:	e2833001 	add	r3, r3, #1
   11450:	e50b300c 	str	r3, [fp, #-12]
   11454:	e51b200c 	ldr	r2, [fp, #-12]
   11458:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1145c:	e1520003 	cmp	r2, r3
   11460:	bafffff3 	blt	11434 <__sel4runtime_run_constructors+0x90>
    }
}
   11464:	e320f000 	nop	{0}
   11468:	e320f000 	nop	{0}
   1146c:	e24bd004 	sub	sp, fp, #4
   11470:	e8bd8800 	pop	{fp, pc}

00011474 <__sel4runtime_run_destructors>:

void __sel4runtime_run_destructors(void)
{
   11474:	e92d4800 	push	{fp, lr}
   11478:	e28db004 	add	fp, sp, #4
   1147c:	e24dd008 	sub	sp, sp, #8
    int fini_array_len
        = &__fini_array_end[0]
          - &__fini_array_start[0];
   11480:	e30c2000 	movw	r2, #49152	; 0xc000
   11484:	e3402002 	movt	r2, #2
   11488:	e30b3ffc 	movw	r3, #49148	; 0xbffc
   1148c:	e3403002 	movt	r3, #2
   11490:	e0423003 	sub	r3, r2, r3
    int fini_array_len
   11494:	e1a03143 	asr	r3, r3, #2
   11498:	e50b300c 	str	r3, [fp, #-12]
    for (int f = fini_array_len - 1; f >= 0; f--) {
   1149c:	e51b300c 	ldr	r3, [fp, #-12]
   114a0:	e2433001 	sub	r3, r3, #1
   114a4:	e50b3008 	str	r3, [fp, #-8]
   114a8:	ea000007 	b	114cc <__sel4runtime_run_destructors+0x58>
        __fini_array_start[f]();
   114ac:	e30b3ffc 	movw	r3, #49148	; 0xbffc
   114b0:	e3403002 	movt	r3, #2
   114b4:	e51b2008 	ldr	r2, [fp, #-8]
   114b8:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   114bc:	e12fff33 	blx	r3
    for (int f = fini_array_len - 1; f >= 0; f--) {
   114c0:	e51b3008 	ldr	r3, [fp, #-8]
   114c4:	e2433001 	sub	r3, r3, #1
   114c8:	e50b3008 	str	r3, [fp, #-8]
   114cc:	e51b3008 	ldr	r3, [fp, #-8]
   114d0:	e3530000 	cmp	r3, #0
   114d4:	aafffff4 	bge	114ac <__sel4runtime_run_destructors+0x38>
    }
    _fini();
   114d8:	eb00585a 	bl	27648 <_fini>
}
   114dc:	e320f000 	nop	{0}
   114e0:	e24bd004 	sub	sp, fp, #4
   114e4:	e8bd8800 	pop	{fp, pc}

000114e8 <__sel4runtime_memset>:
 */

#include "util.h"

void *__sel4runtime_memset(void *dest, int c, sel4runtime_size_t n)
{
   114e8:	e92d08f0 	push	{r4, r5, r6, r7, fp}
   114ec:	e28db010 	add	fp, sp, #16
   114f0:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   114f4:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
   114f8:	e50b1034 	str	r1, [fp, #-52]	; 0xffffffcc
   114fc:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
    unsigned char *s = dest;
   11500:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   11504:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

    /* Fill head and tail with minimal branching. Each
     * conditional ensures that all the subsequently used
     * offsets are well-defined and in the dest region. */

    if (!n) {
   11508:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1150c:	e3530000 	cmp	r3, #0
   11510:	1a000001 	bne	1151c <__sel4runtime_memset+0x34>
        return dest;
   11514:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   11518:	ea0000d1 	b	11864 <__sel4runtime_memset+0x37c>
    }
    s[0] = s[n - 1] = c;
   1151c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11520:	e2433001 	sub	r3, r3, #1
   11524:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11528:	e0823003 	add	r3, r2, r3
   1152c:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
   11530:	e6ef2072 	uxtb	r2, r2
   11534:	e5c32000 	strb	r2, [r3]
   11538:	e5d32000 	ldrb	r2, [r3]
   1153c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11540:	e5c32000 	strb	r2, [r3]
    if (n <= 2) {
   11544:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11548:	e3530002 	cmp	r3, #2
   1154c:	8a000001 	bhi	11558 <__sel4runtime_memset+0x70>
        return dest;
   11550:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   11554:	ea0000c2 	b	11864 <__sel4runtime_memset+0x37c>
    }
    s[1] = s[n - 2] = c;
   11558:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1155c:	e2433002 	sub	r3, r3, #2
   11560:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11564:	e0823003 	add	r3, r2, r3
   11568:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
   1156c:	e6ef2072 	uxtb	r2, r2
   11570:	e5c32000 	strb	r2, [r3]
   11574:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11578:	e2822001 	add	r2, r2, #1
   1157c:	e5d33000 	ldrb	r3, [r3]
   11580:	e5c23000 	strb	r3, [r2]
    s[2] = s[n - 3] = c;
   11584:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11588:	e2433003 	sub	r3, r3, #3
   1158c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11590:	e0823003 	add	r3, r2, r3
   11594:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
   11598:	e6ef2072 	uxtb	r2, r2
   1159c:	e5c32000 	strb	r2, [r3]
   115a0:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   115a4:	e2822002 	add	r2, r2, #2
   115a8:	e5d33000 	ldrb	r3, [r3]
   115ac:	e5c23000 	strb	r3, [r2]
    if (n <= 6) {
   115b0:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   115b4:	e3530006 	cmp	r3, #6
   115b8:	8a000001 	bhi	115c4 <__sel4runtime_memset+0xdc>
        return dest;
   115bc:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   115c0:	ea0000a7 	b	11864 <__sel4runtime_memset+0x37c>
    }
    s[3] = s[n - 4] = c;
   115c4:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   115c8:	e2433004 	sub	r3, r3, #4
   115cc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   115d0:	e0823003 	add	r3, r2, r3
   115d4:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
   115d8:	e6ef2072 	uxtb	r2, r2
   115dc:	e5c32000 	strb	r2, [r3]
   115e0:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   115e4:	e2822003 	add	r2, r2, #3
   115e8:	e5d33000 	ldrb	r3, [r3]
   115ec:	e5c23000 	strb	r3, [r2]
    if (n <= 8) {
   115f0:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   115f4:	e3530008 	cmp	r3, #8
   115f8:	8a000001 	bhi	11604 <__sel4runtime_memset+0x11c>
        return dest;
   115fc:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   11600:	ea000097 	b	11864 <__sel4runtime_memset+0x37c>
    /* Advance pointer to align it at a 4-byte boundary,
     * and truncate n to a multiple of 4. The previous code
     * already took care of any head/tail that get cut off
     * by the alignment. */

    k = -(sel4runtime_uintptr_t)s & 3;
   11604:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11608:	e2633000 	rsb	r3, r3, #0
   1160c:	e2033003 	and	r3, r3, #3
   11610:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    s += k;
   11614:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11618:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1161c:	e0823003 	add	r3, r2, r3
   11620:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    n -= k;
   11624:	e51b2038 	ldr	r2, [fp, #-56]	; 0xffffffc8
   11628:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1162c:	e0423003 	sub	r3, r2, r3
   11630:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    n &= -4;
   11634:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11638:	e3c33003 	bic	r3, r3, #3
   1163c:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8

#ifdef __GNUC__
    typedef sel4runtime_uint32_t __attribute__((__may_alias__)) u32;
    typedef sel4runtime_uint64_t __attribute__((__may_alias__)) u64;

    u32 c32 = ((u32) - 1) / 255 * (unsigned char)c;
   11640:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   11644:	e6ef3073 	uxtb	r3, r3
   11648:	e1a02003 	mov	r2, r3
   1164c:	e3003101 	movw	r3, #257	; 0x101
   11650:	e3403101 	movt	r3, #257	; 0x101
   11654:	e0030293 	mul	r3, r3, r2
   11658:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
     * an 8-byte bounary, fill head/tail up to 28 bytes each.
     * As in the initial byte-based head/tail fill, each
     * conditional below ensures that the subsequent offsets
     * are valid (e.g. !(n<=24) implies n>=28). */

    *(u32 *)(s + 0) = c32;
   1165c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11660:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11664:	e5832000 	str	r2, [r3]
    *(u32 *)(s + n - 4) = c32;
   11668:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1166c:	e2433004 	sub	r3, r3, #4
   11670:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11674:	e0823003 	add	r3, r2, r3
   11678:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1167c:	e5832000 	str	r2, [r3]
    if (n <= 8) {
   11680:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11684:	e3530008 	cmp	r3, #8
   11688:	8a000001 	bhi	11694 <__sel4runtime_memset+0x1ac>
        return dest;
   1168c:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   11690:	ea000073 	b	11864 <__sel4runtime_memset+0x37c>
    }
    *(u32 *)(s + 4) = c32;
   11694:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11698:	e2833004 	add	r3, r3, #4
   1169c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   116a0:	e5832000 	str	r2, [r3]
    *(u32 *)(s + 8) = c32;
   116a4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   116a8:	e2833008 	add	r3, r3, #8
   116ac:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   116b0:	e5832000 	str	r2, [r3]
    *(u32 *)(s + n - 12) = c32;
   116b4:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   116b8:	e243300c 	sub	r3, r3, #12
   116bc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   116c0:	e0823003 	add	r3, r2, r3
   116c4:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   116c8:	e5832000 	str	r2, [r3]
    *(u32 *)(s + n - 8) = c32;
   116cc:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   116d0:	e2433008 	sub	r3, r3, #8
   116d4:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   116d8:	e0823003 	add	r3, r2, r3
   116dc:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   116e0:	e5832000 	str	r2, [r3]
    if (n <= 24) {
   116e4:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   116e8:	e3530018 	cmp	r3, #24
   116ec:	8a000001 	bhi	116f8 <__sel4runtime_memset+0x210>
        return dest;
   116f0:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   116f4:	ea00005a 	b	11864 <__sel4runtime_memset+0x37c>
    }
    *(u32 *)(s + 12) = c32;
   116f8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   116fc:	e283300c 	add	r3, r3, #12
   11700:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11704:	e5832000 	str	r2, [r3]
    *(u32 *)(s + 16) = c32;
   11708:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1170c:	e2833010 	add	r3, r3, #16
   11710:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11714:	e5832000 	str	r2, [r3]
    *(u32 *)(s + 20) = c32;
   11718:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1171c:	e2833014 	add	r3, r3, #20
   11720:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11724:	e5832000 	str	r2, [r3]
    *(u32 *)(s + 24) = c32;
   11728:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1172c:	e2833018 	add	r3, r3, #24
   11730:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11734:	e5832000 	str	r2, [r3]
    *(u32 *)(s + n - 28) = c32;
   11738:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1173c:	e243301c 	sub	r3, r3, #28
   11740:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11744:	e0823003 	add	r3, r2, r3
   11748:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1174c:	e5832000 	str	r2, [r3]
    *(u32 *)(s + n - 24) = c32;
   11750:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11754:	e2433018 	sub	r3, r3, #24
   11758:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1175c:	e0823003 	add	r3, r2, r3
   11760:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11764:	e5832000 	str	r2, [r3]
    *(u32 *)(s + n - 20) = c32;
   11768:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1176c:	e2433014 	sub	r3, r3, #20
   11770:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   11774:	e0823003 	add	r3, r2, r3
   11778:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1177c:	e5832000 	str	r2, [r3]
    *(u32 *)(s + n - 16) = c32;
   11780:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11784:	e2433010 	sub	r3, r3, #16
   11788:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1178c:	e0823003 	add	r3, r2, r3
   11790:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   11794:	e5832000 	str	r2, [r3]

    /* Align to a multiple of 8 so we can fill 64 bits at a time,
     * and avoid writing the same bytes twice as much as is
     * practical without introducing additional branching. */

    k = 24 + ((sel4runtime_uintptr_t)s & 4);
   11798:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1179c:	e2033004 	and	r3, r3, #4
   117a0:	e2833018 	add	r3, r3, #24
   117a4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    s += k;
   117a8:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   117ac:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   117b0:	e0823003 	add	r3, r2, r3
   117b4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    n -= k;
   117b8:	e51b2038 	ldr	r2, [fp, #-56]	; 0xffffffc8
   117bc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   117c0:	e0423003 	sub	r3, r2, r3
   117c4:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8

    /* If this loop is reached, 28 tail bytes have already been
     * filled, so any remainder when n drops below 32 can be
     * safely ignored. */

    u64 c64 = c32 | ((u64)c32 << 32);
   117c8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   117cc:	e1a00003 	mov	r0, r3
   117d0:	e3a01000 	mov	r1, #0
   117d4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   117d8:	e1a06003 	mov	r6, r3
   117dc:	e3a07000 	mov	r7, #0
   117e0:	e3a02000 	mov	r2, #0
   117e4:	e3a03000 	mov	r3, #0
   117e8:	e1a03006 	mov	r3, r6
   117ec:	e3a02000 	mov	r2, #0
   117f0:	e1804002 	orr	r4, r0, r2
   117f4:	e1815003 	orr	r5, r1, r3
   117f8:	e14b42fc 	strd	r4, [fp, #-44]	; 0xffffffd4
    for (; n >= 32; n -= 32, s += 32) {
   117fc:	ea000014 	b	11854 <__sel4runtime_memset+0x36c>
        *(u64 *)(s + 0) = c64;
   11800:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   11804:	e14b22dc 	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11808:	e1c120f0 	strd	r2, [r1]
        *(u64 *)(s + 8) = c64;
   1180c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11810:	e2831008 	add	r1, r3, #8
   11814:	e14b22dc 	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11818:	e1c120f0 	strd	r2, [r1]
        *(u64 *)(s + 16) = c64;
   1181c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11820:	e2831010 	add	r1, r3, #16
   11824:	e14b22dc 	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11828:	e1c120f0 	strd	r2, [r1]
        *(u64 *)(s + 24) = c64;
   1182c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11830:	e2831018 	add	r1, r3, #24
   11834:	e14b22dc 	ldrd	r2, [fp, #-44]	; 0xffffffd4
   11838:	e1c120f0 	strd	r2, [r1]
    for (; n >= 32; n -= 32, s += 32) {
   1183c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11840:	e2433020 	sub	r3, r3, #32
   11844:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
   11848:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1184c:	e2833020 	add	r3, r3, #32
   11850:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
   11854:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   11858:	e353001f 	cmp	r3, #31
   1185c:	8affffe7 	bhi	11800 <__sel4runtime_memset+0x318>
    for (; n; n--, s++) {
        *s = c;
    }
#endif

    return dest;
   11860:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
}
   11864:	e1a00003 	mov	r0, r3
   11868:	e24bd010 	sub	sp, fp, #16
   1186c:	e8bd08f0 	pop	{r4, r5, r6, r7, fp}
   11870:	e12fff1e 	bx	lr

00011874 <__sel4runtime_memcpy>:
 */

#include "util.h"

void *__sel4runtime_memcpy(void *restrict dest, const void *restrict src, sel4runtime_size_t n)
{
   11874:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   11878:	e28db000 	add	fp, sp, #0
   1187c:	e24dd024 	sub	sp, sp, #36	; 0x24
   11880:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   11884:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   11888:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    unsigned char *d = dest;
   1188c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11890:	e50b3008 	str	r3, [fp, #-8]
    const unsigned char *s = src;
   11894:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   11898:	e50b300c 	str	r3, [fp, #-12]
#endif

    typedef sel4runtime_uint32_t __attribute__((__may_alias__)) u32;
    sel4runtime_uint32_t w, x;

    for (; (sel4runtime_uintptr_t)s % 4 && n; n--) {
   1189c:	ea00000a 	b	118cc <__sel4runtime_memcpy+0x58>
        *d++ = *s++;
   118a0:	e51b200c 	ldr	r2, [fp, #-12]
   118a4:	e2823001 	add	r3, r2, #1
   118a8:	e50b300c 	str	r3, [fp, #-12]
   118ac:	e51b3008 	ldr	r3, [fp, #-8]
   118b0:	e2831001 	add	r1, r3, #1
   118b4:	e50b1008 	str	r1, [fp, #-8]
   118b8:	e5d22000 	ldrb	r2, [r2]
   118bc:	e5c32000 	strb	r2, [r3]
    for (; (sel4runtime_uintptr_t)s % 4 && n; n--) {
   118c0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   118c4:	e2433001 	sub	r3, r3, #1
   118c8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   118cc:	e51b300c 	ldr	r3, [fp, #-12]
   118d0:	e2033003 	and	r3, r3, #3
   118d4:	e3530000 	cmp	r3, #0
   118d8:	0a000002 	beq	118e8 <__sel4runtime_memcpy+0x74>
   118dc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   118e0:	e3530000 	cmp	r3, #0
   118e4:	1affffed 	bne	118a0 <__sel4runtime_memcpy+0x2c>
    }

    if ((sel4runtime_uintptr_t)d % 4 == 0) {
   118e8:	e51b3008 	ldr	r3, [fp, #-8]
   118ec:	e2033003 	and	r3, r3, #3
   118f0:	e3530000 	cmp	r3, #0
   118f4:	1a000062 	bne	11a84 <__sel4runtime_memcpy+0x210>
        for (; n >= 16; s += 16, d += 16, n -= 16) {
   118f8:	ea00001e 	b	11978 <__sel4runtime_memcpy+0x104>
            *(u32 *)(d + 0) = *(u32 *)(s + 0);
   118fc:	e51b300c 	ldr	r3, [fp, #-12]
   11900:	e5932000 	ldr	r2, [r3]
   11904:	e51b3008 	ldr	r3, [fp, #-8]
   11908:	e5832000 	str	r2, [r3]
            *(u32 *)(d + 4) = *(u32 *)(s + 4);
   1190c:	e51b300c 	ldr	r3, [fp, #-12]
   11910:	e2832004 	add	r2, r3, #4
   11914:	e51b3008 	ldr	r3, [fp, #-8]
   11918:	e2833004 	add	r3, r3, #4
   1191c:	e5922000 	ldr	r2, [r2]
   11920:	e5832000 	str	r2, [r3]
            *(u32 *)(d + 8) = *(u32 *)(s + 8);
   11924:	e51b300c 	ldr	r3, [fp, #-12]
   11928:	e2832008 	add	r2, r3, #8
   1192c:	e51b3008 	ldr	r3, [fp, #-8]
   11930:	e2833008 	add	r3, r3, #8
   11934:	e5922000 	ldr	r2, [r2]
   11938:	e5832000 	str	r2, [r3]
            *(u32 *)(d + 12) = *(u32 *)(s + 12);
   1193c:	e51b300c 	ldr	r3, [fp, #-12]
   11940:	e283200c 	add	r2, r3, #12
   11944:	e51b3008 	ldr	r3, [fp, #-8]
   11948:	e283300c 	add	r3, r3, #12
   1194c:	e5922000 	ldr	r2, [r2]
   11950:	e5832000 	str	r2, [r3]
        for (; n >= 16; s += 16, d += 16, n -= 16) {
   11954:	e51b300c 	ldr	r3, [fp, #-12]
   11958:	e2833010 	add	r3, r3, #16
   1195c:	e50b300c 	str	r3, [fp, #-12]
   11960:	e51b3008 	ldr	r3, [fp, #-8]
   11964:	e2833010 	add	r3, r3, #16
   11968:	e50b3008 	str	r3, [fp, #-8]
   1196c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11970:	e2433010 	sub	r3, r3, #16
   11974:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   11978:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1197c:	e353000f 	cmp	r3, #15
   11980:	8affffdd 	bhi	118fc <__sel4runtime_memcpy+0x88>
        }
        if (n & 8) {
   11984:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11988:	e2033008 	and	r3, r3, #8
   1198c:	e3530000 	cmp	r3, #0
   11990:	0a00000f 	beq	119d4 <__sel4runtime_memcpy+0x160>
            *(u32 *)(d + 0) = *(u32 *)(s + 0);
   11994:	e51b300c 	ldr	r3, [fp, #-12]
   11998:	e5932000 	ldr	r2, [r3]
   1199c:	e51b3008 	ldr	r3, [fp, #-8]
   119a0:	e5832000 	str	r2, [r3]
            *(u32 *)(d + 4) = *(u32 *)(s + 4);
   119a4:	e51b300c 	ldr	r3, [fp, #-12]
   119a8:	e2832004 	add	r2, r3, #4
   119ac:	e51b3008 	ldr	r3, [fp, #-8]
   119b0:	e2833004 	add	r3, r3, #4
   119b4:	e5922000 	ldr	r2, [r2]
   119b8:	e5832000 	str	r2, [r3]
            d += 8;
   119bc:	e51b3008 	ldr	r3, [fp, #-8]
   119c0:	e2833008 	add	r3, r3, #8
   119c4:	e50b3008 	str	r3, [fp, #-8]
            s += 8;
   119c8:	e51b300c 	ldr	r3, [fp, #-12]
   119cc:	e2833008 	add	r3, r3, #8
   119d0:	e50b300c 	str	r3, [fp, #-12]
        }
        if (n & 4) {
   119d4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   119d8:	e2033004 	and	r3, r3, #4
   119dc:	e3530000 	cmp	r3, #0
   119e0:	0a000009 	beq	11a0c <__sel4runtime_memcpy+0x198>
            *(u32 *)(d + 0) = *(u32 *)(s + 0);
   119e4:	e51b300c 	ldr	r3, [fp, #-12]
   119e8:	e5932000 	ldr	r2, [r3]
   119ec:	e51b3008 	ldr	r3, [fp, #-8]
   119f0:	e5832000 	str	r2, [r3]
            d += 4;
   119f4:	e51b3008 	ldr	r3, [fp, #-8]
   119f8:	e2833004 	add	r3, r3, #4
   119fc:	e50b3008 	str	r3, [fp, #-8]
            s += 4;
   11a00:	e51b300c 	ldr	r3, [fp, #-12]
   11a04:	e2833004 	add	r3, r3, #4
   11a08:	e50b300c 	str	r3, [fp, #-12]
        }
        if (n & 2) {
   11a0c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a10:	e2033002 	and	r3, r3, #2
   11a14:	e3530000 	cmp	r3, #0
   11a18:	0a00000f 	beq	11a5c <__sel4runtime_memcpy+0x1e8>
            *d++ = *s++;
   11a1c:	e51b200c 	ldr	r2, [fp, #-12]
   11a20:	e2823001 	add	r3, r2, #1
   11a24:	e50b300c 	str	r3, [fp, #-12]
   11a28:	e51b3008 	ldr	r3, [fp, #-8]
   11a2c:	e2831001 	add	r1, r3, #1
   11a30:	e50b1008 	str	r1, [fp, #-8]
   11a34:	e5d22000 	ldrb	r2, [r2]
   11a38:	e5c32000 	strb	r2, [r3]
            *d++ = *s++;
   11a3c:	e51b200c 	ldr	r2, [fp, #-12]
   11a40:	e2823001 	add	r3, r2, #1
   11a44:	e50b300c 	str	r3, [fp, #-12]
   11a48:	e51b3008 	ldr	r3, [fp, #-8]
   11a4c:	e2831001 	add	r1, r3, #1
   11a50:	e50b1008 	str	r1, [fp, #-8]
   11a54:	e5d22000 	ldrb	r2, [r2]
   11a58:	e5c32000 	strb	r2, [r3]
        }
        if (n & 1) {
   11a5c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a60:	e2033001 	and	r3, r3, #1
   11a64:	e3530000 	cmp	r3, #0
   11a68:	0a000003 	beq	11a7c <__sel4runtime_memcpy+0x208>
            *d = *s;
   11a6c:	e51b300c 	ldr	r3, [fp, #-12]
   11a70:	e5d32000 	ldrb	r2, [r3]
   11a74:	e51b3008 	ldr	r3, [fp, #-8]
   11a78:	e5c32000 	strb	r2, [r3]
        }
        return dest;
   11a7c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a80:	ea000210 	b	122c8 <__sel4runtime_memcpy+0xa54>
    }

    if (n >= 32) switch ((sel4runtime_uintptr_t)d % 4) {
   11a84:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a88:	e353001f 	cmp	r3, #31
   11a8c:	9a000103 	bls	11ea0 <__sel4runtime_memcpy+0x62c>
   11a90:	e51b3008 	ldr	r3, [fp, #-8]
   11a94:	e2033003 	and	r3, r3, #3
   11a98:	e3530003 	cmp	r3, #3
   11a9c:	0a0000b4 	beq	11d74 <__sel4runtime_memcpy+0x500>
   11aa0:	e3530003 	cmp	r3, #3
   11aa4:	8a0000fe 	bhi	11ea4 <__sel4runtime_memcpy+0x630>
   11aa8:	e3530001 	cmp	r3, #1
   11aac:	0a000002 	beq	11abc <__sel4runtime_memcpy+0x248>
   11ab0:	e3530002 	cmp	r3, #2
   11ab4:	0a00005b 	beq	11c28 <__sel4runtime_memcpy+0x3b4>
   11ab8:	ea0000f9 	b	11ea4 <__sel4runtime_memcpy+0x630>
        case 1:
            w = *(u32 *)s;
   11abc:	e51b300c 	ldr	r3, [fp, #-12]
   11ac0:	e5933000 	ldr	r3, [r3]
   11ac4:	e50b3010 	str	r3, [fp, #-16]
            *d++ = *s++;
   11ac8:	e51b200c 	ldr	r2, [fp, #-12]
   11acc:	e2823001 	add	r3, r2, #1
   11ad0:	e50b300c 	str	r3, [fp, #-12]
   11ad4:	e51b3008 	ldr	r3, [fp, #-8]
   11ad8:	e2831001 	add	r1, r3, #1
   11adc:	e50b1008 	str	r1, [fp, #-8]
   11ae0:	e5d22000 	ldrb	r2, [r2]
   11ae4:	e5c32000 	strb	r2, [r3]
            *d++ = *s++;
   11ae8:	e51b200c 	ldr	r2, [fp, #-12]
   11aec:	e2823001 	add	r3, r2, #1
   11af0:	e50b300c 	str	r3, [fp, #-12]
   11af4:	e51b3008 	ldr	r3, [fp, #-8]
   11af8:	e2831001 	add	r1, r3, #1
   11afc:	e50b1008 	str	r1, [fp, #-8]
   11b00:	e5d22000 	ldrb	r2, [r2]
   11b04:	e5c32000 	strb	r2, [r3]
            *d++ = *s++;
   11b08:	e51b200c 	ldr	r2, [fp, #-12]
   11b0c:	e2823001 	add	r3, r2, #1
   11b10:	e50b300c 	str	r3, [fp, #-12]
   11b14:	e51b3008 	ldr	r3, [fp, #-8]
   11b18:	e2831001 	add	r1, r3, #1
   11b1c:	e50b1008 	str	r1, [fp, #-8]
   11b20:	e5d22000 	ldrb	r2, [r2]
   11b24:	e5c32000 	strb	r2, [r3]
            n -= 3;
   11b28:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b2c:	e2433003 	sub	r3, r3, #3
   11b30:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
            for (; n >= 17; s += 16, d += 16, n -= 16) {
   11b34:	ea000037 	b	11c18 <__sel4runtime_memcpy+0x3a4>
                x = *(u32 *)(s + 1);
   11b38:	e51b300c 	ldr	r3, [fp, #-12]
   11b3c:	e2833001 	add	r3, r3, #1
   11b40:	e5933000 	ldr	r3, [r3]
   11b44:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
                *(u32 *)(d + 0) = (w LS 24) | (x RS 8);
   11b48:	e51b3010 	ldr	r3, [fp, #-16]
   11b4c:	e1a02c23 	lsr	r2, r3, #24
   11b50:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11b54:	e1a03403 	lsl	r3, r3, #8
   11b58:	e1822003 	orr	r2, r2, r3
   11b5c:	e51b3008 	ldr	r3, [fp, #-8]
   11b60:	e5832000 	str	r2, [r3]
                w = *(u32 *)(s + 5);
   11b64:	e51b300c 	ldr	r3, [fp, #-12]
   11b68:	e2833005 	add	r3, r3, #5
   11b6c:	e5933000 	ldr	r3, [r3]
   11b70:	e50b3010 	str	r3, [fp, #-16]
                *(u32 *)(d + 4) = (x LS 24) | (w RS 8);
   11b74:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11b78:	e1a01c23 	lsr	r1, r3, #24
   11b7c:	e51b3010 	ldr	r3, [fp, #-16]
   11b80:	e1a02403 	lsl	r2, r3, #8
   11b84:	e51b3008 	ldr	r3, [fp, #-8]
   11b88:	e2833004 	add	r3, r3, #4
   11b8c:	e1812002 	orr	r2, r1, r2
   11b90:	e5832000 	str	r2, [r3]
                x = *(u32 *)(s + 9);
   11b94:	e51b300c 	ldr	r3, [fp, #-12]
   11b98:	e2833009 	add	r3, r3, #9
   11b9c:	e5933000 	ldr	r3, [r3]
   11ba0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
                *(u32 *)(d + 8) = (w LS 24) | (x RS 8);
   11ba4:	e51b3010 	ldr	r3, [fp, #-16]
   11ba8:	e1a01c23 	lsr	r1, r3, #24
   11bac:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11bb0:	e1a02403 	lsl	r2, r3, #8
   11bb4:	e51b3008 	ldr	r3, [fp, #-8]
   11bb8:	e2833008 	add	r3, r3, #8
   11bbc:	e1812002 	orr	r2, r1, r2
   11bc0:	e5832000 	str	r2, [r3]
                w = *(u32 *)(s + 13);
   11bc4:	e51b300c 	ldr	r3, [fp, #-12]
   11bc8:	e283300d 	add	r3, r3, #13
   11bcc:	e5933000 	ldr	r3, [r3]
   11bd0:	e50b3010 	str	r3, [fp, #-16]
                *(u32 *)(d + 12) = (x LS 24) | (w RS 8);
   11bd4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11bd8:	e1a01c23 	lsr	r1, r3, #24
   11bdc:	e51b3010 	ldr	r3, [fp, #-16]
   11be0:	e1a02403 	lsl	r2, r3, #8
   11be4:	e51b3008 	ldr	r3, [fp, #-8]
   11be8:	e283300c 	add	r3, r3, #12
   11bec:	e1812002 	orr	r2, r1, r2
   11bf0:	e5832000 	str	r2, [r3]
            for (; n >= 17; s += 16, d += 16, n -= 16) {
   11bf4:	e51b300c 	ldr	r3, [fp, #-12]
   11bf8:	e2833010 	add	r3, r3, #16
   11bfc:	e50b300c 	str	r3, [fp, #-12]
   11c00:	e51b3008 	ldr	r3, [fp, #-8]
   11c04:	e2833010 	add	r3, r3, #16
   11c08:	e50b3008 	str	r3, [fp, #-8]
   11c0c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c10:	e2433010 	sub	r3, r3, #16
   11c14:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   11c18:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c1c:	e3530010 	cmp	r3, #16
   11c20:	8affffc4 	bhi	11b38 <__sel4runtime_memcpy+0x2c4>
            }
            break;
   11c24:	ea00009e 	b	11ea4 <__sel4runtime_memcpy+0x630>
        case 2:
            w = *(u32 *)s;
   11c28:	e51b300c 	ldr	r3, [fp, #-12]
   11c2c:	e5933000 	ldr	r3, [r3]
   11c30:	e50b3010 	str	r3, [fp, #-16]
            *d++ = *s++;
   11c34:	e51b200c 	ldr	r2, [fp, #-12]
   11c38:	e2823001 	add	r3, r2, #1
   11c3c:	e50b300c 	str	r3, [fp, #-12]
   11c40:	e51b3008 	ldr	r3, [fp, #-8]
   11c44:	e2831001 	add	r1, r3, #1
   11c48:	e50b1008 	str	r1, [fp, #-8]
   11c4c:	e5d22000 	ldrb	r2, [r2]
   11c50:	e5c32000 	strb	r2, [r3]
            *d++ = *s++;
   11c54:	e51b200c 	ldr	r2, [fp, #-12]
   11c58:	e2823001 	add	r3, r2, #1
   11c5c:	e50b300c 	str	r3, [fp, #-12]
   11c60:	e51b3008 	ldr	r3, [fp, #-8]
   11c64:	e2831001 	add	r1, r3, #1
   11c68:	e50b1008 	str	r1, [fp, #-8]
   11c6c:	e5d22000 	ldrb	r2, [r2]
   11c70:	e5c32000 	strb	r2, [r3]
            n -= 2;
   11c74:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c78:	e2433002 	sub	r3, r3, #2
   11c7c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
            for (; n >= 18; s += 16, d += 16, n -= 16) {
   11c80:	ea000037 	b	11d64 <__sel4runtime_memcpy+0x4f0>
                x = *(u32 *)(s + 2);
   11c84:	e51b300c 	ldr	r3, [fp, #-12]
   11c88:	e2833002 	add	r3, r3, #2
   11c8c:	e5933000 	ldr	r3, [r3]
   11c90:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
                *(u32 *)(d + 0) = (w LS 16) | (x RS 16);
   11c94:	e51b3010 	ldr	r3, [fp, #-16]
   11c98:	e1a02823 	lsr	r2, r3, #16
   11c9c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11ca0:	e1a03803 	lsl	r3, r3, #16
   11ca4:	e1822003 	orr	r2, r2, r3
   11ca8:	e51b3008 	ldr	r3, [fp, #-8]
   11cac:	e5832000 	str	r2, [r3]
                w = *(u32 *)(s + 6);
   11cb0:	e51b300c 	ldr	r3, [fp, #-12]
   11cb4:	e2833006 	add	r3, r3, #6
   11cb8:	e5933000 	ldr	r3, [r3]
   11cbc:	e50b3010 	str	r3, [fp, #-16]
                *(u32 *)(d + 4) = (x LS 16) | (w RS 16);
   11cc0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11cc4:	e1a01823 	lsr	r1, r3, #16
   11cc8:	e51b3010 	ldr	r3, [fp, #-16]
   11ccc:	e1a02803 	lsl	r2, r3, #16
   11cd0:	e51b3008 	ldr	r3, [fp, #-8]
   11cd4:	e2833004 	add	r3, r3, #4
   11cd8:	e1812002 	orr	r2, r1, r2
   11cdc:	e5832000 	str	r2, [r3]
                x = *(u32 *)(s + 10);
   11ce0:	e51b300c 	ldr	r3, [fp, #-12]
   11ce4:	e283300a 	add	r3, r3, #10
   11ce8:	e5933000 	ldr	r3, [r3]
   11cec:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
                *(u32 *)(d + 8) = (w LS 16) | (x RS 16);
   11cf0:	e51b3010 	ldr	r3, [fp, #-16]
   11cf4:	e1a01823 	lsr	r1, r3, #16
   11cf8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11cfc:	e1a02803 	lsl	r2, r3, #16
   11d00:	e51b3008 	ldr	r3, [fp, #-8]
   11d04:	e2833008 	add	r3, r3, #8
   11d08:	e1812002 	orr	r2, r1, r2
   11d0c:	e5832000 	str	r2, [r3]
                w = *(u32 *)(s + 14);
   11d10:	e51b300c 	ldr	r3, [fp, #-12]
   11d14:	e283300e 	add	r3, r3, #14
   11d18:	e5933000 	ldr	r3, [r3]
   11d1c:	e50b3010 	str	r3, [fp, #-16]
                *(u32 *)(d + 12) = (x LS 16) | (w RS 16);
   11d20:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11d24:	e1a01823 	lsr	r1, r3, #16
   11d28:	e51b3010 	ldr	r3, [fp, #-16]
   11d2c:	e1a02803 	lsl	r2, r3, #16
   11d30:	e51b3008 	ldr	r3, [fp, #-8]
   11d34:	e283300c 	add	r3, r3, #12
   11d38:	e1812002 	orr	r2, r1, r2
   11d3c:	e5832000 	str	r2, [r3]
            for (; n >= 18; s += 16, d += 16, n -= 16) {
   11d40:	e51b300c 	ldr	r3, [fp, #-12]
   11d44:	e2833010 	add	r3, r3, #16
   11d48:	e50b300c 	str	r3, [fp, #-12]
   11d4c:	e51b3008 	ldr	r3, [fp, #-8]
   11d50:	e2833010 	add	r3, r3, #16
   11d54:	e50b3008 	str	r3, [fp, #-8]
   11d58:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d5c:	e2433010 	sub	r3, r3, #16
   11d60:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   11d64:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d68:	e3530011 	cmp	r3, #17
   11d6c:	8affffc4 	bhi	11c84 <__sel4runtime_memcpy+0x410>
            }
            break;
   11d70:	ea00004b 	b	11ea4 <__sel4runtime_memcpy+0x630>
        case 3:
            w = *(u32 *)s;
   11d74:	e51b300c 	ldr	r3, [fp, #-12]
   11d78:	e5933000 	ldr	r3, [r3]
   11d7c:	e50b3010 	str	r3, [fp, #-16]
            *d++ = *s++;
   11d80:	e51b200c 	ldr	r2, [fp, #-12]
   11d84:	e2823001 	add	r3, r2, #1
   11d88:	e50b300c 	str	r3, [fp, #-12]
   11d8c:	e51b3008 	ldr	r3, [fp, #-8]
   11d90:	e2831001 	add	r1, r3, #1
   11d94:	e50b1008 	str	r1, [fp, #-8]
   11d98:	e5d22000 	ldrb	r2, [r2]
   11d9c:	e5c32000 	strb	r2, [r3]
            n -= 1;
   11da0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11da4:	e2433001 	sub	r3, r3, #1
   11da8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
            for (; n >= 19; s += 16, d += 16, n -= 16) {
   11dac:	ea000037 	b	11e90 <__sel4runtime_memcpy+0x61c>
                x = *(u32 *)(s + 3);
   11db0:	e51b300c 	ldr	r3, [fp, #-12]
   11db4:	e2833003 	add	r3, r3, #3
   11db8:	e5933000 	ldr	r3, [r3]
   11dbc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
                *(u32 *)(d + 0) = (w LS 8) | (x RS 24);
   11dc0:	e51b3010 	ldr	r3, [fp, #-16]
   11dc4:	e1a02423 	lsr	r2, r3, #8
   11dc8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11dcc:	e1a03c03 	lsl	r3, r3, #24
   11dd0:	e1822003 	orr	r2, r2, r3
   11dd4:	e51b3008 	ldr	r3, [fp, #-8]
   11dd8:	e5832000 	str	r2, [r3]
                w = *(u32 *)(s + 7);
   11ddc:	e51b300c 	ldr	r3, [fp, #-12]
   11de0:	e2833007 	add	r3, r3, #7
   11de4:	e5933000 	ldr	r3, [r3]
   11de8:	e50b3010 	str	r3, [fp, #-16]
                *(u32 *)(d + 4) = (x LS 8) | (w RS 24);
   11dec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11df0:	e1a01423 	lsr	r1, r3, #8
   11df4:	e51b3010 	ldr	r3, [fp, #-16]
   11df8:	e1a02c03 	lsl	r2, r3, #24
   11dfc:	e51b3008 	ldr	r3, [fp, #-8]
   11e00:	e2833004 	add	r3, r3, #4
   11e04:	e1812002 	orr	r2, r1, r2
   11e08:	e5832000 	str	r2, [r3]
                x = *(u32 *)(s + 11);
   11e0c:	e51b300c 	ldr	r3, [fp, #-12]
   11e10:	e283300b 	add	r3, r3, #11
   11e14:	e5933000 	ldr	r3, [r3]
   11e18:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
                *(u32 *)(d + 8) = (w LS 8) | (x RS 24);
   11e1c:	e51b3010 	ldr	r3, [fp, #-16]
   11e20:	e1a01423 	lsr	r1, r3, #8
   11e24:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11e28:	e1a02c03 	lsl	r2, r3, #24
   11e2c:	e51b3008 	ldr	r3, [fp, #-8]
   11e30:	e2833008 	add	r3, r3, #8
   11e34:	e1812002 	orr	r2, r1, r2
   11e38:	e5832000 	str	r2, [r3]
                w = *(u32 *)(s + 15);
   11e3c:	e51b300c 	ldr	r3, [fp, #-12]
   11e40:	e283300f 	add	r3, r3, #15
   11e44:	e5933000 	ldr	r3, [r3]
   11e48:	e50b3010 	str	r3, [fp, #-16]
                *(u32 *)(d + 12) = (x LS 8) | (w RS 24);
   11e4c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   11e50:	e1a01423 	lsr	r1, r3, #8
   11e54:	e51b3010 	ldr	r3, [fp, #-16]
   11e58:	e1a02c03 	lsl	r2, r3, #24
   11e5c:	e51b3008 	ldr	r3, [fp, #-8]
   11e60:	e283300c 	add	r3, r3, #12
   11e64:	e1812002 	orr	r2, r1, r2
   11e68:	e5832000 	str	r2, [r3]
            for (; n >= 19; s += 16, d += 16, n -= 16) {
   11e6c:	e51b300c 	ldr	r3, [fp, #-12]
   11e70:	e2833010 	add	r3, r3, #16
   11e74:	e50b300c 	str	r3, [fp, #-12]
   11e78:	e51b3008 	ldr	r3, [fp, #-8]
   11e7c:	e2833010 	add	r3, r3, #16
   11e80:	e50b3008 	str	r3, [fp, #-8]
   11e84:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e88:	e2433010 	sub	r3, r3, #16
   11e8c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   11e90:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e94:	e3530012 	cmp	r3, #18
   11e98:	8affffc4 	bhi	11db0 <__sel4runtime_memcpy+0x53c>
            }
            break;
   11e9c:	ea000000 	b	11ea4 <__sel4runtime_memcpy+0x630>
        }
    if (n & 16) {
   11ea0:	e320f000 	nop	{0}
   11ea4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ea8:	e2033010 	and	r3, r3, #16
   11eac:	e3530000 	cmp	r3, #0
   11eb0:	0a00007f 	beq	120b4 <__sel4runtime_memcpy+0x840>
        *d++ = *s++;
   11eb4:	e51b200c 	ldr	r2, [fp, #-12]
   11eb8:	e2823001 	add	r3, r2, #1
   11ebc:	e50b300c 	str	r3, [fp, #-12]
   11ec0:	e51b3008 	ldr	r3, [fp, #-8]
   11ec4:	e2831001 	add	r1, r3, #1
   11ec8:	e50b1008 	str	r1, [fp, #-8]
   11ecc:	e5d22000 	ldrb	r2, [r2]
   11ed0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11ed4:	e51b200c 	ldr	r2, [fp, #-12]
   11ed8:	e2823001 	add	r3, r2, #1
   11edc:	e50b300c 	str	r3, [fp, #-12]
   11ee0:	e51b3008 	ldr	r3, [fp, #-8]
   11ee4:	e2831001 	add	r1, r3, #1
   11ee8:	e50b1008 	str	r1, [fp, #-8]
   11eec:	e5d22000 	ldrb	r2, [r2]
   11ef0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11ef4:	e51b200c 	ldr	r2, [fp, #-12]
   11ef8:	e2823001 	add	r3, r2, #1
   11efc:	e50b300c 	str	r3, [fp, #-12]
   11f00:	e51b3008 	ldr	r3, [fp, #-8]
   11f04:	e2831001 	add	r1, r3, #1
   11f08:	e50b1008 	str	r1, [fp, #-8]
   11f0c:	e5d22000 	ldrb	r2, [r2]
   11f10:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11f14:	e51b200c 	ldr	r2, [fp, #-12]
   11f18:	e2823001 	add	r3, r2, #1
   11f1c:	e50b300c 	str	r3, [fp, #-12]
   11f20:	e51b3008 	ldr	r3, [fp, #-8]
   11f24:	e2831001 	add	r1, r3, #1
   11f28:	e50b1008 	str	r1, [fp, #-8]
   11f2c:	e5d22000 	ldrb	r2, [r2]
   11f30:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11f34:	e51b200c 	ldr	r2, [fp, #-12]
   11f38:	e2823001 	add	r3, r2, #1
   11f3c:	e50b300c 	str	r3, [fp, #-12]
   11f40:	e51b3008 	ldr	r3, [fp, #-8]
   11f44:	e2831001 	add	r1, r3, #1
   11f48:	e50b1008 	str	r1, [fp, #-8]
   11f4c:	e5d22000 	ldrb	r2, [r2]
   11f50:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11f54:	e51b200c 	ldr	r2, [fp, #-12]
   11f58:	e2823001 	add	r3, r2, #1
   11f5c:	e50b300c 	str	r3, [fp, #-12]
   11f60:	e51b3008 	ldr	r3, [fp, #-8]
   11f64:	e2831001 	add	r1, r3, #1
   11f68:	e50b1008 	str	r1, [fp, #-8]
   11f6c:	e5d22000 	ldrb	r2, [r2]
   11f70:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11f74:	e51b200c 	ldr	r2, [fp, #-12]
   11f78:	e2823001 	add	r3, r2, #1
   11f7c:	e50b300c 	str	r3, [fp, #-12]
   11f80:	e51b3008 	ldr	r3, [fp, #-8]
   11f84:	e2831001 	add	r1, r3, #1
   11f88:	e50b1008 	str	r1, [fp, #-8]
   11f8c:	e5d22000 	ldrb	r2, [r2]
   11f90:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11f94:	e51b200c 	ldr	r2, [fp, #-12]
   11f98:	e2823001 	add	r3, r2, #1
   11f9c:	e50b300c 	str	r3, [fp, #-12]
   11fa0:	e51b3008 	ldr	r3, [fp, #-8]
   11fa4:	e2831001 	add	r1, r3, #1
   11fa8:	e50b1008 	str	r1, [fp, #-8]
   11fac:	e5d22000 	ldrb	r2, [r2]
   11fb0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11fb4:	e51b200c 	ldr	r2, [fp, #-12]
   11fb8:	e2823001 	add	r3, r2, #1
   11fbc:	e50b300c 	str	r3, [fp, #-12]
   11fc0:	e51b3008 	ldr	r3, [fp, #-8]
   11fc4:	e2831001 	add	r1, r3, #1
   11fc8:	e50b1008 	str	r1, [fp, #-8]
   11fcc:	e5d22000 	ldrb	r2, [r2]
   11fd0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11fd4:	e51b200c 	ldr	r2, [fp, #-12]
   11fd8:	e2823001 	add	r3, r2, #1
   11fdc:	e50b300c 	str	r3, [fp, #-12]
   11fe0:	e51b3008 	ldr	r3, [fp, #-8]
   11fe4:	e2831001 	add	r1, r3, #1
   11fe8:	e50b1008 	str	r1, [fp, #-8]
   11fec:	e5d22000 	ldrb	r2, [r2]
   11ff0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   11ff4:	e51b200c 	ldr	r2, [fp, #-12]
   11ff8:	e2823001 	add	r3, r2, #1
   11ffc:	e50b300c 	str	r3, [fp, #-12]
   12000:	e51b3008 	ldr	r3, [fp, #-8]
   12004:	e2831001 	add	r1, r3, #1
   12008:	e50b1008 	str	r1, [fp, #-8]
   1200c:	e5d22000 	ldrb	r2, [r2]
   12010:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12014:	e51b200c 	ldr	r2, [fp, #-12]
   12018:	e2823001 	add	r3, r2, #1
   1201c:	e50b300c 	str	r3, [fp, #-12]
   12020:	e51b3008 	ldr	r3, [fp, #-8]
   12024:	e2831001 	add	r1, r3, #1
   12028:	e50b1008 	str	r1, [fp, #-8]
   1202c:	e5d22000 	ldrb	r2, [r2]
   12030:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12034:	e51b200c 	ldr	r2, [fp, #-12]
   12038:	e2823001 	add	r3, r2, #1
   1203c:	e50b300c 	str	r3, [fp, #-12]
   12040:	e51b3008 	ldr	r3, [fp, #-8]
   12044:	e2831001 	add	r1, r3, #1
   12048:	e50b1008 	str	r1, [fp, #-8]
   1204c:	e5d22000 	ldrb	r2, [r2]
   12050:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12054:	e51b200c 	ldr	r2, [fp, #-12]
   12058:	e2823001 	add	r3, r2, #1
   1205c:	e50b300c 	str	r3, [fp, #-12]
   12060:	e51b3008 	ldr	r3, [fp, #-8]
   12064:	e2831001 	add	r1, r3, #1
   12068:	e50b1008 	str	r1, [fp, #-8]
   1206c:	e5d22000 	ldrb	r2, [r2]
   12070:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12074:	e51b200c 	ldr	r2, [fp, #-12]
   12078:	e2823001 	add	r3, r2, #1
   1207c:	e50b300c 	str	r3, [fp, #-12]
   12080:	e51b3008 	ldr	r3, [fp, #-8]
   12084:	e2831001 	add	r1, r3, #1
   12088:	e50b1008 	str	r1, [fp, #-8]
   1208c:	e5d22000 	ldrb	r2, [r2]
   12090:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12094:	e51b200c 	ldr	r2, [fp, #-12]
   12098:	e2823001 	add	r3, r2, #1
   1209c:	e50b300c 	str	r3, [fp, #-12]
   120a0:	e51b3008 	ldr	r3, [fp, #-8]
   120a4:	e2831001 	add	r1, r3, #1
   120a8:	e50b1008 	str	r1, [fp, #-8]
   120ac:	e5d22000 	ldrb	r2, [r2]
   120b0:	e5c32000 	strb	r2, [r3]
    }
    if (n & 8) {
   120b4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   120b8:	e2033008 	and	r3, r3, #8
   120bc:	e3530000 	cmp	r3, #0
   120c0:	0a00003f 	beq	121c4 <__sel4runtime_memcpy+0x950>
        *d++ = *s++;
   120c4:	e51b200c 	ldr	r2, [fp, #-12]
   120c8:	e2823001 	add	r3, r2, #1
   120cc:	e50b300c 	str	r3, [fp, #-12]
   120d0:	e51b3008 	ldr	r3, [fp, #-8]
   120d4:	e2831001 	add	r1, r3, #1
   120d8:	e50b1008 	str	r1, [fp, #-8]
   120dc:	e5d22000 	ldrb	r2, [r2]
   120e0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   120e4:	e51b200c 	ldr	r2, [fp, #-12]
   120e8:	e2823001 	add	r3, r2, #1
   120ec:	e50b300c 	str	r3, [fp, #-12]
   120f0:	e51b3008 	ldr	r3, [fp, #-8]
   120f4:	e2831001 	add	r1, r3, #1
   120f8:	e50b1008 	str	r1, [fp, #-8]
   120fc:	e5d22000 	ldrb	r2, [r2]
   12100:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12104:	e51b200c 	ldr	r2, [fp, #-12]
   12108:	e2823001 	add	r3, r2, #1
   1210c:	e50b300c 	str	r3, [fp, #-12]
   12110:	e51b3008 	ldr	r3, [fp, #-8]
   12114:	e2831001 	add	r1, r3, #1
   12118:	e50b1008 	str	r1, [fp, #-8]
   1211c:	e5d22000 	ldrb	r2, [r2]
   12120:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12124:	e51b200c 	ldr	r2, [fp, #-12]
   12128:	e2823001 	add	r3, r2, #1
   1212c:	e50b300c 	str	r3, [fp, #-12]
   12130:	e51b3008 	ldr	r3, [fp, #-8]
   12134:	e2831001 	add	r1, r3, #1
   12138:	e50b1008 	str	r1, [fp, #-8]
   1213c:	e5d22000 	ldrb	r2, [r2]
   12140:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12144:	e51b200c 	ldr	r2, [fp, #-12]
   12148:	e2823001 	add	r3, r2, #1
   1214c:	e50b300c 	str	r3, [fp, #-12]
   12150:	e51b3008 	ldr	r3, [fp, #-8]
   12154:	e2831001 	add	r1, r3, #1
   12158:	e50b1008 	str	r1, [fp, #-8]
   1215c:	e5d22000 	ldrb	r2, [r2]
   12160:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12164:	e51b200c 	ldr	r2, [fp, #-12]
   12168:	e2823001 	add	r3, r2, #1
   1216c:	e50b300c 	str	r3, [fp, #-12]
   12170:	e51b3008 	ldr	r3, [fp, #-8]
   12174:	e2831001 	add	r1, r3, #1
   12178:	e50b1008 	str	r1, [fp, #-8]
   1217c:	e5d22000 	ldrb	r2, [r2]
   12180:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12184:	e51b200c 	ldr	r2, [fp, #-12]
   12188:	e2823001 	add	r3, r2, #1
   1218c:	e50b300c 	str	r3, [fp, #-12]
   12190:	e51b3008 	ldr	r3, [fp, #-8]
   12194:	e2831001 	add	r1, r3, #1
   12198:	e50b1008 	str	r1, [fp, #-8]
   1219c:	e5d22000 	ldrb	r2, [r2]
   121a0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   121a4:	e51b200c 	ldr	r2, [fp, #-12]
   121a8:	e2823001 	add	r3, r2, #1
   121ac:	e50b300c 	str	r3, [fp, #-12]
   121b0:	e51b3008 	ldr	r3, [fp, #-8]
   121b4:	e2831001 	add	r1, r3, #1
   121b8:	e50b1008 	str	r1, [fp, #-8]
   121bc:	e5d22000 	ldrb	r2, [r2]
   121c0:	e5c32000 	strb	r2, [r3]
    }
    if (n & 4) {
   121c4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   121c8:	e2033004 	and	r3, r3, #4
   121cc:	e3530000 	cmp	r3, #0
   121d0:	0a00001f 	beq	12254 <__sel4runtime_memcpy+0x9e0>
        *d++ = *s++;
   121d4:	e51b200c 	ldr	r2, [fp, #-12]
   121d8:	e2823001 	add	r3, r2, #1
   121dc:	e50b300c 	str	r3, [fp, #-12]
   121e0:	e51b3008 	ldr	r3, [fp, #-8]
   121e4:	e2831001 	add	r1, r3, #1
   121e8:	e50b1008 	str	r1, [fp, #-8]
   121ec:	e5d22000 	ldrb	r2, [r2]
   121f0:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   121f4:	e51b200c 	ldr	r2, [fp, #-12]
   121f8:	e2823001 	add	r3, r2, #1
   121fc:	e50b300c 	str	r3, [fp, #-12]
   12200:	e51b3008 	ldr	r3, [fp, #-8]
   12204:	e2831001 	add	r1, r3, #1
   12208:	e50b1008 	str	r1, [fp, #-8]
   1220c:	e5d22000 	ldrb	r2, [r2]
   12210:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12214:	e51b200c 	ldr	r2, [fp, #-12]
   12218:	e2823001 	add	r3, r2, #1
   1221c:	e50b300c 	str	r3, [fp, #-12]
   12220:	e51b3008 	ldr	r3, [fp, #-8]
   12224:	e2831001 	add	r1, r3, #1
   12228:	e50b1008 	str	r1, [fp, #-8]
   1222c:	e5d22000 	ldrb	r2, [r2]
   12230:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12234:	e51b200c 	ldr	r2, [fp, #-12]
   12238:	e2823001 	add	r3, r2, #1
   1223c:	e50b300c 	str	r3, [fp, #-12]
   12240:	e51b3008 	ldr	r3, [fp, #-8]
   12244:	e2831001 	add	r1, r3, #1
   12248:	e50b1008 	str	r1, [fp, #-8]
   1224c:	e5d22000 	ldrb	r2, [r2]
   12250:	e5c32000 	strb	r2, [r3]
    }
    if (n & 2) {
   12254:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   12258:	e2033002 	and	r3, r3, #2
   1225c:	e3530000 	cmp	r3, #0
   12260:	0a00000f 	beq	122a4 <__sel4runtime_memcpy+0xa30>
        *d++ = *s++;
   12264:	e51b200c 	ldr	r2, [fp, #-12]
   12268:	e2823001 	add	r3, r2, #1
   1226c:	e50b300c 	str	r3, [fp, #-12]
   12270:	e51b3008 	ldr	r3, [fp, #-8]
   12274:	e2831001 	add	r1, r3, #1
   12278:	e50b1008 	str	r1, [fp, #-8]
   1227c:	e5d22000 	ldrb	r2, [r2]
   12280:	e5c32000 	strb	r2, [r3]
        *d++ = *s++;
   12284:	e51b200c 	ldr	r2, [fp, #-12]
   12288:	e2823001 	add	r3, r2, #1
   1228c:	e50b300c 	str	r3, [fp, #-12]
   12290:	e51b3008 	ldr	r3, [fp, #-8]
   12294:	e2831001 	add	r1, r3, #1
   12298:	e50b1008 	str	r1, [fp, #-8]
   1229c:	e5d22000 	ldrb	r2, [r2]
   122a0:	e5c32000 	strb	r2, [r3]
    }
    if (n & 1) {
   122a4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   122a8:	e2033001 	and	r3, r3, #1
   122ac:	e3530000 	cmp	r3, #0
   122b0:	0a000003 	beq	122c4 <__sel4runtime_memcpy+0xa50>
        *d = *s;
   122b4:	e51b300c 	ldr	r3, [fp, #-12]
   122b8:	e5d32000 	ldrb	r2, [r3]
   122bc:	e51b3008 	ldr	r3, [fp, #-8]
   122c0:	e5c32000 	strb	r2, [r3]
    }
    return dest;
   122c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8

    for (; n; n--) {
        *d++ = *s++;
    }
    return dest;
}
   122c8:	e1a00003 	mov	r0, r3
   122cc:	e28bd000 	add	sp, fp, #0
   122d0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   122d4:	e12fff1e 	bx	lr

000122d8 <__sel4runtime_vsyscall>:
 * SPDX-License-Identifier: BSD-2-Clause
 */

/* If no vsyscall implementation is provided, this dummy one is used. */
long __sel4runtime_vsyscall(long sysnum, ...)
{
   122d8:	e92d000f 	push	{r0, r1, r2, r3}
   122dc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   122e0:	e28db000 	add	fp, sp, #0
    return -1;
   122e4:	e3e03000 	mvn	r3, #0
}
   122e8:	e1a00003 	mov	r0, r3
   122ec:	e28bd000 	add	sp, fp, #0
   122f0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   122f4:	e28dd010 	add	sp, sp, #16
   122f8:	e12fff1e 	bx	lr

000122fc <__aeabi_read_tp>:
 */
.syntax unified
.global __aeabi_read_tp
.type __aeabi_read_tp,%function
__aeabi_read_tp:
	push {r1,r2,r3,lr}
   122fc:	e92d400e 	push	{r1, r2, r3, lr}
	bl __aeabi_read_tp_c
   12300:	eb000011 	bl	1234c <__aeabi_read_tp_c>
	pop {r1,r2,r3,lr}
   12304:	e8bd400e 	pop	{r1, r2, r3, lr}
	bx lr
   12308:	e12fff1e 	bx	lr

0001230c <sel4runtime_read_tpidr_el0>:
{
   1230c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   12310:	e28db000 	add	fp, sp, #0
   12314:	e24dd00c 	sub	sp, sp, #12
    __asm__ __volatile__("mrc p15,0,%0,c13,c0,2" : "=r"(reg));
   12318:	ee1d3f50 	mrc	15, 0, r3, cr13, cr0, {2}
   1231c:	e50b3008 	str	r3, [fp, #-8]
    return reg;
   12320:	e51b3008 	ldr	r3, [fp, #-8]
}
   12324:	e1a00003 	mov	r0, r3
   12328:	e28bd000 	add	sp, fp, #0
   1232c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   12330:	e12fff1e 	bx	lr

00012334 <sel4runtime_get_tls_base>:
{
   12334:	e92d4800 	push	{fp, lr}
   12338:	e28db004 	add	fp, sp, #4
    return sel4runtime_read_tpidr_el0();
   1233c:	ebfffff2 	bl	1230c <sel4runtime_read_tpidr_el0>
   12340:	e1a03000 	mov	r3, r0
}
   12344:	e1a00003 	mov	r0, r3
   12348:	e8bd8800 	pop	{fp, pc}

0001234c <__aeabi_read_tp_c>:
#include <sel4/sel4.h>
#include <sel4runtime/thread_arch.h>

__attribute__((__visibility__("hidden")))
void *__aeabi_read_tp_c(void)
{
   1234c:	e92d4800 	push	{fp, lr}
   12350:	e28db004 	add	fp, sp, #4
    return (void *)sel4runtime_get_tls_base();
   12354:	ebfffff6 	bl	12334 <sel4runtime_get_tls_base>
   12358:	e1a03000 	mov	r3, r0
}
   1235c:	e1a00003 	mov	r0, r3
   12360:	e8bd8800 	pop	{fp, pc}

00012364 <seL4_InitBootInfo>:
/** Consider moving bootinfo into libsel4_startup */
seL4_BootInfo *bootinfo;

/** Consider moving seL4_InitBootInfo into libsel4_startup */
void seL4_InitBootInfo(seL4_BootInfo *bi)
{
   12364:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   12368:	e28db000 	add	fp, sp, #0
   1236c:	e24dd00c 	sub	sp, sp, #12
   12370:	e50b0008 	str	r0, [fp, #-8]
    bootinfo = bi;
   12374:	e3083a80 	movw	r3, #35456	; 0x8a80
   12378:	e3403004 	movt	r3, #4
   1237c:	e51b2008 	ldr	r2, [fp, #-8]
   12380:	e5832000 	str	r2, [r3]
}
   12384:	e320f000 	nop	{0}
   12388:	e28bd000 	add	sp, fp, #0
   1238c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   12390:	e12fff1e 	bx	lr

00012394 <seL4_GetBootInfo>:

seL4_BootInfo *seL4_GetBootInfo()
{
   12394:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   12398:	e28db000 	add	fp, sp, #0
    return bootinfo;
   1239c:	e3083a80 	movw	r3, #35456	; 0x8a80
   123a0:	e3403004 	movt	r3, #4
   123a4:	e5933000 	ldr	r3, [r3]
}
   123a8:	e1a00003 	mov	r0, r3
   123ac:	e28bd000 	add	sp, fp, #0
   123b0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   123b4:	e12fff1e 	bx	lr

000123b8 <arm_sys_send_recv>:
{
   123b8:	e92d08b0 	push	{r4, r5, r7, fp}
   123bc:	e28db00c 	add	fp, sp, #12
   123c0:	e24dd010 	sub	sp, sp, #16
   123c4:	e50b0010 	str	r0, [fp, #-16]
   123c8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   123cc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   123d0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    register seL4_Word destptr asm("r0") = dest;
   123d4:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    register seL4_Word info asm("r1") = info_arg;
   123d8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   123dc:	e59b3008 	ldr	r3, [fp, #8]
   123e0:	e5933000 	ldr	r3, [r3]
   123e4:	e1a02003 	mov	r2, r3
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   123e8:	e59b300c 	ldr	r3, [fp, #12]
   123ec:	e5933000 	ldr	r3, [r3]
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   123f0:	e59bc010 	ldr	ip, [fp, #16]
   123f4:	e59cc000 	ldr	ip, [ip]
   123f8:	e1a0400c 	mov	r4, ip
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   123fc:	e59bc014 	ldr	ip, [fp, #20]
   12400:	e59cc000 	ldr	ip, [ip]
   12404:	e1a0500c 	mov	r5, ip
    register seL4_Word scno asm("r7") = sys;
   12408:	e51b7010 	ldr	r7, [fp, #-16]
    asm volatile(
   1240c:	ef000000 	svc	0x00000000
    *out_info = info;
   12410:	e1a0c001 	mov	ip, r1
   12414:	e59b1004 	ldr	r1, [fp, #4]
   12418:	e581c000 	str	ip, [r1]
    *out_badge = destptr;
   1241c:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   12420:	e5810000 	str	r0, [r1]
    *in_out_mr0 = msg0;
   12424:	e1a01002 	mov	r1, r2
   12428:	e59b2008 	ldr	r2, [fp, #8]
   1242c:	e5821000 	str	r1, [r2]
    *in_out_mr1 = msg1;
   12430:	e1a02003 	mov	r2, r3
   12434:	e59b300c 	ldr	r3, [fp, #12]
   12438:	e5832000 	str	r2, [r3]
    *in_out_mr2 = msg2;
   1243c:	e1a02004 	mov	r2, r4
   12440:	e59b3010 	ldr	r3, [fp, #16]
   12444:	e5832000 	str	r2, [r3]
    *in_out_mr3 = msg3;
   12448:	e1a02005 	mov	r2, r5
   1244c:	e59b3014 	ldr	r3, [fp, #20]
   12450:	e5832000 	str	r2, [r3]
}
   12454:	e320f000 	nop	{0}
   12458:	e24bd00c 	sub	sp, fp, #12
   1245c:	e8bd08b0 	pop	{r4, r5, r7, fp}
   12460:	e12fff1e 	bx	lr

00012464 <seL4_DebugPutChar>:
{
   12464:	e92d4800 	push	{fp, lr}
   12468:	e28db004 	add	fp, sp, #4
   1246c:	e24dd038 	sub	sp, sp, #56	; 0x38
   12470:	e1a03000 	mov	r3, r0
   12474:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
    seL4_Word unused0 = 0;
   12478:	e3a03000 	mov	r3, #0
   1247c:	e50b3008 	str	r3, [fp, #-8]
    seL4_Word unused1 = 0;
   12480:	e3a03000 	mov	r3, #0
   12484:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word unused2 = 0;
   12488:	e3a03000 	mov	r3, #0
   1248c:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word unused3 = 0;
   12490:	e3a03000 	mov	r3, #0
   12494:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word unused4 = 0;
   12498:	e3a03000 	mov	r3, #0
   1249c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    seL4_Word unused5 = 0;
   124a0:	e3a03000 	mov	r3, #0
   124a4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    arm_sys_send_recv(seL4_SysDebugPutChar, c, &unused0, 0, &unused1, &unused2, &unused3, &unused4, &unused5, 0);
   124a8:	e55b101d 	ldrb	r1, [fp, #-29]	; 0xffffffe3
   124ac:	e24b2008 	sub	r2, fp, #8
   124b0:	e3a03000 	mov	r3, #0
   124b4:	e58d3014 	str	r3, [sp, #20]
   124b8:	e24b301c 	sub	r3, fp, #28
   124bc:	e58d3010 	str	r3, [sp, #16]
   124c0:	e24b3018 	sub	r3, fp, #24
   124c4:	e58d300c 	str	r3, [sp, #12]
   124c8:	e24b3014 	sub	r3, fp, #20
   124cc:	e58d3008 	str	r3, [sp, #8]
   124d0:	e24b3010 	sub	r3, fp, #16
   124d4:	e58d3004 	str	r3, [sp, #4]
   124d8:	e24b300c 	sub	r3, fp, #12
   124dc:	e58d3000 	str	r3, [sp]
   124e0:	e3a03000 	mov	r3, #0
   124e4:	e3e00008 	mvn	r0, #8
   124e8:	ebffffb2 	bl	123b8 <arm_sys_send_recv>
}
   124ec:	e320f000 	nop	{0}
   124f0:	e24bd004 	sub	sp, fp, #4
   124f4:	e8bd8800 	pop	{fp, pc}

000124f8 <kernel_putchar_write>:
#include <arch_stdio.h>
#include <utils/attribute.h>

/* allow printf to use kernel debug printing */
size_t kernel_putchar_write(void *data, size_t count)
{
   124f8:	e92d4800 	push	{fp, lr}
   124fc:	e28db004 	add	fp, sp, #4
   12500:	e24dd010 	sub	sp, sp, #16
   12504:	e50b0010 	str	r0, [fp, #-16]
   12508:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
#ifdef CONFIG_DEBUG_BUILD
    char *cdata = (char *)data;
   1250c:	e51b3010 	ldr	r3, [fp, #-16]
   12510:	e50b300c 	str	r3, [fp, #-12]
    for (size_t i = 0; i < count; i++) {
   12514:	e3a03000 	mov	r3, #0
   12518:	e50b3008 	str	r3, [fp, #-8]
   1251c:	ea000008 	b	12544 <kernel_putchar_write+0x4c>
        seL4_DebugPutChar(cdata[i]);
   12520:	e51b200c 	ldr	r2, [fp, #-12]
   12524:	e51b3008 	ldr	r3, [fp, #-8]
   12528:	e0823003 	add	r3, r2, r3
   1252c:	e5d33000 	ldrb	r3, [r3]
   12530:	e1a00003 	mov	r0, r3
   12534:	ebffffca 	bl	12464 <seL4_DebugPutChar>
    for (size_t i = 0; i < count; i++) {
   12538:	e51b3008 	ldr	r3, [fp, #-8]
   1253c:	e2833001 	add	r3, r3, #1
   12540:	e50b3008 	str	r3, [fp, #-8]
   12544:	e51b2008 	ldr	r2, [fp, #-8]
   12548:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1254c:	e1520003 	cmp	r2, r3
   12550:	3afffff2 	bcc	12520 <kernel_putchar_write+0x28>
    }
#endif
    return count;
   12554:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   12558:	e1a00003 	mov	r0, r3
   1255c:	e24bd004 	sub	sp, fp, #4
   12560:	e8bd8800 	pop	{fp, pc}

00012564 <register_debug_putchar>:

void CONSTRUCTOR(200) register_debug_putchar(void)
{
   12564:	e92d4800 	push	{fp, lr}
   12568:	e28db004 	add	fp, sp, #4
    sel4muslcsys_register_stdio_write_fn(kernel_putchar_write);
   1256c:	e30204f8 	movw	r0, #9464	; 0x24f8
   12570:	e3400001 	movt	r0, #1
   12574:	eb0002ba 	bl	13064 <sel4muslcsys_register_stdio_write_fn>
}
   12578:	e320f000 	nop	{0}
   1257c:	e8bd8800 	pop	{fp, pc}

00012580 <name_thread>:

/* set a thread's name for debugging purposes */
void name_thread(seL4_CPtr tcb, char *name)
{
   12580:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   12584:	e28db000 	add	fp, sp, #0
   12588:	e24dd00c 	sub	sp, sp, #12
   1258c:	e50b0008 	str	r0, [fp, #-8]
   12590:	e50b100c 	str	r1, [fp, #-12]
#ifdef SEL4_DEBUG_KERNEL
    seL4_DebugNameThread(tcb, name);
#endif
}
   12594:	e320f000 	nop	{0}
   12598:	e28bd000 	add	sp, fp, #0
   1259c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   125a0:	e12fff1e 	bx	lr

000125a4 <add_free_fd>:
static int free_fd_table_index;
/* total number of fds */
static int num_fds = 256;

void add_free_fd(int fd)
{
   125a4:	e92d4800 	push	{fp, lr}
   125a8:	e28db004 	add	fp, sp, #4
   125ac:	e24dd008 	sub	sp, sp, #8
   125b0:	e50b0008 	str	r0, [fp, #-8]
    get_fd_struct(fd)->filetype = FILE_TYPE_FREE;
   125b4:	e51b0008 	ldr	r0, [fp, #-8]
   125b8:	eb000139 	bl	12aa4 <get_fd_struct>
   125bc:	e1a03000 	mov	r3, r0
   125c0:	e3e02000 	mvn	r2, #0
   125c4:	e5832000 	str	r2, [r3]
    free_fd_table_index++;
   125c8:	e3083064 	movw	r3, #32868	; 0x8064
   125cc:	e3403004 	movt	r3, #4
   125d0:	e5933000 	ldr	r3, [r3]
   125d4:	e2832001 	add	r2, r3, #1
   125d8:	e3083064 	movw	r3, #32868	; 0x8064
   125dc:	e3403004 	movt	r3, #4
   125e0:	e5832000 	str	r2, [r3]
    assert(free_fd_table_index < num_fds);
   125e4:	e3083064 	movw	r3, #32868	; 0x8064
   125e8:	e3403004 	movt	r3, #4
   125ec:	e5932000 	ldr	r2, [r3]
   125f0:	e30c3004 	movw	r3, #49156	; 0xc004
   125f4:	e3403002 	movt	r3, #2
   125f8:	e5933000 	ldr	r3, [r3]
   125fc:	e1520003 	cmp	r2, r3
   12600:	ba000007 	blt	12624 <add_free_fd+0x80>
   12604:	e3073900 	movw	r3, #30976	; 0x7900
   12608:	e3403002 	movt	r3, #2
   1260c:	e3a0203c 	mov	r2, #60	; 0x3c
   12610:	e30716ac 	movw	r1, #30380	; 0x76ac
   12614:	e3401002 	movt	r1, #2
   12618:	e307070c 	movw	r0, #30476	; 0x770c
   1261c:	e3400002 	movt	r0, #2
   12620:	eb002fd1 	bl	1e56c <__assert_fail>
    free_fd_table[free_fd_table_index] = fd;
   12624:	e3083060 	movw	r3, #32864	; 0x8060
   12628:	e3403004 	movt	r3, #4
   1262c:	e5932000 	ldr	r2, [r3]
   12630:	e3083064 	movw	r3, #32868	; 0x8064
   12634:	e3403004 	movt	r3, #4
   12638:	e5933000 	ldr	r3, [r3]
   1263c:	e1a03103 	lsl	r3, r3, #2
   12640:	e0823003 	add	r3, r2, r3
   12644:	e51b2008 	ldr	r2, [fp, #-8]
   12648:	e5832000 	str	r2, [r3]
}
   1264c:	e320f000 	nop	{0}
   12650:	e24bd004 	sub	sp, fp, #4
   12654:	e8bd8800 	pop	{fp, pc}

00012658 <get_free_fd>:

int get_free_fd(void)
{
   12658:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1265c:	e28db000 	add	fp, sp, #0
    if (free_fd_table_index == -1) {
   12660:	e3083064 	movw	r3, #32868	; 0x8064
   12664:	e3403004 	movt	r3, #4
   12668:	e5933000 	ldr	r3, [r3]
   1266c:	e3730001 	cmn	r3, #1
   12670:	1a000001 	bne	1267c <get_free_fd+0x24>
        return -EMFILE;
   12674:	e3e03017 	mvn	r3, #23
   12678:	ea000010 	b	126c0 <get_free_fd+0x68>
    }

    free_fd_table_index--;
   1267c:	e3083064 	movw	r3, #32868	; 0x8064
   12680:	e3403004 	movt	r3, #4
   12684:	e5933000 	ldr	r3, [r3]
   12688:	e2432001 	sub	r2, r3, #1
   1268c:	e3083064 	movw	r3, #32868	; 0x8064
   12690:	e3403004 	movt	r3, #4
   12694:	e5832000 	str	r2, [r3]
    return free_fd_table[free_fd_table_index + 1];
   12698:	e3083060 	movw	r3, #32864	; 0x8060
   1269c:	e3403004 	movt	r3, #4
   126a0:	e5932000 	ldr	r2, [r3]
   126a4:	e3083064 	movw	r3, #32868	; 0x8064
   126a8:	e3403004 	movt	r3, #4
   126ac:	e5933000 	ldr	r3, [r3]
   126b0:	e2833001 	add	r3, r3, #1
   126b4:	e1a03103 	lsl	r3, r3, #2
   126b8:	e0823003 	add	r3, r2, r3
   126bc:	e5933000 	ldr	r3, [r3]
}
   126c0:	e1a00003 	mov	r0, r3
   126c4:	e28bd000 	add	sp, fp, #0
   126c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   126cc:	e12fff1e 	bx	lr

000126d0 <valid_fd>:

int valid_fd(int fd)
{
   126d0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   126d4:	e28db000 	add	fp, sp, #0
   126d8:	e24dd00c 	sub	sp, sp, #12
   126dc:	e50b0008 	str	r0, [fp, #-8]
    return fd < num_fds && fd >= FIRST_USER_FD;
   126e0:	e30c3004 	movw	r3, #49156	; 0xc004
   126e4:	e3403002 	movt	r3, #2
   126e8:	e5933000 	ldr	r3, [r3]
   126ec:	e51b2008 	ldr	r2, [fp, #-8]
   126f0:	e1520003 	cmp	r2, r3
   126f4:	aa000004 	bge	1270c <valid_fd+0x3c>
   126f8:	e51b3008 	ldr	r3, [fp, #-8]
   126fc:	e3530002 	cmp	r3, #2
   12700:	da000001 	ble	1270c <valid_fd+0x3c>
   12704:	e3a03001 	mov	r3, #1
   12708:	ea000000 	b	12710 <valid_fd+0x40>
   1270c:	e3a03000 	mov	r3, #0
}
   12710:	e1a00003 	mov	r0, r3
   12714:	e28bd000 	add	sp, fp, #0
   12718:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1271c:	e12fff1e 	bx	lr

00012720 <allocate_file_table>:

static int allocate_file_table(void)
{
   12720:	e92d4800 	push	{fp, lr}
   12724:	e28db004 	add	fp, sp, #4
   12728:	e24dd008 	sub	sp, sp, #8
    fd_table = malloc(FD_TABLE_SIZE(num_fds));
   1272c:	e30c3004 	movw	r3, #49156	; 0xc004
   12730:	e3403002 	movt	r3, #2
   12734:	e5933000 	ldr	r3, [r3]
   12738:	e1a03183 	lsl	r3, r3, #3
   1273c:	e1a00003 	mov	r0, r3
   12740:	eb003166 	bl	1ece0 <malloc>
   12744:	e1a03000 	mov	r3, r0
   12748:	e1a02003 	mov	r2, r3
   1274c:	e308305c 	movw	r3, #32860	; 0x805c
   12750:	e3403004 	movt	r3, #4
   12754:	e5832000 	str	r2, [r3]
    if (fd_table == NULL) {
   12758:	e308305c 	movw	r3, #32860	; 0x805c
   1275c:	e3403004 	movt	r3, #4
   12760:	e5933000 	ldr	r3, [r3]
   12764:	e3530000 	cmp	r3, #0
   12768:	1a000001 	bne	12774 <allocate_file_table+0x54>
        return -ENOMEM;
   1276c:	e3e0300b 	mvn	r3, #11
   12770:	ea00002a 	b	12820 <allocate_file_table+0x100>
    }

    free_fd_table = malloc(FREE_FD_TABLE_SIZE(num_fds));
   12774:	e30c3004 	movw	r3, #49156	; 0xc004
   12778:	e3403002 	movt	r3, #2
   1277c:	e5933000 	ldr	r3, [r3]
   12780:	e2433003 	sub	r3, r3, #3
   12784:	e1a03103 	lsl	r3, r3, #2
   12788:	e1a00003 	mov	r0, r3
   1278c:	eb003153 	bl	1ece0 <malloc>
   12790:	e1a03000 	mov	r3, r0
   12794:	e1a02003 	mov	r2, r3
   12798:	e3083060 	movw	r3, #32864	; 0x8060
   1279c:	e3403004 	movt	r3, #4
   127a0:	e5832000 	str	r2, [r3]
    if (free_fd_table == NULL) {
   127a4:	e3083060 	movw	r3, #32864	; 0x8060
   127a8:	e3403004 	movt	r3, #4
   127ac:	e5933000 	ldr	r3, [r3]
   127b0:	e3530000 	cmp	r3, #0
   127b4:	1a000006 	bne	127d4 <allocate_file_table+0xb4>
        free(fd_table);
   127b8:	e308305c 	movw	r3, #32860	; 0x805c
   127bc:	e3403004 	movt	r3, #4
   127c0:	e5933000 	ldr	r3, [r3]
   127c4:	e1a00003 	mov	r0, r3
   127c8:	eb0030a5 	bl	1ea64 <free>
        return -ENOMEM;
   127cc:	e3e0300b 	mvn	r3, #11
   127d0:	ea000012 	b	12820 <allocate_file_table+0x100>
    }

    free_fd_table_index = -1;
   127d4:	e3083064 	movw	r3, #32868	; 0x8064
   127d8:	e3403004 	movt	r3, #4
   127dc:	e3e02000 	mvn	r2, #0
   127e0:	e5832000 	str	r2, [r3]

    /* populate free list */
    for (int i = FIRST_USER_FD; i < num_fds; i++) {
   127e4:	e3a03003 	mov	r3, #3
   127e8:	e50b3008 	str	r3, [fp, #-8]
   127ec:	ea000004 	b	12804 <allocate_file_table+0xe4>
        add_free_fd(i);
   127f0:	e51b0008 	ldr	r0, [fp, #-8]
   127f4:	ebffff6a 	bl	125a4 <add_free_fd>
    for (int i = FIRST_USER_FD; i < num_fds; i++) {
   127f8:	e51b3008 	ldr	r3, [fp, #-8]
   127fc:	e2833001 	add	r3, r3, #1
   12800:	e50b3008 	str	r3, [fp, #-8]
   12804:	e30c3004 	movw	r3, #49156	; 0xc004
   12808:	e3403002 	movt	r3, #2
   1280c:	e5933000 	ldr	r3, [r3]
   12810:	e51b2008 	ldr	r2, [fp, #-8]
   12814:	e1520003 	cmp	r2, r3
   12818:	bafffff4 	blt	127f0 <allocate_file_table+0xd0>
    }

    return 0;
   1281c:	e3a03000 	mov	r3, #0
}
   12820:	e1a00003 	mov	r0, r3
   12824:	e24bd004 	sub	sp, fp, #4
   12828:	e8bd8800 	pop	{fp, pc}

0001282c <grow_fds>:

int grow_fds(int how_much)
{
   1282c:	e92d4800 	push	{fp, lr}
   12830:	e28db004 	add	fp, sp, #4
   12834:	e24dd020 	sub	sp, sp, #32
   12838:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    int new_num_fds = num_fds + how_much;
   1283c:	e30c3004 	movw	r3, #49156	; 0xc004
   12840:	e3403002 	movt	r3, #2
   12844:	e5933000 	ldr	r3, [r3]
   12848:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1284c:	e0823003 	add	r3, r2, r3
   12850:	e50b300c 	str	r3, [fp, #-12]

    /* Ensure file table exists */
    if (fd_table == NULL) {
   12854:	e308305c 	movw	r3, #32860	; 0x805c
   12858:	e3403004 	movt	r3, #4
   1285c:	e5933000 	ldr	r3, [r3]
   12860:	e3530000 	cmp	r3, #0
   12864:	1a000005 	bne	12880 <grow_fds+0x54>
        if (allocate_file_table() == -ENOMEM) {
   12868:	ebffffac 	bl	12720 <allocate_file_table>
   1286c:	e1a03000 	mov	r3, r0
   12870:	e373000c 	cmn	r3, #12
   12874:	1a000001 	bne	12880 <grow_fds+0x54>
            return -ENOMEM;
   12878:	e3e0300b 	mvn	r3, #11
   1287c:	ea000074 	b	12a54 <grow_fds+0x228>
        }
    }

    /* allocate new arrays */
    muslcsys_fd_t *new_fd_table = malloc(FD_TABLE_SIZE(new_num_fds));
   12880:	e51b300c 	ldr	r3, [fp, #-12]
   12884:	e1a03183 	lsl	r3, r3, #3
   12888:	e1a00003 	mov	r0, r3
   1288c:	eb003113 	bl	1ece0 <malloc>
   12890:	e1a03000 	mov	r3, r0
   12894:	e50b3010 	str	r3, [fp, #-16]
    if (!new_fd_table) {
   12898:	e51b3010 	ldr	r3, [fp, #-16]
   1289c:	e3530000 	cmp	r3, #0
   128a0:	1a000012 	bne	128f0 <grow_fds+0xc4>
        LOG_ERROR("Failed to allocate new_vfds\n");
   128a4:	e3083104 	movw	r3, #33028	; 0x8104
   128a8:	e3403004 	movt	r3, #4
   128ac:	e5933000 	ldr	r3, [r3]
   128b0:	e3530005 	cmp	r3, #5
   128b4:	ca00000b 	bgt	128e8 <grow_fds+0xbc>
   128b8:	e307372c 	movw	r3, #30508	; 0x772c
   128bc:	e3403002 	movt	r3, #2
   128c0:	e58d3004 	str	r3, [sp, #4]
   128c4:	e3a03000 	mov	r3, #0
   128c8:	e58d3000 	str	r3, [sp]
   128cc:	e3a03005 	mov	r3, #5
   128d0:	e3a02074 	mov	r2, #116	; 0x74
   128d4:	e30716ac 	movw	r1, #30380	; 0x76ac
   128d8:	e3401002 	movt	r1, #2
   128dc:	e307090c 	movw	r0, #30988	; 0x790c
   128e0:	e3400002 	movt	r0, #2
   128e4:	eb002da7 	bl	1df88 <_zf_log_write_d>
        return -ENOMEM;
   128e8:	e3e0300b 	mvn	r3, #11
   128ec:	ea000058 	b	12a54 <grow_fds+0x228>
    }

    int *new_free_fd_table = malloc(FREE_FD_TABLE_SIZE(new_num_fds));
   128f0:	e51b300c 	ldr	r3, [fp, #-12]
   128f4:	e2433003 	sub	r3, r3, #3
   128f8:	e1a03103 	lsl	r3, r3, #2
   128fc:	e1a00003 	mov	r0, r3
   12900:	eb0030f6 	bl	1ece0 <malloc>
   12904:	e1a03000 	mov	r3, r0
   12908:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    if (!new_free_fd_table) {
   1290c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   12910:	e3530000 	cmp	r3, #0
   12914:	1a000014 	bne	1296c <grow_fds+0x140>
        free(new_fd_table);
   12918:	e51b0010 	ldr	r0, [fp, #-16]
   1291c:	eb003050 	bl	1ea64 <free>
        ZF_LOGE("Failed to allocate free fd table\n");
   12920:	e3083104 	movw	r3, #33028	; 0x8104
   12924:	e3403004 	movt	r3, #4
   12928:	e5933000 	ldr	r3, [r3]
   1292c:	e3530005 	cmp	r3, #5
   12930:	ca00000b 	bgt	12964 <grow_fds+0x138>
   12934:	e307374c 	movw	r3, #30540	; 0x774c
   12938:	e3403002 	movt	r3, #2
   1293c:	e58d3004 	str	r3, [sp, #4]
   12940:	e3a03000 	mov	r3, #0
   12944:	e58d3000 	str	r3, [sp]
   12948:	e3a03005 	mov	r3, #5
   1294c:	e3a0207b 	mov	r2, #123	; 0x7b
   12950:	e30716ac 	movw	r1, #30380	; 0x76ac
   12954:	e3401002 	movt	r1, #2
   12958:	e307090c 	movw	r0, #30988	; 0x790c
   1295c:	e3400002 	movt	r0, #2
   12960:	eb002d88 	bl	1df88 <_zf_log_write_d>
        return -ENOMEM;
   12964:	e3e0300b 	mvn	r3, #11
   12968:	ea000039 	b	12a54 <grow_fds+0x228>
    }

    /* copy old contents */
    memcpy(new_free_fd_table, free_fd_table, FREE_FD_TABLE_SIZE(num_fds));
   1296c:	e3083060 	movw	r3, #32864	; 0x8060
   12970:	e3403004 	movt	r3, #4
   12974:	e5931000 	ldr	r1, [r3]
   12978:	e30c3004 	movw	r3, #49156	; 0xc004
   1297c:	e3403002 	movt	r3, #2
   12980:	e5933000 	ldr	r3, [r3]
   12984:	e2433003 	sub	r3, r3, #3
   12988:	e1a03103 	lsl	r3, r3, #2
   1298c:	e1a02003 	mov	r2, r3
   12990:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   12994:	eb003b8a 	bl	217c4 <memcpy>
    memcpy(new_fd_table, fd_table, FD_TABLE_SIZE(num_fds));
   12998:	e308305c 	movw	r3, #32860	; 0x805c
   1299c:	e3403004 	movt	r3, #4
   129a0:	e5931000 	ldr	r1, [r3]
   129a4:	e30c3004 	movw	r3, #49156	; 0xc004
   129a8:	e3403002 	movt	r3, #2
   129ac:	e5933000 	ldr	r3, [r3]
   129b0:	e1a03183 	lsl	r3, r3, #3
   129b4:	e1a02003 	mov	r2, r3
   129b8:	e51b0010 	ldr	r0, [fp, #-16]
   129bc:	eb003b80 	bl	217c4 <memcpy>

    /* free old tables */
    free(fd_table);
   129c0:	e308305c 	movw	r3, #32860	; 0x805c
   129c4:	e3403004 	movt	r3, #4
   129c8:	e5933000 	ldr	r3, [r3]
   129cc:	e1a00003 	mov	r0, r3
   129d0:	eb003023 	bl	1ea64 <free>
    free(free_fd_table);
   129d4:	e3083060 	movw	r3, #32864	; 0x8060
   129d8:	e3403004 	movt	r3, #4
   129dc:	e5933000 	ldr	r3, [r3]
   129e0:	e1a00003 	mov	r0, r3
   129e4:	eb00301e 	bl	1ea64 <free>

    /* update global pointers */
    fd_table = new_fd_table;
   129e8:	e308305c 	movw	r3, #32860	; 0x805c
   129ec:	e3403004 	movt	r3, #4
   129f0:	e51b2010 	ldr	r2, [fp, #-16]
   129f4:	e5832000 	str	r2, [r3]
    free_fd_table = new_free_fd_table;
   129f8:	e3083060 	movw	r3, #32864	; 0x8060
   129fc:	e3403004 	movt	r3, #4
   12a00:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   12a04:	e5832000 	str	r2, [r3]

    /* Update the size */
    num_fds = new_num_fds;
   12a08:	e30c3004 	movw	r3, #49156	; 0xc004
   12a0c:	e3403002 	movt	r3, #2
   12a10:	e51b200c 	ldr	r2, [fp, #-12]
   12a14:	e5832000 	str	r2, [r3]

    /* add all of the new available fds to the free list */
    for (int i = num_fds; i < new_num_fds; i++) {
   12a18:	e30c3004 	movw	r3, #49156	; 0xc004
   12a1c:	e3403002 	movt	r3, #2
   12a20:	e5933000 	ldr	r3, [r3]
   12a24:	e50b3008 	str	r3, [fp, #-8]
   12a28:	ea000004 	b	12a40 <grow_fds+0x214>
        add_free_fd(i);
   12a2c:	e51b0008 	ldr	r0, [fp, #-8]
   12a30:	ebfffedb 	bl	125a4 <add_free_fd>
    for (int i = num_fds; i < new_num_fds; i++) {
   12a34:	e51b3008 	ldr	r3, [fp, #-8]
   12a38:	e2833001 	add	r3, r3, #1
   12a3c:	e50b3008 	str	r3, [fp, #-8]
   12a40:	e51b2008 	ldr	r2, [fp, #-8]
   12a44:	e51b300c 	ldr	r3, [fp, #-12]
   12a48:	e1520003 	cmp	r2, r3
   12a4c:	bafffff6 	blt	12a2c <grow_fds+0x200>
    }
    return 0;
   12a50:	e3a03000 	mov	r3, #0
}
   12a54:	e1a00003 	mov	r0, r3
   12a58:	e24bd004 	sub	sp, fp, #4
   12a5c:	e8bd8800 	pop	{fp, pc}

00012a60 <allocate_fd>:

int allocate_fd()
{
   12a60:	e92d4800 	push	{fp, lr}
   12a64:	e28db004 	add	fp, sp, #4
    if (fd_table == NULL) {
   12a68:	e308305c 	movw	r3, #32860	; 0x805c
   12a6c:	e3403004 	movt	r3, #4
   12a70:	e5933000 	ldr	r3, [r3]
   12a74:	e3530000 	cmp	r3, #0
   12a78:	1a000005 	bne	12a94 <allocate_fd+0x34>
        if (allocate_file_table() == -ENOMEM) {
   12a7c:	ebffff27 	bl	12720 <allocate_file_table>
   12a80:	e1a03000 	mov	r3, r0
   12a84:	e373000c 	cmn	r3, #12
   12a88:	1a000001 	bne	12a94 <allocate_fd+0x34>
            return -ENOMEM;
   12a8c:	e3e0300b 	mvn	r3, #11
   12a90:	ea000001 	b	12a9c <allocate_fd+0x3c>
        }
    }

    return get_free_fd();
   12a94:	ebfffeef 	bl	12658 <get_free_fd>
   12a98:	e1a03000 	mov	r3, r0
}
   12a9c:	e1a00003 	mov	r0, r3
   12aa0:	e8bd8800 	pop	{fp, pc}

00012aa4 <get_fd_struct>:

muslcsys_fd_t *get_fd_struct(int fd)
{
   12aa4:	e92d4800 	push	{fp, lr}
   12aa8:	e28db004 	add	fp, sp, #4
   12aac:	e24dd008 	sub	sp, sp, #8
   12ab0:	e50b0008 	str	r0, [fp, #-8]
    assert(fd < num_fds && fd >= FIRST_USER_FD);
   12ab4:	e30c3004 	movw	r3, #49156	; 0xc004
   12ab8:	e3403002 	movt	r3, #2
   12abc:	e5933000 	ldr	r3, [r3]
   12ac0:	e51b2008 	ldr	r2, [fp, #-8]
   12ac4:	e1520003 	cmp	r2, r3
   12ac8:	aa000002 	bge	12ad8 <get_fd_struct+0x34>
   12acc:	e51b3008 	ldr	r3, [fp, #-8]
   12ad0:	e3530002 	cmp	r3, #2
   12ad4:	ca000007 	bgt	12af8 <get_fd_struct+0x54>
   12ad8:	e3073918 	movw	r3, #31000	; 0x7918
   12adc:	e3403002 	movt	r3, #2
   12ae0:	e3a020a2 	mov	r2, #162	; 0xa2
   12ae4:	e30716ac 	movw	r1, #30380	; 0x76ac
   12ae8:	e3401002 	movt	r1, #2
   12aec:	e3070770 	movw	r0, #30576	; 0x7770
   12af0:	e3400002 	movt	r0, #2
   12af4:	eb002e9c 	bl	1e56c <__assert_fail>
    return &fd_table[fd - FIRST_USER_FD];
   12af8:	e308305c 	movw	r3, #32860	; 0x805c
   12afc:	e3403004 	movt	r3, #4
   12b00:	e5932000 	ldr	r2, [r3]
   12b04:	e51b3008 	ldr	r3, [fp, #-8]
   12b08:	e243323e 	sub	r3, r3, #-536870909	; 0xe0000003
   12b0c:	e1a03183 	lsl	r3, r3, #3
   12b10:	e0823003 	add	r3, r2, r3
}
   12b14:	e1a00003 	mov	r0, r3
   12b18:	e24bd004 	sub	sp, fp, #4
   12b1c:	e8bd8800 	pop	{fp, pc}

00012b20 <sys_platform_write>:

static size_t sys_platform_write(void *data, size_t count)
{
   12b20:	e92d4800 	push	{fp, lr}
   12b24:	e28db004 	add	fp, sp, #4
   12b28:	e24dd010 	sub	sp, sp, #16
   12b2c:	e50b0010 	str	r0, [fp, #-16]
   12b30:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    char *realdata = data;
   12b34:	e51b3010 	ldr	r3, [fp, #-16]
   12b38:	e50b3008 	str	r3, [fp, #-8]
    return __arch_write(realdata, count);
   12b3c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   12b40:	e51b0008 	ldr	r0, [fp, #-8]
   12b44:	eb000e61 	bl	164d0 <__arch_write>
   12b48:	e1a03000 	mov	r3, r0
}
   12b4c:	e1a00003 	mov	r0, r3
   12b50:	e24bd004 	sub	sp, fp, #4
   12b54:	e8bd8800 	pop	{fp, pc}

00012b58 <sys_open_impl>:

static long sys_open_impl(const char *pathname, int flags, mode_t mode)
{
   12b58:	e92d4810 	push	{r4, fp, lr}
   12b5c:	e28db008 	add	fp, sp, #8
   12b60:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   12b64:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   12b68:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
   12b6c:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
    /* mask out flags we can support */
    flags &= ~O_LARGEFILE;
   12b70:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   12b74:	e3c33802 	bic	r3, r3, #131072	; 0x20000
   12b78:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    /* only support reading in basic modes */
    if (flags != O_RDONLY) {
   12b7c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   12b80:	e3530000 	cmp	r3, #0
   12b84:	0a000021 	beq	12c10 <sys_open_impl+0xb8>
        ZF_LOGE("Open only supports O_RDONLY, not 0x%x on %s\n", flags, pathname);
   12b88:	e3083104 	movw	r3, #33028	; 0x8104
   12b8c:	e3403004 	movt	r3, #4
   12b90:	e5933000 	ldr	r3, [r3]
   12b94:	e3530005 	cmp	r3, #5
   12b98:	ca00000f 	bgt	12bdc <sys_open_impl+0x84>
   12b9c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ba0:	e58d300c 	str	r3, [sp, #12]
   12ba4:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   12ba8:	e58d3008 	str	r3, [sp, #8]
   12bac:	e3073794 	movw	r3, #30612	; 0x7794
   12bb0:	e3403002 	movt	r3, #2
   12bb4:	e58d3004 	str	r3, [sp, #4]
   12bb8:	e3a03000 	mov	r3, #0
   12bbc:	e58d3000 	str	r3, [sp]
   12bc0:	e3a03005 	mov	r3, #5
   12bc4:	e3a020b2 	mov	r2, #178	; 0xb2
   12bc8:	e30716ac 	movw	r1, #30380	; 0x76ac
   12bcc:	e3401002 	movt	r1, #2
   12bd0:	e3070928 	movw	r0, #31016	; 0x7928
   12bd4:	e3400002 	movt	r0, #2
   12bd8:	eb002cea 	bl	1df88 <_zf_log_write_d>
        assert(flags == O_RDONLY);
   12bdc:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   12be0:	e3530000 	cmp	r3, #0
   12be4:	0a000007 	beq	12c08 <sys_open_impl+0xb0>
   12be8:	e3073928 	movw	r3, #31016	; 0x7928
   12bec:	e3403002 	movt	r3, #2
   12bf0:	e3a020b3 	mov	r2, #179	; 0xb3
   12bf4:	e30716ac 	movw	r1, #30380	; 0x76ac
   12bf8:	e3401002 	movt	r1, #2
   12bfc:	e30707c4 	movw	r0, #30660	; 0x77c4
   12c00:	e3400002 	movt	r0, #2
   12c04:	eb002e58 	bl	1e56c <__assert_fail>
        return -EINVAL;
   12c08:	e3e03015 	mvn	r3, #21
   12c0c:	ea000094 	b	12e64 <sys_open_impl+0x30c>
    }
    /* as we do not support create, ignore the mode */
    long unsigned int size;
    char const *file = NULL;
   12c10:	e3a03000 	mov	r3, #0
   12c14:	e50b3010 	str	r3, [fp, #-16]
    if (cpio_get_file_impl && cpio_archive_symbol) {
   12c18:	e3083058 	movw	r3, #32856	; 0x8058
   12c1c:	e3403004 	movt	r3, #4
   12c20:	e5933000 	ldr	r3, [r3]
   12c24:	e3530000 	cmp	r3, #0
   12c28:	0a00002a 	beq	12cd8 <sys_open_impl+0x180>
   12c2c:	e3083050 	movw	r3, #32848	; 0x8050
   12c30:	e3403004 	movt	r3, #4
   12c34:	e5933000 	ldr	r3, [r3]
   12c38:	e3530000 	cmp	r3, #0
   12c3c:	0a000025 	beq	12cd8 <sys_open_impl+0x180>
        file = cpio_get_file_impl(cpio_archive_symbol, cpio_archive_len, pathname, &size);
   12c40:	e3083058 	movw	r3, #32856	; 0x8058
   12c44:	e3403004 	movt	r3, #4
   12c48:	e5934000 	ldr	r4, [r3]
   12c4c:	e3083050 	movw	r3, #32848	; 0x8050
   12c50:	e3403004 	movt	r3, #4
   12c54:	e5930000 	ldr	r0, [r3]
   12c58:	e3083054 	movw	r3, #32852	; 0x8054
   12c5c:	e3403004 	movt	r3, #4
   12c60:	e5931000 	ldr	r1, [r3]
   12c64:	e24b3020 	sub	r3, fp, #32
   12c68:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c6c:	e12fff34 	blx	r4
   12c70:	e50b0010 	str	r0, [fp, #-16]
        if (!file && strncmp(pathname, "./", 2) == 0) {
   12c74:	e51b3010 	ldr	r3, [fp, #-16]
   12c78:	e3530000 	cmp	r3, #0
   12c7c:	1a000015 	bne	12cd8 <sys_open_impl+0x180>
   12c80:	e3a02002 	mov	r2, #2
   12c84:	e30717d8 	movw	r1, #30680	; 0x77d8
   12c88:	e3401002 	movt	r1, #2
   12c8c:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c90:	eb003ca6 	bl	21f30 <strncmp>
   12c94:	e1a03000 	mov	r3, r0
   12c98:	e3530000 	cmp	r3, #0
   12c9c:	1a00000d 	bne	12cd8 <sys_open_impl+0x180>
            file = cpio_get_file_impl(cpio_archive_symbol, cpio_archive_len, pathname + 2, &size);
   12ca0:	e3083058 	movw	r3, #32856	; 0x8058
   12ca4:	e3403004 	movt	r3, #4
   12ca8:	e5934000 	ldr	r4, [r3]
   12cac:	e3083050 	movw	r3, #32848	; 0x8050
   12cb0:	e3403004 	movt	r3, #4
   12cb4:	e5930000 	ldr	r0, [r3]
   12cb8:	e3083054 	movw	r3, #32852	; 0x8054
   12cbc:	e3403004 	movt	r3, #4
   12cc0:	e5931000 	ldr	r1, [r3]
   12cc4:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   12cc8:	e2832002 	add	r2, r3, #2
   12ccc:	e24b3020 	sub	r3, fp, #32
   12cd0:	e12fff34 	blx	r4
   12cd4:	e50b0010 	str	r0, [fp, #-16]
        }
    }
    if (!file) {
   12cd8:	e51b3010 	ldr	r3, [fp, #-16]
   12cdc:	e3530000 	cmp	r3, #0
   12ce0:	1a000014 	bne	12d38 <sys_open_impl+0x1e0>
        ZF_LOGE("Failed to open file %s\n", pathname);
   12ce4:	e3083104 	movw	r3, #33028	; 0x8104
   12ce8:	e3403004 	movt	r3, #4
   12cec:	e5933000 	ldr	r3, [r3]
   12cf0:	e3530005 	cmp	r3, #5
   12cf4:	ca00000d 	bgt	12d30 <sys_open_impl+0x1d8>
   12cf8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   12cfc:	e58d3008 	str	r3, [sp, #8]
   12d00:	e30737dc 	movw	r3, #30684	; 0x77dc
   12d04:	e3403002 	movt	r3, #2
   12d08:	e58d3004 	str	r3, [sp, #4]
   12d0c:	e3a03000 	mov	r3, #0
   12d10:	e58d3000 	str	r3, [sp]
   12d14:	e3a03005 	mov	r3, #5
   12d18:	e3a020c0 	mov	r2, #192	; 0xc0
   12d1c:	e30716ac 	movw	r1, #30380	; 0x76ac
   12d20:	e3401002 	movt	r1, #2
   12d24:	e3070928 	movw	r0, #31016	; 0x7928
   12d28:	e3400002 	movt	r0, #2
   12d2c:	eb002c95 	bl	1df88 <_zf_log_write_d>
        return -ENOENT;
   12d30:	e3e03001 	mvn	r3, #1
   12d34:	ea00004a 	b	12e64 <sys_open_impl+0x30c>
    }
    int fd = allocate_fd();
   12d38:	ebffff48 	bl	12a60 <allocate_fd>
   12d3c:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
    if (fd == -EMFILE) {
   12d40:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   12d44:	e3730018 	cmn	r3, #24
   12d48:	1a000012 	bne	12d98 <sys_open_impl+0x240>
        ZF_LOGE("Out of fds!\n");
   12d4c:	e3083104 	movw	r3, #33028	; 0x8104
   12d50:	e3403004 	movt	r3, #4
   12d54:	e5933000 	ldr	r3, [r3]
   12d58:	e3530005 	cmp	r3, #5
   12d5c:	ca00000b 	bgt	12d90 <sys_open_impl+0x238>
   12d60:	e30737f4 	movw	r3, #30708	; 0x77f4
   12d64:	e3403002 	movt	r3, #2
   12d68:	e58d3004 	str	r3, [sp, #4]
   12d6c:	e3a03000 	mov	r3, #0
   12d70:	e58d3000 	str	r3, [sp]
   12d74:	e3a03005 	mov	r3, #5
   12d78:	e3a020c5 	mov	r2, #197	; 0xc5
   12d7c:	e30716ac 	movw	r1, #30380	; 0x76ac
   12d80:	e3401002 	movt	r1, #2
   12d84:	e3070928 	movw	r0, #31016	; 0x7928
   12d88:	e3400002 	movt	r0, #2
   12d8c:	eb002c7d 	bl	1df88 <_zf_log_write_d>
        return -EMFILE;
   12d90:	e3e03017 	mvn	r3, #23
   12d94:	ea000032 	b	12e64 <sys_open_impl+0x30c>
    }

    muslcsys_fd_t *fds = get_fd_struct(fd);
   12d98:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   12d9c:	ebffff40 	bl	12aa4 <get_fd_struct>
   12da0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    fds->filetype = FILE_TYPE_CPIO;
   12da4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12da8:	e3a02000 	mov	r2, #0
   12dac:	e5832000 	str	r2, [r3]
    fds->data = malloc(sizeof(cpio_file_data_t));
   12db0:	e3a00010 	mov	r0, #16
   12db4:	eb002fc9 	bl	1ece0 <malloc>
   12db8:	e1a03000 	mov	r3, r0
   12dbc:	e1a02003 	mov	r2, r3
   12dc0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12dc4:	e5832004 	str	r2, [r3, #4]
    if (!fds->data) {
   12dc8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12dcc:	e5933004 	ldr	r3, [r3, #4]
   12dd0:	e3530000 	cmp	r3, #0
   12dd4:	1a000014 	bne	12e2c <sys_open_impl+0x2d4>
        ZF_LOGE("Malloc failed\n");
   12dd8:	e3083104 	movw	r3, #33028	; 0x8104
   12ddc:	e3403004 	movt	r3, #4
   12de0:	e5933000 	ldr	r3, [r3]
   12de4:	e3530005 	cmp	r3, #5
   12de8:	ca00000b 	bgt	12e1c <sys_open_impl+0x2c4>
   12dec:	e3073804 	movw	r3, #30724	; 0x7804
   12df0:	e3403002 	movt	r3, #2
   12df4:	e58d3004 	str	r3, [sp, #4]
   12df8:	e3a03000 	mov	r3, #0
   12dfc:	e58d3000 	str	r3, [sp]
   12e00:	e3a03005 	mov	r3, #5
   12e04:	e3a020cd 	mov	r2, #205	; 0xcd
   12e08:	e30716ac 	movw	r1, #30380	; 0x76ac
   12e0c:	e3401002 	movt	r1, #2
   12e10:	e3070928 	movw	r0, #31016	; 0x7928
   12e14:	e3400002 	movt	r0, #2
   12e18:	eb002c5a 	bl	1df88 <_zf_log_write_d>
        add_free_fd(fd);
   12e1c:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   12e20:	ebfffddf 	bl	125a4 <add_free_fd>
        return -ENOMEM;
   12e24:	e3e0300b 	mvn	r3, #11
   12e28:	ea00000d 	b	12e64 <sys_open_impl+0x30c>
    }
    cpio_file_data_t *fd_data = (cpio_file_data_t *)fds->data;
   12e2c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e30:	e5933004 	ldr	r3, [r3, #4]
   12e34:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    fd_data->start = file;
   12e38:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   12e3c:	e51b2010 	ldr	r2, [fp, #-16]
   12e40:	e5832000 	str	r2, [r3]
    fd_data->size = size;
   12e44:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   12e48:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   12e4c:	e5832004 	str	r2, [r3, #4]
    fd_data->current = 0;
   12e50:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e54:	e3a02000 	mov	r2, #0
   12e58:	e3a03000 	mov	r3, #0
   12e5c:	e1c120f8 	strd	r2, [r1, #8]
    return fd;
   12e60:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   12e64:	e1a00003 	mov	r0, r3
   12e68:	e24bd008 	sub	sp, fp, #8
   12e6c:	e8bd8810 	pop	{r4, fp, pc}

00012e70 <sys_open>:

long sys_open(va_list ap)
{
   12e70:	e92d4800 	push	{fp, lr}
   12e74:	e28db004 	add	fp, sp, #4
   12e78:	e24dd018 	sub	sp, sp, #24
   12e7c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    const char *pathname = va_arg(ap, const char *);
   12e80:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e84:	e2832004 	add	r2, r3, #4
   12e88:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   12e8c:	e5933000 	ldr	r3, [r3]
   12e90:	e50b3008 	str	r3, [fp, #-8]
    int flags = va_arg(ap, int);
   12e94:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e98:	e2832004 	add	r2, r3, #4
   12e9c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   12ea0:	e5933000 	ldr	r3, [r3]
   12ea4:	e50b300c 	str	r3, [fp, #-12]
    mode_t mode = va_arg(ap, mode_t);
   12ea8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12eac:	e2832004 	add	r2, r3, #4
   12eb0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   12eb4:	e5933000 	ldr	r3, [r3]
   12eb8:	e50b3010 	str	r3, [fp, #-16]

    return sys_open_impl(pathname, flags, mode);
   12ebc:	e51b2010 	ldr	r2, [fp, #-16]
   12ec0:	e51b100c 	ldr	r1, [fp, #-12]
   12ec4:	e51b0008 	ldr	r0, [fp, #-8]
   12ec8:	ebffff22 	bl	12b58 <sys_open_impl>
   12ecc:	e1a03000 	mov	r3, r0
}
   12ed0:	e1a00003 	mov	r0, r3
   12ed4:	e24bd004 	sub	sp, fp, #4
   12ed8:	e8bd8800 	pop	{fp, pc}

00012edc <sys_openat>:

long sys_openat(va_list ap)
{
   12edc:	e92d4800 	push	{fp, lr}
   12ee0:	e28db004 	add	fp, sp, #4
   12ee4:	e24dd020 	sub	sp, sp, #32
   12ee8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    int dirfd = va_arg(ap, int);
   12eec:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ef0:	e2832004 	add	r2, r3, #4
   12ef4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   12ef8:	e5933000 	ldr	r3, [r3]
   12efc:	e50b3008 	str	r3, [fp, #-8]
    const char *pathname = va_arg(ap, const char *);
   12f00:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f04:	e2832004 	add	r2, r3, #4
   12f08:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   12f0c:	e5933000 	ldr	r3, [r3]
   12f10:	e50b300c 	str	r3, [fp, #-12]
    int flags = va_arg(ap, int);
   12f14:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f18:	e2832004 	add	r2, r3, #4
   12f1c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   12f20:	e5933000 	ldr	r3, [r3]
   12f24:	e50b3010 	str	r3, [fp, #-16]
    mode_t mode = va_arg(ap, mode_t);
   12f28:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f2c:	e2832004 	add	r2, r3, #4
   12f30:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   12f34:	e5933000 	ldr	r3, [r3]
   12f38:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

    if (dirfd != AT_FDCWD) {
   12f3c:	e51b3008 	ldr	r3, [fp, #-8]
   12f40:	e3730064 	cmn	r3, #100	; 0x64
   12f44:	0a000012 	beq	12f94 <sys_openat+0xb8>
        ZF_LOGE("Openat only supports relative path to the current working directory\n");
   12f48:	e3083104 	movw	r3, #33028	; 0x8104
   12f4c:	e3403004 	movt	r3, #4
   12f50:	e5933000 	ldr	r3, [r3]
   12f54:	e3530005 	cmp	r3, #5
   12f58:	ca00000b 	bgt	12f8c <sys_openat+0xb0>
   12f5c:	e3073814 	movw	r3, #30740	; 0x7814
   12f60:	e3403002 	movt	r3, #2
   12f64:	e58d3004 	str	r3, [sp, #4]
   12f68:	e3a03000 	mov	r3, #0
   12f6c:	e58d3000 	str	r3, [sp]
   12f70:	e3a03005 	mov	r3, #5
   12f74:	e3a020e9 	mov	r2, #233	; 0xe9
   12f78:	e30716ac 	movw	r1, #30380	; 0x76ac
   12f7c:	e3401002 	movt	r1, #2
   12f80:	e3070938 	movw	r0, #31032	; 0x7938
   12f84:	e3400002 	movt	r0, #2
   12f88:	eb002bfe 	bl	1df88 <_zf_log_write_d>
        return -EINVAL;
   12f8c:	e3e03015 	mvn	r3, #21
   12f90:	ea000004 	b	12fa8 <sys_openat+0xcc>
    }

    return sys_open_impl(pathname, flags, mode);
   12f94:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   12f98:	e51b1010 	ldr	r1, [fp, #-16]
   12f9c:	e51b000c 	ldr	r0, [fp, #-12]
   12fa0:	ebfffeec 	bl	12b58 <sys_open_impl>
   12fa4:	e1a03000 	mov	r3, r0
}
   12fa8:	e1a00003 	mov	r0, r3
   12fac:	e24bd004 	sub	sp, fp, #4
   12fb0:	e8bd8800 	pop	{fp, pc}

00012fb4 <sys_close>:

long sys_close(va_list ap)
{
   12fb4:	e92d4800 	push	{fp, lr}
   12fb8:	e28db004 	add	fp, sp, #4
   12fbc:	e24dd010 	sub	sp, sp, #16
   12fc0:	e50b0010 	str	r0, [fp, #-16]
    int fd = va_arg(ap, int);
   12fc4:	e51b3010 	ldr	r3, [fp, #-16]
   12fc8:	e2832004 	add	r2, r3, #4
   12fcc:	e50b2010 	str	r2, [fp, #-16]
   12fd0:	e5933000 	ldr	r3, [r3]
   12fd4:	e50b3008 	str	r3, [fp, #-8]
    if (fd < FIRST_USER_FD) {
   12fd8:	e51b3008 	ldr	r3, [fp, #-8]
   12fdc:	e3530002 	cmp	r3, #2
   12fe0:	ca000007 	bgt	13004 <sys_close+0x50>
        assert(!"not implemented");
   12fe4:	e3073944 	movw	r3, #31044	; 0x7944
   12fe8:	e3403002 	movt	r3, #2
   12fec:	e3a020f4 	mov	r2, #244	; 0xf4
   12ff0:	e30716ac 	movw	r1, #30380	; 0x76ac
   12ff4:	e3401002 	movt	r1, #2
   12ff8:	e307085c 	movw	r0, #30812	; 0x785c
   12ffc:	e3400002 	movt	r0, #2
   13000:	eb002d59 	bl	1e56c <__assert_fail>
        return -EBADF;
    }

    if (!valid_fd(fd)) {
   13004:	e51b0008 	ldr	r0, [fp, #-8]
   13008:	ebfffdb0 	bl	126d0 <valid_fd>
   1300c:	e1a03000 	mov	r3, r0
   13010:	e3530000 	cmp	r3, #0
   13014:	1a000001 	bne	13020 <sys_close+0x6c>
        return -EBADF;
   13018:	e3e03008 	mvn	r3, #8
   1301c:	ea00000d 	b	13058 <sys_close+0xa4>
    }

    muslcsys_fd_t *fds = get_fd_struct(fd);
   13020:	e51b0008 	ldr	r0, [fp, #-8]
   13024:	ebfffe9e 	bl	12aa4 <get_fd_struct>
   13028:	e50b000c 	str	r0, [fp, #-12]

    if (fds->filetype == FILE_TYPE_CPIO) {
   1302c:	e51b300c 	ldr	r3, [fp, #-12]
   13030:	e5933000 	ldr	r3, [r3]
   13034:	e3530000 	cmp	r3, #0
   13038:	1a000003 	bne	1304c <sys_close+0x98>
        free(fds->data);
   1303c:	e51b300c 	ldr	r3, [fp, #-12]
   13040:	e5933004 	ldr	r3, [r3, #4]
   13044:	e1a00003 	mov	r0, r3
   13048:	eb002e85 	bl	1ea64 <free>
    }
    add_free_fd(fd);
   1304c:	e51b0008 	ldr	r0, [fp, #-8]
   13050:	ebfffd53 	bl	125a4 <add_free_fd>
    return 0;
   13054:	e3a03000 	mov	r3, #0
}
   13058:	e1a00003 	mov	r0, r3
   1305c:	e24bd004 	sub	sp, fp, #4
   13060:	e8bd8800 	pop	{fp, pc}

00013064 <sel4muslcsys_register_stdio_write_fn>:


static write_buf_fn stdio_write = sys_platform_write;

write_buf_fn sel4muslcsys_register_stdio_write_fn(write_buf_fn write_fn)
{
   13064:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13068:	e28db000 	add	fp, sp, #0
   1306c:	e24dd014 	sub	sp, sp, #20
   13070:	e50b0010 	str	r0, [fp, #-16]
    write_buf_fn old = stdio_write;
   13074:	e30c3008 	movw	r3, #49160	; 0xc008
   13078:	e3403002 	movt	r3, #2
   1307c:	e5933000 	ldr	r3, [r3]
   13080:	e50b3008 	str	r3, [fp, #-8]
    stdio_write = write_fn;
   13084:	e30c3008 	movw	r3, #49160	; 0xc008
   13088:	e3403002 	movt	r3, #2
   1308c:	e51b2010 	ldr	r2, [fp, #-16]
   13090:	e5832000 	str	r2, [r3]
    return old;
   13094:	e51b3008 	ldr	r3, [fp, #-8]
}
   13098:	e1a00003 	mov	r0, r3
   1309c:	e28bd000 	add	sp, fp, #0
   130a0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   130a4:	e12fff1e 	bx	lr

000130a8 <sys_writev>:


/* Writev syscall implementation for muslc. Only implemented for stdin and stdout. */
long sys_writev(va_list ap)
{
   130a8:	e92d4830 	push	{r4, r5, fp, lr}
   130ac:	e28db00c 	add	fp, sp, #12
   130b0:	e24dd028 	sub	sp, sp, #40	; 0x28
   130b4:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
    int fildes = va_arg(ap, int);
   130b8:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   130bc:	e2832004 	add	r2, r3, #4
   130c0:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
   130c4:	e5933000 	ldr	r3, [r3]
   130c8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    struct iovec *iov = va_arg(ap, struct iovec *);
   130cc:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   130d0:	e2832004 	add	r2, r3, #4
   130d4:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
   130d8:	e5933000 	ldr	r3, [r3]
   130dc:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
    int iovcnt = va_arg(ap, int);
   130e0:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   130e4:	e2832004 	add	r2, r3, #4
   130e8:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
   130ec:	e5933000 	ldr	r3, [r3]
   130f0:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4

    long long sum = 0;
   130f4:	e3a02000 	mov	r2, #0
   130f8:	e3a03000 	mov	r3, #0
   130fc:	e14b21f4 	strd	r2, [fp, #-20]	; 0xffffffec
    ssize_t ret = 0;
   13100:	e3a03000 	mov	r3, #0
   13104:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

    /* The iovcnt argument is valid if greater than 0 and less than or equal to IOV_MAX. */
    if (iovcnt <= 0 || iovcnt > IOV_MAX) {
   13108:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1310c:	e3530000 	cmp	r3, #0
   13110:	da000002 	ble	13120 <sys_writev+0x78>
   13114:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   13118:	e3530b01 	cmp	r3, #1024	; 0x400
   1311c:	da000001 	ble	13128 <sys_writev+0x80>
        return -EINVAL;
   13120:	e3e03015 	mvn	r3, #21
   13124:	ea00005c 	b	1329c <sys_writev+0x1f4>
    }

    /* The sum of iov_len is valid if less than or equal to SSIZE_MAX i.e. cannot overflow
       a ssize_t. */
    for (int i = 0; i < iovcnt; i++) {
   13128:	e3a03000 	mov	r3, #0
   1312c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
   13130:	ea000015 	b	1318c <sys_writev+0xe4>
        sum += (long long)iov[i].iov_len;
   13134:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   13138:	e1a03183 	lsl	r3, r3, #3
   1313c:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   13140:	e0823003 	add	r3, r2, r3
   13144:	e5933004 	ldr	r3, [r3, #4]
   13148:	e1a02003 	mov	r2, r3
   1314c:	e3a03000 	mov	r3, #0
   13150:	e14b01d4 	ldrd	r0, [fp, #-20]	; 0xffffffec
   13154:	e0904002 	adds	r4, r0, r2
   13158:	e0a15003 	adc	r5, r1, r3
   1315c:	e14b41f4 	strd	r4, [fp, #-20]	; 0xffffffec
        if (sum > SSIZE_MAX) {
   13160:	e14b21d4 	ldrd	r2, [fp, #-20]	; 0xffffffec
   13164:	e3e00102 	mvn	r0, #-2147483648	; 0x80000000
   13168:	e3a01000 	mov	r1, #0
   1316c:	e1500002 	cmp	r0, r2
   13170:	e0d13003 	sbcs	r3, r1, r3
   13174:	aa000001 	bge	13180 <sys_writev+0xd8>
            return -EINVAL;
   13178:	e3e03015 	mvn	r3, #21
   1317c:	ea000046 	b	1329c <sys_writev+0x1f4>
    for (int i = 0; i < iovcnt; i++) {
   13180:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   13184:	e2833001 	add	r3, r3, #1
   13188:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
   1318c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   13190:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   13194:	e1520003 	cmp	r2, r3
   13198:	baffffe5 	blt	13134 <sys_writev+0x8c>
        }
    }

    /* If all the iov_len members in the array are 0, return 0. */
    if (!sum) {
   1319c:	e14b21d4 	ldrd	r2, [fp, #-20]	; 0xffffffec
   131a0:	e1923003 	orrs	r3, r2, r3
   131a4:	1a000001 	bne	131b0 <sys_writev+0x108>
        return 0;
   131a8:	e3a03000 	mov	r3, #0
   131ac:	ea00003a 	b	1329c <sys_writev+0x1f4>
    }

    /* Write the buffer to console if the fd is for stdout or stderr. */
    if (fildes == STDOUT_FILENO || fildes == STDERR_FILENO) {
   131b0:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   131b4:	e3530001 	cmp	r3, #1
   131b8:	0a000002 	beq	131c8 <sys_writev+0x120>
   131bc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   131c0:	e3530002 	cmp	r3, #2
   131c4:	1a00002b 	bne	13278 <sys_writev+0x1d0>
        if (stdio_write == NULL) {
            ZF_LOGD("No standard out function registered");
        }
        for (int i = 0; i < iovcnt; i++) {
   131c8:	e3a03000 	mov	r3, #0
   131cc:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   131d0:	ea000023 	b	13264 <sys_writev+0x1bc>
            if (stdio_write == NULL) {
   131d4:	e30c3008 	movw	r3, #49160	; 0xc008
   131d8:	e3403002 	movt	r3, #2
   131dc:	e5933000 	ldr	r3, [r3]
   131e0:	e3530000 	cmp	r3, #0
   131e4:	1a000008 	bne	1320c <sys_writev+0x164>
                ret += iov[i].iov_len;
   131e8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   131ec:	e1a03183 	lsl	r3, r3, #3
   131f0:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   131f4:	e0823003 	add	r3, r2, r3
   131f8:	e5932004 	ldr	r2, [r3, #4]
   131fc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13200:	e0823003 	add	r3, r2, r3
   13204:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
   13208:	ea000012 	b	13258 <sys_writev+0x1b0>
            } else {
                ret += stdio_write(iov[i].iov_base, iov[i].iov_len);
   1320c:	e30c3008 	movw	r3, #49160	; 0xc008
   13210:	e3403002 	movt	r3, #2
   13214:	e5933000 	ldr	r3, [r3]
   13218:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1321c:	e1a02182 	lsl	r2, r2, #3
   13220:	e51b1028 	ldr	r1, [fp, #-40]	; 0xffffffd8
   13224:	e0812002 	add	r2, r1, r2
   13228:	e5920000 	ldr	r0, [r2]
   1322c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   13230:	e1a02182 	lsl	r2, r2, #3
   13234:	e51b1028 	ldr	r1, [fp, #-40]	; 0xffffffd8
   13238:	e0812002 	add	r2, r1, r2
   1323c:	e5922004 	ldr	r2, [r2, #4]
   13240:	e1a01002 	mov	r1, r2
   13244:	e12fff33 	blx	r3
   13248:	e1a02000 	mov	r2, r0
   1324c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13250:	e0823003 	add	r3, r2, r3
   13254:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
        for (int i = 0; i < iovcnt; i++) {
   13258:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1325c:	e2833001 	add	r3, r3, #1
   13260:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   13264:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   13268:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1326c:	e1520003 	cmp	r2, r3
   13270:	baffffd7 	blt	131d4 <sys_writev+0x12c>
   13274:	ea000007 	b	13298 <sys_writev+0x1f0>
            }
        }
    } else {
        assert(!"Not implemented");
   13278:	e3073950 	movw	r3, #31056	; 0x7950
   1327c:	e3403002 	movt	r3, #2
   13280:	e300213a 	movw	r2, #314	; 0x13a
   13284:	e30716ac 	movw	r1, #30380	; 0x76ac
   13288:	e3401002 	movt	r1, #2
   1328c:	e3070870 	movw	r0, #30832	; 0x7870
   13290:	e3400002 	movt	r0, #2
   13294:	eb002cb4 	bl	1e56c <__assert_fail>
        return -EBADF;
    }

    return ret;
   13298:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
}
   1329c:	e1a00003 	mov	r0, r3
   132a0:	e24bd00c 	sub	sp, fp, #12
   132a4:	e8bd8830 	pop	{r4, r5, fp, pc}

000132a8 <sys_write>:

long sys_write(va_list ap)
{
   132a8:	e92d4800 	push	{fp, lr}
   132ac:	e28db004 	add	fp, sp, #4
   132b0:	e24dd020 	sub	sp, sp, #32
   132b4:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0

    int fd = va_arg(ap, int);
   132b8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   132bc:	e2832004 	add	r2, r3, #4
   132c0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   132c4:	e5933000 	ldr	r3, [r3]
   132c8:	e50b3008 	str	r3, [fp, #-8]
    void *buf = va_arg(ap, void *);
   132cc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   132d0:	e2832004 	add	r2, r3, #4
   132d4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   132d8:	e5933000 	ldr	r3, [r3]
   132dc:	e50b300c 	str	r3, [fp, #-12]
    size_t count = va_arg(ap, size_t);
   132e0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   132e4:	e2832004 	add	r2, r3, #4
   132e8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   132ec:	e5933000 	ldr	r3, [r3]
   132f0:	e50b3010 	str	r3, [fp, #-16]
    /* construct an iovec and call writev */
    struct iovec iov = {.iov_base = buf, .iov_len = count };
   132f4:	e51b300c 	ldr	r3, [fp, #-12]
   132f8:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
   132fc:	e51b3010 	ldr	r3, [fp, #-16]
   13300:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    return writev(fd, &iov, 1);
   13304:	e24b3018 	sub	r3, fp, #24
   13308:	e3a02001 	mov	r2, #1
   1330c:	e1a01003 	mov	r1, r3
   13310:	e51b0008 	ldr	r0, [fp, #-8]
   13314:	eb003bc2 	bl	22224 <writev>
   13318:	e1a03000 	mov	r3, r0
}
   1331c:	e1a00003 	mov	r0, r3
   13320:	e24bd004 	sub	sp, fp, #4
   13324:	e8bd8800 	pop	{fp, pc}

00013328 <sys_readv>:

long sys_readv(va_list ap)
{
   13328:	e92d4830 	push	{r4, r5, fp, lr}
   1332c:	e28db00c 	add	fp, sp, #12
   13330:	e24dd030 	sub	sp, sp, #48	; 0x30
   13334:	e50b0038 	str	r0, [fp, #-56]	; 0xffffffc8
    int fd = va_arg(ap, int);
   13338:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1333c:	e2832004 	add	r2, r3, #4
   13340:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
   13344:	e5933000 	ldr	r3, [r3]
   13348:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    struct iovec *iov = va_arg(ap, struct iovec *);
   1334c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   13350:	e2832004 	add	r2, r3, #4
   13354:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
   13358:	e5933000 	ldr	r3, [r3]
   1335c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    int iovcnt = va_arg(ap, int);
   13360:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   13364:	e2832004 	add	r2, r3, #4
   13368:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
   1336c:	e5933000 	ldr	r3, [r3]
   13370:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    int i;
    long read;
    if (fd < FIRST_USER_FD) {
   13374:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13378:	e3530002 	cmp	r3, #2
   1337c:	ca000007 	bgt	133a0 <sys_readv+0x78>
        assert(!"not implemented");
   13380:	e307395c 	movw	r3, #31068	; 0x795c
   13384:	e3403002 	movt	r3, #2
   13388:	e3a02f55 	mov	r2, #340	; 0x154
   1338c:	e30716ac 	movw	r1, #30380	; 0x76ac
   13390:	e3401002 	movt	r1, #2
   13394:	e307085c 	movw	r0, #30812	; 0x785c
   13398:	e3400002 	movt	r0, #2
   1339c:	eb002c72 	bl	1e56c <__assert_fail>
        return -EBADF;
    }

    if (!valid_fd(fd)) {
   133a0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   133a4:	ebfffcc9 	bl	126d0 <valid_fd>
   133a8:	e1a03000 	mov	r3, r0
   133ac:	e3530000 	cmp	r3, #0
   133b0:	1a000001 	bne	133bc <sys_readv+0x94>
        return -EBADF;
   133b4:	e3e03008 	mvn	r3, #8
   133b8:	ea000053 	b	1350c <sys_readv+0x1e4>
    }

    /* files can only be opened for reading so no need to check any permissions.
     * just get straight into it
     */
    muslcsys_fd_t *muslc_fd = get_fd_struct(fd);
   133bc:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   133c0:	ebfffdb7 	bl	12aa4 <get_fd_struct>
   133c4:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
    if (muslc_fd->filetype != FILE_TYPE_CPIO) {
   133c8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   133cc:	e5933000 	ldr	r3, [r3]
   133d0:	e3530000 	cmp	r3, #0
   133d4:	0a000007 	beq	133f8 <sys_readv+0xd0>
        assert(!"not implemented");
   133d8:	e307395c 	movw	r3, #31068	; 0x795c
   133dc:	e3403002 	movt	r3, #2
   133e0:	e3002161 	movw	r2, #353	; 0x161
   133e4:	e30716ac 	movw	r1, #30380	; 0x76ac
   133e8:	e3401002 	movt	r1, #2
   133ec:	e307085c 	movw	r0, #30812	; 0x785c
   133f0:	e3400002 	movt	r0, #2
   133f4:	eb002c5c 	bl	1e56c <__assert_fail>
        return -EINVAL;
    }
    cpio_file_data_t *cpio_fd = muslc_fd->data;
   133f8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   133fc:	e5933004 	ldr	r3, [r3, #4]
   13400:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
    read = 0;
   13404:	e3a03000 	mov	r3, #0
   13408:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    for (i = 0; i < iovcnt && cpio_fd->current < cpio_fd->size; i++) {
   1340c:	e3a03000 	mov	r3, #0
   13410:	e50b3010 	str	r3, [fp, #-16]
   13414:	ea00002e 	b	134d4 <sys_readv+0x1ac>
        long max = cpio_fd->size - cpio_fd->current;
   13418:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1341c:	e5931004 	ldr	r1, [r3, #4]
   13420:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13424:	e1c320d8 	ldrd	r2, [r3, #8]
   13428:	e1a03002 	mov	r3, r2
   1342c:	e0413003 	sub	r3, r1, r3
   13430:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
        long len = max < iov[i].iov_len ? max : iov[i].iov_len;
   13434:	e51b3010 	ldr	r3, [fp, #-16]
   13438:	e1a03183 	lsl	r3, r3, #3
   1343c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   13440:	e0823003 	add	r3, r2, r3
   13444:	e5932004 	ldr	r2, [r3, #4]
   13448:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1344c:	e1520003 	cmp	r2, r3
   13450:	31a03002 	movcc	r3, r2
   13454:	21a03003 	movcs	r3, r3
   13458:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
        memcpy(iov[i].iov_base, cpio_fd->start + cpio_fd->current, len);
   1345c:	e51b3010 	ldr	r3, [fp, #-16]
   13460:	e1a03183 	lsl	r3, r3, #3
   13464:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   13468:	e0823003 	add	r3, r2, r3
   1346c:	e5930000 	ldr	r0, [r3]
   13470:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13474:	e5931000 	ldr	r1, [r3]
   13478:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1347c:	e1c320d8 	ldrd	r2, [r3, #8]
   13480:	e1a03002 	mov	r3, r2
   13484:	e0813003 	add	r3, r1, r3
   13488:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
   1348c:	e1a01003 	mov	r1, r3
   13490:	eb0038cb 	bl	217c4 <memcpy>
        cpio_fd->current += len;
   13494:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13498:	e1c300d8 	ldrd	r0, [r3, #8]
   1349c:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   134a0:	e1a02003 	mov	r2, r3
   134a4:	e1a03fc2 	asr	r3, r2, #31
   134a8:	e0904002 	adds	r4, r0, r2
   134ac:	e0a15003 	adc	r5, r1, r3
   134b0:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   134b4:	e1c340f8 	strd	r4, [r3, #8]
        read += len;
   134b8:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   134bc:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   134c0:	e0823003 	add	r3, r2, r3
   134c4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    for (i = 0; i < iovcnt && cpio_fd->current < cpio_fd->size; i++) {
   134c8:	e51b3010 	ldr	r3, [fp, #-16]
   134cc:	e2833001 	add	r3, r3, #1
   134d0:	e50b3010 	str	r3, [fp, #-16]
   134d4:	e51b2010 	ldr	r2, [fp, #-16]
   134d8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   134dc:	e1520003 	cmp	r2, r3
   134e0:	aa000008 	bge	13508 <sys_readv+0x1e0>
   134e4:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   134e8:	e1c300d8 	ldrd	r0, [r3, #8]
   134ec:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   134f0:	e5933004 	ldr	r3, [r3, #4]
   134f4:	e1a02003 	mov	r2, r3
   134f8:	e3a03000 	mov	r3, #0
   134fc:	e1500002 	cmp	r0, r2
   13500:	e0d13003 	sbcs	r3, r1, r3
   13504:	baffffc3 	blt	13418 <sys_readv+0xf0>
    }
    return read;
   13508:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   1350c:	e1a00003 	mov	r0, r3
   13510:	e24bd00c 	sub	sp, fp, #12
   13514:	e8bd8830 	pop	{r4, r5, fp, pc}

00013518 <sys_read>:

long sys_read(va_list ap)
{
   13518:	e92d4800 	push	{fp, lr}
   1351c:	e28db004 	add	fp, sp, #4
   13520:	e24dd020 	sub	sp, sp, #32
   13524:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    int fd = va_arg(ap, int);
   13528:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1352c:	e2832004 	add	r2, r3, #4
   13530:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13534:	e5933000 	ldr	r3, [r3]
   13538:	e50b3008 	str	r3, [fp, #-8]
    void *buf = va_arg(ap, void *);
   1353c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13540:	e2832004 	add	r2, r3, #4
   13544:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13548:	e5933000 	ldr	r3, [r3]
   1354c:	e50b300c 	str	r3, [fp, #-12]
    size_t count = va_arg(ap, size_t);
   13550:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13554:	e2832004 	add	r2, r3, #4
   13558:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   1355c:	e5933000 	ldr	r3, [r3]
   13560:	e50b3010 	str	r3, [fp, #-16]
    /* construct an iovec and call readv */
    struct iovec iov = {.iov_base = buf, .iov_len = count };
   13564:	e51b300c 	ldr	r3, [fp, #-12]
   13568:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
   1356c:	e51b3010 	ldr	r3, [fp, #-16]
   13570:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    return readv(fd, &iov, 1);
   13574:	e24b3018 	sub	r3, fp, #24
   13578:	e3a02001 	mov	r2, #1
   1357c:	e1a01003 	mov	r1, r3
   13580:	e51b0008 	ldr	r0, [fp, #-8]
   13584:	eb003b19 	bl	221f0 <readv>
   13588:	e1a03000 	mov	r3, r0
}
   1358c:	e1a00003 	mov	r0, r3
   13590:	e24bd004 	sub	sp, fp, #4
   13594:	e8bd8800 	pop	{fp, pc}

00013598 <sys_ioctl>:

long sys_ioctl(va_list ap)
{
   13598:	e92d4800 	push	{fp, lr}
   1359c:	e28db004 	add	fp, sp, #4
   135a0:	e24dd010 	sub	sp, sp, #16
   135a4:	e50b0010 	str	r0, [fp, #-16]
    int fd = va_arg(ap, int);
   135a8:	e51b3010 	ldr	r3, [fp, #-16]
   135ac:	e2832004 	add	r2, r3, #4
   135b0:	e50b2010 	str	r2, [fp, #-16]
   135b4:	e5933000 	ldr	r3, [r3]
   135b8:	e50b3008 	str	r3, [fp, #-8]
    int request = va_arg(ap, int);
   135bc:	e51b3010 	ldr	r3, [fp, #-16]
   135c0:	e2832004 	add	r2, r3, #4
   135c4:	e50b2010 	str	r2, [fp, #-16]
   135c8:	e5933000 	ldr	r3, [r3]
   135cc:	e50b300c 	str	r3, [fp, #-12]
    (void)request;
    /* muslc does some ioctls to stdout, so just allow these to silently
       go through */
    if (fd == STDOUT_FILENO) {
   135d0:	e51b3008 	ldr	r3, [fp, #-8]
   135d4:	e3530001 	cmp	r3, #1
   135d8:	1a000001 	bne	135e4 <sys_ioctl+0x4c>
        return 0;
   135dc:	e3a03000 	mov	r3, #0
   135e0:	ea000007 	b	13604 <sys_ioctl+0x6c>
    }
    assert(!"not implemented");
   135e4:	e3073968 	movw	r3, #31080	; 0x7968
   135e8:	e3403002 	movt	r3, #2
   135ec:	e3a02f61 	mov	r2, #388	; 0x184
   135f0:	e30716ac 	movw	r1, #30380	; 0x76ac
   135f4:	e3401002 	movt	r1, #2
   135f8:	e307085c 	movw	r0, #30812	; 0x785c
   135fc:	e3400002 	movt	r0, #2
   13600:	eb002bd9 	bl	1e56c <__assert_fail>
    return 0;
}
   13604:	e1a00003 	mov	r0, r3
   13608:	e24bd004 	sub	sp, fp, #4
   1360c:	e8bd8800 	pop	{fp, pc}

00013610 <sys_prlimit64>:

long sys_prlimit64(va_list ap)
{
   13610:	e92d4800 	push	{fp, lr}
   13614:	e28db004 	add	fp, sp, #4
   13618:	e24dd020 	sub	sp, sp, #32
   1361c:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    pid_t pid = va_arg(ap, pid_t);
   13620:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13624:	e2832004 	add	r2, r3, #4
   13628:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   1362c:	e5933000 	ldr	r3, [r3]
   13630:	e50b300c 	str	r3, [fp, #-12]
    int resource = va_arg(ap, int);
   13634:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13638:	e2832004 	add	r2, r3, #4
   1363c:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13640:	e5933000 	ldr	r3, [r3]
   13644:	e50b3010 	str	r3, [fp, #-16]
    const struct rlimit *new_limit = va_arg(ap, const struct rlimit *);
   13648:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1364c:	e2832004 	add	r2, r3, #4
   13650:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13654:	e5933000 	ldr	r3, [r3]
   13658:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    struct rlimit *old_limit = va_arg(ap, struct rlimit *);
   1365c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13660:	e2832004 	add	r2, r3, #4
   13664:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13668:	e5933000 	ldr	r3, [r3]
   1366c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    int result = 0;
   13670:	e3a03000 	mov	r3, #0
   13674:	e50b3008 	str	r3, [fp, #-8]

    /* we have no concept of pids, so ignore this for now */
    (void) pid;

    if (resource == RLIMIT_NOFILE) {
   13678:	e51b3010 	ldr	r3, [fp, #-16]
   1367c:	e3530007 	cmp	r3, #7
   13680:	1a000028 	bne	13728 <sys_prlimit64+0x118>
        if (old_limit) {
   13684:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13688:	e3530000 	cmp	r3, #0
   1368c:	0a00000a 	beq	136bc <sys_prlimit64+0xac>
            old_limit->rlim_cur = num_fds;
   13690:	e30c3004 	movw	r3, #49156	; 0xc004
   13694:	e3403002 	movt	r3, #2
   13698:	e5933000 	ldr	r3, [r3]
   1369c:	e1a02003 	mov	r2, r3
   136a0:	e1a03fc2 	asr	r3, r2, #31
   136a4:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   136a8:	e1c120f0 	strd	r2, [r1]
            /* pick some arbitrarily big number for max. In practice we are only constrained
             * by how large an array we can malloc */
            old_limit->rlim_max = 65536;
   136ac:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   136b0:	e3a02801 	mov	r2, #65536	; 0x10000
   136b4:	e3a03000 	mov	r3, #0
   136b8:	e1c120f8 	strd	r2, [r1, #8]
        }

        if (new_limit) {
   136bc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   136c0:	e3530000 	cmp	r3, #0
   136c4:	0a00001f 	beq	13748 <sys_prlimit64+0x138>
            if (new_limit->rlim_cur < num_fds) {
   136c8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   136cc:	e1c300d0 	ldrd	r0, [r3]
   136d0:	e30c3004 	movw	r3, #49156	; 0xc004
   136d4:	e3403002 	movt	r3, #2
   136d8:	e5933000 	ldr	r3, [r3]
   136dc:	e1a02003 	mov	r2, r3
   136e0:	e1a03fc2 	asr	r3, r2, #31
   136e4:	e1510003 	cmp	r1, r3
   136e8:	01500002 	cmpeq	r0, r2
   136ec:	2a000003 	bcs	13700 <sys_prlimit64+0xf0>
                printf("Trying to reduce open file limit. Operation not supported, ignoring\n");
   136f0:	e3070884 	movw	r0, #30852	; 0x7884
   136f4:	e3400002 	movt	r0, #2
   136f8:	eb003050 	bl	1f840 <puts>
   136fc:	ea000011 	b	13748 <sys_prlimit64+0x138>
            } else {
                result = grow_fds(new_limit->rlim_cur - num_fds);
   13700:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13704:	e1c320d0 	ldrd	r2, [r3]
   13708:	e30c3004 	movw	r3, #49156	; 0xc004
   1370c:	e3403002 	movt	r3, #2
   13710:	e5933000 	ldr	r3, [r3]
   13714:	e0423003 	sub	r3, r2, r3
   13718:	e1a00003 	mov	r0, r3
   1371c:	ebfffc42 	bl	1282c <grow_fds>
   13720:	e50b0008 	str	r0, [fp, #-8]
   13724:	ea000007 	b	13748 <sys_prlimit64+0x138>
            }
        }
    } else {
        assert(!"not implemented");
   13728:	e3073974 	movw	r3, #31092	; 0x7974
   1372c:	e3403002 	movt	r3, #2
   13730:	e30021a3 	movw	r2, #419	; 0x1a3
   13734:	e30716ac 	movw	r1, #30380	; 0x76ac
   13738:	e3401002 	movt	r1, #2
   1373c:	e307085c 	movw	r0, #30812	; 0x785c
   13740:	e3400002 	movt	r0, #2
   13744:	eb002b88 	bl	1e56c <__assert_fail>
    }

    return result;
   13748:	e51b3008 	ldr	r3, [fp, #-8]
}
   1374c:	e1a00003 	mov	r0, r3
   13750:	e24bd004 	sub	sp, fp, #4
   13754:	e8bd8800 	pop	{fp, pc}

00013758 <safe_addition>:

static int safe_addition(int a, int b)
{
   13758:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1375c:	e28db000 	add	fp, sp, #0
   13760:	e24dd00c 	sub	sp, sp, #12
   13764:	e50b0008 	str	r0, [fp, #-8]
   13768:	e50b100c 	str	r1, [fp, #-12]
    return !(a >= 0 && b > INT_MAX - a) &&
   1376c:	e51b3008 	ldr	r3, [fp, #-8]
   13770:	e3530000 	cmp	r3, #0
   13774:	ba000006 	blt	13794 <safe_addition+0x3c>
   13778:	e51b2008 	ldr	r2, [fp, #-8]
   1377c:	e30f3fff 	movw	r3, #65535	; 0xffff
   13780:	e3473fff 	movt	r3, #32767	; 0x7fff
   13784:	e0433002 	sub	r3, r3, r2
   13788:	e51b200c 	ldr	r2, [fp, #-12]
   1378c:	e1520003 	cmp	r2, r3
   13790:	ca00000b 	bgt	137c4 <safe_addition+0x6c>
   13794:	e51b3008 	ldr	r3, [fp, #-8]
   13798:	e3530000 	cmp	r3, #0
   1379c:	aa000006 	bge	137bc <safe_addition+0x64>
           !(a < 0 && b < INT_MAX - a);
   137a0:	e51b2008 	ldr	r2, [fp, #-8]
   137a4:	e30f3fff 	movw	r3, #65535	; 0xffff
   137a8:	e3473fff 	movt	r3, #32767	; 0x7fff
   137ac:	e0433002 	sub	r3, r3, r2
   137b0:	e51b200c 	ldr	r2, [fp, #-12]
   137b4:	e1520003 	cmp	r2, r3
   137b8:	ba000001 	blt	137c4 <safe_addition+0x6c>
    return !(a >= 0 && b > INT_MAX - a) &&
   137bc:	e3a03001 	mov	r3, #1
   137c0:	ea000000 	b	137c8 <safe_addition+0x70>
   137c4:	e3a03000 	mov	r3, #0
}
   137c8:	e1a00003 	mov	r0, r3
   137cc:	e28bd000 	add	sp, fp, #0
   137d0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   137d4:	e12fff1e 	bx	lr

000137d8 <sys_lseek>:

long sys_lseek(va_list ap)
{
   137d8:	e92d4800 	push	{fp, lr}
   137dc:	e28db004 	add	fp, sp, #4
   137e0:	e24dd028 	sub	sp, sp, #40	; 0x28
   137e4:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    int fd = va_arg(ap, int);
   137e8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   137ec:	e2832004 	add	r2, r3, #4
   137f0:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   137f4:	e5933000 	ldr	r3, [r3]
   137f8:	e50b300c 	str	r3, [fp, #-12]
    off_t offset = va_arg(ap, off_t);
   137fc:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13800:	e2833007 	add	r3, r3, #7
   13804:	e3c33007 	bic	r3, r3, #7
   13808:	e2832008 	add	r2, r3, #8
   1380c:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   13810:	e1c320d0 	ldrd	r2, [r3]
   13814:	e14b21f4 	strd	r2, [fp, #-20]	; 0xffffffec
    int whence = va_arg(ap, int);
   13818:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1381c:	e2832004 	add	r2, r3, #4
   13820:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   13824:	e5933000 	ldr	r3, [r3]
   13828:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

    if (!valid_fd(fd)) {
   1382c:	e51b000c 	ldr	r0, [fp, #-12]
   13830:	ebfffba6 	bl	126d0 <valid_fd>
   13834:	e1a03000 	mov	r3, r0
   13838:	e3530000 	cmp	r3, #0
   1383c:	1a000001 	bne	13848 <sys_lseek+0x70>
        return -EBADF;
   13840:	e3e03008 	mvn	r3, #8
   13844:	ea000059 	b	139b0 <sys_lseek+0x1d8>
    }

    muslcsys_fd_t *muslc_fd = get_fd_struct(fd);
   13848:	e51b000c 	ldr	r0, [fp, #-12]
   1384c:	ebfffc94 	bl	12aa4 <get_fd_struct>
   13850:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
    if (muslc_fd == NULL) {
   13854:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   13858:	e3530000 	cmp	r3, #0
   1385c:	1a000001 	bne	13868 <sys_lseek+0x90>
        return -EBADF;
   13860:	e3e03008 	mvn	r3, #8
   13864:	ea000051 	b	139b0 <sys_lseek+0x1d8>
    }

    if (muslc_fd->filetype != FILE_TYPE_CPIO) {
   13868:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1386c:	e5933000 	ldr	r3, [r3]
   13870:	e3530000 	cmp	r3, #0
   13874:	0a000007 	beq	13898 <sys_lseek+0xc0>
        assert(!"Not implemented\n");
   13878:	e3073984 	movw	r3, #31108	; 0x7984
   1387c:	e3403002 	movt	r3, #2
   13880:	e30021bf 	movw	r2, #447	; 0x1bf
   13884:	e30716ac 	movw	r1, #30380	; 0x76ac
   13888:	e3401002 	movt	r1, #2
   1388c:	e30708c8 	movw	r0, #30920	; 0x78c8
   13890:	e3400002 	movt	r0, #2
   13894:	eb002b34 	bl	1e56c <__assert_fail>
        return -EBADF;
    }

    /* if its a valid fd it must be a cpio file, we
     * don't support anything else */
    cpio_file_data_t *cpio_fd = muslc_fd->data;
   13898:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1389c:	e5933004 	ldr	r3, [r3, #4]
   138a0:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0

    int new_offset = 0;
   138a4:	e3a03000 	mov	r3, #0
   138a8:	e50b3008 	str	r3, [fp, #-8]
    switch (whence) {
   138ac:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   138b0:	e3530002 	cmp	r3, #2
   138b4:	0a00001d 	beq	13930 <sys_lseek+0x158>
   138b8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   138bc:	e3530002 	cmp	r3, #2
   138c0:	ca000026 	bgt	13960 <sys_lseek+0x188>
   138c4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   138c8:	e3530000 	cmp	r3, #0
   138cc:	0a000003 	beq	138e0 <sys_lseek+0x108>
   138d0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   138d4:	e3530001 	cmp	r3, #1
   138d8:	0a000003 	beq	138ec <sys_lseek+0x114>
   138dc:	ea00001f 	b	13960 <sys_lseek+0x188>
    case SEEK_SET:
        new_offset = offset;
   138e0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   138e4:	e50b3008 	str	r3, [fp, #-8]
        break;
   138e8:	ea00001e 	b	13968 <sys_lseek+0x190>
    case SEEK_CUR:
        if (!safe_addition(cpio_fd->current, offset)) {
   138ec:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   138f0:	e1c320d8 	ldrd	r2, [r3, #8]
   138f4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   138f8:	e1a01003 	mov	r1, r3
   138fc:	e1a00002 	mov	r0, r2
   13900:	ebffff94 	bl	13758 <safe_addition>
   13904:	e1a03000 	mov	r3, r0
   13908:	e3530000 	cmp	r3, #0
   1390c:	1a000001 	bne	13918 <sys_lseek+0x140>
            return -EOVERFLOW;
   13910:	e3e0304a 	mvn	r3, #74	; 0x4a
   13914:	ea000025 	b	139b0 <sys_lseek+0x1d8>
        }
        new_offset = cpio_fd->current + offset;
   13918:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1391c:	e1c320d8 	ldrd	r2, [r3, #8]
   13920:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13924:	e0823003 	add	r3, r2, r3
   13928:	e50b3008 	str	r3, [fp, #-8]
        break;
   1392c:	ea00000d 	b	13968 <sys_lseek+0x190>
    case SEEK_END:
        if (offset > 0) {
   13930:	e14b21d4 	ldrd	r2, [fp, #-20]	; 0xffffffec
   13934:	e3520001 	cmp	r2, #1
   13938:	e2d33000 	sbcs	r3, r3, #0
   1393c:	ba000001 	blt	13948 <sys_lseek+0x170>
            /* can't seek beyond the end of the cpio file */
            return -EINVAL;
   13940:	e3e03015 	mvn	r3, #21
   13944:	ea000019 	b	139b0 <sys_lseek+0x1d8>
        }
        new_offset = cpio_fd->size + offset;
   13948:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1394c:	e5932004 	ldr	r2, [r3, #4]
   13950:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13954:	e0823003 	add	r3, r2, r3
   13958:	e50b3008 	str	r3, [fp, #-8]
        break;
   1395c:	ea000001 	b	13968 <sys_lseek+0x190>
    default:
        return -EINVAL;
   13960:	e3e03015 	mvn	r3, #21
   13964:	ea000011 	b	139b0 <sys_lseek+0x1d8>
    }

    if (new_offset < 0) {
   13968:	e51b3008 	ldr	r3, [fp, #-8]
   1396c:	e3530000 	cmp	r3, #0
   13970:	aa000001 	bge	1397c <sys_lseek+0x1a4>
        return -EINVAL;
   13974:	e3e03015 	mvn	r3, #21
   13978:	ea00000c 	b	139b0 <sys_lseek+0x1d8>
        /* can't seek past the end of the cpio file */
    } else if (new_offset > cpio_fd->size) {
   1397c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13980:	e5932004 	ldr	r2, [r3, #4]
   13984:	e51b3008 	ldr	r3, [fp, #-8]
   13988:	e1520003 	cmp	r2, r3
   1398c:	2a000001 	bcs	13998 <sys_lseek+0x1c0>
        return -EINVAL;
   13990:	e3e03015 	mvn	r3, #21
   13994:	ea000005 	b	139b0 <sys_lseek+0x1d8>
    }

    cpio_fd->current = new_offset;
   13998:	e51b3008 	ldr	r3, [fp, #-8]
   1399c:	e1a02003 	mov	r2, r3
   139a0:	e1a03fc2 	asr	r3, r2, #31
   139a4:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   139a8:	e1c120f8 	strd	r2, [r1, #8]

    return new_offset;
   139ac:	e51b3008 	ldr	r3, [fp, #-8]
}
   139b0:	e1a00003 	mov	r0, r3
   139b4:	e24bd004 	sub	sp, fp, #4
   139b8:	e8bd8800 	pop	{fp, pc}

000139bc <sys__llseek>:

long syscall(long n, ...);

long sys__llseek(va_list ap)
{
   139bc:	e92d4800 	push	{fp, lr}
   139c0:	e28db004 	add	fp, sp, #4
   139c4:	e24dd028 	sub	sp, sp, #40	; 0x28
   139c8:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    int fd = va_arg(ap, int);
   139cc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   139d0:	e2832004 	add	r2, r3, #4
   139d4:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   139d8:	e5933000 	ldr	r3, [r3]
   139dc:	e50b3008 	str	r3, [fp, #-8]
    uint32_t offset_high = va_arg(ap, uint32_t);
   139e0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   139e4:	e2832004 	add	r2, r3, #4
   139e8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   139ec:	e5933000 	ldr	r3, [r3]
   139f0:	e50b300c 	str	r3, [fp, #-12]
    uint32_t offset_low = va_arg(ap, uint32_t);
   139f4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   139f8:	e2832004 	add	r2, r3, #4
   139fc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13a00:	e5933000 	ldr	r3, [r3]
   13a04:	e50b3010 	str	r3, [fp, #-16]
    off_t *result = va_arg(ap, off_t *);
   13a08:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a0c:	e2832004 	add	r2, r3, #4
   13a10:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13a14:	e5933000 	ldr	r3, [r3]
   13a18:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    int whence = va_arg(ap, int);
   13a1c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   13a20:	e2832004 	add	r2, r3, #4
   13a24:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   13a28:	e5933000 	ldr	r3, [r3]
   13a2c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
     * hood all syscall arguments get cast to a 32bit long before the actual syscall function
     * gets called. This makes calling the old lseek syscall awkward as it will attempt to pull
     * a 64bit off_t off its syscall args, but we had all our arguments forced down to 32bits
     * before they got passed over. Therefore we can actually just pass the high and low
     * and everything will work. Assumptions on endianess */
    long ret = syscall(SYS_lseek, fd, (uint32_t)offset_low, (uint32_t)offset_high, whence);
   13a30:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a34:	e58d3000 	str	r3, [sp]
   13a38:	e51b300c 	ldr	r3, [fp, #-12]
   13a3c:	e51b2010 	ldr	r2, [fp, #-16]
   13a40:	e51b1008 	ldr	r1, [fp, #-8]
   13a44:	e3a00013 	mov	r0, #19
   13a48:	eb002de7 	bl	1f1ec <syscall>
   13a4c:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
    if (ret == -1) {
   13a50:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a54:	e3730001 	cmn	r3, #1
   13a58:	1a000005 	bne	13a74 <sys__llseek+0xb8>
        /* propogate error up. see __syscall_ret to understand */
        return -errno;
   13a5c:	ebfffa26 	bl	122fc <__aeabi_read_tp>
   13a60:	e1a03000 	mov	r3, r0
   13a64:	e59f2038 	ldr	r2, [pc, #56]	; 13aa4 <sys__llseek+0xe8>
   13a68:	e7933002 	ldr	r3, [r3, r2]
   13a6c:	e2633000 	rsb	r3, r3, #0
   13a70:	ea000008 	b	13a98 <sys__llseek+0xdc>
    }
    if (result) {
   13a74:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13a78:	e3530000 	cmp	r3, #0
   13a7c:	0a000004 	beq	13a94 <sys__llseek+0xd8>
        *result = (off_t)ret;
   13a80:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a84:	e1a02003 	mov	r2, r3
   13a88:	e1a03fc2 	asr	r3, r2, #31
   13a8c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   13a90:	e1c120f0 	strd	r2, [r1]
    }
    return 0;
   13a94:	e3a03000 	mov	r3, #0
}
   13a98:	e1a00003 	mov	r0, r3
   13a9c:	e24bd004 	sub	sp, fp, #4
   13aa0:	e8bd8800 	pop	{fp, pc}
   13aa4:	0000000c 	andeq	r0, r0, ip

00013aa8 <sys_access>:

long sys_access(va_list ap)
{
   13aa8:	e92d4800 	push	{fp, lr}
   13aac:	e28db004 	add	fp, sp, #4
   13ab0:	e24dd028 	sub	sp, sp, #40	; 0x28
   13ab4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    const char *pathname = va_arg(ap, const char *);
   13ab8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13abc:	e2832004 	add	r2, r3, #4
   13ac0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   13ac4:	e5933000 	ldr	r3, [r3]
   13ac8:	e50b3008 	str	r3, [fp, #-8]
    int mode = va_arg(ap, int);
   13acc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ad0:	e2832004 	add	r2, r3, #4
   13ad4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   13ad8:	e5933000 	ldr	r3, [r3]
   13adc:	e50b300c 	str	r3, [fp, #-12]
    /* just try and open. currently we only support reading with the CPIO file system */
    if (mode == F_OK || mode == R_OK) {
   13ae0:	e51b300c 	ldr	r3, [fp, #-12]
   13ae4:	e3530000 	cmp	r3, #0
   13ae8:	0a000002 	beq	13af8 <sys_access+0x50>
   13aec:	e51b300c 	ldr	r3, [fp, #-12]
   13af0:	e3530004 	cmp	r3, #4
   13af4:	1a00000d 	bne	13b30 <sys_access+0x88>
        int fd = open(pathname, O_RDONLY, 0);
   13af8:	e3a02000 	mov	r2, #0
   13afc:	e3a01000 	mov	r1, #0
   13b00:	e51b0008 	ldr	r0, [fp, #-8]
   13b04:	eb002ab3 	bl	1e5d8 <open>
   13b08:	e50b0010 	str	r0, [fp, #-16]
        if (fd < 0) {
   13b0c:	e51b3010 	ldr	r3, [fp, #-16]
   13b10:	e3530000 	cmp	r3, #0
   13b14:	aa000001 	bge	13b20 <sys_access+0x78>
            return -EACCES;
   13b18:	e3e0300c 	mvn	r3, #12
   13b1c:	ea000018 	b	13b84 <sys_access+0xdc>
        }
        close(fd);
   13b20:	e51b0010 	ldr	r0, [fp, #-16]
   13b24:	eb0039a2 	bl	221b4 <close>
        return 0;
   13b28:	e3a03000 	mov	r3, #0
   13b2c:	ea000014 	b	13b84 <sys_access+0xdc>
    }
    ZF_LOGE("Must pass F_OK or R_OK to %s\n", __FUNCTION__);
   13b30:	e3083104 	movw	r3, #33028	; 0x8104
   13b34:	e3403004 	movt	r3, #4
   13b38:	e5933000 	ldr	r3, [r3]
   13b3c:	e3530005 	cmp	r3, #5
   13b40:	ca00000e 	bgt	13b80 <sys_access+0xd8>
   13b44:	e307399c 	movw	r3, #31132	; 0x799c
   13b48:	e3403002 	movt	r3, #2
   13b4c:	e58d3008 	str	r3, [sp, #8]
   13b50:	e30738e0 	movw	r3, #30944	; 0x78e0
   13b54:	e3403002 	movt	r3, #2
   13b58:	e58d3004 	str	r3, [sp, #4]
   13b5c:	e3a03000 	mov	r3, #0
   13b60:	e58d3000 	str	r3, [sp]
   13b64:	e3a03005 	mov	r3, #5
   13b68:	e3002211 	movw	r2, #529	; 0x211
   13b6c:	e30716ac 	movw	r1, #30380	; 0x76ac
   13b70:	e3401002 	movt	r1, #2
   13b74:	e3070990 	movw	r0, #31120	; 0x7990
   13b78:	e3400002 	movt	r0, #2
   13b7c:	eb002901 	bl	1df88 <_zf_log_write_d>
    return -EACCES;
   13b80:	e3e0300c 	mvn	r3, #12
}
   13b84:	e1a00003 	mov	r0, r3
   13b88:	e24bd004 	sub	sp, fp, #4
   13b8c:	e8bd8800 	pop	{fp, pc}

00013b90 <muslcsys_install_cpio_interface>:

void muslcsys_install_cpio_interface(void const *cpio_symbol, unsigned long cpio_len,
                                     muslcsys_cpio_get_file_fn_t fn)
{
   13b90:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13b94:	e28db000 	add	fp, sp, #0
   13b98:	e24dd014 	sub	sp, sp, #20
   13b9c:	e50b0008 	str	r0, [fp, #-8]
   13ba0:	e50b100c 	str	r1, [fp, #-12]
   13ba4:	e50b2010 	str	r2, [fp, #-16]
    cpio_archive_symbol = cpio_symbol;
   13ba8:	e3083050 	movw	r3, #32848	; 0x8050
   13bac:	e3403004 	movt	r3, #4
   13bb0:	e51b2008 	ldr	r2, [fp, #-8]
   13bb4:	e5832000 	str	r2, [r3]
    cpio_archive_len = cpio_len;
   13bb8:	e3083054 	movw	r3, #32852	; 0x8054
   13bbc:	e3403004 	movt	r3, #4
   13bc0:	e51b200c 	ldr	r2, [fp, #-12]
   13bc4:	e5832000 	str	r2, [r3]
    cpio_get_file_impl = fn;
   13bc8:	e3083058 	movw	r3, #32856	; 0x8058
   13bcc:	e3403004 	movt	r3, #4
   13bd0:	e51b2010 	ldr	r2, [fp, #-16]
   13bd4:	e5832000 	str	r2, [r3]
}
   13bd8:	e320f000 	nop	{0}
   13bdc:	e28bd000 	add	sp, fp, #0
   13be0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13be4:	e12fff1e 	bx	lr

00013be8 <seL4_MessageInfo_new>:
    seL4_Uint32 words[1];
};
typedef struct seL4_MessageInfo seL4_MessageInfo_t;

LIBSEL4_INLINE_FUNC seL4_MessageInfo_t CONST
seL4_MessageInfo_new(seL4_Uint32 label, seL4_Uint32 capsUnwrapped, seL4_Uint32 extraCaps, seL4_Uint32 length) {
   13be8:	e92d4800 	push	{fp, lr}
   13bec:	e28db004 	add	fp, sp, #4
   13bf0:	e24dd018 	sub	sp, sp, #24
   13bf4:	e50b0010 	str	r0, [fp, #-16]
   13bf8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   13bfc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   13c00:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    seL4_MessageInfo_t seL4_MessageInfo;

    /* fail if user has passed bits that we will override */  
    seL4_DebugAssert((label & ~0xfffffu) == ((0 && (label & (1u << 31))) ? 0x0 : 0));  
   13c04:	e51b3010 	ldr	r3, [fp, #-16]
   13c08:	e1a03a23 	lsr	r3, r3, #20
   13c0c:	e1a03a03 	lsl	r3, r3, #20
   13c10:	e3530000 	cmp	r3, #0
   13c14:	0a000007 	beq	13c38 <seL4_MessageInfo_new+0x50>
   13c18:	e3073cc4 	movw	r3, #31940	; 0x7cc4
   13c1c:	e3403002 	movt	r3, #2
   13c20:	e3002142 	movw	r2, #322	; 0x142
   13c24:	e30719ac 	movw	r1, #31148	; 0x79ac
   13c28:	e3401002 	movt	r1, #2
   13c2c:	e30709d4 	movw	r0, #31188	; 0x79d4
   13c30:	e3400002 	movt	r0, #2
   13c34:	eb002a4c 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capsUnwrapped & ~0x7u) == ((0 && (capsUnwrapped & (1u << 31))) ? 0x0 : 0));  
   13c38:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13c3c:	e3c33007 	bic	r3, r3, #7
   13c40:	e3530000 	cmp	r3, #0
   13c44:	0a000007 	beq	13c68 <seL4_MessageInfo_new+0x80>
   13c48:	e3073cc4 	movw	r3, #31940	; 0x7cc4
   13c4c:	e3403002 	movt	r3, #2
   13c50:	e3002143 	movw	r2, #323	; 0x143
   13c54:	e30719ac 	movw	r1, #31148	; 0x79ac
   13c58:	e3401002 	movt	r1, #2
   13c5c:	e3070a14 	movw	r0, #31252	; 0x7a14
   13c60:	e3400002 	movt	r0, #2
   13c64:	eb002a40 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((extraCaps & ~0x3u) == ((0 && (extraCaps & (1u << 31))) ? 0x0 : 0));  
   13c68:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c6c:	e3c33003 	bic	r3, r3, #3
   13c70:	e3530000 	cmp	r3, #0
   13c74:	0a000007 	beq	13c98 <seL4_MessageInfo_new+0xb0>
   13c78:	e3073cc4 	movw	r3, #31940	; 0x7cc4
   13c7c:	e3403002 	movt	r3, #2
   13c80:	e3a02f51 	mov	r2, #324	; 0x144
   13c84:	e30719ac 	movw	r1, #31148	; 0x79ac
   13c88:	e3401002 	movt	r1, #2
   13c8c:	e3070a60 	movw	r0, #31328	; 0x7a60
   13c90:	e3400002 	movt	r0, #2
   13c94:	eb002a34 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((length & ~0x7fu) == ((0 && (length & (1u << 31))) ? 0x0 : 0));
   13c98:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c9c:	e3c3307f 	bic	r3, r3, #127	; 0x7f
   13ca0:	e3530000 	cmp	r3, #0
   13ca4:	0a000007 	beq	13cc8 <seL4_MessageInfo_new+0xe0>
   13ca8:	e3073cc4 	movw	r3, #31940	; 0x7cc4
   13cac:	e3403002 	movt	r3, #2
   13cb0:	e3002145 	movw	r2, #325	; 0x145
   13cb4:	e30719ac 	movw	r1, #31148	; 0x79ac
   13cb8:	e3401002 	movt	r1, #2
   13cbc:	e3070aa4 	movw	r0, #31396	; 0x7aa4
   13cc0:	e3400002 	movt	r0, #2
   13cc4:	eb002a28 	bl	1e56c <__assert_fail>

    seL4_MessageInfo.words[0] = 0
        | (label & 0xfffffu) << 12
   13cc8:	e51b3010 	ldr	r3, [fp, #-16]
   13ccc:	e1a02603 	lsl	r2, r3, #12
        | (capsUnwrapped & 0x7u) << 9
   13cd0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   13cd4:	e1a03483 	lsl	r3, r3, #9
   13cd8:	e2033c0e 	and	r3, r3, #3584	; 0xe00
   13cdc:	e1822003 	orr	r2, r2, r3
        | (extraCaps & 0x3u) << 7
   13ce0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ce4:	e1a03383 	lsl	r3, r3, #7
   13ce8:	e2033d06 	and	r3, r3, #384	; 0x180
   13cec:	e1822003 	orr	r2, r2, r3
        | (length & 0x7fu) << 0;
   13cf0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   13cf4:	e203307f 	and	r3, r3, #127	; 0x7f
   13cf8:	e1823003 	orr	r3, r2, r3
    seL4_MessageInfo.words[0] = 0
   13cfc:	e50b3008 	str	r3, [fp, #-8]

    return seL4_MessageInfo;
   13d00:	e51b3008 	ldr	r3, [fp, #-8]
}
   13d04:	e1a00003 	mov	r0, r3
   13d08:	e24bd004 	sub	sp, fp, #4
   13d0c:	e8bd8800 	pop	{fp, pc}

00013d10 <seL4_MessageInfo_get_label>:
        | (extraCaps & 0x3u) << 7
        | (length & 0x7fu) << 0;
}

LIBSEL4_INLINE_FUNC seL4_Uint32 CONST
seL4_MessageInfo_get_label(seL4_MessageInfo_t seL4_MessageInfo) {
   13d10:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13d14:	e28db000 	add	fp, sp, #0
   13d18:	e24dd014 	sub	sp, sp, #20
   13d1c:	e50b0010 	str	r0, [fp, #-16]
    seL4_Uint32 ret;
    ret = (seL4_MessageInfo.words[0] & 0xfffff000u) >> 12;
   13d20:	e51b3010 	ldr	r3, [fp, #-16]
   13d24:	e1a03623 	lsr	r3, r3, #12
   13d28:	e50b3008 	str	r3, [fp, #-8]
    /* Possibly sign extend */
    if (__builtin_expect(!!(0 && (ret & (1u << (31)))), 0)) {
        ret |= 0x0;
    }
    return ret;
   13d2c:	e51b3008 	ldr	r3, [fp, #-8]
}
   13d30:	e1a00003 	mov	r0, r3
   13d34:	e28bd000 	add	sp, fp, #0
   13d38:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13d3c:	e12fff1e 	bx	lr

00013d40 <seL4_MessageInfo_get_length>:
    seL4_MessageInfo_ptr->words[0] &= ~0x180u;
    seL4_MessageInfo_ptr->words[0] |= (v32 << 7) & 0x180;
}

LIBSEL4_INLINE_FUNC seL4_Uint32 CONST
seL4_MessageInfo_get_length(seL4_MessageInfo_t seL4_MessageInfo) {
   13d40:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   13d44:	e28db000 	add	fp, sp, #0
   13d48:	e24dd014 	sub	sp, sp, #20
   13d4c:	e50b0010 	str	r0, [fp, #-16]
    seL4_Uint32 ret;
    ret = (seL4_MessageInfo.words[0] & 0x7fu) >> 0;
   13d50:	e51b3010 	ldr	r3, [fp, #-16]
   13d54:	e203307f 	and	r3, r3, #127	; 0x7f
   13d58:	e50b3008 	str	r3, [fp, #-8]
    /* Possibly sign extend */
    if (__builtin_expect(!!(0 && (ret & (1u << (31)))), 0)) {
        ret |= 0x0;
    }
    return ret;
   13d5c:	e51b3008 	ldr	r3, [fp, #-8]
}
   13d60:	e1a00003 	mov	r0, r3
   13d64:	e28bd000 	add	sp, fp, #0
   13d68:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   13d6c:	e12fff1e 	bx	lr

00013d70 <seL4_GetIPCBuffer>:
{
   13d70:	e92d4800 	push	{fp, lr}
   13d74:	e28db004 	add	fp, sp, #4
    return __sel4_ipc_buffer;
   13d78:	ebfff95f 	bl	122fc <__aeabi_read_tp>
   13d7c:	e1a03000 	mov	r3, r0
   13d80:	e59f2008 	ldr	r2, [pc, #8]	; 13d90 <seL4_GetIPCBuffer+0x20>
   13d84:	e7933002 	ldr	r3, [r3, r2]
}
   13d88:	e1a00003 	mov	r0, r3
   13d8c:	e8bd8800 	pop	{fp, pc}
   13d90:	00000008 	andeq	r0, r0, r8

00013d94 <seL4_SetMR>:
{
    return seL4_GetIPCBuffer()->msg[i];
}

LIBSEL4_INLINE_FUNC void seL4_SetMR(int i, seL4_Word mr)
{
   13d94:	e92d4800 	push	{fp, lr}
   13d98:	e28db004 	add	fp, sp, #4
   13d9c:	e24dd008 	sub	sp, sp, #8
   13da0:	e50b0008 	str	r0, [fp, #-8]
   13da4:	e50b100c 	str	r1, [fp, #-12]
    seL4_GetIPCBuffer()->msg[i] = mr;
   13da8:	ebfffff0 	bl	13d70 <seL4_GetIPCBuffer>
   13dac:	e1a02000 	mov	r2, r0
   13db0:	e51b3008 	ldr	r3, [fp, #-8]
   13db4:	e1a03103 	lsl	r3, r3, #2
   13db8:	e0823003 	add	r3, r2, r3
   13dbc:	e51b200c 	ldr	r2, [fp, #-12]
   13dc0:	e5832004 	str	r2, [r3, #4]
}
   13dc4:	e320f000 	nop	{0}
   13dc8:	e24bd004 	sub	sp, fp, #4
   13dcc:	e8bd8800 	pop	{fp, pc}

00013dd0 <arm_sys_send_recv>:
{
   13dd0:	e92d08b0 	push	{r4, r5, r7, fp}
   13dd4:	e28db00c 	add	fp, sp, #12
   13dd8:	e24dd010 	sub	sp, sp, #16
   13ddc:	e50b0010 	str	r0, [fp, #-16]
   13de0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   13de4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   13de8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    register seL4_Word destptr asm("r0") = dest;
   13dec:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    register seL4_Word info asm("r1") = info_arg;
   13df0:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   13df4:	e59b3008 	ldr	r3, [fp, #8]
   13df8:	e5933000 	ldr	r3, [r3]
   13dfc:	e1a02003 	mov	r2, r3
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   13e00:	e59b300c 	ldr	r3, [fp, #12]
   13e04:	e5933000 	ldr	r3, [r3]
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   13e08:	e59bc010 	ldr	ip, [fp, #16]
   13e0c:	e59cc000 	ldr	ip, [ip]
   13e10:	e1a0400c 	mov	r4, ip
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   13e14:	e59bc014 	ldr	ip, [fp, #20]
   13e18:	e59cc000 	ldr	ip, [ip]
   13e1c:	e1a0500c 	mov	r5, ip
    register seL4_Word scno asm("r7") = sys;
   13e20:	e51b7010 	ldr	r7, [fp, #-16]
    asm volatile(
   13e24:	ef000000 	svc	0x00000000
    *out_info = info;
   13e28:	e1a0c001 	mov	ip, r1
   13e2c:	e59b1004 	ldr	r1, [fp, #4]
   13e30:	e581c000 	str	ip, [r1]
    *out_badge = destptr;
   13e34:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   13e38:	e5810000 	str	r0, [r1]
    *in_out_mr0 = msg0;
   13e3c:	e1a01002 	mov	r1, r2
   13e40:	e59b2008 	ldr	r2, [fp, #8]
   13e44:	e5821000 	str	r1, [r2]
    *in_out_mr1 = msg1;
   13e48:	e1a02003 	mov	r2, r3
   13e4c:	e59b300c 	ldr	r3, [fp, #12]
   13e50:	e5832000 	str	r2, [r3]
    *in_out_mr2 = msg2;
   13e54:	e1a02004 	mov	r2, r4
   13e58:	e59b3010 	ldr	r3, [fp, #16]
   13e5c:	e5832000 	str	r2, [r3]
    *in_out_mr3 = msg3;
   13e60:	e1a02005 	mov	r2, r5
   13e64:	e59b3014 	ldr	r3, [fp, #20]
   13e68:	e5832000 	str	r2, [r3]
}
   13e6c:	e320f000 	nop	{0}
   13e70:	e24bd00c 	sub	sp, fp, #12
   13e74:	e8bd08b0 	pop	{r4, r5, r7, fp}
   13e78:	e12fff1e 	bx	lr

00013e7c <seL4_CallWithMRs>:
{
   13e7c:	e92d4800 	push	{fp, lr}
   13e80:	e28db004 	add	fp, sp, #4
   13e84:	e24dd040 	sub	sp, sp, #64	; 0x40
   13e88:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   13e8c:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   13e90:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   13e94:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    seL4_Word msg0 = 0;
   13e98:	e3a03000 	mov	r3, #0
   13e9c:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word msg1 = 0;
   13ea0:	e3a03000 	mov	r3, #0
   13ea4:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word msg2 = 0;
   13ea8:	e3a03000 	mov	r3, #0
   13eac:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word msg3 = 0;
   13eb0:	e3a03000 	mov	r3, #0
   13eb4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    if (mr0 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 0) {
   13eb8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13ebc:	e3530000 	cmp	r3, #0
   13ec0:	0a000007 	beq	13ee4 <seL4_CallWithMRs+0x68>
   13ec4:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ec8:	ebffff9c 	bl	13d40 <seL4_MessageInfo_get_length>
   13ecc:	e1a03000 	mov	r3, r0
   13ed0:	e3530000 	cmp	r3, #0
   13ed4:	0a000002 	beq	13ee4 <seL4_CallWithMRs+0x68>
        msg0 = *mr0;
   13ed8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13edc:	e5933000 	ldr	r3, [r3]
   13ee0:	e50b300c 	str	r3, [fp, #-12]
    if (mr1 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 1) {
   13ee4:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   13ee8:	e3530000 	cmp	r3, #0
   13eec:	0a000007 	beq	13f10 <seL4_CallWithMRs+0x94>
   13ef0:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ef4:	ebffff91 	bl	13d40 <seL4_MessageInfo_get_length>
   13ef8:	e1a03000 	mov	r3, r0
   13efc:	e3530001 	cmp	r3, #1
   13f00:	9a000002 	bls	13f10 <seL4_CallWithMRs+0x94>
        msg1 = *mr1;
   13f04:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   13f08:	e5933000 	ldr	r3, [r3]
   13f0c:	e50b3010 	str	r3, [fp, #-16]
    if (mr2 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 2) {
   13f10:	e59b3004 	ldr	r3, [fp, #4]
   13f14:	e3530000 	cmp	r3, #0
   13f18:	0a000007 	beq	13f3c <seL4_CallWithMRs+0xc0>
   13f1c:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f20:	ebffff86 	bl	13d40 <seL4_MessageInfo_get_length>
   13f24:	e1a03000 	mov	r3, r0
   13f28:	e3530002 	cmp	r3, #2
   13f2c:	9a000002 	bls	13f3c <seL4_CallWithMRs+0xc0>
        msg2 = *mr2;
   13f30:	e59b3004 	ldr	r3, [fp, #4]
   13f34:	e5933000 	ldr	r3, [r3]
   13f38:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    if (mr3 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 3) {
   13f3c:	e59b3008 	ldr	r3, [fp, #8]
   13f40:	e3530000 	cmp	r3, #0
   13f44:	0a000007 	beq	13f68 <seL4_CallWithMRs+0xec>
   13f48:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f4c:	ebffff7b 	bl	13d40 <seL4_MessageInfo_get_length>
   13f50:	e1a03000 	mov	r3, r0
   13f54:	e3530003 	cmp	r3, #3
   13f58:	9a000002 	bls	13f68 <seL4_CallWithMRs+0xec>
        msg3 = *mr3;
   13f5c:	e59b3008 	ldr	r3, [fp, #8]
   13f60:	e5933000 	ldr	r3, [r3]
   13f64:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    arm_sys_send_recv(seL4_SysCall, dest, &dest, msgInfo.words[0], &info.words[0], &msg0, &msg1, &msg2, &msg3, 0);
   13f68:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   13f6c:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   13f70:	e24b2020 	sub	r2, fp, #32
   13f74:	e3a03000 	mov	r3, #0
   13f78:	e58d3014 	str	r3, [sp, #20]
   13f7c:	e24b3018 	sub	r3, fp, #24
   13f80:	e58d3010 	str	r3, [sp, #16]
   13f84:	e24b3014 	sub	r3, fp, #20
   13f88:	e58d300c 	str	r3, [sp, #12]
   13f8c:	e24b3010 	sub	r3, fp, #16
   13f90:	e58d3008 	str	r3, [sp, #8]
   13f94:	e24b300c 	sub	r3, fp, #12
   13f98:	e58d3004 	str	r3, [sp, #4]
   13f9c:	e24b3008 	sub	r3, fp, #8
   13fa0:	e58d3000 	str	r3, [sp]
   13fa4:	e1a03000 	mov	r3, r0
   13fa8:	e3e00000 	mvn	r0, #0
   13fac:	ebffff87 	bl	13dd0 <arm_sys_send_recv>
    if (mr0 != seL4_Null) {
   13fb0:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13fb4:	e3530000 	cmp	r3, #0
   13fb8:	0a000002 	beq	13fc8 <seL4_CallWithMRs+0x14c>
        *mr0 = msg0;
   13fbc:	e51b200c 	ldr	r2, [fp, #-12]
   13fc0:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   13fc4:	e5832000 	str	r2, [r3]
    if (mr1 != seL4_Null) {
   13fc8:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   13fcc:	e3530000 	cmp	r3, #0
   13fd0:	0a000002 	beq	13fe0 <seL4_CallWithMRs+0x164>
        *mr1 = msg1;
   13fd4:	e51b2010 	ldr	r2, [fp, #-16]
   13fd8:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   13fdc:	e5832000 	str	r2, [r3]
    if (mr2 != seL4_Null) {
   13fe0:	e59b3004 	ldr	r3, [fp, #4]
   13fe4:	e3530000 	cmp	r3, #0
   13fe8:	0a000002 	beq	13ff8 <seL4_CallWithMRs+0x17c>
        *mr2 = msg2;
   13fec:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   13ff0:	e59b3004 	ldr	r3, [fp, #4]
   13ff4:	e5832000 	str	r2, [r3]
    if (mr3 != seL4_Null) {
   13ff8:	e59b3008 	ldr	r3, [fp, #8]
   13ffc:	e3530000 	cmp	r3, #0
   14000:	0a000002 	beq	14010 <seL4_CallWithMRs+0x194>
        *mr3 = msg3;
   14004:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   14008:	e59b3008 	ldr	r3, [fp, #8]
   1400c:	e5832000 	str	r2, [r3]
    return info;
   14010:	e51b3008 	ldr	r3, [fp, #-8]
}
   14014:	e1a00003 	mov	r0, r3
   14018:	e24bd004 	sub	sp, fp, #4
   1401c:	e8bd8800 	pop	{fp, pc}

00014020 <seL4_DebugPutChar>:
{
   14020:	e92d4800 	push	{fp, lr}
   14024:	e28db004 	add	fp, sp, #4
   14028:	e24dd038 	sub	sp, sp, #56	; 0x38
   1402c:	e1a03000 	mov	r3, r0
   14030:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
    seL4_Word unused0 = 0;
   14034:	e3a03000 	mov	r3, #0
   14038:	e50b3008 	str	r3, [fp, #-8]
    seL4_Word unused1 = 0;
   1403c:	e3a03000 	mov	r3, #0
   14040:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word unused2 = 0;
   14044:	e3a03000 	mov	r3, #0
   14048:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word unused3 = 0;
   1404c:	e3a03000 	mov	r3, #0
   14050:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word unused4 = 0;
   14054:	e3a03000 	mov	r3, #0
   14058:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    seL4_Word unused5 = 0;
   1405c:	e3a03000 	mov	r3, #0
   14060:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    arm_sys_send_recv(seL4_SysDebugPutChar, c, &unused0, 0, &unused1, &unused2, &unused3, &unused4, &unused5, 0);
   14064:	e55b101d 	ldrb	r1, [fp, #-29]	; 0xffffffe3
   14068:	e24b2008 	sub	r2, fp, #8
   1406c:	e3a03000 	mov	r3, #0
   14070:	e58d3014 	str	r3, [sp, #20]
   14074:	e24b301c 	sub	r3, fp, #28
   14078:	e58d3010 	str	r3, [sp, #16]
   1407c:	e24b3018 	sub	r3, fp, #24
   14080:	e58d300c 	str	r3, [sp, #12]
   14084:	e24b3014 	sub	r3, fp, #20
   14088:	e58d3008 	str	r3, [sp, #8]
   1408c:	e24b3010 	sub	r3, fp, #16
   14090:	e58d3004 	str	r3, [sp, #4]
   14094:	e24b300c 	sub	r3, fp, #12
   14098:	e58d3000 	str	r3, [sp]
   1409c:	e3a03000 	mov	r3, #0
   140a0:	e3e00008 	mvn	r0, #8
   140a4:	ebffff49 	bl	13dd0 <arm_sys_send_recv>
}
   140a8:	e320f000 	nop	{0}
   140ac:	e24bd004 	sub	sp, fp, #4
   140b0:	e8bd8800 	pop	{fp, pc}

000140b4 <seL4_TCB_SetTLSBase>:
 * @retval seL4_IllegalOperation The  @xmlonly <texttt text="_service"/> @endxmlonly  is a CPtr to a capability of the wrong type. 
 * @retval seL4_InvalidCapability The  @xmlonly <texttt text="_service"/> @endxmlonly  is a CPtr to a capability of the wrong type. 
 */
LIBSEL4_INLINE seL4_Error
seL4_TCB_SetTLSBase(seL4_TCB _service, seL4_Word tls_base)
{
   140b4:	e92d4800 	push	{fp, lr}
   140b8:	e28db004 	add	fp, sp, #4
   140bc:	e24dd030 	sub	sp, sp, #48	; 0x30
   140c0:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   140c4:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
	seL4_Error result;
	seL4_MessageInfo_t tag = seL4_MessageInfo_new(TCBSetTLSBase, 0, 0, 1);
   140c8:	e3a03001 	mov	r3, #1
   140cc:	e3a02000 	mov	r2, #0
   140d0:	e3a01000 	mov	r1, #0
   140d4:	e3a0000f 	mov	r0, #15
   140d8:	ebfffec2 	bl	13be8 <seL4_MessageInfo_new>
   140dc:	e1a03000 	mov	r3, r0
   140e0:	e50b300c 	str	r3, [fp, #-12]
	seL4_Word mr1;
	seL4_Word mr2;
	seL4_Word mr3;

	/* Marshal and initialise parameters. */
	mr0 = tls_base;
   140e4:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   140e8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	mr1 = 0;
   140ec:	e3a03000 	mov	r3, #0
   140f0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	mr2 = 0;
   140f4:	e3a03000 	mov	r3, #0
   140f8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	mr3 = 0;
   140fc:	e3a03000 	mov	r3, #0
   14100:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0

	/* Perform the call, passing in-register arguments directly. */
	output_tag = seL4_CallWithMRs(_service, tag,
   14104:	e24b1018 	sub	r1, fp, #24
   14108:	e24b2014 	sub	r2, fp, #20
   1410c:	e24b3020 	sub	r3, fp, #32
   14110:	e58d3004 	str	r3, [sp, #4]
   14114:	e24b301c 	sub	r3, fp, #28
   14118:	e58d3000 	str	r3, [sp]
   1411c:	e1a03001 	mov	r3, r1
   14120:	e51b100c 	ldr	r1, [fp, #-12]
   14124:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   14128:	ebffff53 	bl	13e7c <seL4_CallWithMRs>
   1412c:	e1a03000 	mov	r3, r0
   14130:	e50b3010 	str	r3, [fp, #-16]
		&mr0, &mr1, &mr2, &mr3);
	result = (seL4_Error) seL4_MessageInfo_get_label(output_tag);
   14134:	e51b0010 	ldr	r0, [fp, #-16]
   14138:	ebfffef4 	bl	13d10 <seL4_MessageInfo_get_label>
   1413c:	e50b0008 	str	r0, [fp, #-8]

	/* Unmarshal registers into IPC buffer on error. */
	if (result != seL4_NoError) {
   14140:	e51b3008 	ldr	r3, [fp, #-8]
   14144:	e3530000 	cmp	r3, #0
   14148:	0a00000f 	beq	1418c <seL4_TCB_SetTLSBase+0xd8>
		seL4_SetMR(0, mr0);
   1414c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14150:	e1a01003 	mov	r1, r3
   14154:	e3a00000 	mov	r0, #0
   14158:	ebffff0d 	bl	13d94 <seL4_SetMR>
		seL4_SetMR(1, mr1);
   1415c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14160:	e1a01003 	mov	r1, r3
   14164:	e3a00001 	mov	r0, #1
   14168:	ebffff09 	bl	13d94 <seL4_SetMR>
		seL4_SetMR(2, mr2);
   1416c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   14170:	e1a01003 	mov	r1, r3
   14174:	e3a00002 	mov	r0, #2
   14178:	ebffff05 	bl	13d94 <seL4_SetMR>
		seL4_SetMR(3, mr3);
   1417c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   14180:	e1a01003 	mov	r1, r3
   14184:	e3a00003 	mov	r0, #3
   14188:	ebffff01 	bl	13d94 <seL4_SetMR>
			seL4_DebugPutString(seL4_GetDebugError());
		}
#endif
	}

	return result;
   1418c:	e51b3008 	ldr	r3, [fp, #-8]
}
   14190:	e1a00003 	mov	r0, r3
   14194:	e24bd004 	sub	sp, fp, #4
   14198:	e8bd8800 	pop	{fp, pc}

0001419c <boot_set_thread_area>:
#if defined(__NR_set_thread_area) || defined(__ARM_NR_set_tls)
static bool boot_set_thread_area_happened;
static void *boot_set_thread_area_arg;

static long boot_set_thread_area(va_list ap)
{
   1419c:	e92d4800 	push	{fp, lr}
   141a0:	e28db004 	add	fp, sp, #4
   141a4:	e24dd020 	sub	sp, sp, #32
   141a8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    void *tp = va_arg(ap, void *);
   141ac:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   141b0:	e2832004 	add	r2, r3, #4
   141b4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   141b8:	e5933000 	ldr	r3, [r3]
   141bc:	e50b3008 	str	r3, [fp, #-8]
    if (boot_set_thread_area_happened) {
   141c0:	e3083070 	movw	r3, #32880	; 0x8070
   141c4:	e3403004 	movt	r3, #4
   141c8:	e5d33000 	ldrb	r3, [r3]
   141cc:	e3530000 	cmp	r3, #0
   141d0:	0a000012 	beq	14220 <boot_set_thread_area+0x84>
        ZF_LOGE("Boot version of set_thread_area somehow got called twice");
   141d4:	e3083104 	movw	r3, #33028	; 0x8104
   141d8:	e3403004 	movt	r3, #4
   141dc:	e5933000 	ldr	r3, [r3]
   141e0:	e3530005 	cmp	r3, #5
   141e4:	ca00000b 	bgt	14218 <boot_set_thread_area+0x7c>
   141e8:	e3073b44 	movw	r3, #31556	; 0x7b44
   141ec:	e3403002 	movt	r3, #2
   141f0:	e58d3004 	str	r3, [sp, #4]
   141f4:	e3a03000 	mov	r3, #0
   141f8:	e58d3000 	str	r3, [sp]
   141fc:	e3a03005 	mov	r3, #5
   14200:	e3a02028 	mov	r2, #40	; 0x28
   14204:	e3071ae4 	movw	r1, #31460	; 0x7ae4
   14208:	e3401002 	movt	r1, #2
   1420c:	e3070cac 	movw	r0, #31916	; 0x7cac
   14210:	e3400002 	movt	r0, #2
   14214:	eb00275b 	bl	1df88 <_zf_log_write_d>
        return -ESRCH;
   14218:	e3e03002 	mvn	r3, #2
   1421c:	ea00001d 	b	14298 <boot_set_thread_area+0xfc>
     * write to it directly, but the C library will not know this. In this case we set the
     * thread pointer here and then return, otherwise we have to resort to using the TCB invocation */
#if defined(CONFIG_FSGSBASE_INST)
    asm volatile("wrfsbase %0" :: "r"(tp));
#else
    char *tcb_string = getenv("boot_tcb_cptr");
   14220:	e3070b80 	movw	r0, #31616	; 0x7b80
   14224:	e3400002 	movt	r0, #2
   14228:	eb002895 	bl	1e484 <getenv>
   1422c:	e50b000c 	str	r0, [fp, #-12]
    if (tcb_string) {
   14230:	e51b300c 	ldr	r3, [fp, #-12]
   14234:	e3530000 	cmp	r3, #0
   14238:	0a00000d 	beq	14274 <boot_set_thread_area+0xd8>
        seL4_CPtr tcb;
        if (sscanf(tcb_string, "%p", (void **)&tcb) == 1) {
   1423c:	e24b3010 	sub	r3, fp, #16
   14240:	e1a02003 	mov	r2, r3
   14244:	e3071b90 	movw	r1, #31632	; 0x7b90
   14248:	e3401002 	movt	r1, #2
   1424c:	e51b000c 	ldr	r0, [fp, #-12]
   14250:	eb002db7 	bl	1f934 <sscanf>
   14254:	e1a03000 	mov	r3, r0
   14258:	e3530001 	cmp	r3, #1
   1425c:	1a000004 	bne	14274 <boot_set_thread_area+0xd8>
            seL4_TCB_SetTLSBase(tcb, (seL4_Word)tp);
   14260:	e51b3010 	ldr	r3, [fp, #-16]
   14264:	e51b2008 	ldr	r2, [fp, #-8]
   14268:	e1a01002 	mov	r1, r2
   1426c:	e1a00003 	mov	r0, r3
   14270:	ebffff8f 	bl	140b4 <seL4_TCB_SetTLSBase>
        }
    }
#endif
    boot_set_thread_area_happened = true;
   14274:	e3083070 	movw	r3, #32880	; 0x8070
   14278:	e3403004 	movt	r3, #4
   1427c:	e3a02001 	mov	r2, #1
   14280:	e5c32000 	strb	r2, [r3]
    boot_set_thread_area_arg = tp;
   14284:	e3083074 	movw	r3, #32884	; 0x8074
   14288:	e3403004 	movt	r3, #4
   1428c:	e51b2008 	ldr	r2, [fp, #-8]
   14290:	e5832000 	str	r2, [r3]
    return 0;
   14294:	e3a03000 	mov	r3, #0
}
   14298:	e1a00003 	mov	r0, r3
   1429c:	e24bd004 	sub	sp, fp, #4
   142a0:	e8bd8800 	pop	{fp, pc}

000142a4 <muslcsys_get_boot_set_thread_area>:

bool muslcsys_get_boot_set_thread_area(void **arg)
{
   142a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   142a8:	e28db000 	add	fp, sp, #0
   142ac:	e24dd00c 	sub	sp, sp, #12
   142b0:	e50b0008 	str	r0, [fp, #-8]
    *arg = boot_set_thread_area_arg;
   142b4:	e3083074 	movw	r3, #32884	; 0x8074
   142b8:	e3403004 	movt	r3, #4
   142bc:	e5932000 	ldr	r2, [r3]
   142c0:	e51b3008 	ldr	r3, [fp, #-8]
   142c4:	e5832000 	str	r2, [r3]
    return boot_set_thread_area_happened;
   142c8:	e3083070 	movw	r3, #32880	; 0x8070
   142cc:	e3403004 	movt	r3, #4
   142d0:	e5d33000 	ldrb	r3, [r3]
}
   142d4:	e1a00003 	mov	r0, r3
   142d8:	e28bd000 	add	sp, fp, #0
   142dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   142e0:	e12fff1e 	bx	lr

000142e4 <boot_set_tid_address>:
#endif

static long boot_set_tid_address(va_list ap)
{
   142e4:	e92d4800 	push	{fp, lr}
   142e8:	e28db004 	add	fp, sp, #4
   142ec:	e24dd018 	sub	sp, sp, #24
   142f0:	e50b0010 	str	r0, [fp, #-16]
    int *tid = va_arg(ap, int *);
   142f4:	e51b3010 	ldr	r3, [fp, #-16]
   142f8:	e2832004 	add	r2, r3, #4
   142fc:	e50b2010 	str	r2, [fp, #-16]
   14300:	e5933000 	ldr	r3, [r3]
   14304:	e50b3008 	str	r3, [fp, #-8]
    if (boot_set_tid_address_happened) {
   14308:	e3083068 	movw	r3, #32872	; 0x8068
   1430c:	e3403004 	movt	r3, #4
   14310:	e5d33000 	ldrb	r3, [r3]
   14314:	e3530000 	cmp	r3, #0
   14318:	0a000012 	beq	14368 <boot_set_tid_address+0x84>
        ZF_LOGE("Boot version of set_tid_address somehow got called twice");
   1431c:	e3083104 	movw	r3, #33028	; 0x8104
   14320:	e3403004 	movt	r3, #4
   14324:	e5933000 	ldr	r3, [r3]
   14328:	e3530005 	cmp	r3, #5
   1432c:	ca00000b 	bgt	14360 <boot_set_tid_address+0x7c>
   14330:	e3073b94 	movw	r3, #31636	; 0x7b94
   14334:	e3403002 	movt	r3, #2
   14338:	e58d3004 	str	r3, [sp, #4]
   1433c:	e3a03000 	mov	r3, #0
   14340:	e58d3000 	str	r3, [sp]
   14344:	e3a03005 	mov	r3, #5
   14348:	e3a0204d 	mov	r2, #77	; 0x4d
   1434c:	e3071ae4 	movw	r1, #31460	; 0x7ae4
   14350:	e3401002 	movt	r1, #2
   14354:	e3070cdc 	movw	r0, #31964	; 0x7cdc
   14358:	e3400002 	movt	r0, #2
   1435c:	eb002709 	bl	1df88 <_zf_log_write_d>
        return 1;
   14360:	e3a03001 	mov	r3, #1
   14364:	ea000008 	b	1438c <boot_set_tid_address+0xa8>
    }
    boot_set_tid_address_happened = true;
   14368:	e3083068 	movw	r3, #32872	; 0x8068
   1436c:	e3403004 	movt	r3, #4
   14370:	e3a02001 	mov	r2, #1
   14374:	e5c32000 	strb	r2, [r3]
    boot_set_tid_address_arg = tid;
   14378:	e308306c 	movw	r3, #32876	; 0x806c
   1437c:	e3403004 	movt	r3, #4
   14380:	e51b2008 	ldr	r2, [fp, #-8]
   14384:	e5832000 	str	r2, [r3]
    return 1;
   14388:	e3a03001 	mov	r3, #1
}
   1438c:	e1a00003 	mov	r0, r3
   14390:	e24bd004 	sub	sp, fp, #4
   14394:	e8bd8800 	pop	{fp, pc}

00014398 <muslcsys_get_boot_set_tid_address>:

bool muslcsys_get_boot_set_tid_address(int **arg)
{
   14398:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1439c:	e28db000 	add	fp, sp, #0
   143a0:	e24dd00c 	sub	sp, sp, #12
   143a4:	e50b0008 	str	r0, [fp, #-8]
    *arg = boot_set_tid_address_arg;
   143a8:	e308306c 	movw	r3, #32876	; 0x806c
   143ac:	e3403004 	movt	r3, #4
   143b0:	e5932000 	ldr	r2, [r3]
   143b4:	e51b3008 	ldr	r3, [fp, #-8]
   143b8:	e5832000 	str	r2, [r3]
    return boot_set_tid_address_happened;
   143bc:	e3083068 	movw	r3, #32872	; 0x8068
   143c0:	e3403004 	movt	r3, #4
   143c4:	e5d33000 	ldrb	r3, [r3]
}
   143c8:	e1a00003 	mov	r0, r3
   143cc:	e28bd000 	add	sp, fp, #0
   143d0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   143d4:	e12fff1e 	bx	lr

000143d8 <boot_sys_writev>:

/* Basic sys_writev for use during booting that will only use seL4_DebugPutChar */
long boot_sys_writev(va_list ap)
{
   143d8:	e92d4800 	push	{fp, lr}
   143dc:	e28db004 	add	fp, sp, #4
   143e0:	e24dd028 	sub	sp, sp, #40	; 0x28
   143e4:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    int UNUSED fildes = va_arg(ap, int);
   143e8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   143ec:	e2832004 	add	r2, r3, #4
   143f0:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   143f4:	e5933000 	ldr	r3, [r3]
   143f8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    struct iovec *iov = va_arg(ap, struct iovec *);
   143fc:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14400:	e2832004 	add	r2, r3, #4
   14404:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14408:	e5933000 	ldr	r3, [r3]
   1440c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    int iovcnt = va_arg(ap, int);
   14410:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14414:	e2832004 	add	r2, r3, #4
   14418:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   1441c:	e5933000 	ldr	r3, [r3]
   14420:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4

    ssize_t ret = 0;
   14424:	e3a03000 	mov	r3, #0
   14428:	e50b3008 	str	r3, [fp, #-8]

    for (int i = 0; i < iovcnt; i++) {
   1442c:	e3a03000 	mov	r3, #0
   14430:	e50b300c 	str	r3, [fp, #-12]
   14434:	ea00001f 	b	144b8 <boot_sys_writev+0xe0>
        char *UNUSED base = (char *)iov[i].iov_base;
   14438:	e51b300c 	ldr	r3, [fp, #-12]
   1443c:	e1a03183 	lsl	r3, r3, #3
   14440:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   14444:	e0823003 	add	r3, r2, r3
   14448:	e5933000 	ldr	r3, [r3]
   1444c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
        for (int j = 0; j < iov[i].iov_len; j++) {
   14450:	e3a03000 	mov	r3, #0
   14454:	e50b3010 	str	r3, [fp, #-16]
   14458:	ea00000b 	b	1448c <boot_sys_writev+0xb4>
#ifdef CONFIG_PRINTING
            seL4_DebugPutChar(base[j]);
   1445c:	e51b3010 	ldr	r3, [fp, #-16]
   14460:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   14464:	e0823003 	add	r3, r2, r3
   14468:	e5d33000 	ldrb	r3, [r3]
   1446c:	e1a00003 	mov	r0, r3
   14470:	ebfffeea 	bl	14020 <seL4_DebugPutChar>
#endif
            ret++;
   14474:	e51b3008 	ldr	r3, [fp, #-8]
   14478:	e2833001 	add	r3, r3, #1
   1447c:	e50b3008 	str	r3, [fp, #-8]
        for (int j = 0; j < iov[i].iov_len; j++) {
   14480:	e51b3010 	ldr	r3, [fp, #-16]
   14484:	e2833001 	add	r3, r3, #1
   14488:	e50b3010 	str	r3, [fp, #-16]
   1448c:	e51b300c 	ldr	r3, [fp, #-12]
   14490:	e1a03183 	lsl	r3, r3, #3
   14494:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   14498:	e0823003 	add	r3, r2, r3
   1449c:	e5932004 	ldr	r2, [r3, #4]
   144a0:	e51b3010 	ldr	r3, [fp, #-16]
   144a4:	e1520003 	cmp	r2, r3
   144a8:	8affffeb 	bhi	1445c <boot_sys_writev+0x84>
    for (int i = 0; i < iovcnt; i++) {
   144ac:	e51b300c 	ldr	r3, [fp, #-12]
   144b0:	e2833001 	add	r3, r3, #1
   144b4:	e50b300c 	str	r3, [fp, #-12]
   144b8:	e51b200c 	ldr	r2, [fp, #-12]
   144bc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   144c0:	e1520003 	cmp	r2, r3
   144c4:	baffffdb 	blt	14438 <boot_sys_writev+0x60>
        }
    }

    return ret;
   144c8:	e51b3008 	ldr	r3, [fp, #-8]
}
   144cc:	e1a00003 	mov	r0, r3
   144d0:	e24bd004 	sub	sp, fp, #4
   144d4:	e8bd8800 	pop	{fp, pc}

000144d8 <find_sparse_syscall>:
    {__ARM_NR_set_tls, boot_set_thread_area},
#endif
};

static int find_sparse_syscall(int syscall)
{
   144d8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   144dc:	e28db000 	add	fp, sp, #0
   144e0:	e24dd014 	sub	sp, sp, #20
   144e4:	e50b0010 	str	r0, [fp, #-16]
    for (int i = 0; i < ARRAY_SIZE(sparse_syscall_table); i++) {
   144e8:	e3a03000 	mov	r3, #0
   144ec:	e50b3008 	str	r3, [fp, #-8]
   144f0:	ea00000b 	b	14524 <find_sparse_syscall+0x4c>
        if (sparse_syscall_table[i].sysnum == syscall) {
   144f4:	e30c3650 	movw	r3, #50768	; 0xc650
   144f8:	e3403002 	movt	r3, #2
   144fc:	e51b2008 	ldr	r2, [fp, #-8]
   14500:	e7933182 	ldr	r3, [r3, r2, lsl #3]
   14504:	e51b2010 	ldr	r2, [fp, #-16]
   14508:	e1520003 	cmp	r2, r3
   1450c:	1a000001 	bne	14518 <find_sparse_syscall+0x40>
            return i;
   14510:	e51b3008 	ldr	r3, [fp, #-8]
   14514:	ea000006 	b	14534 <find_sparse_syscall+0x5c>
    for (int i = 0; i < ARRAY_SIZE(sparse_syscall_table); i++) {
   14518:	e51b3008 	ldr	r3, [fp, #-8]
   1451c:	e2833001 	add	r3, r3, #1
   14520:	e50b3008 	str	r3, [fp, #-8]
   14524:	e51b3008 	ldr	r3, [fp, #-8]
   14528:	e3530004 	cmp	r3, #4
   1452c:	9afffff0 	bls	144f4 <find_sparse_syscall+0x1c>
        }
    }
    return -1;
   14530:	e3e03000 	mvn	r3, #0
}
   14534:	e1a00003 	mov	r0, r3
   14538:	e28bd000 	add	sp, fp, #0
   1453c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14540:	e12fff1e 	bx	lr

00014544 <muslcsys_install_syscall>:

muslcsys_syscall_t muslcsys_install_syscall(int syscall, muslcsys_syscall_t new_syscall)
{
   14544:	e92d4800 	push	{fp, lr}
   14548:	e28db004 	add	fp, sp, #4
   1454c:	e24dd020 	sub	sp, sp, #32
   14550:	e50b0010 	str	r0, [fp, #-16]
   14554:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    muslcsys_syscall_t ret;
    if (syscall >= ARRAY_SIZE(syscall_table)) {
   14558:	e51b3010 	ldr	r3, [fp, #-16]
   1455c:	e3530e19 	cmp	r3, #400	; 0x190
   14560:	9a000031 	bls	1462c <muslcsys_install_syscall+0xe8>
        int index = find_sparse_syscall(syscall);
   14564:	e51b0010 	ldr	r0, [fp, #-16]
   14568:	ebffffda 	bl	144d8 <find_sparse_syscall>
   1456c:	e50b000c 	str	r0, [fp, #-12]
        if (index < 0) {
   14570:	e51b300c 	ldr	r3, [fp, #-12]
   14574:	e3530000 	cmp	r3, #0
   14578:	aa00001c 	bge	145f0 <muslcsys_install_syscall+0xac>
            ZF_LOGF("Syscall %d exceeds syscall table size of %zu and not found in sparse table", syscall,
   1457c:	e3083104 	movw	r3, #33028	; 0x8104
   14580:	e3403004 	movt	r3, #4
   14584:	e5933000 	ldr	r3, [r3]
   14588:	e3530801 	cmp	r3, #65536	; 0x10000
   1458c:	aa00000f 	bge	145d0 <muslcsys_install_syscall+0x8c>
   14590:	e3003191 	movw	r3, #401	; 0x191
   14594:	e58d300c 	str	r3, [sp, #12]
   14598:	e51b3010 	ldr	r3, [fp, #-16]
   1459c:	e58d3008 	str	r3, [sp, #8]
   145a0:	e3073bd0 	movw	r3, #31696	; 0x7bd0
   145a4:	e3403002 	movt	r3, #2
   145a8:	e58d3004 	str	r3, [sp, #4]
   145ac:	e3a03000 	mov	r3, #0
   145b0:	e58d3000 	str	r3, [sp]
   145b4:	e30f3fff 	movw	r3, #65535	; 0xffff
   145b8:	e3a020cc 	mov	r2, #204	; 0xcc
   145bc:	e3071ae4 	movw	r1, #31460	; 0x7ae4
   145c0:	e3401002 	movt	r1, #2
   145c4:	e3070cf4 	movw	r0, #31988	; 0x7cf4
   145c8:	e3400002 	movt	r0, #2
   145cc:	eb00266d 	bl	1df88 <_zf_log_write_d>
   145d0:	e3073cf4 	movw	r3, #31988	; 0x7cf4
   145d4:	e3403002 	movt	r3, #2
   145d8:	e3a020cc 	mov	r2, #204	; 0xcc
   145dc:	e3071ae4 	movw	r1, #31460	; 0x7ae4
   145e0:	e3401002 	movt	r1, #2
   145e4:	e3070c1c 	movw	r0, #31772	; 0x7c1c
   145e8:	e3400002 	movt	r0, #2
   145ec:	eb0027de 	bl	1e56c <__assert_fail>
                    ARRAY_SIZE(syscall_table));
        }
        ret = sparse_syscall_table[index].syscall;
   145f0:	e30c2650 	movw	r2, #50768	; 0xc650
   145f4:	e3402002 	movt	r2, #2
   145f8:	e51b300c 	ldr	r3, [fp, #-12]
   145fc:	e1a03183 	lsl	r3, r3, #3
   14600:	e0823003 	add	r3, r2, r3
   14604:	e5933004 	ldr	r3, [r3, #4]
   14608:	e50b3008 	str	r3, [fp, #-8]
        sparse_syscall_table[index].syscall = ret;
   1460c:	e30c2650 	movw	r2, #50768	; 0xc650
   14610:	e3402002 	movt	r2, #2
   14614:	e51b300c 	ldr	r3, [fp, #-12]
   14618:	e1a03183 	lsl	r3, r3, #3
   1461c:	e0823003 	add	r3, r2, r3
   14620:	e51b2008 	ldr	r2, [fp, #-8]
   14624:	e5832004 	str	r2, [r3, #4]
   14628:	ea000009 	b	14654 <muslcsys_install_syscall+0x110>
    } else {
        ret = syscall_table[syscall];
   1462c:	e30c300c 	movw	r3, #49164	; 0xc00c
   14630:	e3403002 	movt	r3, #2
   14634:	e51b2010 	ldr	r2, [fp, #-16]
   14638:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   1463c:	e50b3008 	str	r3, [fp, #-8]
        syscall_table[syscall] = new_syscall;
   14640:	e30c300c 	movw	r3, #49164	; 0xc00c
   14644:	e3403002 	movt	r3, #2
   14648:	e51b2010 	ldr	r2, [fp, #-16]
   1464c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   14650:	e7831102 	str	r1, [r3, r2, lsl #2]
    }
    return ret;
   14654:	e51b3008 	ldr	r3, [fp, #-8]
}
   14658:	e1a00003 	mov	r0, r3
   1465c:	e24bd004 	sub	sp, fp, #4
   14660:	e8bd8800 	pop	{fp, pc}

00014664 <init_syscall_table>:
 * default implementation. We do this at the lowest priority so that
 * it can be overriden. We are able to have this constructor
 * in this file since we know it will get looked at by the linker due
 * to __vsyscall_ptr being here */
static void CONSTRUCTOR(CONSTRUCTOR_MIN_PRIORITY) init_syscall_table(void)
{
   14664:	e92d4800 	push	{fp, lr}
   14668:	e28db004 	add	fp, sp, #4
   1466c:	e24dd008 	sub	sp, sp, #8
    muslcsys_syscall_t ret UNUSED;
    ret = muslcsys_install_syscall(__NR_set_tid_address, sys_set_tid_address);
   14670:	e3041e40 	movw	r1, #20032	; 0x4e40
   14674:	e3401001 	movt	r1, #1
   14678:	e3a00c01 	mov	r0, #256	; 0x100
   1467c:	ebffffb0 	bl	14544 <muslcsys_install_syscall>
   14680:	e50b0008 	str	r0, [fp, #-8]
    assert(ret == boot_set_tid_address);
   14684:	e51b2008 	ldr	r2, [fp, #-8]
   14688:	e30432e4 	movw	r3, #17124	; 0x42e4
   1468c:	e3403001 	movt	r3, #1
   14690:	e1520003 	cmp	r2, r3
   14694:	0a000007 	beq	146b8 <init_syscall_table+0x54>
   14698:	e3073d10 	movw	r3, #32016	; 0x7d10
   1469c:	e3403002 	movt	r3, #2
   146a0:	e3a020e1 	mov	r2, #225	; 0xe1
   146a4:	e3071ae4 	movw	r1, #31460	; 0x7ae4
   146a8:	e3401002 	movt	r1, #2
   146ac:	e3070c2c 	movw	r0, #31788	; 0x7c2c
   146b0:	e3400002 	movt	r0, #2
   146b4:	eb0027ac 	bl	1e56c <__assert_fail>
#ifdef __NR_set_thread_area
    ret = muslcsys_install_syscall(__NR_set_thread_area, sys_set_thread_area);
    assert(ret == boot_set_thread_area);
#endif
#ifdef __ARM_NR_set_tls
    ret = muslcsys_install_syscall(__ARM_NR_set_tls, NULL);
   146b8:	e3a01000 	mov	r1, #0
   146bc:	e3a00005 	mov	r0, #5
   146c0:	e340000f 	movt	r0, #15
   146c4:	ebffff9e 	bl	14544 <muslcsys_install_syscall>
   146c8:	e50b0008 	str	r0, [fp, #-8]
    assert(ret == boot_set_thread_area);
   146cc:	e51b2008 	ldr	r2, [fp, #-8]
   146d0:	e304319c 	movw	r3, #16796	; 0x419c
   146d4:	e3403001 	movt	r3, #1
   146d8:	e1520003 	cmp	r2, r3
   146dc:	0a000007 	beq	14700 <init_syscall_table+0x9c>
   146e0:	e3073d10 	movw	r3, #32016	; 0x7d10
   146e4:	e3403002 	movt	r3, #2
   146e8:	e3a020e8 	mov	r2, #232	; 0xe8
   146ec:	e3071ae4 	movw	r1, #31460	; 0x7ae4
   146f0:	e3401002 	movt	r1, #2
   146f4:	e3070c48 	movw	r0, #31816	; 0x7c48
   146f8:	e3400002 	movt	r0, #2
   146fc:	eb00279a 	bl	1e56c <__assert_fail>
#endif
    ret = muslcsys_install_syscall(__NR_writev, sys_writev);
   14700:	e30310a8 	movw	r1, #12456	; 0x30a8
   14704:	e3401001 	movt	r1, #1
   14708:	e3a00092 	mov	r0, #146	; 0x92
   1470c:	ebffff8c 	bl	14544 <muslcsys_install_syscall>
   14710:	e50b0008 	str	r0, [fp, #-8]
    assert(ret == boot_sys_writev);
   14714:	e51b2008 	ldr	r2, [fp, #-8]
   14718:	e30433d8 	movw	r3, #17368	; 0x43d8
   1471c:	e3403001 	movt	r3, #1
   14720:	e1520003 	cmp	r2, r3
   14724:	0a000007 	beq	14748 <init_syscall_table+0xe4>
   14728:	e3073d10 	movw	r3, #32016	; 0x7d10
   1472c:	e3403002 	movt	r3, #2
   14730:	e3a020eb 	mov	r2, #235	; 0xeb
   14734:	e3071ae4 	movw	r1, #31460	; 0x7ae4
   14738:	e3401002 	movt	r1, #2
   1473c:	e3070c64 	movw	r0, #31844	; 0x7c64
   14740:	e3400002 	movt	r0, #2
   14744:	eb002788 	bl	1e56c <__assert_fail>
}
   14748:	e320f000 	nop	{0}
   1474c:	e24bd004 	sub	sp, fp, #4
   14750:	e8bd8800 	pop	{fp, pc}

00014754 <debug_error>:
}
#endif

#ifdef CONFIG_PRINTING
static void debug_error(int sysnum)
{
   14754:	e92d4800 	push	{fp, lr}
   14758:	e28db004 	add	fp, sp, #4
   1475c:	e24dd070 	sub	sp, sp, #112	; 0x70
   14760:	e50b0070 	str	r0, [fp, #-112]	; 0xffffff90
    char buf[100];
    int i;
    sprintf(buf, "libsel4muslcsys: Error attempting syscall %d\n", sysnum);
   14764:	e24b306c 	sub	r3, fp, #108	; 0x6c
   14768:	e51b2070 	ldr	r2, [fp, #-112]	; 0xffffff90
   1476c:	e3071c7c 	movw	r1, #31868	; 0x7c7c
   14770:	e3401002 	movt	r1, #2
   14774:	e1a00003 	mov	r0, r3
   14778:	eb002c63 	bl	1f90c <sprintf>
    for (i = 0; buf[i]; i++) {
   1477c:	e3a03000 	mov	r3, #0
   14780:	e50b3008 	str	r3, [fp, #-8]
   14784:	ea000008 	b	147ac <debug_error+0x58>
        seL4_DebugPutChar(buf[i]);
   14788:	e24b206c 	sub	r2, fp, #108	; 0x6c
   1478c:	e51b3008 	ldr	r3, [fp, #-8]
   14790:	e0823003 	add	r3, r2, r3
   14794:	e5d33000 	ldrb	r3, [r3]
   14798:	e1a00003 	mov	r0, r3
   1479c:	ebfffe1f 	bl	14020 <seL4_DebugPutChar>
    for (i = 0; buf[i]; i++) {
   147a0:	e51b3008 	ldr	r3, [fp, #-8]
   147a4:	e2833001 	add	r3, r3, #1
   147a8:	e50b3008 	str	r3, [fp, #-8]
   147ac:	e24b206c 	sub	r2, fp, #108	; 0x6c
   147b0:	e51b3008 	ldr	r3, [fp, #-8]
   147b4:	e0823003 	add	r3, r2, r3
   147b8:	e5d33000 	ldrb	r3, [r3]
   147bc:	e3530000 	cmp	r3, #0
   147c0:	1afffff0 	bne	14788 <debug_error+0x34>
    }
}
   147c4:	e320f000 	nop	{0}
   147c8:	e320f000 	nop	{0}
   147cc:	e24bd004 	sub	sp, fp, #4
   147d0:	e8bd8800 	pop	{fp, pc}

000147d4 <sel4_vsyscall>:
{
}
#endif

long sel4_vsyscall(long sysnum, ...)
{
   147d4:	e92d000f 	push	{r0, r1, r2, r3}
   147d8:	e92d4800 	push	{fp, lr}
   147dc:	e28db004 	add	fp, sp, #4
   147e0:	e24dd010 	sub	sp, sp, #16
    va_list al;
    va_start(al, sysnum);
   147e4:	e28b3008 	add	r3, fp, #8
   147e8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    muslcsys_syscall_t syscall;
    if (sysnum < 0 || sysnum >= ARRAY_SIZE(syscall_table)) {
   147ec:	e59b3004 	ldr	r3, [fp, #4]
   147f0:	e3530000 	cmp	r3, #0
   147f4:	ba000002 	blt	14804 <sel4_vsyscall+0x30>
   147f8:	e59b3004 	ldr	r3, [fp, #4]
   147fc:	e3530e19 	cmp	r3, #400	; 0x190
   14800:	9a000011 	bls	1484c <sel4_vsyscall+0x78>
        int index = find_sparse_syscall(sysnum);
   14804:	e59b0004 	ldr	r0, [fp, #4]
   14808:	ebffff32 	bl	144d8 <find_sparse_syscall>
   1480c:	e50b000c 	str	r0, [fp, #-12]
        if (index < 0) {
   14810:	e51b300c 	ldr	r3, [fp, #-12]
   14814:	e3530000 	cmp	r3, #0
   14818:	aa000003 	bge	1482c <sel4_vsyscall+0x58>
            debug_error(sysnum);
   1481c:	e59b0004 	ldr	r0, [fp, #4]
   14820:	ebffffcb 	bl	14754 <debug_error>
            va_end(al);
            return -ENOSYS;
   14824:	e3e03025 	mvn	r3, #37	; 0x25
   14828:	ea000018 	b	14890 <sel4_vsyscall+0xbc>
        }
        syscall = sparse_syscall_table[index].syscall;
   1482c:	e30c2650 	movw	r2, #50768	; 0xc650
   14830:	e3402002 	movt	r2, #2
   14834:	e51b300c 	ldr	r3, [fp, #-12]
   14838:	e1a03183 	lsl	r3, r3, #3
   1483c:	e0823003 	add	r3, r2, r3
   14840:	e5933004 	ldr	r3, [r3, #4]
   14844:	e50b3008 	str	r3, [fp, #-8]
    if (sysnum < 0 || sysnum >= ARRAY_SIZE(syscall_table)) {
   14848:	ea000004 	b	14860 <sel4_vsyscall+0x8c>
    } else {
        syscall = syscall_table[sysnum];
   1484c:	e30c300c 	movw	r3, #49164	; 0xc00c
   14850:	e3403002 	movt	r3, #2
   14854:	e59b2004 	ldr	r2, [fp, #4]
   14858:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   1485c:	e50b3008 	str	r3, [fp, #-8]
    }
    /* Check a syscall is implemented there */
    if (!syscall) {
   14860:	e51b3008 	ldr	r3, [fp, #-8]
   14864:	e3530000 	cmp	r3, #0
   14868:	1a000003 	bne	1487c <sel4_vsyscall+0xa8>
        debug_error(sysnum);
   1486c:	e59b0004 	ldr	r0, [fp, #4]
   14870:	ebffffb7 	bl	14754 <debug_error>
        va_end(al);
        return -ENOSYS;
   14874:	e3e03025 	mvn	r3, #37	; 0x25
   14878:	ea000004 	b	14890 <sel4_vsyscall+0xbc>
    }
    /* Call it */
    long ret = syscall(al);
   1487c:	e51b3008 	ldr	r3, [fp, #-8]
   14880:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   14884:	e12fff33 	blx	r3
   14888:	e50b0010 	str	r0, [fp, #-16]
    va_end(al);
    return ret;
   1488c:	e51b3010 	ldr	r3, [fp, #-16]
}
   14890:	e1a00003 	mov	r0, r3
   14894:	e24bd004 	sub	sp, fp, #4
   14898:	e8bd4800 	pop	{fp, lr}
   1489c:	e28dd010 	add	sp, sp, #16
   148a0:	e12fff1e 	bx	lr

000148a4 <init_vsyscall>:
 * This is required for apps using a dynamic heap, which need to make
 * use of malloc in order to provide an implementation of brk and mmap
 * that are used during the initialisation of muslc.
 */
static void CONSTRUCTOR(MUSLCSYS_WITH_VSYSCALL_PRIORITY - 1) init_vsyscall(void)
{
   148a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   148a8:	e28db000 	add	fp, sp, #0
    __sysinfo = sel4_vsyscall;
   148ac:	e3093044 	movw	r3, #36932	; 0x9044
   148b0:	e3403014 	movt	r3, #20
   148b4:	e30427d4 	movw	r2, #18388	; 0x47d4
   148b8:	e3402001 	movt	r2, #1
   148bc:	e5832000 	str	r2, [r3]
}
   148c0:	e320f000 	nop	{0}
   148c4:	e28bd000 	add	sp, fp, #0
   148c8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   148cc:	e12fff1e 	bx	lr

000148d0 <update_ipc_buffer>:
 * for `__sel4_ipc_buffer` only once in the same function, even across
 * function calls, and thus will not update any newly created TLS region
 * with the IPC buffer address.
 */
static void NO_INLINE update_ipc_buffer(seL4_IPCBuffer *tmp)
{
   148d0:	e92d4800 	push	{fp, lr}
   148d4:	e28db004 	add	fp, sp, #4
   148d8:	e24dd008 	sub	sp, sp, #8
   148dc:	e50b0008 	str	r0, [fp, #-8]
    __sel4_ipc_buffer = tmp;
   148e0:	ebfff685 	bl	122fc <__aeabi_read_tp>
   148e4:	e1a02000 	mov	r2, r0
   148e8:	e59f1010 	ldr	r1, [pc, #16]	; 14900 <update_ipc_buffer+0x30>
   148ec:	e51b3008 	ldr	r3, [fp, #-8]
   148f0:	e7823001 	str	r3, [r2, r1]
}
   148f4:	e320f000 	nop	{0}
   148f8:	e24bd004 	sub	sp, fp, #4
   148fc:	e8bd8800 	pop	{fp, pc}
   14900:	00000008 	andeq	r0, r0, r8

00014904 <muslcsys_init_muslc>:

/* Initialise muslc environment */
void CONSTRUCTOR(CONFIG_LIB_SEL4_MUSLC_SYS_CONSTRUCTOR_PRIORITY) muslcsys_init_muslc(void)
{
   14904:	e92d4810 	push	{r4, fp, lr}
   14908:	e28db008 	add	fp, sp, #8
   1490c:	e24dd00c 	sub	sp, sp, #12
    seL4_IPCBuffer *tmp = __sel4_ipc_buffer;
   14910:	ebfff679 	bl	122fc <__aeabi_read_tp>
   14914:	e1a03000 	mov	r3, r0
   14918:	e59f2038 	ldr	r2, [pc, #56]	; 14958 <muslcsys_init_muslc+0x54>
   1491c:	e7933002 	ldr	r3, [r3, r2]
   14920:	e50b3010 	str	r3, [fp, #-16]
    __init_libc(sel4runtime_envp(), sel4runtime_argv()[0]);
   14924:	ebffef80 	bl	1072c <sel4runtime_envp>
   14928:	e1a04000 	mov	r4, r0
   1492c:	ebffef6c 	bl	106e4 <sel4runtime_argv>
   14930:	e1a03000 	mov	r3, r0
   14934:	e5933000 	ldr	r3, [r3]
   14938:	e1a01003 	mov	r1, r3
   1493c:	e1a00004 	mov	r0, r4
   14940:	eb002647 	bl	1e264 <__init_libc>
    update_ipc_buffer(tmp);
   14944:	e51b0010 	ldr	r0, [fp, #-16]
   14948:	ebffffe0 	bl	148d0 <update_ipc_buffer>
}
   1494c:	e320f000 	nop	{0}
   14950:	e24bd008 	sub	sp, fp, #8
   14954:	e8bd8810 	pop	{r4, fp, pc}
   14958:	00000008 	andeq	r0, r0, r8

0001495c <sel4_abort>:
#include <stdlib.h>
#include <stdarg.h>
#include <utils/util.h>

static void sel4_abort(void)
{
   1495c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14960:	e28db000 	add	fp, sp, #0
#if defined(CONFIG_DEBUG_BUILD) && defined(CONFIG_LIB_SEL4_MUSLC_SYS_DEBUG_HALT)
    printf("seL4 root server abort()ed\n");
    seL4_DebugHalt();
#endif
    while (1); /* We don't return after this */
   14964:	eafffffe 	b	14964 <sel4_abort+0x8>

00014968 <sys_exit>:
}

long sys_exit(va_list ap)
{
   14968:	e92d4800 	push	{fp, lr}
   1496c:	e28db004 	add	fp, sp, #4
   14970:	e24dd008 	sub	sp, sp, #8
   14974:	e50b0008 	str	r0, [fp, #-8]
    abort();
   14978:	eb0026f1 	bl	1e544 <abort>

0001497c <sys_rt_sigprocmask>:
    return 0;
}

long sys_rt_sigprocmask(va_list ap)
{
   1497c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14980:	e28db000 	add	fp, sp, #0
   14984:	e24dd00c 	sub	sp, sp, #12
   14988:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGV("Ignoring call to %s", __FUNCTION__);
    return 0;
   1498c:	e3a03000 	mov	r3, #0
}
   14990:	e1a00003 	mov	r0, r3
   14994:	e28bd000 	add	sp, fp, #0
   14998:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1499c:	e12fff1e 	bx	lr

000149a0 <sys_gettid>:

long sys_gettid(va_list ap)
{
   149a0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   149a4:	e28db000 	add	fp, sp, #0
   149a8:	e24dd00c 	sub	sp, sp, #12
   149ac:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGV("Ignoring call to %s", __FUNCTION__);
    return 0;
   149b0:	e3a03000 	mov	r3, #0
}
   149b4:	e1a00003 	mov	r0, r3
   149b8:	e28bd000 	add	sp, fp, #0
   149bc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   149c0:	e12fff1e 	bx	lr

000149c4 <sys_getpid>:

long sys_getpid(va_list ap)
{
   149c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   149c8:	e28db000 	add	fp, sp, #0
   149cc:	e24dd00c 	sub	sp, sp, #12
   149d0:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGV("Ignoring call to %s", __FUNCTION__);
    return 0;
   149d4:	e3a03000 	mov	r3, #0
}
   149d8:	e1a00003 	mov	r0, r3
   149dc:	e28bd000 	add	sp, fp, #0
   149e0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   149e4:	e12fff1e 	bx	lr

000149e8 <sys_tgkill>:

long sys_tgkill(va_list ap)
{
   149e8:	e92d4800 	push	{fp, lr}
   149ec:	e28db004 	add	fp, sp, #4
   149f0:	e24dd008 	sub	sp, sp, #8
   149f4:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGV("%s assuming self kill", __FUNCTION__);
    sel4_abort();
   149f8:	ebffffd7 	bl	1495c <sel4_abort>
    return 0;
   149fc:	e3a03000 	mov	r3, #0
}
   14a00:	e1a00003 	mov	r0, r3
   14a04:	e24bd004 	sub	sp, fp, #4
   14a08:	e8bd8800 	pop	{fp, pc}

00014a0c <sys_tkill>:

long sys_tkill(va_list ap)
{
   14a0c:	e92d4800 	push	{fp, lr}
   14a10:	e28db004 	add	fp, sp, #4
   14a14:	e24dd008 	sub	sp, sp, #8
   14a18:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGV("%s assuming self kill", __FUNCTION__);
    sel4_abort();
   14a1c:	ebffffce 	bl	1495c <sel4_abort>
    return 0;
   14a20:	e3a03000 	mov	r3, #0
}
   14a24:	e1a00003 	mov	r0, r3
   14a28:	e24bd004 	sub	sp, fp, #4
   14a2c:	e8bd8800 	pop	{fp, pc}

00014a30 <sys_exit_group>:

long sys_exit_group(va_list ap)
{
   14a30:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14a34:	e28db000 	add	fp, sp, #0
   14a38:	e24dd00c 	sub	sp, sp, #12
   14a3c:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGV("Ignoring call to %s", __FUNCTION__);
    return 0;
   14a40:	e3a03000 	mov	r3, #0
}
   14a44:	e1a00003 	mov	r0, r3
   14a48:	e28bd000 	add	sp, fp, #0
   14a4c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14a50:	e12fff1e 	bx	lr

00014a54 <sys_brk>:
/* Actual morecore implementation
   returns 0 if failure, returns newbrk if success.
*/

long sys_brk(va_list ap)
{
   14a54:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14a58:	e28db000 	add	fp, sp, #0
   14a5c:	e24dd014 	sub	sp, sp, #20
   14a60:	e50b0010 	str	r0, [fp, #-16]

    uintptr_t ret;
    uintptr_t newbrk = va_arg(ap, uintptr_t);
   14a64:	e51b3010 	ldr	r3, [fp, #-16]
   14a68:	e2832004 	add	r2, r3, #4
   14a6c:	e50b2010 	str	r2, [fp, #-16]
   14a70:	e5933000 	ldr	r3, [r3]
   14a74:	e50b300c 	str	r3, [fp, #-12]

    /*if the newbrk is 0, return the bottom of the heap*/
    if (!newbrk) {
   14a78:	e51b300c 	ldr	r3, [fp, #-12]
   14a7c:	e3530000 	cmp	r3, #0
   14a80:	1a000004 	bne	14a98 <sys_brk+0x44>
        ret = morecore_base;
   14a84:	e30c367c 	movw	r3, #50812	; 0xc67c
   14a88:	e3403002 	movt	r3, #2
   14a8c:	e5933000 	ldr	r3, [r3]
   14a90:	e50b3008 	str	r3, [fp, #-8]
   14a94:	ea000015 	b	14af0 <sys_brk+0x9c>
    } else if (newbrk < morecore_top && newbrk > (uintptr_t)&morecore_area[0]) {
   14a98:	e30c3680 	movw	r3, #50816	; 0xc680
   14a9c:	e3403002 	movt	r3, #2
   14aa0:	e5933000 	ldr	r3, [r3]
   14aa4:	e51b200c 	ldr	r2, [fp, #-12]
   14aa8:	e1520003 	cmp	r2, r3
   14aac:	2a00000d 	bcs	14ae8 <sys_brk+0x94>
   14ab0:	e3093000 	movw	r3, #36864	; 0x9000
   14ab4:	e3403004 	movt	r3, #4
   14ab8:	e51b200c 	ldr	r2, [fp, #-12]
   14abc:	e1520003 	cmp	r2, r3
   14ac0:	9a000008 	bls	14ae8 <sys_brk+0x94>
        ret = morecore_base = newbrk;
   14ac4:	e30c367c 	movw	r3, #50812	; 0xc67c
   14ac8:	e3403002 	movt	r3, #2
   14acc:	e51b200c 	ldr	r2, [fp, #-12]
   14ad0:	e5832000 	str	r2, [r3]
   14ad4:	e30c367c 	movw	r3, #50812	; 0xc67c
   14ad8:	e3403002 	movt	r3, #2
   14adc:	e5933000 	ldr	r3, [r3]
   14ae0:	e50b3008 	str	r3, [fp, #-8]
   14ae4:	ea000001 	b	14af0 <sys_brk+0x9c>
    } else {
        ret = 0;
   14ae8:	e3a03000 	mov	r3, #0
   14aec:	e50b3008 	str	r3, [fp, #-8]
    }

    return ret;
   14af0:	e51b3008 	ldr	r3, [fp, #-8]
}
   14af4:	e1a00003 	mov	r0, r3
   14af8:	e28bd000 	add	sp, fp, #0
   14afc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14b00:	e12fff1e 	bx	lr

00014b04 <sys_mmap_impl>:

/* Large mallocs will result in muslc calling mmap, so we do a minimal implementation
   here to support that. We make a bunch of assumptions in the process */
long sys_mmap_impl(void *addr, size_t length, int prot, int flags, int fd, off_t offset)
{
   14b04:	e92d4800 	push	{fp, lr}
   14b08:	e28db004 	add	fp, sp, #4
   14b0c:	e24dd010 	sub	sp, sp, #16
   14b10:	e50b0008 	str	r0, [fp, #-8]
   14b14:	e50b100c 	str	r1, [fp, #-12]
   14b18:	e50b2010 	str	r2, [fp, #-16]
   14b1c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    if (flags & MAP_ANONYMOUS) {
   14b20:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14b24:	e2033020 	and	r3, r3, #32
   14b28:	e3530000 	cmp	r3, #0
   14b2c:	0a000017 	beq	14b90 <sys_mmap_impl+0x8c>
        /* Check that we don't try and allocate more than exists */
        if (length > morecore_top - morecore_base) {
   14b30:	e30c3680 	movw	r3, #50816	; 0xc680
   14b34:	e3403002 	movt	r3, #2
   14b38:	e5932000 	ldr	r2, [r3]
   14b3c:	e30c367c 	movw	r3, #50812	; 0xc67c
   14b40:	e3403002 	movt	r3, #2
   14b44:	e5933000 	ldr	r3, [r3]
   14b48:	e0423003 	sub	r3, r2, r3
   14b4c:	e51b200c 	ldr	r2, [fp, #-12]
   14b50:	e1520003 	cmp	r2, r3
   14b54:	9a000001 	bls	14b60 <sys_mmap_impl+0x5c>
            return -ENOMEM;
   14b58:	e3e0300b 	mvn	r3, #11
   14b5c:	ea000013 	b	14bb0 <sys_mmap_impl+0xac>
        }
        /* Steal from the top */
        morecore_top -= length;
   14b60:	e30c3680 	movw	r3, #50816	; 0xc680
   14b64:	e3403002 	movt	r3, #2
   14b68:	e5932000 	ldr	r2, [r3]
   14b6c:	e51b300c 	ldr	r3, [fp, #-12]
   14b70:	e0422003 	sub	r2, r2, r3
   14b74:	e30c3680 	movw	r3, #50816	; 0xc680
   14b78:	e3403002 	movt	r3, #2
   14b7c:	e5832000 	str	r2, [r3]
        return morecore_top;
   14b80:	e30c3680 	movw	r3, #50816	; 0xc680
   14b84:	e3403002 	movt	r3, #2
   14b88:	e5933000 	ldr	r3, [r3]
   14b8c:	ea000007 	b	14bb0 <sys_mmap_impl+0xac>
    }
    assert(!"not implemented");
   14b90:	e3073e18 	movw	r3, #32280	; 0x7e18
   14b94:	e3403002 	movt	r3, #2
   14b98:	e3a0204b 	mov	r2, #75	; 0x4b
   14b9c:	e3071d44 	movw	r1, #32068	; 0x7d44
   14ba0:	e3401002 	movt	r1, #2
   14ba4:	e3070da8 	movw	r0, #32168	; 0x7da8
   14ba8:	e3400002 	movt	r0, #2
   14bac:	eb00266e 	bl	1e56c <__assert_fail>
    return -ENOMEM;
}
   14bb0:	e1a00003 	mov	r0, r3
   14bb4:	e24bd004 	sub	sp, fp, #4
   14bb8:	e8bd8800 	pop	{fp, pc}

00014bbc <sys_mremap>:

long sys_mremap(va_list ap)
{
   14bbc:	e92d4800 	push	{fp, lr}
   14bc0:	e28db004 	add	fp, sp, #4
   14bc4:	e24dd008 	sub	sp, sp, #8
   14bc8:	e50b0008 	str	r0, [fp, #-8]
    assert(!"not implemented");
   14bcc:	e3073e28 	movw	r3, #32296	; 0x7e28
   14bd0:	e3403002 	movt	r3, #2
   14bd4:	e3a02051 	mov	r2, #81	; 0x51
   14bd8:	e3071d44 	movw	r1, #32068	; 0x7d44
   14bdc:	e3401002 	movt	r1, #2
   14be0:	e3070da8 	movw	r0, #32168	; 0x7da8
   14be4:	e3400002 	movt	r0, #2
   14be8:	eb00265f 	bl	1e56c <__assert_fail>

00014bec <sys_madvise>:

#endif

/* This is a "dummy" implementation of sys_madvise() to satisfy free() in muslc. */
long sys_madvise(va_list ap)
{
   14bec:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14bf0:	e28db000 	add	fp, sp, #0
   14bf4:	e24dd00c 	sub	sp, sp, #12
   14bf8:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGV("calling dummy version of sys_madvise()\n");
    return 0;
   14bfc:	e3a03000 	mov	r3, #0
}
   14c00:	e1a00003 	mov	r0, r3
   14c04:	e28bd000 	add	sp, fp, #0
   14c08:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14c0c:	e12fff1e 	bx	lr

00014c10 <sys_mmap>:

long sys_mmap(va_list ap)
{
   14c10:	e92d4800 	push	{fp, lr}
   14c14:	e28db004 	add	fp, sp, #4
   14c18:	e24dd038 	sub	sp, sp, #56	; 0x38
   14c1c:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    void *addr = va_arg(ap, void *);
   14c20:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c24:	e2832004 	add	r2, r3, #4
   14c28:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14c2c:	e5933000 	ldr	r3, [r3]
   14c30:	e50b3008 	str	r3, [fp, #-8]
    size_t length = va_arg(ap, size_t);
   14c34:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c38:	e2832004 	add	r2, r3, #4
   14c3c:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14c40:	e5933000 	ldr	r3, [r3]
   14c44:	e50b300c 	str	r3, [fp, #-12]
    int prot = va_arg(ap, int);
   14c48:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c4c:	e2832004 	add	r2, r3, #4
   14c50:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14c54:	e5933000 	ldr	r3, [r3]
   14c58:	e50b3010 	str	r3, [fp, #-16]
    int flags = va_arg(ap, int);
   14c5c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c60:	e2832004 	add	r2, r3, #4
   14c64:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14c68:	e5933000 	ldr	r3, [r3]
   14c6c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    int fd = va_arg(ap, int);
   14c70:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c74:	e2832004 	add	r2, r3, #4
   14c78:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14c7c:	e5933000 	ldr	r3, [r3]
   14c80:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    off_t offset = va_arg(ap, off_t);
   14c84:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14c88:	e2833007 	add	r3, r3, #7
   14c8c:	e3c33007 	bic	r3, r3, #7
   14c90:	e2832008 	add	r2, r3, #8
   14c94:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14c98:	e1c320d0 	ldrd	r2, [r3]
   14c9c:	e14b22f4 	strd	r2, [fp, #-36]	; 0xffffffdc
    return sys_mmap_impl(addr, length, prot, flags, fd, offset);
   14ca0:	e14b22d4 	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14ca4:	e1cd20f8 	strd	r2, [sp, #8]
   14ca8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14cac:	e58d3000 	str	r3, [sp]
   14cb0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14cb4:	e51b2010 	ldr	r2, [fp, #-16]
   14cb8:	e51b100c 	ldr	r1, [fp, #-12]
   14cbc:	e51b0008 	ldr	r0, [fp, #-8]
   14cc0:	ebffff8f 	bl	14b04 <sys_mmap_impl>
   14cc4:	e1a03000 	mov	r3, r0
}
   14cc8:	e1a00003 	mov	r0, r3
   14ccc:	e24bd004 	sub	sp, fp, #4
   14cd0:	e8bd8800 	pop	{fp, pc}

00014cd4 <sys_mmap2>:

long sys_mmap2(va_list ap)
{
   14cd4:	e92d4800 	push	{fp, lr}
   14cd8:	e28db004 	add	fp, sp, #4
   14cdc:	e24dd038 	sub	sp, sp, #56	; 0x38
   14ce0:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    void *addr = va_arg(ap, void *);
   14ce4:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ce8:	e2832004 	add	r2, r3, #4
   14cec:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14cf0:	e5933000 	ldr	r3, [r3]
   14cf4:	e50b3008 	str	r3, [fp, #-8]
    size_t length = va_arg(ap, size_t);
   14cf8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14cfc:	e2832004 	add	r2, r3, #4
   14d00:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14d04:	e5933000 	ldr	r3, [r3]
   14d08:	e50b300c 	str	r3, [fp, #-12]
    int prot = va_arg(ap, int);
   14d0c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d10:	e2832004 	add	r2, r3, #4
   14d14:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14d18:	e5933000 	ldr	r3, [r3]
   14d1c:	e50b3010 	str	r3, [fp, #-16]
    int flags = va_arg(ap, int);
   14d20:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d24:	e2832004 	add	r2, r3, #4
   14d28:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14d2c:	e5933000 	ldr	r3, [r3]
   14d30:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    int fd = va_arg(ap, int);
   14d34:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d38:	e2832004 	add	r2, r3, #4
   14d3c:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14d40:	e5933000 	ldr	r3, [r3]
   14d44:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    off_t offset = va_arg(ap, off_t);
   14d48:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d4c:	e2833007 	add	r3, r3, #7
   14d50:	e3c33007 	bic	r3, r3, #7
   14d54:	e2832008 	add	r2, r3, #8
   14d58:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   14d5c:	e1c320d0 	ldrd	r2, [r3]
   14d60:	e14b22f4 	strd	r2, [fp, #-36]	; 0xffffffdc
    /* for now redirect to mmap. muslc always defines an off_t as being an int64 */
    /* so this will not overflow */
    return sys_mmap_impl(addr, length, prot, flags, fd, offset * 4096);
   14d64:	e14b02d4 	ldrd	r0, [fp, #-36]	; 0xffffffdc
   14d68:	e3a02000 	mov	r2, #0
   14d6c:	e3a03000 	mov	r3, #0
   14d70:	e1a03601 	lsl	r3, r1, #12
   14d74:	e1833a20 	orr	r3, r3, r0, lsr #20
   14d78:	e1a02600 	lsl	r2, r0, #12
   14d7c:	e1cd20f8 	strd	r2, [sp, #8]
   14d80:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d84:	e58d3000 	str	r3, [sp]
   14d88:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14d8c:	e51b2010 	ldr	r2, [fp, #-16]
   14d90:	e51b100c 	ldr	r1, [fp, #-12]
   14d94:	e51b0008 	ldr	r0, [fp, #-8]
   14d98:	ebffff59 	bl	14b04 <sys_mmap_impl>
   14d9c:	e1a03000 	mov	r3, r0
}
   14da0:	e1a00003 	mov	r0, r3
   14da4:	e24bd004 	sub	sp, fp, #4
   14da8:	e8bd8800 	pop	{fp, pc}

00014dac <sys_munmap>:

long sys_munmap(va_list ap)
{
   14dac:	e92d4800 	push	{fp, lr}
   14db0:	e28db004 	add	fp, sp, #4
   14db4:	e24dd018 	sub	sp, sp, #24
   14db8:	e50b0008 	str	r0, [fp, #-8]
    ZF_LOGE("%s is unsupported. This may have been called due to a "
   14dbc:	e3083104 	movw	r3, #33028	; 0x8104
   14dc0:	e3403004 	movt	r3, #4
   14dc4:	e5933000 	ldr	r3, [r3]
   14dc8:	e3530005 	cmp	r3, #5
   14dcc:	ca00000e 	bgt	14e0c <sys_munmap+0x60>
   14dd0:	e3073e34 	movw	r3, #32308	; 0x7e34
   14dd4:	e3403002 	movt	r3, #2
   14dd8:	e58d3008 	str	r3, [sp, #8]
   14ddc:	e3073dbc 	movw	r3, #32188	; 0x7dbc
   14de0:	e3403002 	movt	r3, #2
   14de4:	e58d3004 	str	r3, [sp, #4]
   14de8:	e3a03000 	mov	r3, #0
   14dec:	e58d3000 	str	r3, [sp]
   14df0:	e3a03005 	mov	r3, #5
   14df4:	e300216f 	movw	r2, #367	; 0x16f
   14df8:	e3071d44 	movw	r1, #32068	; 0x7d44
   14dfc:	e3401002 	movt	r1, #2
   14e00:	e3070e34 	movw	r0, #32308	; 0x7e34
   14e04:	e3400002 	movt	r0, #2
   14e08:	eb00245e 	bl	1df88 <_zf_log_write_d>
            "large malloc'd region being free'd.", __func__);
    return 0;
   14e0c:	e3a03000 	mov	r3, #0
}
   14e10:	e1a00003 	mov	r0, r3
   14e14:	e24bd004 	sub	sp, fp, #4
   14e18:	e8bd8800 	pop	{fp, pc}

00014e1c <sys_set_thread_area>:
 */

#include <stdio.h>
#include <bits/errno.h>

long sys_set_thread_area(va_list ap) {
   14e1c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14e20:	e28db000 	add	fp, sp, #0
   14e24:	e24dd00c 	sub	sp, sp, #12
   14e28:	e50b0008 	str	r0, [fp, #-8]
    /* As part of the initialization of the C library we need to set the
     * thread area (also knows as the TLS base) for thread local storage.
     * As we do not properly support TLS we just ignore this call. Will
     * be fine provided we do not create multiple threads (through libc)
     * or use TLS */
    return 0;
   14e2c:	e3a03000 	mov	r3, #0
}
   14e30:	e1a00003 	mov	r0, r3
   14e34:	e28bd000 	add	sp, fp, #0
   14e38:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14e3c:	e12fff1e 	bx	lr

00014e40 <sys_set_tid_address>:

long sys_set_tid_address(va_list ap) {
   14e40:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   14e44:	e28db000 	add	fp, sp, #0
   14e48:	e24dd00c 	sub	sp, sp, #12
   14e4c:	e50b0008 	str	r0, [fp, #-8]
    return -ENOSYS;
   14e50:	e3e03025 	mvn	r3, #37	; 0x25
}
   14e54:	e1a00003 	mov	r0, r3
   14e58:	e28bd000 	add	sp, fp, #0
   14e5c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   14e60:	e12fff1e 	bx	lr

00014e64 <arm_sys_null>:
    *in_out_mr3 = msg3;
}
#endif

static inline void arm_sys_null(seL4_Word sys)
{
   14e64:	e92d0880 	push	{r7, fp}
   14e68:	e28db004 	add	fp, sp, #4
   14e6c:	e24dd008 	sub	sp, sp, #8
   14e70:	e50b0008 	str	r0, [fp, #-8]
    register seL4_Word scno asm("r7") = sys;
   14e74:	e51b7008 	ldr	r7, [fp, #-8]
    asm volatile(
   14e78:	ef000000 	svc	0x00000000
        "swi #0"
        : /* no outputs */
        : "r"(scno)
    );
}
   14e7c:	e320f000 	nop	{0}
   14e80:	e24bd004 	sub	sp, fp, #4
   14e84:	e8bd0880 	pop	{r7, fp}
   14e88:	e12fff1e 	bx	lr

00014e8c <seL4_Yield>:
{
   14e8c:	e92d4800 	push	{fp, lr}
   14e90:	e28db004 	add	fp, sp, #4
    arm_sys_null(seL4_SysYield);
   14e94:	e3e00006 	mvn	r0, #6
   14e98:	ebfffff1 	bl	14e64 <arm_sys_null>
}
   14e9c:	e320f000 	nop	{0}
   14ea0:	e8bd8800 	pop	{fp, pc}

00014ea4 <sys_sched_yield>:
#include <stdlib.h>
#include <stdarg.h>
#include <sel4/sel4.h>

long sys_sched_yield(va_list ap)
{
   14ea4:	e92d4800 	push	{fp, lr}
   14ea8:	e28db004 	add	fp, sp, #4
   14eac:	e24dd008 	sub	sp, sp, #8
   14eb0:	e50b0008 	str	r0, [fp, #-8]
    seL4_Yield();
   14eb4:	ebfffff4 	bl	14e8c <seL4_Yield>
    return 0;
   14eb8:	e3a03000 	mov	r3, #0
}
   14ebc:	e1a00003 	mov	r0, r3
   14ec0:	e24bd004 	sub	sp, fp, #4
   14ec4:	e8bd8800 	pop	{fp, pc}

00014ec8 <seL4_CapRights_new>:
seL4_CapRights_new(seL4_Uint32 capAllowGrantReply, seL4_Uint32 capAllowGrant, seL4_Uint32 capAllowRead, seL4_Uint32 capAllowWrite) {
   14ec8:	e92d4800 	push	{fp, lr}
   14ecc:	e28db004 	add	fp, sp, #4
   14ed0:	e24dd018 	sub	sp, sp, #24
   14ed4:	e50b0010 	str	r0, [fp, #-16]
   14ed8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   14edc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   14ee0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    seL4_DebugAssert((capAllowGrantReply & ~0x1u) == ((0 && (capAllowGrantReply & (1u << 31))) ? 0x0 : 0));  
   14ee4:	e51b3010 	ldr	r3, [fp, #-16]
   14ee8:	e3c33001 	bic	r3, r3, #1
   14eec:	e3530000 	cmp	r3, #0
   14ef0:	0a000007 	beq	14f14 <seL4_CapRights_new+0x4c>
   14ef4:	e30834f0 	movw	r3, #34032	; 0x84f0
   14ef8:	e3403002 	movt	r3, #2
   14efc:	e3a0207f 	mov	r2, #127	; 0x7f
   14f00:	e3071e48 	movw	r1, #32328	; 0x7e48
   14f04:	e3401002 	movt	r1, #2
   14f08:	e3070e70 	movw	r0, #32368	; 0x7e70
   14f0c:	e3400002 	movt	r0, #2
   14f10:	eb002595 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capAllowGrant & ~0x1u) == ((0 && (capAllowGrant & (1u << 31))) ? 0x0 : 0));  
   14f14:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14f18:	e3c33001 	bic	r3, r3, #1
   14f1c:	e3530000 	cmp	r3, #0
   14f20:	0a000007 	beq	14f44 <seL4_CapRights_new+0x7c>
   14f24:	e30834f0 	movw	r3, #34032	; 0x84f0
   14f28:	e3403002 	movt	r3, #2
   14f2c:	e3a02080 	mov	r2, #128	; 0x80
   14f30:	e3071e48 	movw	r1, #32328	; 0x7e48
   14f34:	e3401002 	movt	r1, #2
   14f38:	e3070ec8 	movw	r0, #32456	; 0x7ec8
   14f3c:	e3400002 	movt	r0, #2
   14f40:	eb002589 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capAllowRead & ~0x1u) == ((0 && (capAllowRead & (1u << 31))) ? 0x0 : 0));  
   14f44:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f48:	e3c33001 	bic	r3, r3, #1
   14f4c:	e3530000 	cmp	r3, #0
   14f50:	0a000007 	beq	14f74 <seL4_CapRights_new+0xac>
   14f54:	e30834f0 	movw	r3, #34032	; 0x84f0
   14f58:	e3403002 	movt	r3, #2
   14f5c:	e3a02081 	mov	r2, #129	; 0x81
   14f60:	e3071e48 	movw	r1, #32328	; 0x7e48
   14f64:	e3401002 	movt	r1, #2
   14f68:	e3070f14 	movw	r0, #32532	; 0x7f14
   14f6c:	e3400002 	movt	r0, #2
   14f70:	eb00257d 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capAllowWrite & ~0x1u) == ((0 && (capAllowWrite & (1u << 31))) ? 0x0 : 0));
   14f74:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f78:	e3c33001 	bic	r3, r3, #1
   14f7c:	e3530000 	cmp	r3, #0
   14f80:	0a000007 	beq	14fa4 <seL4_CapRights_new+0xdc>
   14f84:	e30834f0 	movw	r3, #34032	; 0x84f0
   14f88:	e3403002 	movt	r3, #2
   14f8c:	e3a02082 	mov	r2, #130	; 0x82
   14f90:	e3071e48 	movw	r1, #32328	; 0x7e48
   14f94:	e3401002 	movt	r1, #2
   14f98:	e3070f60 	movw	r0, #32608	; 0x7f60
   14f9c:	e3400002 	movt	r0, #2
   14fa0:	eb002571 	bl	1e56c <__assert_fail>
        | (capAllowGrantReply & 0x1u) << 3
   14fa4:	e51b3010 	ldr	r3, [fp, #-16]
   14fa8:	e1a03183 	lsl	r3, r3, #3
   14fac:	e2032008 	and	r2, r3, #8
        | (capAllowGrant & 0x1u) << 2
   14fb0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   14fb4:	e1a03103 	lsl	r3, r3, #2
   14fb8:	e2033004 	and	r3, r3, #4
   14fbc:	e1822003 	orr	r2, r2, r3
        | (capAllowRead & 0x1u) << 1
   14fc0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   14fc4:	e1a03083 	lsl	r3, r3, #1
   14fc8:	e2033002 	and	r3, r3, #2
   14fcc:	e1822003 	orr	r2, r2, r3
        | (capAllowWrite & 0x1u) << 0;
   14fd0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fd4:	e2033001 	and	r3, r3, #1
   14fd8:	e1823003 	orr	r3, r2, r3
    seL4_CapRights.words[0] = 0
   14fdc:	e50b3008 	str	r3, [fp, #-8]
    return seL4_CapRights;
   14fe0:	e51b3008 	ldr	r3, [fp, #-8]
}
   14fe4:	e1a00003 	mov	r0, r3
   14fe8:	e24bd004 	sub	sp, fp, #4
   14fec:	e8bd8800 	pop	{fp, pc}

00014ff0 <seL4_MessageInfo_new>:
seL4_MessageInfo_new(seL4_Uint32 label, seL4_Uint32 capsUnwrapped, seL4_Uint32 extraCaps, seL4_Uint32 length) {
   14ff0:	e92d4800 	push	{fp, lr}
   14ff4:	e28db004 	add	fp, sp, #4
   14ff8:	e24dd018 	sub	sp, sp, #24
   14ffc:	e50b0010 	str	r0, [fp, #-16]
   15000:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   15004:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   15008:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    seL4_DebugAssert((label & ~0xfffffu) == ((0 && (label & (1u << 31))) ? 0x0 : 0));  
   1500c:	e51b3010 	ldr	r3, [fp, #-16]
   15010:	e1a03a23 	lsr	r3, r3, #20
   15014:	e1a03a03 	lsl	r3, r3, #20
   15018:	e3530000 	cmp	r3, #0
   1501c:	0a000007 	beq	15040 <seL4_MessageInfo_new+0x50>
   15020:	e3083504 	movw	r3, #34052	; 0x8504
   15024:	e3403002 	movt	r3, #2
   15028:	e3002142 	movw	r2, #322	; 0x142
   1502c:	e3071e48 	movw	r1, #32328	; 0x7e48
   15030:	e3401002 	movt	r1, #2
   15034:	e3070fac 	movw	r0, #32684	; 0x7fac
   15038:	e3400002 	movt	r0, #2
   1503c:	eb00254a 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capsUnwrapped & ~0x7u) == ((0 && (capsUnwrapped & (1u << 31))) ? 0x0 : 0));  
   15040:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   15044:	e3c33007 	bic	r3, r3, #7
   15048:	e3530000 	cmp	r3, #0
   1504c:	0a000007 	beq	15070 <seL4_MessageInfo_new+0x80>
   15050:	e3083504 	movw	r3, #34052	; 0x8504
   15054:	e3403002 	movt	r3, #2
   15058:	e3002143 	movw	r2, #323	; 0x143
   1505c:	e3071e48 	movw	r1, #32328	; 0x7e48
   15060:	e3401002 	movt	r1, #2
   15064:	e3070fec 	movw	r0, #32748	; 0x7fec
   15068:	e3400002 	movt	r0, #2
   1506c:	eb00253e 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((extraCaps & ~0x3u) == ((0 && (extraCaps & (1u << 31))) ? 0x0 : 0));  
   15070:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   15074:	e3c33003 	bic	r3, r3, #3
   15078:	e3530000 	cmp	r3, #0
   1507c:	0a000007 	beq	150a0 <seL4_MessageInfo_new+0xb0>
   15080:	e3083504 	movw	r3, #34052	; 0x8504
   15084:	e3403002 	movt	r3, #2
   15088:	e3a02f51 	mov	r2, #324	; 0x144
   1508c:	e3071e48 	movw	r1, #32328	; 0x7e48
   15090:	e3401002 	movt	r1, #2
   15094:	e3080038 	movw	r0, #32824	; 0x8038
   15098:	e3400002 	movt	r0, #2
   1509c:	eb002532 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((length & ~0x7fu) == ((0 && (length & (1u << 31))) ? 0x0 : 0));
   150a0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   150a4:	e3c3307f 	bic	r3, r3, #127	; 0x7f
   150a8:	e3530000 	cmp	r3, #0
   150ac:	0a000007 	beq	150d0 <seL4_MessageInfo_new+0xe0>
   150b0:	e3083504 	movw	r3, #34052	; 0x8504
   150b4:	e3403002 	movt	r3, #2
   150b8:	e3002145 	movw	r2, #325	; 0x145
   150bc:	e3071e48 	movw	r1, #32328	; 0x7e48
   150c0:	e3401002 	movt	r1, #2
   150c4:	e308007c 	movw	r0, #32892	; 0x807c
   150c8:	e3400002 	movt	r0, #2
   150cc:	eb002526 	bl	1e56c <__assert_fail>
        | (label & 0xfffffu) << 12
   150d0:	e51b3010 	ldr	r3, [fp, #-16]
   150d4:	e1a02603 	lsl	r2, r3, #12
        | (capsUnwrapped & 0x7u) << 9
   150d8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   150dc:	e1a03483 	lsl	r3, r3, #9
   150e0:	e2033c0e 	and	r3, r3, #3584	; 0xe00
   150e4:	e1822003 	orr	r2, r2, r3
        | (extraCaps & 0x3u) << 7
   150e8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   150ec:	e1a03383 	lsl	r3, r3, #7
   150f0:	e2033d06 	and	r3, r3, #384	; 0x180
   150f4:	e1822003 	orr	r2, r2, r3
        | (length & 0x7fu) << 0;
   150f8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   150fc:	e203307f 	and	r3, r3, #127	; 0x7f
   15100:	e1823003 	orr	r3, r2, r3
    seL4_MessageInfo.words[0] = 0
   15104:	e50b3008 	str	r3, [fp, #-8]
    return seL4_MessageInfo;
   15108:	e51b3008 	ldr	r3, [fp, #-8]
}
   1510c:	e1a00003 	mov	r0, r3
   15110:	e24bd004 	sub	sp, fp, #4
   15114:	e8bd8800 	pop	{fp, pc}

00015118 <seL4_MessageInfo_get_label>:
seL4_MessageInfo_get_label(seL4_MessageInfo_t seL4_MessageInfo) {
   15118:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1511c:	e28db000 	add	fp, sp, #0
   15120:	e24dd014 	sub	sp, sp, #20
   15124:	e50b0010 	str	r0, [fp, #-16]
    ret = (seL4_MessageInfo.words[0] & 0xfffff000u) >> 12;
   15128:	e51b3010 	ldr	r3, [fp, #-16]
   1512c:	e1a03623 	lsr	r3, r3, #12
   15130:	e50b3008 	str	r3, [fp, #-8]
    return ret;
   15134:	e51b3008 	ldr	r3, [fp, #-8]
}
   15138:	e1a00003 	mov	r0, r3
   1513c:	e28bd000 	add	sp, fp, #0
   15140:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   15144:	e12fff1e 	bx	lr

00015148 <seL4_MessageInfo_get_length>:
seL4_MessageInfo_get_length(seL4_MessageInfo_t seL4_MessageInfo) {
   15148:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1514c:	e28db000 	add	fp, sp, #0
   15150:	e24dd014 	sub	sp, sp, #20
   15154:	e50b0010 	str	r0, [fp, #-16]
    ret = (seL4_MessageInfo.words[0] & 0x7fu) >> 0;
   15158:	e51b3010 	ldr	r3, [fp, #-16]
   1515c:	e203307f 	and	r3, r3, #127	; 0x7f
   15160:	e50b3008 	str	r3, [fp, #-8]
    return ret;
   15164:	e51b3008 	ldr	r3, [fp, #-8]
}
   15168:	e1a00003 	mov	r0, r3
   1516c:	e28bd000 	add	sp, fp, #0
   15170:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   15174:	e12fff1e 	bx	lr

00015178 <seL4_GetIPCBuffer>:
{
   15178:	e92d4800 	push	{fp, lr}
   1517c:	e28db004 	add	fp, sp, #4
    return __sel4_ipc_buffer;
   15180:	ebfff45d 	bl	122fc <__aeabi_read_tp>
   15184:	e1a03000 	mov	r3, r0
   15188:	e59f2008 	ldr	r2, [pc, #8]	; 15198 <seL4_GetIPCBuffer+0x20>
   1518c:	e7933002 	ldr	r3, [r3, r2]
}
   15190:	e1a00003 	mov	r0, r3
   15194:	e8bd8800 	pop	{fp, pc}
   15198:	00000008 	andeq	r0, r0, r8

0001519c <seL4_SetMR>:
{
   1519c:	e92d4800 	push	{fp, lr}
   151a0:	e28db004 	add	fp, sp, #4
   151a4:	e24dd008 	sub	sp, sp, #8
   151a8:	e50b0008 	str	r0, [fp, #-8]
   151ac:	e50b100c 	str	r1, [fp, #-12]
    seL4_GetIPCBuffer()->msg[i] = mr;
   151b0:	ebfffff0 	bl	15178 <seL4_GetIPCBuffer>
   151b4:	e1a02000 	mov	r2, r0
   151b8:	e51b3008 	ldr	r3, [fp, #-8]
   151bc:	e1a03103 	lsl	r3, r3, #2
   151c0:	e0823003 	add	r3, r2, r3
   151c4:	e51b200c 	ldr	r2, [fp, #-12]
   151c8:	e5832004 	str	r2, [r3, #4]
}
   151cc:	e320f000 	nop	{0}
   151d0:	e24bd004 	sub	sp, fp, #4
   151d4:	e8bd8800 	pop	{fp, pc}

000151d8 <seL4_SetCap>:
{
    return (seL4_CPtr)seL4_GetIPCBuffer()->caps_or_badges[i];
}

LIBSEL4_INLINE_FUNC void seL4_SetCap(int i, seL4_CPtr cptr)
{
   151d8:	e92d4800 	push	{fp, lr}
   151dc:	e28db004 	add	fp, sp, #4
   151e0:	e24dd008 	sub	sp, sp, #8
   151e4:	e50b0008 	str	r0, [fp, #-8]
   151e8:	e50b100c 	str	r1, [fp, #-12]
    seL4_GetIPCBuffer()->caps_or_badges[i] = (seL4_Word)cptr;
   151ec:	ebffffe1 	bl	15178 <seL4_GetIPCBuffer>
   151f0:	e1a01000 	mov	r1, r0
   151f4:	e51b3008 	ldr	r3, [fp, #-8]
   151f8:	e283307a 	add	r3, r3, #122	; 0x7a
   151fc:	e51b200c 	ldr	r2, [fp, #-12]
   15200:	e7812103 	str	r2, [r1, r3, lsl #2]
}
   15204:	e320f000 	nop	{0}
   15208:	e24bd004 	sub	sp, fp, #4
   1520c:	e8bd8800 	pop	{fp, pc}

00015210 <arm_sys_send_recv>:
{
   15210:	e92d08b0 	push	{r4, r5, r7, fp}
   15214:	e28db00c 	add	fp, sp, #12
   15218:	e24dd010 	sub	sp, sp, #16
   1521c:	e50b0010 	str	r0, [fp, #-16]
   15220:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   15224:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   15228:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    register seL4_Word destptr asm("r0") = dest;
   1522c:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    register seL4_Word info asm("r1") = info_arg;
   15230:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   15234:	e59b3008 	ldr	r3, [fp, #8]
   15238:	e5933000 	ldr	r3, [r3]
   1523c:	e1a02003 	mov	r2, r3
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   15240:	e59b300c 	ldr	r3, [fp, #12]
   15244:	e5933000 	ldr	r3, [r3]
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   15248:	e59bc010 	ldr	ip, [fp, #16]
   1524c:	e59cc000 	ldr	ip, [ip]
   15250:	e1a0400c 	mov	r4, ip
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   15254:	e59bc014 	ldr	ip, [fp, #20]
   15258:	e59cc000 	ldr	ip, [ip]
   1525c:	e1a0500c 	mov	r5, ip
    register seL4_Word scno asm("r7") = sys;
   15260:	e51b7010 	ldr	r7, [fp, #-16]
    asm volatile(
   15264:	ef000000 	svc	0x00000000
    *out_info = info;
   15268:	e1a0c001 	mov	ip, r1
   1526c:	e59b1004 	ldr	r1, [fp, #4]
   15270:	e581c000 	str	ip, [r1]
    *out_badge = destptr;
   15274:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   15278:	e5810000 	str	r0, [r1]
    *in_out_mr0 = msg0;
   1527c:	e1a01002 	mov	r1, r2
   15280:	e59b2008 	ldr	r2, [fp, #8]
   15284:	e5821000 	str	r1, [r2]
    *in_out_mr1 = msg1;
   15288:	e1a02003 	mov	r2, r3
   1528c:	e59b300c 	ldr	r3, [fp, #12]
   15290:	e5832000 	str	r2, [r3]
    *in_out_mr2 = msg2;
   15294:	e1a02004 	mov	r2, r4
   15298:	e59b3010 	ldr	r3, [fp, #16]
   1529c:	e5832000 	str	r2, [r3]
    *in_out_mr3 = msg3;
   152a0:	e1a02005 	mov	r2, r5
   152a4:	e59b3014 	ldr	r3, [fp, #20]
   152a8:	e5832000 	str	r2, [r3]
}
   152ac:	e320f000 	nop	{0}
   152b0:	e24bd00c 	sub	sp, fp, #12
   152b4:	e8bd08b0 	pop	{r4, r5, r7, fp}
   152b8:	e12fff1e 	bx	lr

000152bc <seL4_CallWithMRs>:
{
   152bc:	e92d4800 	push	{fp, lr}
   152c0:	e28db004 	add	fp, sp, #4
   152c4:	e24dd040 	sub	sp, sp, #64	; 0x40
   152c8:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   152cc:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   152d0:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   152d4:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    seL4_Word msg0 = 0;
   152d8:	e3a03000 	mov	r3, #0
   152dc:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word msg1 = 0;
   152e0:	e3a03000 	mov	r3, #0
   152e4:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word msg2 = 0;
   152e8:	e3a03000 	mov	r3, #0
   152ec:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word msg3 = 0;
   152f0:	e3a03000 	mov	r3, #0
   152f4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    if (mr0 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 0) {
   152f8:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   152fc:	e3530000 	cmp	r3, #0
   15300:	0a000007 	beq	15324 <seL4_CallWithMRs+0x68>
   15304:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   15308:	ebffff8e 	bl	15148 <seL4_MessageInfo_get_length>
   1530c:	e1a03000 	mov	r3, r0
   15310:	e3530000 	cmp	r3, #0
   15314:	0a000002 	beq	15324 <seL4_CallWithMRs+0x68>
        msg0 = *mr0;
   15318:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1531c:	e5933000 	ldr	r3, [r3]
   15320:	e50b300c 	str	r3, [fp, #-12]
    if (mr1 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 1) {
   15324:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   15328:	e3530000 	cmp	r3, #0
   1532c:	0a000007 	beq	15350 <seL4_CallWithMRs+0x94>
   15330:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   15334:	ebffff83 	bl	15148 <seL4_MessageInfo_get_length>
   15338:	e1a03000 	mov	r3, r0
   1533c:	e3530001 	cmp	r3, #1
   15340:	9a000002 	bls	15350 <seL4_CallWithMRs+0x94>
        msg1 = *mr1;
   15344:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   15348:	e5933000 	ldr	r3, [r3]
   1534c:	e50b3010 	str	r3, [fp, #-16]
    if (mr2 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 2) {
   15350:	e59b3004 	ldr	r3, [fp, #4]
   15354:	e3530000 	cmp	r3, #0
   15358:	0a000007 	beq	1537c <seL4_CallWithMRs+0xc0>
   1535c:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   15360:	ebffff78 	bl	15148 <seL4_MessageInfo_get_length>
   15364:	e1a03000 	mov	r3, r0
   15368:	e3530002 	cmp	r3, #2
   1536c:	9a000002 	bls	1537c <seL4_CallWithMRs+0xc0>
        msg2 = *mr2;
   15370:	e59b3004 	ldr	r3, [fp, #4]
   15374:	e5933000 	ldr	r3, [r3]
   15378:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    if (mr3 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 3) {
   1537c:	e59b3008 	ldr	r3, [fp, #8]
   15380:	e3530000 	cmp	r3, #0
   15384:	0a000007 	beq	153a8 <seL4_CallWithMRs+0xec>
   15388:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   1538c:	ebffff6d 	bl	15148 <seL4_MessageInfo_get_length>
   15390:	e1a03000 	mov	r3, r0
   15394:	e3530003 	cmp	r3, #3
   15398:	9a000002 	bls	153a8 <seL4_CallWithMRs+0xec>
        msg3 = *mr3;
   1539c:	e59b3008 	ldr	r3, [fp, #8]
   153a0:	e5933000 	ldr	r3, [r3]
   153a4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    arm_sys_send_recv(seL4_SysCall, dest, &dest, msgInfo.words[0], &info.words[0], &msg0, &msg1, &msg2, &msg3, 0);
   153a8:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   153ac:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   153b0:	e24b2020 	sub	r2, fp, #32
   153b4:	e3a03000 	mov	r3, #0
   153b8:	e58d3014 	str	r3, [sp, #20]
   153bc:	e24b3018 	sub	r3, fp, #24
   153c0:	e58d3010 	str	r3, [sp, #16]
   153c4:	e24b3014 	sub	r3, fp, #20
   153c8:	e58d300c 	str	r3, [sp, #12]
   153cc:	e24b3010 	sub	r3, fp, #16
   153d0:	e58d3008 	str	r3, [sp, #8]
   153d4:	e24b300c 	sub	r3, fp, #12
   153d8:	e58d3004 	str	r3, [sp, #4]
   153dc:	e24b3008 	sub	r3, fp, #8
   153e0:	e58d3000 	str	r3, [sp]
   153e4:	e1a03000 	mov	r3, r0
   153e8:	e3e00000 	mvn	r0, #0
   153ec:	ebffff87 	bl	15210 <arm_sys_send_recv>
    if (mr0 != seL4_Null) {
   153f0:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   153f4:	e3530000 	cmp	r3, #0
   153f8:	0a000002 	beq	15408 <seL4_CallWithMRs+0x14c>
        *mr0 = msg0;
   153fc:	e51b200c 	ldr	r2, [fp, #-12]
   15400:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   15404:	e5832000 	str	r2, [r3]
    if (mr1 != seL4_Null) {
   15408:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1540c:	e3530000 	cmp	r3, #0
   15410:	0a000002 	beq	15420 <seL4_CallWithMRs+0x164>
        *mr1 = msg1;
   15414:	e51b2010 	ldr	r2, [fp, #-16]
   15418:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1541c:	e5832000 	str	r2, [r3]
    if (mr2 != seL4_Null) {
   15420:	e59b3004 	ldr	r3, [fp, #4]
   15424:	e3530000 	cmp	r3, #0
   15428:	0a000002 	beq	15438 <seL4_CallWithMRs+0x17c>
        *mr2 = msg2;
   1542c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   15430:	e59b3004 	ldr	r3, [fp, #4]
   15434:	e5832000 	str	r2, [r3]
    if (mr3 != seL4_Null) {
   15438:	e59b3008 	ldr	r3, [fp, #8]
   1543c:	e3530000 	cmp	r3, #0
   15440:	0a000002 	beq	15450 <seL4_CallWithMRs+0x194>
        *mr3 = msg3;
   15444:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   15448:	e59b3008 	ldr	r3, [fp, #8]
   1544c:	e5832000 	str	r2, [r3]
    return info;
   15450:	e51b3008 	ldr	r3, [fp, #-8]
}
   15454:	e1a00003 	mov	r0, r3
   15458:	e24bd004 	sub	sp, fp, #4
   1545c:	e8bd8800 	pop	{fp, pc}

00015460 <seL4_DebugCapIdentify>:
{
   15460:	e92d4800 	push	{fp, lr}
   15464:	e28db004 	add	fp, sp, #4
   15468:	e24dd038 	sub	sp, sp, #56	; 0x38
   1546c:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    seL4_Word unused0 = 0;
   15470:	e3a03000 	mov	r3, #0
   15474:	e50b3008 	str	r3, [fp, #-8]
    seL4_Word unused1 = 0;
   15478:	e3a03000 	mov	r3, #0
   1547c:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word unused2 = 0;
   15480:	e3a03000 	mov	r3, #0
   15484:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word unused3 = 0;
   15488:	e3a03000 	mov	r3, #0
   1548c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word unused4 = 0;
   15490:	e3a03000 	mov	r3, #0
   15494:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    arm_sys_send_recv(seL4_SysDebugCapIdentify, cap, &cap, 0, &unused0, &unused1, &unused2, &unused3, &unused4, 0);
   15498:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   1549c:	e24b2020 	sub	r2, fp, #32
   154a0:	e3a03000 	mov	r3, #0
   154a4:	e58d3014 	str	r3, [sp, #20]
   154a8:	e24b3018 	sub	r3, fp, #24
   154ac:	e58d3010 	str	r3, [sp, #16]
   154b0:	e24b3014 	sub	r3, fp, #20
   154b4:	e58d300c 	str	r3, [sp, #12]
   154b8:	e24b3010 	sub	r3, fp, #16
   154bc:	e58d3008 	str	r3, [sp, #8]
   154c0:	e24b300c 	sub	r3, fp, #12
   154c4:	e58d3004 	str	r3, [sp, #4]
   154c8:	e24b3008 	sub	r3, fp, #8
   154cc:	e58d3000 	str	r3, [sp]
   154d0:	e3a03000 	mov	r3, #0
   154d4:	e3e0000b 	mvn	r0, #11
   154d8:	ebffff4c 	bl	15210 <arm_sys_send_recv>
    return (seL4_Uint32)cap;
   154dc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
}
   154e0:	e1a00003 	mov	r0, r3
   154e4:	e24bd004 	sub	sp, fp, #4
   154e8:	e8bd8800 	pop	{fp, pc}

000154ec <seL4_ARM_Page_Map>:
{
   154ec:	e92d4800 	push	{fp, lr}
   154f0:	e28db004 	add	fp, sp, #4
   154f4:	e24dd038 	sub	sp, sp, #56	; 0x38
   154f8:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   154fc:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
   15500:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
   15504:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
	seL4_MessageInfo_t tag = seL4_MessageInfo_new(ARMPageMap, 0, 1, 3);
   15508:	e3a03003 	mov	r3, #3
   1550c:	e3a02001 	mov	r2, #1
   15510:	e3a01000 	mov	r1, #0
   15514:	e3a00024 	mov	r0, #36	; 0x24
   15518:	ebfffeb4 	bl	14ff0 <seL4_MessageInfo_new>
   1551c:	e1a03000 	mov	r3, r0
   15520:	e50b300c 	str	r3, [fp, #-12]
	seL4_SetCap(0, vspace);
   15524:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
   15528:	e3a00000 	mov	r0, #0
   1552c:	ebffff29 	bl	151d8 <seL4_SetCap>
	mr0 = vaddr;
   15530:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   15534:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	mr1 = rights.words[0];
   15538:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   1553c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	mr2 = attr;
   15540:	e59b3004 	ldr	r3, [fp, #4]
   15544:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	mr3 = 0;
   15548:	e3a03000 	mov	r3, #0
   1554c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
	output_tag = seL4_CallWithMRs(_service, tag,
   15550:	e24b1018 	sub	r1, fp, #24
   15554:	e24b2014 	sub	r2, fp, #20
   15558:	e24b3020 	sub	r3, fp, #32
   1555c:	e58d3004 	str	r3, [sp, #4]
   15560:	e24b301c 	sub	r3, fp, #28
   15564:	e58d3000 	str	r3, [sp]
   15568:	e1a03001 	mov	r3, r1
   1556c:	e51b100c 	ldr	r1, [fp, #-12]
   15570:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   15574:	ebffff50 	bl	152bc <seL4_CallWithMRs>
   15578:	e1a03000 	mov	r3, r0
   1557c:	e50b3010 	str	r3, [fp, #-16]
	result = (seL4_Error) seL4_MessageInfo_get_label(output_tag);
   15580:	e51b0010 	ldr	r0, [fp, #-16]
   15584:	ebfffee3 	bl	15118 <seL4_MessageInfo_get_label>
   15588:	e50b0008 	str	r0, [fp, #-8]
	if (result != seL4_NoError) {
   1558c:	e51b3008 	ldr	r3, [fp, #-8]
   15590:	e3530000 	cmp	r3, #0
   15594:	0a00000f 	beq	155d8 <seL4_ARM_Page_Map+0xec>
		seL4_SetMR(0, mr0);
   15598:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1559c:	e1a01003 	mov	r1, r3
   155a0:	e3a00000 	mov	r0, #0
   155a4:	ebfffefc 	bl	1519c <seL4_SetMR>
		seL4_SetMR(1, mr1);
   155a8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   155ac:	e1a01003 	mov	r1, r3
   155b0:	e3a00001 	mov	r0, #1
   155b4:	ebfffef8 	bl	1519c <seL4_SetMR>
		seL4_SetMR(2, mr2);
   155b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   155bc:	e1a01003 	mov	r1, r3
   155c0:	e3a00002 	mov	r0, #2
   155c4:	ebfffef4 	bl	1519c <seL4_SetMR>
		seL4_SetMR(3, mr3);
   155c8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   155cc:	e1a01003 	mov	r1, r3
   155d0:	e3a00003 	mov	r0, #3
   155d4:	ebfffef0 	bl	1519c <seL4_SetMR>
	return result;
   155d8:	e51b3008 	ldr	r3, [fp, #-8]
}
   155dc:	e1a00003 	mov	r0, r3
   155e0:	e24bd004 	sub	sp, fp, #4
   155e4:	e8bd8800 	pop	{fp, pc}

000155e8 <seL4_ARM_Page_Unmap>:
{
   155e8:	e92d4800 	push	{fp, lr}
   155ec:	e28db004 	add	fp, sp, #4
   155f0:	e24dd030 	sub	sp, sp, #48	; 0x30
   155f4:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
	seL4_MessageInfo_t tag = seL4_MessageInfo_new(ARMPageUnmap, 0, 0, 0);
   155f8:	e3a03000 	mov	r3, #0
   155fc:	e3a02000 	mov	r2, #0
   15600:	e3a01000 	mov	r1, #0
   15604:	e3a00025 	mov	r0, #37	; 0x25
   15608:	ebfffe78 	bl	14ff0 <seL4_MessageInfo_new>
   1560c:	e1a03000 	mov	r3, r0
   15610:	e50b300c 	str	r3, [fp, #-12]
	mr0 = 0;
   15614:	e3a03000 	mov	r3, #0
   15618:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	mr1 = 0;
   1561c:	e3a03000 	mov	r3, #0
   15620:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	mr2 = 0;
   15624:	e3a03000 	mov	r3, #0
   15628:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	mr3 = 0;
   1562c:	e3a03000 	mov	r3, #0
   15630:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
	output_tag = seL4_CallWithMRs(_service, tag,
   15634:	e24b1018 	sub	r1, fp, #24
   15638:	e24b2014 	sub	r2, fp, #20
   1563c:	e24b3020 	sub	r3, fp, #32
   15640:	e58d3004 	str	r3, [sp, #4]
   15644:	e24b301c 	sub	r3, fp, #28
   15648:	e58d3000 	str	r3, [sp]
   1564c:	e1a03001 	mov	r3, r1
   15650:	e51b100c 	ldr	r1, [fp, #-12]
   15654:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   15658:	ebffff17 	bl	152bc <seL4_CallWithMRs>
   1565c:	e1a03000 	mov	r3, r0
   15660:	e50b3010 	str	r3, [fp, #-16]
	result = (seL4_Error) seL4_MessageInfo_get_label(output_tag);
   15664:	e51b0010 	ldr	r0, [fp, #-16]
   15668:	ebfffeaa 	bl	15118 <seL4_MessageInfo_get_label>
   1566c:	e50b0008 	str	r0, [fp, #-8]
	if (result != seL4_NoError) {
   15670:	e51b3008 	ldr	r3, [fp, #-8]
   15674:	e3530000 	cmp	r3, #0
   15678:	0a00000f 	beq	156bc <seL4_ARM_Page_Unmap+0xd4>
		seL4_SetMR(0, mr0);
   1567c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   15680:	e1a01003 	mov	r1, r3
   15684:	e3a00000 	mov	r0, #0
   15688:	ebfffec3 	bl	1519c <seL4_SetMR>
		seL4_SetMR(1, mr1);
   1568c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   15690:	e1a01003 	mov	r1, r3
   15694:	e3a00001 	mov	r0, #1
   15698:	ebfffebf 	bl	1519c <seL4_SetMR>
		seL4_SetMR(2, mr2);
   1569c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   156a0:	e1a01003 	mov	r1, r3
   156a4:	e3a00002 	mov	r0, #2
   156a8:	ebfffebb 	bl	1519c <seL4_SetMR>
		seL4_SetMR(3, mr3);
   156ac:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   156b0:	e1a01003 	mov	r1, r3
   156b4:	e3a00003 	mov	r0, #3
   156b8:	ebfffeb7 	bl	1519c <seL4_SetMR>
	return result;
   156bc:	e51b3008 	ldr	r3, [fp, #-8]
}
   156c0:	e1a00003 	mov	r0, r3
   156c4:	e24bd004 	sub	sp, fp, #4
   156c8:	e8bd8800 	pop	{fp, pc}

000156cc <seL4_CNode_Delete>:
 * @retval seL4_InvalidCapability The  @xmlonly <texttt text="_service"/> @endxmlonly  is a CPtr to a capability of the wrong type. 
 * @retval seL4_RangeError The  @xmlonly <texttt text="depth"/> @endxmlonly  is invalid  @xmlonly <docref>(see <autoref label="s:cspace-addressing"/>)</docref> @endxmlonly . 
 */
LIBSEL4_INLINE seL4_Error
seL4_CNode_Delete(seL4_CNode _service, seL4_Word index, seL4_Uint8 depth)
{
   156cc:	e92d4800 	push	{fp, lr}
   156d0:	e28db004 	add	fp, sp, #4
   156d4:	e24dd038 	sub	sp, sp, #56	; 0x38
   156d8:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   156dc:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
   156e0:	e1a03002 	mov	r3, r2
   156e4:	e54b302d 	strb	r3, [fp, #-45]	; 0xffffffd3
	seL4_Error result;
	seL4_MessageInfo_t tag = seL4_MessageInfo_new(CNodeDelete, 0, 0, 2);
   156e8:	e3a03002 	mov	r3, #2
   156ec:	e3a02000 	mov	r2, #0
   156f0:	e3a01000 	mov	r1, #0
   156f4:	e3a00011 	mov	r0, #17
   156f8:	ebfffe3c 	bl	14ff0 <seL4_MessageInfo_new>
   156fc:	e1a03000 	mov	r3, r0
   15700:	e50b300c 	str	r3, [fp, #-12]
	seL4_Word mr1;
	seL4_Word mr2;
	seL4_Word mr3;

	/* Marshal and initialise parameters. */
	mr0 = index;
   15704:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   15708:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	mr1 = (depth & 0xfful);
   1570c:	e55b302d 	ldrb	r3, [fp, #-45]	; 0xffffffd3
   15710:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	mr2 = 0;
   15714:	e3a03000 	mov	r3, #0
   15718:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	mr3 = 0;
   1571c:	e3a03000 	mov	r3, #0
   15720:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0

	/* Perform the call, passing in-register arguments directly. */
	output_tag = seL4_CallWithMRs(_service, tag,
   15724:	e24b1018 	sub	r1, fp, #24
   15728:	e24b2014 	sub	r2, fp, #20
   1572c:	e24b3020 	sub	r3, fp, #32
   15730:	e58d3004 	str	r3, [sp, #4]
   15734:	e24b301c 	sub	r3, fp, #28
   15738:	e58d3000 	str	r3, [sp]
   1573c:	e1a03001 	mov	r3, r1
   15740:	e51b100c 	ldr	r1, [fp, #-12]
   15744:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   15748:	ebfffedb 	bl	152bc <seL4_CallWithMRs>
   1574c:	e1a03000 	mov	r3, r0
   15750:	e50b3010 	str	r3, [fp, #-16]
		&mr0, &mr1, &mr2, &mr3);
	result = (seL4_Error) seL4_MessageInfo_get_label(output_tag);
   15754:	e51b0010 	ldr	r0, [fp, #-16]
   15758:	ebfffe6e 	bl	15118 <seL4_MessageInfo_get_label>
   1575c:	e50b0008 	str	r0, [fp, #-8]

	/* Unmarshal registers into IPC buffer on error. */
	if (result != seL4_NoError) {
   15760:	e51b3008 	ldr	r3, [fp, #-8]
   15764:	e3530000 	cmp	r3, #0
   15768:	0a00000f 	beq	157ac <seL4_CNode_Delete+0xe0>
		seL4_SetMR(0, mr0);
   1576c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   15770:	e1a01003 	mov	r1, r3
   15774:	e3a00000 	mov	r0, #0
   15778:	ebfffe87 	bl	1519c <seL4_SetMR>
		seL4_SetMR(1, mr1);
   1577c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   15780:	e1a01003 	mov	r1, r3
   15784:	e3a00001 	mov	r0, #1
   15788:	ebfffe83 	bl	1519c <seL4_SetMR>
		seL4_SetMR(2, mr2);
   1578c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   15790:	e1a01003 	mov	r1, r3
   15794:	e3a00002 	mov	r0, #2
   15798:	ebfffe7f 	bl	1519c <seL4_SetMR>
		seL4_SetMR(3, mr3);
   1579c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   157a0:	e1a01003 	mov	r1, r3
   157a4:	e3a00003 	mov	r0, #3
   157a8:	ebfffe7b 	bl	1519c <seL4_SetMR>
			seL4_DebugPutString(seL4_GetDebugError());
		}
#endif
	}

	return result;
   157ac:	e51b3008 	ldr	r3, [fp, #-8]
}
   157b0:	e1a00003 	mov	r0, r3
   157b4:	e24bd004 	sub	sp, fp, #4
   157b8:	e8bd8800 	pop	{fp, pc}

000157bc <debug_cap_is_valid>:

void debug_cap_identify(seL4_CPtr cap);

#ifdef CONFIG_DEBUG_BUILD
static inline int debug_cap_is_valid(seL4_CPtr cap)
{
   157bc:	e92d4800 	push	{fp, lr}
   157c0:	e28db004 	add	fp, sp, #4
   157c4:	e24dd008 	sub	sp, sp, #8
   157c8:	e50b0008 	str	r0, [fp, #-8]
#ifdef CONFIG_DEBUG_BUILD
    return (0 != seL4_DebugCapIdentify(cap));
   157cc:	e51b0008 	ldr	r0, [fp, #-8]
   157d0:	ebffff22 	bl	15460 <seL4_DebugCapIdentify>
   157d4:	e1a03000 	mov	r3, r0
   157d8:	e3530000 	cmp	r3, #0
   157dc:	13a03001 	movne	r3, #1
   157e0:	03a03000 	moveq	r3, #0
   157e4:	e6ef3073 	uxtb	r3, r3
#else
    return 0; /* fail check on non-debug kernels */
#endif
}
   157e8:	e1a00003 	mov	r0, r3
   157ec:	e24bd004 	sub	sp, fp, #4
   157f0:	e8bd8800 	pop	{fp, pc}

000157f4 <vka_cspace_make_path>:

    return vka->cspace_alloc(vka->data, res);
}

static inline void vka_cspace_make_path(vka_t *vka, seL4_CPtr slot, cspacepath_t *res)
{
   157f4:	e92d4800 	push	{fp, lr}
   157f8:	e28db004 	add	fp, sp, #4
   157fc:	e24dd018 	sub	sp, sp, #24
   15800:	e50b0008 	str	r0, [fp, #-8]
   15804:	e50b100c 	str	r1, [fp, #-12]
   15808:	e50b2010 	str	r2, [fp, #-16]

    if (!res) {
   1580c:	e51b3010 	ldr	r3, [fp, #-16]
   15810:	e3530000 	cmp	r3, #0
   15814:	1a000018 	bne	1587c <vka_cspace_make_path+0x88>
        ZF_LOGF("res is NULL");
   15818:	e3083104 	movw	r3, #33028	; 0x8104
   1581c:	e3403004 	movt	r3, #4
   15820:	e5933000 	ldr	r3, [r3]
   15824:	e3530801 	cmp	r3, #65536	; 0x10000
   15828:	aa00000b 	bge	1585c <vka_cspace_make_path+0x68>
   1582c:	e308311c 	movw	r3, #33052	; 0x811c
   15830:	e3403002 	movt	r3, #2
   15834:	e58d3004 	str	r3, [sp, #4]
   15838:	e3a03000 	mov	r3, #0
   1583c:	e58d3000 	str	r3, [sp]
   15840:	e30f3fff 	movw	r3, #65535	; 0xffff
   15844:	e3a020a0 	mov	r2, #160	; 0xa0
   15848:	e30810bc 	movw	r1, #32956	; 0x80bc
   1584c:	e3401002 	movt	r1, #2
   15850:	e3080564 	movw	r0, #34148	; 0x8564
   15854:	e3400002 	movt	r0, #2
   15858:	eb0021ca 	bl	1df88 <_zf_log_write_d>
   1585c:	e3083564 	movw	r3, #34148	; 0x8564
   15860:	e3403002 	movt	r3, #2
   15864:	e3a020a0 	mov	r2, #160	; 0xa0
   15868:	e30810bc 	movw	r1, #32956	; 0x80bc
   1586c:	e3401002 	movt	r1, #2
   15870:	e3080128 	movw	r0, #33064	; 0x8128
   15874:	e3400002 	movt	r0, #2
   15878:	eb00233b 	bl	1e56c <__assert_fail>
    }

    if (!vka) {
   1587c:	e51b3008 	ldr	r3, [fp, #-8]
   15880:	e3530000 	cmp	r3, #0
   15884:	1a000018 	bne	158ec <vka_cspace_make_path+0xf8>
        ZF_LOGF("vka is NULL");
   15888:	e3083104 	movw	r3, #33028	; 0x8104
   1588c:	e3403004 	movt	r3, #4
   15890:	e5933000 	ldr	r3, [r3]
   15894:	e3530801 	cmp	r3, #65536	; 0x10000
   15898:	aa00000b 	bge	158cc <vka_cspace_make_path+0xd8>
   1589c:	e3083138 	movw	r3, #33080	; 0x8138
   158a0:	e3403002 	movt	r3, #2
   158a4:	e58d3004 	str	r3, [sp, #4]
   158a8:	e3a03000 	mov	r3, #0
   158ac:	e58d3000 	str	r3, [sp]
   158b0:	e30f3fff 	movw	r3, #65535	; 0xffff
   158b4:	e3a020a4 	mov	r2, #164	; 0xa4
   158b8:	e30810bc 	movw	r1, #32956	; 0x80bc
   158bc:	e3401002 	movt	r1, #2
   158c0:	e3080564 	movw	r0, #34148	; 0x8564
   158c4:	e3400002 	movt	r0, #2
   158c8:	eb0021ae 	bl	1df88 <_zf_log_write_d>
   158cc:	e3083564 	movw	r3, #34148	; 0x8564
   158d0:	e3403002 	movt	r3, #2
   158d4:	e3a020a4 	mov	r2, #164	; 0xa4
   158d8:	e30810bc 	movw	r1, #32956	; 0x80bc
   158dc:	e3401002 	movt	r1, #2
   158e0:	e3080128 	movw	r0, #33064	; 0x8128
   158e4:	e3400002 	movt	r0, #2
   158e8:	eb00231f 	bl	1e56c <__assert_fail>
    }

    if (!vka->cspace_make_path) {
   158ec:	e51b3008 	ldr	r3, [fp, #-8]
   158f0:	e5933008 	ldr	r3, [r3, #8]
   158f4:	e3530000 	cmp	r3, #0
   158f8:	1a000018 	bne	15960 <vka_cspace_make_path+0x16c>
        ZF_LOGF("Unimplmented");
   158fc:	e3083104 	movw	r3, #33028	; 0x8104
   15900:	e3403004 	movt	r3, #4
   15904:	e5933000 	ldr	r3, [r3]
   15908:	e3530801 	cmp	r3, #65536	; 0x10000
   1590c:	aa00000b 	bge	15940 <vka_cspace_make_path+0x14c>
   15910:	e3083144 	movw	r3, #33092	; 0x8144
   15914:	e3403002 	movt	r3, #2
   15918:	e58d3004 	str	r3, [sp, #4]
   1591c:	e3a03000 	mov	r3, #0
   15920:	e58d3000 	str	r3, [sp]
   15924:	e30f3fff 	movw	r3, #65535	; 0xffff
   15928:	e3a020a8 	mov	r2, #168	; 0xa8
   1592c:	e30810bc 	movw	r1, #32956	; 0x80bc
   15930:	e3401002 	movt	r1, #2
   15934:	e3080564 	movw	r0, #34148	; 0x8564
   15938:	e3400002 	movt	r0, #2
   1593c:	eb002191 	bl	1df88 <_zf_log_write_d>
   15940:	e3083564 	movw	r3, #34148	; 0x8564
   15944:	e3403002 	movt	r3, #2
   15948:	e3a020a8 	mov	r2, #168	; 0xa8
   1594c:	e30810bc 	movw	r1, #32956	; 0x80bc
   15950:	e3401002 	movt	r1, #2
   15954:	e3080128 	movw	r0, #33064	; 0x8128
   15958:	e3400002 	movt	r0, #2
   1595c:	eb002302 	bl	1e56c <__assert_fail>
    }

    vka->cspace_make_path(vka->data, slot, res);
   15960:	e51b3008 	ldr	r3, [fp, #-8]
   15964:	e5933008 	ldr	r3, [r3, #8]
   15968:	e51b2008 	ldr	r2, [fp, #-8]
   1596c:	e5920000 	ldr	r0, [r2]
   15970:	e51b2010 	ldr	r2, [fp, #-16]
   15974:	e51b100c 	ldr	r1, [fp, #-12]
   15978:	e12fff33 	blx	r3
}
   1597c:	e320f000 	nop	{0}
   15980:	e24bd004 	sub	sp, fp, #4
   15984:	e8bd8800 	pop	{fp, pc}

00015988 <vka_cspace_free>:

    return error;
}

static inline void vka_cspace_free(vka_t *vka, seL4_CPtr slot)
{
   15988:	e92d4800 	push	{fp, lr}
   1598c:	e28db004 	add	fp, sp, #4
   15990:	e24dd010 	sub	sp, sp, #16
   15994:	e50b0008 	str	r0, [fp, #-8]
   15998:	e50b100c 	str	r1, [fp, #-12]
#ifdef CONFIG_DEBUG_BUILD
    if (debug_cap_is_valid(slot)) {
   1599c:	e51b000c 	ldr	r0, [fp, #-12]
   159a0:	ebffff85 	bl	157bc <debug_cap_is_valid>
   159a4:	e1a03000 	mov	r3, r0
   159a8:	e3530000 	cmp	r3, #0
   159ac:	0a000018 	beq	15a14 <vka_cspace_free+0x8c>
        ZF_LOGF("slot is not free: call vka_cnode_delete first");
   159b0:	e3083104 	movw	r3, #33028	; 0x8104
   159b4:	e3403004 	movt	r3, #4
   159b8:	e5933000 	ldr	r3, [r3]
   159bc:	e3530801 	cmp	r3, #65536	; 0x10000
   159c0:	aa00000b 	bge	159f4 <vka_cspace_free+0x6c>
   159c4:	e3083154 	movw	r3, #33108	; 0x8154
   159c8:	e3403002 	movt	r3, #2
   159cc:	e58d3004 	str	r3, [sp, #4]
   159d0:	e3a03000 	mov	r3, #0
   159d4:	e58d3000 	str	r3, [sp]
   159d8:	e30f3fff 	movw	r3, #65535	; 0xffff
   159dc:	e3a020c1 	mov	r2, #193	; 0xc1
   159e0:	e30810bc 	movw	r1, #32956	; 0x80bc
   159e4:	e3401002 	movt	r1, #2
   159e8:	e308057c 	movw	r0, #34172	; 0x857c
   159ec:	e3400002 	movt	r0, #2
   159f0:	eb002164 	bl	1df88 <_zf_log_write_d>
   159f4:	e308357c 	movw	r3, #34172	; 0x857c
   159f8:	e3403002 	movt	r3, #2
   159fc:	e3a020c1 	mov	r2, #193	; 0xc1
   15a00:	e30810bc 	movw	r1, #32956	; 0x80bc
   15a04:	e3401002 	movt	r1, #2
   15a08:	e3080128 	movw	r0, #33064	; 0x8128
   15a0c:	e3400002 	movt	r0, #2
   15a10:	eb0022d5 	bl	1e56c <__assert_fail>
        /* this terminates the system */
    }
#endif

    if (!vka->cspace_free) {
   15a14:	e51b3008 	ldr	r3, [fp, #-8]
   15a18:	e5933018 	ldr	r3, [r3, #24]
   15a1c:	e3530000 	cmp	r3, #0
   15a20:	1a000011 	bne	15a6c <vka_cspace_free+0xe4>
        ZF_LOGE("Not implemented");
   15a24:	e3083104 	movw	r3, #33028	; 0x8104
   15a28:	e3403004 	movt	r3, #4
   15a2c:	e5933000 	ldr	r3, [r3]
   15a30:	e3530005 	cmp	r3, #5
   15a34:	ca000014 	bgt	15a8c <vka_cspace_free+0x104>
   15a38:	e3083184 	movw	r3, #33156	; 0x8184
   15a3c:	e3403002 	movt	r3, #2
   15a40:	e58d3004 	str	r3, [sp, #4]
   15a44:	e3a03000 	mov	r3, #0
   15a48:	e58d3000 	str	r3, [sp]
   15a4c:	e3a03005 	mov	r3, #5
   15a50:	e3a020c7 	mov	r2, #199	; 0xc7
   15a54:	e30810bc 	movw	r1, #32956	; 0x80bc
   15a58:	e3401002 	movt	r1, #2
   15a5c:	e308057c 	movw	r0, #34172	; 0x857c
   15a60:	e3400002 	movt	r0, #2
   15a64:	eb002147 	bl	1df88 <_zf_log_write_d>
        return;
   15a68:	ea000007 	b	15a8c <vka_cspace_free+0x104>
    }

    vka->cspace_free(vka->data, slot);
   15a6c:	e51b3008 	ldr	r3, [fp, #-8]
   15a70:	e5933018 	ldr	r3, [r3, #24]
   15a74:	e51b2008 	ldr	r2, [fp, #-8]
   15a78:	e5922000 	ldr	r2, [r2]
   15a7c:	e51b100c 	ldr	r1, [fp, #-12]
   15a80:	e1a00002 	mov	r0, r2
   15a84:	e12fff33 	blx	r3
   15a88:	ea000000 	b	15a90 <vka_cspace_free+0x108>
        return;
   15a8c:	e320f000 	nop	{0}
}
   15a90:	e24bd004 	sub	sp, fp, #4
   15a94:	e8bd8800 	pop	{fp, pc}

00015a98 <sel4_valid_size_bits>:

#define SEL4_NUM_PAGE_SIZES ((int) ARRAY_SIZE(sel4_page_sizes))

static inline bool
sel4_valid_size_bits(size_t size_bits)
{
   15a98:	e92d4800 	push	{fp, lr}
   15a9c:	e28db004 	add	fp, sp, #4
   15aa0:	e24dd010 	sub	sp, sp, #16
   15aa4:	e50b0010 	str	r0, [fp, #-16]
    for (int i = 0; i < SEL4_NUM_PAGE_SIZES && size_bits >= sel4_page_sizes[i]; i++) {
   15aa8:	e3a03000 	mov	r3, #0
   15aac:	e50b3008 	str	r3, [fp, #-8]
   15ab0:	ea000021 	b	15b3c <sel4_valid_size_bits+0xa4>
        /* sanity check, sel4_page_sizes should be ordered */
        if (i > 0) {
   15ab4:	e51b3008 	ldr	r3, [fp, #-8]
   15ab8:	e3530000 	cmp	r3, #0
   15abc:	da000012 	ble	15b0c <sel4_valid_size_bits+0x74>
            assert(sel4_page_sizes[i - 1] < sel4_page_sizes[i]);
   15ac0:	e51b3008 	ldr	r3, [fp, #-8]
   15ac4:	e2432001 	sub	r2, r3, #1
   15ac8:	e308319c 	movw	r3, #33180	; 0x819c
   15acc:	e3403002 	movt	r3, #2
   15ad0:	e7932102 	ldr	r2, [r3, r2, lsl #2]
   15ad4:	e308319c 	movw	r3, #33180	; 0x819c
   15ad8:	e3403002 	movt	r3, #2
   15adc:	e51b1008 	ldr	r1, [fp, #-8]
   15ae0:	e7933101 	ldr	r3, [r3, r1, lsl #2]
   15ae4:	e1520003 	cmp	r2, r3
   15ae8:	3a000007 	bcc	15b0c <sel4_valid_size_bits+0x74>
   15aec:	e308354c 	movw	r3, #34124	; 0x854c
   15af0:	e3403002 	movt	r3, #2
   15af4:	e3a02017 	mov	r2, #23
   15af8:	e30811ac 	movw	r1, #33196	; 0x81ac
   15afc:	e3401002 	movt	r1, #2
   15b00:	e3080210 	movw	r0, #33296	; 0x8210
   15b04:	e3400002 	movt	r0, #2
   15b08:	eb002297 	bl	1e56c <__assert_fail>
        }
        if (size_bits == sel4_page_sizes[i]) {
   15b0c:	e308319c 	movw	r3, #33180	; 0x819c
   15b10:	e3403002 	movt	r3, #2
   15b14:	e51b2008 	ldr	r2, [fp, #-8]
   15b18:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   15b1c:	e51b2010 	ldr	r2, [fp, #-16]
   15b20:	e1520003 	cmp	r2, r3
   15b24:	1a000001 	bne	15b30 <sel4_valid_size_bits+0x98>
            return true;
   15b28:	e3a03001 	mov	r3, #1
   15b2c:	ea00000d 	b	15b68 <sel4_valid_size_bits+0xd0>
    for (int i = 0; i < SEL4_NUM_PAGE_SIZES && size_bits >= sel4_page_sizes[i]; i++) {
   15b30:	e51b3008 	ldr	r3, [fp, #-8]
   15b34:	e2833001 	add	r3, r3, #1
   15b38:	e50b3008 	str	r3, [fp, #-8]
   15b3c:	e51b3008 	ldr	r3, [fp, #-8]
   15b40:	e3530003 	cmp	r3, #3
   15b44:	ca000006 	bgt	15b64 <sel4_valid_size_bits+0xcc>
   15b48:	e308319c 	movw	r3, #33180	; 0x819c
   15b4c:	e3403002 	movt	r3, #2
   15b50:	e51b2008 	ldr	r2, [fp, #-8]
   15b54:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   15b58:	e51b2010 	ldr	r2, [fp, #-16]
   15b5c:	e1520003 	cmp	r2, r3
   15b60:	2affffd3 	bcs	15ab4 <sel4_valid_size_bits+0x1c>
        }
    }

    return false;
   15b64:	e3a03000 	mov	r3, #0
}
   15b68:	e1a00003 	mov	r0, r3
   15b6c:	e24bd004 	sub	sp, fp, #4
   15b70:	e8bd8800 	pop	{fp, pc}

00015b74 <vspace_map_pages>:
 *         NULL on failure.
 */
static inline void *vspace_map_pages(vspace_t *vspace, seL4_CPtr caps[], uintptr_t cookies[],
                                     seL4_CapRights_t rights, size_t num_pages, size_t size_bits,
                                     int cacheable)
{
   15b74:	e92d4810 	push	{r4, fp, lr}
   15b78:	e28db008 	add	fp, sp, #8
   15b7c:	e24dd024 	sub	sp, sp, #36	; 0x24
   15b80:	e50b0010 	str	r0, [fp, #-16]
   15b84:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   15b88:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   15b8c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    if (vspace == NULL) {
   15b90:	e51b3010 	ldr	r3, [fp, #-16]
   15b94:	e3530000 	cmp	r3, #0
   15b98:	1a000012 	bne	15be8 <vspace_map_pages+0x74>
        ZF_LOGE("vspace is NULL.");
   15b9c:	e3083104 	movw	r3, #33028	; 0x8104
   15ba0:	e3403004 	movt	r3, #4
   15ba4:	e5933000 	ldr	r3, [r3]
   15ba8:	e3530005 	cmp	r3, #5
   15bac:	ca00000b 	bgt	15be0 <vspace_map_pages+0x6c>
   15bb0:	e30832a4 	movw	r3, #33444	; 0x82a4
   15bb4:	e3403002 	movt	r3, #2
   15bb8:	e58d3004 	str	r3, [sp, #4]
   15bbc:	e3a03000 	mov	r3, #0
   15bc0:	e58d3000 	str	r3, [sp]
   15bc4:	e3a03005 	mov	r3, #5
   15bc8:	e300222a 	movw	r2, #554	; 0x22a
   15bcc:	e308123c 	movw	r1, #33340	; 0x823c
   15bd0:	e3401002 	movt	r1, #2
   15bd4:	e3080538 	movw	r0, #34104	; 0x8538
   15bd8:	e3400002 	movt	r0, #2
   15bdc:	eb0020e9 	bl	1df88 <_zf_log_write_d>
        return NULL;
   15be0:	e3a03000 	mov	r3, #0
   15be4:	ea000056 	b	15d44 <vspace_map_pages+0x1d0>
    }
    if (vspace->new_pages == NULL) {
   15be8:	e51b3010 	ldr	r3, [fp, #-16]
   15bec:	e5933004 	ldr	r3, [r3, #4]
   15bf0:	e3530000 	cmp	r3, #0
   15bf4:	1a000012 	bne	15c44 <vspace_map_pages+0xd0>
        ZF_LOGE("Supplied vspace doesn't implement map_pages().");
   15bf8:	e3083104 	movw	r3, #33028	; 0x8104
   15bfc:	e3403004 	movt	r3, #4
   15c00:	e5933000 	ldr	r3, [r3]
   15c04:	e3530005 	cmp	r3, #5
   15c08:	ca00000b 	bgt	15c3c <vspace_map_pages+0xc8>
   15c0c:	e30832b4 	movw	r3, #33460	; 0x82b4
   15c10:	e3403002 	movt	r3, #2
   15c14:	e58d3004 	str	r3, [sp, #4]
   15c18:	e3a03000 	mov	r3, #0
   15c1c:	e58d3000 	str	r3, [sp]
   15c20:	e3a03005 	mov	r3, #5
   15c24:	e300222e 	movw	r2, #558	; 0x22e
   15c28:	e308123c 	movw	r1, #33340	; 0x823c
   15c2c:	e3401002 	movt	r1, #2
   15c30:	e3080538 	movw	r0, #34104	; 0x8538
   15c34:	e3400002 	movt	r0, #2
   15c38:	eb0020d2 	bl	1df88 <_zf_log_write_d>
        return NULL;
   15c3c:	e3a03000 	mov	r3, #0
   15c40:	ea00003f 	b	15d44 <vspace_map_pages+0x1d0>
    }
    if (num_pages == 0) {
   15c44:	e59b3004 	ldr	r3, [fp, #4]
   15c48:	e3530000 	cmp	r3, #0
   15c4c:	1a000012 	bne	15c9c <vspace_map_pages+0x128>
        ZF_LOGE("Called with num_pages == 0. Intentional?");
   15c50:	e3083104 	movw	r3, #33028	; 0x8104
   15c54:	e3403004 	movt	r3, #4
   15c58:	e5933000 	ldr	r3, [r3]
   15c5c:	e3530005 	cmp	r3, #5
   15c60:	ca00000b 	bgt	15c94 <vspace_map_pages+0x120>
   15c64:	e30832e4 	movw	r3, #33508	; 0x82e4
   15c68:	e3403002 	movt	r3, #2
   15c6c:	e58d3004 	str	r3, [sp, #4]
   15c70:	e3a03000 	mov	r3, #0
   15c74:	e58d3000 	str	r3, [sp]
   15c78:	e3a03005 	mov	r3, #5
   15c7c:	e3002232 	movw	r2, #562	; 0x232
   15c80:	e308123c 	movw	r1, #33340	; 0x823c
   15c84:	e3401002 	movt	r1, #2
   15c88:	e3080538 	movw	r0, #34104	; 0x8538
   15c8c:	e3400002 	movt	r0, #2
   15c90:	eb0020bc 	bl	1df88 <_zf_log_write_d>
        return NULL;
   15c94:	e3a03000 	mov	r3, #0
   15c98:	ea000029 	b	15d44 <vspace_map_pages+0x1d0>
    }
    if (!sel4_valid_size_bits(size_bits)) {
   15c9c:	e59b0008 	ldr	r0, [fp, #8]
   15ca0:	ebffff7c 	bl	15a98 <sel4_valid_size_bits>
   15ca4:	e1a03000 	mov	r3, r0
   15ca8:	e2233001 	eor	r3, r3, #1
   15cac:	e6ef3073 	uxtb	r3, r3
   15cb0:	e3530000 	cmp	r3, #0
   15cb4:	0a000014 	beq	15d0c <vspace_map_pages+0x198>
        ZF_LOGE("Invalid size_bits %zu", size_bits);
   15cb8:	e3083104 	movw	r3, #33028	; 0x8104
   15cbc:	e3403004 	movt	r3, #4
   15cc0:	e5933000 	ldr	r3, [r3]
   15cc4:	e3530005 	cmp	r3, #5
   15cc8:	ca00000d 	bgt	15d04 <vspace_map_pages+0x190>
   15ccc:	e59b3008 	ldr	r3, [fp, #8]
   15cd0:	e58d3008 	str	r3, [sp, #8]
   15cd4:	e3083310 	movw	r3, #33552	; 0x8310
   15cd8:	e3403002 	movt	r3, #2
   15cdc:	e58d3004 	str	r3, [sp, #4]
   15ce0:	e3a03000 	mov	r3, #0
   15ce4:	e58d3000 	str	r3, [sp]
   15ce8:	e3a03005 	mov	r3, #5
   15cec:	e3002236 	movw	r2, #566	; 0x236
   15cf0:	e308123c 	movw	r1, #33340	; 0x823c
   15cf4:	e3401002 	movt	r1, #2
   15cf8:	e3080538 	movw	r0, #34104	; 0x8538
   15cfc:	e3400002 	movt	r0, #2
   15d00:	eb0020a0 	bl	1df88 <_zf_log_write_d>
        return NULL;
   15d04:	e3a03000 	mov	r3, #0
   15d08:	ea00000d 	b	15d44 <vspace_map_pages+0x1d0>
    }

    return vspace->map_pages(vspace, caps, cookies, rights,
   15d0c:	e51b3010 	ldr	r3, [fp, #-16]
   15d10:	e5934008 	ldr	r4, [r3, #8]
   15d14:	e59b300c 	ldr	r3, [fp, #12]
   15d18:	e58d3008 	str	r3, [sp, #8]
   15d1c:	e59b3008 	ldr	r3, [fp, #8]
   15d20:	e58d3004 	str	r3, [sp, #4]
   15d24:	e59b3004 	ldr	r3, [fp, #4]
   15d28:	e58d3000 	str	r3, [sp]
   15d2c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   15d30:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d34:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   15d38:	e51b0010 	ldr	r0, [fp, #-16]
   15d3c:	e12fff34 	blx	r4
   15d40:	e1a03000 	mov	r3, r0
                             num_pages, size_bits, cacheable);
}
   15d44:	e1a00003 	mov	r0, r3
   15d48:	e24bd008 	sub	sp, fp, #8
   15d4c:	e8bd8810 	pop	{r4, fp, pc}

00015d50 <vka_cnode_delete>:
               /* rights */        rights
           );
}

static inline int vka_cnode_delete(const cspacepath_t *src)
{
   15d50:	e92d4800 	push	{fp, lr}
   15d54:	e28db004 	add	fp, sp, #4
   15d58:	e24dd008 	sub	sp, sp, #8
   15d5c:	e50b0008 	str	r0, [fp, #-8]
    return seL4_CNode_Delete(
   15d60:	e51b3008 	ldr	r3, [fp, #-8]
   15d64:	e5930008 	ldr	r0, [r3, #8]
   15d68:	e51b3008 	ldr	r3, [fp, #-8]
   15d6c:	e5931000 	ldr	r1, [r3]
               /* _service */      src->root,
               /* index */         src->capPtr,
               /* depth */         src->capDepth
   15d70:	e51b3008 	ldr	r3, [fp, #-8]
   15d74:	e5933004 	ldr	r3, [r3, #4]
    return seL4_CNode_Delete(
   15d78:	e6ef3073 	uxtb	r3, r3
   15d7c:	e1a02003 	mov	r2, r3
   15d80:	ebfffe51 	bl	156cc <seL4_CNode_Delete>
   15d84:	e1a03000 	mov	r3, r0
           );
}
   15d88:	e1a00003 	mov	r0, r3
   15d8c:	e24bd004 	sub	sp, fp, #4
   15d90:	e8bd8800 	pop	{fp, pc}

00015d94 <platsupport_alloc_device_vaddr>:
#endif

/* completely hacky way of getting a virtual address. This is used a last ditch attempt to
 * get serial device going so we can print out an error */
static seL4_Word platsupport_alloc_device_vaddr(seL4_Word bits)
{
   15d94:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   15d98:	e28db000 	add	fp, sp, #0
   15d9c:	e24dd014 	sub	sp, sp, #20
   15da0:	e50b0010 	str	r0, [fp, #-16]
    seL4_Word va;

    va = DITE_HEADER_START - (BIT(bits));
   15da4:	e3003000 	movw	r3, #0
   15da8:	e3403001 	movt	r3, #1
   15dac:	e2432a01 	sub	r2, r3, #4096	; 0x1000
   15db0:	e3a01001 	mov	r1, #1
   15db4:	e51b3010 	ldr	r3, [fp, #-16]
   15db8:	e1a03311 	lsl	r3, r1, r3
   15dbc:	e0423003 	sub	r3, r2, r3
   15dc0:	e50b3008 	str	r3, [fp, #-8]

    /* Ensure we are aligned to bits. If not, round down. */
    va = va & ~((BIT(bits)) - 1);
   15dc4:	e3a02001 	mov	r2, #1
   15dc8:	e51b3010 	ldr	r3, [fp, #-16]
   15dcc:	e1a03312 	lsl	r3, r2, r3
   15dd0:	e2633000 	rsb	r3, r3, #0
   15dd4:	e51b2008 	ldr	r2, [fp, #-8]
   15dd8:	e0033002 	and	r3, r3, r2
   15ddc:	e50b3008 	str	r3, [fp, #-8]

    return va;
   15de0:	e51b3008 	ldr	r3, [fp, #-8]
}
   15de4:	e1a00003 	mov	r0, r3
   15de8:	e28bd000 	add	sp, fp, #0
   15dec:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   15df0:	e12fff1e 	bx	lr

00015df4 <__map_device_page_failsafe>:

static void *__map_device_page_failsafe(void *cookie UNUSED, uintptr_t paddr, size_t size,
                                        int cached UNUSED, ps_mem_flags_t flags UNUSED)
{
   15df4:	e92d4810 	push	{r4, fp, lr}
   15df8:	e28db008 	add	fp, sp, #8
   15dfc:	e24dd03c 	sub	sp, sp, #60	; 0x3c
   15e00:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
   15e04:	e50b1034 	str	r1, [fp, #-52]	; 0xffffffcc
   15e08:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
   15e0c:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    int bits = CTZ(size);
   15e10:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   15e14:	e6ff3f33 	rbit	r3, r3
   15e18:	e16f3f13 	clz	r3, r3
   15e1c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    int error;
    seL4_Word vaddr = 0;
   15e20:	e3a03000 	mov	r3, #0
   15e24:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    vka_object_t dest;

    if (device_cap != 0) {
   15e28:	e3083100 	movw	r3, #33024	; 0x8100
   15e2c:	e3403004 	movt	r3, #4
   15e30:	e5933000 	ldr	r3, [r3]
   15e34:	e3530000 	cmp	r3, #0
   15e38:	0a000000 	beq	15e40 <__map_device_page_failsafe+0x4c>
        /* we only support a single page for the serial */
        for (;;);
   15e3c:	eafffffe 	b	15e3c <__map_device_page_failsafe+0x48>
    }

    error = sel4platsupport_alloc_frame_at(vka, paddr, bits, &dest);
   15e40:	e3083084 	movw	r3, #32900	; 0x8084
   15e44:	e3403004 	movt	r3, #4
   15e48:	e5930000 	ldr	r0, [r3]
   15e4c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e50:	e24b3028 	sub	r3, fp, #40	; 0x28
   15e54:	e51b1034 	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e58:	eb00087b 	bl	1804c <sel4platsupport_alloc_frame_at>
   15e5c:	e1a03000 	mov	r3, r0
   15e60:	e50b3010 	str	r3, [fp, #-16]
    if (error != seL4_NoError) {
   15e64:	e51b3010 	ldr	r3, [fp, #-16]
   15e68:	e3530000 	cmp	r3, #0
   15e6c:	1a000019 	bne	15ed8 <__map_device_page_failsafe+0xe4>
        goto error;
    }
    device_cap = dest.cptr;
   15e70:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e74:	e3083100 	movw	r3, #33024	; 0x8100
   15e78:	e3403004 	movt	r3, #4
   15e7c:	e5832000 	str	r2, [r3]

    vaddr = platsupport_alloc_device_vaddr(bits);
   15e80:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e84:	e1a00003 	mov	r0, r3
   15e88:	ebffffc1 	bl	15d94 <platsupport_alloc_device_vaddr>
   15e8c:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
    error =
        seL4_ARCH_Page_Map(
   15e90:	e3083100 	movw	r3, #33024	; 0x8100
   15e94:	e3403004 	movt	r3, #4
   15e98:	e5934000 	ldr	r4, [r3]
   15e9c:	e3a03001 	mov	r3, #1
   15ea0:	e3a02001 	mov	r2, #1
   15ea4:	e3a01001 	mov	r1, #1
   15ea8:	e3a00001 	mov	r0, #1
   15eac:	ebfffc05 	bl	14ec8 <seL4_CapRights_new>
   15eb0:	e1a03000 	mov	r3, r0
   15eb4:	e3a02000 	mov	r2, #0
   15eb8:	e58d2000 	str	r2, [sp]
   15ebc:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   15ec0:	e3a01003 	mov	r1, #3
   15ec4:	e1a00004 	mov	r0, r4
   15ec8:	ebfffd87 	bl	154ec <seL4_ARM_Page_Map>
   15ecc:	e1a03000 	mov	r3, r0
    error =
   15ed0:	e50b3010 	str	r3, [fp, #-16]
   15ed4:	ea000000 	b	15edc <__map_device_page_failsafe+0xe8>
        goto error;
   15ed8:	e320f000 	nop	{0}
            seL4_AllRights,
            0
        );

error:
    if (error)
   15edc:	e51b3010 	ldr	r3, [fp, #-16]
   15ee0:	e3530000 	cmp	r3, #0
   15ee4:	0a000000 	beq	15eec <__map_device_page_failsafe+0xf8>
        for (;;);
   15ee8:	eafffffe 	b	15ee8 <__map_device_page_failsafe+0xf4>

    assert(!error);
   15eec:	e51b3010 	ldr	r3, [fp, #-16]
   15ef0:	e3530000 	cmp	r3, #0
   15ef4:	0a000007 	beq	15f18 <__map_device_page_failsafe+0x124>
   15ef8:	e30834d4 	movw	r3, #34004	; 0x84d4
   15efc:	e3403002 	movt	r3, #2
   15f00:	e3a02077 	mov	r2, #119	; 0x77
   15f04:	e3081328 	movw	r1, #33576	; 0x8328
   15f08:	e3401002 	movt	r1, #2
   15f0c:	e3080388 	movw	r0, #33672	; 0x8388
   15f10:	e3400002 	movt	r0, #2
   15f14:	eb002194 	bl	1e56c <__assert_fail>

    return (void *)vaddr;
   15f18:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   15f1c:	e1a00003 	mov	r0, r3
   15f20:	e24bd008 	sub	sp, fp, #8
   15f24:	e8bd8810 	pop	{r4, fp, pc}

00015f28 <__map_device_page_regular>:

static void *__map_device_page_regular(void *cookie UNUSED, uintptr_t paddr, size_t size,
                                       int cached UNUSED, ps_mem_flags_t flags UNUSED)
{
   15f28:	e92d4810 	push	{r4, fp, lr}
   15f2c:	e28db008 	add	fp, sp, #8
   15f30:	e24dd044 	sub	sp, sp, #68	; 0x44
   15f34:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
   15f38:	e50b1034 	str	r1, [fp, #-52]	; 0xffffffcc
   15f3c:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
   15f40:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
    int bits = CTZ(size);
   15f44:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   15f48:	e6ff3f33 	rbit	r3, r3
   15f4c:	e16f3f13 	clz	r3, r3
   15f50:	e50b3010 	str	r3, [fp, #-16]
    void *vaddr;
    int error;
    vka_object_t dest;

    error = sel4platsupport_alloc_frame_at(vka, paddr, bits, &dest);
   15f54:	e3083084 	movw	r3, #32900	; 0x8084
   15f58:	e3403004 	movt	r3, #4
   15f5c:	e5930000 	ldr	r0, [r3]
   15f60:	e51b2010 	ldr	r2, [fp, #-16]
   15f64:	e24b3028 	sub	r3, fp, #40	; 0x28
   15f68:	e51b1034 	ldr	r1, [fp, #-52]	; 0xffffffcc
   15f6c:	eb000836 	bl	1804c <sel4platsupport_alloc_frame_at>
   15f70:	e1a03000 	mov	r3, r0
   15f74:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    if (error) {
   15f78:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   15f7c:	e3530000 	cmp	r3, #0
   15f80:	0a000018 	beq	15fe8 <__map_device_page_regular+0xc0>
        ZF_LOGF("Failed to get cap for serial device frame");
   15f84:	e3083104 	movw	r3, #33028	; 0x8104
   15f88:	e3403004 	movt	r3, #4
   15f8c:	e5933000 	ldr	r3, [r3]
   15f90:	e3530801 	cmp	r3, #65536	; 0x10000
   15f94:	aa00000b 	bge	15fc8 <__map_device_page_regular+0xa0>
   15f98:	e3083390 	movw	r3, #33680	; 0x8390
   15f9c:	e3403002 	movt	r3, #2
   15fa0:	e58d3004 	str	r3, [sp, #4]
   15fa4:	e3a03000 	mov	r3, #0
   15fa8:	e58d3000 	str	r3, [sp]
   15fac:	e30f3fff 	movw	r3, #65535	; 0xffff
   15fb0:	e3a02086 	mov	r2, #134	; 0x86
   15fb4:	e3081328 	movw	r1, #33576	; 0x8328
   15fb8:	e3401002 	movt	r1, #2
   15fbc:	e308051c 	movw	r0, #34076	; 0x851c
   15fc0:	e3400002 	movt	r0, #2
   15fc4:	eb001fef 	bl	1df88 <_zf_log_write_d>
   15fc8:	e308351c 	movw	r3, #34076	; 0x851c
   15fcc:	e3403002 	movt	r3, #2
   15fd0:	e3a02086 	mov	r2, #134	; 0x86
   15fd4:	e3081328 	movw	r1, #33576	; 0x8328
   15fd8:	e3401002 	movt	r1, #2
   15fdc:	e3080128 	movw	r0, #33064	; 0x8128
   15fe0:	e3400002 	movt	r0, #2
   15fe4:	eb002160 	bl	1e56c <__assert_fail>
    }

    vaddr = vspace_map_pages(vspace, &dest.cptr, NULL, seL4_AllRights, 1, bits, 0);
   15fe8:	e308307c 	movw	r3, #32892	; 0x807c
   15fec:	e3403004 	movt	r3, #4
   15ff0:	e5934000 	ldr	r4, [r3]
   15ff4:	e3a03001 	mov	r3, #1
   15ff8:	e3a02001 	mov	r2, #1
   15ffc:	e3a01001 	mov	r1, #1
   16000:	e3a00001 	mov	r0, #1
   16004:	ebfffbaf 	bl	14ec8 <seL4_CapRights_new>
   16008:	e1a02000 	mov	r2, r0
   1600c:	e51b3010 	ldr	r3, [fp, #-16]
   16010:	e24b1028 	sub	r1, fp, #40	; 0x28
   16014:	e3a00000 	mov	r0, #0
   16018:	e58d0008 	str	r0, [sp, #8]
   1601c:	e58d3004 	str	r3, [sp, #4]
   16020:	e3a03001 	mov	r3, #1
   16024:	e58d3000 	str	r3, [sp]
   16028:	e1a03002 	mov	r3, r2
   1602c:	e3a02000 	mov	r2, #0
   16030:	e1a00004 	mov	r0, r4
   16034:	ebfffece 	bl	15b74 <vspace_map_pages>
   16038:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    if (!vaddr) {
   1603c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   16040:	e3530000 	cmp	r3, #0
   16044:	1a000018 	bne	160ac <__map_device_page_regular+0x184>
        ZF_LOGF("Failed to map serial device :(\n");
   16048:	e3083104 	movw	r3, #33028	; 0x8104
   1604c:	e3403004 	movt	r3, #4
   16050:	e5933000 	ldr	r3, [r3]
   16054:	e3530801 	cmp	r3, #65536	; 0x10000
   16058:	aa00000b 	bge	1608c <__map_device_page_regular+0x164>
   1605c:	e30833bc 	movw	r3, #33724	; 0x83bc
   16060:	e3403002 	movt	r3, #2
   16064:	e58d3004 	str	r3, [sp, #4]
   16068:	e3a03000 	mov	r3, #0
   1606c:	e58d3000 	str	r3, [sp]
   16070:	e30f3fff 	movw	r3, #65535	; 0xffff
   16074:	e3a0208b 	mov	r2, #139	; 0x8b
   16078:	e3081328 	movw	r1, #33576	; 0x8328
   1607c:	e3401002 	movt	r1, #2
   16080:	e308051c 	movw	r0, #34076	; 0x851c
   16084:	e3400002 	movt	r0, #2
   16088:	eb001fbe 	bl	1df88 <_zf_log_write_d>
   1608c:	e308351c 	movw	r3, #34076	; 0x851c
   16090:	e3403002 	movt	r3, #2
   16094:	e3a0208b 	mov	r2, #139	; 0x8b
   16098:	e3081328 	movw	r1, #33576	; 0x8328
   1609c:	e3401002 	movt	r1, #2
   160a0:	e3080128 	movw	r0, #33064	; 0x8128
   160a4:	e3400002 	movt	r0, #2
   160a8:	eb00212f 	bl	1e56c <__assert_fail>
        for (;;);
    }
    device_cap = dest.cptr;
   160ac:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   160b0:	e3083100 	movw	r3, #33024	; 0x8100
   160b4:	e3403004 	movt	r3, #4
   160b8:	e5832000 	str	r2, [r3]

    return (void *)vaddr;
   160bc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
}
   160c0:	e1a00003 	mov	r0, r3
   160c4:	e24bd008 	sub	sp, fp, #8
   160c8:	e8bd8810 	pop	{r4, fp, pc}

000160cc <__map_device_page>:

void *__map_device_page(void *cookie, uintptr_t paddr, size_t size,
                        int cached, ps_mem_flags_t flags)
{
   160cc:	e92d4800 	push	{fp, lr}
   160d0:	e28db004 	add	fp, sp, #4
   160d4:	e24dd018 	sub	sp, sp, #24
   160d8:	e50b0008 	str	r0, [fp, #-8]
   160dc:	e50b100c 	str	r1, [fp, #-12]
   160e0:	e50b2010 	str	r2, [fp, #-16]
   160e4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    if (setup_status == START_REGULAR_SETUP && vspace) {
   160e8:	e3083078 	movw	r3, #32888	; 0x8078
   160ec:	e3403004 	movt	r3, #4
   160f0:	e5933000 	ldr	r3, [r3]
   160f4:	e3530001 	cmp	r3, #1
   160f8:	1a00000d 	bne	16134 <__map_device_page+0x68>
   160fc:	e308307c 	movw	r3, #32892	; 0x807c
   16100:	e3403004 	movt	r3, #4
   16104:	e5933000 	ldr	r3, [r3]
   16108:	e3530000 	cmp	r3, #0
   1610c:	0a000008 	beq	16134 <__map_device_page+0x68>
        return __map_device_page_regular(cookie, paddr, size, cached, flags);
   16110:	e59b3004 	ldr	r3, [fp, #4]
   16114:	e58d3000 	str	r3, [sp]
   16118:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1611c:	e51b2010 	ldr	r2, [fp, #-16]
   16120:	e51b100c 	ldr	r1, [fp, #-12]
   16124:	e51b0008 	ldr	r0, [fp, #-8]
   16128:	ebffff7e 	bl	15f28 <__map_device_page_regular>
   1612c:	e1a03000 	mov	r3, r0
   16130:	ea000016 	b	16190 <__map_device_page+0xc4>
    } else if (setup_status == START_FAILSAFE_SETUP || !vspace) {
   16134:	e3083078 	movw	r3, #32888	; 0x8078
   16138:	e3403004 	movt	r3, #4
   1613c:	e5933000 	ldr	r3, [r3]
   16140:	e3530002 	cmp	r3, #2
   16144:	0a000004 	beq	1615c <__map_device_page+0x90>
   16148:	e308307c 	movw	r3, #32892	; 0x807c
   1614c:	e3403004 	movt	r3, #4
   16150:	e5933000 	ldr	r3, [r3]
   16154:	e3530000 	cmp	r3, #0
   16158:	1a000008 	bne	16180 <__map_device_page+0xb4>
        return __map_device_page_failsafe(cookie, paddr, size, cached, flags);
   1615c:	e59b3004 	ldr	r3, [fp, #4]
   16160:	e58d3000 	str	r3, [sp]
   16164:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   16168:	e51b2010 	ldr	r2, [fp, #-16]
   1616c:	e51b100c 	ldr	r1, [fp, #-12]
   16170:	e51b0008 	ldr	r0, [fp, #-8]
   16174:	ebffff1e 	bl	15df4 <__map_device_page_failsafe>
   16178:	e1a03000 	mov	r3, r0
   1617c:	ea000003 	b	16190 <__map_device_page+0xc4>
    }
    printf("Unknown setup status!\n");
   16180:	e30803dc 	movw	r0, #33756	; 0x83dc
   16184:	e3400002 	movt	r0, #2
   16188:	eb0025ac 	bl	1f840 <puts>
    for (;;);
   1618c:	eafffffe 	b	1618c <__map_device_page+0xc0>
}
   16190:	e1a00003 	mov	r0, r3
   16194:	e24bd004 	sub	sp, fp, #4
   16198:	e8bd8800 	pop	{fp, pc}

0001619c <platsupport_undo_serial_setup>:
/*
 * This function is designed to be called when creating a new cspace/vspace,
 * and the serial port needs to be hooked in there too.
 */
void platsupport_undo_serial_setup(void)
{
   1619c:	e92d4800 	push	{fp, lr}
   161a0:	e28db004 	add	fp, sp, #4
   161a4:	e24dd020 	sub	sp, sp, #32
    /* Re-initialise some structures. */
    setup_status = NOT_INITIALIZED;
   161a8:	e3083078 	movw	r3, #32888	; 0x8078
   161ac:	e3403004 	movt	r3, #4
   161b0:	e3a02000 	mov	r2, #0
   161b4:	e5832000 	str	r2, [r3]
    if (device_cap) {
   161b8:	e3083100 	movw	r3, #33024	; 0x8100
   161bc:	e3403004 	movt	r3, #4
   161c0:	e5933000 	ldr	r3, [r3]
   161c4:	e3530000 	cmp	r3, #0
   161c8:	0a000021 	beq	16254 <platsupport_undo_serial_setup+0xb8>
        cspacepath_t path;
        seL4_ARCH_Page_Unmap(device_cap);
   161cc:	e3083100 	movw	r3, #33024	; 0x8100
   161d0:	e3403004 	movt	r3, #4
   161d4:	e5933000 	ldr	r3, [r3]
   161d8:	e1a00003 	mov	r0, r3
   161dc:	ebfffd01 	bl	155e8 <seL4_ARM_Page_Unmap>
        vka_cspace_make_path(vka, device_cap, &path);
   161e0:	e3083084 	movw	r3, #32900	; 0x8084
   161e4:	e3403004 	movt	r3, #4
   161e8:	e5930000 	ldr	r0, [r3]
   161ec:	e3083100 	movw	r3, #33024	; 0x8100
   161f0:	e3403004 	movt	r3, #4
   161f4:	e5933000 	ldr	r3, [r3]
   161f8:	e24b2020 	sub	r2, fp, #32
   161fc:	e1a01003 	mov	r1, r3
   16200:	ebfffd7b 	bl	157f4 <vka_cspace_make_path>
        vka_cnode_delete(&path);
   16204:	e24b3020 	sub	r3, fp, #32
   16208:	e1a00003 	mov	r0, r3
   1620c:	ebfffecf 	bl	15d50 <vka_cnode_delete>
        vka_cspace_free(vka, device_cap);
   16210:	e3083084 	movw	r3, #32900	; 0x8084
   16214:	e3403004 	movt	r3, #4
   16218:	e5932000 	ldr	r2, [r3]
   1621c:	e3083100 	movw	r3, #33024	; 0x8100
   16220:	e3403004 	movt	r3, #4
   16224:	e5933000 	ldr	r3, [r3]
   16228:	e1a01003 	mov	r1, r3
   1622c:	e1a00002 	mov	r0, r2
   16230:	ebfffdd4 	bl	15988 <vka_cspace_free>
        device_cap = 0;
   16234:	e3083100 	movw	r3, #33024	; 0x8100
   16238:	e3403004 	movt	r3, #4
   1623c:	e3a02000 	mov	r2, #0
   16240:	e5832000 	str	r2, [r3]
        vka = NULL;
   16244:	e3083084 	movw	r3, #32900	; 0x8084
   16248:	e3403004 	movt	r3, #4
   1624c:	e3a02000 	mov	r2, #0
   16250:	e5832000 	str	r2, [r3]
    }
}
   16254:	e320f000 	nop	{0}
   16258:	e24bd004 	sub	sp, fp, #4
   1625c:	e8bd8800 	pop	{fp, pc}

00016260 <platsupport_serial_input_init_IRQ>:

/* Initialise serial input interrupt. */
void platsupport_serial_input_init_IRQ(void)
{
   16260:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   16264:	e28db000 	add	fp, sp, #0
}
   16268:	e320f000 	nop	{0}
   1626c:	e28bd000 	add	sp, fp, #0
   16270:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   16274:	e12fff1e 	bx	lr

00016278 <platsupport_serial_setup_io_ops>:

int platsupport_serial_setup_io_ops(ps_io_ops_t *io_ops)
{
   16278:	e92d4800 	push	{fp, lr}
   1627c:	e28db004 	add	fp, sp, #4
   16280:	e24dd010 	sub	sp, sp, #16
   16284:	e50b0010 	str	r0, [fp, #-16]
    int err = 0;
   16288:	e3a03000 	mov	r3, #0
   1628c:	e50b3008 	str	r3, [fp, #-8]
    if (setup_status == SETUP_COMPLETE) {
   16290:	e3083078 	movw	r3, #32888	; 0x8078
   16294:	e3403004 	movt	r3, #4
   16298:	e5933000 	ldr	r3, [r3]
   1629c:	e3530003 	cmp	r3, #3
   162a0:	1a000001 	bne	162ac <platsupport_serial_setup_io_ops+0x34>
        return 0;
   162a4:	e3a03000 	mov	r3, #0
   162a8:	ea00000a 	b	162d8 <platsupport_serial_setup_io_ops+0x60>
    }
    err = __plat_serial_init(io_ops);
   162ac:	e51b0010 	ldr	r0, [fp, #-16]
   162b0:	eb00087c 	bl	184a8 <__plat_serial_init>
   162b4:	e50b0008 	str	r0, [fp, #-8]
    if (!err) {
   162b8:	e51b3008 	ldr	r3, [fp, #-8]
   162bc:	e3530000 	cmp	r3, #0
   162c0:	1a000003 	bne	162d4 <platsupport_serial_setup_io_ops+0x5c>
        setup_status = SETUP_COMPLETE;
   162c4:	e3083078 	movw	r3, #32888	; 0x8078
   162c8:	e3403004 	movt	r3, #4
   162cc:	e3a02003 	mov	r2, #3
   162d0:	e5832000 	str	r2, [r3]
    }
    return err;
   162d4:	e51b3008 	ldr	r3, [fp, #-8]
}
   162d8:	e1a00003 	mov	r0, r3
   162dc:	e24bd004 	sub	sp, fp, #4
   162e0:	e8bd8800 	pop	{fp, pc}

000162e4 <platsupport_serial_setup_bootinfo_failsafe>:

int platsupport_serial_setup_bootinfo_failsafe(void)
{
   162e4:	e92d4800 	push	{fp, lr}
   162e8:	e28db004 	add	fp, sp, #4
   162ec:	e24dd008 	sub	sp, sp, #8
    int err = 0;
   162f0:	e3a03000 	mov	r3, #0
   162f4:	e50b3008 	str	r3, [fp, #-8]
    if (setup_status == SETUP_COMPLETE) {
   162f8:	e3083078 	movw	r3, #32888	; 0x8078
   162fc:	e3403004 	movt	r3, #4
   16300:	e5933000 	ldr	r3, [r3]
   16304:	e3530003 	cmp	r3, #3
   16308:	1a000001 	bne	16314 <platsupport_serial_setup_bootinfo_failsafe+0x30>
        return 0;
   1630c:	e3a03000 	mov	r3, #0
   16310:	ea00000e 	b	16350 <platsupport_serial_setup_bootinfo_failsafe+0x6c>
    }
    memset(&_simple_mem, 0, sizeof(simple_t));
   16314:	e3a02054 	mov	r2, #84	; 0x54
   16318:	e3a01000 	mov	r1, #0
   1631c:	e3080088 	movw	r0, #32904	; 0x8088
   16320:	e3400004 	movt	r0, #4
   16324:	eb002e73 	bl	21cf8 <memset>
    memset(&_vka_mem, 0, sizeof(vka_t));
   16328:	e3a02024 	mov	r2, #36	; 0x24
   1632c:	e3a01000 	mov	r1, #0
   16330:	e30800dc 	movw	r0, #32988	; 0x80dc
   16334:	e3400004 	movt	r0, #4
   16338:	eb002e6e 	bl	21cf8 <memset>
#if defined(CONFIG_LIB_SEL4_PLAT_SUPPORT_USE_SEL4_DEBUG_PUTCHAR) && defined(CONFIG_DEBUG_BUILD)
    /* only support putchar on a debug kernel */
    setup_status = SETUP_COMPLETE;
   1633c:	e3083078 	movw	r3, #32888	; 0x8078
   16340:	e3403004 	movt	r3, #4
   16344:	e3a02003 	mov	r2, #3
   16348:	e5832000 	str	r2, [r3]
#ifdef CONFIG_ARCH_X86
    sel4platsupport_get_io_port_ops(&io_ops.io_port_ops, simple, vka);
#endif
    err = platsupport_serial_setup_io_ops(&io_ops);
#endif
    return err;
   1634c:	e51b3008 	ldr	r3, [fp, #-8]
}
   16350:	e1a00003 	mov	r0, r3
   16354:	e24bd004 	sub	sp, fp, #4
   16358:	e8bd8800 	pop	{fp, pc}

0001635c <platsupport_serial_setup_simple>:

int platsupport_serial_setup_simple(
    vspace_t *_vspace __attribute__((unused)),
    simple_t *_simple __attribute__((unused)),
    vka_t *_vka __attribute__((unused)))
{
   1635c:	e92d4800 	push	{fp, lr}
   16360:	e28db004 	add	fp, sp, #4
   16364:	e24dd018 	sub	sp, sp, #24
   16368:	e50b0010 	str	r0, [fp, #-16]
   1636c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   16370:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    int err = 0;
   16374:	e3a03000 	mov	r3, #0
   16378:	e50b3008 	str	r3, [fp, #-8]
    if (setup_status == SETUP_COMPLETE) {
   1637c:	e3083078 	movw	r3, #32888	; 0x8078
   16380:	e3403004 	movt	r3, #4
   16384:	e5933000 	ldr	r3, [r3]
   16388:	e3530003 	cmp	r3, #3
   1638c:	1a000001 	bne	16398 <platsupport_serial_setup_simple+0x3c>
        return 0;
   16390:	e3a03000 	mov	r3, #0
   16394:	ea000018 	b	163fc <platsupport_serial_setup_simple+0xa0>
    }
    if (setup_status != NOT_INITIALIZED) {
   16398:	e3083078 	movw	r3, #32888	; 0x8078
   1639c:	e3403004 	movt	r3, #4
   163a0:	e5933000 	ldr	r3, [r3]
   163a4:	e3530000 	cmp	r3, #0
   163a8:	0a00000e 	beq	163e8 <platsupport_serial_setup_simple+0x8c>
        printf("Trying to initialise a partially initialised serial. Current setup status is %d\n", setup_status);
   163ac:	e3083078 	movw	r3, #32888	; 0x8078
   163b0:	e3403004 	movt	r3, #4
   163b4:	e5933000 	ldr	r3, [r3]
   163b8:	e1a01003 	mov	r1, r3
   163bc:	e30803f4 	movw	r0, #33780	; 0x83f4
   163c0:	e3400002 	movt	r0, #2
   163c4:	eb002510 	bl	1f80c <printf>
        assert(!"You cannot recover");
   163c8:	e308358c 	movw	r3, #34188	; 0x858c
   163cc:	e3403002 	movt	r3, #2
   163d0:	e3a020e8 	mov	r2, #232	; 0xe8
   163d4:	e3081328 	movw	r1, #33576	; 0x8328
   163d8:	e3401002 	movt	r1, #2
   163dc:	e3080448 	movw	r0, #33864	; 0x8448
   163e0:	e3400002 	movt	r0, #2
   163e4:	eb002060 	bl	1e56c <__assert_fail>
        return -1;
    }
#if defined(CONFIG_LIB_SEL4_PLAT_SUPPORT_USE_SEL4_DEBUG_PUTCHAR) && defined(CONFIG_DEBUG_BUILD)
    /* only support putchar on a debug kernel */
    setup_status = SETUP_COMPLETE;
   163e8:	e3083078 	movw	r3, #32888	; 0x8078
   163ec:	e3403004 	movt	r3, #4
   163f0:	e3a02003 	mov	r2, #3
   163f4:	e5832000 	str	r2, [r3]
    /* done */
    vspace = NULL;
    simple = NULL;
    /* Don't reset vka here */
#endif
    return err;
   163f8:	e51b3008 	ldr	r3, [fp, #-8]
}
   163fc:	e1a00003 	mov	r0, r3
   16400:	e24bd004 	sub	sp, fp, #4
   16404:	e8bd8800 	pop	{fp, pc}

00016408 <__serial_setup>:

static void __serial_setup()
{
   16408:	e92d4800 	push	{fp, lr}
   1640c:	e28db004 	add	fp, sp, #4
   16410:	e24dd008 	sub	sp, sp, #8
    int started_regular __attribute__((unused)) = 0;
   16414:	e3a03000 	mov	r3, #0
   16418:	e50b3008 	str	r3, [fp, #-8]
    /* this function is called if we attempt to do serial and it isn't setup.
     * we now need to handle this somehow */
    switch (setup_status) {
   1641c:	e3083078 	movw	r3, #32888	; 0x8078
   16420:	e3403004 	movt	r3, #4
   16424:	e5933000 	ldr	r3, [r3]
   16428:	e3530003 	cmp	r3, #3
   1642c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   16430:	ea000014 	b	16488 <__serial_setup+0x80>
   16434:	00016450 	andeq	r6, r1, r0, asr r4
   16438:	00016448 	andeq	r6, r1, r8, asr #8
   1643c:	00016444 	andeq	r6, r1, r4, asr #8
   16440:	00016484 	andeq	r6, r1, r4, lsl #9
    case START_FAILSAFE_SETUP:
        /* we're stuck. */
        abort();
   16444:	eb00203e 	bl	1e544 <abort>
        break;
    case START_REGULAR_SETUP:
        started_regular = 1;
   16448:	e3a03001 	mov	r3, #1
   1644c:	e50b3008 	str	r3, [fp, #-8]
    case NOT_INITIALIZED:
#ifdef CONFIG_LIB_SEL4_PLAT_SUPPORT_USE_SEL4_DEBUG_PUTCHAR
        setup_status = SETUP_COMPLETE;
   16450:	e3083078 	movw	r3, #32888	; 0x8078
   16454:	e3403004 	movt	r3, #4
   16458:	e3a02003 	mov	r2, #3
   1645c:	e5832000 	str	r2, [r3]
        printf("\nWarning: using printf before serial is set up. This only works as your\n");
   16460:	e3080460 	movw	r0, #33888	; 0x8460
   16464:	e3400002 	movt	r0, #2
   16468:	eb0024f4 	bl	1f840 <puts>
        printf("printf is backed by seL4_Debug_PutChar()\n");
   1646c:	e30804a8 	movw	r0, #33960	; 0x84a8
   16470:	e3400002 	movt	r0, #2
   16474:	eb0024f1 	bl	1f840 <puts>
        started_regular = 1;
   16478:	e3a03001 	mov	r3, #1
   1647c:	e50b3008 	str	r3, [fp, #-8]
        } else {
            printf("You attempted to print before initialising the libsel4platsupport serial device!\n");
            while (1);
        }
#endif /* CONFIG_LIB_SEL4_PLAT_SUPPORT_USE_SEL4_DEBUG_PUTCHAR */
        break;
   16480:	ea000000 	b	16488 <__serial_setup+0x80>
    case SETUP_COMPLETE:
        break;
   16484:	e320f000 	nop	{0}
    }
}
   16488:	e320f000 	nop	{0}
   1648c:	e24bd004 	sub	sp, fp, #4
   16490:	e8bd8800 	pop	{fp, pc}

00016494 <__arch_putchar>:
void NO_INLINE
#ifdef CONFIG_LIB_SEL4_MUSLC_SYS_ARCH_PUTCHAR_WEAK
WEAK
#endif
__arch_putchar(int c)
{
   16494:	e92d4800 	push	{fp, lr}
   16498:	e28db004 	add	fp, sp, #4
   1649c:	e24dd008 	sub	sp, sp, #8
   164a0:	e50b0008 	str	r0, [fp, #-8]
    if (setup_status != SETUP_COMPLETE) {
   164a4:	e3083078 	movw	r3, #32888	; 0x8078
   164a8:	e3403004 	movt	r3, #4
   164ac:	e5933000 	ldr	r3, [r3]
   164b0:	e3530003 	cmp	r3, #3
   164b4:	0a000000 	beq	164bc <__arch_putchar+0x28>
        __serial_setup();
   164b8:	ebffffd2 	bl	16408 <__serial_setup>
    }
    __plat_putchar(c);
   164bc:	e51b0008 	ldr	r0, [fp, #-8]
   164c0:	eb000819 	bl	1852c <__plat_putchar>
}
   164c4:	e320f000 	nop	{0}
   164c8:	e24bd004 	sub	sp, fp, #4
   164cc:	e8bd8800 	pop	{fp, pc}

000164d0 <__arch_write>:
size_t NO_INLINE
#ifdef CONFIG_LIB_SEL4_MUSLC_SYS_ARCH_PUTCHAR_WEAK
WEAK
#endif
__arch_write(char *data, size_t count)
{
   164d0:	e92d4800 	push	{fp, lr}
   164d4:	e28db004 	add	fp, sp, #4
   164d8:	e24dd010 	sub	sp, sp, #16
   164dc:	e50b0010 	str	r0, [fp, #-16]
   164e0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
    for (size_t i = 0; i < count; i++) {
   164e4:	e3a03000 	mov	r3, #0
   164e8:	e50b3008 	str	r3, [fp, #-8]
   164ec:	ea000008 	b	16514 <__arch_write+0x44>
        __arch_putchar(data[i]);
   164f0:	e51b2010 	ldr	r2, [fp, #-16]
   164f4:	e51b3008 	ldr	r3, [fp, #-8]
   164f8:	e0823003 	add	r3, r2, r3
   164fc:	e5d33000 	ldrb	r3, [r3]
   16500:	e1a00003 	mov	r0, r3
   16504:	ebffffe2 	bl	16494 <__arch_putchar>
    for (size_t i = 0; i < count; i++) {
   16508:	e51b3008 	ldr	r3, [fp, #-8]
   1650c:	e2833001 	add	r3, r3, #1
   16510:	e50b3008 	str	r3, [fp, #-8]
   16514:	e51b2008 	ldr	r2, [fp, #-8]
   16518:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1651c:	e1520003 	cmp	r2, r3
   16520:	3afffff2 	bcc	164f0 <__arch_write+0x20>
    }
    return count;
   16524:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   16528:	e1a00003 	mov	r0, r3
   1652c:	e24bd004 	sub	sp, fp, #4
   16530:	e8bd8800 	pop	{fp, pc}

00016534 <__arch_getchar>:

int __arch_getchar(void)
{
   16534:	e92d4800 	push	{fp, lr}
   16538:	e28db004 	add	fp, sp, #4
    if (setup_status != SETUP_COMPLETE) {
   1653c:	e3083078 	movw	r3, #32888	; 0x8078
   16540:	e3403004 	movt	r3, #4
   16544:	e5933000 	ldr	r3, [r3]
   16548:	e3530003 	cmp	r3, #3
   1654c:	0a000000 	beq	16554 <__arch_getchar+0x20>
        __serial_setup();
   16550:	ebffffac 	bl	16408 <__serial_setup>
    }
    return __plat_getchar();
   16554:	eb000806 	bl	18574 <__plat_getchar>
   16558:	e1a03000 	mov	r3, r0
}
   1655c:	e1a00003 	mov	r0, r3
   16560:	e8bd8800 	pop	{fp, pc}

00016564 <seL4_CapRights_new>:
seL4_CapRights_new(seL4_Uint32 capAllowGrantReply, seL4_Uint32 capAllowGrant, seL4_Uint32 capAllowRead, seL4_Uint32 capAllowWrite) {
   16564:	e92d4800 	push	{fp, lr}
   16568:	e28db004 	add	fp, sp, #4
   1656c:	e24dd018 	sub	sp, sp, #24
   16570:	e50b0010 	str	r0, [fp, #-16]
   16574:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   16578:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1657c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    seL4_DebugAssert((capAllowGrantReply & ~0x1u) == ((0 && (capAllowGrantReply & (1u << 31))) ? 0x0 : 0));  
   16580:	e51b3010 	ldr	r3, [fp, #-16]
   16584:	e3c33001 	bic	r3, r3, #1
   16588:	e3530000 	cmp	r3, #0
   1658c:	0a000007 	beq	165b0 <seL4_CapRights_new+0x4c>
   16590:	e3083f40 	movw	r3, #36672	; 0x8f40
   16594:	e3403002 	movt	r3, #2
   16598:	e3a0207f 	mov	r2, #127	; 0x7f
   1659c:	e30815b0 	movw	r1, #34224	; 0x85b0
   165a0:	e3401002 	movt	r1, #2
   165a4:	e30805d8 	movw	r0, #34264	; 0x85d8
   165a8:	e3400002 	movt	r0, #2
   165ac:	eb001fee 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capAllowGrant & ~0x1u) == ((0 && (capAllowGrant & (1u << 31))) ? 0x0 : 0));  
   165b0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   165b4:	e3c33001 	bic	r3, r3, #1
   165b8:	e3530000 	cmp	r3, #0
   165bc:	0a000007 	beq	165e0 <seL4_CapRights_new+0x7c>
   165c0:	e3083f40 	movw	r3, #36672	; 0x8f40
   165c4:	e3403002 	movt	r3, #2
   165c8:	e3a02080 	mov	r2, #128	; 0x80
   165cc:	e30815b0 	movw	r1, #34224	; 0x85b0
   165d0:	e3401002 	movt	r1, #2
   165d4:	e3080630 	movw	r0, #34352	; 0x8630
   165d8:	e3400002 	movt	r0, #2
   165dc:	eb001fe2 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capAllowRead & ~0x1u) == ((0 && (capAllowRead & (1u << 31))) ? 0x0 : 0));  
   165e0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   165e4:	e3c33001 	bic	r3, r3, #1
   165e8:	e3530000 	cmp	r3, #0
   165ec:	0a000007 	beq	16610 <seL4_CapRights_new+0xac>
   165f0:	e3083f40 	movw	r3, #36672	; 0x8f40
   165f4:	e3403002 	movt	r3, #2
   165f8:	e3a02081 	mov	r2, #129	; 0x81
   165fc:	e30815b0 	movw	r1, #34224	; 0x85b0
   16600:	e3401002 	movt	r1, #2
   16604:	e308067c 	movw	r0, #34428	; 0x867c
   16608:	e3400002 	movt	r0, #2
   1660c:	eb001fd6 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capAllowWrite & ~0x1u) == ((0 && (capAllowWrite & (1u << 31))) ? 0x0 : 0));
   16610:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   16614:	e3c33001 	bic	r3, r3, #1
   16618:	e3530000 	cmp	r3, #0
   1661c:	0a000007 	beq	16640 <seL4_CapRights_new+0xdc>
   16620:	e3083f40 	movw	r3, #36672	; 0x8f40
   16624:	e3403002 	movt	r3, #2
   16628:	e3a02082 	mov	r2, #130	; 0x82
   1662c:	e30815b0 	movw	r1, #34224	; 0x85b0
   16630:	e3401002 	movt	r1, #2
   16634:	e30806c8 	movw	r0, #34504	; 0x86c8
   16638:	e3400002 	movt	r0, #2
   1663c:	eb001fca 	bl	1e56c <__assert_fail>
        | (capAllowGrantReply & 0x1u) << 3
   16640:	e51b3010 	ldr	r3, [fp, #-16]
   16644:	e1a03183 	lsl	r3, r3, #3
   16648:	e2032008 	and	r2, r3, #8
        | (capAllowGrant & 0x1u) << 2
   1664c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   16650:	e1a03103 	lsl	r3, r3, #2
   16654:	e2033004 	and	r3, r3, #4
   16658:	e1822003 	orr	r2, r2, r3
        | (capAllowRead & 0x1u) << 1
   1665c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   16660:	e1a03083 	lsl	r3, r3, #1
   16664:	e2033002 	and	r3, r3, #2
   16668:	e1822003 	orr	r2, r2, r3
        | (capAllowWrite & 0x1u) << 0;
   1666c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   16670:	e2033001 	and	r3, r3, #1
   16674:	e1823003 	orr	r3, r2, r3
    seL4_CapRights.words[0] = 0
   16678:	e50b3008 	str	r3, [fp, #-8]
    return seL4_CapRights;
   1667c:	e51b3008 	ldr	r3, [fp, #-8]
}
   16680:	e1a00003 	mov	r0, r3
   16684:	e24bd004 	sub	sp, fp, #4
   16688:	e8bd8800 	pop	{fp, pc}

0001668c <seL4_MessageInfo_new>:
seL4_MessageInfo_new(seL4_Uint32 label, seL4_Uint32 capsUnwrapped, seL4_Uint32 extraCaps, seL4_Uint32 length) {
   1668c:	e92d4800 	push	{fp, lr}
   16690:	e28db004 	add	fp, sp, #4
   16694:	e24dd018 	sub	sp, sp, #24
   16698:	e50b0010 	str	r0, [fp, #-16]
   1669c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   166a0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   166a4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    seL4_DebugAssert((label & ~0xfffffu) == ((0 && (label & (1u << 31))) ? 0x0 : 0));  
   166a8:	e51b3010 	ldr	r3, [fp, #-16]
   166ac:	e1a03a23 	lsr	r3, r3, #20
   166b0:	e1a03a03 	lsl	r3, r3, #20
   166b4:	e3530000 	cmp	r3, #0
   166b8:	0a000007 	beq	166dc <seL4_MessageInfo_new+0x50>
   166bc:	e3083f90 	movw	r3, #36752	; 0x8f90
   166c0:	e3403002 	movt	r3, #2
   166c4:	e3002142 	movw	r2, #322	; 0x142
   166c8:	e30815b0 	movw	r1, #34224	; 0x85b0
   166cc:	e3401002 	movt	r1, #2
   166d0:	e3080714 	movw	r0, #34580	; 0x8714
   166d4:	e3400002 	movt	r0, #2
   166d8:	eb001fa3 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((capsUnwrapped & ~0x7u) == ((0 && (capsUnwrapped & (1u << 31))) ? 0x0 : 0));  
   166dc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   166e0:	e3c33007 	bic	r3, r3, #7
   166e4:	e3530000 	cmp	r3, #0
   166e8:	0a000007 	beq	1670c <seL4_MessageInfo_new+0x80>
   166ec:	e3083f90 	movw	r3, #36752	; 0x8f90
   166f0:	e3403002 	movt	r3, #2
   166f4:	e3002143 	movw	r2, #323	; 0x143
   166f8:	e30815b0 	movw	r1, #34224	; 0x85b0
   166fc:	e3401002 	movt	r1, #2
   16700:	e3080754 	movw	r0, #34644	; 0x8754
   16704:	e3400002 	movt	r0, #2
   16708:	eb001f97 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((extraCaps & ~0x3u) == ((0 && (extraCaps & (1u << 31))) ? 0x0 : 0));  
   1670c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   16710:	e3c33003 	bic	r3, r3, #3
   16714:	e3530000 	cmp	r3, #0
   16718:	0a000007 	beq	1673c <seL4_MessageInfo_new+0xb0>
   1671c:	e3083f90 	movw	r3, #36752	; 0x8f90
   16720:	e3403002 	movt	r3, #2
   16724:	e3a02f51 	mov	r2, #324	; 0x144
   16728:	e30815b0 	movw	r1, #34224	; 0x85b0
   1672c:	e3401002 	movt	r1, #2
   16730:	e30807a0 	movw	r0, #34720	; 0x87a0
   16734:	e3400002 	movt	r0, #2
   16738:	eb001f8b 	bl	1e56c <__assert_fail>
    seL4_DebugAssert((length & ~0x7fu) == ((0 && (length & (1u << 31))) ? 0x0 : 0));
   1673c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   16740:	e3c3307f 	bic	r3, r3, #127	; 0x7f
   16744:	e3530000 	cmp	r3, #0
   16748:	0a000007 	beq	1676c <seL4_MessageInfo_new+0xe0>
   1674c:	e3083f90 	movw	r3, #36752	; 0x8f90
   16750:	e3403002 	movt	r3, #2
   16754:	e3002145 	movw	r2, #325	; 0x145
   16758:	e30815b0 	movw	r1, #34224	; 0x85b0
   1675c:	e3401002 	movt	r1, #2
   16760:	e30807e4 	movw	r0, #34788	; 0x87e4
   16764:	e3400002 	movt	r0, #2
   16768:	eb001f7f 	bl	1e56c <__assert_fail>
        | (label & 0xfffffu) << 12
   1676c:	e51b3010 	ldr	r3, [fp, #-16]
   16770:	e1a02603 	lsl	r2, r3, #12
        | (capsUnwrapped & 0x7u) << 9
   16774:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   16778:	e1a03483 	lsl	r3, r3, #9
   1677c:	e2033c0e 	and	r3, r3, #3584	; 0xe00
   16780:	e1822003 	orr	r2, r2, r3
        | (extraCaps & 0x3u) << 7
   16784:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   16788:	e1a03383 	lsl	r3, r3, #7
   1678c:	e2033d06 	and	r3, r3, #384	; 0x180
   16790:	e1822003 	orr	r2, r2, r3
        | (length & 0x7fu) << 0;
   16794:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   16798:	e203307f 	and	r3, r3, #127	; 0x7f
   1679c:	e1823003 	orr	r3, r2, r3
    seL4_MessageInfo.words[0] = 0
   167a0:	e50b3008 	str	r3, [fp, #-8]
    return seL4_MessageInfo;
   167a4:	e51b3008 	ldr	r3, [fp, #-8]
}
   167a8:	e1a00003 	mov	r0, r3
   167ac:	e24bd004 	sub	sp, fp, #4
   167b0:	e8bd8800 	pop	{fp, pc}

000167b4 <seL4_MessageInfo_get_label>:
seL4_MessageInfo_get_label(seL4_MessageInfo_t seL4_MessageInfo) {
   167b4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   167b8:	e28db000 	add	fp, sp, #0
   167bc:	e24dd014 	sub	sp, sp, #20
   167c0:	e50b0010 	str	r0, [fp, #-16]
    ret = (seL4_MessageInfo.words[0] & 0xfffff000u) >> 12;
   167c4:	e51b3010 	ldr	r3, [fp, #-16]
   167c8:	e1a03623 	lsr	r3, r3, #12
   167cc:	e50b3008 	str	r3, [fp, #-8]
    return ret;
   167d0:	e51b3008 	ldr	r3, [fp, #-8]
}
   167d4:	e1a00003 	mov	r0, r3
   167d8:	e28bd000 	add	sp, fp, #0
   167dc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   167e0:	e12fff1e 	bx	lr

000167e4 <seL4_MessageInfo_get_length>:
seL4_MessageInfo_get_length(seL4_MessageInfo_t seL4_MessageInfo) {
   167e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   167e8:	e28db000 	add	fp, sp, #0
   167ec:	e24dd014 	sub	sp, sp, #20
   167f0:	e50b0010 	str	r0, [fp, #-16]
    ret = (seL4_MessageInfo.words[0] & 0x7fu) >> 0;
   167f4:	e51b3010 	ldr	r3, [fp, #-16]
   167f8:	e203307f 	and	r3, r3, #127	; 0x7f
   167fc:	e50b3008 	str	r3, [fp, #-8]
    return ret;
   16800:	e51b3008 	ldr	r3, [fp, #-8]
}
   16804:	e1a00003 	mov	r0, r3
   16808:	e28bd000 	add	sp, fp, #0
   1680c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   16810:	e12fff1e 	bx	lr

00016814 <seL4_GetIPCBuffer>:
{
   16814:	e92d4800 	push	{fp, lr}
   16818:	e28db004 	add	fp, sp, #4
    return __sel4_ipc_buffer;
   1681c:	ebffeeb6 	bl	122fc <__aeabi_read_tp>
   16820:	e1a03000 	mov	r3, r0
   16824:	e59f2008 	ldr	r2, [pc, #8]	; 16834 <seL4_GetIPCBuffer+0x20>
   16828:	e7933002 	ldr	r3, [r3, r2]
}
   1682c:	e1a00003 	mov	r0, r3
   16830:	e8bd8800 	pop	{fp, pc}
   16834:	00000008 	andeq	r0, r0, r8

00016838 <seL4_SetMR>:
{
   16838:	e92d4800 	push	{fp, lr}
   1683c:	e28db004 	add	fp, sp, #4
   16840:	e24dd008 	sub	sp, sp, #8
   16844:	e50b0008 	str	r0, [fp, #-8]
   16848:	e50b100c 	str	r1, [fp, #-12]
    seL4_GetIPCBuffer()->msg[i] = mr;
   1684c:	ebfffff0 	bl	16814 <seL4_GetIPCBuffer>
   16850:	e1a02000 	mov	r2, r0
   16854:	e51b3008 	ldr	r3, [fp, #-8]
   16858:	e1a03103 	lsl	r3, r3, #2
   1685c:	e0823003 	add	r3, r2, r3
   16860:	e51b200c 	ldr	r2, [fp, #-12]
   16864:	e5832004 	str	r2, [r3, #4]
}
   16868:	e320f000 	nop	{0}
   1686c:	e24bd004 	sub	sp, fp, #4
   16870:	e8bd8800 	pop	{fp, pc}

00016874 <arm_sys_send_recv>:
{
   16874:	e92d08b0 	push	{r4, r5, r7, fp}
   16878:	e28db00c 	add	fp, sp, #12
   1687c:	e24dd010 	sub	sp, sp, #16
   16880:	e50b0010 	str	r0, [fp, #-16]
   16884:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   16888:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1688c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    register seL4_Word destptr asm("r0") = dest;
   16890:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    register seL4_Word info asm("r1") = info_arg;
   16894:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   16898:	e59b3008 	ldr	r3, [fp, #8]
   1689c:	e5933000 	ldr	r3, [r3]
   168a0:	e1a02003 	mov	r2, r3
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   168a4:	e59b300c 	ldr	r3, [fp, #12]
   168a8:	e5933000 	ldr	r3, [r3]
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   168ac:	e59bc010 	ldr	ip, [fp, #16]
   168b0:	e59cc000 	ldr	ip, [ip]
   168b4:	e1a0400c 	mov	r4, ip
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   168b8:	e59bc014 	ldr	ip, [fp, #20]
   168bc:	e59cc000 	ldr	ip, [ip]
   168c0:	e1a0500c 	mov	r5, ip
    register seL4_Word scno asm("r7") = sys;
   168c4:	e51b7010 	ldr	r7, [fp, #-16]
    asm volatile(
   168c8:	ef000000 	svc	0x00000000
    *out_info = info;
   168cc:	e1a0c001 	mov	ip, r1
   168d0:	e59b1004 	ldr	r1, [fp, #4]
   168d4:	e581c000 	str	ip, [r1]
    *out_badge = destptr;
   168d8:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   168dc:	e5810000 	str	r0, [r1]
    *in_out_mr0 = msg0;
   168e0:	e1a01002 	mov	r1, r2
   168e4:	e59b2008 	ldr	r2, [fp, #8]
   168e8:	e5821000 	str	r1, [r2]
    *in_out_mr1 = msg1;
   168ec:	e1a02003 	mov	r2, r3
   168f0:	e59b300c 	ldr	r3, [fp, #12]
   168f4:	e5832000 	str	r2, [r3]
    *in_out_mr2 = msg2;
   168f8:	e1a02004 	mov	r2, r4
   168fc:	e59b3010 	ldr	r3, [fp, #16]
   16900:	e5832000 	str	r2, [r3]
    *in_out_mr3 = msg3;
   16904:	e1a02005 	mov	r2, r5
   16908:	e59b3014 	ldr	r3, [fp, #20]
   1690c:	e5832000 	str	r2, [r3]
}
   16910:	e320f000 	nop	{0}
   16914:	e24bd00c 	sub	sp, fp, #12
   16918:	e8bd08b0 	pop	{r4, r5, r7, fp}
   1691c:	e12fff1e 	bx	lr

00016920 <seL4_CallWithMRs>:
{
   16920:	e92d4800 	push	{fp, lr}
   16924:	e28db004 	add	fp, sp, #4
   16928:	e24dd040 	sub	sp, sp, #64	; 0x40
   1692c:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   16930:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   16934:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   16938:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    seL4_Word msg0 = 0;
   1693c:	e3a03000 	mov	r3, #0
   16940:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word msg1 = 0;
   16944:	e3a03000 	mov	r3, #0
   16948:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word msg2 = 0;
   1694c:	e3a03000 	mov	r3, #0
   16950:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word msg3 = 0;
   16954:	e3a03000 	mov	r3, #0
   16958:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    if (mr0 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 0) {
   1695c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   16960:	e3530000 	cmp	r3, #0
   16964:	0a000007 	beq	16988 <seL4_CallWithMRs+0x68>
   16968:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   1696c:	ebffff9c 	bl	167e4 <seL4_MessageInfo_get_length>
   16970:	e1a03000 	mov	r3, r0
   16974:	e3530000 	cmp	r3, #0
   16978:	0a000002 	beq	16988 <seL4_CallWithMRs+0x68>
        msg0 = *mr0;
   1697c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   16980:	e5933000 	ldr	r3, [r3]
   16984:	e50b300c 	str	r3, [fp, #-12]
    if (mr1 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 1) {
   16988:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1698c:	e3530000 	cmp	r3, #0
   16990:	0a000007 	beq	169b4 <seL4_CallWithMRs+0x94>
   16994:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   16998:	ebffff91 	bl	167e4 <seL4_MessageInfo_get_length>
   1699c:	e1a03000 	mov	r3, r0
   169a0:	e3530001 	cmp	r3, #1
   169a4:	9a000002 	bls	169b4 <seL4_CallWithMRs+0x94>
        msg1 = *mr1;
   169a8:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   169ac:	e5933000 	ldr	r3, [r3]
   169b0:	e50b3010 	str	r3, [fp, #-16]
    if (mr2 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 2) {
   169b4:	e59b3004 	ldr	r3, [fp, #4]
   169b8:	e3530000 	cmp	r3, #0
   169bc:	0a000007 	beq	169e0 <seL4_CallWithMRs+0xc0>
   169c0:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   169c4:	ebffff86 	bl	167e4 <seL4_MessageInfo_get_length>
   169c8:	e1a03000 	mov	r3, r0
   169cc:	e3530002 	cmp	r3, #2
   169d0:	9a000002 	bls	169e0 <seL4_CallWithMRs+0xc0>
        msg2 = *mr2;
   169d4:	e59b3004 	ldr	r3, [fp, #4]
   169d8:	e5933000 	ldr	r3, [r3]
   169dc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    if (mr3 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 3) {
   169e0:	e59b3008 	ldr	r3, [fp, #8]
   169e4:	e3530000 	cmp	r3, #0
   169e8:	0a000007 	beq	16a0c <seL4_CallWithMRs+0xec>
   169ec:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   169f0:	ebffff7b 	bl	167e4 <seL4_MessageInfo_get_length>
   169f4:	e1a03000 	mov	r3, r0
   169f8:	e3530003 	cmp	r3, #3
   169fc:	9a000002 	bls	16a0c <seL4_CallWithMRs+0xec>
        msg3 = *mr3;
   16a00:	e59b3008 	ldr	r3, [fp, #8]
   16a04:	e5933000 	ldr	r3, [r3]
   16a08:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    arm_sys_send_recv(seL4_SysCall, dest, &dest, msgInfo.words[0], &info.words[0], &msg0, &msg1, &msg2, &msg3, 0);
   16a0c:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   16a10:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a14:	e24b2020 	sub	r2, fp, #32
   16a18:	e3a03000 	mov	r3, #0
   16a1c:	e58d3014 	str	r3, [sp, #20]
   16a20:	e24b3018 	sub	r3, fp, #24
   16a24:	e58d3010 	str	r3, [sp, #16]
   16a28:	e24b3014 	sub	r3, fp, #20
   16a2c:	e58d300c 	str	r3, [sp, #12]
   16a30:	e24b3010 	sub	r3, fp, #16
   16a34:	e58d3008 	str	r3, [sp, #8]
   16a38:	e24b300c 	sub	r3, fp, #12
   16a3c:	e58d3004 	str	r3, [sp, #4]
   16a40:	e24b3008 	sub	r3, fp, #8
   16a44:	e58d3000 	str	r3, [sp]
   16a48:	e1a03000 	mov	r3, r0
   16a4c:	e3e00000 	mvn	r0, #0
   16a50:	ebffff87 	bl	16874 <arm_sys_send_recv>
    if (mr0 != seL4_Null) {
   16a54:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   16a58:	e3530000 	cmp	r3, #0
   16a5c:	0a000002 	beq	16a6c <seL4_CallWithMRs+0x14c>
        *mr0 = msg0;
   16a60:	e51b200c 	ldr	r2, [fp, #-12]
   16a64:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   16a68:	e5832000 	str	r2, [r3]
    if (mr1 != seL4_Null) {
   16a6c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a70:	e3530000 	cmp	r3, #0
   16a74:	0a000002 	beq	16a84 <seL4_CallWithMRs+0x164>
        *mr1 = msg1;
   16a78:	e51b2010 	ldr	r2, [fp, #-16]
   16a7c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a80:	e5832000 	str	r2, [r3]
    if (mr2 != seL4_Null) {
   16a84:	e59b3004 	ldr	r3, [fp, #4]
   16a88:	e3530000 	cmp	r3, #0
   16a8c:	0a000002 	beq	16a9c <seL4_CallWithMRs+0x17c>
        *mr2 = msg2;
   16a90:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   16a94:	e59b3004 	ldr	r3, [fp, #4]
   16a98:	e5832000 	str	r2, [r3]
    if (mr3 != seL4_Null) {
   16a9c:	e59b3008 	ldr	r3, [fp, #8]
   16aa0:	e3530000 	cmp	r3, #0
   16aa4:	0a000002 	beq	16ab4 <seL4_CallWithMRs+0x194>
        *mr3 = msg3;
   16aa8:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   16aac:	e59b3008 	ldr	r3, [fp, #8]
   16ab0:	e5832000 	str	r2, [r3]
    return info;
   16ab4:	e51b3008 	ldr	r3, [fp, #-8]
}
   16ab8:	e1a00003 	mov	r0, r3
   16abc:	e24bd004 	sub	sp, fp, #4
   16ac0:	e8bd8800 	pop	{fp, pc}

00016ac4 <seL4_DebugCapIdentify>:
{
   16ac4:	e92d4800 	push	{fp, lr}
   16ac8:	e28db004 	add	fp, sp, #4
   16acc:	e24dd038 	sub	sp, sp, #56	; 0x38
   16ad0:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
    seL4_Word unused0 = 0;
   16ad4:	e3a03000 	mov	r3, #0
   16ad8:	e50b3008 	str	r3, [fp, #-8]
    seL4_Word unused1 = 0;
   16adc:	e3a03000 	mov	r3, #0
   16ae0:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word unused2 = 0;
   16ae4:	e3a03000 	mov	r3, #0
   16ae8:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word unused3 = 0;
   16aec:	e3a03000 	mov	r3, #0
   16af0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word unused4 = 0;
   16af4:	e3a03000 	mov	r3, #0
   16af8:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    arm_sys_send_recv(seL4_SysDebugCapIdentify, cap, &cap, 0, &unused0, &unused1, &unused2, &unused3, &unused4, 0);
   16afc:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   16b00:	e24b2020 	sub	r2, fp, #32
   16b04:	e3a03000 	mov	r3, #0
   16b08:	e58d3014 	str	r3, [sp, #20]
   16b0c:	e24b3018 	sub	r3, fp, #24
   16b10:	e58d3010 	str	r3, [sp, #16]
   16b14:	e24b3014 	sub	r3, fp, #20
   16b18:	e58d300c 	str	r3, [sp, #12]
   16b1c:	e24b3010 	sub	r3, fp, #16
   16b20:	e58d3008 	str	r3, [sp, #8]
   16b24:	e24b300c 	sub	r3, fp, #12
   16b28:	e58d3004 	str	r3, [sp, #4]
   16b2c:	e24b3008 	sub	r3, fp, #8
   16b30:	e58d3000 	str	r3, [sp]
   16b34:	e3a03000 	mov	r3, #0
   16b38:	e3e0000b 	mvn	r0, #11
   16b3c:	ebffff4c 	bl	16874 <arm_sys_send_recv>
    return (seL4_Uint32)cap;
   16b40:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
}
   16b44:	e1a00003 	mov	r0, r3
   16b48:	e24bd004 	sub	sp, fp, #4
   16b4c:	e8bd8800 	pop	{fp, pc}

00016b50 <seL4_CNode_Delete>:
{
   16b50:	e92d4800 	push	{fp, lr}
   16b54:	e28db004 	add	fp, sp, #4
   16b58:	e24dd038 	sub	sp, sp, #56	; 0x38
   16b5c:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   16b60:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
   16b64:	e1a03002 	mov	r3, r2
   16b68:	e54b302d 	strb	r3, [fp, #-45]	; 0xffffffd3
	seL4_MessageInfo_t tag = seL4_MessageInfo_new(CNodeDelete, 0, 0, 2);
   16b6c:	e3a03002 	mov	r3, #2
   16b70:	e3a02000 	mov	r2, #0
   16b74:	e3a01000 	mov	r1, #0
   16b78:	e3a00011 	mov	r0, #17
   16b7c:	ebfffec2 	bl	1668c <seL4_MessageInfo_new>
   16b80:	e1a03000 	mov	r3, r0
   16b84:	e50b300c 	str	r3, [fp, #-12]
	mr0 = index;
   16b88:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   16b8c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	mr1 = (depth & 0xfful);
   16b90:	e55b302d 	ldrb	r3, [fp, #-45]	; 0xffffffd3
   16b94:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	mr2 = 0;
   16b98:	e3a03000 	mov	r3, #0
   16b9c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	mr3 = 0;
   16ba0:	e3a03000 	mov	r3, #0
   16ba4:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
	output_tag = seL4_CallWithMRs(_service, tag,
   16ba8:	e24b1018 	sub	r1, fp, #24
   16bac:	e24b2014 	sub	r2, fp, #20
   16bb0:	e24b3020 	sub	r3, fp, #32
   16bb4:	e58d3004 	str	r3, [sp, #4]
   16bb8:	e24b301c 	sub	r3, fp, #28
   16bbc:	e58d3000 	str	r3, [sp]
   16bc0:	e1a03001 	mov	r3, r1
   16bc4:	e51b100c 	ldr	r1, [fp, #-12]
   16bc8:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bcc:	ebffff53 	bl	16920 <seL4_CallWithMRs>
   16bd0:	e1a03000 	mov	r3, r0
   16bd4:	e50b3010 	str	r3, [fp, #-16]
	result = (seL4_Error) seL4_MessageInfo_get_label(output_tag);
   16bd8:	e51b0010 	ldr	r0, [fp, #-16]
   16bdc:	ebfffef4 	bl	167b4 <seL4_MessageInfo_get_label>
   16be0:	e50b0008 	str	r0, [fp, #-8]
	if (result != seL4_NoError) {
   16be4:	e51b3008 	ldr	r3, [fp, #-8]
   16be8:	e3530000 	cmp	r3, #0
   16bec:	0a00000f 	beq	16c30 <seL4_CNode_Delete+0xe0>
		seL4_SetMR(0, mr0);
   16bf0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   16bf4:	e1a01003 	mov	r1, r3
   16bf8:	e3a00000 	mov	r0, #0
   16bfc:	ebffff0d 	bl	16838 <seL4_SetMR>
		seL4_SetMR(1, mr1);
   16c00:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c04:	e1a01003 	mov	r1, r3
   16c08:	e3a00001 	mov	r0, #1
   16c0c:	ebffff09 	bl	16838 <seL4_SetMR>
		seL4_SetMR(2, mr2);
   16c10:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c14:	e1a01003 	mov	r1, r3
   16c18:	e3a00002 	mov	r0, #2
   16c1c:	ebffff05 	bl	16838 <seL4_SetMR>
		seL4_SetMR(3, mr3);
   16c20:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   16c24:	e1a01003 	mov	r1, r3
   16c28:	e3a00003 	mov	r0, #3
   16c2c:	ebffff01 	bl	16838 <seL4_SetMR>
	return result;
   16c30:	e51b3008 	ldr	r3, [fp, #-8]
}
   16c34:	e1a00003 	mov	r0, r3
   16c38:	e24bd004 	sub	sp, fp, #4
   16c3c:	e8bd8800 	pop	{fp, pc}

00016c40 <simple_get_IRQ_handler>:
    }
    return simple->arch_simple.irq(simple->data, irq, path.root, path.capPtr, path.capDepth);
}

static inline seL4_Error simple_get_IRQ_handler(simple_t *simple, int irq, cspacepath_t path)
{
   16c40:	e24dd008 	sub	sp, sp, #8
   16c44:	e92d4810 	push	{r4, fp, lr}
   16c48:	e28db008 	add	fp, sp, #8
   16c4c:	e24dd01c 	sub	sp, sp, #28
   16c50:	e50b0010 	str	r0, [fp, #-16]
   16c54:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   16c58:	e28b1004 	add	r1, fp, #4
   16c5c:	e881000c 	stm	r1, {r2, r3}
    if (!simple) {
   16c60:	e51b3010 	ldr	r3, [fp, #-16]
   16c64:	e3530000 	cmp	r3, #0
   16c68:	1a000012 	bne	16cb8 <simple_get_IRQ_handler+0x78>
        ZF_LOGE("Simple is NULL");
   16c6c:	e3083104 	movw	r3, #33028	; 0x8104
   16c70:	e3403004 	movt	r3, #4
   16c74:	e5933000 	ldr	r3, [r3]
   16c78:	e3530005 	cmp	r3, #5
   16c7c:	ca00000b 	bgt	16cb0 <simple_get_IRQ_handler+0x70>
   16c80:	e308388c 	movw	r3, #34956	; 0x888c
   16c84:	e3403002 	movt	r3, #2
   16c88:	e58d3004 	str	r3, [sp, #4]
   16c8c:	e3a03000 	mov	r3, #0
   16c90:	e58d3000 	str	r3, [sp]
   16c94:	e3a03005 	mov	r3, #5
   16c98:	e300212e 	movw	r2, #302	; 0x12e
   16c9c:	e3081824 	movw	r1, #34852	; 0x8824
   16ca0:	e3401002 	movt	r1, #2
   16ca4:	e3080e4c 	movw	r0, #36428	; 0x8e4c
   16ca8:	e3400002 	movt	r0, #2
   16cac:	eb001cb5 	bl	1df88 <_zf_log_write_d>
        return seL4_InvalidArgument;
   16cb0:	e3a03001 	mov	r3, #1
   16cb4:	ea000026 	b	16d54 <simple_get_IRQ_handler+0x114>
    }
    if (!simple->arch_simple.irq) {
   16cb8:	e51b3010 	ldr	r3, [fp, #-16]
   16cbc:	e5933048 	ldr	r3, [r3, #72]	; 0x48
   16cc0:	e3530000 	cmp	r3, #0
   16cc4:	1a000015 	bne	16d20 <simple_get_IRQ_handler+0xe0>
        ZF_LOGE("%s not implemented", __FUNCTION__);
   16cc8:	e3083104 	movw	r3, #33028	; 0x8104
   16ccc:	e3403004 	movt	r3, #4
   16cd0:	e5933000 	ldr	r3, [r3]
   16cd4:	e3530005 	cmp	r3, #5
   16cd8:	ca00000e 	bgt	16d18 <simple_get_IRQ_handler+0xd8>
   16cdc:	e3083e64 	movw	r3, #36452	; 0x8e64
   16ce0:	e3403002 	movt	r3, #2
   16ce4:	e58d3008 	str	r3, [sp, #8]
   16ce8:	e308389c 	movw	r3, #34972	; 0x889c
   16cec:	e3403002 	movt	r3, #2
   16cf0:	e58d3004 	str	r3, [sp, #4]
   16cf4:	e3a03000 	mov	r3, #0
   16cf8:	e58d3000 	str	r3, [sp]
   16cfc:	e3a03005 	mov	r3, #5
   16d00:	e3002132 	movw	r2, #306	; 0x132
   16d04:	e3081824 	movw	r1, #34852	; 0x8824
   16d08:	e3401002 	movt	r1, #2
   16d0c:	e3080e4c 	movw	r0, #36428	; 0x8e4c
   16d10:	e3400002 	movt	r0, #2
   16d14:	eb001c9b 	bl	1df88 <_zf_log_write_d>
        return seL4_InvalidArgument;
   16d18:	e3a03001 	mov	r3, #1
   16d1c:	ea00000c 	b	16d54 <simple_get_IRQ_handler+0x114>
    }
    return simple->arch_simple.irq(simple->data, irq, path.root, path.capPtr, path.capDepth);
   16d20:	e51b3010 	ldr	r3, [fp, #-16]
   16d24:	e5934048 	ldr	r4, [r3, #72]	; 0x48
   16d28:	e51b3010 	ldr	r3, [fp, #-16]
   16d2c:	e5930000 	ldr	r0, [r3]
   16d30:	e59b200c 	ldr	r2, [fp, #12]
   16d34:	e59b1004 	ldr	r1, [fp, #4]
   16d38:	e59b3008 	ldr	r3, [fp, #8]
   16d3c:	e6ef3073 	uxtb	r3, r3
   16d40:	e58d3000 	str	r3, [sp]
   16d44:	e1a03001 	mov	r3, r1
   16d48:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   16d4c:	e12fff34 	blx	r4
   16d50:	e1a03000 	mov	r3, r0
}
   16d54:	e1a00003 	mov	r0, r3
   16d58:	e24bd008 	sub	sp, fp, #8
   16d5c:	e8bd4810 	pop	{r4, fp, lr}
   16d60:	e28dd008 	add	sp, sp, #8
   16d64:	e12fff1e 	bx	lr

00016d68 <debug_cap_is_valid>:
{
   16d68:	e92d4800 	push	{fp, lr}
   16d6c:	e28db004 	add	fp, sp, #4
   16d70:	e24dd008 	sub	sp, sp, #8
   16d74:	e50b0008 	str	r0, [fp, #-8]
    return (0 != seL4_DebugCapIdentify(cap));
   16d78:	e51b0008 	ldr	r0, [fp, #-8]
   16d7c:	ebffff50 	bl	16ac4 <seL4_DebugCapIdentify>
   16d80:	e1a03000 	mov	r3, r0
   16d84:	e3530000 	cmp	r3, #0
   16d88:	13a03001 	movne	r3, #1
   16d8c:	03a03000 	moveq	r3, #0
   16d90:	e6ef3073 	uxtb	r3, r3
}
   16d94:	e1a00003 	mov	r0, r3
   16d98:	e24bd004 	sub	sp, fp, #4
   16d9c:	e8bd8800 	pop	{fp, pc}

00016da0 <vka_cspace_alloc>:
{
   16da0:	e92d4800 	push	{fp, lr}
   16da4:	e28db004 	add	fp, sp, #4
   16da8:	e24dd010 	sub	sp, sp, #16
   16dac:	e50b0008 	str	r0, [fp, #-8]
   16db0:	e50b100c 	str	r1, [fp, #-12]
    if (!vka) {
   16db4:	e51b3008 	ldr	r3, [fp, #-8]
   16db8:	e3530000 	cmp	r3, #0
   16dbc:	1a000012 	bne	16e0c <vka_cspace_alloc+0x6c>
        ZF_LOGE("vka is NULL");
   16dc0:	e3083104 	movw	r3, #33028	; 0x8104
   16dc4:	e3403004 	movt	r3, #4
   16dc8:	e5933000 	ldr	r3, [r3]
   16dcc:	e3530005 	cmp	r3, #5
   16dd0:	ca00000b 	bgt	16e04 <vka_cspace_alloc+0x64>
   16dd4:	e3083910 	movw	r3, #35088	; 0x8910
   16dd8:	e3403002 	movt	r3, #2
   16ddc:	e58d3004 	str	r3, [sp, #4]
   16de0:	e3a03000 	mov	r3, #0
   16de4:	e58d3000 	str	r3, [sp]
   16de8:	e3a03005 	mov	r3, #5
   16dec:	e3a0208b 	mov	r2, #139	; 0x8b
   16df0:	e30818b0 	movw	r1, #34992	; 0x88b0
   16df4:	e3401002 	movt	r1, #2
   16df8:	e3080e20 	movw	r0, #36384	; 0x8e20
   16dfc:	e3400002 	movt	r0, #2
   16e00:	eb001c60 	bl	1df88 <_zf_log_write_d>
        return -1;
   16e04:	e3e03000 	mvn	r3, #0
   16e08:	ea000034 	b	16ee0 <vka_cspace_alloc+0x140>
    if (!res) {
   16e0c:	e51b300c 	ldr	r3, [fp, #-12]
   16e10:	e3530000 	cmp	r3, #0
   16e14:	1a000012 	bne	16e64 <vka_cspace_alloc+0xc4>
        ZF_LOGE("res is NULL");
   16e18:	e3083104 	movw	r3, #33028	; 0x8104
   16e1c:	e3403004 	movt	r3, #4
   16e20:	e5933000 	ldr	r3, [r3]
   16e24:	e3530005 	cmp	r3, #5
   16e28:	ca00000b 	bgt	16e5c <vka_cspace_alloc+0xbc>
   16e2c:	e308391c 	movw	r3, #35100	; 0x891c
   16e30:	e3403002 	movt	r3, #2
   16e34:	e58d3004 	str	r3, [sp, #4]
   16e38:	e3a03000 	mov	r3, #0
   16e3c:	e58d3000 	str	r3, [sp]
   16e40:	e3a03005 	mov	r3, #5
   16e44:	e3a02090 	mov	r2, #144	; 0x90
   16e48:	e30818b0 	movw	r1, #34992	; 0x88b0
   16e4c:	e3401002 	movt	r1, #2
   16e50:	e3080e20 	movw	r0, #36384	; 0x8e20
   16e54:	e3400002 	movt	r0, #2
   16e58:	eb001c4a 	bl	1df88 <_zf_log_write_d>
        return -1;
   16e5c:	e3e03000 	mvn	r3, #0
   16e60:	ea00001e 	b	16ee0 <vka_cspace_alloc+0x140>
    if (!vka->cspace_alloc) {
   16e64:	e51b3008 	ldr	r3, [fp, #-8]
   16e68:	e5933004 	ldr	r3, [r3, #4]
   16e6c:	e3530000 	cmp	r3, #0
   16e70:	1a000012 	bne	16ec0 <vka_cspace_alloc+0x120>
        ZF_LOGE("Unimplemented");
   16e74:	e3083104 	movw	r3, #33028	; 0x8104
   16e78:	e3403004 	movt	r3, #4
   16e7c:	e5933000 	ldr	r3, [r3]
   16e80:	e3530005 	cmp	r3, #5
   16e84:	ca00000b 	bgt	16eb8 <vka_cspace_alloc+0x118>
   16e88:	e3083928 	movw	r3, #35112	; 0x8928
   16e8c:	e3403002 	movt	r3, #2
   16e90:	e58d3004 	str	r3, [sp, #4]
   16e94:	e3a03000 	mov	r3, #0
   16e98:	e58d3000 	str	r3, [sp]
   16e9c:	e3a03005 	mov	r3, #5
   16ea0:	e3a02095 	mov	r2, #149	; 0x95
   16ea4:	e30818b0 	movw	r1, #34992	; 0x88b0
   16ea8:	e3401002 	movt	r1, #2
   16eac:	e3080e20 	movw	r0, #36384	; 0x8e20
   16eb0:	e3400002 	movt	r0, #2
   16eb4:	eb001c33 	bl	1df88 <_zf_log_write_d>
        return -1;
   16eb8:	e3e03000 	mvn	r3, #0
   16ebc:	ea000007 	b	16ee0 <vka_cspace_alloc+0x140>
    return vka->cspace_alloc(vka->data, res);
   16ec0:	e51b3008 	ldr	r3, [fp, #-8]
   16ec4:	e5933004 	ldr	r3, [r3, #4]
   16ec8:	e51b2008 	ldr	r2, [fp, #-8]
   16ecc:	e5922000 	ldr	r2, [r2]
   16ed0:	e51b100c 	ldr	r1, [fp, #-12]
   16ed4:	e1a00002 	mov	r0, r2
   16ed8:	e12fff33 	blx	r3
   16edc:	e1a03000 	mov	r3, r0
}
   16ee0:	e1a00003 	mov	r0, r3
   16ee4:	e24bd004 	sub	sp, fp, #4
   16ee8:	e8bd8800 	pop	{fp, pc}

00016eec <vka_cspace_make_path>:
{
   16eec:	e92d4800 	push	{fp, lr}
   16ef0:	e28db004 	add	fp, sp, #4
   16ef4:	e24dd018 	sub	sp, sp, #24
   16ef8:	e50b0008 	str	r0, [fp, #-8]
   16efc:	e50b100c 	str	r1, [fp, #-12]
   16f00:	e50b2010 	str	r2, [fp, #-16]
    if (!res) {
   16f04:	e51b3010 	ldr	r3, [fp, #-16]
   16f08:	e3530000 	cmp	r3, #0
   16f0c:	1a000018 	bne	16f74 <vka_cspace_make_path+0x88>
        ZF_LOGF("res is NULL");
   16f10:	e3083104 	movw	r3, #33028	; 0x8104
   16f14:	e3403004 	movt	r3, #4
   16f18:	e5933000 	ldr	r3, [r3]
   16f1c:	e3530801 	cmp	r3, #65536	; 0x10000
   16f20:	aa00000b 	bge	16f54 <vka_cspace_make_path+0x68>
   16f24:	e308391c 	movw	r3, #35100	; 0x891c
   16f28:	e3403002 	movt	r3, #2
   16f2c:	e58d3004 	str	r3, [sp, #4]
   16f30:	e3a03000 	mov	r3, #0
   16f34:	e58d3000 	str	r3, [sp]
   16f38:	e30f3fff 	movw	r3, #65535	; 0xffff
   16f3c:	e3a020a0 	mov	r2, #160	; 0xa0
   16f40:	e30818b0 	movw	r1, #34992	; 0x88b0
   16f44:	e3401002 	movt	r1, #2
   16f48:	e3080e34 	movw	r0, #36404	; 0x8e34
   16f4c:	e3400002 	movt	r0, #2
   16f50:	eb001c0c 	bl	1df88 <_zf_log_write_d>
   16f54:	e3083e34 	movw	r3, #36404	; 0x8e34
   16f58:	e3403002 	movt	r3, #2
   16f5c:	e3a020a0 	mov	r2, #160	; 0xa0
   16f60:	e30818b0 	movw	r1, #34992	; 0x88b0
   16f64:	e3401002 	movt	r1, #2
   16f68:	e3080938 	movw	r0, #35128	; 0x8938
   16f6c:	e3400002 	movt	r0, #2
   16f70:	eb001d7d 	bl	1e56c <__assert_fail>
    if (!vka) {
   16f74:	e51b3008 	ldr	r3, [fp, #-8]
   16f78:	e3530000 	cmp	r3, #0
   16f7c:	1a000018 	bne	16fe4 <vka_cspace_make_path+0xf8>
        ZF_LOGF("vka is NULL");
   16f80:	e3083104 	movw	r3, #33028	; 0x8104
   16f84:	e3403004 	movt	r3, #4
   16f88:	e5933000 	ldr	r3, [r3]
   16f8c:	e3530801 	cmp	r3, #65536	; 0x10000
   16f90:	aa00000b 	bge	16fc4 <vka_cspace_make_path+0xd8>
   16f94:	e3083910 	movw	r3, #35088	; 0x8910
   16f98:	e3403002 	movt	r3, #2
   16f9c:	e58d3004 	str	r3, [sp, #4]
   16fa0:	e3a03000 	mov	r3, #0
   16fa4:	e58d3000 	str	r3, [sp]
   16fa8:	e30f3fff 	movw	r3, #65535	; 0xffff
   16fac:	e3a020a4 	mov	r2, #164	; 0xa4
   16fb0:	e30818b0 	movw	r1, #34992	; 0x88b0
   16fb4:	e3401002 	movt	r1, #2
   16fb8:	e3080e34 	movw	r0, #36404	; 0x8e34
   16fbc:	e3400002 	movt	r0, #2
   16fc0:	eb001bf0 	bl	1df88 <_zf_log_write_d>
   16fc4:	e3083e34 	movw	r3, #36404	; 0x8e34
   16fc8:	e3403002 	movt	r3, #2
   16fcc:	e3a020a4 	mov	r2, #164	; 0xa4
   16fd0:	e30818b0 	movw	r1, #34992	; 0x88b0
   16fd4:	e3401002 	movt	r1, #2
   16fd8:	e3080938 	movw	r0, #35128	; 0x8938
   16fdc:	e3400002 	movt	r0, #2
   16fe0:	eb001d61 	bl	1e56c <__assert_fail>
    if (!vka->cspace_make_path) {
   16fe4:	e51b3008 	ldr	r3, [fp, #-8]
   16fe8:	e5933008 	ldr	r3, [r3, #8]
   16fec:	e3530000 	cmp	r3, #0
   16ff0:	1a000018 	bne	17058 <vka_cspace_make_path+0x16c>
        ZF_LOGF("Unimplmented");
   16ff4:	e3083104 	movw	r3, #33028	; 0x8104
   16ff8:	e3403004 	movt	r3, #4
   16ffc:	e5933000 	ldr	r3, [r3]
   17000:	e3530801 	cmp	r3, #65536	; 0x10000
   17004:	aa00000b 	bge	17038 <vka_cspace_make_path+0x14c>
   17008:	e3083948 	movw	r3, #35144	; 0x8948
   1700c:	e3403002 	movt	r3, #2
   17010:	e58d3004 	str	r3, [sp, #4]
   17014:	e3a03000 	mov	r3, #0
   17018:	e58d3000 	str	r3, [sp]
   1701c:	e30f3fff 	movw	r3, #65535	; 0xffff
   17020:	e3a020a8 	mov	r2, #168	; 0xa8
   17024:	e30818b0 	movw	r1, #34992	; 0x88b0
   17028:	e3401002 	movt	r1, #2
   1702c:	e3080e34 	movw	r0, #36404	; 0x8e34
   17030:	e3400002 	movt	r0, #2
   17034:	eb001bd3 	bl	1df88 <_zf_log_write_d>
   17038:	e3083e34 	movw	r3, #36404	; 0x8e34
   1703c:	e3403002 	movt	r3, #2
   17040:	e3a020a8 	mov	r2, #168	; 0xa8
   17044:	e30818b0 	movw	r1, #34992	; 0x88b0
   17048:	e3401002 	movt	r1, #2
   1704c:	e3080938 	movw	r0, #35128	; 0x8938
   17050:	e3400002 	movt	r0, #2
   17054:	eb001d44 	bl	1e56c <__assert_fail>
    vka->cspace_make_path(vka->data, slot, res);
   17058:	e51b3008 	ldr	r3, [fp, #-8]
   1705c:	e5933008 	ldr	r3, [r3, #8]
   17060:	e51b2008 	ldr	r2, [fp, #-8]
   17064:	e5920000 	ldr	r0, [r2]
   17068:	e51b2010 	ldr	r2, [fp, #-16]
   1706c:	e51b100c 	ldr	r1, [fp, #-12]
   17070:	e12fff33 	blx	r3
}
   17074:	e320f000 	nop	{0}
   17078:	e24bd004 	sub	sp, fp, #4
   1707c:	e8bd8800 	pop	{fp, pc}

00017080 <vka_cspace_free>:
{
   17080:	e92d4800 	push	{fp, lr}
   17084:	e28db004 	add	fp, sp, #4
   17088:	e24dd010 	sub	sp, sp, #16
   1708c:	e50b0008 	str	r0, [fp, #-8]
   17090:	e50b100c 	str	r1, [fp, #-12]
    if (debug_cap_is_valid(slot)) {
   17094:	e51b000c 	ldr	r0, [fp, #-12]
   17098:	ebffff32 	bl	16d68 <debug_cap_is_valid>
   1709c:	e1a03000 	mov	r3, r0
   170a0:	e3530000 	cmp	r3, #0
   170a4:	0a000018 	beq	1710c <vka_cspace_free+0x8c>
        ZF_LOGF("slot is not free: call vka_cnode_delete first");
   170a8:	e3083104 	movw	r3, #33028	; 0x8104
   170ac:	e3403004 	movt	r3, #4
   170b0:	e5933000 	ldr	r3, [r3]
   170b4:	e3530801 	cmp	r3, #65536	; 0x10000
   170b8:	aa00000b 	bge	170ec <vka_cspace_free+0x6c>
   170bc:	e3083958 	movw	r3, #35160	; 0x8958
   170c0:	e3403002 	movt	r3, #2
   170c4:	e58d3004 	str	r3, [sp, #4]
   170c8:	e3a03000 	mov	r3, #0
   170cc:	e58d3000 	str	r3, [sp]
   170d0:	e30f3fff 	movw	r3, #65535	; 0xffff
   170d4:	e3a020c1 	mov	r2, #193	; 0xc1
   170d8:	e30818b0 	movw	r1, #34992	; 0x88b0
   170dc:	e3401002 	movt	r1, #2
   170e0:	e3080e7c 	movw	r0, #36476	; 0x8e7c
   170e4:	e3400002 	movt	r0, #2
   170e8:	eb001ba6 	bl	1df88 <_zf_log_write_d>
   170ec:	e3083e7c 	movw	r3, #36476	; 0x8e7c
   170f0:	e3403002 	movt	r3, #2
   170f4:	e3a020c1 	mov	r2, #193	; 0xc1
   170f8:	e30818b0 	movw	r1, #34992	; 0x88b0
   170fc:	e3401002 	movt	r1, #2
   17100:	e3080938 	movw	r0, #35128	; 0x8938
   17104:	e3400002 	movt	r0, #2
   17108:	eb001d17 	bl	1e56c <__assert_fail>
    if (!vka->cspace_free) {
   1710c:	e51b3008 	ldr	r3, [fp, #-8]
   17110:	e5933018 	ldr	r3, [r3, #24]
   17114:	e3530000 	cmp	r3, #0
   17118:	1a000011 	bne	17164 <vka_cspace_free+0xe4>
        ZF_LOGE("Not implemented");
   1711c:	e3083104 	movw	r3, #33028	; 0x8104
   17120:	e3403004 	movt	r3, #4
   17124:	e5933000 	ldr	r3, [r3]
   17128:	e3530005 	cmp	r3, #5
   1712c:	ca000014 	bgt	17184 <vka_cspace_free+0x104>
   17130:	e3083988 	movw	r3, #35208	; 0x8988
   17134:	e3403002 	movt	r3, #2
   17138:	e58d3004 	str	r3, [sp, #4]
   1713c:	e3a03000 	mov	r3, #0
   17140:	e58d3000 	str	r3, [sp]
   17144:	e3a03005 	mov	r3, #5
   17148:	e3a020c7 	mov	r2, #199	; 0xc7
   1714c:	e30818b0 	movw	r1, #34992	; 0x88b0
   17150:	e3401002 	movt	r1, #2
   17154:	e3080e7c 	movw	r0, #36476	; 0x8e7c
   17158:	e3400002 	movt	r0, #2
   1715c:	eb001b89 	bl	1df88 <_zf_log_write_d>
        return;
   17160:	ea000007 	b	17184 <vka_cspace_free+0x104>
    vka->cspace_free(vka->data, slot);
   17164:	e51b3008 	ldr	r3, [fp, #-8]
   17168:	e5933018 	ldr	r3, [r3, #24]
   1716c:	e51b2008 	ldr	r2, [fp, #-8]
   17170:	e5922000 	ldr	r2, [r2]
   17174:	e51b100c 	ldr	r1, [fp, #-12]
   17178:	e1a00002 	mov	r0, r2
   1717c:	e12fff33 	blx	r3
   17180:	ea000000 	b	17188 <vka_cspace_free+0x108>
        return;
   17184:	e320f000 	nop	{0}
}
   17188:	e24bd004 	sub	sp, fp, #4
   1718c:	e8bd8800 	pop	{fp, pc}

00017190 <vka_utspace_alloc_maybe_device>:
    return vka->utspace_alloc(vka->data, dest, type, size_bits, res);
}

static inline int vka_utspace_alloc_maybe_device(vka_t *vka, const cspacepath_t *dest, seL4_Word type,
                                                 seL4_Word size_bits, bool can_use_dev, seL4_Word *res)
{
   17190:	e92d4810 	push	{r4, fp, lr}
   17194:	e28db008 	add	fp, sp, #8
   17198:	e24dd01c 	sub	sp, sp, #28
   1719c:	e50b0010 	str	r0, [fp, #-16]
   171a0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   171a4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   171a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    if (!vka) {
   171ac:	e51b3010 	ldr	r3, [fp, #-16]
   171b0:	e3530000 	cmp	r3, #0
   171b4:	1a000012 	bne	17204 <vka_utspace_alloc_maybe_device+0x74>
        ZF_LOGE("vka is NULL");
   171b8:	e3083104 	movw	r3, #33028	; 0x8104
   171bc:	e3403004 	movt	r3, #4
   171c0:	e5933000 	ldr	r3, [r3]
   171c4:	e3530005 	cmp	r3, #5
   171c8:	ca00000b 	bgt	171fc <vka_utspace_alloc_maybe_device+0x6c>
   171cc:	e3083910 	movw	r3, #35088	; 0x8910
   171d0:	e3403002 	movt	r3, #2
   171d4:	e58d3004 	str	r3, [sp, #4]
   171d8:	e3a03000 	mov	r3, #0
   171dc:	e58d3000 	str	r3, [sp]
   171e0:	e3a03005 	mov	r3, #5
   171e4:	e3a020ec 	mov	r2, #236	; 0xec
   171e8:	e30818b0 	movw	r1, #34992	; 0x88b0
   171ec:	e3401002 	movt	r1, #2
   171f0:	e3080ee8 	movw	r0, #36584	; 0x8ee8
   171f4:	e3400002 	movt	r0, #2
   171f8:	eb001b62 	bl	1df88 <_zf_log_write_d>
        return -1;
   171fc:	e3e03000 	mvn	r3, #0
   17200:	ea000039 	b	172ec <vka_utspace_alloc_maybe_device+0x15c>
    }

    if (!res) {
   17204:	e59b3008 	ldr	r3, [fp, #8]
   17208:	e3530000 	cmp	r3, #0
   1720c:	1a000012 	bne	1725c <vka_utspace_alloc_maybe_device+0xcc>
        ZF_LOGE("res is NULL");
   17210:	e3083104 	movw	r3, #33028	; 0x8104
   17214:	e3403004 	movt	r3, #4
   17218:	e5933000 	ldr	r3, [r3]
   1721c:	e3530005 	cmp	r3, #5
   17220:	ca00000b 	bgt	17254 <vka_utspace_alloc_maybe_device+0xc4>
   17224:	e308391c 	movw	r3, #35100	; 0x891c
   17228:	e3403002 	movt	r3, #2
   1722c:	e58d3004 	str	r3, [sp, #4]
   17230:	e3a03000 	mov	r3, #0
   17234:	e58d3000 	str	r3, [sp]
   17238:	e3a03005 	mov	r3, #5
   1723c:	e3a020f1 	mov	r2, #241	; 0xf1
   17240:	e30818b0 	movw	r1, #34992	; 0x88b0
   17244:	e3401002 	movt	r1, #2
   17248:	e3080ee8 	movw	r0, #36584	; 0x8ee8
   1724c:	e3400002 	movt	r0, #2
   17250:	eb001b4c 	bl	1df88 <_zf_log_write_d>
        return -1;
   17254:	e3e03000 	mvn	r3, #0
   17258:	ea000023 	b	172ec <vka_utspace_alloc_maybe_device+0x15c>
    }

    if (!vka->utspace_alloc_maybe_device) {
   1725c:	e51b3010 	ldr	r3, [fp, #-16]
   17260:	e5933010 	ldr	r3, [r3, #16]
   17264:	e3530000 	cmp	r3, #0
   17268:	1a000012 	bne	172b8 <vka_utspace_alloc_maybe_device+0x128>
        ZF_LOGE("Not implemented");
   1726c:	e3083104 	movw	r3, #33028	; 0x8104
   17270:	e3403004 	movt	r3, #4
   17274:	e5933000 	ldr	r3, [r3]
   17278:	e3530005 	cmp	r3, #5
   1727c:	ca00000b 	bgt	172b0 <vka_utspace_alloc_maybe_device+0x120>
   17280:	e3083988 	movw	r3, #35208	; 0x8988
   17284:	e3403002 	movt	r3, #2
   17288:	e58d3004 	str	r3, [sp, #4]
   1728c:	e3a03000 	mov	r3, #0
   17290:	e58d3000 	str	r3, [sp]
   17294:	e3a03005 	mov	r3, #5
   17298:	e3a020f6 	mov	r2, #246	; 0xf6
   1729c:	e30818b0 	movw	r1, #34992	; 0x88b0
   172a0:	e3401002 	movt	r1, #2
   172a4:	e3080ee8 	movw	r0, #36584	; 0x8ee8
   172a8:	e3400002 	movt	r0, #2
   172ac:	eb001b35 	bl	1df88 <_zf_log_write_d>
        return -1;
   172b0:	e3e03000 	mvn	r3, #0
   172b4:	ea00000c 	b	172ec <vka_utspace_alloc_maybe_device+0x15c>
    }

    return vka->utspace_alloc_maybe_device(vka->data, dest, type, size_bits, can_use_dev, res);
   172b8:	e51b3010 	ldr	r3, [fp, #-16]
   172bc:	e5934010 	ldr	r4, [r3, #16]
   172c0:	e51b3010 	ldr	r3, [fp, #-16]
   172c4:	e5930000 	ldr	r0, [r3]
   172c8:	e59b3008 	ldr	r3, [fp, #8]
   172cc:	e58d3004 	str	r3, [sp, #4]
   172d0:	e5db3004 	ldrb	r3, [fp, #4]
   172d4:	e58d3000 	str	r3, [sp]
   172d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   172dc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   172e0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   172e4:	e12fff34 	blx	r4
   172e8:	e1a03000 	mov	r3, r0
}
   172ec:	e1a00003 	mov	r0, r3
   172f0:	e24bd008 	sub	sp, fp, #8
   172f4:	e8bd8810 	pop	{r4, fp, pc}

000172f8 <vka_utspace_alloc_at>:

static inline int vka_utspace_alloc_at(vka_t *vka, const cspacepath_t *dest, seL4_Word type, seL4_Word size_bits,
                                       uintptr_t paddr, seL4_Word *cookie)
{
   172f8:	e92d4810 	push	{r4, fp, lr}
   172fc:	e28db008 	add	fp, sp, #8
   17300:	e24dd01c 	sub	sp, sp, #28
   17304:	e50b0010 	str	r0, [fp, #-16]
   17308:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1730c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   17310:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    if (!vka) {
   17314:	e51b3010 	ldr	r3, [fp, #-16]
   17318:	e3530000 	cmp	r3, #0
   1731c:	1a000012 	bne	1736c <vka_utspace_alloc_at+0x74>
        ZF_LOGE("vka is NULL");
   17320:	e3083104 	movw	r3, #33028	; 0x8104
   17324:	e3403004 	movt	r3, #4
   17328:	e5933000 	ldr	r3, [r3]
   1732c:	e3530005 	cmp	r3, #5
   17330:	ca00000b 	bgt	17364 <vka_utspace_alloc_at+0x6c>
   17334:	e3083910 	movw	r3, #35088	; 0x8910
   17338:	e3403002 	movt	r3, #2
   1733c:	e58d3004 	str	r3, [sp, #4]
   17340:	e3a03000 	mov	r3, #0
   17344:	e58d3000 	str	r3, [sp]
   17348:	e3a03005 	mov	r3, #5
   1734c:	e3002101 	movw	r2, #257	; 0x101
   17350:	e30818b0 	movw	r1, #34992	; 0x88b0
   17354:	e3401002 	movt	r1, #2
   17358:	e3080f08 	movw	r0, #36616	; 0x8f08
   1735c:	e3400002 	movt	r0, #2
   17360:	eb001b08 	bl	1df88 <_zf_log_write_d>
        return -1;
   17364:	e3e03000 	mvn	r3, #0
   17368:	ea000039 	b	17454 <vka_utspace_alloc_at+0x15c>
    }
    if (!cookie) {
   1736c:	e59b3008 	ldr	r3, [fp, #8]
   17370:	e3530000 	cmp	r3, #0
   17374:	1a000012 	bne	173c4 <vka_utspace_alloc_at+0xcc>
        ZF_LOGE("cookie is NULL");
   17378:	e3083104 	movw	r3, #33028	; 0x8104
   1737c:	e3403004 	movt	r3, #4
   17380:	e5933000 	ldr	r3, [r3]
   17384:	e3530005 	cmp	r3, #5
   17388:	ca00000b 	bgt	173bc <vka_utspace_alloc_at+0xc4>
   1738c:	e3083998 	movw	r3, #35224	; 0x8998
   17390:	e3403002 	movt	r3, #2
   17394:	e58d3004 	str	r3, [sp, #4]
   17398:	e3a03000 	mov	r3, #0
   1739c:	e58d3000 	str	r3, [sp]
   173a0:	e3a03005 	mov	r3, #5
   173a4:	e3002105 	movw	r2, #261	; 0x105
   173a8:	e30818b0 	movw	r1, #34992	; 0x88b0
   173ac:	e3401002 	movt	r1, #2
   173b0:	e3080f08 	movw	r0, #36616	; 0x8f08
   173b4:	e3400002 	movt	r0, #2
   173b8:	eb001af2 	bl	1df88 <_zf_log_write_d>
        return -1;
   173bc:	e3e03000 	mvn	r3, #0
   173c0:	ea000023 	b	17454 <vka_utspace_alloc_at+0x15c>
    }
    if (!vka->utspace_alloc_at) {
   173c4:	e51b3010 	ldr	r3, [fp, #-16]
   173c8:	e5933014 	ldr	r3, [r3, #20]
   173cc:	e3530000 	cmp	r3, #0
   173d0:	1a000012 	bne	17420 <vka_utspace_alloc_at+0x128>
        ZF_LOGE("Not implemented");
   173d4:	e3083104 	movw	r3, #33028	; 0x8104
   173d8:	e3403004 	movt	r3, #4
   173dc:	e5933000 	ldr	r3, [r3]
   173e0:	e3530005 	cmp	r3, #5
   173e4:	ca00000b 	bgt	17418 <vka_utspace_alloc_at+0x120>
   173e8:	e3083988 	movw	r3, #35208	; 0x8988
   173ec:	e3403002 	movt	r3, #2
   173f0:	e58d3004 	str	r3, [sp, #4]
   173f4:	e3a03000 	mov	r3, #0
   173f8:	e58d3000 	str	r3, [sp]
   173fc:	e3a03005 	mov	r3, #5
   17400:	e3002109 	movw	r2, #265	; 0x109
   17404:	e30818b0 	movw	r1, #34992	; 0x88b0
   17408:	e3401002 	movt	r1, #2
   1740c:	e3080f08 	movw	r0, #36616	; 0x8f08
   17410:	e3400002 	movt	r0, #2
   17414:	eb001adb 	bl	1df88 <_zf_log_write_d>
        return -1;
   17418:	e3e03000 	mvn	r3, #0
   1741c:	ea00000c 	b	17454 <vka_utspace_alloc_at+0x15c>
    }

    return vka->utspace_alloc_at(vka->data, dest, type, size_bits, paddr, cookie);
   17420:	e51b3010 	ldr	r3, [fp, #-16]
   17424:	e5934014 	ldr	r4, [r3, #20]
   17428:	e51b3010 	ldr	r3, [fp, #-16]
   1742c:	e5930000 	ldr	r0, [r3]
   17430:	e59b3008 	ldr	r3, [fp, #8]
   17434:	e58d3004 	str	r3, [sp, #4]
   17438:	e59b3004 	ldr	r3, [fp, #4]
   1743c:	e58d3000 	str	r3, [sp]
   17440:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   17444:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   17448:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1744c:	e12fff34 	blx	r4
   17450:	e1a03000 	mov	r3, r0
}
   17454:	e1a00003 	mov	r0, r3
   17458:	e24bd008 	sub	sp, fp, #8
   1745c:	e8bd8810 	pop	{r4, fp, pc}

00017460 <vka_utspace_free>:

static inline void vka_utspace_free(vka_t *vka, seL4_Word type, seL4_Word size_bits, seL4_Word target)
{
   17460:	e92d4810 	push	{r4, fp, lr}
   17464:	e28db008 	add	fp, sp, #8
   17468:	e24dd01c 	sub	sp, sp, #28
   1746c:	e50b0010 	str	r0, [fp, #-16]
   17470:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   17474:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   17478:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    if (!vka) {
   1747c:	e51b3010 	ldr	r3, [fp, #-16]
   17480:	e3530000 	cmp	r3, #0
   17484:	1a000011 	bne	174d0 <vka_utspace_free+0x70>
        ZF_LOGE("vka is NULL");
   17488:	e3083104 	movw	r3, #33028	; 0x8104
   1748c:	e3403004 	movt	r3, #4
   17490:	e5933000 	ldr	r3, [r3]
   17494:	e3530005 	cmp	r3, #5
   17498:	ca000032 	bgt	17568 <vka_utspace_free+0x108>
   1749c:	e3083910 	movw	r3, #35088	; 0x8910
   174a0:	e3403002 	movt	r3, #2
   174a4:	e58d3004 	str	r3, [sp, #4]
   174a8:	e3a03000 	mov	r3, #0
   174ac:	e58d3000 	str	r3, [sp]
   174b0:	e3a03005 	mov	r3, #5
   174b4:	e3002113 	movw	r2, #275	; 0x113
   174b8:	e30818b0 	movw	r1, #34992	; 0x88b0
   174bc:	e3401002 	movt	r1, #2
   174c0:	e3080fa8 	movw	r0, #36776	; 0x8fa8
   174c4:	e3400002 	movt	r0, #2
   174c8:	eb001aae 	bl	1df88 <_zf_log_write_d>
        return ;
   174cc:	ea000025 	b	17568 <vka_utspace_free+0x108>
    }

    if (!vka->utspace_free) {
   174d0:	e51b3010 	ldr	r3, [fp, #-16]
   174d4:	e593301c 	ldr	r3, [r3, #28]
   174d8:	e3530000 	cmp	r3, #0
   174dc:	1a000018 	bne	17544 <vka_utspace_free+0xe4>
#ifndef CONFIG_LIB_VKA_ALLOW_MEMORY_LEAKS
        ZF_LOGF("Not implemented");
   174e0:	e3083104 	movw	r3, #33028	; 0x8104
   174e4:	e3403004 	movt	r3, #4
   174e8:	e5933000 	ldr	r3, [r3]
   174ec:	e3530801 	cmp	r3, #65536	; 0x10000
   174f0:	aa00000b 	bge	17524 <vka_utspace_free+0xc4>
   174f4:	e3083988 	movw	r3, #35208	; 0x8988
   174f8:	e3403002 	movt	r3, #2
   174fc:	e58d3004 	str	r3, [sp, #4]
   17500:	e3a03000 	mov	r3, #0
   17504:	e58d3000 	str	r3, [sp]
   17508:	e30f3fff 	movw	r3, #65535	; 0xffff
   1750c:	e3002119 	movw	r2, #281	; 0x119
   17510:	e30818b0 	movw	r1, #34992	; 0x88b0
   17514:	e3401002 	movt	r1, #2
   17518:	e3080fa8 	movw	r0, #36776	; 0x8fa8
   1751c:	e3400002 	movt	r0, #2
   17520:	eb001a98 	bl	1df88 <_zf_log_write_d>
   17524:	e3083fa8 	movw	r3, #36776	; 0x8fa8
   17528:	e3403002 	movt	r3, #2
   1752c:	e3002119 	movw	r2, #281	; 0x119
   17530:	e30818b0 	movw	r1, #34992	; 0x88b0
   17534:	e3401002 	movt	r1, #2
   17538:	e3080938 	movw	r0, #35128	; 0x8938
   1753c:	e3400002 	movt	r0, #2
   17540:	eb001c09 	bl	1e56c <__assert_fail>
        /* This terminates the system */
#endif
        return;
    }

    vka->utspace_free(vka->data, type, size_bits, target);
   17544:	e51b3010 	ldr	r3, [fp, #-16]
   17548:	e593401c 	ldr	r4, [r3, #28]
   1754c:	e51b3010 	ldr	r3, [fp, #-16]
   17550:	e5930000 	ldr	r0, [r3]
   17554:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   17558:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1755c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   17560:	e12fff34 	blx	r4
   17564:	ea000000 	b	1756c <vka_utspace_free+0x10c>
        return ;
   17568:	e320f000 	nop	{0}
}
   1756c:	e24bd008 	sub	sp, fp, #8
   17570:	e8bd8810 	pop	{r4, fp, pc}

00017574 <arm_mode_kobject_get_type>:
        return 0;
    }
}

static inline seL4_Word arm_mode_kobject_get_type(kobject_t type, seL4_Word objectSize)
{
   17574:	e92d4800 	push	{fp, lr}
   17578:	e28db004 	add	fp, sp, #4
   1757c:	e24dd010 	sub	sp, sp, #16
   17580:	e50b0008 	str	r0, [fp, #-8]
   17584:	e50b100c 	str	r1, [fp, #-12]
    switch (type) {
   17588:	e51b3008 	ldr	r3, [fp, #-8]
   1758c:	e3530000 	cmp	r3, #0
   17590:	1a00000c 	bne	175c8 <arm_mode_kobject_get_type+0x54>
    case KOBJECT_FRAME:
        switch (objectSize) {
   17594:	e51b300c 	ldr	r3, [fp, #-12]
   17598:	e3530014 	cmp	r3, #20
   1759c:	0a000003 	beq	175b0 <arm_mode_kobject_get_type+0x3c>
   175a0:	e51b300c 	ldr	r3, [fp, #-12]
   175a4:	e3530018 	cmp	r3, #24
   175a8:	0a000002 	beq	175b8 <arm_mode_kobject_get_type+0x44>
   175ac:	ea000003 	b	175c0 <arm_mode_kobject_get_type+0x4c>
        case seL4_SectionBits:
            return seL4_ARM_SectionObject;
   175b0:	e3a03008 	mov	r3, #8
   175b4:	ea000015 	b	17610 <arm_mode_kobject_get_type+0x9c>
        case seL4_SuperSectionBits:
            return seL4_ARM_SuperSectionObject;
   175b8:	e3a03009 	mov	r3, #9
   175bc:	ea000013 	b	17610 <arm_mode_kobject_get_type+0x9c>
        default:
            return -1;
   175c0:	e3e03000 	mvn	r3, #0
   175c4:	ea000011 	b	17610 <arm_mode_kobject_get_type+0x9c>
        }
    default:
        /* Unknown object type. */
        ZF_LOGE("Unknown object type");
   175c8:	e3083104 	movw	r3, #33028	; 0x8104
   175cc:	e3403004 	movt	r3, #4
   175d0:	e5933000 	ldr	r3, [r3]
   175d4:	e3530005 	cmp	r3, #5
   175d8:	ca00000b 	bgt	1760c <arm_mode_kobject_get_type+0x98>
   175dc:	e3083a28 	movw	r3, #35368	; 0x8a28
   175e0:	e3403002 	movt	r3, #2
   175e4:	e58d3004 	str	r3, [sp, #4]
   175e8:	e3a03000 	mov	r3, #0
   175ec:	e58d3000 	str	r3, [sp]
   175f0:	e3a03005 	mov	r3, #5
   175f4:	e3a0203b 	mov	r2, #59	; 0x3b
   175f8:	e30819a8 	movw	r1, #35240	; 0x89a8
   175fc:	e3401002 	movt	r1, #2
   17600:	e3080eac 	movw	r0, #36524	; 0x8eac
   17604:	e3400002 	movt	r0, #2
   17608:	eb001a5e 	bl	1df88 <_zf_log_write_d>
        return -1;
   1760c:	e3e03000 	mvn	r3, #0
    }
}
   17610:	e1a00003 	mov	r0, r3
   17614:	e24bd004 	sub	sp, fp, #4
   17618:	e8bd8800 	pop	{fp, pc}

0001761c <arch_kobject_get_type>:
        return arm_mode_kobject_get_size(type, objectSize);
    }
}

static inline seL4_Word arch_kobject_get_type(kobject_t type, seL4_Word objectSize)
{
   1761c:	e92d4800 	push	{fp, lr}
   17620:	e28db004 	add	fp, sp, #4
   17624:	e24dd008 	sub	sp, sp, #8
   17628:	e50b0008 	str	r0, [fp, #-8]
   1762c:	e50b100c 	str	r1, [fp, #-12]
    switch (type) {
   17630:	e51b3008 	ldr	r3, [fp, #-8]
   17634:	e3530002 	cmp	r3, #2
   17638:	0a00000a 	beq	17668 <arch_kobject_get_type+0x4c>
   1763c:	e51b3008 	ldr	r3, [fp, #-8]
   17640:	e3530002 	cmp	r3, #2
   17644:	ca000019 	bgt	176b0 <arch_kobject_get_type+0x94>
   17648:	e51b3008 	ldr	r3, [fp, #-8]
   1764c:	e3530000 	cmp	r3, #0
   17650:	0a000006 	beq	17670 <arch_kobject_get_type+0x54>
   17654:	e51b3008 	ldr	r3, [fp, #-8]
   17658:	e3530001 	cmp	r3, #1
   1765c:	1a000013 	bne	176b0 <arch_kobject_get_type+0x94>
    case KOBJECT_PAGE_DIRECTORY:
        return seL4_ARM_PageDirectoryObject;
   17660:	e3a03005 	mov	r3, #5
   17664:	ea000015 	b	176c0 <arch_kobject_get_type+0xa4>
    case KOBJECT_PAGE_TABLE:
        return seL4_ARM_PageTableObject;
   17668:	e3a0300a 	mov	r3, #10
   1766c:	ea000013 	b	176c0 <arch_kobject_get_type+0xa4>
    /* ARM-specific frames. */
    case KOBJECT_FRAME:
        switch (objectSize) {
   17670:	e51b300c 	ldr	r3, [fp, #-12]
   17674:	e353000c 	cmp	r3, #12
   17678:	0a000003 	beq	1768c <arch_kobject_get_type+0x70>
   1767c:	e51b300c 	ldr	r3, [fp, #-12]
   17680:	e3530010 	cmp	r3, #16
   17684:	0a000002 	beq	17694 <arch_kobject_get_type+0x78>
   17688:	ea000003 	b	1769c <arch_kobject_get_type+0x80>
        case seL4_PageBits:
            return seL4_ARM_SmallPageObject;
   1768c:	e3a03006 	mov	r3, #6
   17690:	ea00000a 	b	176c0 <arch_kobject_get_type+0xa4>
        case seL4_LargePageBits:
            return seL4_ARM_LargePageObject;
   17694:	e3a03007 	mov	r3, #7
   17698:	ea000008 	b	176c0 <arch_kobject_get_type+0xa4>
        default:
            return arm_mode_kobject_get_type(type, objectSize);
   1769c:	e51b100c 	ldr	r1, [fp, #-12]
   176a0:	e51b0008 	ldr	r0, [fp, #-8]
   176a4:	ebffffb2 	bl	17574 <arm_mode_kobject_get_type>
   176a8:	e1a03000 	mov	r3, r0
   176ac:	ea000003 	b	176c0 <arch_kobject_get_type+0xa4>
        }
    default:
        return arm_mode_kobject_get_type(type, objectSize);
   176b0:	e51b100c 	ldr	r1, [fp, #-12]
   176b4:	e51b0008 	ldr	r0, [fp, #-8]
   176b8:	ebffffad 	bl	17574 <arm_mode_kobject_get_type>
   176bc:	e1a03000 	mov	r3, r0
    }
}
   176c0:	e1a00003 	mov	r0, r3
   176c4:	e24bd004 	sub	sp, fp, #4
   176c8:	e8bd8800 	pop	{fp, pc}

000176cc <kobject_get_type>:
        return arch_kobject_get_size(type, objectSize);
    }
}

static inline seL4_Word kobject_get_type(kobject_t type, seL4_Word objectSize)
{
   176cc:	e92d4800 	push	{fp, lr}
   176d0:	e28db004 	add	fp, sp, #4
   176d4:	e24dd008 	sub	sp, sp, #8
   176d8:	e50b0008 	str	r0, [fp, #-8]
   176dc:	e50b100c 	str	r1, [fp, #-12]
   176e0:	e51b3008 	ldr	r3, [fp, #-8]
   176e4:	e2433003 	sub	r3, r3, #3
   176e8:	e3530005 	cmp	r3, #5
   176ec:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   176f0:	ea000011 	b	1773c <kobject_get_type+0x70>
   176f4:	0001770c 	andeq	r7, r1, ip, lsl #14
   176f8:	00017714 	andeq	r7, r1, r4, lsl r7
   176fc:	0001771c 	andeq	r7, r1, ip, lsl r7
   17700:	00017724 	andeq	r7, r1, r4, lsr #14
   17704:	0001772c 	andeq	r7, r1, ip, lsr #14
   17708:	00017734 	andeq	r7, r1, r4, lsr r7
    switch (type) {
    /* Generic objects. */
    case KOBJECT_TCB:
        return seL4_TCBObject;
   1770c:	e3a03001 	mov	r3, #1
   17710:	ea00000d 	b	1774c <kobject_get_type+0x80>
    case KOBJECT_CNODE:
        return seL4_CapTableObject;
   17714:	e3a03004 	mov	r3, #4
   17718:	ea00000b 	b	1774c <kobject_get_type+0x80>
    case KOBJECT_CSLOT:
        return -1;
   1771c:	e3e03000 	mvn	r3, #0
   17720:	ea000009 	b	1774c <kobject_get_type+0x80>
    case KOBJECT_UNTYPED:
        return seL4_UntypedObject;
   17724:	e3a03000 	mov	r3, #0
   17728:	ea000007 	b	1774c <kobject_get_type+0x80>
    case KOBJECT_ENDPOINT:
        return seL4_EndpointObject;
   1772c:	e3a03002 	mov	r3, #2
   17730:	ea000005 	b	1774c <kobject_get_type+0x80>
    case KOBJECT_NOTIFICATION:
        return seL4_NotificationObject;
   17734:	e3a03003 	mov	r3, #3
   17738:	ea000003 	b	1774c <kobject_get_type+0x80>
#ifdef CONFIG_CACHE_COLORING
    case KOBJECT_KERNEL_IMAGE:
        return seL4_KernelImageObject;
#endif
    default:
        return arch_kobject_get_type(type, objectSize);
   1773c:	e51b100c 	ldr	r1, [fp, #-12]
   17740:	e51b0008 	ldr	r0, [fp, #-8]
   17744:	ebffffb4 	bl	1761c <arch_kobject_get_type>
   17748:	e1a03000 	mov	r3, r0
    }
}
   1774c:	e1a00003 	mov	r0, r3
   17750:	e24bd004 	sub	sp, fp, #4
   17754:	e8bd8800 	pop	{fp, pc}

00017758 <vka_alloc_object_at_maybe_dev>:
/*
 * Generic object allocator used by functions below, can also be used directly
 */
static inline int vka_alloc_object_at_maybe_dev(vka_t *vka, seL4_Word type, seL4_Word size_bits, uintptr_t paddr,
                                                bool can_use_dev, vka_object_t *result)
{
   17758:	e92d4800 	push	{fp, lr}
   1775c:	e28db004 	add	fp, sp, #4
   17760:	e24dd048 	sub	sp, sp, #72	; 0x48
   17764:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   17768:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
   1776c:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
   17770:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    int error = -1;
   17774:	e3e03000 	mvn	r3, #0
   17778:	e50b3008 	str	r3, [fp, #-8]
    if (!(type < seL4_ObjectTypeCount)) {
   1777c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   17780:	e353000a 	cmp	r3, #10
   17784:	9a000016 	bls	177e4 <vka_alloc_object_at_maybe_dev+0x8c>
        result->cptr = 0;
   17788:	e59b3008 	ldr	r3, [fp, #8]
   1778c:	e3a02000 	mov	r2, #0
   17790:	e5832000 	str	r2, [r3]
        ZF_LOGE("Unknown object type: %ld", (long) type);
   17794:	e3083104 	movw	r3, #33028	; 0x8104
   17798:	e3403004 	movt	r3, #4
   1779c:	e5933000 	ldr	r3, [r3]
   177a0:	e3530005 	cmp	r3, #5
   177a4:	ca000098 	bgt	17a0c <vka_alloc_object_at_maybe_dev+0x2b4>
   177a8:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   177ac:	e58d3008 	str	r3, [sp, #8]
   177b0:	e3083aa4 	movw	r3, #35492	; 0x8aa4
   177b4:	e3403002 	movt	r3, #2
   177b8:	e58d3004 	str	r3, [sp, #4]
   177bc:	e3a03000 	mov	r3, #0
   177c0:	e58d3000 	str	r3, [sp]
   177c4:	e3a03005 	mov	r3, #5
   177c8:	e3a02028 	mov	r2, #40	; 0x28
   177cc:	e3081a44 	movw	r1, #35396	; 0x8a44
   177d0:	e3401002 	movt	r1, #2
   177d4:	e3080ec8 	movw	r0, #36552	; 0x8ec8
   177d8:	e3400002 	movt	r0, #2
   177dc:	eb0019e9 	bl	1df88 <_zf_log_write_d>
        goto error;
   177e0:	ea000089 	b	17a0c <vka_alloc_object_at_maybe_dev+0x2b4>
    }

    error = vka_cspace_alloc(vka, &result->cptr);
   177e4:	e59b3008 	ldr	r3, [fp, #8]
   177e8:	e1a01003 	mov	r1, r3
   177ec:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   177f0:	ebfffd6a 	bl	16da0 <vka_cspace_alloc>
   177f4:	e50b0008 	str	r0, [fp, #-8]
    if (unlikely(error)) {
   177f8:	e51b3008 	ldr	r3, [fp, #-8]
   177fc:	e3530000 	cmp	r3, #0
   17800:	13a03001 	movne	r3, #1
   17804:	03a03000 	moveq	r3, #0
   17808:	e6ef3073 	uxtb	r3, r3
   1780c:	e3530000 	cmp	r3, #0
   17810:	0a000016 	beq	17870 <vka_alloc_object_at_maybe_dev+0x118>
        result->cptr = 0;
   17814:	e59b3008 	ldr	r3, [fp, #8]
   17818:	e3a02000 	mov	r2, #0
   1781c:	e5832000 	str	r2, [r3]
        ZF_LOGE("Failed to allocate cslot: error %d", error);
   17820:	e3083104 	movw	r3, #33028	; 0x8104
   17824:	e3403004 	movt	r3, #4
   17828:	e5933000 	ldr	r3, [r3]
   1782c:	e3530005 	cmp	r3, #5
   17830:	ca000077 	bgt	17a14 <vka_alloc_object_at_maybe_dev+0x2bc>
   17834:	e51b3008 	ldr	r3, [fp, #-8]
   17838:	e58d3008 	str	r3, [sp, #8]
   1783c:	e3083ac0 	movw	r3, #35520	; 0x8ac0
   17840:	e3403002 	movt	r3, #2
   17844:	e58d3004 	str	r3, [sp, #4]
   17848:	e3a03000 	mov	r3, #0
   1784c:	e58d3000 	str	r3, [sp]
   17850:	e3a03005 	mov	r3, #5
   17854:	e3a0202f 	mov	r2, #47	; 0x2f
   17858:	e3081a44 	movw	r1, #35396	; 0x8a44
   1785c:	e3401002 	movt	r1, #2
   17860:	e3080ec8 	movw	r0, #36552	; 0x8ec8
   17864:	e3400002 	movt	r0, #2
   17868:	eb0019c6 	bl	1df88 <_zf_log_write_d>
        goto error;
   1786c:	ea000068 	b	17a14 <vka_alloc_object_at_maybe_dev+0x2bc>
    }

    cspacepath_t path;
    vka_cspace_make_path(vka, result->cptr, &path);
   17870:	e59b3008 	ldr	r3, [fp, #8]
   17874:	e5933000 	ldr	r3, [r3]
   17878:	e24b2024 	sub	r2, fp, #36	; 0x24
   1787c:	e1a01003 	mov	r1, r3
   17880:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   17884:	ebfffd98 	bl	16eec <vka_cspace_make_path>

    if (paddr == VKA_NO_PADDR) {
   17888:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   1788c:	e3530001 	cmp	r3, #1
   17890:	1a000029 	bne	1793c <vka_alloc_object_at_maybe_dev+0x1e4>
        error = vka_utspace_alloc_maybe_device(vka, &path, type, size_bits, can_use_dev, &result->ut);
   17894:	e59b3008 	ldr	r3, [fp, #8]
   17898:	e2833004 	add	r3, r3, #4
   1789c:	e24b1024 	sub	r1, fp, #36	; 0x24
   178a0:	e58d3004 	str	r3, [sp, #4]
   178a4:	e5db3004 	ldrb	r3, [fp, #4]
   178a8:	e58d3000 	str	r3, [sp]
   178ac:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   178b0:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
   178b4:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   178b8:	ebfffe34 	bl	17190 <vka_utspace_alloc_maybe_device>
   178bc:	e50b0008 	str	r0, [fp, #-8]
        if (unlikely(error)) {
   178c0:	e51b3008 	ldr	r3, [fp, #-8]
   178c4:	e3530000 	cmp	r3, #0
   178c8:	13a03001 	movne	r3, #1
   178cc:	03a03000 	moveq	r3, #0
   178d0:	e6ef3073 	uxtb	r3, r3
   178d4:	e3530000 	cmp	r3, #0
   178d8:	0a000043 	beq	179ec <vka_alloc_object_at_maybe_dev+0x294>
            ZF_LOGE("Failed to allocate object of size %lu, error %d",
   178dc:	e3083104 	movw	r3, #33028	; 0x8104
   178e0:	e3403004 	movt	r3, #4
   178e4:	e5933000 	ldr	r3, [r3]
   178e8:	e3530005 	cmp	r3, #5
   178ec:	ca00004a 	bgt	17a1c <vka_alloc_object_at_maybe_dev+0x2c4>
   178f0:	e3a02001 	mov	r2, #1
   178f4:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   178f8:	e1a03312 	lsl	r3, r2, r3
   178fc:	e51b2008 	ldr	r2, [fp, #-8]
   17900:	e58d200c 	str	r2, [sp, #12]
   17904:	e58d3008 	str	r3, [sp, #8]
   17908:	e3083ae4 	movw	r3, #35556	; 0x8ae4
   1790c:	e3403002 	movt	r3, #2
   17910:	e58d3004 	str	r3, [sp, #4]
   17914:	e3a03000 	mov	r3, #0
   17918:	e58d3000 	str	r3, [sp]
   1791c:	e3a03005 	mov	r3, #5
   17920:	e3a02039 	mov	r2, #57	; 0x39
   17924:	e3081a44 	movw	r1, #35396	; 0x8a44
   17928:	e3401002 	movt	r1, #2
   1792c:	e3080ec8 	movw	r0, #36552	; 0x8ec8
   17930:	e3400002 	movt	r0, #2
   17934:	eb001993 	bl	1df88 <_zf_log_write_d>
                    BIT(size_bits), error);
            goto error;
   17938:	ea000037 	b	17a1c <vka_alloc_object_at_maybe_dev+0x2c4>
        }
    } else {
        error = vka_utspace_alloc_at(vka, &path, type, size_bits, paddr, &result->ut);
   1793c:	e59b3008 	ldr	r3, [fp, #8]
   17940:	e2833004 	add	r3, r3, #4
   17944:	e24b1024 	sub	r1, fp, #36	; 0x24
   17948:	e58d3004 	str	r3, [sp, #4]
   1794c:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   17950:	e58d3000 	str	r3, [sp]
   17954:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   17958:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
   1795c:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   17960:	ebfffe64 	bl	172f8 <vka_utspace_alloc_at>
   17964:	e50b0008 	str	r0, [fp, #-8]
        if (unlikely(error)) {
   17968:	e51b3008 	ldr	r3, [fp, #-8]
   1796c:	e3530000 	cmp	r3, #0
   17970:	13a03001 	movne	r3, #1
   17974:	03a03000 	moveq	r3, #0
   17978:	e6ef3073 	uxtb	r3, r3
   1797c:	e3530000 	cmp	r3, #0
   17980:	0a000019 	beq	179ec <vka_alloc_object_at_maybe_dev+0x294>
            ZF_LOGE("Failed to allocate object of size %lu at paddr %p, error %d",
   17984:	e3083104 	movw	r3, #33028	; 0x8104
   17988:	e3403004 	movt	r3, #4
   1798c:	e5933000 	ldr	r3, [r3]
   17990:	e3530005 	cmp	r3, #5
   17994:	ca000022 	bgt	17a24 <vka_alloc_object_at_maybe_dev+0x2cc>
   17998:	e3a02001 	mov	r2, #1
   1799c:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   179a0:	e1a03312 	lsl	r3, r2, r3
   179a4:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
   179a8:	e51b1008 	ldr	r1, [fp, #-8]
   179ac:	e58d1010 	str	r1, [sp, #16]
   179b0:	e58d200c 	str	r2, [sp, #12]
   179b4:	e58d3008 	str	r3, [sp, #8]
   179b8:	e3083b14 	movw	r3, #35604	; 0x8b14
   179bc:	e3403002 	movt	r3, #2
   179c0:	e58d3004 	str	r3, [sp, #4]
   179c4:	e3a03000 	mov	r3, #0
   179c8:	e58d3000 	str	r3, [sp]
   179cc:	e3a03005 	mov	r3, #5
   179d0:	e3a02040 	mov	r2, #64	; 0x40
   179d4:	e3081a44 	movw	r1, #35396	; 0x8a44
   179d8:	e3401002 	movt	r1, #2
   179dc:	e3080ec8 	movw	r0, #36552	; 0x8ec8
   179e0:	e3400002 	movt	r0, #2
   179e4:	eb001967 	bl	1df88 <_zf_log_write_d>
                    BIT(size_bits), (void *)paddr, error);
            goto error;
   179e8:	ea00000d 	b	17a24 <vka_alloc_object_at_maybe_dev+0x2cc>
        }
    }

    result->type = type;
   179ec:	e59b3008 	ldr	r3, [fp, #8]
   179f0:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
   179f4:	e5832008 	str	r2, [r3, #8]
    result->size_bits = size_bits;
   179f8:	e59b3008 	ldr	r3, [fp, #8]
   179fc:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
   17a00:	e583200c 	str	r2, [r3, #12]
    return 0;
   17a04:	e3a03000 	mov	r3, #0
   17a08:	ea000014 	b	17a60 <vka_alloc_object_at_maybe_dev+0x308>
        goto error;
   17a0c:	e320f000 	nop	{0}
   17a10:	ea000004 	b	17a28 <vka_alloc_object_at_maybe_dev+0x2d0>
        goto error;
   17a14:	e320f000 	nop	{0}
   17a18:	ea000002 	b	17a28 <vka_alloc_object_at_maybe_dev+0x2d0>
            goto error;
   17a1c:	e320f000 	nop	{0}
   17a20:	ea000000 	b	17a28 <vka_alloc_object_at_maybe_dev+0x2d0>
            goto error;
   17a24:	e320f000 	nop	{0}

error:
    if (result->cptr) {
   17a28:	e59b3008 	ldr	r3, [fp, #8]
   17a2c:	e5933000 	ldr	r3, [r3]
   17a30:	e3530000 	cmp	r3, #0
   17a34:	0a000004 	beq	17a4c <vka_alloc_object_at_maybe_dev+0x2f4>
        vka_cspace_free(vka, result->cptr);
   17a38:	e59b3008 	ldr	r3, [fp, #8]
   17a3c:	e5933000 	ldr	r3, [r3]
   17a40:	e1a01003 	mov	r1, r3
   17a44:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   17a48:	ebfffd8c 	bl	17080 <vka_cspace_free>
    }
    /* don't return garbage to the caller */
    memset(result, 0, sizeof(*result));
   17a4c:	e3a02010 	mov	r2, #16
   17a50:	e3a01000 	mov	r1, #0
   17a54:	e59b0008 	ldr	r0, [fp, #8]
   17a58:	eb0028a6 	bl	21cf8 <memset>
    return error;
   17a5c:	e51b3008 	ldr	r3, [fp, #-8]
}
   17a60:	e1a00003 	mov	r0, r3
   17a64:	e24bd004 	sub	sp, fp, #4
   17a68:	e8bd8800 	pop	{fp, pc}

00017a6c <vka_alloc_object_at>:

static inline int vka_alloc_object_at(vka_t *vka, seL4_Word type, seL4_Word size_bits, uintptr_t paddr,
                                      vka_object_t *result)
{
   17a6c:	e92d4800 	push	{fp, lr}
   17a70:	e28db004 	add	fp, sp, #4
   17a74:	e24dd018 	sub	sp, sp, #24
   17a78:	e50b0008 	str	r0, [fp, #-8]
   17a7c:	e50b100c 	str	r1, [fp, #-12]
   17a80:	e50b2010 	str	r2, [fp, #-16]
   17a84:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    return vka_alloc_object_at_maybe_dev(vka, type, size_bits, paddr, false, result);
   17a88:	e59b3004 	ldr	r3, [fp, #4]
   17a8c:	e58d3004 	str	r3, [sp, #4]
   17a90:	e3a03000 	mov	r3, #0
   17a94:	e58d3000 	str	r3, [sp]
   17a98:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   17a9c:	e51b2010 	ldr	r2, [fp, #-16]
   17aa0:	e51b100c 	ldr	r1, [fp, #-12]
   17aa4:	e51b0008 	ldr	r0, [fp, #-8]
   17aa8:	ebffff2a 	bl	17758 <vka_alloc_object_at_maybe_dev>
   17aac:	e1a03000 	mov	r3, r0
}
   17ab0:	e1a00003 	mov	r0, r3
   17ab4:	e24bd004 	sub	sp, fp, #4
   17ab8:	e8bd8800 	pop	{fp, pc}

00017abc <vka_free_object>:
    vka_object_t result = {.cptr = 0, .ut = 0, .type = 0, .size_bits = 0};
    return vka_alloc_object(vka, type, size_bits, &result) == -1 ? 0 : result.cptr;
}

static inline void vka_free_object(vka_t *vka, vka_object_t *object)
{
   17abc:	e92d4800 	push	{fp, lr}
   17ac0:	e28db004 	add	fp, sp, #4
   17ac4:	e24dd030 	sub	sp, sp, #48	; 0x30
   17ac8:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   17acc:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
    cspacepath_t path;
    vka_cspace_make_path(vka, object->cptr, &path);
   17ad0:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ad4:	e5933000 	ldr	r3, [r3]
   17ad8:	e24b2020 	sub	r2, fp, #32
   17adc:	e1a01003 	mov	r1, r3
   17ae0:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ae4:	ebfffd00 	bl	16eec <vka_cspace_make_path>

    if (path.capPtr == 0) {
   17ae8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   17aec:	e3530000 	cmp	r3, #0
   17af0:	1a000011 	bne	17b3c <vka_free_object+0x80>
        ZF_LOGE("Failed to create cspace path to object");
   17af4:	e3083104 	movw	r3, #33028	; 0x8104
   17af8:	e3403004 	movt	r3, #4
   17afc:	e5933000 	ldr	r3, [r3]
   17b00:	e3530005 	cmp	r3, #5
   17b04:	ca000020 	bgt	17b8c <vka_free_object+0xd0>
   17b08:	e3083b50 	movw	r3, #35664	; 0x8b50
   17b0c:	e3403002 	movt	r3, #2
   17b10:	e58d3004 	str	r3, [sp, #4]
   17b14:	e3a03000 	mov	r3, #0
   17b18:	e58d3000 	str	r3, [sp]
   17b1c:	e3a03005 	mov	r3, #5
   17b20:	e3a0206c 	mov	r2, #108	; 0x6c
   17b24:	e3081a44 	movw	r1, #35396	; 0x8a44
   17b28:	e3401002 	movt	r1, #2
   17b2c:	e3080f80 	movw	r0, #36736	; 0x8f80
   17b30:	e3400002 	movt	r0, #2
   17b34:	eb001913 	bl	1df88 <_zf_log_write_d>
   17b38:	ea000014 	b	17b90 <vka_free_object+0xd4>
        return;
    }

    /* ignore any errors */
    seL4_CNode_Delete(path.root, path.capPtr, path.capDepth);
   17b3c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   17b40:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   17b44:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   17b48:	e6ef2072 	uxtb	r2, r2
   17b4c:	e1a00003 	mov	r0, r3
   17b50:	ebfffbfe 	bl	16b50 <seL4_CNode_Delete>

    vka_cspace_free(vka, object->cptr);
   17b54:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   17b58:	e5933000 	ldr	r3, [r3]
   17b5c:	e1a01003 	mov	r1, r3
   17b60:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b64:	ebfffd45 	bl	17080 <vka_cspace_free>
    vka_utspace_free(vka, object->type, object->size_bits, object->ut);
   17b68:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   17b6c:	e5931008 	ldr	r1, [r3, #8]
   17b70:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   17b74:	e593200c 	ldr	r2, [r3, #12]
   17b78:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   17b7c:	e5933004 	ldr	r3, [r3, #4]
   17b80:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   17b84:	ebfffe35 	bl	17460 <vka_utspace_free>
   17b88:	ea000000 	b	17b90 <vka_free_object+0xd4>
        return;
   17b8c:	e320f000 	nop	{0}
}
   17b90:	e24bd004 	sub	sp, fp, #4
   17b94:	e8bd8800 	pop	{fp, pc}

00017b98 <vka_alloc_frame_at>:
                                         size_bits, VKA_NO_PADDR, can_use_dev, result);
}

static inline int vka_alloc_frame_at(vka_t *vka, uint32_t size_bits, uintptr_t paddr,
                                     vka_object_t *result)
{
   17b98:	e92d4800 	push	{fp, lr}
   17b9c:	e28db004 	add	fp, sp, #4
   17ba0:	e24dd018 	sub	sp, sp, #24
   17ba4:	e50b0008 	str	r0, [fp, #-8]
   17ba8:	e50b100c 	str	r1, [fp, #-12]
   17bac:	e50b2010 	str	r2, [fp, #-16]
   17bb0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    return vka_alloc_object_at(vka, kobject_get_type(KOBJECT_FRAME, size_bits), size_bits,
   17bb4:	e51b100c 	ldr	r1, [fp, #-12]
   17bb8:	e3a00000 	mov	r0, #0
   17bbc:	ebfffec2 	bl	176cc <kobject_get_type>
   17bc0:	e1a01000 	mov	r1, r0
   17bc4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   17bc8:	e58d3000 	str	r3, [sp]
   17bcc:	e51b3010 	ldr	r3, [fp, #-16]
   17bd0:	e51b200c 	ldr	r2, [fp, #-12]
   17bd4:	e51b0008 	ldr	r0, [fp, #-8]
   17bd8:	ebffffa3 	bl	17a6c <vka_alloc_object_at>
   17bdc:	e1a03000 	mov	r3, r0
                               paddr, result);
}
   17be0:	e1a00003 	mov	r0, r3
   17be4:	e24bd004 	sub	sp, fp, #4
   17be8:	e8bd8800 	pop	{fp, pc}

00017bec <sel4_valid_size_bits>:
{
   17bec:	e92d4800 	push	{fp, lr}
   17bf0:	e28db004 	add	fp, sp, #4
   17bf4:	e24dd010 	sub	sp, sp, #16
   17bf8:	e50b0010 	str	r0, [fp, #-16]
    for (int i = 0; i < SEL4_NUM_PAGE_SIZES && size_bits >= sel4_page_sizes[i]; i++) {
   17bfc:	e3a03000 	mov	r3, #0
   17c00:	e50b3008 	str	r3, [fp, #-8]
   17c04:	ea000021 	b	17c90 <sel4_valid_size_bits+0xa4>
        if (i > 0) {
   17c08:	e51b3008 	ldr	r3, [fp, #-8]
   17c0c:	e3530000 	cmp	r3, #0
   17c10:	da000012 	ble	17c60 <sel4_valid_size_bits+0x74>
            assert(sel4_page_sizes[i - 1] < sel4_page_sizes[i]);
   17c14:	e51b3008 	ldr	r3, [fp, #-8]
   17c18:	e2432001 	sub	r2, r3, #1
   17c1c:	e3083b78 	movw	r3, #35704	; 0x8b78
   17c20:	e3403002 	movt	r3, #2
   17c24:	e7932102 	ldr	r2, [r3, r2, lsl #2]
   17c28:	e3083b78 	movw	r3, #35704	; 0x8b78
   17c2c:	e3403002 	movt	r3, #2
   17c30:	e51b1008 	ldr	r1, [fp, #-8]
   17c34:	e7933101 	ldr	r3, [r3, r1, lsl #2]
   17c38:	e1520003 	cmp	r2, r3
   17c3c:	3a000007 	bcc	17c60 <sel4_valid_size_bits+0x74>
   17c40:	e3083f68 	movw	r3, #36712	; 0x8f68
   17c44:	e3403002 	movt	r3, #2
   17c48:	e3a02017 	mov	r2, #23
   17c4c:	e3081b88 	movw	r1, #35720	; 0x8b88
   17c50:	e3401002 	movt	r1, #2
   17c54:	e3080bec 	movw	r0, #35820	; 0x8bec
   17c58:	e3400002 	movt	r0, #2
   17c5c:	eb001a42 	bl	1e56c <__assert_fail>
        if (size_bits == sel4_page_sizes[i]) {
   17c60:	e3083b78 	movw	r3, #35704	; 0x8b78
   17c64:	e3403002 	movt	r3, #2
   17c68:	e51b2008 	ldr	r2, [fp, #-8]
   17c6c:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   17c70:	e51b2010 	ldr	r2, [fp, #-16]
   17c74:	e1520003 	cmp	r2, r3
   17c78:	1a000001 	bne	17c84 <sel4_valid_size_bits+0x98>
            return true;
   17c7c:	e3a03001 	mov	r3, #1
   17c80:	ea00000d 	b	17cbc <sel4_valid_size_bits+0xd0>
    for (int i = 0; i < SEL4_NUM_PAGE_SIZES && size_bits >= sel4_page_sizes[i]; i++) {
   17c84:	e51b3008 	ldr	r3, [fp, #-8]
   17c88:	e2833001 	add	r3, r3, #1
   17c8c:	e50b3008 	str	r3, [fp, #-8]
   17c90:	e51b3008 	ldr	r3, [fp, #-8]
   17c94:	e3530003 	cmp	r3, #3
   17c98:	ca000006 	bgt	17cb8 <sel4_valid_size_bits+0xcc>
   17c9c:	e3083b78 	movw	r3, #35704	; 0x8b78
   17ca0:	e3403002 	movt	r3, #2
   17ca4:	e51b2008 	ldr	r2, [fp, #-8]
   17ca8:	e7933102 	ldr	r3, [r3, r2, lsl #2]
   17cac:	e51b2010 	ldr	r2, [fp, #-16]
   17cb0:	e1520003 	cmp	r2, r3
   17cb4:	2affffd3 	bcs	17c08 <sel4_valid_size_bits+0x1c>
    return false;
   17cb8:	e3a03000 	mov	r3, #0
}
   17cbc:	e1a00003 	mov	r0, r3
   17cc0:	e24bd004 	sub	sp, fp, #4
   17cc4:	e8bd8800 	pop	{fp, pc}

00017cc8 <vspace_map_pages>:
{
   17cc8:	e92d4810 	push	{r4, fp, lr}
   17ccc:	e28db008 	add	fp, sp, #8
   17cd0:	e24dd024 	sub	sp, sp, #36	; 0x24
   17cd4:	e50b0010 	str	r0, [fp, #-16]
   17cd8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   17cdc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   17ce0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    if (vspace == NULL) {
   17ce4:	e51b3010 	ldr	r3, [fp, #-16]
   17ce8:	e3530000 	cmp	r3, #0
   17cec:	1a000012 	bne	17d3c <vspace_map_pages+0x74>
        ZF_LOGE("vspace is NULL.");
   17cf0:	e3083104 	movw	r3, #33028	; 0x8104
   17cf4:	e3403004 	movt	r3, #4
   17cf8:	e5933000 	ldr	r3, [r3]
   17cfc:	e3530005 	cmp	r3, #5
   17d00:	ca00000b 	bgt	17d34 <vspace_map_pages+0x6c>
   17d04:	e3083c80 	movw	r3, #35968	; 0x8c80
   17d08:	e3403002 	movt	r3, #2
   17d0c:	e58d3004 	str	r3, [sp, #4]
   17d10:	e3a03000 	mov	r3, #0
   17d14:	e58d3000 	str	r3, [sp]
   17d18:	e3a03005 	mov	r3, #5
   17d1c:	e300222a 	movw	r2, #554	; 0x22a
   17d20:	e3081c18 	movw	r1, #35864	; 0x8c18
   17d24:	e3401002 	movt	r1, #2
   17d28:	e3080f54 	movw	r0, #36692	; 0x8f54
   17d2c:	e3400002 	movt	r0, #2
   17d30:	eb001894 	bl	1df88 <_zf_log_write_d>
        return NULL;
   17d34:	e3a03000 	mov	r3, #0
   17d38:	ea000056 	b	17e98 <vspace_map_pages+0x1d0>
    if (vspace->new_pages == NULL) {
   17d3c:	e51b3010 	ldr	r3, [fp, #-16]
   17d40:	e5933004 	ldr	r3, [r3, #4]
   17d44:	e3530000 	cmp	r3, #0
   17d48:	1a000012 	bne	17d98 <vspace_map_pages+0xd0>
        ZF_LOGE("Supplied vspace doesn't implement map_pages().");
   17d4c:	e3083104 	movw	r3, #33028	; 0x8104
   17d50:	e3403004 	movt	r3, #4
   17d54:	e5933000 	ldr	r3, [r3]
   17d58:	e3530005 	cmp	r3, #5
   17d5c:	ca00000b 	bgt	17d90 <vspace_map_pages+0xc8>
   17d60:	e3083c90 	movw	r3, #35984	; 0x8c90
   17d64:	e3403002 	movt	r3, #2
   17d68:	e58d3004 	str	r3, [sp, #4]
   17d6c:	e3a03000 	mov	r3, #0
   17d70:	e58d3000 	str	r3, [sp]
   17d74:	e3a03005 	mov	r3, #5
   17d78:	e300222e 	movw	r2, #558	; 0x22e
   17d7c:	e3081c18 	movw	r1, #35864	; 0x8c18
   17d80:	e3401002 	movt	r1, #2
   17d84:	e3080f54 	movw	r0, #36692	; 0x8f54
   17d88:	e3400002 	movt	r0, #2
   17d8c:	eb00187d 	bl	1df88 <_zf_log_write_d>
        return NULL;
   17d90:	e3a03000 	mov	r3, #0
   17d94:	ea00003f 	b	17e98 <vspace_map_pages+0x1d0>
    if (num_pages == 0) {
   17d98:	e59b3004 	ldr	r3, [fp, #4]
   17d9c:	e3530000 	cmp	r3, #0
   17da0:	1a000012 	bne	17df0 <vspace_map_pages+0x128>
        ZF_LOGE("Called with num_pages == 0. Intentional?");
   17da4:	e3083104 	movw	r3, #33028	; 0x8104
   17da8:	e3403004 	movt	r3, #4
   17dac:	e5933000 	ldr	r3, [r3]
   17db0:	e3530005 	cmp	r3, #5
   17db4:	ca00000b 	bgt	17de8 <vspace_map_pages+0x120>
   17db8:	e3083cc0 	movw	r3, #36032	; 0x8cc0
   17dbc:	e3403002 	movt	r3, #2
   17dc0:	e58d3004 	str	r3, [sp, #4]
   17dc4:	e3a03000 	mov	r3, #0
   17dc8:	e58d3000 	str	r3, [sp]
   17dcc:	e3a03005 	mov	r3, #5
   17dd0:	e3002232 	movw	r2, #562	; 0x232
   17dd4:	e3081c18 	movw	r1, #35864	; 0x8c18
   17dd8:	e3401002 	movt	r1, #2
   17ddc:	e3080f54 	movw	r0, #36692	; 0x8f54
   17de0:	e3400002 	movt	r0, #2
   17de4:	eb001867 	bl	1df88 <_zf_log_write_d>
        return NULL;
   17de8:	e3a03000 	mov	r3, #0
   17dec:	ea000029 	b	17e98 <vspace_map_pages+0x1d0>
    if (!sel4_valid_size_bits(size_bits)) {
   17df0:	e59b0008 	ldr	r0, [fp, #8]
   17df4:	ebffff7c 	bl	17bec <sel4_valid_size_bits>
   17df8:	e1a03000 	mov	r3, r0
   17dfc:	e2233001 	eor	r3, r3, #1
   17e00:	e6ef3073 	uxtb	r3, r3
   17e04:	e3530000 	cmp	r3, #0
   17e08:	0a000014 	beq	17e60 <vspace_map_pages+0x198>
        ZF_LOGE("Invalid size_bits %zu", size_bits);
   17e0c:	e3083104 	movw	r3, #33028	; 0x8104
   17e10:	e3403004 	movt	r3, #4
   17e14:	e5933000 	ldr	r3, [r3]
   17e18:	e3530005 	cmp	r3, #5
   17e1c:	ca00000d 	bgt	17e58 <vspace_map_pages+0x190>
   17e20:	e59b3008 	ldr	r3, [fp, #8]
   17e24:	e58d3008 	str	r3, [sp, #8]
   17e28:	e3083cec 	movw	r3, #36076	; 0x8cec
   17e2c:	e3403002 	movt	r3, #2
   17e30:	e58d3004 	str	r3, [sp, #4]
   17e34:	e3a03000 	mov	r3, #0
   17e38:	e58d3000 	str	r3, [sp]
   17e3c:	e3a03005 	mov	r3, #5
   17e40:	e3002236 	movw	r2, #566	; 0x236
   17e44:	e3081c18 	movw	r1, #35864	; 0x8c18
   17e48:	e3401002 	movt	r1, #2
   17e4c:	e3080f54 	movw	r0, #36692	; 0x8f54
   17e50:	e3400002 	movt	r0, #2
   17e54:	eb00184b 	bl	1df88 <_zf_log_write_d>
        return NULL;
   17e58:	e3a03000 	mov	r3, #0
   17e5c:	ea00000d 	b	17e98 <vspace_map_pages+0x1d0>
    return vspace->map_pages(vspace, caps, cookies, rights,
   17e60:	e51b3010 	ldr	r3, [fp, #-16]
   17e64:	e5934008 	ldr	r4, [r3, #8]
   17e68:	e59b300c 	ldr	r3, [fp, #12]
   17e6c:	e58d3008 	str	r3, [sp, #8]
   17e70:	e59b3008 	ldr	r3, [fp, #8]
   17e74:	e58d3004 	str	r3, [sp, #4]
   17e78:	e59b3004 	ldr	r3, [fp, #4]
   17e7c:	e58d3000 	str	r3, [sp]
   17e80:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   17e84:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   17e88:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   17e8c:	e51b0010 	ldr	r0, [fp, #-16]
   17e90:	e12fff34 	blx	r4
   17e94:	e1a03000 	mov	r3, r0
}
   17e98:	e1a00003 	mov	r0, r3
   17e9c:	e24bd008 	sub	sp, fp, #8
   17ea0:	e8bd8810 	pop	{r4, fp, pc}

00017ea4 <sel4platsupport_copy_irq_cap>:
#include <stddef.h>
#include <vka/capops.h>
#include <utils/util.h>

seL4_Error sel4platsupport_copy_irq_cap(vka_t *vka, simple_t *simple, ps_irq_t *irq, cspacepath_t *dest)
{
   17ea4:	e92d4830 	push	{r4, r5, fp, lr}
   17ea8:	e28db00c 	add	fp, sp, #12
   17eac:	e24dd030 	sub	sp, sp, #48	; 0x30
   17eb0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   17eb4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   17eb8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   17ebc:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    seL4_CPtr cap;

    /* allocate a cslot for the irq cap */
    int error = vka_cspace_alloc(vka, &cap);
   17ec0:	e24b3014 	sub	r3, fp, #20
   17ec4:	e1a01003 	mov	r1, r3
   17ec8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ecc:	ebfffbb3 	bl	16da0 <vka_cspace_alloc>
   17ed0:	e50b0010 	str	r0, [fp, #-16]
    if (error != 0) {
   17ed4:	e51b3010 	ldr	r3, [fp, #-16]
   17ed8:	e3530000 	cmp	r3, #0
   17edc:	0a000012 	beq	17f2c <sel4platsupport_copy_irq_cap+0x88>
        ZF_LOGE("Failed to allocate cslot for irq");
   17ee0:	e3083104 	movw	r3, #33028	; 0x8104
   17ee4:	e3403004 	movt	r3, #4
   17ee8:	e5933000 	ldr	r3, [r3]
   17eec:	e3530005 	cmp	r3, #5
   17ef0:	ca00000b 	bgt	17f24 <sel4platsupport_copy_irq_cap+0x80>
   17ef4:	e3083d64 	movw	r3, #36196	; 0x8d64
   17ef8:	e3403002 	movt	r3, #2
   17efc:	e58d3004 	str	r3, [sp, #4]
   17f00:	e3a03000 	mov	r3, #0
   17f04:	e58d3000 	str	r3, [sp]
   17f08:	e3a03005 	mov	r3, #5
   17f0c:	e3a02016 	mov	r2, #22
   17f10:	e3081d04 	movw	r1, #36100	; 0x8d04
   17f14:	e3401002 	movt	r1, #2
   17f18:	e3080e00 	movw	r0, #36352	; 0x8e00
   17f1c:	e3400002 	movt	r0, #2
   17f20:	eb001818 	bl	1df88 <_zf_log_write_d>
        return error;
   17f24:	e51b3010 	ldr	r3, [fp, #-16]
   17f28:	ea000044 	b	18040 <sel4platsupport_copy_irq_cap+0x19c>
    }

    vka_cspace_make_path(vka, cap, dest);
   17f2c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   17f30:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   17f34:	e1a01003 	mov	r1, r3
   17f38:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f3c:	ebfffbea 	bl	16eec <vka_cspace_make_path>
    assert(irq->type != PS_NONE);
   17f40:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f44:	e5933000 	ldr	r3, [r3]
   17f48:	e3530000 	cmp	r3, #0
   17f4c:	1a000007 	bne	17f70 <sel4platsupport_copy_irq_cap+0xcc>
   17f50:	e3083e00 	movw	r3, #36352	; 0x8e00
   17f54:	e3403002 	movt	r3, #2
   17f58:	e3a0201b 	mov	r2, #27
   17f5c:	e3081d04 	movw	r1, #36100	; 0x8d04
   17f60:	e3401002 	movt	r1, #2
   17f64:	e3080d88 	movw	r0, #36232	; 0x8d88
   17f68:	e3400002 	movt	r0, #2
   17f6c:	eb00197e 	bl	1e56c <__assert_fail>
    if (irq->type == PS_INTERRUPT) {
   17f70:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f74:	e5933000 	ldr	r3, [r3]
   17f78:	e3530003 	cmp	r3, #3
   17f7c:	1a00000f 	bne	17fc0 <sel4platsupport_copy_irq_cap+0x11c>
        error = simple_get_IRQ_handler(simple, irq->irq.number, *dest);
   17f80:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   17f84:	e5935004 	ldr	r5, [r3, #4]
   17f88:	e51b4024 	ldr	r4, [fp, #-36]	; 0xffffffdc
   17f8c:	e1a0e00d 	mov	lr, sp
   17f90:	e284c008 	add	ip, r4, #8
   17f94:	e8bc000f 	ldm	ip!, {r0, r1, r2, r3}
   17f98:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
   17f9c:	e59c3000 	ldr	r3, [ip]
   17fa0:	e58e3000 	str	r3, [lr]
   17fa4:	e894000c 	ldm	r4, {r2, r3}
   17fa8:	e1a01005 	mov	r1, r5
   17fac:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
   17fb0:	ebfffb22 	bl	16c40 <simple_get_IRQ_handler>
   17fb4:	e1a03000 	mov	r3, r0
   17fb8:	e50b3010 	str	r3, [fp, #-16]
   17fbc:	ea000006 	b	17fdc <sel4platsupport_copy_irq_cap+0x138>
    } else {
        error = sel4platsupport_arch_copy_irq_cap(&simple->arch_simple, irq, dest);
   17fc0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   17fc4:	e2833048 	add	r3, r3, #72	; 0x48
   17fc8:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   17fcc:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   17fd0:	e1a00003 	mov	r0, r3
   17fd4:	eb000208 	bl	187fc <sel4platsupport_arch_copy_irq_cap>
   17fd8:	e50b0010 	str	r0, [fp, #-16]
    }

    if (error != seL4_NoError) {
   17fdc:	e51b3010 	ldr	r3, [fp, #-16]
   17fe0:	e3530000 	cmp	r3, #0
   17fe4:	0a000014 	beq	1803c <sel4platsupport_copy_irq_cap+0x198>
        ZF_LOGE("Failed to get cap for irq");
   17fe8:	e3083104 	movw	r3, #33028	; 0x8104
   17fec:	e3403004 	movt	r3, #4
   17ff0:	e5933000 	ldr	r3, [r3]
   17ff4:	e3530005 	cmp	r3, #5
   17ff8:	ca00000b 	bgt	1802c <sel4platsupport_copy_irq_cap+0x188>
   17ffc:	e3083da0 	movw	r3, #36256	; 0x8da0
   18000:	e3403002 	movt	r3, #2
   18004:	e58d3004 	str	r3, [sp, #4]
   18008:	e3a03000 	mov	r3, #0
   1800c:	e58d3000 	str	r3, [sp]
   18010:	e3a03005 	mov	r3, #5
   18014:	e3a02023 	mov	r2, #35	; 0x23
   18018:	e3081d04 	movw	r1, #36100	; 0x8d04
   1801c:	e3401002 	movt	r1, #2
   18020:	e3080e00 	movw	r0, #36352	; 0x8e00
   18024:	e3400002 	movt	r0, #2
   18028:	eb0017d6 	bl	1df88 <_zf_log_write_d>
        vka_cspace_free(vka, cap);
   1802c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   18030:	e1a01003 	mov	r1, r3
   18034:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   18038:	ebfffc10 	bl	17080 <vka_cspace_free>
    }
    return error;
   1803c:	e51b3010 	ldr	r3, [fp, #-16]
}
   18040:	e1a00003 	mov	r0, r3
   18044:	e24bd00c 	sub	sp, fp, #12
   18048:	e8bd8830 	pop	{r4, r5, fp, pc}

0001804c <sel4platsupport_alloc_frame_at>:

seL4_Error sel4platsupport_alloc_frame_at(vka_t *vka, uintptr_t paddr, size_t size_bits, vka_object_t *frame)
{
   1804c:	e92d4800 	push	{fp, lr}
   18050:	e28db004 	add	fp, sp, #4
   18054:	e24dd028 	sub	sp, sp, #40	; 0x28
   18058:	e50b0010 	str	r0, [fp, #-16]
   1805c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   18060:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   18064:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    /* find the physical frame */
    int error = vka_alloc_frame_at(vka, size_bits, paddr, frame);
   18068:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1806c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   18070:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   18074:	e51b0010 	ldr	r0, [fp, #-16]
   18078:	ebfffec6 	bl	17b98 <vka_alloc_frame_at>
   1807c:	e50b0008 	str	r0, [fp, #-8]
    if (error) {
   18080:	e51b3008 	ldr	r3, [fp, #-8]
   18084:	e3530000 	cmp	r3, #0
   18088:	0a000012 	beq	180d8 <sel4platsupport_alloc_frame_at+0x8c>
        ZF_LOGE("Failed to find frame at paddr %p", (void *)paddr);
   1808c:	e3083104 	movw	r3, #33028	; 0x8104
   18090:	e3403004 	movt	r3, #4
   18094:	e5933000 	ldr	r3, [r3]
   18098:	e3530005 	cmp	r3, #5
   1809c:	ca00000d 	bgt	180d8 <sel4platsupport_alloc_frame_at+0x8c>
   180a0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   180a4:	e58d3008 	str	r3, [sp, #8]
   180a8:	e3083dbc 	movw	r3, #36284	; 0x8dbc
   180ac:	e3403002 	movt	r3, #2
   180b0:	e58d3004 	str	r3, [sp, #4]
   180b4:	e3a03000 	mov	r3, #0
   180b8:	e58d3000 	str	r3, [sp]
   180bc:	e3a03005 	mov	r3, #5
   180c0:	e3a0202e 	mov	r2, #46	; 0x2e
   180c4:	e3081d04 	movw	r1, #36100	; 0x8d04
   180c8:	e3401002 	movt	r1, #2
   180cc:	e3080e8c 	movw	r0, #36492	; 0x8e8c
   180d0:	e3400002 	movt	r0, #2
   180d4:	eb0017ab 	bl	1df88 <_zf_log_write_d>
    }

    return error;
   180d8:	e51b3008 	ldr	r3, [fp, #-8]
}
   180dc:	e1a00003 	mov	r0, r3
   180e0:	e24bd004 	sub	sp, fp, #4
   180e4:	e8bd8800 	pop	{fp, pc}

000180e8 <sel4platsupport_map_frame_at>:

void *sel4platsupport_map_frame_at(vka_t *vka, vspace_t *vspace, uintptr_t paddr, size_t size_bits, vka_object_t *frame)
{
   180e8:	e92d4830 	push	{r4, r5, fp, lr}
   180ec:	e28db00c 	add	fp, sp, #12
   180f0:	e24dd028 	sub	sp, sp, #40	; 0x28
   180f4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   180f8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   180fc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   18100:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    int error;
    error = sel4platsupport_alloc_frame_at(vka, paddr, size_bits, frame);
   18104:	e59b3004 	ldr	r3, [fp, #4]
   18108:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   1810c:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   18110:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   18114:	ebffffcc 	bl	1804c <sel4platsupport_alloc_frame_at>
   18118:	e1a03000 	mov	r3, r0
   1811c:	e50b3010 	str	r3, [fp, #-16]
    if (error) {
   18120:	e51b3010 	ldr	r3, [fp, #-16]
   18124:	e3530000 	cmp	r3, #0
   18128:	0a000001 	beq	18134 <sel4platsupport_map_frame_at+0x4c>
        return NULL;
   1812c:	e3a03000 	mov	r3, #0
   18130:	ea00002e 	b	181f0 <sel4platsupport_map_frame_at+0x108>
    }
    void *vaddr = vspace_map_pages(vspace, &frame->cptr, &frame->ut, seL4_AllRights, 1, size_bits, 0);
   18134:	e59b4004 	ldr	r4, [fp, #4]
   18138:	e59b3004 	ldr	r3, [fp, #4]
   1813c:	e2835004 	add	r5, r3, #4
   18140:	e3a03001 	mov	r3, #1
   18144:	e3a02001 	mov	r2, #1
   18148:	e3a01001 	mov	r1, #1
   1814c:	e3a00001 	mov	r0, #1
   18150:	ebfff903 	bl	16564 <seL4_CapRights_new>
   18154:	e1a02000 	mov	r2, r0
   18158:	e3a03000 	mov	r3, #0
   1815c:	e58d3008 	str	r3, [sp, #8]
   18160:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   18164:	e58d3004 	str	r3, [sp, #4]
   18168:	e3a03001 	mov	r3, #1
   1816c:	e58d3000 	str	r3, [sp]
   18170:	e1a03002 	mov	r3, r2
   18174:	e1a02005 	mov	r2, r5
   18178:	e1a01004 	mov	r1, r4
   1817c:	e51b001c 	ldr	r0, [fp, #-28]	; 0xffffffe4
   18180:	ebfffed0 	bl	17cc8 <vspace_map_pages>
   18184:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
    if (!vaddr) {
   18188:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1818c:	e3530000 	cmp	r3, #0
   18190:	1a000015 	bne	181ec <sel4platsupport_map_frame_at+0x104>
        ZF_LOGE("Failed to map frame at paddr %p", (void *)paddr);
   18194:	e3083104 	movw	r3, #33028	; 0x8104
   18198:	e3403004 	movt	r3, #4
   1819c:	e5933000 	ldr	r3, [r3]
   181a0:	e3530005 	cmp	r3, #5
   181a4:	ca00000d 	bgt	181e0 <sel4platsupport_map_frame_at+0xf8>
   181a8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   181ac:	e58d3008 	str	r3, [sp, #8]
   181b0:	e3083de0 	movw	r3, #36320	; 0x8de0
   181b4:	e3403002 	movt	r3, #2
   181b8:	e58d3004 	str	r3, [sp, #4]
   181bc:	e3a03000 	mov	r3, #0
   181c0:	e58d3000 	str	r3, [sp]
   181c4:	e3a03005 	mov	r3, #5
   181c8:	e3a0203d 	mov	r2, #61	; 0x3d
   181cc:	e3081d04 	movw	r1, #36100	; 0x8d04
   181d0:	e3401002 	movt	r1, #2
   181d4:	e3080f20 	movw	r0, #36640	; 0x8f20
   181d8:	e3400002 	movt	r0, #2
   181dc:	eb001769 	bl	1df88 <_zf_log_write_d>
        vka_free_object(vka, frame);
   181e0:	e59b1004 	ldr	r1, [fp, #4]
   181e4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   181e8:	ebfffe33 	bl	17abc <vka_free_object>
    }
    return vaddr;
   181ec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   181f0:	e1a00003 	mov	r0, r3
   181f4:	e24bd00c 	sub	sp, fp, #12
   181f8:	e8bd8830 	pop	{r4, r5, fp, pc}

000181fc <arm_sys_send_recv>:
{
   181fc:	e92d08b0 	push	{r4, r5, r7, fp}
   18200:	e28db00c 	add	fp, sp, #12
   18204:	e24dd010 	sub	sp, sp, #16
   18208:	e50b0010 	str	r0, [fp, #-16]
   1820c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   18210:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   18214:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    register seL4_Word destptr asm("r0") = dest;
   18218:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
    register seL4_Word info asm("r1") = info_arg;
   1821c:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   18220:	e59b3008 	ldr	r3, [fp, #8]
   18224:	e5933000 	ldr	r3, [r3]
   18228:	e1a02003 	mov	r2, r3
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   1822c:	e59b300c 	ldr	r3, [fp, #12]
   18230:	e5933000 	ldr	r3, [r3]
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   18234:	e59bc010 	ldr	ip, [fp, #16]
   18238:	e59cc000 	ldr	ip, [ip]
   1823c:	e1a0400c 	mov	r4, ip
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   18240:	e59bc014 	ldr	ip, [fp, #20]
   18244:	e59cc000 	ldr	ip, [ip]
   18248:	e1a0500c 	mov	r5, ip
    register seL4_Word scno asm("r7") = sys;
   1824c:	e51b7010 	ldr	r7, [fp, #-16]
    asm volatile(
   18250:	ef000000 	svc	0x00000000
    *out_info = info;
   18254:	e1a0c001 	mov	ip, r1
   18258:	e59b1004 	ldr	r1, [fp, #4]
   1825c:	e581c000 	str	ip, [r1]
    *out_badge = destptr;
   18260:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   18264:	e5810000 	str	r0, [r1]
    *in_out_mr0 = msg0;
   18268:	e1a01002 	mov	r1, r2
   1826c:	e59b2008 	ldr	r2, [fp, #8]
   18270:	e5821000 	str	r1, [r2]
    *in_out_mr1 = msg1;
   18274:	e1a02003 	mov	r2, r3
   18278:	e59b300c 	ldr	r3, [fp, #12]
   1827c:	e5832000 	str	r2, [r3]
    *in_out_mr2 = msg2;
   18280:	e1a02004 	mov	r2, r4
   18284:	e59b3010 	ldr	r3, [fp, #16]
   18288:	e5832000 	str	r2, [r3]
    *in_out_mr3 = msg3;
   1828c:	e1a02005 	mov	r2, r5
   18290:	e59b3014 	ldr	r3, [fp, #20]
   18294:	e5832000 	str	r2, [r3]
}
   18298:	e320f000 	nop	{0}
   1829c:	e24bd00c 	sub	sp, fp, #12
   182a0:	e8bd08b0 	pop	{r4, r5, r7, fp}
   182a4:	e12fff1e 	bx	lr

000182a8 <seL4_DebugPutChar>:
{
   182a8:	e92d4800 	push	{fp, lr}
   182ac:	e28db004 	add	fp, sp, #4
   182b0:	e24dd038 	sub	sp, sp, #56	; 0x38
   182b4:	e1a03000 	mov	r3, r0
   182b8:	e54b301d 	strb	r3, [fp, #-29]	; 0xffffffe3
    seL4_Word unused0 = 0;
   182bc:	e3a03000 	mov	r3, #0
   182c0:	e50b3008 	str	r3, [fp, #-8]
    seL4_Word unused1 = 0;
   182c4:	e3a03000 	mov	r3, #0
   182c8:	e50b300c 	str	r3, [fp, #-12]
    seL4_Word unused2 = 0;
   182cc:	e3a03000 	mov	r3, #0
   182d0:	e50b3010 	str	r3, [fp, #-16]
    seL4_Word unused3 = 0;
   182d4:	e3a03000 	mov	r3, #0
   182d8:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    seL4_Word unused4 = 0;
   182dc:	e3a03000 	mov	r3, #0
   182e0:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
    seL4_Word unused5 = 0;
   182e4:	e3a03000 	mov	r3, #0
   182e8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    arm_sys_send_recv(seL4_SysDebugPutChar, c, &unused0, 0, &unused1, &unused2, &unused3, &unused4, &unused5, 0);
   182ec:	e55b101d 	ldrb	r1, [fp, #-29]	; 0xffffffe3
   182f0:	e24b2008 	sub	r2, fp, #8
   182f4:	e3a03000 	mov	r3, #0
   182f8:	e58d3014 	str	r3, [sp, #20]
   182fc:	e24b301c 	sub	r3, fp, #28
   18300:	e58d3010 	str	r3, [sp, #16]
   18304:	e24b3018 	sub	r3, fp, #24
   18308:	e58d300c 	str	r3, [sp, #12]
   1830c:	e24b3014 	sub	r3, fp, #20
   18310:	e58d3008 	str	r3, [sp, #8]
   18314:	e24b3010 	sub	r3, fp, #16
   18318:	e58d3004 	str	r3, [sp, #4]
   1831c:	e24b300c 	sub	r3, fp, #12
   18320:	e58d3000 	str	r3, [sp]
   18324:	e3a03000 	mov	r3, #0
   18328:	e3e00008 	mvn	r0, #8
   1832c:	ebffffb2 	bl	181fc <arm_sys_send_recv>
}
   18330:	e320f000 	nop	{0}
   18334:	e24bd004 	sub	sp, fp, #4
   18338:	e8bd8800 	pop	{fp, pc}

0001833c <ps_cdev_putchar>:
 * by a character return
 * @param[in] d    The character device to send a character to
 * @param[in] c    The character to send
 */
static inline void ps_cdev_putchar(ps_chardevice_t* d, int c)
{
   1833c:	e92d4810 	push	{r4, fp, lr}
   18340:	e28db008 	add	fp, sp, #8
   18344:	e24dd01c 	sub	sp, sp, #28
   18348:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1834c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    int ret;
    do {
        char data = c;
   18350:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18354:	e6ef3073 	uxtb	r3, r3
   18358:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
        ret = d->write(d, &data, 1, NULL, NULL);
   1835c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   18360:	e593400c 	ldr	r4, [r3, #12]
   18364:	e24b1011 	sub	r1, fp, #17
   18368:	e3a03000 	mov	r3, #0
   1836c:	e58d3000 	str	r3, [sp]
   18370:	e3a03000 	mov	r3, #0
   18374:	e3a02001 	mov	r2, #1
   18378:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1837c:	e12fff34 	blx	r4
   18380:	e50b0010 	str	r0, [fp, #-16]
    } while (ret < 1);
   18384:	e51b3010 	ldr	r3, [fp, #-16]
   18388:	e3530000 	cmp	r3, #0
   1838c:	daffffef 	ble	18350 <ps_cdev_putchar+0x14>
}
   18390:	e320f000 	nop	{0}
   18394:	e320f000 	nop	{0}
   18398:	e24bd008 	sub	sp, fp, #8
   1839c:	e8bd8810 	pop	{r4, fp, pc}

000183a0 <ps_cdev_getchar>:
 * Receive a character from the device
 * @param[in] d  The device to receive a character from
 * @return       The chracter received; negative values signal that an error occurred.
 */
static inline int ps_cdev_getchar(ps_chardevice_t* d)
{
   183a0:	e92d4810 	push	{r4, fp, lr}
   183a4:	e28db008 	add	fp, sp, #8
   183a8:	e24dd01c 	sub	sp, sp, #28
   183ac:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    int ret;
    char data;
    ret = d->read(d, &data, 1, NULL, NULL);
   183b0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   183b4:	e5934008 	ldr	r4, [r3, #8]
   183b8:	e24b1011 	sub	r1, fp, #17
   183bc:	e3a03000 	mov	r3, #0
   183c0:	e58d3000 	str	r3, [sp]
   183c4:	e3a03000 	mov	r3, #0
   183c8:	e3a02001 	mov	r2, #1
   183cc:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d0:	e12fff34 	blx	r4
   183d4:	e50b0010 	str	r0, [fp, #-16]
    return (ret == 1) ? data : EOF;
   183d8:	e51b3010 	ldr	r3, [fp, #-16]
   183dc:	e3530001 	cmp	r3, #1
   183e0:	1a000001 	bne	183ec <ps_cdev_getchar+0x4c>
   183e4:	e55b3011 	ldrb	r3, [fp, #-17]	; 0xffffffef
   183e8:	ea000000 	b	183f0 <ps_cdev_getchar+0x50>
   183ec:	e3e03000 	mvn	r3, #0
}
   183f0:	e1a00003 	mov	r0, r3
   183f4:	e24bd008 	sub	sp, fp, #8
   183f8:	e8bd8810 	pop	{r4, fp, pc}

000183fc <debug_write>:
#include <stddef.h>
#include <vka/object.h>

static ssize_t debug_write(ps_chardevice_t *device UNUSED, const void *vdata, size_t count,
                           chardev_callback_t cb UNUSED, void *token UNUSED)
{
   183fc:	e92d4800 	push	{fp, lr}
   18400:	e28db004 	add	fp, sp, #4
   18404:	e24dd018 	sub	sp, sp, #24
   18408:	e50b0010 	str	r0, [fp, #-16]
   1840c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   18410:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   18414:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
#ifdef CONFIG_PRINTING
    size_t sent = 0;
   18418:	e3a03000 	mov	r3, #0
   1841c:	e50b3008 	str	r3, [fp, #-8]
    const char *data = (const char *)vdata;
   18420:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   18424:	e50b300c 	str	r3, [fp, #-12]
    for (sent = 0; sent < count; sent++) {
   18428:	e3a03000 	mov	r3, #0
   1842c:	e50b3008 	str	r3, [fp, #-8]
   18430:	ea000008 	b	18458 <debug_write+0x5c>
        seL4_DebugPutChar(*data++);
   18434:	e51b300c 	ldr	r3, [fp, #-12]
   18438:	e2832001 	add	r2, r3, #1
   1843c:	e50b200c 	str	r2, [fp, #-12]
   18440:	e5d33000 	ldrb	r3, [r3]
   18444:	e1a00003 	mov	r0, r3
   18448:	ebffff96 	bl	182a8 <seL4_DebugPutChar>
    for (sent = 0; sent < count; sent++) {
   1844c:	e51b3008 	ldr	r3, [fp, #-8]
   18450:	e2833001 	add	r3, r3, #1
   18454:	e50b3008 	str	r3, [fp, #-8]
   18458:	e51b2008 	ldr	r2, [fp, #-8]
   1845c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   18460:	e1520003 	cmp	r2, r3
   18464:	3afffff2 	bcc	18434 <debug_write+0x38>
    }
#else
    /* /dev/null */
    (void)vdata;
#endif
    return count;
   18468:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
}
   1846c:	e1a00003 	mov	r0, r3
   18470:	e24bd004 	sub	sp, fp, #4
   18474:	e8bd8800 	pop	{fp, pc}

00018478 <register_console>:
    .write = &debug_write
};
static struct ps_chardevice *console = &console_device;

void register_console(struct ps_chardevice *user_console)
{
   18478:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1847c:	e28db000 	add	fp, sp, #0
   18480:	e24dd00c 	sub	sp, sp, #12
   18484:	e50b0008 	str	r0, [fp, #-8]
    console = user_console;
   18488:	e30c374c 	movw	r3, #51020	; 0xc74c
   1848c:	e3403002 	movt	r3, #2
   18490:	e51b2008 	ldr	r2, [fp, #-8]
   18494:	e5832000 	str	r2, [r3]
}
   18498:	e320f000 	nop	{0}
   1849c:	e28bd000 	add	sp, fp, #0
   184a0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   184a4:	e12fff1e 	bx	lr

000184a8 <__plat_serial_init>:

int __plat_serial_init(ps_io_ops_t *io_ops)
{
   184a8:	e92d4800 	push	{fp, lr}
   184ac:	e28db004 	add	fp, sp, #4
   184b0:	e24dd0d0 	sub	sp, sp, #208	; 0xd0
   184b4:	e50b00d0 	str	r0, [fp, #-208]	; 0xffffff30
    struct ps_chardevice temp_device;
    if (ps_cdev_init(PS_SERIAL_DEFAULT, io_ops, &temp_device)) {
   184b8:	e24b30cc 	sub	r3, fp, #204	; 0xcc
   184bc:	e1a02003 	mov	r2, r3
   184c0:	e51b10d0 	ldr	r1, [fp, #-208]	; 0xffffff30
   184c4:	e3a00001 	mov	r0, #1
   184c8:	eb000113 	bl	1891c <ps_cdev_init>
   184cc:	e1a03000 	mov	r3, r0
   184d0:	e3530000 	cmp	r3, #0
   184d4:	0a000010 	beq	1851c <__plat_serial_init+0x74>
        /* Apply the changes */
#if defined(CONFIG_LIB_SEL4_PLAT_SUPPORT_USE_SEL4_DEBUG_PUTCHAR)
        temp_device.write = &debug_write;
   184d8:	e30833fc 	movw	r3, #33788	; 0x83fc
   184dc:	e3403001 	movt	r3, #1
   184e0:	e50b30c0 	str	r3, [fp, #-192]	; 0xffffff40
#endif
        console_device = temp_device;
   184e4:	e30c3684 	movw	r3, #50820	; 0xc684
   184e8:	e3403002 	movt	r3, #2
   184ec:	e1a00003 	mov	r0, r3
   184f0:	e24b30cc 	sub	r3, fp, #204	; 0xcc
   184f4:	e3a020c8 	mov	r2, #200	; 0xc8
   184f8:	e1a01003 	mov	r1, r3
   184fc:	eb0024b0 	bl	217c4 <memcpy>
        console = &console_device;
   18500:	e30c374c 	movw	r3, #51020	; 0xc74c
   18504:	e3403002 	movt	r3, #2
   18508:	e30c2684 	movw	r2, #50820	; 0xc684
   1850c:	e3402002 	movt	r2, #2
   18510:	e5832000 	str	r2, [r3]
        return 0;
   18514:	e3a03000 	mov	r3, #0
   18518:	ea000000 	b	18520 <__plat_serial_init+0x78>
    } else {
        return -1;
   1851c:	e3e03000 	mvn	r3, #0
    }
}
   18520:	e1a00003 	mov	r0, r3
   18524:	e24bd004 	sub	sp, fp, #4
   18528:	e8bd8800 	pop	{fp, pc}

0001852c <__plat_putchar>:

void __plat_putchar(int c)
{
   1852c:	e92d4800 	push	{fp, lr}
   18530:	e28db004 	add	fp, sp, #4
   18534:	e24dd008 	sub	sp, sp, #8
   18538:	e50b0008 	str	r0, [fp, #-8]
    if (console) {
   1853c:	e30c374c 	movw	r3, #51020	; 0xc74c
   18540:	e3403002 	movt	r3, #2
   18544:	e5933000 	ldr	r3, [r3]
   18548:	e3530000 	cmp	r3, #0
   1854c:	0a000005 	beq	18568 <__plat_putchar+0x3c>
        ps_cdev_putchar(console, c);
   18550:	e30c374c 	movw	r3, #51020	; 0xc74c
   18554:	e3403002 	movt	r3, #2
   18558:	e5933000 	ldr	r3, [r3]
   1855c:	e51b1008 	ldr	r1, [fp, #-8]
   18560:	e1a00003 	mov	r0, r3
   18564:	ebffff74 	bl	1833c <ps_cdev_putchar>
    }
}
   18568:	e320f000 	nop	{0}
   1856c:	e24bd004 	sub	sp, fp, #4
   18570:	e8bd8800 	pop	{fp, pc}

00018574 <__plat_getchar>:

int __plat_getchar(void)
{
   18574:	e92d4800 	push	{fp, lr}
   18578:	e28db004 	add	fp, sp, #4
    if (console) {
   1857c:	e30c374c 	movw	r3, #51020	; 0xc74c
   18580:	e3403002 	movt	r3, #2
   18584:	e5933000 	ldr	r3, [r3]
   18588:	e3530000 	cmp	r3, #0
   1858c:	0a000006 	beq	185ac <__plat_getchar+0x38>
        return ps_cdev_getchar(console);
   18590:	e30c374c 	movw	r3, #51020	; 0xc74c
   18594:	e3403002 	movt	r3, #2
   18598:	e5933000 	ldr	r3, [r3]
   1859c:	e1a00003 	mov	r0, r3
   185a0:	ebffff7e 	bl	183a0 <ps_cdev_getchar>
   185a4:	e1a03000 	mov	r3, r0
   185a8:	ea000000 	b	185b0 <__plat_getchar+0x3c>
    } else {
        return EOF;
   185ac:	e3e03000 	mvn	r3, #0
    }
}
   185b0:	e1a00003 	mov	r0, r3
   185b4:	e8bd8800 	pop	{fp, pc}

000185b8 <arch_simple_get_IRQ_trigger>:
    return seL4_IllegalOperation;
}

static inline seL4_Error arch_simple_get_IRQ_trigger(arch_simple_t *simple, int irq, int trigger,
                                                     cspacepath_t path)
{
   185b8:	e24dd008 	sub	sp, sp, #8
   185bc:	e92d4810 	push	{r4, fp, lr}
   185c0:	e28db008 	add	fp, sp, #8
   185c4:	e24dd024 	sub	sp, sp, #36	; 0x24
   185c8:	e50b0010 	str	r0, [fp, #-16]
   185cc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   185d0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   185d4:	e58b3008 	str	r3, [fp, #8]
    if (!simple) {
   185d8:	e51b3010 	ldr	r3, [fp, #-16]
   185dc:	e3530000 	cmp	r3, #0
   185e0:	1a000012 	bne	18630 <arch_simple_get_IRQ_trigger+0x78>
        ZF_LOGE("Simple is NULL");
   185e4:	e3083104 	movw	r3, #33028	; 0x8104
   185e8:	e3403004 	movt	r3, #4
   185ec:	e5933000 	ldr	r3, [r3]
   185f0:	e3530005 	cmp	r3, #5
   185f4:	ca00000b 	bgt	18628 <arch_simple_get_IRQ_trigger+0x70>
   185f8:	e3093040 	movw	r3, #36928	; 0x9040
   185fc:	e3403002 	movt	r3, #2
   18600:	e58d3004 	str	r3, [sp, #4]
   18604:	e3a03000 	mov	r3, #0
   18608:	e58d3000 	str	r3, [sp]
   1860c:	e3a03005 	mov	r3, #5
   18610:	e3a0204d 	mov	r2, #77	; 0x4d
   18614:	e3081fcc 	movw	r1, #36812	; 0x8fcc
   18618:	e3401002 	movt	r1, #2
   1861c:	e309011c 	movw	r0, #37148	; 0x911c
   18620:	e3400002 	movt	r0, #2
   18624:	eb001657 	bl	1df88 <_zf_log_write_d>
        return seL4_InvalidArgument;
   18628:	e3a03001 	mov	r3, #1
   1862c:	ea000026 	b	186cc <arch_simple_get_IRQ_trigger+0x114>
    }
    if (!simple->irq_trigger) {
   18630:	e51b3010 	ldr	r3, [fp, #-16]
   18634:	e5933004 	ldr	r3, [r3, #4]
   18638:	e3530000 	cmp	r3, #0
   1863c:	1a000012 	bne	1868c <arch_simple_get_IRQ_trigger+0xd4>
        ZF_LOGE("Not implemented");
   18640:	e3083104 	movw	r3, #33028	; 0x8104
   18644:	e3403004 	movt	r3, #4
   18648:	e5933000 	ldr	r3, [r3]
   1864c:	e3530005 	cmp	r3, #5
   18650:	ca00000b 	bgt	18684 <arch_simple_get_IRQ_trigger+0xcc>
   18654:	e3093050 	movw	r3, #36944	; 0x9050
   18658:	e3403002 	movt	r3, #2
   1865c:	e58d3004 	str	r3, [sp, #4]
   18660:	e3a03000 	mov	r3, #0
   18664:	e58d3000 	str	r3, [sp]
   18668:	e3a03005 	mov	r3, #5
   1866c:	e3a02051 	mov	r2, #81	; 0x51
   18670:	e3081fcc 	movw	r1, #36812	; 0x8fcc
   18674:	e3401002 	movt	r1, #2
   18678:	e309011c 	movw	r0, #37148	; 0x911c
   1867c:	e3400002 	movt	r0, #2
   18680:	eb001640 	bl	1df88 <_zf_log_write_d>
        return seL4_InvalidArgument;
   18684:	e3a03001 	mov	r3, #1
   18688:	ea00000f 	b	186cc <arch_simple_get_IRQ_trigger+0x114>
    }

    return simple->irq_trigger(simple->data, irq, trigger, 0, path.root, path.capPtr, path.capDepth);
   1868c:	e51b3010 	ldr	r3, [fp, #-16]
   18690:	e5934004 	ldr	r4, [r3, #4]
   18694:	e51b3010 	ldr	r3, [fp, #-16]
   18698:	e5930008 	ldr	r0, [r3, #8]
   1869c:	e59b3010 	ldr	r3, [fp, #16]
   186a0:	e59b2008 	ldr	r2, [fp, #8]
   186a4:	e59b100c 	ldr	r1, [fp, #12]
   186a8:	e6ef1071 	uxtb	r1, r1
   186ac:	e58d1008 	str	r1, [sp, #8]
   186b0:	e58d2004 	str	r2, [sp, #4]
   186b4:	e58d3000 	str	r3, [sp]
   186b8:	e3a03000 	mov	r3, #0
   186bc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   186c0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   186c4:	e12fff34 	blx	r4
   186c8:	e1a03000 	mov	r3, r0
}
   186cc:	e1a00003 	mov	r0, r3
   186d0:	e24bd008 	sub	sp, fp, #8
   186d4:	e8bd4810 	pop	{r4, fp, lr}
   186d8:	e28dd008 	add	sp, sp, #8
   186dc:	e12fff1e 	bx	lr

000186e0 <arch_simple_get_IRQ_trigger_cpu>:

static inline seL4_Error arch_simple_get_IRQ_trigger_cpu(arch_simple_t *simple, int irq, int trigger, int core,
                                                         cspacepath_t path)
{
   186e0:	e92d4810 	push	{r4, fp, lr}
   186e4:	e28db008 	add	fp, sp, #8
   186e8:	e24dd024 	sub	sp, sp, #36	; 0x24
   186ec:	e50b0010 	str	r0, [fp, #-16]
   186f0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   186f4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   186f8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    if (!simple) {
   186fc:	e51b3010 	ldr	r3, [fp, #-16]
   18700:	e3530000 	cmp	r3, #0
   18704:	1a000012 	bne	18754 <arch_simple_get_IRQ_trigger_cpu+0x74>
        ZF_LOGE("Simple is NULL");
   18708:	e3083104 	movw	r3, #33028	; 0x8104
   1870c:	e3403004 	movt	r3, #4
   18710:	e5933000 	ldr	r3, [r3]
   18714:	e3530005 	cmp	r3, #5
   18718:	ca00000b 	bgt	1874c <arch_simple_get_IRQ_trigger_cpu+0x6c>
   1871c:	e3093040 	movw	r3, #36928	; 0x9040
   18720:	e3403002 	movt	r3, #2
   18724:	e58d3004 	str	r3, [sp, #4]
   18728:	e3a03000 	mov	r3, #0
   1872c:	e58d3000 	str	r3, [sp]
   18730:	e3a03005 	mov	r3, #5
   18734:	e3a0205c 	mov	r2, #92	; 0x5c
   18738:	e3081fcc 	movw	r1, #36812	; 0x8fcc
   1873c:	e3401002 	movt	r1, #2
   18740:	e3090138 	movw	r0, #37176	; 0x9138
   18744:	e3400002 	movt	r0, #2
   18748:	eb00160e 	bl	1df88 <_zf_log_write_d>
        return seL4_InvalidArgument;
   1874c:	e3a03001 	mov	r3, #1
   18750:	ea000026 	b	187f0 <arch_simple_get_IRQ_trigger_cpu+0x110>
    }
    if (!simple->irq_trigger) {
   18754:	e51b3010 	ldr	r3, [fp, #-16]
   18758:	e5933004 	ldr	r3, [r3, #4]
   1875c:	e3530000 	cmp	r3, #0
   18760:	1a000012 	bne	187b0 <arch_simple_get_IRQ_trigger_cpu+0xd0>
        ZF_LOGE("Not implemented");
   18764:	e3083104 	movw	r3, #33028	; 0x8104
   18768:	e3403004 	movt	r3, #4
   1876c:	e5933000 	ldr	r3, [r3]
   18770:	e3530005 	cmp	r3, #5
   18774:	ca00000b 	bgt	187a8 <arch_simple_get_IRQ_trigger_cpu+0xc8>
   18778:	e3093050 	movw	r3, #36944	; 0x9050
   1877c:	e3403002 	movt	r3, #2
   18780:	e58d3004 	str	r3, [sp, #4]
   18784:	e3a03000 	mov	r3, #0
   18788:	e58d3000 	str	r3, [sp]
   1878c:	e3a03005 	mov	r3, #5
   18790:	e3a02060 	mov	r2, #96	; 0x60
   18794:	e3081fcc 	movw	r1, #36812	; 0x8fcc
   18798:	e3401002 	movt	r1, #2
   1879c:	e3090138 	movw	r0, #37176	; 0x9138
   187a0:	e3400002 	movt	r0, #2
   187a4:	eb0015f7 	bl	1df88 <_zf_log_write_d>
        return seL4_InvalidArgument;
   187a8:	e3a03001 	mov	r3, #1
   187ac:	ea00000f 	b	187f0 <arch_simple_get_IRQ_trigger_cpu+0x110>
    }

    return simple->irq_trigger(simple->data, irq, trigger, core, path.root, path.capPtr, path.capDepth);
   187b0:	e51b3010 	ldr	r3, [fp, #-16]
   187b4:	e5934004 	ldr	r4, [r3, #4]
   187b8:	e51b3010 	ldr	r3, [fp, #-16]
   187bc:	e5930008 	ldr	r0, [r3, #8]
   187c0:	e59b300c 	ldr	r3, [fp, #12]
   187c4:	e59b2004 	ldr	r2, [fp, #4]
   187c8:	e59b1008 	ldr	r1, [fp, #8]
   187cc:	e6ef1071 	uxtb	r1, r1
   187d0:	e58d1008 	str	r1, [sp, #8]
   187d4:	e58d2004 	str	r2, [sp, #4]
   187d8:	e58d3000 	str	r3, [sp]
   187dc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   187e0:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   187e4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   187e8:	e12fff34 	blx	r4
   187ec:	e1a03000 	mov	r3, r0
}
   187f0:	e1a00003 	mov	r0, r3
   187f4:	e24bd008 	sub	sp, fp, #8
   187f8:	e8bd8810 	pop	{r4, fp, pc}

000187fc <sel4platsupport_arch_copy_irq_cap>:

#include <sel4platsupport/device.h>
#include <utils/util.h>

int sel4platsupport_arch_copy_irq_cap(arch_simple_t *arch_simple, ps_irq_t *irq, cspacepath_t *dest)
{
   187fc:	e92d4870 	push	{r4, r5, r6, fp, lr}
   18800:	e28db010 	add	fp, sp, #16
   18804:	e24dd034 	sub	sp, sp, #52	; 0x34
   18808:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1880c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   18810:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    switch (irq->type) {
   18814:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18818:	e5933000 	ldr	r3, [r3]
   1881c:	e3530004 	cmp	r3, #4
   18820:	0a000002 	beq	18830 <sel4platsupport_arch_copy_irq_cap+0x34>
   18824:	e3530005 	cmp	r3, #5
   18828:	0a000012 	beq	18878 <sel4platsupport_arch_copy_irq_cap+0x7c>
   1882c:	ea000025 	b	188c8 <sel4platsupport_arch_copy_irq_cap+0xcc>
    case PS_TRIGGER:
        return arch_simple_get_IRQ_trigger(arch_simple, irq->trigger.number, irq->trigger.trigger, *dest);
   18830:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18834:	e5935004 	ldr	r5, [r3, #4]
   18838:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1883c:	e5936008 	ldr	r6, [r3, #8]
   18840:	e51b4020 	ldr	r4, [fp, #-32]	; 0xffffffe0
   18844:	e1a0e00d 	mov	lr, sp
   18848:	e284c004 	add	ip, r4, #4
   1884c:	e8bc000f 	ldm	ip!, {r0, r1, r2, r3}
   18850:	e8ae000f 	stmia	lr!, {r0, r1, r2, r3}
   18854:	e89c0003 	ldm	ip, {r0, r1}
   18858:	e88e0003 	stm	lr, {r0, r1}
   1885c:	e5943000 	ldr	r3, [r4]
   18860:	e1a02006 	mov	r2, r6
   18864:	e1a01005 	mov	r1, r5
   18868:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1886c:	ebffff51 	bl	185b8 <arch_simple_get_IRQ_trigger>
   18870:	e1a03000 	mov	r3, r0
   18874:	ea000025 	b	18910 <sel4platsupport_arch_copy_irq_cap+0x114>
    case PS_PER_CPU:
        return arch_simple_get_IRQ_trigger_cpu(arch_simple, irq->cpu.number, irq->cpu.trigger, irq->cpu.cpu_idx, *dest);
   18878:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1887c:	e5934004 	ldr	r4, [r3, #4]
   18880:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18884:	e5935008 	ldr	r5, [r3, #8]
   18888:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1888c:	e593600c 	ldr	r6, [r3, #12]
   18890:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   18894:	e1a0c00d 	mov	ip, sp
   18898:	e1a0e003 	mov	lr, r3
   1889c:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
   188a0:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
   188a4:	e89e0007 	ldm	lr, {r0, r1, r2}
   188a8:	e88c0007 	stm	ip, {r0, r1, r2}
   188ac:	e1a03006 	mov	r3, r6
   188b0:	e1a02005 	mov	r2, r5
   188b4:	e1a01004 	mov	r1, r4
   188b8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   188bc:	ebffff87 	bl	186e0 <arch_simple_get_IRQ_trigger_cpu>
   188c0:	e1a03000 	mov	r3, r0
   188c4:	ea000011 	b	18910 <sel4platsupport_arch_copy_irq_cap+0x114>
    default:
        ZF_LOGE("unknown irq type");
   188c8:	e3083104 	movw	r3, #33028	; 0x8104
   188cc:	e3403004 	movt	r3, #4
   188d0:	e5933000 	ldr	r3, [r3]
   188d4:	e3530005 	cmp	r3, #5
   188d8:	ca00000b 	bgt	1890c <sel4platsupport_arch_copy_irq_cap+0x110>
   188dc:	e30930e4 	movw	r3, #37092	; 0x90e4
   188e0:	e3403002 	movt	r3, #2
   188e4:	e58d3004 	str	r3, [sp, #4]
   188e8:	e3a03000 	mov	r3, #0
   188ec:	e58d3000 	str	r3, [sp]
   188f0:	e3a03005 	mov	r3, #5
   188f4:	e3a02012 	mov	r2, #18
   188f8:	e3091078 	movw	r1, #36984	; 0x9078
   188fc:	e3401002 	movt	r1, #2
   18900:	e30900f8 	movw	r0, #37112	; 0x90f8
   18904:	e3400002 	movt	r0, #2
   18908:	eb00159e 	bl	1df88 <_zf_log_write_d>
        return -1;
   1890c:	e3e03000 	mvn	r3, #0
    }
}
   18910:	e1a00003 	mov	r0, r3
   18914:	e24bd010 	sub	sp, fp, #16
   18918:	e8bd8870 	pop	{r4, r5, r6, fp, pc}

0001891c <ps_cdev_init>:
    UART_DEFN(0),
    UART_DEFN(1),
};

struct ps_chardevice*
ps_cdev_init(enum chardev_id id, const ps_io_ops_t* o, struct ps_chardevice* d) {
   1891c:	e92d4810 	push	{r4, fp, lr}
   18920:	e28db008 	add	fp, sp, #8
   18924:	e24dd01c 	sub	sp, sp, #28
   18928:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1892c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   18930:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
    unsigned int i;
    for (i = 0; i < ARRAY_SIZE(dev_defn); i++) {
   18934:	e3a03000 	mov	r3, #0
   18938:	e50b3010 	str	r3, [fp, #-16]
   1893c:	ea000025 	b	189d8 <ps_cdev_init+0xbc>
        if (dev_defn[i].id == id) {
   18940:	e3093168 	movw	r3, #37224	; 0x9168
   18944:	e3403002 	movt	r3, #2
   18948:	e51b2010 	ldr	r2, [fp, #-16]
   1894c:	e3a01014 	mov	r1, #20
   18950:	e0020291 	mul	r2, r1, r2
   18954:	e0833002 	add	r3, r3, r2
   18958:	e5933000 	ldr	r3, [r3]
   1895c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   18960:	e1520003 	cmp	r2, r3
   18964:	1a000018 	bne	189cc <ps_cdev_init+0xb0>
            return (dev_defn[i].init_fn(dev_defn + i, o, d)) ? NULL : d;
   18968:	e3093168 	movw	r3, #37224	; 0x9168
   1896c:	e3403002 	movt	r3, #2
   18970:	e51b2010 	ldr	r2, [fp, #-16]
   18974:	e3a01014 	mov	r1, #20
   18978:	e0020291 	mul	r2, r1, r2
   1897c:	e0833002 	add	r3, r3, r2
   18980:	e2833010 	add	r3, r3, #16
   18984:	e5934000 	ldr	r4, [r3]
   18988:	e51b3010 	ldr	r3, [fp, #-16]
   1898c:	e3a02014 	mov	r2, #20
   18990:	e0020392 	mul	r2, r2, r3
   18994:	e3093168 	movw	r3, #37224	; 0x9168
   18998:	e3403002 	movt	r3, #2
   1899c:	e0823003 	add	r3, r2, r3
   189a0:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   189a4:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   189a8:	e1a00003 	mov	r0, r3
   189ac:	e12fff34 	blx	r4
   189b0:	e1a03000 	mov	r3, r0
   189b4:	e3530000 	cmp	r3, #0
   189b8:	1a000001 	bne	189c4 <ps_cdev_init+0xa8>
   189bc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   189c0:	ea000008 	b	189e8 <ps_cdev_init+0xcc>
   189c4:	e3a03000 	mov	r3, #0
   189c8:	ea000006 	b	189e8 <ps_cdev_init+0xcc>
    for (i = 0; i < ARRAY_SIZE(dev_defn); i++) {
   189cc:	e51b3010 	ldr	r3, [fp, #-16]
   189d0:	e2833001 	add	r3, r3, #1
   189d4:	e50b3010 	str	r3, [fp, #-16]
   189d8:	e51b3010 	ldr	r3, [fp, #-16]
   189dc:	e3530001 	cmp	r3, #1
   189e0:	9affffd6 	bls	18940 <ps_cdev_init+0x24>
        }
    }
    return NULL;
   189e4:	e3a03000 	mov	r3, #0
}
   189e8:	e1a00003 	mov	r0, r3
   189ec:	e24bd008 	sub	sp, fp, #8
   189f0:	e8bd8810 	pop	{r4, fp, pc}

000189f4 <ps_cdev_static_init>:

ps_chardevice_t*
ps_cdev_static_init(const ps_io_ops_t *o, ps_chardevice_t* d, void *params)
{
   189f4:	e92d4800 	push	{fp, lr}
   189f8:	e28db004 	add	fp, sp, #4
   189fc:	e24dd018 	sub	sp, sp, #24
   18a00:	e50b0010 	str	r0, [fp, #-16]
   18a04:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   18a08:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8

    if (params == NULL) {
   18a0c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a10:	e3530000 	cmp	r3, #0
   18a14:	1a000001 	bne	18a20 <ps_cdev_static_init+0x2c>
        return NULL;
   18a18:	e3a03000 	mov	r3, #0
   18a1c:	ea00000b 	b	18a50 <ps_cdev_static_init+0x5c>
    }

    void* vaddr = params;
   18a20:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a24:	e50b3008 	str	r3, [fp, #-8]

    return uart_static_init(vaddr, o, d) ? NULL : d;
   18a28:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   18a2c:	e51b1010 	ldr	r1, [fp, #-16]
   18a30:	e51b0008 	ldr	r0, [fp, #-8]
   18a34:	eb0002a7 	bl	194d8 <uart_static_init>
   18a38:	e1a03000 	mov	r3, r0
   18a3c:	e3530000 	cmp	r3, #0
   18a40:	1a000001 	bne	18a4c <ps_cdev_static_init+0x58>
   18a44:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   18a48:	ea000000 	b	18a50 <ps_cdev_static_init+0x5c>
   18a4c:	e3a03000 	mov	r3, #0
}
   18a50:	e1a00003 	mov	r0, r3
   18a54:	e24bd004 	sub	sp, fp, #4
   18a58:	e8bd8800 	pop	{fp, pc}

00018a5c <ps_io_map>:
    const ps_io_mapper_t *io_mapper,
    uintptr_t paddr,
    size_t size,
    int cached,
    ps_mem_flags_t flags)
{
   18a5c:	e92d4810 	push	{r4, fp, lr}
   18a60:	e28db008 	add	fp, sp, #8
   18a64:	e24dd01c 	sub	sp, sp, #28
   18a68:	e50b0010 	str	r0, [fp, #-16]
   18a6c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   18a70:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   18a74:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    assert(io_mapper);
   18a78:	e51b3010 	ldr	r3, [fp, #-16]
   18a7c:	e3530000 	cmp	r3, #0
   18a80:	1a000007 	bne	18aa4 <ps_io_map+0x48>
   18a84:	e3093338 	movw	r3, #37688	; 0x9338
   18a88:	e3403002 	movt	r3, #2
   18a8c:	e3a0204f 	mov	r2, #79	; 0x4f
   18a90:	e3091190 	movw	r1, #37264	; 0x9190
   18a94:	e3401002 	movt	r1, #2
   18a98:	e30901f8 	movw	r0, #37368	; 0x91f8
   18a9c:	e3400002 	movt	r0, #2
   18aa0:	eb0016b1 	bl	1e56c <__assert_fail>
    assert(io_mapper->io_map_fn);
   18aa4:	e51b3010 	ldr	r3, [fp, #-16]
   18aa8:	e5933004 	ldr	r3, [r3, #4]
   18aac:	e3530000 	cmp	r3, #0
   18ab0:	1a000007 	bne	18ad4 <ps_io_map+0x78>
   18ab4:	e3093338 	movw	r3, #37688	; 0x9338
   18ab8:	e3403002 	movt	r3, #2
   18abc:	e3a02050 	mov	r2, #80	; 0x50
   18ac0:	e3091190 	movw	r1, #37264	; 0x9190
   18ac4:	e3401002 	movt	r1, #2
   18ac8:	e3090204 	movw	r0, #37380	; 0x9204
   18acc:	e3400002 	movt	r0, #2
   18ad0:	eb0016a5 	bl	1e56c <__assert_fail>
    return io_mapper->io_map_fn(io_mapper->cookie, paddr, size, cached, flags);
   18ad4:	e51b3010 	ldr	r3, [fp, #-16]
   18ad8:	e5934004 	ldr	r4, [r3, #4]
   18adc:	e51b3010 	ldr	r3, [fp, #-16]
   18ae0:	e5930000 	ldr	r0, [r3]
   18ae4:	e59b3004 	ldr	r3, [fp, #4]
   18ae8:	e58d3000 	str	r3, [sp]
   18aec:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18af0:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   18af4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   18af8:	e12fff34 	blx	r4
   18afc:	e1a03000 	mov	r3, r0
}
   18b00:	e1a00003 	mov	r0, r3
   18b04:	e24bd008 	sub	sp, fp, #8
   18b08:	e8bd8810 	pop	{r4, fp, pc}

00018b0c <chardev_map>:
};

static inline void *chardev_map(
    const struct dev_defn *dev,
    const ps_io_ops_t *ops)
{
   18b0c:	e92d4800 	push	{fp, lr}
   18b10:	e28db004 	add	fp, sp, #4
   18b14:	e24dd010 	sub	sp, sp, #16
   18b18:	e50b0008 	str	r0, [fp, #-8]
   18b1c:	e50b100c 	str	r1, [fp, #-12]
    return ps_io_map(
   18b20:	e51b000c 	ldr	r0, [fp, #-12]
   18b24:	e51b3008 	ldr	r3, [fp, #-8]
   18b28:	e5931004 	ldr	r1, [r3, #4]
               &ops->io_mapper,
               dev->paddr,
               dev->size,
   18b2c:	e51b3008 	ldr	r3, [fp, #-8]
   18b30:	e5933008 	ldr	r3, [r3, #8]
    return ps_io_map(
   18b34:	e1a02003 	mov	r2, r3
   18b38:	e3a03000 	mov	r3, #0
   18b3c:	e58d3000 	str	r3, [sp]
   18b40:	e3a03000 	mov	r3, #0
   18b44:	ebffffc4 	bl	18a5c <ps_io_map>
   18b48:	e1a03000 	mov	r3, r0
               0, // map uncached
               PS_MEM_NORMAL);
}
   18b4c:	e1a00003 	mov	r0, r3
   18b50:	e24bd004 	sub	sp, fp, #4
   18b54:	e8bd8800 	pop	{fp, pc}

00018b58 <zynq_uart_get_priv>:
    uint32_t txwm;          /* 0x44 Transmitter FIFO Trigger Level Register */
};
typedef volatile struct zynq_uart_regs zynq_uart_regs_t;

static inline zynq_uart_regs_t *zynq_uart_get_priv(ps_chardevice_t *d)
{
   18b58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   18b5c:	e28db000 	add	fp, sp, #0
   18b60:	e24dd00c 	sub	sp, sp, #12
   18b64:	e50b0008 	str	r0, [fp, #-8]
    return (zynq_uart_regs_t *)d->vaddr;
   18b68:	e51b3008 	ldr	r3, [fp, #-8]
   18b6c:	e5933004 	ldr	r3, [r3, #4]
}
   18b70:	e1a00003 	mov	r0, r3
   18b74:	e28bd000 	add	sp, fp, #0
   18b78:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   18b7c:	e12fff1e 	bx	lr

00018b80 <zynq_uart_enable_tx>:

static inline void zynq_uart_enable_tx(
    zynq_uart_regs_t *regs)
{
   18b80:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   18b84:	e28db000 	add	fp, sp, #0
   18b88:	e24dd00c 	sub	sp, sp, #12
   18b8c:	e50b0008 	str	r0, [fp, #-8]
    regs->cr &= ~UART_CR_TXDIS;
   18b90:	e51b3008 	ldr	r3, [fp, #-8]
   18b94:	e5933000 	ldr	r3, [r3]
   18b98:	e3c32020 	bic	r2, r3, #32
   18b9c:	e51b3008 	ldr	r3, [fp, #-8]
   18ba0:	e5832000 	str	r2, [r3]
    regs->cr |= UART_CR_TXEN;
   18ba4:	e51b3008 	ldr	r3, [fp, #-8]
   18ba8:	e5933000 	ldr	r3, [r3]
   18bac:	e3832010 	orr	r2, r3, #16
   18bb0:	e51b3008 	ldr	r3, [fp, #-8]
   18bb4:	e5832000 	str	r2, [r3]
}
   18bb8:	e320f000 	nop	{0}
   18bbc:	e28bd000 	add	sp, fp, #0
   18bc0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   18bc4:	e12fff1e 	bx	lr

00018bc8 <zynq_uart_enable_rx>:

static inline void zynq_uart_enable_rx(
    zynq_uart_regs_t *regs)
{
   18bc8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   18bcc:	e28db000 	add	fp, sp, #0
   18bd0:	e24dd00c 	sub	sp, sp, #12
   18bd4:	e50b0008 	str	r0, [fp, #-8]
    regs->cr &= ~UART_CR_RXDIS;
   18bd8:	e51b3008 	ldr	r3, [fp, #-8]
   18bdc:	e5933000 	ldr	r3, [r3]
   18be0:	e3c32008 	bic	r2, r3, #8
   18be4:	e51b3008 	ldr	r3, [fp, #-8]
   18be8:	e5832000 	str	r2, [r3]
    regs->cr |= UART_CR_RXEN;
   18bec:	e51b3008 	ldr	r3, [fp, #-8]
   18bf0:	e5933000 	ldr	r3, [r3]
   18bf4:	e3832004 	orr	r2, r3, #4
   18bf8:	e51b3008 	ldr	r3, [fp, #-8]
   18bfc:	e5832000 	str	r2, [r3]
}
   18c00:	e320f000 	nop	{0}
   18c04:	e28bd000 	add	sp, fp, #0
   18c08:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   18c0c:	e12fff1e 	bx	lr

00018c10 <uart_getchar>:

int uart_getchar(
    ps_chardevice_t *d)
{
   18c10:	e92d4800 	push	{fp, lr}
   18c14:	e28db004 	add	fp, sp, #4
   18c18:	e24dd018 	sub	sp, sp, #24
   18c1c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    zynq_uart_regs_t *regs = zynq_uart_get_priv(d);
   18c20:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c24:	ebffffcb 	bl	18b58 <zynq_uart_get_priv>
   18c28:	e50b000c 	str	r0, [fp, #-12]
    int c = -1;
   18c2c:	e3e03000 	mvn	r3, #0
   18c30:	e50b3008 	str	r3, [fp, #-8]

    uint32_t imr = regs->imr;
   18c34:	e51b300c 	ldr	r3, [fp, #-12]
   18c38:	e5933010 	ldr	r3, [r3, #16]
   18c3c:	e50b3010 	str	r3, [fp, #-16]
    regs->idr = imr;
   18c40:	e51b300c 	ldr	r3, [fp, #-12]
   18c44:	e51b2010 	ldr	r2, [fp, #-16]
   18c48:	e583200c 	str	r2, [r3, #12]
    /* uart_handle_irq() clears the RTRIG interrupt, but it does not catch all
     * corner cases. So we clear it here again, assuming the caller loops
     * reading chars to drain the FIFO anyway. Register implements the "write
     * a 1 to clear" semantic.
     */
    regs->isr = UART_ISR_RTRIG;
   18c4c:	e51b300c 	ldr	r3, [fp, #-12]
   18c50:	e3a02001 	mov	r2, #1
   18c54:	e5832014 	str	r2, [r3, #20]

    if (!(regs->sr & UART_SR_REMPTY)) {
   18c58:	e51b300c 	ldr	r3, [fp, #-12]
   18c5c:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   18c60:	e2033002 	and	r3, r3, #2
   18c64:	e3530000 	cmp	r3, #0
   18c68:	1a00000a 	bne	18c98 <uart_getchar+0x88>
        c = regs->fifo;
   18c6c:	e51b300c 	ldr	r3, [fp, #-12]
   18c70:	e5933030 	ldr	r3, [r3, #48]	; 0x30
   18c74:	e50b3008 	str	r3, [fp, #-8]

        /* Clear the Rx timeout interrupt status bit if set. Register
         * implements the "write a 1 to clear" semantic.
         */
        if (regs->isr & UART_ISR_TIMEOUT) {
   18c78:	e51b300c 	ldr	r3, [fp, #-12]
   18c7c:	e5933014 	ldr	r3, [r3, #20]
   18c80:	e2033c01 	and	r3, r3, #256	; 0x100
   18c84:	e3530000 	cmp	r3, #0
   18c88:	0a000002 	beq	18c98 <uart_getchar+0x88>
            regs->isr = UART_ISR_TIMEOUT;
   18c8c:	e51b300c 	ldr	r3, [fp, #-12]
   18c90:	e3a02c01 	mov	r2, #256	; 0x100
   18c94:	e5832014 	str	r2, [r3, #20]
        }
    }

    regs->ier = imr;
   18c98:	e51b300c 	ldr	r3, [fp, #-12]
   18c9c:	e51b2010 	ldr	r2, [fp, #-16]
   18ca0:	e5832008 	str	r2, [r3, #8]

    return c;
   18ca4:	e51b3008 	ldr	r3, [fp, #-8]
}
   18ca8:	e1a00003 	mov	r0, r3
   18cac:	e24bd004 	sub	sp, fp, #4
   18cb0:	e8bd8800 	pop	{fp, pc}

00018cb4 <uart_putchar>:

int uart_putchar(
    ps_chardevice_t *d,
    int c)
{
   18cb4:	e92d4800 	push	{fp, lr}
   18cb8:	e28db004 	add	fp, sp, #4
   18cbc:	e24dd018 	sub	sp, sp, #24
   18cc0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   18cc4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    int ret = -1;
   18cc8:	e3e03000 	mvn	r3, #0
   18ccc:	e50b3008 	str	r3, [fp, #-8]
    zynq_uart_regs_t *regs = zynq_uart_get_priv(d);
   18cd0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd4:	ebffff9f 	bl	18b58 <zynq_uart_get_priv>
   18cd8:	e50b000c 	str	r0, [fp, #-12]

    uint32_t imr = regs->imr;
   18cdc:	e51b300c 	ldr	r3, [fp, #-12]
   18ce0:	e5933010 	ldr	r3, [r3, #16]
   18ce4:	e50b3010 	str	r3, [fp, #-16]
    regs->idr = imr;
   18ce8:	e51b300c 	ldr	r3, [fp, #-12]
   18cec:	e51b2010 	ldr	r2, [fp, #-16]
   18cf0:	e583200c 	str	r2, [r3, #12]

    if (c == '\n' && (d->flags & SERIAL_AUTO_CR)) {
   18cf4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18cf8:	e353000a 	cmp	r3, #10
   18cfc:	1a000012 	bne	18d4c <uart_putchar+0x98>
   18d00:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d04:	e59330c4 	ldr	r3, [r3, #196]	; 0xc4
   18d08:	e2033001 	and	r3, r3, #1
   18d0c:	e3530000 	cmp	r3, #0
   18d10:	0a00000d 	beq	18d4c <uart_putchar+0x98>
        /* check if 2 bytes are free - tx trigger level is 63 and
         * this bit is set if the fifo level is >= the trigger level
         */
        if (!(regs->sr & UART_SR_TTRIG)) {
   18d14:	e51b300c 	ldr	r3, [fp, #-12]
   18d18:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   18d1c:	e2033a02 	and	r3, r3, #8192	; 0x2000
   18d20:	e3530000 	cmp	r3, #0
   18d24:	1a000012 	bne	18d74 <uart_putchar+0xc0>

            regs->fifo = '\r';
   18d28:	e51b300c 	ldr	r3, [fp, #-12]
   18d2c:	e3a0200d 	mov	r2, #13
   18d30:	e5832030 	str	r2, [r3, #48]	; 0x30
            regs->fifo = '\n';
   18d34:	e51b300c 	ldr	r3, [fp, #-12]
   18d38:	e3a0200a 	mov	r2, #10
   18d3c:	e5832030 	str	r2, [r3, #48]	; 0x30

            ret = '\n';
   18d40:	e3a0300a 	mov	r3, #10
   18d44:	e50b3008 	str	r3, [fp, #-8]
        if (!(regs->sr & UART_SR_TTRIG)) {
   18d48:	ea000009 	b	18d74 <uart_putchar+0xc0>
        }
    } else if (!(regs->sr & UART_SR_TFUL)) {
   18d4c:	e51b300c 	ldr	r3, [fp, #-12]
   18d50:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
   18d54:	e2033010 	and	r3, r3, #16
   18d58:	e3530000 	cmp	r3, #0
   18d5c:	1a000004 	bne	18d74 <uart_putchar+0xc0>
        regs->fifo = c;
   18d60:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   18d64:	e51b300c 	ldr	r3, [fp, #-12]
   18d68:	e5832030 	str	r2, [r3, #48]	; 0x30
        ret = c;
   18d6c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18d70:	e50b3008 	str	r3, [fp, #-8]
    }

    while ((regs->sr & (UART_SR_TEMPTY | UART_SR_TACTIVE)) != UART_SR_TEMPTY);
   18d74:	e320f000 	nop	{0}
   18d78:	e51b300c 	ldr	r3, [fp, #-12]
   18d7c:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
   18d80:	e3003808 	movw	r3, #2056	; 0x808
   18d84:	e0033002 	and	r3, r3, r2
   18d88:	e3530008 	cmp	r3, #8
   18d8c:	1afffff9 	bne	18d78 <uart_putchar+0xc4>

    regs->ier = imr;
   18d90:	e51b300c 	ldr	r3, [fp, #-12]
   18d94:	e51b2010 	ldr	r2, [fp, #-16]
   18d98:	e5832008 	str	r2, [r3, #8]

    return ret;
   18d9c:	e51b3008 	ldr	r3, [fp, #-8]
}
   18da0:	e1a00003 	mov	r0, r3
   18da4:	e24bd004 	sub	sp, fp, #4
   18da8:	e8bd8800 	pop	{fp, pc}

00018dac <uart_handle_irq>:

static void uart_handle_irq(
    ps_chardevice_t *d)
{
   18dac:	e92d4800 	push	{fp, lr}
   18db0:	e28db004 	add	fp, sp, #4
   18db4:	e24dd010 	sub	sp, sp, #16
   18db8:	e50b0010 	str	r0, [fp, #-16]
    zynq_uart_regs_t *regs = zynq_uart_get_priv(d);
   18dbc:	e51b0010 	ldr	r0, [fp, #-16]
   18dc0:	ebffff64 	bl	18b58 <zynq_uart_get_priv>
   18dc4:	e50b0008 	str	r0, [fp, #-8]
    regs->isr = UART_ISR_RTRIG;
   18dc8:	e51b3008 	ldr	r3, [fp, #-8]
   18dcc:	e3a02001 	mov	r2, #1
   18dd0:	e5832014 	str	r2, [r3, #20]
}
   18dd4:	e320f000 	nop	{0}
   18dd8:	e24bd004 	sub	sp, fp, #4
   18ddc:	e8bd8800 	pop	{fp, pc}

00018de0 <zynq_uart_calc_baud_divs>:
    long clk,
    long baud,
    unsigned int *rdiv8,
    uint32_t *rcd,
    uint32_t *rbdiv)
{
   18de0:	e92d4800 	push	{fp, lr}
   18de4:	e28db004 	add	fp, sp, #4
   18de8:	e24dd028 	sub	sp, sp, #40	; 0x28
   18dec:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   18df0:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   18df4:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   18df8:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    /* Safety checks */
    assert(rdiv8 != NULL);
   18dfc:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   18e00:	e3530000 	cmp	r3, #0
   18e04:	1a000007 	bne	18e28 <zynq_uart_calc_baud_divs+0x48>
   18e08:	e30932e8 	movw	r3, #37608	; 0x92e8
   18e0c:	e3403002 	movt	r3, #2
   18e10:	e300210d 	movw	r2, #269	; 0x10d
   18e14:	e309121c 	movw	r1, #37404	; 0x921c
   18e18:	e3401002 	movt	r1, #2
   18e1c:	e3090284 	movw	r0, #37508	; 0x9284
   18e20:	e3400002 	movt	r0, #2
   18e24:	eb0015d0 	bl	1e56c <__assert_fail>
    assert(rcd != NULL);
   18e28:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e2c:	e3530000 	cmp	r3, #0
   18e30:	1a000007 	bne	18e54 <zynq_uart_calc_baud_divs+0x74>
   18e34:	e30932e8 	movw	r3, #37608	; 0x92e8
   18e38:	e3403002 	movt	r3, #2
   18e3c:	e300210e 	movw	r2, #270	; 0x10e
   18e40:	e309121c 	movw	r1, #37404	; 0x921c
   18e44:	e3401002 	movt	r1, #2
   18e48:	e3090294 	movw	r0, #37524	; 0x9294
   18e4c:	e3400002 	movt	r0, #2
   18e50:	eb0015c5 	bl	1e56c <__assert_fail>
    assert(rbdiv != NULL);
   18e54:	e59b3004 	ldr	r3, [fp, #4]
   18e58:	e3530000 	cmp	r3, #0
   18e5c:	1a000007 	bne	18e80 <zynq_uart_calc_baud_divs+0xa0>
   18e60:	e30932e8 	movw	r3, #37608	; 0x92e8
   18e64:	e3403002 	movt	r3, #2
   18e68:	e300210f 	movw	r2, #271	; 0x10f
   18e6c:	e309121c 	movw	r1, #37404	; 0x921c
   18e70:	e3401002 	movt	r1, #2
   18e74:	e30902a0 	movw	r0, #37536	; 0x92a0
   18e78:	e3400002 	movt	r0, #2
   18e7c:	eb0015ba 	bl	1e56c <__assert_fail>

    uint32_t cd, bdiv;
    long rbaud;
    unsigned int calc_baud, baud_error, best_baud_error = ~0;
   18e80:	e3e03000 	mvn	r3, #0
   18e84:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

    /* Calculate the UART clock divisor */
    if (baud < clk / ((UART_BAUDDIV_BDIV_MAX + 1) * UART_BAUDGEN_CD_MAX)) {
   18e88:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e8c:	e3082001 	movw	r2, #32769	; 0x8001
   18e90:	e3482000 	movt	r2, #32768	; 0x8000
   18e94:	e0c21392 	smull	r1, r2, r2, r3
   18e98:	e0822003 	add	r2, r2, r3
   18e9c:	e1a02bc2 	asr	r2, r2, #23
   18ea0:	e1a03fc3 	asr	r3, r3, #31
   18ea4:	e0423003 	sub	r3, r2, r3
   18ea8:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   18eac:	e1520003 	cmp	r2, r3
   18eb0:	aa00000a 	bge	18ee0 <zynq_uart_calc_baud_divs+0x100>
        *rdiv8 = 1;
   18eb4:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   18eb8:	e3a02001 	mov	r2, #1
   18ebc:	e5832000 	str	r2, [r3]
        clk /= 8;
   18ec0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   18ec4:	e2832007 	add	r2, r3, #7
   18ec8:	e3530000 	cmp	r3, #0
   18ecc:	b1a03002 	movlt	r3, r2
   18ed0:	a1a03003 	movge	r3, r3
   18ed4:	e1a031c3 	asr	r3, r3, #3
   18ed8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   18edc:	ea000002 	b	18eec <zynq_uart_calc_baud_divs+0x10c>
    } else {
        *rdiv8 = 0;
   18ee0:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   18ee4:	e3a02000 	mov	r2, #0
   18ee8:	e5832000 	str	r2, [r3]
    }

    /* Calculate values for CD and BDIV based on the desired baud rate */
    for (bdiv = UART_BAUDDIV_BDIV_MIN; bdiv <= UART_BAUDDIV_BDIV_MAX; bdiv++) {
   18eec:	e3a03004 	mov	r3, #4
   18ef0:	e50b3008 	str	r3, [fp, #-8]
   18ef4:	ea00003a 	b	18fe4 <zynq_uart_calc_baud_divs+0x204>
        cd = clk / (baud * (bdiv + 1));
   18ef8:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   18efc:	e51b3008 	ldr	r3, [fp, #-8]
   18f00:	e2833001 	add	r3, r3, #1
   18f04:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f08:	e0030392 	mul	r3, r2, r3
   18f0c:	e1a01003 	mov	r1, r3
   18f10:	eb0034e5 	bl	262ac <__udivsi3>
   18f14:	e1a03000 	mov	r3, r0
   18f18:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
        if (cd < UART_BAUDGEN_CD_MIN || cd > UART_BAUDGEN_CD_MAX) {
   18f1c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f20:	e3530000 	cmp	r3, #0
   18f24:	0a00002a 	beq	18fd4 <zynq_uart_calc_baud_divs+0x1f4>
   18f28:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f2c:	e3530801 	cmp	r3, #65536	; 0x10000
   18f30:	2a000027 	bcs	18fd4 <zynq_uart_calc_baud_divs+0x1f4>
            continue;
        }

        calc_baud = clk / (cd * (bdiv + 1));
   18f34:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f38:	e51b3008 	ldr	r3, [fp, #-8]
   18f3c:	e2833001 	add	r3, r3, #1
   18f40:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f44:	e0030392 	mul	r3, r2, r3
   18f48:	e1a01003 	mov	r1, r3
   18f4c:	eb0034d6 	bl	262ac <__udivsi3>
   18f50:	e1a03000 	mov	r3, r0
   18f54:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4

        if (baud > calc_baud) {
   18f58:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f5c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   18f60:	e1520003 	cmp	r2, r3
   18f64:	2a000004 	bcs	18f7c <zynq_uart_calc_baud_divs+0x19c>
            baud_error = baud - calc_baud;
   18f68:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f6c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f70:	e0423003 	sub	r3, r2, r3
   18f74:	e50b3010 	str	r3, [fp, #-16]
   18f78:	ea000003 	b	18f8c <zynq_uart_calc_baud_divs+0x1ac>
        } else {
            baud_error = calc_baud - baud;
   18f7c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f80:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   18f84:	e0423003 	sub	r3, r2, r3
   18f88:	e50b3010 	str	r3, [fp, #-16]
        }

        if (baud_error < best_baud_error) {
   18f8c:	e51b2010 	ldr	r2, [fp, #-16]
   18f90:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   18f94:	e1520003 	cmp	r2, r3
   18f98:	2a00000e 	bcs	18fd8 <zynq_uart_calc_baud_divs+0x1f8>
            best_baud_error = baud_error;
   18f9c:	e51b3010 	ldr	r3, [fp, #-16]
   18fa0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
            *rcd = cd;
   18fa4:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   18fa8:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   18fac:	e5832000 	str	r2, [r3]
            *rbdiv = bdiv;
   18fb0:	e59b3004 	ldr	r3, [fp, #4]
   18fb4:	e51b2008 	ldr	r2, [fp, #-8]
   18fb8:	e5832000 	str	r2, [r3]
            rbaud = calc_baud;
   18fbc:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   18fc0:	e50b300c 	str	r3, [fp, #-12]

            /* Short-circuit */
            if (baud_error == 0) {
   18fc4:	e51b3010 	ldr	r3, [fp, #-16]
   18fc8:	e3530000 	cmp	r3, #0
   18fcc:	0a000008 	beq	18ff4 <zynq_uart_calc_baud_divs+0x214>
   18fd0:	ea000000 	b	18fd8 <zynq_uart_calc_baud_divs+0x1f8>
            continue;
   18fd4:	e320f000 	nop	{0}
    for (bdiv = UART_BAUDDIV_BDIV_MIN; bdiv <= UART_BAUDDIV_BDIV_MAX; bdiv++) {
   18fd8:	e51b3008 	ldr	r3, [fp, #-8]
   18fdc:	e2833001 	add	r3, r3, #1
   18fe0:	e50b3008 	str	r3, [fp, #-8]
   18fe4:	e51b3008 	ldr	r3, [fp, #-8]
   18fe8:	e35300ff 	cmp	r3, #255	; 0xff
   18fec:	9affffc1 	bls	18ef8 <zynq_uart_calc_baud_divs+0x118>
   18ff0:	ea000000 	b	18ff8 <zynq_uart_calc_baud_divs+0x218>
                break;
   18ff4:	e320f000 	nop	{0}
            }
        }
    }

    return rbaud;
   18ff8:	e51b300c 	ldr	r3, [fp, #-12]
}
   18ffc:	e1a00003 	mov	r0, r3
   19000:	e24bd004 	sub	sp, fp, #4
   19004:	e8bd8800 	pop	{fp, pc}

00019008 <zynq_uart_set_baud>:
 * BAUDGEN.CD is 16 bit, BAUDDIV.BDIV is 8 bit
 */
static void zynq_uart_set_baud(
    ps_chardevice_t *d,
    long bps)
{
   19008:	e92d4800 	push	{fp, lr}
   1900c:	e28db004 	add	fp, sp, #4
   19010:	e24dd020 	sub	sp, sp, #32
   19014:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   19018:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
    zynq_uart_regs_t *regs = zynq_uart_get_priv(d);
   1901c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   19020:	ebfffecc 	bl	18b58 <zynq_uart_get_priv>
   19024:	e50b0008 	str	r0, [fp, #-8]
    uint32_t cd = 0;
   19028:	e3a03000 	mov	r3, #0
   1902c:	e50b300c 	str	r3, [fp, #-12]
    uint32_t bdiv = 0;
   19030:	e3a03000 	mov	r3, #0
   19034:	e50b3010 	str	r3, [fp, #-16]
    unsigned int div8;

    zynq_uart_calc_baud_divs(UART_REF_CLK, bps, &div8, &cd, &bdiv);
   19038:	e24b100c 	sub	r1, fp, #12
   1903c:	e24b2014 	sub	r2, fp, #20
   19040:	e24b3010 	sub	r3, fp, #16
   19044:	e58d3000 	str	r3, [sp]
   19048:	e1a03001 	mov	r3, r1
   1904c:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   19050:	e30f0080 	movw	r0, #61568	; 0xf080
   19054:	e34002fa 	movt	r0, #762	; 0x2fa
   19058:	ebffff60 	bl	18de0 <zynq_uart_calc_baud_divs>

    /* Disable the Rx path */
    regs->cr &= ~UART_CR_RXEN;
   1905c:	e51b3008 	ldr	r3, [fp, #-8]
   19060:	e5933000 	ldr	r3, [r3]
   19064:	e3c32004 	bic	r2, r3, #4
   19068:	e51b3008 	ldr	r3, [fp, #-8]
   1906c:	e5832000 	str	r2, [r3]

    /* Disable the Tx path */
    regs->cr &= ~UART_CR_TXEN;
   19070:	e51b3008 	ldr	r3, [fp, #-8]
   19074:	e5933000 	ldr	r3, [r3]
   19078:	e3c32010 	bic	r2, r3, #16
   1907c:	e51b3008 	ldr	r3, [fp, #-8]
   19080:	e5832000 	str	r2, [r3]

    /* Apply the calculated values */
    if (div8) {
   19084:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   19088:	e3530000 	cmp	r3, #0
   1908c:	0a000005 	beq	190a8 <zynq_uart_set_baud+0xa0>
        regs->mr |= UART_MR_CLKS;
   19090:	e51b3008 	ldr	r3, [fp, #-8]
   19094:	e5933004 	ldr	r3, [r3, #4]
   19098:	e3832001 	orr	r2, r3, #1
   1909c:	e51b3008 	ldr	r3, [fp, #-8]
   190a0:	e5832004 	str	r2, [r3, #4]
   190a4:	ea000004 	b	190bc <zynq_uart_set_baud+0xb4>
    } else {
        regs->mr &= ~UART_MR_CLKS;
   190a8:	e51b3008 	ldr	r3, [fp, #-8]
   190ac:	e5933004 	ldr	r3, [r3, #4]
   190b0:	e3c32001 	bic	r2, r3, #1
   190b4:	e51b3008 	ldr	r3, [fp, #-8]
   190b8:	e5832004 	str	r2, [r3, #4]
    }

    regs->baudgen = cd;
   190bc:	e51b200c 	ldr	r2, [fp, #-12]
   190c0:	e51b3008 	ldr	r3, [fp, #-8]
   190c4:	e5832018 	str	r2, [r3, #24]
    regs->bauddiv = bdiv;
   190c8:	e51b2010 	ldr	r2, [fp, #-16]
   190cc:	e51b3008 	ldr	r3, [fp, #-8]
   190d0:	e5832034 	str	r2, [r3, #52]	; 0x34

    /* Reset the Tx and Rx paths */
    regs->cr |= UART_CR_TXRES | UART_CR_RXRES;
   190d4:	e51b3008 	ldr	r3, [fp, #-8]
   190d8:	e5933000 	ldr	r3, [r3]
   190dc:	e3832003 	orr	r2, r3, #3
   190e0:	e51b3008 	ldr	r3, [fp, #-8]
   190e4:	e5832000 	str	r2, [r3]
    while (regs->cr & (UART_CR_TXRES | UART_CR_RXRES));
   190e8:	e320f000 	nop	{0}
   190ec:	e51b3008 	ldr	r3, [fp, #-8]
   190f0:	e5933000 	ldr	r3, [r3]
   190f4:	e2033003 	and	r3, r3, #3
   190f8:	e3530000 	cmp	r3, #0
   190fc:	1afffffa 	bne	190ec <zynq_uart_set_baud+0xe4>

    /* Enable the Rx path */
    zynq_uart_enable_rx(regs);
   19100:	e51b0008 	ldr	r0, [fp, #-8]
   19104:	ebfffeaf 	bl	18bc8 <zynq_uart_enable_rx>

    /* Enable the Tx path */
    zynq_uart_enable_tx(regs);
   19108:	e51b0008 	ldr	r0, [fp, #-8]
   1910c:	ebfffe9b 	bl	18b80 <zynq_uart_enable_tx>
}
   19110:	e320f000 	nop	{0}
   19114:	e24bd004 	sub	sp, fp, #4
   19118:	e8bd8800 	pop	{fp, pc}

0001911c <serial_configure>:
    ps_chardevice_t *d,
    long bps,
    int char_size,
    enum serial_parity parity,
    int stop_bits)
{
   1911c:	e92d4800 	push	{fp, lr}
   19120:	e28db004 	add	fp, sp, #4
   19124:	e24dd018 	sub	sp, sp, #24
   19128:	e50b0010 	str	r0, [fp, #-16]
   1912c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   19130:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   19134:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    zynq_uart_regs_t *regs = zynq_uart_get_priv(d);
   19138:	e51b0010 	ldr	r0, [fp, #-16]
   1913c:	ebfffe85 	bl	18b58 <zynq_uart_get_priv>
   19140:	e50b000c 	str	r0, [fp, #-12]
    uint32_t mr;

    /* Character size */
    mr = regs->mr;
   19144:	e51b300c 	ldr	r3, [fp, #-12]
   19148:	e5933004 	ldr	r3, [r3, #4]
   1914c:	e50b3008 	str	r3, [fp, #-8]
    if (char_size == 6) {
   19150:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19154:	e3530006 	cmp	r3, #6
   19158:	1a000006 	bne	19178 <serial_configure+0x5c>
        mr &= ~UART_MR_CHRL_MASK;
   1915c:	e51b3008 	ldr	r3, [fp, #-8]
   19160:	e3c33006 	bic	r3, r3, #6
   19164:	e50b3008 	str	r3, [fp, #-8]
        mr |= UART_MR_CHRL(0x3);
   19168:	e51b3008 	ldr	r3, [fp, #-8]
   1916c:	e3833006 	orr	r3, r3, #6
   19170:	e50b3008 	str	r3, [fp, #-8]
   19174:	ea000012 	b	191c4 <serial_configure+0xa8>
    } else if (char_size == 7) {
   19178:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1917c:	e3530007 	cmp	r3, #7
   19180:	1a000006 	bne	191a0 <serial_configure+0x84>
        mr &= ~UART_MR_CHRL_MASK;
   19184:	e51b3008 	ldr	r3, [fp, #-8]
   19188:	e3c33006 	bic	r3, r3, #6
   1918c:	e50b3008 	str	r3, [fp, #-8]
        mr |= UART_MR_CHRL(0x2);
   19190:	e51b3008 	ldr	r3, [fp, #-8]
   19194:	e3833004 	orr	r3, r3, #4
   19198:	e50b3008 	str	r3, [fp, #-8]
   1919c:	ea000008 	b	191c4 <serial_configure+0xa8>
    } else if (char_size == 8) {
   191a0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   191a4:	e3530008 	cmp	r3, #8
   191a8:	1a000003 	bne	191bc <serial_configure+0xa0>
        mr &= ~UART_MR_CHRL_MASK;
   191ac:	e51b3008 	ldr	r3, [fp, #-8]
   191b0:	e3c33006 	bic	r3, r3, #6
   191b4:	e50b3008 	str	r3, [fp, #-8]
   191b8:	ea000001 	b	191c4 <serial_configure+0xa8>
    } else {
        return -1;
   191bc:	e3e03000 	mvn	r3, #0
   191c0:	ea000036 	b	192a0 <serial_configure+0x184>
    }
    /* Stop bits */
    if (stop_bits == 1) {
   191c4:	e59b3004 	ldr	r3, [fp, #4]
   191c8:	e3530001 	cmp	r3, #1
   191cc:	1a000003 	bne	191e0 <serial_configure+0xc4>
        mr &= ~UART_MR_NBSTOP_MASK;
   191d0:	e51b3008 	ldr	r3, [fp, #-8]
   191d4:	e3c330c0 	bic	r3, r3, #192	; 0xc0
   191d8:	e50b3008 	str	r3, [fp, #-8]
   191dc:	ea00000b 	b	19210 <serial_configure+0xf4>
    } else if (stop_bits == 2) {
   191e0:	e59b3004 	ldr	r3, [fp, #4]
   191e4:	e3530002 	cmp	r3, #2
   191e8:	1a000006 	bne	19208 <serial_configure+0xec>
        mr &= ~UART_MR_NBSTOP_MASK;
   191ec:	e51b3008 	ldr	r3, [fp, #-8]
   191f0:	e3c330c0 	bic	r3, r3, #192	; 0xc0
   191f4:	e50b3008 	str	r3, [fp, #-8]
        mr |= UART_MR_NBSTOP(0x2);
   191f8:	e51b3008 	ldr	r3, [fp, #-8]
   191fc:	e3833080 	orr	r3, r3, #128	; 0x80
   19200:	e50b3008 	str	r3, [fp, #-8]
   19204:	ea000001 	b	19210 <serial_configure+0xf4>
        /* Do not handle 1.5 stop bits for now */
    } else {
        return -1;
   19208:	e3e03000 	mvn	r3, #0
   1920c:	ea000023 	b	192a0 <serial_configure+0x184>
    }
    /* Parity */
    if (parity == PARITY_EVEN) {
   19210:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19214:	e3530001 	cmp	r3, #1
   19218:	1a000003 	bne	1922c <serial_configure+0x110>
        mr &= ~UART_MR_PAR_MASK;
   1921c:	e51b3008 	ldr	r3, [fp, #-8]
   19220:	e3c33038 	bic	r3, r3, #56	; 0x38
   19224:	e50b3008 	str	r3, [fp, #-8]
   19228:	ea000015 	b	19284 <serial_configure+0x168>
    } else if (parity == PARITY_ODD) {
   1922c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19230:	e3530002 	cmp	r3, #2
   19234:	1a000006 	bne	19254 <serial_configure+0x138>
        mr &= ~UART_MR_PAR_MASK;
   19238:	e51b3008 	ldr	r3, [fp, #-8]
   1923c:	e3c33038 	bic	r3, r3, #56	; 0x38
   19240:	e50b3008 	str	r3, [fp, #-8]
        mr |= UART_MR_PAR(0x1);
   19244:	e51b3008 	ldr	r3, [fp, #-8]
   19248:	e3833008 	orr	r3, r3, #8
   1924c:	e50b3008 	str	r3, [fp, #-8]
   19250:	ea00000b 	b	19284 <serial_configure+0x168>
        /* Do not handle forced to 0 parity (space) for now */
        /* Do not handle forced to 1 parity (mark) for now */
    } else if (parity == PARITY_NONE) {
   19254:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19258:	e3530000 	cmp	r3, #0
   1925c:	1a000006 	bne	1927c <serial_configure+0x160>
        mr &= ~UART_MR_PAR_MASK;
   19260:	e51b3008 	ldr	r3, [fp, #-8]
   19264:	e3c33038 	bic	r3, r3, #56	; 0x38
   19268:	e50b3008 	str	r3, [fp, #-8]
        mr |= UART_MR_PAR(0x7);
   1926c:	e51b3008 	ldr	r3, [fp, #-8]
   19270:	e3833038 	orr	r3, r3, #56	; 0x38
   19274:	e50b3008 	str	r3, [fp, #-8]
   19278:	ea000001 	b	19284 <serial_configure+0x168>
    } else {
        return -1;
   1927c:	e3e03000 	mvn	r3, #0
   19280:	ea000006 	b	192a0 <serial_configure+0x184>
    }
    /* Apply the changes */
    regs->mr = mr;
   19284:	e51b300c 	ldr	r3, [fp, #-12]
   19288:	e51b2008 	ldr	r2, [fp, #-8]
   1928c:	e5832004 	str	r2, [r3, #4]
    /* TODO: We don't have a correct reference clock on zynqmp and
     * therefore rely on the board having been initialised by earlier
     * loaders.
     */
    /* Now set the board rate */
    zynq_uart_set_baud(d, bps);
   19290:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   19294:	e51b0010 	ldr	r0, [fp, #-16]
   19298:	ebffff5a 	bl	19008 <zynq_uart_set_baud>
#endif
    return 0;
   1929c:	e3a03000 	mov	r3, #0
}
   192a0:	e1a00003 	mov	r0, r3
   192a4:	e24bd004 	sub	sp, fp, #4
   192a8:	e8bd8800 	pop	{fp, pc}

000192ac <zynq_uart_dev_init>:
    ps_chardevice_t *dev,
    const ps_io_ops_t *ops,
    enum chardev_id id,
    void *vaddr,
    const int *irqs)
{
   192ac:	e92d4800 	push	{fp, lr}
   192b0:	e28db004 	add	fp, sp, #4
   192b4:	e24dd010 	sub	sp, sp, #16
   192b8:	e50b0008 	str	r0, [fp, #-8]
   192bc:	e50b100c 	str	r1, [fp, #-12]
   192c0:	e50b2010 	str	r2, [fp, #-16]
   192c4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    assert(NULL != dev);
   192c8:	e51b3008 	ldr	r3, [fp, #-8]
   192cc:	e3530000 	cmp	r3, #0
   192d0:	1a000007 	bne	192f4 <zynq_uart_dev_init+0x48>
   192d4:	e3093304 	movw	r3, #37636	; 0x9304
   192d8:	e3403002 	movt	r3, #2
   192dc:	e30021a9 	movw	r2, #425	; 0x1a9
   192e0:	e309121c 	movw	r1, #37404	; 0x921c
   192e4:	e3401002 	movt	r1, #2
   192e8:	e30902b0 	movw	r0, #37552	; 0x92b0
   192ec:	e3400002 	movt	r0, #2
   192f0:	eb00149d 	bl	1e56c <__assert_fail>

    memset(dev, 0, sizeof(*dev));
   192f4:	e3a020c8 	mov	r2, #200	; 0xc8
   192f8:	e3a01000 	mov	r1, #0
   192fc:	e51b0008 	ldr	r0, [fp, #-8]
   19300:	eb00227c 	bl	21cf8 <memset>

    /* Set up all the  device properties. */
    dev->id         = id;
   19304:	e51b3008 	ldr	r3, [fp, #-8]
   19308:	e51b2010 	ldr	r2, [fp, #-16]
   1930c:	e5832000 	str	r2, [r3]
    dev->vaddr      = vaddr;
   19310:	e51b3008 	ldr	r3, [fp, #-8]
   19314:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   19318:	e5832004 	str	r2, [r3, #4]
    dev->irqs       = irqs;
   1931c:	e51b3008 	ldr	r3, [fp, #-8]
   19320:	e59b2004 	ldr	r2, [fp, #4]
   19324:	e5832014 	str	r2, [r3, #20]

    dev->read       = &uart_read;
   19328:	e51b2008 	ldr	r2, [fp, #-8]
   1932c:	e3093730 	movw	r3, #38704	; 0x9730
   19330:	e3403001 	movt	r3, #1
   19334:	e5823008 	str	r3, [r2, #8]
    dev->write      = &uart_write;
   19338:	e51b2008 	ldr	r2, [fp, #-8]
   1933c:	e30936a4 	movw	r3, #38564	; 0x96a4
   19340:	e3403001 	movt	r3, #1
   19344:	e582300c 	str	r3, [r2, #12]
    dev->handle_irq = &uart_handle_irq;
   19348:	e51b2008 	ldr	r2, [fp, #-8]
   1934c:	e3083dac 	movw	r3, #36268	; 0x8dac
   19350:	e3403001 	movt	r3, #1
   19354:	e5823010 	str	r3, [r2, #16]
    dev->ioops      = *ops;
   19358:	e51b3008 	ldr	r3, [fp, #-8]
   1935c:	e51b200c 	ldr	r2, [fp, #-12]
   19360:	e2833044 	add	r3, r3, #68	; 0x44
   19364:	e1a01002 	mov	r1, r2
   19368:	e3a02080 	mov	r2, #128	; 0x80
   1936c:	e1a00003 	mov	r0, r3
   19370:	eb002113 	bl	217c4 <memcpy>

    dev->flags      = SERIAL_AUTO_CR;
   19374:	e51b3008 	ldr	r3, [fp, #-8]
   19378:	e3a02001 	mov	r2, #1
   1937c:	e58320c4 	str	r2, [r3, #196]	; 0xc4
}
   19380:	e320f000 	nop	{0}
   19384:	e24bd004 	sub	sp, fp, #4
   19388:	e8bd8800 	pop	{fp, pc}

0001938c <zynq_uart_init>:

static int zynq_uart_init(
    ps_chardevice_t *dev)
{
   1938c:	e92d4800 	push	{fp, lr}
   19390:	e28db004 	add	fp, sp, #4
   19394:	e24dd018 	sub	sp, sp, #24
   19398:	e50b0010 	str	r0, [fp, #-16]
    zynq_uart_regs_t *regs = zynq_uart_get_priv(dev);
   1939c:	e51b0010 	ldr	r0, [fp, #-16]
   193a0:	ebfffdec 	bl	18b58 <zynq_uart_get_priv>
   193a4:	e50b0008 	str	r0, [fp, #-8]
    /* Software reset */
    // TODO - UART software reset is done through a different register (UART_RST_CTRL)
    // TODO - does the I/O signal routing have to be configured here too?

    /* Configure UART character frame */
    serial_configure(dev, 115200, 8, PARITY_NONE, 1);
   193a8:	e3a03001 	mov	r3, #1
   193ac:	e58d3000 	str	r3, [sp]
   193b0:	e3a03000 	mov	r3, #0
   193b4:	e3a02008 	mov	r2, #8
   193b8:	e3a01cc2 	mov	r1, #49664	; 0xc200
   193bc:	e3401001 	movt	r1, #1
   193c0:	e51b0010 	ldr	r0, [fp, #-16]
   193c4:	ebffff54 	bl	1911c <serial_configure>

    /* Set the level of the RxFIFO trigger level */
    regs->rxwm &= ~UART_RXWM_RTRIG_MASK;    /* Clear the Rx trigger level */
   193c8:	e51b3008 	ldr	r3, [fp, #-8]
   193cc:	e5933020 	ldr	r3, [r3, #32]
   193d0:	e3c3203f 	bic	r2, r3, #63	; 0x3f
   193d4:	e51b3008 	ldr	r3, [fp, #-8]
   193d8:	e5832020 	str	r2, [r3, #32]
    regs->rxwm |= UART_RXWM_RTRIG(1);       /* Set the Rx trigger level to 1 */
   193dc:	e51b3008 	ldr	r3, [fp, #-8]
   193e0:	e5933020 	ldr	r3, [r3, #32]
   193e4:	e3832001 	orr	r2, r3, #1
   193e8:	e51b3008 	ldr	r3, [fp, #-8]
   193ec:	e5832020 	str	r2, [r3, #32]

    /* Enable the RTRIG interrupt */
    regs->ier |= UART_IER_RTRIG;            /* Set the interrupt enable bit */
   193f0:	e51b3008 	ldr	r3, [fp, #-8]
   193f4:	e5933008 	ldr	r3, [r3, #8]
   193f8:	e3832001 	orr	r2, r3, #1
   193fc:	e51b3008 	ldr	r3, [fp, #-8]
   19400:	e5832008 	str	r2, [r3, #8]
    regs->idr &= ~UART_IDR_RTRIG;           /* Clear the interrupt disable bit */
   19404:	e51b3008 	ldr	r3, [fp, #-8]
   19408:	e593300c 	ldr	r3, [r3, #12]
   1940c:	e3c32001 	bic	r2, r3, #1
   19410:	e51b3008 	ldr	r3, [fp, #-8]
   19414:	e583200c 	str	r2, [r3, #12]
    if (!(regs->imr & UART_IMR_RTRIG)) {    /* Verify the interrupt mask value */
   19418:	e51b3008 	ldr	r3, [fp, #-8]
   1941c:	e5933010 	ldr	r3, [r3, #16]
   19420:	e2033001 	and	r3, r3, #1
   19424:	e3530000 	cmp	r3, #0
   19428:	1a000001 	bne	19434 <zynq_uart_init+0xa8>
        return -1;
   1942c:	e3e03000 	mvn	r3, #0
   19430:	ea000025 	b	194cc <zynq_uart_init+0x140>
    }

    /* Enable the controller */
    regs->cr |= UART_CR_TXRES;              /* Reset Tx path */
   19434:	e51b3008 	ldr	r3, [fp, #-8]
   19438:	e5933000 	ldr	r3, [r3]
   1943c:	e3832002 	orr	r2, r3, #2
   19440:	e51b3008 	ldr	r3, [fp, #-8]
   19444:	e5832000 	str	r2, [r3]
    regs->cr |= UART_CR_RXRES;              /* Reset Rx path */
   19448:	e51b3008 	ldr	r3, [fp, #-8]
   1944c:	e5933000 	ldr	r3, [r3]
   19450:	e3832001 	orr	r2, r3, #1
   19454:	e51b3008 	ldr	r3, [fp, #-8]
   19458:	e5832000 	str	r2, [r3]
    zynq_uart_enable_rx(regs);              /* Enable the Rx path */
   1945c:	e51b0008 	ldr	r0, [fp, #-8]
   19460:	ebfffdd8 	bl	18bc8 <zynq_uart_enable_rx>
    zynq_uart_enable_tx(regs);              /* Enable the Tx path */
   19464:	e51b0008 	ldr	r0, [fp, #-8]
   19468:	ebfffdc4 	bl	18b80 <zynq_uart_enable_tx>
    regs->cr |= UART_CR_RSTTO;              /* Restart the receiver timeout counter */
   1946c:	e51b3008 	ldr	r3, [fp, #-8]
   19470:	e5933000 	ldr	r3, [r3]
   19474:	e3832040 	orr	r2, r3, #64	; 0x40
   19478:	e51b3008 	ldr	r3, [fp, #-8]
   1947c:	e5832000 	str	r2, [r3]
    regs->cr &= ~UART_CR_STTBRK;            /* Do not start to transmit a break */
   19480:	e51b3008 	ldr	r3, [fp, #-8]
   19484:	e5933000 	ldr	r3, [r3]
   19488:	e3c32080 	bic	r2, r3, #128	; 0x80
   1948c:	e51b3008 	ldr	r3, [fp, #-8]
   19490:	e5832000 	str	r2, [r3]
    regs->cr |= UART_CR_STPBRK;             /* Stop break transmitter */
   19494:	e51b3008 	ldr	r3, [fp, #-8]
   19498:	e5933000 	ldr	r3, [r3]
   1949c:	e3832c01 	orr	r2, r3, #256	; 0x100
   194a0:	e51b3008 	ldr	r3, [fp, #-8]
   194a4:	e5832000 	str	r2, [r3]

    /* Program the receiver timeout mechanism */
    regs->rxtout &= ~UART_RXTOUT_RTO_MASK;  /* Disable the timeout mechanism */
   194a8:	e51b3008 	ldr	r3, [fp, #-8]
   194ac:	e593301c 	ldr	r3, [r3, #28]
   194b0:	e3c320ff 	bic	r2, r3, #255	; 0xff
   194b4:	e51b3008 	ldr	r3, [fp, #-8]
   194b8:	e583201c 	str	r2, [r3, #28]

    /* set the tx trigger to one less than the fifo size so it's possible to check
     * if there are 2 bytes free
     */
    regs->txwm = UART_TXWM_TTRIG(UART_TX_FIFO_SIZE - 1) & UART_TXWM_TTRIG_MASK;
   194bc:	e51b3008 	ldr	r3, [fp, #-8]
   194c0:	e3a0203f 	mov	r2, #63	; 0x3f
   194c4:	e5832044 	str	r2, [r3, #68]	; 0x44

    return 0;
   194c8:	e3a03000 	mov	r3, #0
}
   194cc:	e1a00003 	mov	r0, r3
   194d0:	e24bd004 	sub	sp, fp, #4
   194d4:	e8bd8800 	pop	{fp, pc}

000194d8 <uart_static_init>:

int uart_static_init(
    void *vaddr,
    const ps_io_ops_t *ops,
    ps_chardevice_t *dev)
{
   194d8:	e92d4800 	push	{fp, lr}
   194dc:	e28db004 	add	fp, sp, #4
   194e0:	e24dd018 	sub	sp, sp, #24
   194e4:	e50b0008 	str	r0, [fp, #-8]
   194e8:	e50b100c 	str	r1, [fp, #-12]
   194ec:	e50b2010 	str	r2, [fp, #-16]
    assert(NULL != vaddr);
   194f0:	e51b3008 	ldr	r3, [fp, #-8]
   194f4:	e3530000 	cmp	r3, #0
   194f8:	1a000007 	bne	1951c <uart_static_init+0x44>
   194fc:	e3093318 	movw	r3, #37656	; 0x9318
   19500:	e3403002 	movt	r3, #2
   19504:	e30021ea 	movw	r2, #490	; 0x1ea
   19508:	e309121c 	movw	r1, #37404	; 0x921c
   1950c:	e3401002 	movt	r1, #2
   19510:	e30902bc 	movw	r0, #37564	; 0x92bc
   19514:	e3400002 	movt	r0, #2
   19518:	eb001413 	bl	1e56c <__assert_fail>
    assert(NULL != ops);
   1951c:	e51b300c 	ldr	r3, [fp, #-12]
   19520:	e3530000 	cmp	r3, #0
   19524:	1a000007 	bne	19548 <uart_static_init+0x70>
   19528:	e3093318 	movw	r3, #37656	; 0x9318
   1952c:	e3403002 	movt	r3, #2
   19530:	e30021eb 	movw	r2, #491	; 0x1eb
   19534:	e309121c 	movw	r1, #37404	; 0x921c
   19538:	e3401002 	movt	r1, #2
   1953c:	e30902cc 	movw	r0, #37580	; 0x92cc
   19540:	e3400002 	movt	r0, #2
   19544:	eb001408 	bl	1e56c <__assert_fail>
    assert(NULL != dev);
   19548:	e51b3010 	ldr	r3, [fp, #-16]
   1954c:	e3530000 	cmp	r3, #0
   19550:	1a000007 	bne	19574 <uart_static_init+0x9c>
   19554:	e3093318 	movw	r3, #37656	; 0x9318
   19558:	e3403002 	movt	r3, #2
   1955c:	e3a02f7b 	mov	r2, #492	; 0x1ec
   19560:	e309121c 	movw	r1, #37404	; 0x921c
   19564:	e3401002 	movt	r1, #2
   19568:	e30902b0 	movw	r0, #37552	; 0x92b0
   1956c:	e3400002 	movt	r0, #2
   19570:	eb0013fd 	bl	1e56c <__assert_fail>
     * to make this well defined. ZYNQ_UART0 seem a good choice, because this
     * is what the callers usually want. The contents of the interrupt field
     * are not used in the driver, so we set this to NULL.
     */

    zynq_uart_dev_init(dev, ops, ZYNQ_UART0, vaddr, NULL);
   19574:	e3a03000 	mov	r3, #0
   19578:	e58d3000 	str	r3, [sp]
   1957c:	e51b3008 	ldr	r3, [fp, #-8]
   19580:	e3a02000 	mov	r2, #0
   19584:	e51b100c 	ldr	r1, [fp, #-12]
   19588:	e51b0010 	ldr	r0, [fp, #-16]
   1958c:	ebffff46 	bl	192ac <zynq_uart_dev_init>

    return zynq_uart_init(dev);
   19590:	e51b0010 	ldr	r0, [fp, #-16]
   19594:	ebffff7c 	bl	1938c <zynq_uart_init>
   19598:	e1a03000 	mov	r3, r0

}
   1959c:	e1a00003 	mov	r0, r3
   195a0:	e24bd004 	sub	sp, fp, #4
   195a4:	e8bd8800 	pop	{fp, pc}

000195a8 <uart_init>:

int uart_init(
    const struct dev_defn *defn,
    const ps_io_ops_t *ops,
    ps_chardevice_t *dev)
{
   195a8:	e92d4800 	push	{fp, lr}
   195ac:	e28db004 	add	fp, sp, #4
   195b0:	e24dd020 	sub	sp, sp, #32
   195b4:	e50b0010 	str	r0, [fp, #-16]
   195b8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   195bc:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
    assert(NULL != defn);
   195c0:	e51b3010 	ldr	r3, [fp, #-16]
   195c4:	e3530000 	cmp	r3, #0
   195c8:	1a000007 	bne	195ec <uart_init+0x44>
   195cc:	e309332c 	movw	r3, #37676	; 0x932c
   195d0:	e3403002 	movt	r3, #2
   195d4:	e3a02c02 	mov	r2, #512	; 0x200
   195d8:	e309121c 	movw	r1, #37404	; 0x921c
   195dc:	e3401002 	movt	r1, #2
   195e0:	e30902d8 	movw	r0, #37592	; 0x92d8
   195e4:	e3400002 	movt	r0, #2
   195e8:	eb0013df 	bl	1e56c <__assert_fail>
    assert(NULL != ops);
   195ec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   195f0:	e3530000 	cmp	r3, #0
   195f4:	1a000007 	bne	19618 <uart_init+0x70>
   195f8:	e309332c 	movw	r3, #37676	; 0x932c
   195fc:	e3403002 	movt	r3, #2
   19600:	e3002201 	movw	r2, #513	; 0x201
   19604:	e309121c 	movw	r1, #37404	; 0x921c
   19608:	e3401002 	movt	r1, #2
   1960c:	e30902cc 	movw	r0, #37580	; 0x92cc
   19610:	e3400002 	movt	r0, #2
   19614:	eb0013d4 	bl	1e56c <__assert_fail>
    assert(NULL != dev);
   19618:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1961c:	e3530000 	cmp	r3, #0
   19620:	1a000007 	bne	19644 <uart_init+0x9c>
   19624:	e309332c 	movw	r3, #37676	; 0x932c
   19628:	e3403002 	movt	r3, #2
   1962c:	e3002202 	movw	r2, #514	; 0x202
   19630:	e309121c 	movw	r1, #37404	; 0x921c
   19634:	e3401002 	movt	r1, #2
   19638:	e30902b0 	movw	r0, #37552	; 0x92b0
   1963c:	e3400002 	movt	r0, #2
   19640:	eb0013c9 	bl	1e56c <__assert_fail>

    /* Attempt to map the virtual address, assure this works */
    void *vaddr = chardev_map(defn, ops);
   19644:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   19648:	e51b0010 	ldr	r0, [fp, #-16]
   1964c:	ebfffd2e 	bl	18b0c <chardev_map>
   19650:	e50b0008 	str	r0, [fp, #-8]
    if (vaddr == NULL) {
   19654:	e51b3008 	ldr	r3, [fp, #-8]
   19658:	e3530000 	cmp	r3, #0
   1965c:	1a000001 	bne	19668 <uart_init+0xc0>
        return -1;
   19660:	e3e03000 	mvn	r3, #0
   19664:	ea00000b 	b	19698 <uart_init+0xf0>
    }

    zynq_uart_dev_init(dev, ops, defn->id, vaddr, defn->irqs);
   19668:	e51b3010 	ldr	r3, [fp, #-16]
   1966c:	e5932000 	ldr	r2, [r3]
   19670:	e51b3010 	ldr	r3, [fp, #-16]
   19674:	e593300c 	ldr	r3, [r3, #12]
   19678:	e58d3000 	str	r3, [sp]
   1967c:	e51b3008 	ldr	r3, [fp, #-8]
   19680:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   19684:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   19688:	ebffff07 	bl	192ac <zynq_uart_dev_init>

    return zynq_uart_init(dev);
   1968c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   19690:	ebffff3d 	bl	1938c <zynq_uart_init>
   19694:	e1a03000 	mov	r3, r0
}
   19698:	e1a00003 	mov	r0, r3
   1969c:	e24bd004 	sub	sp, fp, #4
   196a0:	e8bd8800 	pop	{fp, pc}

000196a4 <uart_write>:
    ps_chardevice_t *d,
    const void *vdata,
    size_t count,
    chardev_callback_t rcb UNUSED,
    void *token UNUSED)
{
   196a4:	e92d4800 	push	{fp, lr}
   196a8:	e28db004 	add	fp, sp, #4
   196ac:	e24dd018 	sub	sp, sp, #24
   196b0:	e50b0010 	str	r0, [fp, #-16]
   196b4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   196b8:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   196bc:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    const unsigned char *data = (const unsigned char *)vdata;
   196c0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   196c4:	e50b300c 	str	r3, [fp, #-12]
    for (int i = 0; i < count; i++) {
   196c8:	e3a03000 	mov	r3, #0
   196cc:	e50b3008 	str	r3, [fp, #-8]
   196d0:	ea00000e 	b	19710 <uart_write+0x6c>
        if (uart_putchar(d, data[i]) < 0) {
   196d4:	e51b3008 	ldr	r3, [fp, #-8]
   196d8:	e51b200c 	ldr	r2, [fp, #-12]
   196dc:	e0823003 	add	r3, r2, r3
   196e0:	e5d33000 	ldrb	r3, [r3]
   196e4:	e1a01003 	mov	r1, r3
   196e8:	e51b0010 	ldr	r0, [fp, #-16]
   196ec:	ebfffd70 	bl	18cb4 <uart_putchar>
   196f0:	e1a03000 	mov	r3, r0
   196f4:	e3530000 	cmp	r3, #0
   196f8:	aa000001 	bge	19704 <uart_write+0x60>
            return i;
   196fc:	e51b3008 	ldr	r3, [fp, #-8]
   19700:	ea000007 	b	19724 <uart_write+0x80>
    for (int i = 0; i < count; i++) {
   19704:	e51b3008 	ldr	r3, [fp, #-8]
   19708:	e2833001 	add	r3, r3, #1
   1970c:	e50b3008 	str	r3, [fp, #-8]
   19710:	e51b3008 	ldr	r3, [fp, #-8]
   19714:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   19718:	e1520003 	cmp	r2, r3
   1971c:	8affffec 	bhi	196d4 <uart_write+0x30>
        }
    }
    return count;
   19720:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
}
   19724:	e1a00003 	mov	r0, r3
   19728:	e24bd004 	sub	sp, fp, #4
   1972c:	e8bd8800 	pop	{fp, pc}

00019730 <uart_read>:
    ps_chardevice_t *d,
    void *vdata,
    size_t count,
    chardev_callback_t rcb UNUSED,
    void *token UNUSED)
{
   19730:	e92d4800 	push	{fp, lr}
   19734:	e28db004 	add	fp, sp, #4
   19738:	e24dd020 	sub	sp, sp, #32
   1973c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   19740:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   19744:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   19748:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    char *data = (char *)vdata;
   1974c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19750:	e50b300c 	str	r3, [fp, #-12]
    for (int i = 0; i < count; i++) {
   19754:	e3a03000 	mov	r3, #0
   19758:	e50b3008 	str	r3, [fp, #-8]
   1975c:	ea000010 	b	197a4 <uart_read+0x74>
        int ret = uart_getchar(d);
   19760:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   19764:	ebfffd29 	bl	18c10 <uart_getchar>
   19768:	e50b0010 	str	r0, [fp, #-16]
        if (EOF == ret) {
   1976c:	e51b3010 	ldr	r3, [fp, #-16]
   19770:	e3730001 	cmn	r3, #1
   19774:	1a000001 	bne	19780 <uart_read+0x50>
            return i;
   19778:	e51b3008 	ldr	r3, [fp, #-8]
   1977c:	ea00000d 	b	197b8 <uart_read+0x88>
        }
        data[i] = ret;
   19780:	e51b3008 	ldr	r3, [fp, #-8]
   19784:	e51b200c 	ldr	r2, [fp, #-12]
   19788:	e0823003 	add	r3, r2, r3
   1978c:	e51b2010 	ldr	r2, [fp, #-16]
   19790:	e6ef2072 	uxtb	r2, r2
   19794:	e5c32000 	strb	r2, [r3]
    for (int i = 0; i < count; i++) {
   19798:	e51b3008 	ldr	r3, [fp, #-8]
   1979c:	e2833001 	add	r3, r3, #1
   197a0:	e50b3008 	str	r3, [fp, #-8]
   197a4:	e51b3008 	ldr	r3, [fp, #-8]
   197a8:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   197ac:	e1520003 	cmp	r2, r3
   197b0:	8affffea 	bhi	19760 <uart_read+0x30>
    }
    return count;
   197b4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
}
   197b8:	e1a00003 	mov	r0, r3
   197bc:	e24bd004 	sub	sp, fp, #4
   197c0:	e8bd8800 	pop	{fp, pc}

000197c4 <fdt32_to_cpu>:
{
	return (FDT_FORCE fdt16_t)CPU_TO_FDT16(x);
}

static inline uint32_t fdt32_to_cpu(fdt32_t x)
{
   197c4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   197c8:	e28db000 	add	fp, sp, #0
   197cc:	e24dd00c 	sub	sp, sp, #12
   197d0:	e50b0008 	str	r0, [fp, #-8]
	return (FDT_FORCE uint32_t)CPU_TO_FDT32(x);
   197d4:	e24b3008 	sub	r3, fp, #8
   197d8:	e5d33000 	ldrb	r3, [r3]
   197dc:	e1a02c03 	lsl	r2, r3, #24
   197e0:	e24b3008 	sub	r3, fp, #8
   197e4:	e2833001 	add	r3, r3, #1
   197e8:	e5d33000 	ldrb	r3, [r3]
   197ec:	e1a03803 	lsl	r3, r3, #16
   197f0:	e1822003 	orr	r2, r2, r3
   197f4:	e24b3008 	sub	r3, fp, #8
   197f8:	e2833002 	add	r3, r3, #2
   197fc:	e5d33000 	ldrb	r3, [r3]
   19800:	e1a03403 	lsl	r3, r3, #8
   19804:	e1822003 	orr	r2, r2, r3
   19808:	e24b3008 	sub	r3, fp, #8
   1980c:	e2833003 	add	r3, r3, #3
   19810:	e5d33000 	ldrb	r3, [r3]
   19814:	e1823003 	orr	r3, r2, r3
}
   19818:	e1a00003 	mov	r0, r3
   1981c:	e28bd000 	add	sp, fp, #0
   19820:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   19824:	e12fff1e 	bx	lr

00019828 <fdt32_ld>:
 *     built to work even with unaligned pointers on platforms (ike
 *     ARM) that don't like unaligned loads and stores
 */

static inline uint32_t fdt32_ld(const fdt32_t *p)
{
   19828:	e92d4800 	push	{fp, lr}
   1982c:	e28db004 	add	fp, sp, #4
   19830:	e24dd010 	sub	sp, sp, #16
   19834:	e50b0010 	str	r0, [fp, #-16]
	fdt32_t v;

	memcpy(&v, p, sizeof(v));
   19838:	e24b3008 	sub	r3, fp, #8
   1983c:	e3a02004 	mov	r2, #4
   19840:	e51b1010 	ldr	r1, [fp, #-16]
   19844:	e1a00003 	mov	r0, r3
   19848:	eb001fdd 	bl	217c4 <memcpy>
	return fdt32_to_cpu(v);
   1984c:	e51b3008 	ldr	r3, [fp, #-8]
   19850:	e1a00003 	mov	r0, r3
   19854:	ebffffda 	bl	197c4 <fdt32_to_cpu>
   19858:	e1a03000 	mov	r3, r0
}
   1985c:	e1a00003 	mov	r0, r3
   19860:	e24bd004 	sub	sp, fp, #4
   19864:	e8bd8800 	pop	{fp, pc}

00019868 <get_interrupts_prop>:
 * @param node_offset Offset to the desired device node.
 * @param is_extended Pointer to a boolean that will have true written to it if the 'interrupts-extended' property was found, false otherwise
 * @param prop_len Pointer to an int that will have the total length of the interrupts property written to it
 */
static inline const void *get_interrupts_prop(char *dtb_blob, int node_offset, bool *is_extended, int *prop_len)
{
   19868:	e92d4800 	push	{fp, lr}
   1986c:	e28db004 	add	fp, sp, #4
   19870:	e24dd028 	sub	sp, sp, #40	; 0x28
   19874:	e50b0010 	str	r0, [fp, #-16]
   19878:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1987c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   19880:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    ZF_LOGF_IF(!is_extended || !prop_len, "Ret args are NULL!");
   19884:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19888:	e3530000 	cmp	r3, #0
   1988c:	0a000002 	beq	1989c <get_interrupts_prop+0x34>
   19890:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19894:	e3530000 	cmp	r3, #0
   19898:	1a00001b 	bne	1990c <get_interrupts_prop+0xa4>
   1989c:	e3083104 	movw	r3, #33028	; 0x8104
   198a0:	e3403004 	movt	r3, #4
   198a4:	e5933000 	ldr	r3, [r3]
   198a8:	e3530801 	cmp	r3, #65536	; 0x10000
   198ac:	aa00000e 	bge	198ec <get_interrupts_prop+0x84>
   198b0:	e30933bc 	movw	r3, #37820	; 0x93bc
   198b4:	e3403002 	movt	r3, #2
   198b8:	e58d3008 	str	r3, [sp, #8]
   198bc:	e30933d8 	movw	r3, #37848	; 0x93d8
   198c0:	e3403002 	movt	r3, #2
   198c4:	e58d3004 	str	r3, [sp, #4]
   198c8:	e3a03000 	mov	r3, #0
   198cc:	e58d3000 	str	r3, [sp]
   198d0:	e30f3fff 	movw	r3, #65535	; 0xffff
   198d4:	e3a0203f 	mov	r2, #63	; 0x3f
   198d8:	e3091344 	movw	r1, #37700	; 0x9344
   198dc:	e3401002 	movt	r1, #2
   198e0:	e3090520 	movw	r0, #38176	; 0x9520
   198e4:	e3400002 	movt	r0, #2
   198e8:	eb0011a6 	bl	1df88 <_zf_log_write_d>
   198ec:	e3093520 	movw	r3, #38176	; 0x9520
   198f0:	e3403002 	movt	r3, #2
   198f4:	e3a0203f 	mov	r2, #63	; 0x3f
   198f8:	e3091344 	movw	r1, #37700	; 0x9344
   198fc:	e3401002 	movt	r1, #2
   19900:	e3090400 	movw	r0, #37888	; 0x9400
   19904:	e3400002 	movt	r0, #2
   19908:	eb001317 	bl	1e56c <__assert_fail>
    const void *interrupts_prop = fdt_getprop(dtb_blob, node_offset, "interrupts-extended", prop_len);
   1990c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19910:	e3092410 	movw	r2, #37904	; 0x9410
   19914:	e3402002 	movt	r2, #2
   19918:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1991c:	e51b0010 	ldr	r0, [fp, #-16]
   19920:	eb00089c 	bl	1bb98 <fdt_getprop>
   19924:	e50b0008 	str	r0, [fp, #-8]
    if (interrupts_prop) {
   19928:	e51b3008 	ldr	r3, [fp, #-8]
   1992c:	e3530000 	cmp	r3, #0
   19930:	0a000004 	beq	19948 <get_interrupts_prop+0xe0>
        *is_extended = true;
   19934:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19938:	e3a02001 	mov	r2, #1
   1993c:	e5c32000 	strb	r2, [r3]
        return interrupts_prop;
   19940:	e51b3008 	ldr	r3, [fp, #-8]
   19944:	ea00000f 	b	19988 <get_interrupts_prop+0x120>
    }

    interrupts_prop = fdt_getprop(dtb_blob, node_offset, "interrupts", prop_len);
   19948:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1994c:	e3092424 	movw	r2, #37924	; 0x9424
   19950:	e3402002 	movt	r2, #2
   19954:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   19958:	e51b0010 	ldr	r0, [fp, #-16]
   1995c:	eb00088d 	bl	1bb98 <fdt_getprop>
   19960:	e50b0008 	str	r0, [fp, #-8]
    if (interrupts_prop) {
   19964:	e51b3008 	ldr	r3, [fp, #-8]
   19968:	e3530000 	cmp	r3, #0
   1996c:	0a000004 	beq	19984 <get_interrupts_prop+0x11c>
        *is_extended = false;
   19970:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19974:	e3a02000 	mov	r2, #0
   19978:	e5c32000 	strb	r2, [r3]
        return interrupts_prop;
   1997c:	e51b3008 	ldr	r3, [fp, #-8]
   19980:	ea000000 	b	19988 <get_interrupts_prop+0x120>
    }

    return NULL;
   19984:	e3a03000 	mov	r3, #0
}
   19988:	e1a00003 	mov	r0, r3
   1998c:	e24bd004 	sub	sp, fp, #4
   19990:	e8bd8800 	pop	{fp, pc}

00019994 <parse_arm_gic_interrupts>:

/* Note for extended interrupts, we expect the common case that the interrupt controller phandles
 * for each block in the property is the same as the GICs phandle */
static int parse_arm_gic_interrupts(char *dtb_blob, int node_offset, int intr_controller_phandle,
                                    irq_walk_cb_fn_t callback, void *token)
{
   19994:	e92d4810 	push	{r4, fp, lr}
   19998:	e28db008 	add	fp, sp, #8
   1999c:	e24dd074 	sub	sp, sp, #116	; 0x74
   199a0:	e50b0058 	str	r0, [fp, #-88]	; 0xffffffa8
   199a4:	e50b105c 	str	r1, [fp, #-92]	; 0xffffffa4
   199a8:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
   199ac:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
    bool is_extended = false;
   199b0:	e3a03000 	mov	r3, #0
   199b4:	e54b3031 	strb	r3, [fp, #-49]	; 0xffffffcf
    int prop_len = 0;
   199b8:	e3a03000 	mov	r3, #0
   199bc:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
    const void *interrupts_prop = get_interrupts_prop(dtb_blob, node_offset, &is_extended, &prop_len);
   199c0:	e24b3038 	sub	r3, fp, #56	; 0x38
   199c4:	e24b2031 	sub	r2, fp, #49	; 0x31
   199c8:	e51b105c 	ldr	r1, [fp, #-92]	; 0xffffffa4
   199cc:	e51b0058 	ldr	r0, [fp, #-88]	; 0xffffffa8
   199d0:	ebffffa4 	bl	19868 <get_interrupts_prop>
   199d4:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
    assert(interrupts_prop != NULL);
   199d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   199dc:	e3530000 	cmp	r3, #0
   199e0:	1a000007 	bne	19a04 <parse_arm_gic_interrupts+0x70>
   199e4:	e3093504 	movw	r3, #38148	; 0x9504
   199e8:	e3403002 	movt	r3, #2
   199ec:	e3a02028 	mov	r2, #40	; 0x28
   199f0:	e3091430 	movw	r1, #37936	; 0x9430
   199f4:	e3401002 	movt	r1, #2
   199f8:	e309049c 	movw	r0, #38044	; 0x949c
   199fc:	e3400002 	movt	r0, #2
   19a00:	eb0012d9 	bl	1e56c <__assert_fail>
    int total_cells = prop_len / sizeof(uint32_t);
   19a04:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   19a08:	e1a03123 	lsr	r3, r3, #2
   19a0c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0

    int stride = ARM_GIC_INT_CELL_COUNT + (is_extended == true);
   19a10:	e55b3031 	ldrb	r3, [fp, #-49]	; 0xffffffcf
   19a14:	e3530000 	cmp	r3, #0
   19a18:	0a000001 	beq	19a24 <parse_arm_gic_interrupts+0x90>
   19a1c:	e3a03004 	mov	r3, #4
   19a20:	ea000000 	b	19a28 <parse_arm_gic_interrupts+0x94>
   19a24:	e3a03003 	mov	r3, #3
   19a28:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
    int num_interrupts = total_cells / stride;
   19a2c:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a30:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a34:	eb00329f 	bl	264b8 <__divsi3>
   19a38:	e1a03000 	mov	r3, r0
   19a3c:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8

    assert(total_cells % stride == 0);
   19a40:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   19a44:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a48:	e1a00003 	mov	r0, r3
   19a4c:	eb003321 	bl	266d8 <__aeabi_idivmod>
   19a50:	e1a03001 	mov	r3, r1
   19a54:	e3530000 	cmp	r3, #0
   19a58:	0a000007 	beq	19a7c <parse_arm_gic_interrupts+0xe8>
   19a5c:	e3093504 	movw	r3, #38148	; 0x9504
   19a60:	e3403002 	movt	r3, #2
   19a64:	e3a0202e 	mov	r2, #46	; 0x2e
   19a68:	e3091430 	movw	r1, #37936	; 0x9430
   19a6c:	e3401002 	movt	r1, #2
   19a70:	e30904b4 	movw	r0, #38068	; 0x94b4
   19a74:	e3400002 	movt	r0, #2
   19a78:	eb0012bb 	bl	1e56c <__assert_fail>

    for (int i = 0; i < num_interrupts; i++) {
   19a7c:	e3a03000 	mov	r3, #0
   19a80:	e50b3010 	str	r3, [fp, #-16]
   19a84:	ea000057 	b	19be8 <parse_arm_gic_interrupts+0x254>
        ps_irq_t curr_irq = {0};
   19a88:	e24b3050 	sub	r3, fp, #80	; 0x50
   19a8c:	e3a02000 	mov	r2, #0
   19a90:	e5832000 	str	r2, [r3]
   19a94:	e5832004 	str	r2, [r3, #4]
   19a98:	e5832008 	str	r2, [r3, #8]
   19a9c:	e583200c 	str	r2, [r3, #12]
   19aa0:	e5832010 	str	r2, [r3, #16]
   19aa4:	e5832014 	str	r2, [r3, #20]
        const void *curr = interrupts_prop + (i * stride * sizeof(uint32_t));
   19aa8:	e51b3010 	ldr	r3, [fp, #-16]
   19aac:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   19ab0:	e0030392 	mul	r3, r2, r3
   19ab4:	e1a03103 	lsl	r3, r3, #2
   19ab8:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   19abc:	e0823003 	add	r3, r2, r3
   19ac0:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
        curr_irq.type = PS_INTERRUPT;
   19ac4:	e3a03003 	mov	r3, #3
   19ac8:	e50b3050 	str	r3, [fp, #-80]	; 0xffffffb0
        uint32_t irq_type = 0;
   19acc:	e3a03000 	mov	r3, #0
   19ad0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
        uint32_t irq = 0;
   19ad4:	e3a03000 	mov	r3, #0
   19ad8:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
        if (is_extended) {
   19adc:	e55b3031 	ldrb	r3, [fp, #-49]	; 0xffffffcf
   19ae0:	e3530000 	cmp	r3, #0
   19ae4:	0a000017 	beq	19b48 <parse_arm_gic_interrupts+0x1b4>
            if (READ_CELL(1, curr, EXT_INT_CONTROLLER_OFFSET) != intr_controller_phandle) {
   19ae8:	e51b002c 	ldr	r0, [fp, #-44]	; 0xffffffd4
   19aec:	ebffff4d 	bl	19828 <fdt32_ld>
   19af0:	e1a03000 	mov	r3, r0
   19af4:	e1a00003 	mov	r0, r3
   19af8:	e3a01000 	mov	r1, #0
   19afc:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b00:	e1a02003 	mov	r2, r3
   19b04:	e1a03fc2 	asr	r3, r2, #31
   19b08:	e1510003 	cmp	r1, r3
   19b0c:	01500002 	cmpeq	r0, r2
   19b10:	0a000001 	beq	19b1c <parse_arm_gic_interrupts+0x188>
                /* Bail, we hit the uncommon case where this device has interrupts routed to
                 * different interrupt controllers */
                return -EINVAL;
   19b14:	e3e03015 	mvn	r3, #21
   19b18:	ea000037 	b	19bfc <parse_arm_gic_interrupts+0x268>
            }
            irq_type = READ_CELL(1, curr, EXT_INT_TYPE_OFFSET);
   19b1c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   19b20:	e2833004 	add	r3, r3, #4
   19b24:	e1a00003 	mov	r0, r3
   19b28:	ebffff3e 	bl	19828 <fdt32_ld>
   19b2c:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
            irq = READ_CELL(1, curr, EXT_INT_OFFSET);
   19b30:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   19b34:	e2833008 	add	r3, r3, #8
   19b38:	e1a00003 	mov	r0, r3
   19b3c:	ebffff39 	bl	19828 <fdt32_ld>
   19b40:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   19b44:	ea000007 	b	19b68 <parse_arm_gic_interrupts+0x1d4>
        } else {
            irq_type = READ_CELL(1, curr, INT_TYPE_OFFSET);
   19b48:	e51b002c 	ldr	r0, [fp, #-44]	; 0xffffffd4
   19b4c:	ebffff35 	bl	19828 <fdt32_ld>
   19b50:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
            irq = READ_CELL(1, curr, INT_OFFSET);
   19b54:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   19b58:	e2833004 	add	r3, r3, #4
   19b5c:	e1a00003 	mov	r0, r3
   19b60:	ebffff30 	bl	19828 <fdt32_ld>
   19b64:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
        }
        curr_irq.irq.number = irq + (irq_type == SPI_IRQ_TYPE ? 32 : 0);
   19b68:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   19b6c:	e3530000 	cmp	r3, #0
   19b70:	1a000001 	bne	19b7c <parse_arm_gic_interrupts+0x1e8>
   19b74:	e3a02020 	mov	r2, #32
   19b78:	ea000000 	b	19b80 <parse_arm_gic_interrupts+0x1ec>
   19b7c:	e3a02000 	mov	r2, #0
   19b80:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b84:	e0823003 	add	r3, r2, r3
   19b88:	e50b304c 	str	r3, [fp, #-76]	; 0xffffffb4
        int error = callback(curr_irq, i, num_interrupts, token);
   19b8c:	e51b3010 	ldr	r3, [fp, #-16]
   19b90:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   19b94:	e59b1004 	ldr	r1, [fp, #4]
   19b98:	e58d1010 	str	r1, [sp, #16]
   19b9c:	e58d200c 	str	r2, [sp, #12]
   19ba0:	e58d3008 	str	r3, [sp, #8]
   19ba4:	e1a0200d 	mov	r2, sp
   19ba8:	e24b3040 	sub	r3, fp, #64	; 0x40
   19bac:	e8930003 	ldm	r3, {r0, r1}
   19bb0:	e8820003 	stm	r2, {r0, r1}
   19bb4:	e24b3050 	sub	r3, fp, #80	; 0x50
   19bb8:	e893000f 	ldm	r3, {r0, r1, r2, r3}
   19bbc:	e51b4064 	ldr	r4, [fp, #-100]	; 0xffffff9c
   19bc0:	e12fff34 	blx	r4
   19bc4:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
        if (error) {
   19bc8:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   19bcc:	e3530000 	cmp	r3, #0
   19bd0:	0a000001 	beq	19bdc <parse_arm_gic_interrupts+0x248>
            return error;
   19bd4:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   19bd8:	ea000007 	b	19bfc <parse_arm_gic_interrupts+0x268>
    for (int i = 0; i < num_interrupts; i++) {
   19bdc:	e51b3010 	ldr	r3, [fp, #-16]
   19be0:	e2833001 	add	r3, r3, #1
   19be4:	e50b3010 	str	r3, [fp, #-16]
   19be8:	e51b2010 	ldr	r2, [fp, #-16]
   19bec:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   19bf0:	e1520003 	cmp	r2, r3
   19bf4:	baffffa3 	blt	19a88 <parse_arm_gic_interrupts+0xf4>
        }
    }

    return 0;
   19bf8:	e3a03000 	mov	r3, #0
}
   19bfc:	e1a00003 	mov	r0, r3
   19c00:	e24bd008 	sub	sp, fp, #8
   19c04:	e8bd8810 	pop	{r4, fp, pc}

00019c08 <fdt32_to_cpu>:
{
   19c08:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   19c0c:	e28db000 	add	fp, sp, #0
   19c10:	e24dd00c 	sub	sp, sp, #12
   19c14:	e50b0008 	str	r0, [fp, #-8]
	return (FDT_FORCE uint32_t)CPU_TO_FDT32(x);
   19c18:	e24b3008 	sub	r3, fp, #8
   19c1c:	e5d33000 	ldrb	r3, [r3]
   19c20:	e1a02c03 	lsl	r2, r3, #24
   19c24:	e24b3008 	sub	r3, fp, #8
   19c28:	e2833001 	add	r3, r3, #1
   19c2c:	e5d33000 	ldrb	r3, [r3]
   19c30:	e1a03803 	lsl	r3, r3, #16
   19c34:	e1822003 	orr	r2, r2, r3
   19c38:	e24b3008 	sub	r3, fp, #8
   19c3c:	e2833002 	add	r3, r3, #2
   19c40:	e5d33000 	ldrb	r3, [r3]
   19c44:	e1a03403 	lsl	r3, r3, #8
   19c48:	e1822003 	orr	r2, r2, r3
   19c4c:	e24b3008 	sub	r3, fp, #8
   19c50:	e2833003 	add	r3, r3, #3
   19c54:	e5d33000 	ldrb	r3, [r3]
   19c58:	e1823003 	orr	r3, r2, r3
}
   19c5c:	e1a00003 	mov	r0, r3
   19c60:	e28bd000 	add	sp, fp, #0
   19c64:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   19c68:	e12fff1e 	bx	lr

00019c6c <fdt32_ld>:
{
   19c6c:	e92d4800 	push	{fp, lr}
   19c70:	e28db004 	add	fp, sp, #4
   19c74:	e24dd010 	sub	sp, sp, #16
   19c78:	e50b0010 	str	r0, [fp, #-16]
	memcpy(&v, p, sizeof(v));
   19c7c:	e24b3008 	sub	r3, fp, #8
   19c80:	e3a02004 	mov	r2, #4
   19c84:	e51b1010 	ldr	r1, [fp, #-16]
   19c88:	e1a00003 	mov	r0, r3
   19c8c:	eb001ecc 	bl	217c4 <memcpy>
	return fdt32_to_cpu(v);
   19c90:	e51b3008 	ldr	r3, [fp, #-8]
   19c94:	e1a00003 	mov	r0, r3
   19c98:	ebffffda 	bl	19c08 <fdt32_to_cpu>
   19c9c:	e1a03000 	mov	r3, r0
}
   19ca0:	e1a00003 	mov	r0, r3
   19ca4:	e24bd004 	sub	sp, fp, #4
   19ca8:	e8bd8800 	pop	{fp, pc}

00019cac <get_interrupts_prop>:
{
   19cac:	e92d4800 	push	{fp, lr}
   19cb0:	e28db004 	add	fp, sp, #4
   19cb4:	e24dd028 	sub	sp, sp, #40	; 0x28
   19cb8:	e50b0010 	str	r0, [fp, #-16]
   19cbc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   19cc0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   19cc4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    ZF_LOGF_IF(!is_extended || !prop_len, "Ret args are NULL!");
   19cc8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ccc:	e3530000 	cmp	r3, #0
   19cd0:	0a000002 	beq	19ce0 <get_interrupts_prop+0x34>
   19cd4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19cd8:	e3530000 	cmp	r3, #0
   19cdc:	1a00001b 	bne	19d50 <get_interrupts_prop+0xa4>
   19ce0:	e3083104 	movw	r3, #33028	; 0x8104
   19ce4:	e3403004 	movt	r3, #4
   19ce8:	e5933000 	ldr	r3, [r3]
   19cec:	e3530801 	cmp	r3, #65536	; 0x10000
   19cf0:	aa00000e 	bge	19d30 <get_interrupts_prop+0x84>
   19cf4:	e30935ac 	movw	r3, #38316	; 0x95ac
   19cf8:	e3403002 	movt	r3, #2
   19cfc:	e58d3008 	str	r3, [sp, #8]
   19d00:	e30935c8 	movw	r3, #38344	; 0x95c8
   19d04:	e3403002 	movt	r3, #2
   19d08:	e58d3004 	str	r3, [sp, #4]
   19d0c:	e3a03000 	mov	r3, #0
   19d10:	e58d3000 	str	r3, [sp]
   19d14:	e30f3fff 	movw	r3, #65535	; 0xffff
   19d18:	e3a0203f 	mov	r2, #63	; 0x3f
   19d1c:	e3091534 	movw	r1, #38196	; 0x9534
   19d20:	e3401002 	movt	r1, #2
   19d24:	e30907e4 	movw	r0, #38884	; 0x97e4
   19d28:	e3400002 	movt	r0, #2
   19d2c:	eb001095 	bl	1df88 <_zf_log_write_d>
   19d30:	e30937e4 	movw	r3, #38884	; 0x97e4
   19d34:	e3403002 	movt	r3, #2
   19d38:	e3a0203f 	mov	r2, #63	; 0x3f
   19d3c:	e3091534 	movw	r1, #38196	; 0x9534
   19d40:	e3401002 	movt	r1, #2
   19d44:	e30905f0 	movw	r0, #38384	; 0x95f0
   19d48:	e3400002 	movt	r0, #2
   19d4c:	eb001206 	bl	1e56c <__assert_fail>
    const void *interrupts_prop = fdt_getprop(dtb_blob, node_offset, "interrupts-extended", prop_len);
   19d50:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d54:	e3092600 	movw	r2, #38400	; 0x9600
   19d58:	e3402002 	movt	r2, #2
   19d5c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   19d60:	e51b0010 	ldr	r0, [fp, #-16]
   19d64:	eb00078b 	bl	1bb98 <fdt_getprop>
   19d68:	e50b0008 	str	r0, [fp, #-8]
    if (interrupts_prop) {
   19d6c:	e51b3008 	ldr	r3, [fp, #-8]
   19d70:	e3530000 	cmp	r3, #0
   19d74:	0a000004 	beq	19d8c <get_interrupts_prop+0xe0>
        *is_extended = true;
   19d78:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d7c:	e3a02001 	mov	r2, #1
   19d80:	e5c32000 	strb	r2, [r3]
        return interrupts_prop;
   19d84:	e51b3008 	ldr	r3, [fp, #-8]
   19d88:	ea00000f 	b	19dcc <get_interrupts_prop+0x120>
    interrupts_prop = fdt_getprop(dtb_blob, node_offset, "interrupts", prop_len);
   19d8c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d90:	e3092614 	movw	r2, #38420	; 0x9614
   19d94:	e3402002 	movt	r2, #2
   19d98:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   19d9c:	e51b0010 	ldr	r0, [fp, #-16]
   19da0:	eb00077c 	bl	1bb98 <fdt_getprop>
   19da4:	e50b0008 	str	r0, [fp, #-8]
    if (interrupts_prop) {
   19da8:	e51b3008 	ldr	r3, [fp, #-8]
   19dac:	e3530000 	cmp	r3, #0
   19db0:	0a000004 	beq	19dc8 <get_interrupts_prop+0x11c>
        *is_extended = false;
   19db4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   19db8:	e3a02000 	mov	r2, #0
   19dbc:	e5c32000 	strb	r2, [r3]
        return interrupts_prop;
   19dc0:	e51b3008 	ldr	r3, [fp, #-8]
   19dc4:	ea000000 	b	19dcc <get_interrupts_prop+0x120>
    return NULL;
   19dc8:	e3a03000 	mov	r3, #0
}
   19dcc:	e1a00003 	mov	r0, r3
   19dd0:	e24bd004 	sub	sp, fp, #4
   19dd4:	e8bd8800 	pop	{fp, pc}

00019dd8 <parse_arm_gicv3_interrupts>:

/* Note for extended interrupts, we expect the common case that the interrupt controller phandles
 * for each block in the property is the same as the v3 GIC's phandle */
static int parse_arm_gicv3_interrupts(char *dtb_blob, int node_offset, int intr_controller_phandle,
                                      irq_walk_cb_fn_t callback, void *token)
{
   19dd8:	e92d4810 	push	{r4, fp, lr}
   19ddc:	e28db008 	add	fp, sp, #8
   19de0:	e24dd084 	sub	sp, sp, #132	; 0x84
   19de4:	e50b0068 	str	r0, [fp, #-104]	; 0xffffff98
   19de8:	e50b106c 	str	r1, [fp, #-108]	; 0xffffff94
   19dec:	e50b2070 	str	r2, [fp, #-112]	; 0xffffff90
   19df0:	e50b3074 	str	r3, [fp, #-116]	; 0xffffff8c
    bool is_extended = false;
   19df4:	e3a03000 	mov	r3, #0
   19df8:	e54b3045 	strb	r3, [fp, #-69]	; 0xffffffbb
    int prop_len = 0;
   19dfc:	e3a03000 	mov	r3, #0
   19e00:	e50b304c 	str	r3, [fp, #-76]	; 0xffffffb4
    const void *interrupts_prop = get_interrupts_prop(dtb_blob, node_offset, &is_extended, &prop_len);
   19e04:	e24b304c 	sub	r3, fp, #76	; 0x4c
   19e08:	e24b2045 	sub	r2, fp, #69	; 0x45
   19e0c:	e51b106c 	ldr	r1, [fp, #-108]	; 0xffffff94
   19e10:	e51b0068 	ldr	r0, [fp, #-104]	; 0xffffff98
   19e14:	ebffffa4 	bl	19cac <get_interrupts_prop>
   19e18:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
    assert(interrupts_prop != NULL);
   19e1c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   19e20:	e3530000 	cmp	r3, #0
   19e24:	1a000007 	bne	19e48 <parse_arm_gicv3_interrupts+0x70>
   19e28:	e30937c8 	movw	r3, #38856	; 0x97c8
   19e2c:	e3403002 	movt	r3, #2
   19e30:	e3a02036 	mov	r2, #54	; 0x36
   19e34:	e3091620 	movw	r1, #38432	; 0x9620
   19e38:	e3401002 	movt	r1, #2
   19e3c:	e309068c 	movw	r0, #38540	; 0x968c
   19e40:	e3400002 	movt	r0, #2
   19e44:	eb0011c8 	bl	1e56c <__assert_fail>
    int total_cells = prop_len / sizeof(uint32_t);
   19e48:	e51b304c 	ldr	r3, [fp, #-76]	; 0xffffffb4
   19e4c:	e1a03123 	lsr	r3, r3, #2
   19e50:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0

    /*
     * Check for the number of interrupt cells, two cases: either 3 or 4. The extra cell describes PPI
     * affinity if the interrupt is a PPI interrupt.
     */
    int intr_controller_offset = fdt_node_offset_by_phandle(dtb_blob, intr_controller_phandle);
   19e54:	e51b3070 	ldr	r3, [fp, #-112]	; 0xffffff90
   19e58:	e1a01003 	mov	r1, r3
   19e5c:	e51b0068 	ldr	r0, [fp, #-104]	; 0xffffff98
   19e60:	eb0008fc 	bl	1c258 <fdt_node_offset_by_phandle>
   19e64:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
    if (intr_controller_offset < 0) {
   19e68:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   19e6c:	e3530000 	cmp	r3, #0
   19e70:	aa000012 	bge	19ec0 <parse_arm_gicv3_interrupts+0xe8>
        ZF_LOGE("Can't find the interrupt controller's node offset");
   19e74:	e3083104 	movw	r3, #33028	; 0x8104
   19e78:	e3403004 	movt	r3, #4
   19e7c:	e5933000 	ldr	r3, [r3]
   19e80:	e3530005 	cmp	r3, #5
   19e84:	ca00000b 	bgt	19eb8 <parse_arm_gicv3_interrupts+0xe0>
   19e88:	e30936a4 	movw	r3, #38564	; 0x96a4
   19e8c:	e3403002 	movt	r3, #2
   19e90:	e58d3004 	str	r3, [sp, #4]
   19e94:	e3a03000 	mov	r3, #0
   19e98:	e58d3000 	str	r3, [sp]
   19e9c:	e3a03005 	mov	r3, #5
   19ea0:	e3a0203f 	mov	r2, #63	; 0x3f
   19ea4:	e3091620 	movw	r1, #38432	; 0x9620
   19ea8:	e3401002 	movt	r1, #2
   19eac:	e30907c8 	movw	r0, #38856	; 0x97c8
   19eb0:	e3400002 	movt	r0, #2
   19eb4:	eb001033 	bl	1df88 <_zf_log_write_d>
        return intr_controller_offset;
   19eb8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ebc:	ea0000fb 	b	1a2b0 <parse_arm_gicv3_interrupts+0x4d8>
    }
    const void *interrupt_cells_prop = fdt_getprop(dtb_blob, intr_controller_offset, "#interrupt-cells", NULL);
   19ec0:	e3a03000 	mov	r3, #0
   19ec4:	e30926d8 	movw	r2, #38616	; 0x96d8
   19ec8:	e3402002 	movt	r2, #2
   19ecc:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   19ed0:	e51b0068 	ldr	r0, [fp, #-104]	; 0xffffff98
   19ed4:	eb00072f 	bl	1bb98 <fdt_getprop>
   19ed8:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
    if (!interrupt_cells_prop) {
   19edc:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ee0:	e3530000 	cmp	r3, #0
   19ee4:	1a000012 	bne	19f34 <parse_arm_gicv3_interrupts+0x15c>
        ZF_LOGE("No '#interrupt-cells' property!");
   19ee8:	e3083104 	movw	r3, #33028	; 0x8104
   19eec:	e3403004 	movt	r3, #4
   19ef0:	e5933000 	ldr	r3, [r3]
   19ef4:	e3530005 	cmp	r3, #5
   19ef8:	ca00000b 	bgt	19f2c <parse_arm_gicv3_interrupts+0x154>
   19efc:	e30936ec 	movw	r3, #38636	; 0x96ec
   19f00:	e3403002 	movt	r3, #2
   19f04:	e58d3004 	str	r3, [sp, #4]
   19f08:	e3a03000 	mov	r3, #0
   19f0c:	e58d3000 	str	r3, [sp]
   19f10:	e3a03005 	mov	r3, #5
   19f14:	e3a02044 	mov	r2, #68	; 0x44
   19f18:	e3091620 	movw	r1, #38432	; 0x9620
   19f1c:	e3401002 	movt	r1, #2
   19f20:	e30907c8 	movw	r0, #38856	; 0x97c8
   19f24:	e3400002 	movt	r0, #2
   19f28:	eb001016 	bl	1df88 <_zf_log_write_d>
        return -EINVAL;
   19f2c:	e3e03015 	mvn	r3, #21
   19f30:	ea0000de 	b	1a2b0 <parse_arm_gicv3_interrupts+0x4d8>
    }
    uint32_t num_interrupt_cells = READ_CELL(1, interrupt_cells_prop, 0);
   19f34:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f38:	ebffff4b 	bl	19c6c <fdt32_ld>
   19f3c:	e50b002c 	str	r0, [fp, #-44]	; 0xffffffd4
    if (num_interrupt_cells != INTERRUPT_CELL_COUNT && num_interrupt_cells != INTERRUPT_AFFINITY_CELL_COUNT) {
   19f40:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   19f44:	e3530003 	cmp	r3, #3
   19f48:	0a000015 	beq	19fa4 <parse_arm_gicv3_interrupts+0x1cc>
   19f4c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   19f50:	e3530004 	cmp	r3, #4
   19f54:	0a000012 	beq	19fa4 <parse_arm_gicv3_interrupts+0x1cc>
        ZF_LOGE("This GICv3 interrupt controller has an invalid interrupt cell count!");
   19f58:	e3083104 	movw	r3, #33028	; 0x8104
   19f5c:	e3403004 	movt	r3, #4
   19f60:	e5933000 	ldr	r3, [r3]
   19f64:	e3530005 	cmp	r3, #5
   19f68:	ca00000b 	bgt	19f9c <parse_arm_gicv3_interrupts+0x1c4>
   19f6c:	e309370c 	movw	r3, #38668	; 0x970c
   19f70:	e3403002 	movt	r3, #2
   19f74:	e58d3004 	str	r3, [sp, #4]
   19f78:	e3a03000 	mov	r3, #0
   19f7c:	e58d3000 	str	r3, [sp]
   19f80:	e3a03005 	mov	r3, #5
   19f84:	e3a02049 	mov	r2, #73	; 0x49
   19f88:	e3091620 	movw	r1, #38432	; 0x9620
   19f8c:	e3401002 	movt	r1, #2
   19f90:	e30907c8 	movw	r0, #38856	; 0x97c8
   19f94:	e3400002 	movt	r0, #2
   19f98:	eb000ffa 	bl	1df88 <_zf_log_write_d>
        return -EINVAL;
   19f9c:	e3e03015 	mvn	r3, #21
   19fa0:	ea0000c2 	b	1a2b0 <parse_arm_gicv3_interrupts+0x4d8>
    }

    int stride = num_interrupt_cells + (is_extended == true);
   19fa4:	e55b3045 	ldrb	r3, [fp, #-69]	; 0xffffffbb
   19fa8:	e1a02003 	mov	r2, r3
   19fac:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   19fb0:	e0823003 	add	r3, r2, r3
   19fb4:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
    int num_interrupts = total_cells / stride;
   19fb8:	e51b1030 	ldr	r1, [fp, #-48]	; 0xffffffd0
   19fbc:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fc0:	eb00313c 	bl	264b8 <__divsi3>
   19fc4:	e1a03000 	mov	r3, r0
   19fc8:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc

    assert(total_cells % stride == 0);
   19fcc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   19fd0:	e51b1030 	ldr	r1, [fp, #-48]	; 0xffffffd0
   19fd4:	e1a00003 	mov	r0, r3
   19fd8:	eb0031be 	bl	266d8 <__aeabi_idivmod>
   19fdc:	e1a03001 	mov	r3, r1
   19fe0:	e3530000 	cmp	r3, #0
   19fe4:	0a000007 	beq	1a008 <parse_arm_gicv3_interrupts+0x230>
   19fe8:	e30937c8 	movw	r3, #38856	; 0x97c8
   19fec:	e3403002 	movt	r3, #2
   19ff0:	e3a02050 	mov	r2, #80	; 0x50
   19ff4:	e3091620 	movw	r1, #38432	; 0x9620
   19ff8:	e3401002 	movt	r1, #2
   19ffc:	e3090754 	movw	r0, #38740	; 0x9754
   1a000:	e3400002 	movt	r0, #2
   1a004:	eb001158 	bl	1e56c <__assert_fail>

    for (int i = 0; i < num_interrupts; i++) {
   1a008:	e3a03000 	mov	r3, #0
   1a00c:	e50b3010 	str	r3, [fp, #-16]
   1a010:	ea0000a1 	b	1a29c <parse_arm_gicv3_interrupts+0x4c4>
        ps_irq_t curr_irq = {0};
   1a014:	e24b3064 	sub	r3, fp, #100	; 0x64
   1a018:	e3a02000 	mov	r2, #0
   1a01c:	e5832000 	str	r2, [r3]
   1a020:	e5832004 	str	r2, [r3, #4]
   1a024:	e5832008 	str	r2, [r3, #8]
   1a028:	e583200c 	str	r2, [r3, #12]
   1a02c:	e5832010 	str	r2, [r3, #16]
   1a030:	e5832014 	str	r2, [r3, #20]
        const void *curr = interrupts_prop + (i * stride * sizeof(uint32_t));
   1a034:	e51b3010 	ldr	r3, [fp, #-16]
   1a038:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a03c:	e0030392 	mul	r3, r2, r3
   1a040:	e1a03103 	lsl	r3, r3, #2
   1a044:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a048:	e0823003 	add	r3, r2, r3
   1a04c:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
        uint32_t irq_type = 0;
   1a050:	e3a03000 	mov	r3, #0
   1a054:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
        uint32_t irq = 0;
   1a058:	e3a03000 	mov	r3, #0
   1a05c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
        uint32_t UNUSED irq_flag = 0;
   1a060:	e3a03000 	mov	r3, #0
   1a064:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
        uint32_t UNUSED irq_core_affinity_phandle = 0;
   1a068:	e3a03000 	mov	r3, #0
   1a06c:	e50b3040 	str	r3, [fp, #-64]	; 0xffffffc0

        if (is_extended) {
   1a070:	e55b3045 	ldrb	r3, [fp, #-69]	; 0xffffffbb
   1a074:	e3530000 	cmp	r3, #0
   1a078:	0a000024 	beq	1a110 <parse_arm_gicv3_interrupts+0x338>
            if (READ_CELL(1, curr, EXT_INT_CONTROLLER_OFFSET) != intr_controller_phandle) {
   1a07c:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a080:	ebfffef9 	bl	19c6c <fdt32_ld>
   1a084:	e1a03000 	mov	r3, r0
   1a088:	e1a00003 	mov	r0, r3
   1a08c:	e3a01000 	mov	r1, #0
   1a090:	e51b3070 	ldr	r3, [fp, #-112]	; 0xffffff90
   1a094:	e1a02003 	mov	r2, r3
   1a098:	e1a03fc2 	asr	r3, r2, #31
   1a09c:	e1510003 	cmp	r1, r3
   1a0a0:	01500002 	cmpeq	r0, r2
   1a0a4:	0a000001 	beq	1a0b0 <parse_arm_gicv3_interrupts+0x2d8>
                /* Bail, we hit the uncommon case where this device has interrupts routed to
                 * different interrupt controllers */
                return -EINVAL;
   1a0a8:	e3e03015 	mvn	r3, #21
   1a0ac:	ea00007f 	b	1a2b0 <parse_arm_gicv3_interrupts+0x4d8>
            }
            irq_type = READ_CELL(1, curr, EXT_INT_TYPE_OFFSET);
   1a0b0:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a0b4:	e2833004 	add	r3, r3, #4
   1a0b8:	e1a00003 	mov	r0, r3
   1a0bc:	ebfffeea 	bl	19c6c <fdt32_ld>
   1a0c0:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
            irq = READ_CELL(1, curr, EXT_INT_OFFSET);
   1a0c4:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a0c8:	e2833008 	add	r3, r3, #8
   1a0cc:	e1a00003 	mov	r0, r3
   1a0d0:	ebfffee5 	bl	19c6c <fdt32_ld>
   1a0d4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
            irq_flag = READ_CELL(1, curr, EXT_INT_FLAG_OFFSET);
   1a0d8:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a0dc:	e283300c 	add	r3, r3, #12
   1a0e0:	e1a00003 	mov	r0, r3
   1a0e4:	ebfffee0 	bl	19c6c <fdt32_ld>
   1a0e8:	e50b003c 	str	r0, [fp, #-60]	; 0xffffffc4
            if (num_interrupt_cells == INTERRUPT_AFFINITY_CELL_COUNT) {
   1a0ec:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a0f0:	e3530004 	cmp	r3, #4
   1a0f4:	1a00001a 	bne	1a164 <parse_arm_gicv3_interrupts+0x38c>
                irq_core_affinity_phandle = READ_CELL(1, curr, EXT_INT_AFFINITY_OFFSET);
   1a0f8:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a0fc:	e2833010 	add	r3, r3, #16
   1a100:	e1a00003 	mov	r0, r3
   1a104:	ebfffed8 	bl	19c6c <fdt32_ld>
   1a108:	e50b0040 	str	r0, [fp, #-64]	; 0xffffffc0
   1a10c:	ea000014 	b	1a164 <parse_arm_gicv3_interrupts+0x38c>
            }
        } else {
            irq_type = READ_CELL(1, curr, INT_TYPE_OFFSET);
   1a110:	e51b0038 	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a114:	ebfffed4 	bl	19c6c <fdt32_ld>
   1a118:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
            irq = READ_CELL(1, curr, INT_OFFSET);
   1a11c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a120:	e2833004 	add	r3, r3, #4
   1a124:	e1a00003 	mov	r0, r3
   1a128:	ebfffecf 	bl	19c6c <fdt32_ld>
   1a12c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
            irq_flag = READ_CELL(1, curr, INT_FLAG_OFFSET);
   1a130:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a134:	e2833008 	add	r3, r3, #8
   1a138:	e1a00003 	mov	r0, r3
   1a13c:	ebfffeca 	bl	19c6c <fdt32_ld>
   1a140:	e50b003c 	str	r0, [fp, #-60]	; 0xffffffc4
            if (num_interrupt_cells == INTERRUPT_CELL_COUNT) {
   1a144:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a148:	e3530003 	cmp	r3, #3
   1a14c:	1a000004 	bne	1a164 <parse_arm_gicv3_interrupts+0x38c>
                irq_core_affinity_phandle = READ_CELL(1, curr, INT_AFFINITY_OFFSET);
   1a150:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a154:	e283300c 	add	r3, r3, #12
   1a158:	e1a00003 	mov	r0, r3
   1a15c:	ebfffec2 	bl	19c6c <fdt32_ld>
   1a160:	e50b0040 	str	r0, [fp, #-64]	; 0xffffffc0
            }
        }

        /* Assumption: The parser currently treats the extended SPI/PPI interrupts as the same
         * as the normal interrupts */
        if (irq_type == SPI_INTERRUPTS || irq_type == EXTENDED_SPI_INTERRUPTS) {
   1a164:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a168:	e3530000 	cmp	r3, #0
   1a16c:	0a000002 	beq	1a17c <parse_arm_gicv3_interrupts+0x3a4>
   1a170:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a174:	e3530002 	cmp	r3, #2
   1a178:	1a000005 	bne	1a194 <parse_arm_gicv3_interrupts+0x3bc>
            curr_irq.type = PS_INTERRUPT;
   1a17c:	e3a03003 	mov	r3, #3
   1a180:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
            curr_irq.irq.number = irq + SPI_START;
   1a184:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a188:	e2833020 	add	r3, r3, #32
   1a18c:	e50b3060 	str	r3, [fp, #-96]	; 0xffffffa0
   1a190:	ea00002a 	b	1a240 <parse_arm_gicv3_interrupts+0x468>
        } else if (irq_type == PPI_INTERRUPTS || irq_type == EXTENDED_PPI_INTERRUPTS) {
   1a194:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a198:	e3530001 	cmp	r3, #1
   1a19c:	0a000002 	beq	1a1ac <parse_arm_gicv3_interrupts+0x3d4>
   1a1a0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a1a4:	e3530003 	cmp	r3, #3
   1a1a8:	1a000011 	bne	1a1f4 <parse_arm_gicv3_interrupts+0x41c>
            /* TODO Parse PPI interrupts */
            ZF_LOGE("Found an PPI interrupt in the GICv3 parser, skipping");
   1a1ac:	e3083104 	movw	r3, #33028	; 0x8104
   1a1b0:	e3403004 	movt	r3, #4
   1a1b4:	e5933000 	ldr	r3, [r3]
   1a1b8:	e3530005 	cmp	r3, #5
   1a1bc:	ca00001f 	bgt	1a240 <parse_arm_gicv3_interrupts+0x468>
   1a1c0:	e3093770 	movw	r3, #38768	; 0x9770
   1a1c4:	e3403002 	movt	r3, #2
   1a1c8:	e58d3004 	str	r3, [sp, #4]
   1a1cc:	e3a03000 	mov	r3, #0
   1a1d0:	e58d3000 	str	r3, [sp]
   1a1d4:	e3a03005 	mov	r3, #5
   1a1d8:	e3a02076 	mov	r2, #118	; 0x76
   1a1dc:	e3091620 	movw	r1, #38432	; 0x9620
   1a1e0:	e3401002 	movt	r1, #2
   1a1e4:	e30907c8 	movw	r0, #38856	; 0x97c8
   1a1e8:	e3400002 	movt	r0, #2
   1a1ec:	eb000f65 	bl	1df88 <_zf_log_write_d>
   1a1f0:	ea000012 	b	1a240 <parse_arm_gicv3_interrupts+0x468>
        } else {
            ZF_LOGE("Invalid IRQ type");
   1a1f4:	e3083104 	movw	r3, #33028	; 0x8104
   1a1f8:	e3403004 	movt	r3, #4
   1a1fc:	e5933000 	ldr	r3, [r3]
   1a200:	e3530005 	cmp	r3, #5
   1a204:	ca00000b 	bgt	1a238 <parse_arm_gicv3_interrupts+0x460>
   1a208:	e30937a8 	movw	r3, #38824	; 0x97a8
   1a20c:	e3403002 	movt	r3, #2
   1a210:	e58d3004 	str	r3, [sp, #4]
   1a214:	e3a03000 	mov	r3, #0
   1a218:	e58d3000 	str	r3, [sp]
   1a21c:	e3a03005 	mov	r3, #5
   1a220:	e3a02078 	mov	r2, #120	; 0x78
   1a224:	e3091620 	movw	r1, #38432	; 0x9620
   1a228:	e3401002 	movt	r1, #2
   1a22c:	e30907c8 	movw	r0, #38856	; 0x97c8
   1a230:	e3400002 	movt	r0, #2
   1a234:	eb000f53 	bl	1df88 <_zf_log_write_d>
            return -EINVAL;
   1a238:	e3e03015 	mvn	r3, #21
   1a23c:	ea00001b 	b	1a2b0 <parse_arm_gicv3_interrupts+0x4d8>
        }

        int error = callback(curr_irq, i, num_interrupts, token);
   1a240:	e51b3010 	ldr	r3, [fp, #-16]
   1a244:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a248:	e59b1004 	ldr	r1, [fp, #4]
   1a24c:	e58d1010 	str	r1, [sp, #16]
   1a250:	e58d200c 	str	r2, [sp, #12]
   1a254:	e58d3008 	str	r3, [sp, #8]
   1a258:	e1a0200d 	mov	r2, sp
   1a25c:	e24b3054 	sub	r3, fp, #84	; 0x54
   1a260:	e8930003 	ldm	r3, {r0, r1}
   1a264:	e8820003 	stm	r2, {r0, r1}
   1a268:	e24b3064 	sub	r3, fp, #100	; 0x64
   1a26c:	e893000f 	ldm	r3, {r0, r1, r2, r3}
   1a270:	e51b4074 	ldr	r4, [fp, #-116]	; 0xffffff8c
   1a274:	e12fff34 	blx	r4
   1a278:	e50b0044 	str	r0, [fp, #-68]	; 0xffffffbc
        if (error) {
   1a27c:	e51b3044 	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a280:	e3530000 	cmp	r3, #0
   1a284:	0a000001 	beq	1a290 <parse_arm_gicv3_interrupts+0x4b8>
            return error;
   1a288:	e51b3044 	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a28c:	ea000007 	b	1a2b0 <parse_arm_gicv3_interrupts+0x4d8>
    for (int i = 0; i < num_interrupts; i++) {
   1a290:	e51b3010 	ldr	r3, [fp, #-16]
   1a294:	e2833001 	add	r3, r3, #1
   1a298:	e50b3010 	str	r3, [fp, #-16]
   1a29c:	e51b2010 	ldr	r2, [fp, #-16]
   1a2a0:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a2a4:	e1520003 	cmp	r2, r3
   1a2a8:	baffff59 	blt	1a014 <parse_arm_gicv3_interrupts+0x23c>
        }
    }

    return 0;
   1a2ac:	e3a03000 	mov	r3, #0
}
   1a2b0:	e1a00003 	mov	r0, r3
   1a2b4:	e24bd008 	sub	sp, fp, #8
   1a2b8:	e8bd8810 	pop	{r4, fp, pc}

0001a2bc <fdt32_to_cpu>:
{
   1a2bc:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1a2c0:	e28db000 	add	fp, sp, #0
   1a2c4:	e24dd00c 	sub	sp, sp, #12
   1a2c8:	e50b0008 	str	r0, [fp, #-8]
	return (FDT_FORCE uint32_t)CPU_TO_FDT32(x);
   1a2cc:	e24b3008 	sub	r3, fp, #8
   1a2d0:	e5d33000 	ldrb	r3, [r3]
   1a2d4:	e1a02c03 	lsl	r2, r3, #24
   1a2d8:	e24b3008 	sub	r3, fp, #8
   1a2dc:	e2833001 	add	r3, r3, #1
   1a2e0:	e5d33000 	ldrb	r3, [r3]
   1a2e4:	e1a03803 	lsl	r3, r3, #16
   1a2e8:	e1822003 	orr	r2, r2, r3
   1a2ec:	e24b3008 	sub	r3, fp, #8
   1a2f0:	e2833002 	add	r3, r3, #2
   1a2f4:	e5d33000 	ldrb	r3, [r3]
   1a2f8:	e1a03403 	lsl	r3, r3, #8
   1a2fc:	e1822003 	orr	r2, r2, r3
   1a300:	e24b3008 	sub	r3, fp, #8
   1a304:	e2833003 	add	r3, r3, #3
   1a308:	e5d33000 	ldrb	r3, [r3]
   1a30c:	e1823003 	orr	r3, r2, r3
}
   1a310:	e1a00003 	mov	r0, r3
   1a314:	e28bd000 	add	sp, fp, #0
   1a318:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1a31c:	e12fff1e 	bx	lr

0001a320 <fdt32_ld>:
{
   1a320:	e92d4800 	push	{fp, lr}
   1a324:	e28db004 	add	fp, sp, #4
   1a328:	e24dd010 	sub	sp, sp, #16
   1a32c:	e50b0010 	str	r0, [fp, #-16]
	memcpy(&v, p, sizeof(v));
   1a330:	e24b3008 	sub	r3, fp, #8
   1a334:	e3a02004 	mov	r2, #4
   1a338:	e51b1010 	ldr	r1, [fp, #-16]
   1a33c:	e1a00003 	mov	r0, r3
   1a340:	eb001d1f 	bl	217c4 <memcpy>
	return fdt32_to_cpu(v);
   1a344:	e51b3008 	ldr	r3, [fp, #-8]
   1a348:	e1a00003 	mov	r0, r3
   1a34c:	ebffffda 	bl	1a2bc <fdt32_to_cpu>
   1a350:	e1a03000 	mov	r3, r0
}
   1a354:	e1a00003 	mov	r0, r3
   1a358:	e24bd004 	sub	sp, fp, #4
   1a35c:	e8bd8800 	pop	{fp, pc}

0001a360 <get_interrupts_prop>:
{
   1a360:	e92d4800 	push	{fp, lr}
   1a364:	e28db004 	add	fp, sp, #4
   1a368:	e24dd028 	sub	sp, sp, #40	; 0x28
   1a36c:	e50b0010 	str	r0, [fp, #-16]
   1a370:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1a374:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1a378:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
    ZF_LOGF_IF(!is_extended || !prop_len, "Ret args are NULL!");
   1a37c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a380:	e3530000 	cmp	r3, #0
   1a384:	0a000002 	beq	1a394 <get_interrupts_prop+0x34>
   1a388:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a38c:	e3530000 	cmp	r3, #0
   1a390:	1a00001b 	bne	1a404 <get_interrupts_prop+0xa4>
   1a394:	e3083104 	movw	r3, #33028	; 0x8104
   1a398:	e3403004 	movt	r3, #4
   1a39c:	e5933000 	ldr	r3, [r3]
   1a3a0:	e3530801 	cmp	r3, #65536	; 0x10000
   1a3a4:	aa00000e 	bge	1a3e4 <get_interrupts_prop+0x84>
   1a3a8:	e3093870 	movw	r3, #39024	; 0x9870
   1a3ac:	e3403002 	movt	r3, #2
   1a3b0:	e58d3008 	str	r3, [sp, #8]
   1a3b4:	e309388c 	movw	r3, #39052	; 0x988c
   1a3b8:	e3403002 	movt	r3, #2
   1a3bc:	e58d3004 	str	r3, [sp, #4]
   1a3c0:	e3a03000 	mov	r3, #0
   1a3c4:	e58d3000 	str	r3, [sp]
   1a3c8:	e30f3fff 	movw	r3, #65535	; 0xffff
   1a3cc:	e3a0203f 	mov	r2, #63	; 0x3f
   1a3d0:	e30917f8 	movw	r1, #38904	; 0x97f8
   1a3d4:	e3401002 	movt	r1, #2
   1a3d8:	e3090a00 	movw	r0, #39424	; 0x9a00
   1a3dc:	e3400002 	movt	r0, #2
   1a3e0:	eb000ee8 	bl	1df88 <_zf_log_write_d>
   1a3e4:	e3093a00 	movw	r3, #39424	; 0x9a00
   1a3e8:	e3403002 	movt	r3, #2
   1a3ec:	e3a0203f 	mov	r2, #63	; 0x3f
   1a3f0:	e30917f8 	movw	r1, #38904	; 0x97f8
   1a3f4:	e3401002 	movt	r1, #2
   1a3f8:	e30908b4 	movw	r0, #39092	; 0x98b4
   1a3fc:	e3400002 	movt	r0, #2
   1a400:	eb001059 	bl	1e56c <__assert_fail>
    const void *interrupts_prop = fdt_getprop(dtb_blob, node_offset, "interrupts-extended", prop_len);
   1a404:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a408:	e30928c4 	movw	r2, #39108	; 0x98c4
   1a40c:	e3402002 	movt	r2, #2
   1a410:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1a414:	e51b0010 	ldr	r0, [fp, #-16]
   1a418:	eb0005de 	bl	1bb98 <fdt_getprop>
   1a41c:	e50b0008 	str	r0, [fp, #-8]
    if (interrupts_prop) {
   1a420:	e51b3008 	ldr	r3, [fp, #-8]
   1a424:	e3530000 	cmp	r3, #0
   1a428:	0a000004 	beq	1a440 <get_interrupts_prop+0xe0>
        *is_extended = true;
   1a42c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a430:	e3a02001 	mov	r2, #1
   1a434:	e5c32000 	strb	r2, [r3]
        return interrupts_prop;
   1a438:	e51b3008 	ldr	r3, [fp, #-8]
   1a43c:	ea00000f 	b	1a480 <get_interrupts_prop+0x120>
    interrupts_prop = fdt_getprop(dtb_blob, node_offset, "interrupts", prop_len);
   1a440:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a444:	e30928d8 	movw	r2, #39128	; 0x98d8
   1a448:	e3402002 	movt	r2, #2
   1a44c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1a450:	e51b0010 	ldr	r0, [fp, #-16]
   1a454:	eb0005cf 	bl	1bb98 <fdt_getprop>
   1a458:	e50b0008 	str	r0, [fp, #-8]
    if (interrupts_prop) {
   1a45c:	e51b3008 	ldr	r3, [fp, #-8]
   1a460:	e3530000 	cmp	r3, #0
   1a464:	0a000004 	beq	1a47c <get_interrupts_prop+0x11c>
        *is_extended = false;
   1a468:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a46c:	e3a02000 	mov	r2, #0
   1a470:	e5c32000 	strb	r2, [r3]
        return interrupts_prop;
   1a474:	e51b3008 	ldr	r3, [fp, #-8]
   1a478:	ea000000 	b	1a480 <get_interrupts_prop+0x120>
    return NULL;
   1a47c:	e3a03000 	mov	r3, #0
}
   1a480:	e1a00003 	mov	r0, r3
   1a484:	e24bd004 	sub	sp, fp, #4
   1a488:	e8bd8800 	pop	{fp, pc}

0001a48c <parse_ti_omap3_interrupts>:

#define TI_OMAP3_INT_CELL_COUNT 1

static int parse_ti_omap3_interrupts(char *dtb_blob, int node_offset, int intr_controller_phandle,
                                     irq_walk_cb_fn_t callback, void *token)
{
   1a48c:	e92d4810 	push	{r4, fp, lr}
   1a490:	e28db008 	add	fp, sp, #8
   1a494:	e24dd05c 	sub	sp, sp, #92	; 0x5c
   1a498:	e50b0040 	str	r0, [fp, #-64]	; 0xffffffc0
   1a49c:	e50b1044 	str	r1, [fp, #-68]	; 0xffffffbc
   1a4a0:	e50b2048 	str	r2, [fp, #-72]	; 0xffffffb8
   1a4a4:	e50b304c 	str	r3, [fp, #-76]	; 0xffffffb4
    bool is_extended = false;
   1a4a8:	e3a03000 	mov	r3, #0
   1a4ac:	e54b3019 	strb	r3, [fp, #-25]	; 0xffffffe7
    int prop_len = 0;
   1a4b0:	e3a03000 	mov	r3, #0
   1a4b4:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
    const void *interrupts_prop = get_interrupts_prop(dtb_blob, node_offset, &is_extended, &prop_len);
   1a4b8:	e24b3020 	sub	r3, fp, #32
   1a4bc:	e24b2019 	sub	r2, fp, #25
   1a4c0:	e51b1044 	ldr	r1, [fp, #-68]	; 0xffffffbc
   1a4c4:	e51b0040 	ldr	r0, [fp, #-64]	; 0xffffffc0
   1a4c8:	ebffffa4 	bl	1a360 <get_interrupts_prop>
   1a4cc:	e50b0010 	str	r0, [fp, #-16]
    assert(interrupts_prop != NULL);
   1a4d0:	e51b3010 	ldr	r3, [fp, #-16]
   1a4d4:	e3530000 	cmp	r3, #0
   1a4d8:	1a000007 	bne	1a4fc <parse_ti_omap3_interrupts+0x70>
   1a4dc:	e30939e4 	movw	r3, #39396	; 0x99e4
   1a4e0:	e3403002 	movt	r3, #2
   1a4e4:	e3a02016 	mov	r2, #22
   1a4e8:	e30918e4 	movw	r1, #39140	; 0x98e4
   1a4ec:	e3401002 	movt	r1, #2
   1a4f0:	e3090950 	movw	r0, #39248	; 0x9950
   1a4f4:	e3400002 	movt	r0, #2
   1a4f8:	eb00101b 	bl	1e56c <__assert_fail>
    if (is_extended) {
   1a4fc:	e55b3019 	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1a500:	e3530000 	cmp	r3, #0
   1a504:	0a000012 	beq	1a554 <parse_ti_omap3_interrupts+0xc8>
        ZF_LOGE("ti omap3 extended interrupts property not supported");
   1a508:	e3083104 	movw	r3, #33028	; 0x8104
   1a50c:	e3403004 	movt	r3, #4
   1a510:	e5933000 	ldr	r3, [r3]
   1a514:	e3530005 	cmp	r3, #5
   1a518:	ca00000b 	bgt	1a54c <parse_ti_omap3_interrupts+0xc0>
   1a51c:	e3093968 	movw	r3, #39272	; 0x9968
   1a520:	e3403002 	movt	r3, #2
   1a524:	e58d3004 	str	r3, [sp, #4]
   1a528:	e3a03000 	mov	r3, #0
   1a52c:	e58d3000 	str	r3, [sp]
   1a530:	e3a03005 	mov	r3, #5
   1a534:	e3a02018 	mov	r2, #24
   1a538:	e30918e4 	movw	r1, #39140	; 0x98e4
   1a53c:	e3401002 	movt	r1, #2
   1a540:	e30909e4 	movw	r0, #39396	; 0x99e4
   1a544:	e3400002 	movt	r0, #2
   1a548:	eb000e8e 	bl	1df88 <_zf_log_write_d>
        return ENODEV;
   1a54c:	e3a03013 	mov	r3, #19
   1a550:	ea000030 	b	1a618 <parse_ti_omap3_interrupts+0x18c>
    }
    int UNUSED total_cells = prop_len / sizeof(uint32_t);
   1a554:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a558:	e1a03123 	lsr	r3, r3, #2
   1a55c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
    /* There's only one interrupt cell for this IRQ chip */
    /* TODO: rebase on riscv/plic.c and allow multiple callbacks */
    assert(total_cells == TI_OMAP3_INT_CELL_COUNT);
   1a560:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a564:	e3530001 	cmp	r3, #1
   1a568:	0a000007 	beq	1a58c <parse_ti_omap3_interrupts+0x100>
   1a56c:	e30939e4 	movw	r3, #39396	; 0x99e4
   1a570:	e3403002 	movt	r3, #2
   1a574:	e3a0201e 	mov	r2, #30
   1a578:	e30918e4 	movw	r1, #39140	; 0x98e4
   1a57c:	e3401002 	movt	r1, #2
   1a580:	e309099c 	movw	r0, #39324	; 0x999c
   1a584:	e3400002 	movt	r0, #2
   1a588:	eb000ff7 	bl	1e56c <__assert_fail>
    ps_irq_t irq = { .type = PS_INTERRUPT, .irq = { .number = READ_CELL(1, interrupts_prop, 0) }};
   1a58c:	e24b3038 	sub	r3, fp, #56	; 0x38
   1a590:	e3a02000 	mov	r2, #0
   1a594:	e5832000 	str	r2, [r3]
   1a598:	e5832004 	str	r2, [r3, #4]
   1a59c:	e5832008 	str	r2, [r3, #8]
   1a5a0:	e583200c 	str	r2, [r3, #12]
   1a5a4:	e5832010 	str	r2, [r3, #16]
   1a5a8:	e5832014 	str	r2, [r3, #20]
   1a5ac:	e3a03003 	mov	r3, #3
   1a5b0:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
   1a5b4:	e51b0010 	ldr	r0, [fp, #-16]
   1a5b8:	ebffff58 	bl	1a320 <fdt32_ld>
   1a5bc:	e1a03000 	mov	r3, r0
   1a5c0:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
    int error = callback(irq, 0, TI_OMAP3_INT_CELL_COUNT, token);
   1a5c4:	e59b3004 	ldr	r3, [fp, #4]
   1a5c8:	e58d3010 	str	r3, [sp, #16]
   1a5cc:	e3a03001 	mov	r3, #1
   1a5d0:	e58d300c 	str	r3, [sp, #12]
   1a5d4:	e3a03000 	mov	r3, #0
   1a5d8:	e58d3008 	str	r3, [sp, #8]
   1a5dc:	e1a0200d 	mov	r2, sp
   1a5e0:	e24b3028 	sub	r3, fp, #40	; 0x28
   1a5e4:	e8930003 	ldm	r3, {r0, r1}
   1a5e8:	e8820003 	stm	r2, {r0, r1}
   1a5ec:	e24b3038 	sub	r3, fp, #56	; 0x38
   1a5f0:	e893000f 	ldm	r3, {r0, r1, r2, r3}
   1a5f4:	e51b404c 	ldr	r4, [fp, #-76]	; 0xffffffb4
   1a5f8:	e12fff34 	blx	r4
   1a5fc:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
    if (error) {
   1a600:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a604:	e3530000 	cmp	r3, #0
   1a608:	0a000001 	beq	1a614 <parse_ti_omap3_interrupts+0x188>
        return error;
   1a60c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a610:	ea000000 	b	1a618 <parse_ti_omap3_interrupts+0x18c>
    }
    return 0;
   1a614:	e3a03000 	mov	r3, #0
}
   1a618:	e1a00003 	mov	r0, r3
   1a61c:	e24bd008 	sub	sp, fp, #8
   1a620:	e8bd8810 	pop	{r4, fp, pc}

0001a624 <parse_tegra_ictlr_interrupts>:
#define ARM_GIC_COMPAT_STRING "arm,cortex-a9-gic"
#define ARM_GIC_COMPAT_STRLEN sizeof(ARM_GIC_COMPAT_STRING)

static int parse_tegra_ictlr_interrupts(char *dtb_blob, int node_offset, int intr_controller_phandle,
                                        irq_walk_cb_fn_t callback, void *token)
{
   1a624:	e92d4810 	push	{r4, fp, lr}
   1a628:	e28db008 	add	fp, sp, #8
   1a62c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   1a630:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   1a634:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   1a638:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   1a63c:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
    /* Look for the ARM GIC parser module and call their function.
     *
     * The tegra interrupt controllers have the same encodings as the ARM GIC, they just forward any
     * interrupts to the GIC. */
    for (ps_irqchip_t **irqchip = __start__ps_irqchips; irqchip < __stop__ps_irqchips; irqchip++) {
   1a640:	e30c38dc 	movw	r3, #51420	; 0xc8dc
   1a644:	e3403002 	movt	r3, #2
   1a648:	e50b3010 	str	r3, [fp, #-16]
   1a64c:	ea000030 	b	1a714 <parse_tegra_ictlr_interrupts+0xf0>
        for (char **compatible_str = (*irqchip)->compatible_list; *compatible_str != NULL; compatible_str++) {
   1a650:	e51b3010 	ldr	r3, [fp, #-16]
   1a654:	e5933000 	ldr	r3, [r3]
   1a658:	e5933000 	ldr	r3, [r3]
   1a65c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
   1a660:	ea000024 	b	1a6f8 <parse_tegra_ictlr_interrupts+0xd4>
            /* To account for the NULL byte */
            size_t compat_str_len = strlen(*compatible_str) + 1;
   1a664:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a668:	e5933000 	ldr	r3, [r3]
   1a66c:	e1a00003 	mov	r0, r3
   1a670:	eb001e11 	bl	21ebc <strlen>
   1a674:	e1a03000 	mov	r3, r0
   1a678:	e2833001 	add	r3, r3, #1
   1a67c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
            size_t compare_length = (compat_str_len < ARM_GIC_COMPAT_STRLEN) ? compat_str_len
   1a680:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a684:	e3530012 	cmp	r3, #18
   1a688:	31a03003 	movcc	r3, r3
   1a68c:	23a03012 	movcs	r3, #18
   1a690:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
                                    : ARM_GIC_COMPAT_STRLEN;
            if (strncmp(ARM_GIC_COMPAT_STRING, *compatible_str, compare_length)) {
   1a694:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a698:	e5933000 	ldr	r3, [r3]
   1a69c:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a6a0:	e1a01003 	mov	r1, r3
   1a6a4:	e3090a14 	movw	r0, #39444	; 0x9a14
   1a6a8:	e3400002 	movt	r0, #2
   1a6ac:	eb001e1f 	bl	21f30 <strncmp>
   1a6b0:	e1a03000 	mov	r3, r0
   1a6b4:	e3530000 	cmp	r3, #0
   1a6b8:	0a00000b 	beq	1a6ec <parse_tegra_ictlr_interrupts+0xc8>
                return (*irqchip)->parser_fn(dtb_blob, node_offset, intr_controller_phandle, callback, token);
   1a6bc:	e51b3010 	ldr	r3, [fp, #-16]
   1a6c0:	e5933000 	ldr	r3, [r3]
   1a6c4:	e5934004 	ldr	r4, [r3, #4]
   1a6c8:	e59b3004 	ldr	r3, [fp, #4]
   1a6cc:	e58d3000 	str	r3, [sp]
   1a6d0:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a6d4:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a6d8:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a6dc:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6e0:	e12fff34 	blx	r4
   1a6e4:	e1a03000 	mov	r3, r0
   1a6e8:	ea000020 	b	1a770 <parse_tegra_ictlr_interrupts+0x14c>
        for (char **compatible_str = (*irqchip)->compatible_list; *compatible_str != NULL; compatible_str++) {
   1a6ec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6f0:	e2833004 	add	r3, r3, #4
   1a6f4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
   1a6f8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1a6fc:	e5933000 	ldr	r3, [r3]
   1a700:	e3530000 	cmp	r3, #0
   1a704:	1affffd6 	bne	1a664 <parse_tegra_ictlr_interrupts+0x40>
    for (ps_irqchip_t **irqchip = __start__ps_irqchips; irqchip < __stop__ps_irqchips; irqchip++) {
   1a708:	e51b3010 	ldr	r3, [fp, #-16]
   1a70c:	e2833004 	add	r3, r3, #4
   1a710:	e50b3010 	str	r3, [fp, #-16]
   1a714:	e51b2010 	ldr	r2, [fp, #-16]
   1a718:	e30c38ec 	movw	r3, #51436	; 0xc8ec
   1a71c:	e3403002 	movt	r3, #2
   1a720:	e1520003 	cmp	r2, r3
   1a724:	3affffc9 	bcc	1a650 <parse_tegra_ictlr_interrupts+0x2c>
            }
        }
    }
    ZF_LOGE("Couldn't find the ARM GIC parser module!");
   1a728:	e3083104 	movw	r3, #33028	; 0x8104
   1a72c:	e3403004 	movt	r3, #4
   1a730:	e5933000 	ldr	r3, [r3]
   1a734:	e3530005 	cmp	r3, #5
   1a738:	ca00000b 	bgt	1a76c <parse_tegra_ictlr_interrupts+0x148>
   1a73c:	e3093a94 	movw	r3, #39572	; 0x9a94
   1a740:	e3403002 	movt	r3, #2
   1a744:	e58d3004 	str	r3, [sp, #4]
   1a748:	e3a03000 	mov	r3, #0
   1a74c:	e58d3000 	str	r3, [sp]
   1a750:	e3a03005 	mov	r3, #5
   1a754:	e3a0202a 	mov	r2, #42	; 0x2a
   1a758:	e3091a28 	movw	r1, #39464	; 0x9a28
   1a75c:	e3401002 	movt	r1, #2
   1a760:	e3090b08 	movw	r0, #39688	; 0x9b08
   1a764:	e3400002 	movt	r0, #2
   1a768:	eb000e06 	bl	1df88 <_zf_log_write_d>
    return -EINVAL;
   1a76c:	e3e03015 	mvn	r3, #21
}
   1a770:	e1a00003 	mov	r0, r3
   1a774:	e24bd008 	sub	sp, fp, #8
   1a778:	e8bd8810 	pop	{r4, fp, pc}

0001a77c <fdt32_to_cpu>:
{
	return (FDT_FORCE fdt16_t)CPU_TO_FDT16(x);
}

static inline uint32_t fdt32_to_cpu(fdt32_t x)
{
   1a77c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1a780:	e28db000 	add	fp, sp, #0
   1a784:	e24dd00c 	sub	sp, sp, #12
   1a788:	e50b0008 	str	r0, [fp, #-8]
	return (FDT_FORCE uint32_t)CPU_TO_FDT32(x);
   1a78c:	e24b3008 	sub	r3, fp, #8
   1a790:	e5d33000 	ldrb	r3, [r3]
   1a794:	e1a02c03 	lsl	r2, r3, #24
   1a798:	e24b3008 	sub	r3, fp, #8
   1a79c:	e2833001 	add	r3, r3, #1
   1a7a0:	e5d33000 	ldrb	r3, [r3]
   1a7a4:	e1a03803 	lsl	r3, r3, #16
   1a7a8:	e1822003 	orr	r2, r2, r3
   1a7ac:	e24b3008 	sub	r3, fp, #8
   1a7b0:	e2833002 	add	r3, r3, #2
   1a7b4:	e5d33000 	ldrb	r3, [r3]
   1a7b8:	e1a03403 	lsl	r3, r3, #8
   1a7bc:	e1822003 	orr	r2, r2, r3
   1a7c0:	e24b3008 	sub	r3, fp, #8
   1a7c4:	e2833003 	add	r3, r3, #3
   1a7c8:	e5d33000 	ldrb	r3, [r3]
   1a7cc:	e1823003 	orr	r3, r2, r3
}
   1a7d0:	e1a00003 	mov	r0, r3
   1a7d4:	e28bd000 	add	sp, fp, #0
   1a7d8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1a7dc:	e12fff1e 	bx	lr

0001a7e0 <fdt64_to_cpu>:
{
	return (FDT_FORCE fdt32_t)CPU_TO_FDT32(x);
}

static inline uint64_t fdt64_to_cpu(fdt64_t x)
{
   1a7e0:	e92d4bf0 	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a7e4:	e28db01c 	add	fp, sp, #28
   1a7e8:	e24dd038 	sub	sp, sp, #56	; 0x38
   1a7ec:	e14b02f4 	strd	r0, [fp, #-36]	; 0xffffffdc
	return (FDT_FORCE uint64_t)CPU_TO_FDT64(x);
   1a7f0:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a7f4:	e5d33000 	ldrb	r3, [r3]
   1a7f8:	e6ef2073 	uxtb	r2, r3
   1a7fc:	e3a03000 	mov	r3, #0
   1a800:	e3a04000 	mov	r4, #0
   1a804:	e3a05000 	mov	r5, #0
   1a808:	e1a05c02 	lsl	r5, r2, #24
   1a80c:	e3a04000 	mov	r4, #0
   1a810:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a814:	e2833001 	add	r3, r3, #1
   1a818:	e5d33000 	ldrb	r3, [r3]
   1a81c:	e6ef2073 	uxtb	r2, r3
   1a820:	e3a03000 	mov	r3, #0
   1a824:	e3a00000 	mov	r0, #0
   1a828:	e3a01000 	mov	r1, #0
   1a82c:	e1a01802 	lsl	r1, r2, #16
   1a830:	e3a00000 	mov	r0, #0
   1a834:	e1846000 	orr	r6, r4, r0
   1a838:	e1857001 	orr	r7, r5, r1
   1a83c:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a840:	e2833002 	add	r3, r3, #2
   1a844:	e5d33000 	ldrb	r3, [r3]
   1a848:	e6ef2073 	uxtb	r2, r3
   1a84c:	e3a03000 	mov	r3, #0
   1a850:	e3a00000 	mov	r0, #0
   1a854:	e3a01000 	mov	r1, #0
   1a858:	e1a01402 	lsl	r1, r2, #8
   1a85c:	e3a00000 	mov	r0, #0
   1a860:	e1868000 	orr	r8, r6, r0
   1a864:	e1879001 	orr	r9, r7, r1
   1a868:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a86c:	e2833003 	add	r3, r3, #3
   1a870:	e5d33000 	ldrb	r3, [r3]
   1a874:	e6ef2073 	uxtb	r2, r3
   1a878:	e3a03000 	mov	r3, #0
   1a87c:	e3a00000 	mov	r0, #0
   1a880:	e3a01000 	mov	r1, #0
   1a884:	e1a01002 	mov	r1, r2
   1a888:	e3a00000 	mov	r0, #0
   1a88c:	e1883000 	orr	r3, r8, r0
   1a890:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
   1a894:	e1893001 	orr	r3, r9, r1
   1a898:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
   1a89c:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a8a0:	e2833004 	add	r3, r3, #4
   1a8a4:	e5d33000 	ldrb	r3, [r3]
   1a8a8:	e6ef2073 	uxtb	r2, r3
   1a8ac:	e3a03000 	mov	r3, #0
   1a8b0:	e1a01422 	lsr	r1, r2, #8
   1a8b4:	e50b1030 	str	r1, [fp, #-48]	; 0xffffffd0
   1a8b8:	e1a03c02 	lsl	r3, r2, #24
   1a8bc:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
   1a8c0:	e14b02dc 	ldrd	r0, [fp, #-44]	; 0xffffffd4
   1a8c4:	e1a0c000 	mov	ip, r0
   1a8c8:	e14b23d4 	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1a8cc:	e1a0e002 	mov	lr, r2
   1a8d0:	e18cc00e 	orr	ip, ip, lr
   1a8d4:	e50bc03c 	str	ip, [fp, #-60]	; 0xffffffc4
   1a8d8:	e1813003 	orr	r3, r1, r3
   1a8dc:	e50b3038 	str	r3, [fp, #-56]	; 0xffffffc8
   1a8e0:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a8e4:	e2833005 	add	r3, r3, #5
   1a8e8:	e5d33000 	ldrb	r3, [r3]
   1a8ec:	e6ef0073 	uxtb	r0, r3
   1a8f0:	e3a01000 	mov	r1, #0
   1a8f4:	e3a02000 	mov	r2, #0
   1a8f8:	e3a03000 	mov	r3, #0
   1a8fc:	e1a03801 	lsl	r3, r1, #16
   1a900:	e1833820 	orr	r3, r3, r0, lsr #16
   1a904:	e1a02800 	lsl	r2, r0, #16
   1a908:	e14b03dc 	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1a90c:	e1a0c000 	mov	ip, r0
   1a910:	e18cc002 	orr	ip, ip, r2
   1a914:	e50bc044 	str	ip, [fp, #-68]	; 0xffffffbc
   1a918:	e1813003 	orr	r3, r1, r3
   1a91c:	e50b3040 	str	r3, [fp, #-64]	; 0xffffffc0
   1a920:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a924:	e2833006 	add	r3, r3, #6
   1a928:	e5d33000 	ldrb	r3, [r3]
   1a92c:	e6ef0073 	uxtb	r0, r3
   1a930:	e3a01000 	mov	r1, #0
   1a934:	e3a02000 	mov	r2, #0
   1a938:	e3a03000 	mov	r3, #0
   1a93c:	e1a03401 	lsl	r3, r1, #8
   1a940:	e1833c20 	orr	r3, r3, r0, lsr #24
   1a944:	e1a02400 	lsl	r2, r0, #8
   1a948:	e14b04d4 	ldrd	r0, [fp, #-68]	; 0xffffffbc
   1a94c:	e1a0c000 	mov	ip, r0
   1a950:	e18cc002 	orr	ip, ip, r2
   1a954:	e50bc04c 	str	ip, [fp, #-76]	; 0xffffffb4
   1a958:	e1813003 	orr	r3, r1, r3
   1a95c:	e50b3048 	str	r3, [fp, #-72]	; 0xffffffb8
   1a960:	e24b3024 	sub	r3, fp, #36	; 0x24
   1a964:	e2833007 	add	r3, r3, #7
   1a968:	e5d33000 	ldrb	r3, [r3]
   1a96c:	e6ef2073 	uxtb	r2, r3
   1a970:	e3a03000 	mov	r3, #0
   1a974:	e14b04dc 	ldrd	r0, [fp, #-76]	; 0xffffffb4
   1a978:	e1a0c000 	mov	ip, r0
   1a97c:	e18cc002 	orr	ip, ip, r2
   1a980:	e50bc054 	str	ip, [fp, #-84]	; 0xffffffac
   1a984:	e1813003 	orr	r3, r1, r3
   1a988:	e50b3050 	str	r3, [fp, #-80]	; 0xffffffb0
   1a98c:	e14b25d4 	ldrd	r2, [fp, #-84]	; 0xffffffac
}
   1a990:	e1a00002 	mov	r0, r2
   1a994:	e1a01003 	mov	r1, r3
   1a998:	e24bd01c 	sub	sp, fp, #28
   1a99c:	e8bd8bf0 	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001a9a0 <fdt32_ld>:
{
   1a9a0:	e92d4800 	push	{fp, lr}
   1a9a4:	e28db004 	add	fp, sp, #4
   1a9a8:	e24dd010 	sub	sp, sp, #16
   1a9ac:	e50b0010 	str	r0, [fp, #-16]
	memcpy(&v, p, sizeof(v));
   1a9b0:	e24b3008 	sub	r3, fp, #8
   1a9b4:	e3a02004 	mov	r2, #4
   1a9b8:	e51b1010 	ldr	r1, [fp, #-16]
   1a9bc:	e1a00003 	mov	r0, r3
   1a9c0:	eb001b7f 	bl	217c4 <memcpy>
	return fdt32_to_cpu(v);
   1a9c4:	e51b3008 	ldr	r3, [fp, #-8]
   1a9c8:	e1a00003 	mov	r0, r3
   1a9cc:	ebffff6a 	bl	1a77c <fdt32_to_cpu>
   1a9d0:	e1a03000 	mov	r3, r0
}
   1a9d4:	e1a00003 	mov	r0, r3
   1a9d8:	e24bd004 	sub	sp, fp, #4
   1a9dc:	e8bd8800 	pop	{fp, pc}

0001a9e0 <fdt64_ld>:

static inline uint64_t fdt64_ld(const fdt64_t *p)
{
   1a9e0:	e92d4800 	push	{fp, lr}
   1a9e4:	e28db004 	add	fp, sp, #4
   1a9e8:	e24dd010 	sub	sp, sp, #16
   1a9ec:	e50b0010 	str	r0, [fp, #-16]
	fdt64_t v;

	memcpy(&v, p, sizeof(v));
   1a9f0:	e24b300c 	sub	r3, fp, #12
   1a9f4:	e3a02008 	mov	r2, #8
   1a9f8:	e51b1010 	ldr	r1, [fp, #-16]
   1a9fc:	e1a00003 	mov	r0, r3
   1aa00:	eb001b6f 	bl	217c4 <memcpy>
	return fdt64_to_cpu(v);
   1aa04:	e14b20dc 	ldrd	r2, [fp, #-12]
   1aa08:	e1a00002 	mov	r0, r2
   1aa0c:	e1a01003 	mov	r1, r3
   1aa10:	ebffff72 	bl	1a7e0 <fdt64_to_cpu>
   1aa14:	e1a02000 	mov	r2, r0
   1aa18:	e1a03001 	mov	r3, r1
}
   1aa1c:	e1a00002 	mov	r0, r2
   1aa20:	e1a01003 	mov	r1, r3
   1aa24:	e24bd004 	sub	sp, fp, #4
   1aa28:	e8bd8800 	pop	{fp, pc}

0001aa2c <fdt_offset_ptr_>:
int fdt_check_prop_offset_(const void *fdt, int offset);
const char *fdt_find_string_(const char *strtab, int tabsize, const char *s);
int fdt_node_end_offset_(void *fdt, int nodeoffset);

static inline const void *fdt_offset_ptr_(const void *fdt, int offset)
{
   1aa2c:	e92d4800 	push	{fp, lr}
   1aa30:	e28db004 	add	fp, sp, #4
   1aa34:	e24dd008 	sub	sp, sp, #8
   1aa38:	e50b0008 	str	r0, [fp, #-8]
   1aa3c:	e50b100c 	str	r1, [fp, #-12]
	return (const char *)fdt + fdt_off_dt_struct(fdt) + offset;
   1aa40:	e51b3008 	ldr	r3, [fp, #-8]
   1aa44:	e2833008 	add	r3, r3, #8
   1aa48:	e1a00003 	mov	r0, r3
   1aa4c:	ebffffd3 	bl	1a9a0 <fdt32_ld>
   1aa50:	e1a02000 	mov	r2, r0
   1aa54:	e51b300c 	ldr	r3, [fp, #-12]
   1aa58:	e0823003 	add	r3, r2, r3
   1aa5c:	e51b2008 	ldr	r2, [fp, #-8]
   1aa60:	e0823003 	add	r3, r2, r3
}
   1aa64:	e1a00003 	mov	r0, r3
   1aa68:	e24bd004 	sub	sp, fp, #4
   1aa6c:	e8bd8800 	pop	{fp, pc}

0001aa70 <fdt_mem_rsv_>:
{
	return (void *)(uintptr_t)fdt_offset_ptr_(fdt, offset);
}

static inline const struct fdt_reserve_entry *fdt_mem_rsv_(const void *fdt, int n)
{
   1aa70:	e92d4800 	push	{fp, lr}
   1aa74:	e28db004 	add	fp, sp, #4
   1aa78:	e24dd010 	sub	sp, sp, #16
   1aa7c:	e50b0010 	str	r0, [fp, #-16]
   1aa80:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	const struct fdt_reserve_entry *rsv_table =
		(const struct fdt_reserve_entry *)
		((const char *)fdt + fdt_off_mem_rsvmap(fdt));
   1aa84:	e51b3010 	ldr	r3, [fp, #-16]
   1aa88:	e2833010 	add	r3, r3, #16
   1aa8c:	e1a00003 	mov	r0, r3
   1aa90:	ebffffc2 	bl	1a9a0 <fdt32_ld>
   1aa94:	e1a02000 	mov	r2, r0
	const struct fdt_reserve_entry *rsv_table =
   1aa98:	e51b3010 	ldr	r3, [fp, #-16]
   1aa9c:	e0833002 	add	r3, r3, r2
   1aaa0:	e50b3008 	str	r3, [fp, #-8]

	return rsv_table + n;
   1aaa4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1aaa8:	e1a03203 	lsl	r3, r3, #4
   1aaac:	e51b2008 	ldr	r2, [fp, #-8]
   1aab0:	e0823003 	add	r3, r2, r3
}
   1aab4:	e1a00003 	mov	r0, r3
   1aab8:	e24bd004 	sub	sp, fp, #4
   1aabc:	e8bd8800 	pop	{fp, pc}

0001aac0 <fdt_nodename_eq_>:

#include "libfdt_internal.h"

static int fdt_nodename_eq_(const void *fdt, int offset,
			    const char *s, int len)
{
   1aac0:	e92d4800 	push	{fp, lr}
   1aac4:	e28db004 	add	fp, sp, #4
   1aac8:	e24dd018 	sub	sp, sp, #24
   1aacc:	e50b0010 	str	r0, [fp, #-16]
   1aad0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1aad4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1aad8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	int olen;
	const char *p = fdt_get_name(fdt, offset, &olen);
   1aadc:	e24b300c 	sub	r3, fp, #12
   1aae0:	e1a02003 	mov	r2, r3
   1aae4:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1aae8:	e51b0010 	ldr	r0, [fp, #-16]
   1aaec:	eb000285 	bl	1b508 <fdt_get_name>
   1aaf0:	e50b0008 	str	r0, [fp, #-8]

	if (!p || olen < len)
   1aaf4:	e51b3008 	ldr	r3, [fp, #-8]
   1aaf8:	e3530000 	cmp	r3, #0
   1aafc:	0a000003 	beq	1ab10 <fdt_nodename_eq_+0x50>
   1ab00:	e51b300c 	ldr	r3, [fp, #-12]
   1ab04:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ab08:	e1520003 	cmp	r2, r3
   1ab0c:	da000001 	ble	1ab18 <fdt_nodename_eq_+0x58>
		/* short match */
		return 0;
   1ab10:	e3a03000 	mov	r3, #0
   1ab14:	ea000022 	b	1aba4 <fdt_nodename_eq_+0xe4>

	if (memcmp(p, s, len) != 0)
   1ab18:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ab1c:	e1a02003 	mov	r2, r3
   1ab20:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab24:	e51b0008 	ldr	r0, [fp, #-8]
   1ab28:	eb001c14 	bl	21b80 <memcmp>
   1ab2c:	e1a03000 	mov	r3, r0
   1ab30:	e3530000 	cmp	r3, #0
   1ab34:	0a000001 	beq	1ab40 <fdt_nodename_eq_+0x80>
		return 0;
   1ab38:	e3a03000 	mov	r3, #0
   1ab3c:	ea000018 	b	1aba4 <fdt_nodename_eq_+0xe4>

	if (p[len] == '\0')
   1ab40:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ab44:	e51b2008 	ldr	r2, [fp, #-8]
   1ab48:	e0823003 	add	r3, r2, r3
   1ab4c:	e5d33000 	ldrb	r3, [r3]
   1ab50:	e3530000 	cmp	r3, #0
   1ab54:	1a000001 	bne	1ab60 <fdt_nodename_eq_+0xa0>
		return 1;
   1ab58:	e3a03001 	mov	r3, #1
   1ab5c:	ea000010 	b	1aba4 <fdt_nodename_eq_+0xe4>
	else if (!memchr(s, '@', len) && (p[len] == '@'))
   1ab60:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ab64:	e1a02003 	mov	r2, r3
   1ab68:	e3a01040 	mov	r1, #64	; 0x40
   1ab6c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab70:	eb001bd2 	bl	21ac0 <memchr>
   1ab74:	e1a03000 	mov	r3, r0
   1ab78:	e3530000 	cmp	r3, #0
   1ab7c:	1a000007 	bne	1aba0 <fdt_nodename_eq_+0xe0>
   1ab80:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ab84:	e51b2008 	ldr	r2, [fp, #-8]
   1ab88:	e0823003 	add	r3, r2, r3
   1ab8c:	e5d33000 	ldrb	r3, [r3]
   1ab90:	e3530040 	cmp	r3, #64	; 0x40
   1ab94:	1a000001 	bne	1aba0 <fdt_nodename_eq_+0xe0>
		return 1;
   1ab98:	e3a03001 	mov	r3, #1
   1ab9c:	ea000000 	b	1aba4 <fdt_nodename_eq_+0xe4>
	else
		return 0;
   1aba0:	e3a03000 	mov	r3, #0
}
   1aba4:	e1a00003 	mov	r0, r3
   1aba8:	e24bd004 	sub	sp, fp, #4
   1abac:	e8bd8800 	pop	{fp, pc}

0001abb0 <fdt_get_string>:

const char *fdt_get_string(const void *fdt, int stroffset, int *lenp)
{
   1abb0:	e92d4800 	push	{fp, lr}
   1abb4:	e28db004 	add	fp, sp, #4
   1abb8:	e24dd028 	sub	sp, sp, #40	; 0x28
   1abbc:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   1abc0:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   1abc4:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
	uint32_t absoffset = stroffset + fdt_off_dt_strings(fdt);
   1abc8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1abcc:	e283300c 	add	r3, r3, #12
   1abd0:	e1a00003 	mov	r0, r3
   1abd4:	ebffff71 	bl	1a9a0 <fdt32_ld>
   1abd8:	e1a02000 	mov	r2, r0
   1abdc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1abe0:	e0823003 	add	r3, r2, r3
   1abe4:	e50b3010 	str	r3, [fp, #-16]
	size_t len;
	int err;
	const char *s, *n;

	err = fdt_ro_probe_(fdt);
   1abe8:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1abec:	eb0007ea 	bl	1cb9c <fdt_ro_probe_>
   1abf0:	e50b000c 	str	r0, [fp, #-12]
	if (err != 0)
   1abf4:	e51b300c 	ldr	r3, [fp, #-12]
   1abf8:	e3530000 	cmp	r3, #0
   1abfc:	1a000078 	bne	1ade4 <fdt_get_string+0x234>
		goto fail;

	err = -FDT_ERR_BADOFFSET;
   1ac00:	e3e03003 	mvn	r3, #3
   1ac04:	e50b300c 	str	r3, [fp, #-12]
	if (absoffset >= fdt_totalsize(fdt))
   1ac08:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac0c:	e2833004 	add	r3, r3, #4
   1ac10:	e1a00003 	mov	r0, r3
   1ac14:	ebffff61 	bl	1a9a0 <fdt32_ld>
   1ac18:	e1a02000 	mov	r2, r0
   1ac1c:	e51b3010 	ldr	r3, [fp, #-16]
   1ac20:	e1530002 	cmp	r3, r2
   1ac24:	2a000070 	bcs	1adec <fdt_get_string+0x23c>
		goto fail;
	len = fdt_totalsize(fdt) - absoffset;
   1ac28:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac2c:	e2833004 	add	r3, r3, #4
   1ac30:	e1a00003 	mov	r0, r3
   1ac34:	ebffff59 	bl	1a9a0 <fdt32_ld>
   1ac38:	e1a02000 	mov	r2, r0
   1ac3c:	e51b3010 	ldr	r3, [fp, #-16]
   1ac40:	e0423003 	sub	r3, r2, r3
   1ac44:	e50b3008 	str	r3, [fp, #-8]

	if (fdt_magic(fdt) == FDT_MAGIC) {
   1ac48:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac4c:	e1a00003 	mov	r0, r3
   1ac50:	ebffff52 	bl	1a9a0 <fdt32_ld>
   1ac54:	e1a02000 	mov	r2, r0
   1ac58:	e30f3eed 	movw	r3, #65261	; 0xfeed
   1ac5c:	e34d300d 	movt	r3, #53261	; 0xd00d
   1ac60:	e1520003 	cmp	r2, r3
   1ac64:	1a000024 	bne	1acfc <fdt_get_string+0x14c>
		if (stroffset < 0)
   1ac68:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ac6c:	e3530000 	cmp	r3, #0
   1ac70:	ba00005f 	blt	1adf4 <fdt_get_string+0x244>
			goto fail;
		if (fdt_version(fdt) >= 17) {
   1ac74:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac78:	e2833014 	add	r3, r3, #20
   1ac7c:	e1a00003 	mov	r0, r3
   1ac80:	ebffff46 	bl	1a9a0 <fdt32_ld>
   1ac84:	e1a03000 	mov	r3, r0
   1ac88:	e3530010 	cmp	r3, #16
   1ac8c:	9a00003b 	bls	1ad80 <fdt_get_string+0x1d0>
			if (stroffset >= fdt_size_dt_strings(fdt))
   1ac90:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ac94:	e2833020 	add	r3, r3, #32
   1ac98:	e1a00003 	mov	r0, r3
   1ac9c:	ebffff3f 	bl	1a9a0 <fdt32_ld>
   1aca0:	e1a02000 	mov	r2, r0
   1aca4:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aca8:	e1520003 	cmp	r2, r3
   1acac:	9a000052 	bls	1adfc <fdt_get_string+0x24c>
				goto fail;
			if ((fdt_size_dt_strings(fdt) - stroffset) < len)
   1acb0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1acb4:	e2833020 	add	r3, r3, #32
   1acb8:	e1a00003 	mov	r0, r3
   1acbc:	ebffff37 	bl	1a9a0 <fdt32_ld>
   1acc0:	e1a02000 	mov	r2, r0
   1acc4:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1acc8:	e0423003 	sub	r3, r2, r3
   1accc:	e51b2008 	ldr	r2, [fp, #-8]
   1acd0:	e1520003 	cmp	r2, r3
   1acd4:	9a000029 	bls	1ad80 <fdt_get_string+0x1d0>
				len = fdt_size_dt_strings(fdt) - stroffset;
   1acd8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1acdc:	e2833020 	add	r3, r3, #32
   1ace0:	e1a00003 	mov	r0, r3
   1ace4:	ebffff2d 	bl	1a9a0 <fdt32_ld>
   1ace8:	e1a02000 	mov	r2, r0
   1acec:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1acf0:	e0423003 	sub	r3, r2, r3
   1acf4:	e50b3008 	str	r3, [fp, #-8]
   1acf8:	ea000020 	b	1ad80 <fdt_get_string+0x1d0>
		}
	} else if (fdt_magic(fdt) == FDT_SW_MAGIC) {
   1acfc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ad00:	e1a00003 	mov	r0, r3
   1ad04:	ebffff25 	bl	1a9a0 <fdt32_ld>
   1ad08:	e1a02000 	mov	r2, r0
   1ad0c:	e3003112 	movw	r3, #274	; 0x112
   1ad10:	e3423ff2 	movt	r3, #12274	; 0x2ff2
   1ad14:	e1520003 	cmp	r2, r3
   1ad18:	1a000015 	bne	1ad74 <fdt_get_string+0x1c4>
		if ((stroffset >= 0)
   1ad1c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ad20:	e3530000 	cmp	r3, #0
   1ad24:	aa000036 	bge	1ae04 <fdt_get_string+0x254>
		    || (stroffset < -fdt_size_dt_strings(fdt)))
   1ad28:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ad2c:	e2833020 	add	r3, r3, #32
   1ad30:	e1a00003 	mov	r0, r3
   1ad34:	ebffff19 	bl	1a9a0 <fdt32_ld>
   1ad38:	e1a03000 	mov	r3, r0
   1ad3c:	e2632000 	rsb	r2, r3, #0
   1ad40:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ad44:	e1520003 	cmp	r2, r3
   1ad48:	8a00002d 	bhi	1ae04 <fdt_get_string+0x254>
			goto fail;
		if ((-stroffset) < len)
   1ad4c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ad50:	e2633000 	rsb	r3, r3, #0
   1ad54:	e1a02003 	mov	r2, r3
   1ad58:	e51b3008 	ldr	r3, [fp, #-8]
   1ad5c:	e1530002 	cmp	r3, r2
   1ad60:	9a000006 	bls	1ad80 <fdt_get_string+0x1d0>
			len = -stroffset;
   1ad64:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ad68:	e2633000 	rsb	r3, r3, #0
   1ad6c:	e50b3008 	str	r3, [fp, #-8]
   1ad70:	ea000002 	b	1ad80 <fdt_get_string+0x1d0>
	} else {
		err = -FDT_ERR_INTERNAL;
   1ad74:	e3e0300c 	mvn	r3, #12
   1ad78:	e50b300c 	str	r3, [fp, #-12]
		goto fail;
   1ad7c:	ea000021 	b	1ae08 <fdt_get_string+0x258>
	}

	s = (const char *)fdt + absoffset;
   1ad80:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ad84:	e51b3010 	ldr	r3, [fp, #-16]
   1ad88:	e0823003 	add	r3, r2, r3
   1ad8c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	n = memchr(s, '\0', len);
   1ad90:	e51b2008 	ldr	r2, [fp, #-8]
   1ad94:	e3a01000 	mov	r1, #0
   1ad98:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad9c:	eb001b47 	bl	21ac0 <memchr>
   1ada0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
	if (!n) {
   1ada4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ada8:	e3530000 	cmp	r3, #0
   1adac:	1a000002 	bne	1adbc <fdt_get_string+0x20c>
		/* missing terminating NULL */
		err = -FDT_ERR_TRUNCATED;
   1adb0:	e3e03007 	mvn	r3, #7
   1adb4:	e50b300c 	str	r3, [fp, #-12]
		goto fail;
   1adb8:	ea000012 	b	1ae08 <fdt_get_string+0x258>
	}

	if (lenp)
   1adbc:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1adc0:	e3530000 	cmp	r3, #0
   1adc4:	0a000004 	beq	1addc <fdt_get_string+0x22c>
		*lenp = n - s;
   1adc8:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1adcc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1add0:	e0422003 	sub	r2, r2, r3
   1add4:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1add8:	e5832000 	str	r2, [r3]
	return s;
   1addc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1ade0:	ea00000f 	b	1ae24 <fdt_get_string+0x274>
		goto fail;
   1ade4:	e320f000 	nop	{0}
   1ade8:	ea000006 	b	1ae08 <fdt_get_string+0x258>
		goto fail;
   1adec:	e320f000 	nop	{0}
   1adf0:	ea000004 	b	1ae08 <fdt_get_string+0x258>
			goto fail;
   1adf4:	e320f000 	nop	{0}
   1adf8:	ea000002 	b	1ae08 <fdt_get_string+0x258>
				goto fail;
   1adfc:	e320f000 	nop	{0}
   1ae00:	ea000000 	b	1ae08 <fdt_get_string+0x258>
			goto fail;
   1ae04:	e320f000 	nop	{0}

fail:
	if (lenp)
   1ae08:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae0c:	e3530000 	cmp	r3, #0
   1ae10:	0a000002 	beq	1ae20 <fdt_get_string+0x270>
		*lenp = err;
   1ae14:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae18:	e51b200c 	ldr	r2, [fp, #-12]
   1ae1c:	e5832000 	str	r2, [r3]
	return NULL;
   1ae20:	e3a03000 	mov	r3, #0
}
   1ae24:	e1a00003 	mov	r0, r3
   1ae28:	e24bd004 	sub	sp, fp, #4
   1ae2c:	e8bd8800 	pop	{fp, pc}

0001ae30 <fdt_string>:

const char *fdt_string(const void *fdt, int stroffset)
{
   1ae30:	e92d4800 	push	{fp, lr}
   1ae34:	e28db004 	add	fp, sp, #4
   1ae38:	e24dd008 	sub	sp, sp, #8
   1ae3c:	e50b0008 	str	r0, [fp, #-8]
   1ae40:	e50b100c 	str	r1, [fp, #-12]
	return fdt_get_string(fdt, stroffset, NULL);
   1ae44:	e3a02000 	mov	r2, #0
   1ae48:	e51b100c 	ldr	r1, [fp, #-12]
   1ae4c:	e51b0008 	ldr	r0, [fp, #-8]
   1ae50:	ebffff56 	bl	1abb0 <fdt_get_string>
   1ae54:	e1a03000 	mov	r3, r0
}
   1ae58:	e1a00003 	mov	r0, r3
   1ae5c:	e24bd004 	sub	sp, fp, #4
   1ae60:	e8bd8800 	pop	{fp, pc}

0001ae64 <fdt_string_eq_>:

static int fdt_string_eq_(const void *fdt, int stroffset,
			  const char *s, int len)
{
   1ae64:	e92d4800 	push	{fp, lr}
   1ae68:	e28db004 	add	fp, sp, #4
   1ae6c:	e24dd018 	sub	sp, sp, #24
   1ae70:	e50b0010 	str	r0, [fp, #-16]
   1ae74:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1ae78:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1ae7c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	int slen;
	const char *p = fdt_get_string(fdt, stroffset, &slen);
   1ae80:	e24b300c 	sub	r3, fp, #12
   1ae84:	e1a02003 	mov	r2, r3
   1ae88:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1ae8c:	e51b0010 	ldr	r0, [fp, #-16]
   1ae90:	ebffff46 	bl	1abb0 <fdt_get_string>
   1ae94:	e50b0008 	str	r0, [fp, #-8]

	return p && (slen == len) && (memcmp(p, s, len) == 0);
   1ae98:	e51b3008 	ldr	r3, [fp, #-8]
   1ae9c:	e3530000 	cmp	r3, #0
   1aea0:	0a00000d 	beq	1aedc <fdt_string_eq_+0x78>
   1aea4:	e51b300c 	ldr	r3, [fp, #-12]
   1aea8:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1aeac:	e1520003 	cmp	r2, r3
   1aeb0:	1a000009 	bne	1aedc <fdt_string_eq_+0x78>
   1aeb4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aeb8:	e1a02003 	mov	r2, r3
   1aebc:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aec0:	e51b0008 	ldr	r0, [fp, #-8]
   1aec4:	eb001b2d 	bl	21b80 <memcmp>
   1aec8:	e1a03000 	mov	r3, r0
   1aecc:	e3530000 	cmp	r3, #0
   1aed0:	1a000001 	bne	1aedc <fdt_string_eq_+0x78>
   1aed4:	e3a03001 	mov	r3, #1
   1aed8:	ea000000 	b	1aee0 <fdt_string_eq_+0x7c>
   1aedc:	e3a03000 	mov	r3, #0
}
   1aee0:	e1a00003 	mov	r0, r3
   1aee4:	e24bd004 	sub	sp, fp, #4
   1aee8:	e8bd8800 	pop	{fp, pc}

0001aeec <fdt_get_max_phandle>:

uint32_t fdt_get_max_phandle(const void *fdt)
{
   1aeec:	e92d4800 	push	{fp, lr}
   1aef0:	e28db004 	add	fp, sp, #4
   1aef4:	e24dd018 	sub	sp, sp, #24
   1aef8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
	uint32_t max_phandle = 0;
   1aefc:	e3a03000 	mov	r3, #0
   1af00:	e50b3008 	str	r3, [fp, #-8]
	int offset;

	for (offset = fdt_next_node(fdt, -1, NULL);;
   1af04:	e3a02000 	mov	r2, #0
   1af08:	e3e01000 	mvn	r1, #0
   1af0c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af10:	eb000957 	bl	1d474 <fdt_next_node>
   1af14:	e50b000c 	str	r0, [fp, #-12]
	     offset = fdt_next_node(fdt, offset, NULL)) {
		uint32_t phandle;

		if (offset == -FDT_ERR_NOTFOUND)
   1af18:	e51b300c 	ldr	r3, [fp, #-12]
   1af1c:	e3730001 	cmn	r3, #1
   1af20:	1a000001 	bne	1af2c <fdt_get_max_phandle+0x40>
			return max_phandle;
   1af24:	e51b3008 	ldr	r3, [fp, #-8]
   1af28:	ea000019 	b	1af94 <fdt_get_max_phandle+0xa8>

		if (offset < 0)
   1af2c:	e51b300c 	ldr	r3, [fp, #-12]
   1af30:	e3530000 	cmp	r3, #0
   1af34:	aa000001 	bge	1af40 <fdt_get_max_phandle+0x54>
			return (uint32_t)-1;
   1af38:	e3e03000 	mvn	r3, #0
   1af3c:	ea000014 	b	1af94 <fdt_get_max_phandle+0xa8>

		phandle = fdt_get_phandle(fdt, offset);
   1af40:	e51b100c 	ldr	r1, [fp, #-12]
   1af44:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af48:	eb000328 	bl	1bbf0 <fdt_get_phandle>
   1af4c:	e50b0010 	str	r0, [fp, #-16]
		if (phandle == (uint32_t)-1)
   1af50:	e51b3010 	ldr	r3, [fp, #-16]
   1af54:	e3730001 	cmn	r3, #1
   1af58:	0a000006 	beq	1af78 <fdt_get_max_phandle+0x8c>
			continue;

		if (phandle > max_phandle)
   1af5c:	e51b2010 	ldr	r2, [fp, #-16]
   1af60:	e51b3008 	ldr	r3, [fp, #-8]
   1af64:	e1520003 	cmp	r2, r3
   1af68:	9a000003 	bls	1af7c <fdt_get_max_phandle+0x90>
			max_phandle = phandle;
   1af6c:	e51b3010 	ldr	r3, [fp, #-16]
   1af70:	e50b3008 	str	r3, [fp, #-8]
   1af74:	ea000000 	b	1af7c <fdt_get_max_phandle+0x90>
			continue;
   1af78:	e320f000 	nop	{0}
	     offset = fdt_next_node(fdt, offset, NULL)) {
   1af7c:	e3a02000 	mov	r2, #0
   1af80:	e51b100c 	ldr	r1, [fp, #-12]
   1af84:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af88:	eb000939 	bl	1d474 <fdt_next_node>
   1af8c:	e50b000c 	str	r0, [fp, #-12]
   1af90:	eaffffe0 	b	1af18 <fdt_get_max_phandle+0x2c>
	}

	return 0;
}
   1af94:	e1a00003 	mov	r0, r3
   1af98:	e24bd004 	sub	sp, fp, #4
   1af9c:	e8bd8800 	pop	{fp, pc}

0001afa0 <fdt_mem_rsv>:

static const struct fdt_reserve_entry *fdt_mem_rsv(const void *fdt, int n)
{
   1afa0:	e92d4800 	push	{fp, lr}
   1afa4:	e28db004 	add	fp, sp, #4
   1afa8:	e24dd010 	sub	sp, sp, #16
   1afac:	e50b0010 	str	r0, [fp, #-16]
   1afb0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int offset = n * sizeof(struct fdt_reserve_entry);
   1afb4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1afb8:	e1a03203 	lsl	r3, r3, #4
   1afbc:	e50b3008 	str	r3, [fp, #-8]
	int absoffset = fdt_off_mem_rsvmap(fdt) + offset;
   1afc0:	e51b3010 	ldr	r3, [fp, #-16]
   1afc4:	e2833010 	add	r3, r3, #16
   1afc8:	e1a00003 	mov	r0, r3
   1afcc:	ebfffe73 	bl	1a9a0 <fdt32_ld>
   1afd0:	e1a02000 	mov	r2, r0
   1afd4:	e51b3008 	ldr	r3, [fp, #-8]
   1afd8:	e0823003 	add	r3, r2, r3
   1afdc:	e50b300c 	str	r3, [fp, #-12]

	if (absoffset < fdt_off_mem_rsvmap(fdt))
   1afe0:	e51b3010 	ldr	r3, [fp, #-16]
   1afe4:	e2833010 	add	r3, r3, #16
   1afe8:	e1a00003 	mov	r0, r3
   1afec:	ebfffe6b 	bl	1a9a0 <fdt32_ld>
   1aff0:	e1a02000 	mov	r2, r0
   1aff4:	e51b300c 	ldr	r3, [fp, #-12]
   1aff8:	e1520003 	cmp	r2, r3
   1affc:	9a000001 	bls	1b008 <fdt_mem_rsv+0x68>
		return NULL;
   1b000:	e3a03000 	mov	r3, #0
   1b004:	ea00000e 	b	1b044 <fdt_mem_rsv+0xa4>
	if (absoffset > fdt_totalsize(fdt) - sizeof(struct fdt_reserve_entry))
   1b008:	e51b3010 	ldr	r3, [fp, #-16]
   1b00c:	e2833004 	add	r3, r3, #4
   1b010:	e1a00003 	mov	r0, r3
   1b014:	ebfffe61 	bl	1a9a0 <fdt32_ld>
   1b018:	e1a03000 	mov	r3, r0
   1b01c:	e2432010 	sub	r2, r3, #16
   1b020:	e51b300c 	ldr	r3, [fp, #-12]
   1b024:	e1520003 	cmp	r2, r3
   1b028:	2a000001 	bcs	1b034 <fdt_mem_rsv+0x94>
		return NULL;
   1b02c:	e3a03000 	mov	r3, #0
   1b030:	ea000003 	b	1b044 <fdt_mem_rsv+0xa4>
	return fdt_mem_rsv_(fdt, n);
   1b034:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b038:	e51b0010 	ldr	r0, [fp, #-16]
   1b03c:	ebfffe8b 	bl	1aa70 <fdt_mem_rsv_>
   1b040:	e1a03000 	mov	r3, r0
}
   1b044:	e1a00003 	mov	r0, r3
   1b048:	e24bd004 	sub	sp, fp, #4
   1b04c:	e8bd8800 	pop	{fp, pc}

0001b050 <fdt_get_mem_rsv>:

int fdt_get_mem_rsv(const void *fdt, int n, uint64_t *address, uint64_t *size)
{
   1b050:	e92d4800 	push	{fp, lr}
   1b054:	e28db004 	add	fp, sp, #4
   1b058:	e24dd018 	sub	sp, sp, #24
   1b05c:	e50b0010 	str	r0, [fp, #-16]
   1b060:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1b064:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1b068:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	const struct fdt_reserve_entry *re;

	FDT_RO_PROBE(fdt);
   1b06c:	e51b0010 	ldr	r0, [fp, #-16]
   1b070:	eb0006c9 	bl	1cb9c <fdt_ro_probe_>
   1b074:	e50b0008 	str	r0, [fp, #-8]
   1b078:	e51b3008 	ldr	r3, [fp, #-8]
   1b07c:	e3530000 	cmp	r3, #0
   1b080:	0a000001 	beq	1b08c <fdt_get_mem_rsv+0x3c>
   1b084:	e51b3008 	ldr	r3, [fp, #-8]
   1b088:	ea000018 	b	1b0f0 <fdt_get_mem_rsv+0xa0>
	re = fdt_mem_rsv(fdt, n);
   1b08c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b090:	e51b0010 	ldr	r0, [fp, #-16]
   1b094:	ebffffc1 	bl	1afa0 <fdt_mem_rsv>
   1b098:	e50b000c 	str	r0, [fp, #-12]
	if (!re)
   1b09c:	e51b300c 	ldr	r3, [fp, #-12]
   1b0a0:	e3530000 	cmp	r3, #0
   1b0a4:	1a000001 	bne	1b0b0 <fdt_get_mem_rsv+0x60>
		return -FDT_ERR_BADOFFSET;
   1b0a8:	e3e03003 	mvn	r3, #3
   1b0ac:	ea00000f 	b	1b0f0 <fdt_get_mem_rsv+0xa0>

	*address = fdt64_ld(&re->address);
   1b0b0:	e51b300c 	ldr	r3, [fp, #-12]
   1b0b4:	e1a00003 	mov	r0, r3
   1b0b8:	ebfffe48 	bl	1a9e0 <fdt64_ld>
   1b0bc:	e1a02000 	mov	r2, r0
   1b0c0:	e1a03001 	mov	r3, r1
   1b0c4:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b0c8:	e1c120f0 	strd	r2, [r1]
	*size = fdt64_ld(&re->size);
   1b0cc:	e51b300c 	ldr	r3, [fp, #-12]
   1b0d0:	e2833008 	add	r3, r3, #8
   1b0d4:	e1a00003 	mov	r0, r3
   1b0d8:	ebfffe40 	bl	1a9e0 <fdt64_ld>
   1b0dc:	e1a02000 	mov	r2, r0
   1b0e0:	e1a03001 	mov	r3, r1
   1b0e4:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0e8:	e1c120f0 	strd	r2, [r1]
	return 0;
   1b0ec:	e3a03000 	mov	r3, #0
}
   1b0f0:	e1a00003 	mov	r0, r3
   1b0f4:	e24bd004 	sub	sp, fp, #4
   1b0f8:	e8bd8800 	pop	{fp, pc}

0001b0fc <fdt_num_mem_rsv>:

int fdt_num_mem_rsv(const void *fdt)
{
   1b0fc:	e92d4800 	push	{fp, lr}
   1b100:	e28db004 	add	fp, sp, #4
   1b104:	e24dd010 	sub	sp, sp, #16
   1b108:	e50b0010 	str	r0, [fp, #-16]
	int i;
	const struct fdt_reserve_entry *re;

	for (i = 0; (re = fdt_mem_rsv(fdt, i)) != NULL; i++) {
   1b10c:	e3a03000 	mov	r3, #0
   1b110:	e50b3008 	str	r3, [fp, #-8]
   1b114:	ea00000c 	b	1b14c <fdt_num_mem_rsv+0x50>
		if (fdt64_ld(&re->size) == 0)
   1b118:	e51b300c 	ldr	r3, [fp, #-12]
   1b11c:	e2833008 	add	r3, r3, #8
   1b120:	e1a00003 	mov	r0, r3
   1b124:	ebfffe2d 	bl	1a9e0 <fdt64_ld>
   1b128:	e1a02000 	mov	r2, r0
   1b12c:	e1a03001 	mov	r3, r1
   1b130:	e1923003 	orrs	r3, r2, r3
   1b134:	1a000001 	bne	1b140 <fdt_num_mem_rsv+0x44>
			return i;
   1b138:	e51b3008 	ldr	r3, [fp, #-8]
   1b13c:	ea00000a 	b	1b16c <fdt_num_mem_rsv+0x70>
	for (i = 0; (re = fdt_mem_rsv(fdt, i)) != NULL; i++) {
   1b140:	e51b3008 	ldr	r3, [fp, #-8]
   1b144:	e2833001 	add	r3, r3, #1
   1b148:	e50b3008 	str	r3, [fp, #-8]
   1b14c:	e51b1008 	ldr	r1, [fp, #-8]
   1b150:	e51b0010 	ldr	r0, [fp, #-16]
   1b154:	ebffff91 	bl	1afa0 <fdt_mem_rsv>
   1b158:	e50b000c 	str	r0, [fp, #-12]
   1b15c:	e51b300c 	ldr	r3, [fp, #-12]
   1b160:	e3530000 	cmp	r3, #0
   1b164:	1affffeb 	bne	1b118 <fdt_num_mem_rsv+0x1c>
	}
	return -FDT_ERR_TRUNCATED;
   1b168:	e3e03007 	mvn	r3, #7
}
   1b16c:	e1a00003 	mov	r0, r3
   1b170:	e24bd004 	sub	sp, fp, #4
   1b174:	e8bd8800 	pop	{fp, pc}

0001b178 <nextprop_>:

static int nextprop_(const void *fdt, int offset)
{
   1b178:	e92d4800 	push	{fp, lr}
   1b17c:	e28db004 	add	fp, sp, #4
   1b180:	e24dd010 	sub	sp, sp, #16
   1b184:	e50b0010 	str	r0, [fp, #-16]
   1b188:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	uint32_t tag;
	int nextoffset;

	do {
		tag = fdt_next_tag(fdt, offset, &nextoffset);
   1b18c:	e24b300c 	sub	r3, fp, #12
   1b190:	e1a02003 	mov	r2, r3
   1b194:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b198:	e51b0010 	ldr	r0, [fp, #-16]
   1b19c:	eb0007f2 	bl	1d16c <fdt_next_tag>
   1b1a0:	e50b0008 	str	r0, [fp, #-8]

		switch (tag) {
   1b1a4:	e51b3008 	ldr	r3, [fp, #-8]
   1b1a8:	e3530003 	cmp	r3, #3
   1b1ac:	0a000009 	beq	1b1d8 <nextprop_+0x60>
   1b1b0:	e51b3008 	ldr	r3, [fp, #-8]
   1b1b4:	e3530009 	cmp	r3, #9
   1b1b8:	1a000008 	bne	1b1e0 <nextprop_+0x68>
		case FDT_END:
			if (nextoffset >= 0)
   1b1bc:	e51b300c 	ldr	r3, [fp, #-12]
   1b1c0:	e3530000 	cmp	r3, #0
   1b1c4:	ba000001 	blt	1b1d0 <nextprop_+0x58>
				return -FDT_ERR_BADSTRUCTURE;
   1b1c8:	e3e0300a 	mvn	r3, #10
   1b1cc:	ea000009 	b	1b1f8 <nextprop_+0x80>
			else
				return nextoffset;
   1b1d0:	e51b300c 	ldr	r3, [fp, #-12]
   1b1d4:	ea000007 	b	1b1f8 <nextprop_+0x80>

		case FDT_PROP:
			return offset;
   1b1d8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b1dc:	ea000005 	b	1b1f8 <nextprop_+0x80>
		}
		offset = nextoffset;
   1b1e0:	e51b300c 	ldr	r3, [fp, #-12]
   1b1e4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	} while (tag == FDT_NOP);
   1b1e8:	e51b3008 	ldr	r3, [fp, #-8]
   1b1ec:	e3530004 	cmp	r3, #4
   1b1f0:	0affffe5 	beq	1b18c <nextprop_+0x14>

	return -FDT_ERR_NOTFOUND;
   1b1f4:	e3e03000 	mvn	r3, #0
}
   1b1f8:	e1a00003 	mov	r0, r3
   1b1fc:	e24bd004 	sub	sp, fp, #4
   1b200:	e8bd8800 	pop	{fp, pc}

0001b204 <fdt_subnode_offset_namelen>:

int fdt_subnode_offset_namelen(const void *fdt, int offset,
			       const char *name, int namelen)
{
   1b204:	e92d4800 	push	{fp, lr}
   1b208:	e28db004 	add	fp, sp, #4
   1b20c:	e24dd018 	sub	sp, sp, #24
   1b210:	e50b0010 	str	r0, [fp, #-16]
   1b214:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1b218:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1b21c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	int depth;

	FDT_RO_PROBE(fdt);
   1b220:	e51b0010 	ldr	r0, [fp, #-16]
   1b224:	eb00065c 	bl	1cb9c <fdt_ro_probe_>
   1b228:	e50b0008 	str	r0, [fp, #-8]
   1b22c:	e51b3008 	ldr	r3, [fp, #-8]
   1b230:	e3530000 	cmp	r3, #0
   1b234:	0a000001 	beq	1b240 <fdt_subnode_offset_namelen+0x3c>
   1b238:	e51b3008 	ldr	r3, [fp, #-8]
   1b23c:	ea000021 	b	1b2c8 <fdt_subnode_offset_namelen+0xc4>

	for (depth = 0;
   1b240:	e3a03000 	mov	r3, #0
   1b244:	e50b300c 	str	r3, [fp, #-12]
   1b248:	ea000012 	b	1b298 <fdt_subnode_offset_namelen+0x94>
	     (offset >= 0) && (depth >= 0);
	     offset = fdt_next_node(fdt, offset, &depth))
		if ((depth == 1)
   1b24c:	e51b300c 	ldr	r3, [fp, #-12]
   1b250:	e3530001 	cmp	r3, #1
   1b254:	1a000009 	bne	1b280 <fdt_subnode_offset_namelen+0x7c>
		    && fdt_nodename_eq_(fdt, offset, name, namelen))
   1b258:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b25c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b260:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b264:	e51b0010 	ldr	r0, [fp, #-16]
   1b268:	ebfffe14 	bl	1aac0 <fdt_nodename_eq_>
   1b26c:	e1a03000 	mov	r3, r0
   1b270:	e3530000 	cmp	r3, #0
   1b274:	0a000001 	beq	1b280 <fdt_subnode_offset_namelen+0x7c>
			return offset;
   1b278:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b27c:	ea000011 	b	1b2c8 <fdt_subnode_offset_namelen+0xc4>
	     offset = fdt_next_node(fdt, offset, &depth))
   1b280:	e24b300c 	sub	r3, fp, #12
   1b284:	e1a02003 	mov	r2, r3
   1b288:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b28c:	e51b0010 	ldr	r0, [fp, #-16]
   1b290:	eb000877 	bl	1d474 <fdt_next_node>
   1b294:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
	for (depth = 0;
   1b298:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b29c:	e3530000 	cmp	r3, #0
   1b2a0:	ba000002 	blt	1b2b0 <fdt_subnode_offset_namelen+0xac>
	     (offset >= 0) && (depth >= 0);
   1b2a4:	e51b300c 	ldr	r3, [fp, #-12]
   1b2a8:	e3530000 	cmp	r3, #0
   1b2ac:	aaffffe6 	bge	1b24c <fdt_subnode_offset_namelen+0x48>

	if (depth < 0)
   1b2b0:	e51b300c 	ldr	r3, [fp, #-12]
   1b2b4:	e3530000 	cmp	r3, #0
   1b2b8:	aa000001 	bge	1b2c4 <fdt_subnode_offset_namelen+0xc0>
		return -FDT_ERR_NOTFOUND;
   1b2bc:	e3e03000 	mvn	r3, #0
   1b2c0:	ea000000 	b	1b2c8 <fdt_subnode_offset_namelen+0xc4>
	return offset; /* error */
   1b2c4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   1b2c8:	e1a00003 	mov	r0, r3
   1b2cc:	e24bd004 	sub	sp, fp, #4
   1b2d0:	e8bd8800 	pop	{fp, pc}

0001b2d4 <fdt_subnode_offset>:

int fdt_subnode_offset(const void *fdt, int parentoffset,
		       const char *name)
{
   1b2d4:	e92d4800 	push	{fp, lr}
   1b2d8:	e28db004 	add	fp, sp, #4
   1b2dc:	e24dd010 	sub	sp, sp, #16
   1b2e0:	e50b0008 	str	r0, [fp, #-8]
   1b2e4:	e50b100c 	str	r1, [fp, #-12]
   1b2e8:	e50b2010 	str	r2, [fp, #-16]
	return fdt_subnode_offset_namelen(fdt, parentoffset, name, strlen(name));
   1b2ec:	e51b0010 	ldr	r0, [fp, #-16]
   1b2f0:	eb001af1 	bl	21ebc <strlen>
   1b2f4:	e1a03000 	mov	r3, r0
   1b2f8:	e51b2010 	ldr	r2, [fp, #-16]
   1b2fc:	e51b100c 	ldr	r1, [fp, #-12]
   1b300:	e51b0008 	ldr	r0, [fp, #-8]
   1b304:	ebffffbe 	bl	1b204 <fdt_subnode_offset_namelen>
   1b308:	e1a03000 	mov	r3, r0
}
   1b30c:	e1a00003 	mov	r0, r3
   1b310:	e24bd004 	sub	sp, fp, #4
   1b314:	e8bd8800 	pop	{fp, pc}

0001b318 <fdt_path_offset_namelen>:

int fdt_path_offset_namelen(const void *fdt, const char *path, int namelen)
{
   1b318:	e92d4800 	push	{fp, lr}
   1b31c:	e28db004 	add	fp, sp, #4
   1b320:	e24dd028 	sub	sp, sp, #40	; 0x28
   1b324:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   1b328:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   1b32c:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
	const char *end = path + namelen;
   1b330:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b334:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b338:	e0823003 	add	r3, r2, r3
   1b33c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	const char *p = path;
   1b340:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b344:	e50b3008 	str	r3, [fp, #-8]
	int offset = 0;
   1b348:	e3a03000 	mov	r3, #0
   1b34c:	e50b300c 	str	r3, [fp, #-12]

	FDT_RO_PROBE(fdt);
   1b350:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b354:	eb000610 	bl	1cb9c <fdt_ro_probe_>
   1b358:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
   1b35c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b360:	e3530000 	cmp	r3, #0
   1b364:	0a000001 	beq	1b370 <fdt_path_offset_namelen+0x58>
   1b368:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b36c:	ea000052 	b	1b4bc <fdt_path_offset_namelen+0x1a4>

	/* see if we have an alias */
	if (*path != '/') {
   1b370:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b374:	e5d33000 	ldrb	r3, [r3]
   1b378:	e353002f 	cmp	r3, #47	; 0x2f
   1b37c:	0a000049 	beq	1b4a8 <fdt_path_offset_namelen+0x190>
		const char *q = memchr(path, '/', end - p);
   1b380:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b384:	e51b3008 	ldr	r3, [fp, #-8]
   1b388:	e0423003 	sub	r3, r2, r3
   1b38c:	e1a02003 	mov	r2, r3
   1b390:	e3a0102f 	mov	r1, #47	; 0x2f
   1b394:	e51b0024 	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b398:	eb0019c8 	bl	21ac0 <memchr>
   1b39c:	e50b0010 	str	r0, [fp, #-16]

		if (!q)
   1b3a0:	e51b3010 	ldr	r3, [fp, #-16]
   1b3a4:	e3530000 	cmp	r3, #0
   1b3a8:	1a000001 	bne	1b3b4 <fdt_path_offset_namelen+0x9c>
			q = end;
   1b3ac:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b3b0:	e50b3010 	str	r3, [fp, #-16]

		p = fdt_get_alias_namelen(fdt, p, q - p);
   1b3b4:	e51b2010 	ldr	r2, [fp, #-16]
   1b3b8:	e51b3008 	ldr	r3, [fp, #-8]
   1b3bc:	e0423003 	sub	r3, r2, r3
   1b3c0:	e1a02003 	mov	r2, r3
   1b3c4:	e51b1008 	ldr	r1, [fp, #-8]
   1b3c8:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3cc:	eb00022e 	bl	1bc8c <fdt_get_alias_namelen>
   1b3d0:	e50b0008 	str	r0, [fp, #-8]
		if (!p)
   1b3d4:	e51b3008 	ldr	r3, [fp, #-8]
   1b3d8:	e3530000 	cmp	r3, #0
   1b3dc:	1a000001 	bne	1b3e8 <fdt_path_offset_namelen+0xd0>
			return -FDT_ERR_BADPATH;
   1b3e0:	e3e03004 	mvn	r3, #4
   1b3e4:	ea000034 	b	1b4bc <fdt_path_offset_namelen+0x1a4>
		offset = fdt_path_offset(fdt, p);
   1b3e8:	e51b1008 	ldr	r1, [fp, #-8]
   1b3ec:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3f0:	eb000034 	bl	1b4c8 <fdt_path_offset>
   1b3f4:	e50b000c 	str	r0, [fp, #-12]

		p = q;
   1b3f8:	e51b3010 	ldr	r3, [fp, #-16]
   1b3fc:	e50b3008 	str	r3, [fp, #-8]
	}

	while (p < end) {
   1b400:	ea000028 	b	1b4a8 <fdt_path_offset_namelen+0x190>
		const char *q;

		while (*p == '/') {
			p++;
   1b404:	e51b3008 	ldr	r3, [fp, #-8]
   1b408:	e2833001 	add	r3, r3, #1
   1b40c:	e50b3008 	str	r3, [fp, #-8]
			if (p == end)
   1b410:	e51b2008 	ldr	r2, [fp, #-8]
   1b414:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b418:	e1520003 	cmp	r2, r3
   1b41c:	1a000001 	bne	1b428 <fdt_path_offset_namelen+0x110>
				return offset;
   1b420:	e51b300c 	ldr	r3, [fp, #-12]
   1b424:	ea000024 	b	1b4bc <fdt_path_offset_namelen+0x1a4>
		while (*p == '/') {
   1b428:	e51b3008 	ldr	r3, [fp, #-8]
   1b42c:	e5d33000 	ldrb	r3, [r3]
   1b430:	e353002f 	cmp	r3, #47	; 0x2f
   1b434:	0afffff2 	beq	1b404 <fdt_path_offset_namelen+0xec>
		}
		q = memchr(p, '/', end - p);
   1b438:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b43c:	e51b3008 	ldr	r3, [fp, #-8]
   1b440:	e0423003 	sub	r3, r2, r3
   1b444:	e1a02003 	mov	r2, r3
   1b448:	e3a0102f 	mov	r1, #47	; 0x2f
   1b44c:	e51b0008 	ldr	r0, [fp, #-8]
   1b450:	eb00199a 	bl	21ac0 <memchr>
   1b454:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
		if (! q)
   1b458:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b45c:	e3530000 	cmp	r3, #0
   1b460:	1a000001 	bne	1b46c <fdt_path_offset_namelen+0x154>
			q = end;
   1b464:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b468:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

		offset = fdt_subnode_offset_namelen(fdt, offset, p, q-p);
   1b46c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1b470:	e51b3008 	ldr	r3, [fp, #-8]
   1b474:	e0423003 	sub	r3, r2, r3
   1b478:	e51b2008 	ldr	r2, [fp, #-8]
   1b47c:	e51b100c 	ldr	r1, [fp, #-12]
   1b480:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b484:	ebffff5e 	bl	1b204 <fdt_subnode_offset_namelen>
   1b488:	e50b000c 	str	r0, [fp, #-12]
		if (offset < 0)
   1b48c:	e51b300c 	ldr	r3, [fp, #-12]
   1b490:	e3530000 	cmp	r3, #0
   1b494:	aa000001 	bge	1b4a0 <fdt_path_offset_namelen+0x188>
			return offset;
   1b498:	e51b300c 	ldr	r3, [fp, #-12]
   1b49c:	ea000006 	b	1b4bc <fdt_path_offset_namelen+0x1a4>

		p = q;
   1b4a0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b4a4:	e50b3008 	str	r3, [fp, #-8]
	while (p < end) {
   1b4a8:	e51b2008 	ldr	r2, [fp, #-8]
   1b4ac:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b4b0:	e1520003 	cmp	r2, r3
   1b4b4:	3affffdb 	bcc	1b428 <fdt_path_offset_namelen+0x110>
	}

	return offset;
   1b4b8:	e51b300c 	ldr	r3, [fp, #-12]
}
   1b4bc:	e1a00003 	mov	r0, r3
   1b4c0:	e24bd004 	sub	sp, fp, #4
   1b4c4:	e8bd8800 	pop	{fp, pc}

0001b4c8 <fdt_path_offset>:

int fdt_path_offset(const void *fdt, const char *path)
{
   1b4c8:	e92d4800 	push	{fp, lr}
   1b4cc:	e28db004 	add	fp, sp, #4
   1b4d0:	e24dd008 	sub	sp, sp, #8
   1b4d4:	e50b0008 	str	r0, [fp, #-8]
   1b4d8:	e50b100c 	str	r1, [fp, #-12]
	return fdt_path_offset_namelen(fdt, path, strlen(path));
   1b4dc:	e51b000c 	ldr	r0, [fp, #-12]
   1b4e0:	eb001a75 	bl	21ebc <strlen>
   1b4e4:	e1a03000 	mov	r3, r0
   1b4e8:	e1a02003 	mov	r2, r3
   1b4ec:	e51b100c 	ldr	r1, [fp, #-12]
   1b4f0:	e51b0008 	ldr	r0, [fp, #-8]
   1b4f4:	ebffff87 	bl	1b318 <fdt_path_offset_namelen>
   1b4f8:	e1a03000 	mov	r3, r0
}
   1b4fc:	e1a00003 	mov	r0, r3
   1b500:	e24bd004 	sub	sp, fp, #4
   1b504:	e8bd8800 	pop	{fp, pc}

0001b508 <fdt_get_name>:

const char *fdt_get_name(const void *fdt, int nodeoffset, int *len)
{
   1b508:	e92d4800 	push	{fp, lr}
   1b50c:	e28db004 	add	fp, sp, #4
   1b510:	e24dd020 	sub	sp, sp, #32
   1b514:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1b518:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1b51c:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
	const struct fdt_node_header *nh = fdt_offset_ptr_(fdt, nodeoffset);
   1b520:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b524:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b528:	ebfffd3f 	bl	1aa2c <fdt_offset_ptr_>
   1b52c:	e50b0010 	str	r0, [fp, #-16]
	const char *nameptr;
	int err;

	if (((err = fdt_ro_probe_(fdt)) != 0)
   1b530:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b534:	eb000598 	bl	1cb9c <fdt_ro_probe_>
   1b538:	e50b000c 	str	r0, [fp, #-12]
   1b53c:	e51b300c 	ldr	r3, [fp, #-12]
   1b540:	e3530000 	cmp	r3, #0
   1b544:	1a000028 	bne	1b5ec <fdt_get_name+0xe4>
	    || ((err = fdt_check_node_offset_(fdt, nodeoffset)) < 0))
   1b548:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b54c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b550:	eb000793 	bl	1d3a4 <fdt_check_node_offset_>
   1b554:	e50b000c 	str	r0, [fp, #-12]
   1b558:	e51b300c 	ldr	r3, [fp, #-12]
   1b55c:	e3530000 	cmp	r3, #0
   1b560:	ba000021 	blt	1b5ec <fdt_get_name+0xe4>
			goto fail;

	nameptr = nh->name;
   1b564:	e51b3010 	ldr	r3, [fp, #-16]
   1b568:	e2833004 	add	r3, r3, #4
   1b56c:	e50b3008 	str	r3, [fp, #-8]

	if (fdt_version(fdt) < 0x10) {
   1b570:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b574:	e2833014 	add	r3, r3, #20
   1b578:	e1a00003 	mov	r0, r3
   1b57c:	ebfffd07 	bl	1a9a0 <fdt32_ld>
   1b580:	e1a03000 	mov	r3, r0
   1b584:	e353000f 	cmp	r3, #15
   1b588:	8a00000c 	bhi	1b5c0 <fdt_get_name+0xb8>
		 * For old FDT versions, match the naming conventions of V16:
		 * give only the leaf name (after all /). The actual tree
		 * contents are loosely checked.
		 */
		const char *leaf;
		leaf = strrchr(nameptr, '/');
   1b58c:	e3a0102f 	mov	r1, #47	; 0x2f
   1b590:	e51b0008 	ldr	r0, [fp, #-8]
   1b594:	eb001a86 	bl	21fb4 <strrchr>
   1b598:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
		if (leaf == NULL) {
   1b59c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5a0:	e3530000 	cmp	r3, #0
   1b5a4:	1a000002 	bne	1b5b4 <fdt_get_name+0xac>
			err = -FDT_ERR_BADSTRUCTURE;
   1b5a8:	e3e0300a 	mvn	r3, #10
   1b5ac:	e50b300c 	str	r3, [fp, #-12]
			goto fail;
   1b5b0:	ea00000e 	b	1b5f0 <fdt_get_name+0xe8>
		}
		nameptr = leaf+1;
   1b5b4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5b8:	e2833001 	add	r3, r3, #1
   1b5bc:	e50b3008 	str	r3, [fp, #-8]
	}

	if (len)
   1b5c0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5c4:	e3530000 	cmp	r3, #0
   1b5c8:	0a000005 	beq	1b5e4 <fdt_get_name+0xdc>
		*len = strlen(nameptr);
   1b5cc:	e51b0008 	ldr	r0, [fp, #-8]
   1b5d0:	eb001a39 	bl	21ebc <strlen>
   1b5d4:	e1a03000 	mov	r3, r0
   1b5d8:	e1a02003 	mov	r2, r3
   1b5dc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5e0:	e5832000 	str	r2, [r3]

	return nameptr;
   1b5e4:	e51b3008 	ldr	r3, [fp, #-8]
   1b5e8:	ea000007 	b	1b60c <fdt_get_name+0x104>
			goto fail;
   1b5ec:	e320f000 	nop	{0}

 fail:
	if (len)
   1b5f0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5f4:	e3530000 	cmp	r3, #0
   1b5f8:	0a000002 	beq	1b608 <fdt_get_name+0x100>
		*len = err;
   1b5fc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b600:	e51b200c 	ldr	r2, [fp, #-12]
   1b604:	e5832000 	str	r2, [r3]
	return NULL;
   1b608:	e3a03000 	mov	r3, #0
}
   1b60c:	e1a00003 	mov	r0, r3
   1b610:	e24bd004 	sub	sp, fp, #4
   1b614:	e8bd8800 	pop	{fp, pc}

0001b618 <fdt_first_property_offset>:

int fdt_first_property_offset(const void *fdt, int nodeoffset)
{
   1b618:	e92d4800 	push	{fp, lr}
   1b61c:	e28db004 	add	fp, sp, #4
   1b620:	e24dd010 	sub	sp, sp, #16
   1b624:	e50b0010 	str	r0, [fp, #-16]
   1b628:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int offset;

	if ((offset = fdt_check_node_offset_(fdt, nodeoffset)) < 0)
   1b62c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b630:	e51b0010 	ldr	r0, [fp, #-16]
   1b634:	eb00075a 	bl	1d3a4 <fdt_check_node_offset_>
   1b638:	e50b0008 	str	r0, [fp, #-8]
   1b63c:	e51b3008 	ldr	r3, [fp, #-8]
   1b640:	e3530000 	cmp	r3, #0
   1b644:	aa000001 	bge	1b650 <fdt_first_property_offset+0x38>
		return offset;
   1b648:	e51b3008 	ldr	r3, [fp, #-8]
   1b64c:	ea000003 	b	1b660 <fdt_first_property_offset+0x48>

	return nextprop_(fdt, offset);
   1b650:	e51b1008 	ldr	r1, [fp, #-8]
   1b654:	e51b0010 	ldr	r0, [fp, #-16]
   1b658:	ebfffec6 	bl	1b178 <nextprop_>
   1b65c:	e1a03000 	mov	r3, r0
}
   1b660:	e1a00003 	mov	r0, r3
   1b664:	e24bd004 	sub	sp, fp, #4
   1b668:	e8bd8800 	pop	{fp, pc}

0001b66c <fdt_next_property_offset>:

int fdt_next_property_offset(const void *fdt, int offset)
{
   1b66c:	e92d4800 	push	{fp, lr}
   1b670:	e28db004 	add	fp, sp, #4
   1b674:	e24dd008 	sub	sp, sp, #8
   1b678:	e50b0008 	str	r0, [fp, #-8]
   1b67c:	e50b100c 	str	r1, [fp, #-12]
	if ((offset = fdt_check_prop_offset_(fdt, offset)) < 0)
   1b680:	e51b100c 	ldr	r1, [fp, #-12]
   1b684:	e51b0008 	ldr	r0, [fp, #-8]
   1b688:	eb00075f 	bl	1d40c <fdt_check_prop_offset_>
   1b68c:	e50b000c 	str	r0, [fp, #-12]
   1b690:	e51b300c 	ldr	r3, [fp, #-12]
   1b694:	e3530000 	cmp	r3, #0
   1b698:	aa000001 	bge	1b6a4 <fdt_next_property_offset+0x38>
		return offset;
   1b69c:	e51b300c 	ldr	r3, [fp, #-12]
   1b6a0:	ea000003 	b	1b6b4 <fdt_next_property_offset+0x48>

	return nextprop_(fdt, offset);
   1b6a4:	e51b100c 	ldr	r1, [fp, #-12]
   1b6a8:	e51b0008 	ldr	r0, [fp, #-8]
   1b6ac:	ebfffeb1 	bl	1b178 <nextprop_>
   1b6b0:	e1a03000 	mov	r3, r0
}
   1b6b4:	e1a00003 	mov	r0, r3
   1b6b8:	e24bd004 	sub	sp, fp, #4
   1b6bc:	e8bd8800 	pop	{fp, pc}

0001b6c0 <fdt_get_property_by_offset_>:

static const struct fdt_property *fdt_get_property_by_offset_(const void *fdt,
						              int offset,
						              int *lenp)
{
   1b6c0:	e92d4800 	push	{fp, lr}
   1b6c4:	e28db004 	add	fp, sp, #4
   1b6c8:	e24dd018 	sub	sp, sp, #24
   1b6cc:	e50b0010 	str	r0, [fp, #-16]
   1b6d0:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1b6d4:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	int err;
	const struct fdt_property *prop;

	if ((err = fdt_check_prop_offset_(fdt, offset)) < 0) {
   1b6d8:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b6dc:	e51b0010 	ldr	r0, [fp, #-16]
   1b6e0:	eb000749 	bl	1d40c <fdt_check_prop_offset_>
   1b6e4:	e50b0008 	str	r0, [fp, #-8]
   1b6e8:	e51b3008 	ldr	r3, [fp, #-8]
   1b6ec:	e3530000 	cmp	r3, #0
   1b6f0:	aa000007 	bge	1b714 <fdt_get_property_by_offset_+0x54>
		if (lenp)
   1b6f4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b6f8:	e3530000 	cmp	r3, #0
   1b6fc:	0a000002 	beq	1b70c <fdt_get_property_by_offset_+0x4c>
			*lenp = err;
   1b700:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b704:	e51b2008 	ldr	r2, [fp, #-8]
   1b708:	e5832000 	str	r2, [r3]
		return NULL;
   1b70c:	e3a03000 	mov	r3, #0
   1b710:	ea00000f 	b	1b754 <fdt_get_property_by_offset_+0x94>
	}

	prop = fdt_offset_ptr_(fdt, offset);
   1b714:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b718:	e51b0010 	ldr	r0, [fp, #-16]
   1b71c:	ebfffcc2 	bl	1aa2c <fdt_offset_ptr_>
   1b720:	e50b000c 	str	r0, [fp, #-12]

	if (lenp)
   1b724:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b728:	e3530000 	cmp	r3, #0
   1b72c:	0a000007 	beq	1b750 <fdt_get_property_by_offset_+0x90>
		*lenp = fdt32_ld(&prop->len);
   1b730:	e51b300c 	ldr	r3, [fp, #-12]
   1b734:	e2833004 	add	r3, r3, #4
   1b738:	e1a00003 	mov	r0, r3
   1b73c:	ebfffc97 	bl	1a9a0 <fdt32_ld>
   1b740:	e1a03000 	mov	r3, r0
   1b744:	e1a02003 	mov	r2, r3
   1b748:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b74c:	e5832000 	str	r2, [r3]

	return prop;
   1b750:	e51b300c 	ldr	r3, [fp, #-12]
}
   1b754:	e1a00003 	mov	r0, r3
   1b758:	e24bd004 	sub	sp, fp, #4
   1b75c:	e8bd8800 	pop	{fp, pc}

0001b760 <fdt_get_property_by_offset>:

const struct fdt_property *fdt_get_property_by_offset(const void *fdt,
						      int offset,
						      int *lenp)
{
   1b760:	e92d4800 	push	{fp, lr}
   1b764:	e28db004 	add	fp, sp, #4
   1b768:	e24dd010 	sub	sp, sp, #16
   1b76c:	e50b0008 	str	r0, [fp, #-8]
   1b770:	e50b100c 	str	r1, [fp, #-12]
   1b774:	e50b2010 	str	r2, [fp, #-16]
	/* Prior to version 16, properties may need realignment
	 * and this API does not work. fdt_getprop_*() will, however. */

	if (fdt_version(fdt) < 0x10) {
   1b778:	e51b3008 	ldr	r3, [fp, #-8]
   1b77c:	e2833014 	add	r3, r3, #20
   1b780:	e1a00003 	mov	r0, r3
   1b784:	ebfffc85 	bl	1a9a0 <fdt32_ld>
   1b788:	e1a03000 	mov	r3, r0
   1b78c:	e353000f 	cmp	r3, #15
   1b790:	8a000007 	bhi	1b7b4 <fdt_get_property_by_offset+0x54>
		if (lenp)
   1b794:	e51b3010 	ldr	r3, [fp, #-16]
   1b798:	e3530000 	cmp	r3, #0
   1b79c:	0a000002 	beq	1b7ac <fdt_get_property_by_offset+0x4c>
			*lenp = -FDT_ERR_BADVERSION;
   1b7a0:	e51b3010 	ldr	r3, [fp, #-16]
   1b7a4:	e3e02009 	mvn	r2, #9
   1b7a8:	e5832000 	str	r2, [r3]
		return NULL;
   1b7ac:	e3a03000 	mov	r3, #0
   1b7b0:	ea000004 	b	1b7c8 <fdt_get_property_by_offset+0x68>
	}

	return fdt_get_property_by_offset_(fdt, offset, lenp);
   1b7b4:	e51b2010 	ldr	r2, [fp, #-16]
   1b7b8:	e51b100c 	ldr	r1, [fp, #-12]
   1b7bc:	e51b0008 	ldr	r0, [fp, #-8]
   1b7c0:	ebffffbe 	bl	1b6c0 <fdt_get_property_by_offset_>
   1b7c4:	e1a03000 	mov	r3, r0
}
   1b7c8:	e1a00003 	mov	r0, r3
   1b7cc:	e24bd004 	sub	sp, fp, #4
   1b7d0:	e8bd8800 	pop	{fp, pc}

0001b7d4 <fdt_get_property_namelen_>:
						            int offset,
						            const char *name,
						            int namelen,
							    int *lenp,
							    int *poffset)
{
   1b7d4:	e92d4800 	push	{fp, lr}
   1b7d8:	e28db004 	add	fp, sp, #4
   1b7dc:	e24dd018 	sub	sp, sp, #24
   1b7e0:	e50b0010 	str	r0, [fp, #-16]
   1b7e4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1b7e8:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1b7ec:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	for (offset = fdt_first_property_offset(fdt, offset);
   1b7f0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b7f4:	e51b0010 	ldr	r0, [fp, #-16]
   1b7f8:	ebffff86 	bl	1b618 <fdt_first_property_offset>
   1b7fc:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
   1b800:	ea000023 	b	1b894 <fdt_get_property_namelen_+0xc0>
	     (offset >= 0);
	     (offset = fdt_next_property_offset(fdt, offset))) {
		const struct fdt_property *prop;

		if (!(prop = fdt_get_property_by_offset_(fdt, offset, lenp))) {
   1b804:	e59b2004 	ldr	r2, [fp, #4]
   1b808:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b80c:	e51b0010 	ldr	r0, [fp, #-16]
   1b810:	ebffffaa 	bl	1b6c0 <fdt_get_property_by_offset_>
   1b814:	e50b0008 	str	r0, [fp, #-8]
   1b818:	e51b3008 	ldr	r3, [fp, #-8]
   1b81c:	e3530000 	cmp	r3, #0
   1b820:	1a000002 	bne	1b830 <fdt_get_property_namelen_+0x5c>
			offset = -FDT_ERR_INTERNAL;
   1b824:	e3e0300c 	mvn	r3, #12
   1b828:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
			break;
   1b82c:	ea00001b 	b	1b8a0 <fdt_get_property_namelen_+0xcc>
		}
		if (fdt_string_eq_(fdt, fdt32_ld(&prop->nameoff),
   1b830:	e51b3008 	ldr	r3, [fp, #-8]
   1b834:	e2833008 	add	r3, r3, #8
   1b838:	e1a00003 	mov	r0, r3
   1b83c:	ebfffc57 	bl	1a9a0 <fdt32_ld>
   1b840:	e1a03000 	mov	r3, r0
   1b844:	e1a01003 	mov	r1, r3
   1b848:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b84c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b850:	e51b0010 	ldr	r0, [fp, #-16]
   1b854:	ebfffd82 	bl	1ae64 <fdt_string_eq_>
   1b858:	e1a03000 	mov	r3, r0
   1b85c:	e3530000 	cmp	r3, #0
   1b860:	0a000007 	beq	1b884 <fdt_get_property_namelen_+0xb0>
				   name, namelen)) {
			if (poffset)
   1b864:	e59b3008 	ldr	r3, [fp, #8]
   1b868:	e3530000 	cmp	r3, #0
   1b86c:	0a000002 	beq	1b87c <fdt_get_property_namelen_+0xa8>
				*poffset = offset;
   1b870:	e59b3008 	ldr	r3, [fp, #8]
   1b874:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1b878:	e5832000 	str	r2, [r3]
			return prop;
   1b87c:	e51b3008 	ldr	r3, [fp, #-8]
   1b880:	ea00000d 	b	1b8bc <fdt_get_property_namelen_+0xe8>
	     (offset = fdt_next_property_offset(fdt, offset))) {
   1b884:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b888:	e51b0010 	ldr	r0, [fp, #-16]
   1b88c:	ebffff76 	bl	1b66c <fdt_next_property_offset>
   1b890:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
	for (offset = fdt_first_property_offset(fdt, offset);
   1b894:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b898:	e3530000 	cmp	r3, #0
   1b89c:	aaffffd8 	bge	1b804 <fdt_get_property_namelen_+0x30>
		}
	}

	if (lenp)
   1b8a0:	e59b3004 	ldr	r3, [fp, #4]
   1b8a4:	e3530000 	cmp	r3, #0
   1b8a8:	0a000002 	beq	1b8b8 <fdt_get_property_namelen_+0xe4>
		*lenp = offset;
   1b8ac:	e59b3004 	ldr	r3, [fp, #4]
   1b8b0:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1b8b4:	e5832000 	str	r2, [r3]
	return NULL;
   1b8b8:	e3a03000 	mov	r3, #0
}
   1b8bc:	e1a00003 	mov	r0, r3
   1b8c0:	e24bd004 	sub	sp, fp, #4
   1b8c4:	e8bd8800 	pop	{fp, pc}

0001b8c8 <fdt_get_property_namelen>:

const struct fdt_property *fdt_get_property_namelen(const void *fdt,
						    int offset,
						    const char *name,
						    int namelen, int *lenp)
{
   1b8c8:	e92d4800 	push	{fp, lr}
   1b8cc:	e28db004 	add	fp, sp, #4
   1b8d0:	e24dd018 	sub	sp, sp, #24
   1b8d4:	e50b0008 	str	r0, [fp, #-8]
   1b8d8:	e50b100c 	str	r1, [fp, #-12]
   1b8dc:	e50b2010 	str	r2, [fp, #-16]
   1b8e0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	/* Prior to version 16, properties may need realignment
	 * and this API does not work. fdt_getprop_*() will, however. */
	if (fdt_version(fdt) < 0x10) {
   1b8e4:	e51b3008 	ldr	r3, [fp, #-8]
   1b8e8:	e2833014 	add	r3, r3, #20
   1b8ec:	e1a00003 	mov	r0, r3
   1b8f0:	ebfffc2a 	bl	1a9a0 <fdt32_ld>
   1b8f4:	e1a03000 	mov	r3, r0
   1b8f8:	e353000f 	cmp	r3, #15
   1b8fc:	8a000007 	bhi	1b920 <fdt_get_property_namelen+0x58>
		if (lenp)
   1b900:	e59b3004 	ldr	r3, [fp, #4]
   1b904:	e3530000 	cmp	r3, #0
   1b908:	0a000002 	beq	1b918 <fdt_get_property_namelen+0x50>
			*lenp = -FDT_ERR_BADVERSION;
   1b90c:	e59b3004 	ldr	r3, [fp, #4]
   1b910:	e3e02009 	mvn	r2, #9
   1b914:	e5832000 	str	r2, [r3]
		return NULL;
   1b918:	e3a03000 	mov	r3, #0
   1b91c:	ea000009 	b	1b948 <fdt_get_property_namelen+0x80>
	}

	return fdt_get_property_namelen_(fdt, offset, name, namelen, lenp,
   1b920:	e3a03000 	mov	r3, #0
   1b924:	e58d3004 	str	r3, [sp, #4]
   1b928:	e59b3004 	ldr	r3, [fp, #4]
   1b92c:	e58d3000 	str	r3, [sp]
   1b930:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b934:	e51b2010 	ldr	r2, [fp, #-16]
   1b938:	e51b100c 	ldr	r1, [fp, #-12]
   1b93c:	e51b0008 	ldr	r0, [fp, #-8]
   1b940:	ebffffa3 	bl	1b7d4 <fdt_get_property_namelen_>
   1b944:	e1a03000 	mov	r3, r0
					 NULL);
}
   1b948:	e1a00003 	mov	r0, r3
   1b94c:	e24bd004 	sub	sp, fp, #4
   1b950:	e8bd8800 	pop	{fp, pc}

0001b954 <fdt_get_property>:


const struct fdt_property *fdt_get_property(const void *fdt,
					    int nodeoffset,
					    const char *name, int *lenp)
{
   1b954:	e92d4800 	push	{fp, lr}
   1b958:	e28db004 	add	fp, sp, #4
   1b95c:	e24dd018 	sub	sp, sp, #24
   1b960:	e50b0008 	str	r0, [fp, #-8]
   1b964:	e50b100c 	str	r1, [fp, #-12]
   1b968:	e50b2010 	str	r2, [fp, #-16]
   1b96c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	return fdt_get_property_namelen(fdt, nodeoffset, name,
					strlen(name), lenp);
   1b970:	e51b0010 	ldr	r0, [fp, #-16]
   1b974:	eb001950 	bl	21ebc <strlen>
   1b978:	e1a03000 	mov	r3, r0
	return fdt_get_property_namelen(fdt, nodeoffset, name,
   1b97c:	e1a02003 	mov	r2, r3
   1b980:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1b984:	e58d3000 	str	r3, [sp]
   1b988:	e1a03002 	mov	r3, r2
   1b98c:	e51b2010 	ldr	r2, [fp, #-16]
   1b990:	e51b100c 	ldr	r1, [fp, #-12]
   1b994:	e51b0008 	ldr	r0, [fp, #-8]
   1b998:	ebffffca 	bl	1b8c8 <fdt_get_property_namelen>
   1b99c:	e1a03000 	mov	r3, r0
}
   1b9a0:	e1a00003 	mov	r0, r3
   1b9a4:	e24bd004 	sub	sp, fp, #4
   1b9a8:	e8bd8800 	pop	{fp, pc}

0001b9ac <fdt_getprop_namelen>:

const void *fdt_getprop_namelen(const void *fdt, int nodeoffset,
				const char *name, int namelen, int *lenp)
{
   1b9ac:	e92d4800 	push	{fp, lr}
   1b9b0:	e28db004 	add	fp, sp, #4
   1b9b4:	e24dd020 	sub	sp, sp, #32
   1b9b8:	e50b0010 	str	r0, [fp, #-16]
   1b9bc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1b9c0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
   1b9c4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	int poffset;
	const struct fdt_property *prop;

	prop = fdt_get_property_namelen_(fdt, nodeoffset, name, namelen, lenp,
   1b9c8:	e24b300c 	sub	r3, fp, #12
   1b9cc:	e58d3004 	str	r3, [sp, #4]
   1b9d0:	e59b3004 	ldr	r3, [fp, #4]
   1b9d4:	e58d3000 	str	r3, [sp]
   1b9d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b9dc:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b9e0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9e4:	e51b0010 	ldr	r0, [fp, #-16]
   1b9e8:	ebffff79 	bl	1b7d4 <fdt_get_property_namelen_>
   1b9ec:	e50b0008 	str	r0, [fp, #-8]
					 &poffset);
	if (!prop)
   1b9f0:	e51b3008 	ldr	r3, [fp, #-8]
   1b9f4:	e3530000 	cmp	r3, #0
   1b9f8:	1a000001 	bne	1ba04 <fdt_getprop_namelen+0x58>
		return NULL;
   1b9fc:	e3a03000 	mov	r3, #0
   1ba00:	ea000018 	b	1ba68 <fdt_getprop_namelen+0xbc>

	/* Handle realignment */
	if (fdt_version(fdt) < 0x10 && (poffset + sizeof(*prop)) % 8 &&
   1ba04:	e51b3010 	ldr	r3, [fp, #-16]
   1ba08:	e2833014 	add	r3, r3, #20
   1ba0c:	e1a00003 	mov	r0, r3
   1ba10:	ebfffbe2 	bl	1a9a0 <fdt32_ld>
   1ba14:	e1a03000 	mov	r3, r0
   1ba18:	e353000f 	cmp	r3, #15
   1ba1c:	8a00000f 	bhi	1ba60 <fdt_getprop_namelen+0xb4>
   1ba20:	e51b300c 	ldr	r3, [fp, #-12]
   1ba24:	e283300c 	add	r3, r3, #12
   1ba28:	e2033007 	and	r3, r3, #7
   1ba2c:	e3530000 	cmp	r3, #0
   1ba30:	0a00000a 	beq	1ba60 <fdt_getprop_namelen+0xb4>
	    fdt32_ld(&prop->len) >= 8)
   1ba34:	e51b3008 	ldr	r3, [fp, #-8]
   1ba38:	e2833004 	add	r3, r3, #4
   1ba3c:	e1a00003 	mov	r0, r3
   1ba40:	ebfffbd6 	bl	1a9a0 <fdt32_ld>
   1ba44:	e1a03000 	mov	r3, r0
	if (fdt_version(fdt) < 0x10 && (poffset + sizeof(*prop)) % 8 &&
   1ba48:	e3530007 	cmp	r3, #7
   1ba4c:	9a000003 	bls	1ba60 <fdt_getprop_namelen+0xb4>
		return prop->data + 4;
   1ba50:	e51b3008 	ldr	r3, [fp, #-8]
   1ba54:	e283300c 	add	r3, r3, #12
   1ba58:	e2833004 	add	r3, r3, #4
   1ba5c:	ea000001 	b	1ba68 <fdt_getprop_namelen+0xbc>
	return prop->data;
   1ba60:	e51b3008 	ldr	r3, [fp, #-8]
   1ba64:	e283300c 	add	r3, r3, #12
}
   1ba68:	e1a00003 	mov	r0, r3
   1ba6c:	e24bd004 	sub	sp, fp, #4
   1ba70:	e8bd8800 	pop	{fp, pc}

0001ba74 <fdt_getprop_by_offset>:

const void *fdt_getprop_by_offset(const void *fdt, int offset,
				  const char **namep, int *lenp)
{
   1ba74:	e92d4800 	push	{fp, lr}
   1ba78:	e28db004 	add	fp, sp, #4
   1ba7c:	e24dd020 	sub	sp, sp, #32
   1ba80:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1ba84:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1ba88:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   1ba8c:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
	const struct fdt_property *prop;

	prop = fdt_get_property_by_offset_(fdt, offset, lenp);
   1ba90:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ba94:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ba98:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba9c:	ebffff07 	bl	1b6c0 <fdt_get_property_by_offset_>
   1baa0:	e50b0008 	str	r0, [fp, #-8]
	if (!prop)
   1baa4:	e51b3008 	ldr	r3, [fp, #-8]
   1baa8:	e3530000 	cmp	r3, #0
   1baac:	1a000001 	bne	1bab8 <fdt_getprop_by_offset+0x44>
		return NULL;
   1bab0:	e3a03000 	mov	r3, #0
   1bab4:	ea000034 	b	1bb8c <fdt_getprop_by_offset+0x118>
	if (namep) {
   1bab8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1babc:	e3530000 	cmp	r3, #0
   1bac0:	0a000018 	beq	1bb28 <fdt_getprop_by_offset+0xb4>
		const char *name;
		int namelen;
		name = fdt_get_string(fdt, fdt32_ld(&prop->nameoff),
   1bac4:	e51b3008 	ldr	r3, [fp, #-8]
   1bac8:	e2833008 	add	r3, r3, #8
   1bacc:	e1a00003 	mov	r0, r3
   1bad0:	ebfffbb2 	bl	1a9a0 <fdt32_ld>
   1bad4:	e1a03000 	mov	r3, r0
   1bad8:	e1a01003 	mov	r1, r3
   1badc:	e24b3010 	sub	r3, fp, #16
   1bae0:	e1a02003 	mov	r2, r3
   1bae4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bae8:	ebfffc30 	bl	1abb0 <fdt_get_string>
   1baec:	e50b000c 	str	r0, [fp, #-12]
				      &namelen);
		if (!name) {
   1baf0:	e51b300c 	ldr	r3, [fp, #-12]
   1baf4:	e3530000 	cmp	r3, #0
   1baf8:	1a000007 	bne	1bb1c <fdt_getprop_by_offset+0xa8>
			if (lenp)
   1bafc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb00:	e3530000 	cmp	r3, #0
   1bb04:	0a000002 	beq	1bb14 <fdt_getprop_by_offset+0xa0>
				*lenp = namelen;
   1bb08:	e51b2010 	ldr	r2, [fp, #-16]
   1bb0c:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bb10:	e5832000 	str	r2, [r3]
			return NULL;
   1bb14:	e3a03000 	mov	r3, #0
   1bb18:	ea00001b 	b	1bb8c <fdt_getprop_by_offset+0x118>
		}
		*namep = name;
   1bb1c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bb20:	e51b200c 	ldr	r2, [fp, #-12]
   1bb24:	e5832000 	str	r2, [r3]
	}

	/* Handle realignment */
	if (fdt_version(fdt) < 0x10 && (offset + sizeof(*prop)) % 8 &&
   1bb28:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb2c:	e2833014 	add	r3, r3, #20
   1bb30:	e1a00003 	mov	r0, r3
   1bb34:	ebfffb99 	bl	1a9a0 <fdt32_ld>
   1bb38:	e1a03000 	mov	r3, r0
   1bb3c:	e353000f 	cmp	r3, #15
   1bb40:	8a00000f 	bhi	1bb84 <fdt_getprop_by_offset+0x110>
   1bb44:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb48:	e283300c 	add	r3, r3, #12
   1bb4c:	e2033007 	and	r3, r3, #7
   1bb50:	e3530000 	cmp	r3, #0
   1bb54:	0a00000a 	beq	1bb84 <fdt_getprop_by_offset+0x110>
	    fdt32_ld(&prop->len) >= 8)
   1bb58:	e51b3008 	ldr	r3, [fp, #-8]
   1bb5c:	e2833004 	add	r3, r3, #4
   1bb60:	e1a00003 	mov	r0, r3
   1bb64:	ebfffb8d 	bl	1a9a0 <fdt32_ld>
   1bb68:	e1a03000 	mov	r3, r0
	if (fdt_version(fdt) < 0x10 && (offset + sizeof(*prop)) % 8 &&
   1bb6c:	e3530007 	cmp	r3, #7
   1bb70:	9a000003 	bls	1bb84 <fdt_getprop_by_offset+0x110>
		return prop->data + 4;
   1bb74:	e51b3008 	ldr	r3, [fp, #-8]
   1bb78:	e283300c 	add	r3, r3, #12
   1bb7c:	e2833004 	add	r3, r3, #4
   1bb80:	ea000001 	b	1bb8c <fdt_getprop_by_offset+0x118>
	return prop->data;
   1bb84:	e51b3008 	ldr	r3, [fp, #-8]
   1bb88:	e283300c 	add	r3, r3, #12
}
   1bb8c:	e1a00003 	mov	r0, r3
   1bb90:	e24bd004 	sub	sp, fp, #4
   1bb94:	e8bd8800 	pop	{fp, pc}

0001bb98 <fdt_getprop>:

const void *fdt_getprop(const void *fdt, int nodeoffset,
			const char *name, int *lenp)
{
   1bb98:	e92d4800 	push	{fp, lr}
   1bb9c:	e28db004 	add	fp, sp, #4
   1bba0:	e24dd018 	sub	sp, sp, #24
   1bba4:	e50b0008 	str	r0, [fp, #-8]
   1bba8:	e50b100c 	str	r1, [fp, #-12]
   1bbac:	e50b2010 	str	r2, [fp, #-16]
   1bbb0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	return fdt_getprop_namelen(fdt, nodeoffset, name, strlen(name), lenp);
   1bbb4:	e51b0010 	ldr	r0, [fp, #-16]
   1bbb8:	eb0018bf 	bl	21ebc <strlen>
   1bbbc:	e1a03000 	mov	r3, r0
   1bbc0:	e1a02003 	mov	r2, r3
   1bbc4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1bbc8:	e58d3000 	str	r3, [sp]
   1bbcc:	e1a03002 	mov	r3, r2
   1bbd0:	e51b2010 	ldr	r2, [fp, #-16]
   1bbd4:	e51b100c 	ldr	r1, [fp, #-12]
   1bbd8:	e51b0008 	ldr	r0, [fp, #-8]
   1bbdc:	ebffff72 	bl	1b9ac <fdt_getprop_namelen>
   1bbe0:	e1a03000 	mov	r3, r0
}
   1bbe4:	e1a00003 	mov	r0, r3
   1bbe8:	e24bd004 	sub	sp, fp, #4
   1bbec:	e8bd8800 	pop	{fp, pc}

0001bbf0 <fdt_get_phandle>:

uint32_t fdt_get_phandle(const void *fdt, int nodeoffset)
{
   1bbf0:	e92d4800 	push	{fp, lr}
   1bbf4:	e28db004 	add	fp, sp, #4
   1bbf8:	e24dd010 	sub	sp, sp, #16
   1bbfc:	e50b0010 	str	r0, [fp, #-16]
   1bc00:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	const fdt32_t *php;
	int len;

	/* FIXME: This is a bit sub-optimal, since we potentially scan
	 * over all the properties twice. */
	php = fdt_getprop(fdt, nodeoffset, "phandle", &len);
   1bc04:	e24b300c 	sub	r3, fp, #12
   1bc08:	e3092b28 	movw	r2, #39720	; 0x9b28
   1bc0c:	e3402002 	movt	r2, #2
   1bc10:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc14:	e51b0010 	ldr	r0, [fp, #-16]
   1bc18:	ebffffde 	bl	1bb98 <fdt_getprop>
   1bc1c:	e50b0008 	str	r0, [fp, #-8]
	if (!php || (len != sizeof(*php))) {
   1bc20:	e51b3008 	ldr	r3, [fp, #-8]
   1bc24:	e3530000 	cmp	r3, #0
   1bc28:	0a000002 	beq	1bc38 <fdt_get_phandle+0x48>
   1bc2c:	e51b300c 	ldr	r3, [fp, #-12]
   1bc30:	e3530004 	cmp	r3, #4
   1bc34:	0a00000e 	beq	1bc74 <fdt_get_phandle+0x84>
		php = fdt_getprop(fdt, nodeoffset, "linux,phandle", &len);
   1bc38:	e24b300c 	sub	r3, fp, #12
   1bc3c:	e3092b30 	movw	r2, #39728	; 0x9b30
   1bc40:	e3402002 	movt	r2, #2
   1bc44:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc48:	e51b0010 	ldr	r0, [fp, #-16]
   1bc4c:	ebffffd1 	bl	1bb98 <fdt_getprop>
   1bc50:	e50b0008 	str	r0, [fp, #-8]
		if (!php || (len != sizeof(*php)))
   1bc54:	e51b3008 	ldr	r3, [fp, #-8]
   1bc58:	e3530000 	cmp	r3, #0
   1bc5c:	0a000002 	beq	1bc6c <fdt_get_phandle+0x7c>
   1bc60:	e51b300c 	ldr	r3, [fp, #-12]
   1bc64:	e3530004 	cmp	r3, #4
   1bc68:	0a000001 	beq	1bc74 <fdt_get_phandle+0x84>
			return 0;
   1bc6c:	e3a03000 	mov	r3, #0
   1bc70:	ea000002 	b	1bc80 <fdt_get_phandle+0x90>
	}

	return fdt32_ld(php);
   1bc74:	e51b0008 	ldr	r0, [fp, #-8]
   1bc78:	ebfffb48 	bl	1a9a0 <fdt32_ld>
   1bc7c:	e1a03000 	mov	r3, r0
}
   1bc80:	e1a00003 	mov	r0, r3
   1bc84:	e24bd004 	sub	sp, fp, #4
   1bc88:	e8bd8800 	pop	{fp, pc}

0001bc8c <fdt_get_alias_namelen>:

const char *fdt_get_alias_namelen(const void *fdt,
				  const char *name, int namelen)
{
   1bc8c:	e92d4800 	push	{fp, lr}
   1bc90:	e28db004 	add	fp, sp, #4
   1bc94:	e24dd020 	sub	sp, sp, #32
   1bc98:	e50b0010 	str	r0, [fp, #-16]
   1bc9c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1bca0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	int aliasoffset;

	aliasoffset = fdt_path_offset(fdt, "/aliases");
   1bca4:	e3091b40 	movw	r1, #39744	; 0x9b40
   1bca8:	e3401002 	movt	r1, #2
   1bcac:	e51b0010 	ldr	r0, [fp, #-16]
   1bcb0:	ebfffe04 	bl	1b4c8 <fdt_path_offset>
   1bcb4:	e50b0008 	str	r0, [fp, #-8]
	if (aliasoffset < 0)
   1bcb8:	e51b3008 	ldr	r3, [fp, #-8]
   1bcbc:	e3530000 	cmp	r3, #0
   1bcc0:	aa000001 	bge	1bccc <fdt_get_alias_namelen+0x40>
		return NULL;
   1bcc4:	e3a03000 	mov	r3, #0
   1bcc8:	ea000007 	b	1bcec <fdt_get_alias_namelen+0x60>

	return fdt_getprop_namelen(fdt, aliasoffset, name, namelen, NULL);
   1bccc:	e3a03000 	mov	r3, #0
   1bcd0:	e58d3000 	str	r3, [sp]
   1bcd4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcd8:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1bcdc:	e51b1008 	ldr	r1, [fp, #-8]
   1bce0:	e51b0010 	ldr	r0, [fp, #-16]
   1bce4:	ebffff30 	bl	1b9ac <fdt_getprop_namelen>
   1bce8:	e1a03000 	mov	r3, r0
}
   1bcec:	e1a00003 	mov	r0, r3
   1bcf0:	e24bd004 	sub	sp, fp, #4
   1bcf4:	e8bd8800 	pop	{fp, pc}

0001bcf8 <fdt_get_alias>:

const char *fdt_get_alias(const void *fdt, const char *name)
{
   1bcf8:	e92d4800 	push	{fp, lr}
   1bcfc:	e28db004 	add	fp, sp, #4
   1bd00:	e24dd008 	sub	sp, sp, #8
   1bd04:	e50b0008 	str	r0, [fp, #-8]
   1bd08:	e50b100c 	str	r1, [fp, #-12]
	return fdt_get_alias_namelen(fdt, name, strlen(name));
   1bd0c:	e51b000c 	ldr	r0, [fp, #-12]
   1bd10:	eb001869 	bl	21ebc <strlen>
   1bd14:	e1a03000 	mov	r3, r0
   1bd18:	e1a02003 	mov	r2, r3
   1bd1c:	e51b100c 	ldr	r1, [fp, #-12]
   1bd20:	e51b0008 	ldr	r0, [fp, #-8]
   1bd24:	ebffffd8 	bl	1bc8c <fdt_get_alias_namelen>
   1bd28:	e1a03000 	mov	r3, r0
}
   1bd2c:	e1a00003 	mov	r0, r3
   1bd30:	e24bd004 	sub	sp, fp, #4
   1bd34:	e8bd8800 	pop	{fp, pc}

0001bd38 <fdt_get_path>:

int fdt_get_path(const void *fdt, int nodeoffset, char *buf, int buflen)
{
   1bd38:	e92d4800 	push	{fp, lr}
   1bd3c:	e28db004 	add	fp, sp, #4
   1bd40:	e24dd030 	sub	sp, sp, #48	; 0x30
   1bd44:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   1bd48:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
   1bd4c:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
   1bd50:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
	int pdepth = 0, p = 0;
   1bd54:	e3a03000 	mov	r3, #0
   1bd58:	e50b3008 	str	r3, [fp, #-8]
   1bd5c:	e3a03000 	mov	r3, #0
   1bd60:	e50b300c 	str	r3, [fp, #-12]
	int offset, depth, namelen;
	const char *name;

	FDT_RO_PROBE(fdt);
   1bd64:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bd68:	eb00038b 	bl	1cb9c <fdt_ro_probe_>
   1bd6c:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
   1bd70:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd74:	e3530000 	cmp	r3, #0
   1bd78:	0a000001 	beq	1bd84 <fdt_get_path+0x4c>
   1bd7c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd80:	ea000077 	b	1bf64 <fdt_get_path+0x22c>

	if (buflen < 2)
   1bd84:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bd88:	e3530001 	cmp	r3, #1
   1bd8c:	ca000001 	bgt	1bd98 <fdt_get_path+0x60>
		return -FDT_ERR_NOSPACE;
   1bd90:	e3e03002 	mvn	r3, #2
   1bd94:	ea000072 	b	1bf64 <fdt_get_path+0x22c>

	for (offset = 0, depth = 0;
   1bd98:	e3a03000 	mov	r3, #0
   1bd9c:	e50b3010 	str	r3, [fp, #-16]
   1bda0:	e3a03000 	mov	r3, #0
   1bda4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
   1bda8:	ea000058 	b	1bf10 <fdt_get_path+0x1d8>
	     (offset >= 0) && (offset <= nodeoffset);
	     offset = fdt_next_node(fdt, offset, &depth)) {
		while (pdepth > depth) {
			do {
				p--;
   1bdac:	e51b300c 	ldr	r3, [fp, #-12]
   1bdb0:	e2433001 	sub	r3, r3, #1
   1bdb4:	e50b300c 	str	r3, [fp, #-12]
			} while (buf[p-1] != '/');
   1bdb8:	e51b300c 	ldr	r3, [fp, #-12]
   1bdbc:	e2433001 	sub	r3, r3, #1
   1bdc0:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bdc4:	e0823003 	add	r3, r2, r3
   1bdc8:	e5d33000 	ldrb	r3, [r3]
   1bdcc:	e353002f 	cmp	r3, #47	; 0x2f
   1bdd0:	1afffff5 	bne	1bdac <fdt_get_path+0x74>
			pdepth--;
   1bdd4:	e51b3008 	ldr	r3, [fp, #-8]
   1bdd8:	e2433001 	sub	r3, r3, #1
   1bddc:	e50b3008 	str	r3, [fp, #-8]
		while (pdepth > depth) {
   1bde0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bde4:	e51b2008 	ldr	r2, [fp, #-8]
   1bde8:	e1520003 	cmp	r2, r3
   1bdec:	caffffee 	bgt	1bdac <fdt_get_path+0x74>
		}

		if (pdepth >= depth) {
   1bdf0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bdf4:	e51b2008 	ldr	r2, [fp, #-8]
   1bdf8:	e1520003 	cmp	r2, r3
   1bdfc:	ba000026 	blt	1be9c <fdt_get_path+0x164>
			name = fdt_get_name(fdt, offset, &namelen);
   1be00:	e24b3020 	sub	r3, fp, #32
   1be04:	e1a02003 	mov	r2, r3
   1be08:	e51b1010 	ldr	r1, [fp, #-16]
   1be0c:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1be10:	ebfffdbc 	bl	1b508 <fdt_get_name>
   1be14:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
			if (!name)
   1be18:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be1c:	e3530000 	cmp	r3, #0
   1be20:	1a000001 	bne	1be2c <fdt_get_path+0xf4>
				return namelen;
   1be24:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be28:	ea00004d 	b	1bf64 <fdt_get_path+0x22c>
			if ((p + namelen + 1) <= buflen) {
   1be2c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1be30:	e51b300c 	ldr	r3, [fp, #-12]
   1be34:	e0823003 	add	r3, r2, r3
   1be38:	e51b2034 	ldr	r2, [fp, #-52]	; 0xffffffcc
   1be3c:	e1520003 	cmp	r2, r3
   1be40:	da000015 	ble	1be9c <fdt_get_path+0x164>
				memcpy(buf + p, name, namelen);
   1be44:	e51b300c 	ldr	r3, [fp, #-12]
   1be48:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
   1be4c:	e0823003 	add	r3, r2, r3
   1be50:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1be54:	e51b1018 	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be58:	e1a00003 	mov	r0, r3
   1be5c:	eb001658 	bl	217c4 <memcpy>
				p += namelen;
   1be60:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be64:	e51b200c 	ldr	r2, [fp, #-12]
   1be68:	e0823003 	add	r3, r2, r3
   1be6c:	e50b300c 	str	r3, [fp, #-12]
				buf[p++] = '/';
   1be70:	e51b300c 	ldr	r3, [fp, #-12]
   1be74:	e2832001 	add	r2, r3, #1
   1be78:	e50b200c 	str	r2, [fp, #-12]
   1be7c:	e1a02003 	mov	r2, r3
   1be80:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   1be84:	e0833002 	add	r3, r3, r2
   1be88:	e3a0202f 	mov	r2, #47	; 0x2f
   1be8c:	e5c32000 	strb	r2, [r3]
				pdepth++;
   1be90:	e51b3008 	ldr	r3, [fp, #-8]
   1be94:	e2833001 	add	r3, r3, #1
   1be98:	e50b3008 	str	r3, [fp, #-8]
			}
		}

		if (offset == nodeoffset) {
   1be9c:	e51b2010 	ldr	r2, [fp, #-16]
   1bea0:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bea4:	e1520003 	cmp	r2, r3
   1bea8:	1a000012 	bne	1bef8 <fdt_get_path+0x1c0>
			if (pdepth < (depth + 1))
   1beac:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1beb0:	e51b2008 	ldr	r2, [fp, #-8]
   1beb4:	e1520003 	cmp	r2, r3
   1beb8:	ca000001 	bgt	1bec4 <fdt_get_path+0x18c>
				return -FDT_ERR_NOSPACE;
   1bebc:	e3e03002 	mvn	r3, #2
   1bec0:	ea000027 	b	1bf64 <fdt_get_path+0x22c>

			if (p > 1) /* special case so that root path is "/", not "" */
   1bec4:	e51b300c 	ldr	r3, [fp, #-12]
   1bec8:	e3530001 	cmp	r3, #1
   1becc:	da000002 	ble	1bedc <fdt_get_path+0x1a4>
				p--;
   1bed0:	e51b300c 	ldr	r3, [fp, #-12]
   1bed4:	e2433001 	sub	r3, r3, #1
   1bed8:	e50b300c 	str	r3, [fp, #-12]
			buf[p] = '\0';
   1bedc:	e51b300c 	ldr	r3, [fp, #-12]
   1bee0:	e51b2030 	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bee4:	e0823003 	add	r3, r2, r3
   1bee8:	e3a02000 	mov	r2, #0
   1beec:	e5c32000 	strb	r2, [r3]
			return 0;
   1bef0:	e3a03000 	mov	r3, #0
   1bef4:	ea00001a 	b	1bf64 <fdt_get_path+0x22c>
	     offset = fdt_next_node(fdt, offset, &depth)) {
   1bef8:	e24b301c 	sub	r3, fp, #28
   1befc:	e1a02003 	mov	r2, r3
   1bf00:	e51b1010 	ldr	r1, [fp, #-16]
   1bf04:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bf08:	eb000559 	bl	1d474 <fdt_next_node>
   1bf0c:	e50b0010 	str	r0, [fp, #-16]
	for (offset = 0, depth = 0;
   1bf10:	e51b3010 	ldr	r3, [fp, #-16]
   1bf14:	e3530000 	cmp	r3, #0
   1bf18:	ba000003 	blt	1bf2c <fdt_get_path+0x1f4>
	     (offset >= 0) && (offset <= nodeoffset);
   1bf1c:	e51b2010 	ldr	r2, [fp, #-16]
   1bf20:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bf24:	e1520003 	cmp	r2, r3
   1bf28:	daffffac 	ble	1bde0 <fdt_get_path+0xa8>
		}
	}

	if ((offset == -FDT_ERR_NOTFOUND) || (offset >= 0))
   1bf2c:	e51b3010 	ldr	r3, [fp, #-16]
   1bf30:	e3730001 	cmn	r3, #1
   1bf34:	0a000002 	beq	1bf44 <fdt_get_path+0x20c>
   1bf38:	e51b3010 	ldr	r3, [fp, #-16]
   1bf3c:	e3530000 	cmp	r3, #0
   1bf40:	ba000001 	blt	1bf4c <fdt_get_path+0x214>
		return -FDT_ERR_BADOFFSET;
   1bf44:	e3e03003 	mvn	r3, #3
   1bf48:	ea000005 	b	1bf64 <fdt_get_path+0x22c>
	else if (offset == -FDT_ERR_BADOFFSET)
   1bf4c:	e51b3010 	ldr	r3, [fp, #-16]
   1bf50:	e3730004 	cmn	r3, #4
   1bf54:	1a000001 	bne	1bf60 <fdt_get_path+0x228>
		return -FDT_ERR_BADSTRUCTURE;
   1bf58:	e3e0300a 	mvn	r3, #10
   1bf5c:	ea000000 	b	1bf64 <fdt_get_path+0x22c>

	return offset; /* error from fdt_next_node() */
   1bf60:	e51b3010 	ldr	r3, [fp, #-16]
}
   1bf64:	e1a00003 	mov	r0, r3
   1bf68:	e24bd004 	sub	sp, fp, #4
   1bf6c:	e8bd8800 	pop	{fp, pc}

0001bf70 <fdt_supernode_atdepth_offset>:

int fdt_supernode_atdepth_offset(const void *fdt, int nodeoffset,
				 int supernodedepth, int *nodedepth)
{
   1bf70:	e92d4800 	push	{fp, lr}
   1bf74:	e28db004 	add	fp, sp, #4
   1bf78:	e24dd020 	sub	sp, sp, #32
   1bf7c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1bf80:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1bf84:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   1bf88:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
	int offset, depth;
	int supernodeoffset = -FDT_ERR_INTERNAL;
   1bf8c:	e3e0300c 	mvn	r3, #12
   1bf90:	e50b300c 	str	r3, [fp, #-12]

	FDT_RO_PROBE(fdt);
   1bf94:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf98:	eb0002ff 	bl	1cb9c <fdt_ro_probe_>
   1bf9c:	e50b0010 	str	r0, [fp, #-16]
   1bfa0:	e51b3010 	ldr	r3, [fp, #-16]
   1bfa4:	e3530000 	cmp	r3, #0
   1bfa8:	0a000001 	beq	1bfb4 <fdt_supernode_atdepth_offset+0x44>
   1bfac:	e51b3010 	ldr	r3, [fp, #-16]
   1bfb0:	ea00003c 	b	1c0a8 <fdt_supernode_atdepth_offset+0x138>

	if (supernodedepth < 0)
   1bfb4:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bfb8:	e3530000 	cmp	r3, #0
   1bfbc:	aa000001 	bge	1bfc8 <fdt_supernode_atdepth_offset+0x58>
		return -FDT_ERR_NOTFOUND;
   1bfc0:	e3e03000 	mvn	r3, #0
   1bfc4:	ea000037 	b	1c0a8 <fdt_supernode_atdepth_offset+0x138>

	for (offset = 0, depth = 0;
   1bfc8:	e3a03000 	mov	r3, #0
   1bfcc:	e50b3008 	str	r3, [fp, #-8]
   1bfd0:	e3a03000 	mov	r3, #0
   1bfd4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
   1bfd8:	ea00001d 	b	1c054 <fdt_supernode_atdepth_offset+0xe4>
	     (offset >= 0) && (offset <= nodeoffset);
	     offset = fdt_next_node(fdt, offset, &depth)) {
		if (depth == supernodedepth)
   1bfdc:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1bfe0:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bfe4:	e1520003 	cmp	r2, r3
   1bfe8:	1a000001 	bne	1bff4 <fdt_supernode_atdepth_offset+0x84>
			supernodeoffset = offset;
   1bfec:	e51b3008 	ldr	r3, [fp, #-8]
   1bff0:	e50b300c 	str	r3, [fp, #-12]

		if (offset == nodeoffset) {
   1bff4:	e51b2008 	ldr	r2, [fp, #-8]
   1bff8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bffc:	e1520003 	cmp	r2, r3
   1c000:	1a00000d 	bne	1c03c <fdt_supernode_atdepth_offset+0xcc>
			if (nodedepth)
   1c004:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c008:	e3530000 	cmp	r3, #0
   1c00c:	0a000002 	beq	1c01c <fdt_supernode_atdepth_offset+0xac>
				*nodedepth = depth;
   1c010:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1c014:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c018:	e5832000 	str	r2, [r3]

			if (supernodedepth > depth)
   1c01c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c020:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c024:	e1520003 	cmp	r2, r3
   1c028:	da000001 	ble	1c034 <fdt_supernode_atdepth_offset+0xc4>
				return -FDT_ERR_NOTFOUND;
   1c02c:	e3e03000 	mvn	r3, #0
   1c030:	ea00001c 	b	1c0a8 <fdt_supernode_atdepth_offset+0x138>
			else
				return supernodeoffset;
   1c034:	e51b300c 	ldr	r3, [fp, #-12]
   1c038:	ea00001a 	b	1c0a8 <fdt_supernode_atdepth_offset+0x138>
	     offset = fdt_next_node(fdt, offset, &depth)) {
   1c03c:	e24b3014 	sub	r3, fp, #20
   1c040:	e1a02003 	mov	r2, r3
   1c044:	e51b1008 	ldr	r1, [fp, #-8]
   1c048:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c04c:	eb000508 	bl	1d474 <fdt_next_node>
   1c050:	e50b0008 	str	r0, [fp, #-8]
	for (offset = 0, depth = 0;
   1c054:	e51b3008 	ldr	r3, [fp, #-8]
   1c058:	e3530000 	cmp	r3, #0
   1c05c:	ba000003 	blt	1c070 <fdt_supernode_atdepth_offset+0x100>
	     (offset >= 0) && (offset <= nodeoffset);
   1c060:	e51b2008 	ldr	r2, [fp, #-8]
   1c064:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c068:	e1520003 	cmp	r2, r3
   1c06c:	daffffda 	ble	1bfdc <fdt_supernode_atdepth_offset+0x6c>
		}
	}

	if ((offset == -FDT_ERR_NOTFOUND) || (offset >= 0))
   1c070:	e51b3008 	ldr	r3, [fp, #-8]
   1c074:	e3730001 	cmn	r3, #1
   1c078:	0a000002 	beq	1c088 <fdt_supernode_atdepth_offset+0x118>
   1c07c:	e51b3008 	ldr	r3, [fp, #-8]
   1c080:	e3530000 	cmp	r3, #0
   1c084:	ba000001 	blt	1c090 <fdt_supernode_atdepth_offset+0x120>
		return -FDT_ERR_BADOFFSET;
   1c088:	e3e03003 	mvn	r3, #3
   1c08c:	ea000005 	b	1c0a8 <fdt_supernode_atdepth_offset+0x138>
	else if (offset == -FDT_ERR_BADOFFSET)
   1c090:	e51b3008 	ldr	r3, [fp, #-8]
   1c094:	e3730004 	cmn	r3, #4
   1c098:	1a000001 	bne	1c0a4 <fdt_supernode_atdepth_offset+0x134>
		return -FDT_ERR_BADSTRUCTURE;
   1c09c:	e3e0300a 	mvn	r3, #10
   1c0a0:	ea000000 	b	1c0a8 <fdt_supernode_atdepth_offset+0x138>

	return offset; /* error from fdt_next_node() */
   1c0a4:	e51b3008 	ldr	r3, [fp, #-8]
}
   1c0a8:	e1a00003 	mov	r0, r3
   1c0ac:	e24bd004 	sub	sp, fp, #4
   1c0b0:	e8bd8800 	pop	{fp, pc}

0001c0b4 <fdt_node_depth>:

int fdt_node_depth(const void *fdt, int nodeoffset)
{
   1c0b4:	e92d4800 	push	{fp, lr}
   1c0b8:	e28db004 	add	fp, sp, #4
   1c0bc:	e24dd010 	sub	sp, sp, #16
   1c0c0:	e50b0010 	str	r0, [fp, #-16]
   1c0c4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int nodedepth;
	int err;

	err = fdt_supernode_atdepth_offset(fdt, nodeoffset, 0, &nodedepth);
   1c0c8:	e24b300c 	sub	r3, fp, #12
   1c0cc:	e3a02000 	mov	r2, #0
   1c0d0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1c0d4:	e51b0010 	ldr	r0, [fp, #-16]
   1c0d8:	ebffffa4 	bl	1bf70 <fdt_supernode_atdepth_offset>
   1c0dc:	e50b0008 	str	r0, [fp, #-8]
	if (err)
   1c0e0:	e51b3008 	ldr	r3, [fp, #-8]
   1c0e4:	e3530000 	cmp	r3, #0
   1c0e8:	0a000006 	beq	1c108 <fdt_node_depth+0x54>
		return (err < 0) ? err : -FDT_ERR_INTERNAL;
   1c0ec:	e51b3008 	ldr	r3, [fp, #-8]
   1c0f0:	e3530000 	cmp	r3, #0
   1c0f4:	aa000001 	bge	1c100 <fdt_node_depth+0x4c>
   1c0f8:	e51b3008 	ldr	r3, [fp, #-8]
   1c0fc:	ea000002 	b	1c10c <fdt_node_depth+0x58>
   1c100:	e3e0300c 	mvn	r3, #12
   1c104:	ea000000 	b	1c10c <fdt_node_depth+0x58>
	return nodedepth;
   1c108:	e51b300c 	ldr	r3, [fp, #-12]
}
   1c10c:	e1a00003 	mov	r0, r3
   1c110:	e24bd004 	sub	sp, fp, #4
   1c114:	e8bd8800 	pop	{fp, pc}

0001c118 <fdt_parent_offset>:

int fdt_parent_offset(const void *fdt, int nodeoffset)
{
   1c118:	e92d4800 	push	{fp, lr}
   1c11c:	e28db004 	add	fp, sp, #4
   1c120:	e24dd010 	sub	sp, sp, #16
   1c124:	e50b0010 	str	r0, [fp, #-16]
   1c128:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int nodedepth = fdt_node_depth(fdt, nodeoffset);
   1c12c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1c130:	e51b0010 	ldr	r0, [fp, #-16]
   1c134:	ebffffde 	bl	1c0b4 <fdt_node_depth>
   1c138:	e50b0008 	str	r0, [fp, #-8]

	if (nodedepth < 0)
   1c13c:	e51b3008 	ldr	r3, [fp, #-8]
   1c140:	e3530000 	cmp	r3, #0
   1c144:	aa000001 	bge	1c150 <fdt_parent_offset+0x38>
		return nodedepth;
   1c148:	e51b3008 	ldr	r3, [fp, #-8]
   1c14c:	ea000006 	b	1c16c <fdt_parent_offset+0x54>
	return fdt_supernode_atdepth_offset(fdt, nodeoffset,
   1c150:	e51b3008 	ldr	r3, [fp, #-8]
   1c154:	e2432001 	sub	r2, r3, #1
   1c158:	e3a03000 	mov	r3, #0
   1c15c:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1c160:	e51b0010 	ldr	r0, [fp, #-16]
   1c164:	ebffff81 	bl	1bf70 <fdt_supernode_atdepth_offset>
   1c168:	e1a03000 	mov	r3, r0
					    nodedepth - 1, NULL);
}
   1c16c:	e1a00003 	mov	r0, r3
   1c170:	e24bd004 	sub	sp, fp, #4
   1c174:	e8bd8800 	pop	{fp, pc}

0001c178 <fdt_node_offset_by_prop_value>:

int fdt_node_offset_by_prop_value(const void *fdt, int startoffset,
				  const char *propname,
				  const void *propval, int proplen)
{
   1c178:	e92d4800 	push	{fp, lr}
   1c17c:	e28db004 	add	fp, sp, #4
   1c180:	e24dd020 	sub	sp, sp, #32
   1c184:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1c188:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1c18c:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   1c190:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
	int offset;
	const void *val;
	int len;

	FDT_RO_PROBE(fdt);
   1c194:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c198:	eb00027f 	bl	1cb9c <fdt_ro_probe_>
   1c19c:	e50b000c 	str	r0, [fp, #-12]
   1c1a0:	e51b300c 	ldr	r3, [fp, #-12]
   1c1a4:	e3530000 	cmp	r3, #0
   1c1a8:	0a000001 	beq	1c1b4 <fdt_node_offset_by_prop_value+0x3c>
   1c1ac:	e51b300c 	ldr	r3, [fp, #-12]
   1c1b0:	ea000025 	b	1c24c <fdt_node_offset_by_prop_value+0xd4>
	/* FIXME: The algorithm here is pretty horrible: we scan each
	 * property of a node in fdt_getprop(), then if that didn't
	 * find what we want, we scan over them again making our way
	 * to the next node.  Still it's the easiest to implement
	 * approach; performance can come later. */
	for (offset = fdt_next_node(fdt, startoffset, NULL);
   1c1b4:	e3a02000 	mov	r2, #0
   1c1b8:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c1bc:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1c0:	eb0004ab 	bl	1d474 <fdt_next_node>
   1c1c4:	e50b0008 	str	r0, [fp, #-8]
   1c1c8:	ea00001b 	b	1c23c <fdt_node_offset_by_prop_value+0xc4>
	     offset >= 0;
	     offset = fdt_next_node(fdt, offset, NULL)) {
		val = fdt_getprop(fdt, offset, propname, &len);
   1c1cc:	e24b3014 	sub	r3, fp, #20
   1c1d0:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c1d4:	e51b1008 	ldr	r1, [fp, #-8]
   1c1d8:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1dc:	ebfffe6d 	bl	1bb98 <fdt_getprop>
   1c1e0:	e50b0010 	str	r0, [fp, #-16]
		if (val && (len == proplen)
   1c1e4:	e51b3010 	ldr	r3, [fp, #-16]
   1c1e8:	e3530000 	cmp	r3, #0
   1c1ec:	0a00000d 	beq	1c228 <fdt_node_offset_by_prop_value+0xb0>
   1c1f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c1f4:	e59b2004 	ldr	r2, [fp, #4]
   1c1f8:	e1520003 	cmp	r2, r3
   1c1fc:	1a000009 	bne	1c228 <fdt_node_offset_by_prop_value+0xb0>
		    && (memcmp(val, propval, len) == 0))
   1c200:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c204:	e1a02003 	mov	r2, r3
   1c208:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c20c:	e51b0010 	ldr	r0, [fp, #-16]
   1c210:	eb00165a 	bl	21b80 <memcmp>
   1c214:	e1a03000 	mov	r3, r0
   1c218:	e3530000 	cmp	r3, #0
   1c21c:	1a000001 	bne	1c228 <fdt_node_offset_by_prop_value+0xb0>
			return offset;
   1c220:	e51b3008 	ldr	r3, [fp, #-8]
   1c224:	ea000008 	b	1c24c <fdt_node_offset_by_prop_value+0xd4>
	     offset = fdt_next_node(fdt, offset, NULL)) {
   1c228:	e3a02000 	mov	r2, #0
   1c22c:	e51b1008 	ldr	r1, [fp, #-8]
   1c230:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c234:	eb00048e 	bl	1d474 <fdt_next_node>
   1c238:	e50b0008 	str	r0, [fp, #-8]
	for (offset = fdt_next_node(fdt, startoffset, NULL);
   1c23c:	e51b3008 	ldr	r3, [fp, #-8]
   1c240:	e3530000 	cmp	r3, #0
   1c244:	aaffffe0 	bge	1c1cc <fdt_node_offset_by_prop_value+0x54>
	}

	return offset; /* error from fdt_next_node() */
   1c248:	e51b3008 	ldr	r3, [fp, #-8]
}
   1c24c:	e1a00003 	mov	r0, r3
   1c250:	e24bd004 	sub	sp, fp, #4
   1c254:	e8bd8800 	pop	{fp, pc}

0001c258 <fdt_node_offset_by_phandle>:

int fdt_node_offset_by_phandle(const void *fdt, uint32_t phandle)
{
   1c258:	e92d4800 	push	{fp, lr}
   1c25c:	e28db004 	add	fp, sp, #4
   1c260:	e24dd010 	sub	sp, sp, #16
   1c264:	e50b0010 	str	r0, [fp, #-16]
   1c268:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int offset;

	if ((phandle == 0) || (phandle == -1))
   1c26c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c270:	e3530000 	cmp	r3, #0
   1c274:	0a000002 	beq	1c284 <fdt_node_offset_by_phandle+0x2c>
   1c278:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c27c:	e3730001 	cmn	r3, #1
   1c280:	1a000001 	bne	1c28c <fdt_node_offset_by_phandle+0x34>
		return -FDT_ERR_BADPHANDLE;
   1c284:	e3e03005 	mvn	r3, #5
   1c288:	ea00001f 	b	1c30c <fdt_node_offset_by_phandle+0xb4>

	FDT_RO_PROBE(fdt);
   1c28c:	e51b0010 	ldr	r0, [fp, #-16]
   1c290:	eb000241 	bl	1cb9c <fdt_ro_probe_>
   1c294:	e50b000c 	str	r0, [fp, #-12]
   1c298:	e51b300c 	ldr	r3, [fp, #-12]
   1c29c:	e3530000 	cmp	r3, #0
   1c2a0:	0a000001 	beq	1c2ac <fdt_node_offset_by_phandle+0x54>
   1c2a4:	e51b300c 	ldr	r3, [fp, #-12]
   1c2a8:	ea000017 	b	1c30c <fdt_node_offset_by_phandle+0xb4>
	 * potentially scan each property of a node in
	 * fdt_get_phandle(), then if that didn't find what
	 * we want, we scan over them again making our way to the next
	 * node.  Still it's the easiest to implement approach;
	 * performance can come later. */
	for (offset = fdt_next_node(fdt, -1, NULL);
   1c2ac:	e3a02000 	mov	r2, #0
   1c2b0:	e3e01000 	mvn	r1, #0
   1c2b4:	e51b0010 	ldr	r0, [fp, #-16]
   1c2b8:	eb00046d 	bl	1d474 <fdt_next_node>
   1c2bc:	e50b0008 	str	r0, [fp, #-8]
   1c2c0:	ea00000d 	b	1c2fc <fdt_node_offset_by_phandle+0xa4>
	     offset >= 0;
	     offset = fdt_next_node(fdt, offset, NULL)) {
		if (fdt_get_phandle(fdt, offset) == phandle)
   1c2c4:	e51b1008 	ldr	r1, [fp, #-8]
   1c2c8:	e51b0010 	ldr	r0, [fp, #-16]
   1c2cc:	ebfffe47 	bl	1bbf0 <fdt_get_phandle>
   1c2d0:	e1a02000 	mov	r2, r0
   1c2d4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c2d8:	e1530002 	cmp	r3, r2
   1c2dc:	1a000001 	bne	1c2e8 <fdt_node_offset_by_phandle+0x90>
			return offset;
   1c2e0:	e51b3008 	ldr	r3, [fp, #-8]
   1c2e4:	ea000008 	b	1c30c <fdt_node_offset_by_phandle+0xb4>
	     offset = fdt_next_node(fdt, offset, NULL)) {
   1c2e8:	e3a02000 	mov	r2, #0
   1c2ec:	e51b1008 	ldr	r1, [fp, #-8]
   1c2f0:	e51b0010 	ldr	r0, [fp, #-16]
   1c2f4:	eb00045e 	bl	1d474 <fdt_next_node>
   1c2f8:	e50b0008 	str	r0, [fp, #-8]
	for (offset = fdt_next_node(fdt, -1, NULL);
   1c2fc:	e51b3008 	ldr	r3, [fp, #-8]
   1c300:	e3530000 	cmp	r3, #0
   1c304:	aaffffee 	bge	1c2c4 <fdt_node_offset_by_phandle+0x6c>
	}

	return offset; /* error from fdt_next_node() */
   1c308:	e51b3008 	ldr	r3, [fp, #-8]
}
   1c30c:	e1a00003 	mov	r0, r3
   1c310:	e24bd004 	sub	sp, fp, #4
   1c314:	e8bd8800 	pop	{fp, pc}

0001c318 <fdt_stringlist_contains>:

int fdt_stringlist_contains(const char *strlist, int listlen, const char *str)
{
   1c318:	e92d4800 	push	{fp, lr}
   1c31c:	e28db004 	add	fp, sp, #4
   1c320:	e24dd018 	sub	sp, sp, #24
   1c324:	e50b0010 	str	r0, [fp, #-16]
   1c328:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1c32c:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	int len = strlen(str);
   1c330:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c334:	eb0016e0 	bl	21ebc <strlen>
   1c338:	e1a03000 	mov	r3, r0
   1c33c:	e50b3008 	str	r3, [fp, #-8]
	const char *p;

	while (listlen >= len) {
   1c340:	ea00001f 	b	1c3c4 <fdt_stringlist_contains+0xac>
		if (memcmp(str, strlist, len+1) == 0)
   1c344:	e51b3008 	ldr	r3, [fp, #-8]
   1c348:	e2833001 	add	r3, r3, #1
   1c34c:	e1a02003 	mov	r2, r3
   1c350:	e51b1010 	ldr	r1, [fp, #-16]
   1c354:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c358:	eb001608 	bl	21b80 <memcmp>
   1c35c:	e1a03000 	mov	r3, r0
   1c360:	e3530000 	cmp	r3, #0
   1c364:	1a000001 	bne	1c370 <fdt_stringlist_contains+0x58>
			return 1;
   1c368:	e3a03001 	mov	r3, #1
   1c36c:	ea000019 	b	1c3d8 <fdt_stringlist_contains+0xc0>
		p = memchr(strlist, '\0', listlen);
   1c370:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c374:	e1a02003 	mov	r2, r3
   1c378:	e3a01000 	mov	r1, #0
   1c37c:	e51b0010 	ldr	r0, [fp, #-16]
   1c380:	eb0015ce 	bl	21ac0 <memchr>
   1c384:	e50b000c 	str	r0, [fp, #-12]
		if (!p)
   1c388:	e51b300c 	ldr	r3, [fp, #-12]
   1c38c:	e3530000 	cmp	r3, #0
   1c390:	1a000001 	bne	1c39c <fdt_stringlist_contains+0x84>
			return 0; /* malformed strlist.. */
   1c394:	e3a03000 	mov	r3, #0
   1c398:	ea00000e 	b	1c3d8 <fdt_stringlist_contains+0xc0>
		listlen -= (p-strlist) + 1;
   1c39c:	e51b200c 	ldr	r2, [fp, #-12]
   1c3a0:	e51b3010 	ldr	r3, [fp, #-16]
   1c3a4:	e0423003 	sub	r3, r2, r3
   1c3a8:	e2833001 	add	r3, r3, #1
   1c3ac:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1c3b0:	e0423003 	sub	r3, r2, r3
   1c3b4:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
		strlist = p + 1;
   1c3b8:	e51b300c 	ldr	r3, [fp, #-12]
   1c3bc:	e2833001 	add	r3, r3, #1
   1c3c0:	e50b3010 	str	r3, [fp, #-16]
	while (listlen >= len) {
   1c3c4:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1c3c8:	e51b3008 	ldr	r3, [fp, #-8]
   1c3cc:	e1520003 	cmp	r2, r3
   1c3d0:	aaffffdb 	bge	1c344 <fdt_stringlist_contains+0x2c>
	}
	return 0;
   1c3d4:	e3a03000 	mov	r3, #0
}
   1c3d8:	e1a00003 	mov	r0, r3
   1c3dc:	e24bd004 	sub	sp, fp, #4
   1c3e0:	e8bd8800 	pop	{fp, pc}

0001c3e4 <fdt_stringlist_count>:

int fdt_stringlist_count(const void *fdt, int nodeoffset, const char *property)
{
   1c3e4:	e92d4800 	push	{fp, lr}
   1c3e8:	e28db004 	add	fp, sp, #4
   1c3ec:	e24dd020 	sub	sp, sp, #32
   1c3f0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1c3f4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1c3f8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
	const char *list, *end;
	int length, count = 0;
   1c3fc:	e3a03000 	mov	r3, #0
   1c400:	e50b300c 	str	r3, [fp, #-12]

	list = fdt_getprop(fdt, nodeoffset, property, &length);
   1c404:	e24b3014 	sub	r3, fp, #20
   1c408:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c40c:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c410:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c414:	ebfffddf 	bl	1bb98 <fdt_getprop>
   1c418:	e50b0008 	str	r0, [fp, #-8]
	if (!list)
   1c41c:	e51b3008 	ldr	r3, [fp, #-8]
   1c420:	e3530000 	cmp	r3, #0
   1c424:	1a000001 	bne	1c430 <fdt_stringlist_count+0x4c>
		return length;
   1c428:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c42c:	ea000024 	b	1c4c4 <fdt_stringlist_count+0xe0>

	end = list + length;
   1c430:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c434:	e1a02003 	mov	r2, r3
   1c438:	e51b3008 	ldr	r3, [fp, #-8]
   1c43c:	e0833002 	add	r3, r3, r2
   1c440:	e50b3010 	str	r3, [fp, #-16]

	while (list < end) {
   1c444:	ea000019 	b	1c4b0 <fdt_stringlist_count+0xcc>
		length = strnlen(list, end - list) + 1;
   1c448:	e51b2010 	ldr	r2, [fp, #-16]
   1c44c:	e51b3008 	ldr	r3, [fp, #-8]
   1c450:	e0423003 	sub	r3, r2, r3
   1c454:	e1a01003 	mov	r1, r3
   1c458:	e51b0008 	ldr	r0, [fp, #-8]
   1c45c:	eb0016ca 	bl	21f8c <strnlen>
   1c460:	e1a03000 	mov	r3, r0
   1c464:	e2833001 	add	r3, r3, #1
   1c468:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

		/* Abort if the last string isn't properly NUL-terminated. */
		if (list + length > end)
   1c46c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c470:	e1a02003 	mov	r2, r3
   1c474:	e51b3008 	ldr	r3, [fp, #-8]
   1c478:	e0833002 	add	r3, r3, r2
   1c47c:	e51b2010 	ldr	r2, [fp, #-16]
   1c480:	e1520003 	cmp	r2, r3
   1c484:	2a000001 	bcs	1c490 <fdt_stringlist_count+0xac>
			return -FDT_ERR_BADVALUE;
   1c488:	e3e0300e 	mvn	r3, #14
   1c48c:	ea00000c 	b	1c4c4 <fdt_stringlist_count+0xe0>

		list += length;
   1c490:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c494:	e1a02003 	mov	r2, r3
   1c498:	e51b3008 	ldr	r3, [fp, #-8]
   1c49c:	e0833002 	add	r3, r3, r2
   1c4a0:	e50b3008 	str	r3, [fp, #-8]
		count++;
   1c4a4:	e51b300c 	ldr	r3, [fp, #-12]
   1c4a8:	e2833001 	add	r3, r3, #1
   1c4ac:	e50b300c 	str	r3, [fp, #-12]
	while (list < end) {
   1c4b0:	e51b2008 	ldr	r2, [fp, #-8]
   1c4b4:	e51b3010 	ldr	r3, [fp, #-16]
   1c4b8:	e1520003 	cmp	r2, r3
   1c4bc:	3affffe1 	bcc	1c448 <fdt_stringlist_count+0x64>
	}

	return count;
   1c4c0:	e51b300c 	ldr	r3, [fp, #-12]
}
   1c4c4:	e1a00003 	mov	r0, r3
   1c4c8:	e24bd004 	sub	sp, fp, #4
   1c4cc:	e8bd8800 	pop	{fp, pc}

0001c4d0 <fdt_stringlist_search>:

int fdt_stringlist_search(const void *fdt, int nodeoffset, const char *property,
			  const char *string)
{
   1c4d0:	e92d4800 	push	{fp, lr}
   1c4d4:	e28db004 	add	fp, sp, #4
   1c4d8:	e24dd028 	sub	sp, sp, #40	; 0x28
   1c4dc:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
   1c4e0:	e50b1024 	str	r1, [fp, #-36]	; 0xffffffdc
   1c4e4:	e50b2028 	str	r2, [fp, #-40]	; 0xffffffd8
   1c4e8:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4
	int length, len, idx = 0;
   1c4ec:	e3a03000 	mov	r3, #0
   1c4f0:	e50b3008 	str	r3, [fp, #-8]
	const char *list, *end;

	list = fdt_getprop(fdt, nodeoffset, property, &length);
   1c4f4:	e24b3018 	sub	r3, fp, #24
   1c4f8:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c4fc:	e51b1024 	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c500:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c504:	ebfffda3 	bl	1bb98 <fdt_getprop>
   1c508:	e50b000c 	str	r0, [fp, #-12]
	if (!list)
   1c50c:	e51b300c 	ldr	r3, [fp, #-12]
   1c510:	e3530000 	cmp	r3, #0
   1c514:	1a000001 	bne	1c520 <fdt_stringlist_search+0x50>
		return length;
   1c518:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c51c:	ea000037 	b	1c600 <fdt_stringlist_search+0x130>

	len = strlen(string) + 1;
   1c520:	e51b002c 	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c524:	eb001664 	bl	21ebc <strlen>
   1c528:	e1a03000 	mov	r3, r0
   1c52c:	e2833001 	add	r3, r3, #1
   1c530:	e50b3010 	str	r3, [fp, #-16]
	end = list + length;
   1c534:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c538:	e1a02003 	mov	r2, r3
   1c53c:	e51b300c 	ldr	r3, [fp, #-12]
   1c540:	e0833002 	add	r3, r3, r2
   1c544:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec

	while (list < end) {
   1c548:	ea000027 	b	1c5ec <fdt_stringlist_search+0x11c>
		length = strnlen(list, end - list) + 1;
   1c54c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1c550:	e51b300c 	ldr	r3, [fp, #-12]
   1c554:	e0423003 	sub	r3, r2, r3
   1c558:	e1a01003 	mov	r1, r3
   1c55c:	e51b000c 	ldr	r0, [fp, #-12]
   1c560:	eb001689 	bl	21f8c <strnlen>
   1c564:	e1a03000 	mov	r3, r0
   1c568:	e2833001 	add	r3, r3, #1
   1c56c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

		/* Abort if the last string isn't properly NUL-terminated. */
		if (list + length > end)
   1c570:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c574:	e1a02003 	mov	r2, r3
   1c578:	e51b300c 	ldr	r3, [fp, #-12]
   1c57c:	e0833002 	add	r3, r3, r2
   1c580:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1c584:	e1520003 	cmp	r2, r3
   1c588:	2a000001 	bcs	1c594 <fdt_stringlist_search+0xc4>
			return -FDT_ERR_BADVALUE;
   1c58c:	e3e0300e 	mvn	r3, #14
   1c590:	ea00001a 	b	1c600 <fdt_stringlist_search+0x130>

		if (length == len && memcmp(list, string, length) == 0)
   1c594:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c598:	e51b2010 	ldr	r2, [fp, #-16]
   1c59c:	e1520003 	cmp	r2, r3
   1c5a0:	1a000009 	bne	1c5cc <fdt_stringlist_search+0xfc>
   1c5a4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5a8:	e1a02003 	mov	r2, r3
   1c5ac:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c5b0:	e51b000c 	ldr	r0, [fp, #-12]
   1c5b4:	eb001571 	bl	21b80 <memcmp>
   1c5b8:	e1a03000 	mov	r3, r0
   1c5bc:	e3530000 	cmp	r3, #0
   1c5c0:	1a000001 	bne	1c5cc <fdt_stringlist_search+0xfc>
			return idx;
   1c5c4:	e51b3008 	ldr	r3, [fp, #-8]
   1c5c8:	ea00000c 	b	1c600 <fdt_stringlist_search+0x130>

		list += length;
   1c5cc:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5d0:	e1a02003 	mov	r2, r3
   1c5d4:	e51b300c 	ldr	r3, [fp, #-12]
   1c5d8:	e0833002 	add	r3, r3, r2
   1c5dc:	e50b300c 	str	r3, [fp, #-12]
		idx++;
   1c5e0:	e51b3008 	ldr	r3, [fp, #-8]
   1c5e4:	e2833001 	add	r3, r3, #1
   1c5e8:	e50b3008 	str	r3, [fp, #-8]
	while (list < end) {
   1c5ec:	e51b200c 	ldr	r2, [fp, #-12]
   1c5f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5f4:	e1520003 	cmp	r2, r3
   1c5f8:	3affffd3 	bcc	1c54c <fdt_stringlist_search+0x7c>
	}

	return -FDT_ERR_NOTFOUND;
   1c5fc:	e3e03000 	mvn	r3, #0
}
   1c600:	e1a00003 	mov	r0, r3
   1c604:	e24bd004 	sub	sp, fp, #4
   1c608:	e8bd8800 	pop	{fp, pc}

0001c60c <fdt_stringlist_get>:

const char *fdt_stringlist_get(const void *fdt, int nodeoffset,
			       const char *property, int idx,
			       int *lenp)
{
   1c60c:	e92d4800 	push	{fp, lr}
   1c610:	e28db004 	add	fp, sp, #4
   1c614:	e24dd020 	sub	sp, sp, #32
   1c618:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1c61c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1c620:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   1c624:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
	const char *list, *end;
	int length;

	list = fdt_getprop(fdt, nodeoffset, property, &length);
   1c628:	e24b3010 	sub	r3, fp, #16
   1c62c:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c630:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c634:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c638:	ebfffd56 	bl	1bb98 <fdt_getprop>
   1c63c:	e50b0008 	str	r0, [fp, #-8]
	if (!list) {
   1c640:	e51b3008 	ldr	r3, [fp, #-8]
   1c644:	e3530000 	cmp	r3, #0
   1c648:	1a000007 	bne	1c66c <fdt_stringlist_get+0x60>
		if (lenp)
   1c64c:	e59b3004 	ldr	r3, [fp, #4]
   1c650:	e3530000 	cmp	r3, #0
   1c654:	0a000002 	beq	1c664 <fdt_stringlist_get+0x58>
			*lenp = length;
   1c658:	e51b2010 	ldr	r2, [fp, #-16]
   1c65c:	e59b3004 	ldr	r3, [fp, #4]
   1c660:	e5832000 	str	r2, [r3]

		return NULL;
   1c664:	e3a03000 	mov	r3, #0
   1c668:	ea00003c 	b	1c760 <fdt_stringlist_get+0x154>
	}

	end = list + length;
   1c66c:	e51b3010 	ldr	r3, [fp, #-16]
   1c670:	e1a02003 	mov	r2, r3
   1c674:	e51b3008 	ldr	r3, [fp, #-8]
   1c678:	e0833002 	add	r3, r3, r2
   1c67c:	e50b300c 	str	r3, [fp, #-12]

	while (list < end) {
   1c680:	ea00002b 	b	1c734 <fdt_stringlist_get+0x128>
		length = strnlen(list, end - list) + 1;
   1c684:	e51b200c 	ldr	r2, [fp, #-12]
   1c688:	e51b3008 	ldr	r3, [fp, #-8]
   1c68c:	e0423003 	sub	r3, r2, r3
   1c690:	e1a01003 	mov	r1, r3
   1c694:	e51b0008 	ldr	r0, [fp, #-8]
   1c698:	eb00163b 	bl	21f8c <strnlen>
   1c69c:	e1a03000 	mov	r3, r0
   1c6a0:	e2833001 	add	r3, r3, #1
   1c6a4:	e50b3010 	str	r3, [fp, #-16]

		/* Abort if the last string isn't properly NUL-terminated. */
		if (list + length > end) {
   1c6a8:	e51b3010 	ldr	r3, [fp, #-16]
   1c6ac:	e1a02003 	mov	r2, r3
   1c6b0:	e51b3008 	ldr	r3, [fp, #-8]
   1c6b4:	e0833002 	add	r3, r3, r2
   1c6b8:	e51b200c 	ldr	r2, [fp, #-12]
   1c6bc:	e1520003 	cmp	r2, r3
   1c6c0:	2a000007 	bcs	1c6e4 <fdt_stringlist_get+0xd8>
			if (lenp)
   1c6c4:	e59b3004 	ldr	r3, [fp, #4]
   1c6c8:	e3530000 	cmp	r3, #0
   1c6cc:	0a000002 	beq	1c6dc <fdt_stringlist_get+0xd0>
				*lenp = -FDT_ERR_BADVALUE;
   1c6d0:	e59b3004 	ldr	r3, [fp, #4]
   1c6d4:	e3e0200e 	mvn	r2, #14
   1c6d8:	e5832000 	str	r2, [r3]

			return NULL;
   1c6dc:	e3a03000 	mov	r3, #0
   1c6e0:	ea00001e 	b	1c760 <fdt_stringlist_get+0x154>
		}

		if (idx == 0) {
   1c6e4:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c6e8:	e3530000 	cmp	r3, #0
   1c6ec:	1a000008 	bne	1c714 <fdt_stringlist_get+0x108>
			if (lenp)
   1c6f0:	e59b3004 	ldr	r3, [fp, #4]
   1c6f4:	e3530000 	cmp	r3, #0
   1c6f8:	0a000003 	beq	1c70c <fdt_stringlist_get+0x100>
				*lenp = length - 1;
   1c6fc:	e51b3010 	ldr	r3, [fp, #-16]
   1c700:	e2432001 	sub	r2, r3, #1
   1c704:	e59b3004 	ldr	r3, [fp, #4]
   1c708:	e5832000 	str	r2, [r3]

			return list;
   1c70c:	e51b3008 	ldr	r3, [fp, #-8]
   1c710:	ea000012 	b	1c760 <fdt_stringlist_get+0x154>
		}

		list += length;
   1c714:	e51b3010 	ldr	r3, [fp, #-16]
   1c718:	e1a02003 	mov	r2, r3
   1c71c:	e51b3008 	ldr	r3, [fp, #-8]
   1c720:	e0833002 	add	r3, r3, r2
   1c724:	e50b3008 	str	r3, [fp, #-8]
		idx--;
   1c728:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c72c:	e2433001 	sub	r3, r3, #1
   1c730:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
	while (list < end) {
   1c734:	e51b2008 	ldr	r2, [fp, #-8]
   1c738:	e51b300c 	ldr	r3, [fp, #-12]
   1c73c:	e1520003 	cmp	r2, r3
   1c740:	3affffcf 	bcc	1c684 <fdt_stringlist_get+0x78>
	}

	if (lenp)
   1c744:	e59b3004 	ldr	r3, [fp, #4]
   1c748:	e3530000 	cmp	r3, #0
   1c74c:	0a000002 	beq	1c75c <fdt_stringlist_get+0x150>
		*lenp = -FDT_ERR_NOTFOUND;
   1c750:	e59b3004 	ldr	r3, [fp, #4]
   1c754:	e3e02000 	mvn	r2, #0
   1c758:	e5832000 	str	r2, [r3]

	return NULL;
   1c75c:	e3a03000 	mov	r3, #0
}
   1c760:	e1a00003 	mov	r0, r3
   1c764:	e24bd004 	sub	sp, fp, #4
   1c768:	e8bd8800 	pop	{fp, pc}

0001c76c <fdt_node_check_compatible>:

int fdt_node_check_compatible(const void *fdt, int nodeoffset,
			      const char *compatible)
{
   1c76c:	e92d4800 	push	{fp, lr}
   1c770:	e28db004 	add	fp, sp, #4
   1c774:	e24dd018 	sub	sp, sp, #24
   1c778:	e50b0010 	str	r0, [fp, #-16]
   1c77c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1c780:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	const void *prop;
	int len;

	prop = fdt_getprop(fdt, nodeoffset, "compatible", &len);
   1c784:	e24b300c 	sub	r3, fp, #12
   1c788:	e3092b4c 	movw	r2, #39756	; 0x9b4c
   1c78c:	e3402002 	movt	r2, #2
   1c790:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1c794:	e51b0010 	ldr	r0, [fp, #-16]
   1c798:	ebfffcfe 	bl	1bb98 <fdt_getprop>
   1c79c:	e50b0008 	str	r0, [fp, #-8]
	if (!prop)
   1c7a0:	e51b3008 	ldr	r3, [fp, #-8]
   1c7a4:	e3530000 	cmp	r3, #0
   1c7a8:	1a000001 	bne	1c7b4 <fdt_node_check_compatible+0x48>
		return len;
   1c7ac:	e51b300c 	ldr	r3, [fp, #-12]
   1c7b0:	ea000009 	b	1c7dc <fdt_node_check_compatible+0x70>

	return !fdt_stringlist_contains(prop, len, compatible);
   1c7b4:	e51b300c 	ldr	r3, [fp, #-12]
   1c7b8:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c7bc:	e1a01003 	mov	r1, r3
   1c7c0:	e51b0008 	ldr	r0, [fp, #-8]
   1c7c4:	ebfffed3 	bl	1c318 <fdt_stringlist_contains>
   1c7c8:	e1a03000 	mov	r3, r0
   1c7cc:	e3530000 	cmp	r3, #0
   1c7d0:	03a03001 	moveq	r3, #1
   1c7d4:	13a03000 	movne	r3, #0
   1c7d8:	e6ef3073 	uxtb	r3, r3
}
   1c7dc:	e1a00003 	mov	r0, r3
   1c7e0:	e24bd004 	sub	sp, fp, #4
   1c7e4:	e8bd8800 	pop	{fp, pc}

0001c7e8 <fdt_node_offset_by_compatible>:

int fdt_node_offset_by_compatible(const void *fdt, int startoffset,
				  const char *compatible)
{
   1c7e8:	e92d4800 	push	{fp, lr}
   1c7ec:	e28db004 	add	fp, sp, #4
   1c7f0:	e24dd020 	sub	sp, sp, #32
   1c7f4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1c7f8:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1c7fc:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
	int offset, err;

	FDT_RO_PROBE(fdt);
   1c800:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c804:	eb0000e4 	bl	1cb9c <fdt_ro_probe_>
   1c808:	e50b000c 	str	r0, [fp, #-12]
   1c80c:	e51b300c 	ldr	r3, [fp, #-12]
   1c810:	e3530000 	cmp	r3, #0
   1c814:	0a000001 	beq	1c820 <fdt_node_offset_by_compatible+0x38>
   1c818:	e51b300c 	ldr	r3, [fp, #-12]
   1c81c:	ea000020 	b	1c8a4 <fdt_node_offset_by_compatible+0xbc>
	/* FIXME: The algorithm here is pretty horrible: we scan each
	 * property of a node in fdt_node_check_compatible(), then if
	 * that didn't find what we want, we scan over them again
	 * making our way to the next node.  Still it's the easiest to
	 * implement approach; performance can come later. */
	for (offset = fdt_next_node(fdt, startoffset, NULL);
   1c820:	e3a02000 	mov	r2, #0
   1c824:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c828:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c82c:	eb000310 	bl	1d474 <fdt_next_node>
   1c830:	e50b0008 	str	r0, [fp, #-8]
   1c834:	ea000016 	b	1c894 <fdt_node_offset_by_compatible+0xac>
	     offset >= 0;
	     offset = fdt_next_node(fdt, offset, NULL)) {
		err = fdt_node_check_compatible(fdt, offset, compatible);
   1c838:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c83c:	e51b1008 	ldr	r1, [fp, #-8]
   1c840:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c844:	ebffffc8 	bl	1c76c <fdt_node_check_compatible>
   1c848:	e50b0010 	str	r0, [fp, #-16]
		if ((err < 0) && (err != -FDT_ERR_NOTFOUND))
   1c84c:	e51b3010 	ldr	r3, [fp, #-16]
   1c850:	e3530000 	cmp	r3, #0
   1c854:	aa000004 	bge	1c86c <fdt_node_offset_by_compatible+0x84>
   1c858:	e51b3010 	ldr	r3, [fp, #-16]
   1c85c:	e3730001 	cmn	r3, #1
   1c860:	0a000001 	beq	1c86c <fdt_node_offset_by_compatible+0x84>
			return err;
   1c864:	e51b3010 	ldr	r3, [fp, #-16]
   1c868:	ea00000d 	b	1c8a4 <fdt_node_offset_by_compatible+0xbc>
		else if (err == 0)
   1c86c:	e51b3010 	ldr	r3, [fp, #-16]
   1c870:	e3530000 	cmp	r3, #0
   1c874:	1a000001 	bne	1c880 <fdt_node_offset_by_compatible+0x98>
			return offset;
   1c878:	e51b3008 	ldr	r3, [fp, #-8]
   1c87c:	ea000008 	b	1c8a4 <fdt_node_offset_by_compatible+0xbc>
	     offset = fdt_next_node(fdt, offset, NULL)) {
   1c880:	e3a02000 	mov	r2, #0
   1c884:	e51b1008 	ldr	r1, [fp, #-8]
   1c888:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c88c:	eb0002f8 	bl	1d474 <fdt_next_node>
   1c890:	e50b0008 	str	r0, [fp, #-8]
	for (offset = fdt_next_node(fdt, startoffset, NULL);
   1c894:	e51b3008 	ldr	r3, [fp, #-8]
   1c898:	e3530000 	cmp	r3, #0
   1c89c:	aaffffe5 	bge	1c838 <fdt_node_offset_by_compatible+0x50>
	}

	return offset; /* error from fdt_next_node() */
   1c8a0:	e51b3008 	ldr	r3, [fp, #-8]
}
   1c8a4:	e1a00003 	mov	r0, r3
   1c8a8:	e24bd004 	sub	sp, fp, #4
   1c8ac:	e8bd8800 	pop	{fp, pc}

0001c8b0 <fdt_check_full>:

int fdt_check_full(const void *fdt, size_t bufsize)
{
   1c8b0:	e92d4800 	push	{fp, lr}
   1c8b4:	e28db004 	add	fp, sp, #4
   1c8b8:	e24dd028 	sub	sp, sp, #40	; 0x28
   1c8bc:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   1c8c0:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
	int err;
	int num_memrsv;
	int offset, nextoffset = 0;
   1c8c4:	e3a03000 	mov	r3, #0
   1c8c8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
	uint32_t tag;
	unsigned depth = 0;
   1c8cc:	e3a03000 	mov	r3, #0
   1c8d0:	e50b3008 	str	r3, [fp, #-8]
	const void *prop;
	const char *propname;

	if (bufsize < FDT_V1_SIZE)
   1c8d4:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c8d8:	e353001b 	cmp	r3, #27
   1c8dc:	8a000001 	bhi	1c8e8 <fdt_check_full+0x38>
		return -FDT_ERR_TRUNCATED;
   1c8e0:	e3e03007 	mvn	r3, #7
   1c8e4:	ea000060 	b	1ca6c <fdt_check_full+0x1bc>
	err = fdt_check_header(fdt);
   1c8e8:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c8ec:	eb000139 	bl	1cdd8 <fdt_check_header>
   1c8f0:	e1a03000 	mov	r3, r0
   1c8f4:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	if (err != 0)
   1c8f8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c8fc:	e3530000 	cmp	r3, #0
   1c900:	0a000001 	beq	1c90c <fdt_check_full+0x5c>
		return err;
   1c904:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c908:	ea000057 	b	1ca6c <fdt_check_full+0x1bc>
	if (bufsize < fdt_totalsize(fdt))
   1c90c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c910:	e2833004 	add	r3, r3, #4
   1c914:	e1a00003 	mov	r0, r3
   1c918:	ebfff820 	bl	1a9a0 <fdt32_ld>
   1c91c:	e1a02000 	mov	r2, r0
   1c920:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c924:	e1530002 	cmp	r3, r2
   1c928:	2a000001 	bcs	1c934 <fdt_check_full+0x84>
		return -FDT_ERR_TRUNCATED;
   1c92c:	e3e03007 	mvn	r3, #7
   1c930:	ea00004d 	b	1ca6c <fdt_check_full+0x1bc>

	num_memrsv = fdt_num_mem_rsv(fdt);
   1c934:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c938:	ebfff9ef 	bl	1b0fc <fdt_num_mem_rsv>
   1c93c:	e50b000c 	str	r0, [fp, #-12]
	if (num_memrsv < 0)
   1c940:	e51b300c 	ldr	r3, [fp, #-12]
   1c944:	e3530000 	cmp	r3, #0
   1c948:	aa000001 	bge	1c954 <fdt_check_full+0xa4>
		return num_memrsv;
   1c94c:	e51b300c 	ldr	r3, [fp, #-12]
   1c950:	ea000045 	b	1ca6c <fdt_check_full+0x1bc>

	while (1) {
		offset = nextoffset;
   1c954:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c958:	e50b3010 	str	r3, [fp, #-16]
		tag = fdt_next_tag(fdt, offset, &nextoffset);
   1c95c:	e24b3020 	sub	r3, fp, #32
   1c960:	e1a02003 	mov	r2, r3
   1c964:	e51b1010 	ldr	r1, [fp, #-16]
   1c968:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c96c:	eb0001fe 	bl	1d16c <fdt_next_tag>
   1c970:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec

		if (nextoffset < 0)
   1c974:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c978:	e3530000 	cmp	r3, #0
   1c97c:	aa000001 	bge	1c988 <fdt_check_full+0xd8>
			return nextoffset;
   1c980:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c984:	ea000038 	b	1ca6c <fdt_check_full+0x1bc>
   1c988:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1c98c:	e2433001 	sub	r3, r3, #1
   1c990:	e3530008 	cmp	r3, #8
   1c994:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   1c998:	ea00002b 	b	1ca4c <fdt_check_full+0x19c>
   1c99c:	0001c9dc 	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c9a0:	0001c9fc 	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1c9a4:	0001ca20 	andeq	ip, r1, r0, lsr #20
   1c9a8:	0001ca54 	andeq	ip, r1, r4, asr sl
   1c9ac:	0001ca4c 	andeq	ip, r1, ip, asr #20
   1c9b0:	0001ca4c 	andeq	ip, r1, ip, asr #20
   1c9b4:	0001ca4c 	andeq	ip, r1, ip, asr #20
   1c9b8:	0001ca4c 	andeq	ip, r1, ip, asr #20
   1c9bc:	0001c9c0 	andeq	ip, r1, r0, asr #19
		switch (tag) {
		case FDT_NOP:
			break;

		case FDT_END:
			if (depth != 0)
   1c9c0:	e51b3008 	ldr	r3, [fp, #-8]
   1c9c4:	e3530000 	cmp	r3, #0
   1c9c8:	0a000001 	beq	1c9d4 <fdt_check_full+0x124>
				return -FDT_ERR_BADSTRUCTURE;
   1c9cc:	e3e0300a 	mvn	r3, #10
   1c9d0:	ea000025 	b	1ca6c <fdt_check_full+0x1bc>
			return 0;
   1c9d4:	e3a03000 	mov	r3, #0
   1c9d8:	ea000023 	b	1ca6c <fdt_check_full+0x1bc>

		case FDT_BEGIN_NODE:
			depth++;
   1c9dc:	e51b3008 	ldr	r3, [fp, #-8]
   1c9e0:	e2833001 	add	r3, r3, #1
   1c9e4:	e50b3008 	str	r3, [fp, #-8]
			if (depth > INT_MAX)
   1c9e8:	e51b3008 	ldr	r3, [fp, #-8]
   1c9ec:	e3530000 	cmp	r3, #0
   1c9f0:	aa000019 	bge	1ca5c <fdt_check_full+0x1ac>
				return -FDT_ERR_BADSTRUCTURE;
   1c9f4:	e3e0300a 	mvn	r3, #10
   1c9f8:	ea00001b 	b	1ca6c <fdt_check_full+0x1bc>
			break;

		case FDT_END_NODE:
			if (depth == 0)
   1c9fc:	e51b3008 	ldr	r3, [fp, #-8]
   1ca00:	e3530000 	cmp	r3, #0
   1ca04:	1a000001 	bne	1ca10 <fdt_check_full+0x160>
				return -FDT_ERR_BADSTRUCTURE;
   1ca08:	e3e0300a 	mvn	r3, #10
   1ca0c:	ea000016 	b	1ca6c <fdt_check_full+0x1bc>
			depth--;
   1ca10:	e51b3008 	ldr	r3, [fp, #-8]
   1ca14:	e2433001 	sub	r3, r3, #1
   1ca18:	e50b3008 	str	r3, [fp, #-8]
			break;
   1ca1c:	ea000011 	b	1ca68 <fdt_check_full+0x1b8>

		case FDT_PROP:
			prop = fdt_getprop_by_offset(fdt, offset, &propname,
   1ca20:	e24b301c 	sub	r3, fp, #28
   1ca24:	e24b2024 	sub	r2, fp, #36	; 0x24
   1ca28:	e51b1010 	ldr	r1, [fp, #-16]
   1ca2c:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca30:	ebfffc0f 	bl	1ba74 <fdt_getprop_by_offset>
   1ca34:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
						     &err);
			if (!prop)
   1ca38:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ca3c:	e3530000 	cmp	r3, #0
   1ca40:	1a000007 	bne	1ca64 <fdt_check_full+0x1b4>
				return err;
   1ca44:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ca48:	ea000007 	b	1ca6c <fdt_check_full+0x1bc>
			break;

		default:
			return -FDT_ERR_INTERNAL;
   1ca4c:	e3e0300c 	mvn	r3, #12
   1ca50:	ea000005 	b	1ca6c <fdt_check_full+0x1bc>
			break;
   1ca54:	e320f000 	nop	{0}
   1ca58:	eaffffbd 	b	1c954 <fdt_check_full+0xa4>
			break;
   1ca5c:	e320f000 	nop	{0}
   1ca60:	eaffffbb 	b	1c954 <fdt_check_full+0xa4>
			break;
   1ca64:	e320f000 	nop	{0}
		offset = nextoffset;
   1ca68:	eaffffb9 	b	1c954 <fdt_check_full+0xa4>
		}
	}
}
   1ca6c:	e1a00003 	mov	r0, r3
   1ca70:	e24bd004 	sub	sp, fp, #4
   1ca74:	e8bd8800 	pop	{fp, pc}

0001ca78 <fdt32_to_cpu>:
{
   1ca78:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1ca7c:	e28db000 	add	fp, sp, #0
   1ca80:	e24dd00c 	sub	sp, sp, #12
   1ca84:	e50b0008 	str	r0, [fp, #-8]
	return (FDT_FORCE uint32_t)CPU_TO_FDT32(x);
   1ca88:	e24b3008 	sub	r3, fp, #8
   1ca8c:	e5d33000 	ldrb	r3, [r3]
   1ca90:	e1a02c03 	lsl	r2, r3, #24
   1ca94:	e24b3008 	sub	r3, fp, #8
   1ca98:	e2833001 	add	r3, r3, #1
   1ca9c:	e5d33000 	ldrb	r3, [r3]
   1caa0:	e1a03803 	lsl	r3, r3, #16
   1caa4:	e1822003 	orr	r2, r2, r3
   1caa8:	e24b3008 	sub	r3, fp, #8
   1caac:	e2833002 	add	r3, r3, #2
   1cab0:	e5d33000 	ldrb	r3, [r3]
   1cab4:	e1a03403 	lsl	r3, r3, #8
   1cab8:	e1822003 	orr	r2, r2, r3
   1cabc:	e24b3008 	sub	r3, fp, #8
   1cac0:	e2833003 	add	r3, r3, #3
   1cac4:	e5d33000 	ldrb	r3, [r3]
   1cac8:	e1823003 	orr	r3, r2, r3
}
   1cacc:	e1a00003 	mov	r0, r3
   1cad0:	e28bd000 	add	sp, fp, #0
   1cad4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1cad8:	e12fff1e 	bx	lr

0001cadc <fdt32_ld>:
{
   1cadc:	e92d4800 	push	{fp, lr}
   1cae0:	e28db004 	add	fp, sp, #4
   1cae4:	e24dd010 	sub	sp, sp, #16
   1cae8:	e50b0010 	str	r0, [fp, #-16]
	memcpy(&v, p, sizeof(v));
   1caec:	e24b3008 	sub	r3, fp, #8
   1caf0:	e3a02004 	mov	r2, #4
   1caf4:	e51b1010 	ldr	r1, [fp, #-16]
   1caf8:	e1a00003 	mov	r0, r3
   1cafc:	eb001330 	bl	217c4 <memcpy>
	return fdt32_to_cpu(v);
   1cb00:	e51b3008 	ldr	r3, [fp, #-8]
   1cb04:	e1a00003 	mov	r0, r3
   1cb08:	ebffffda 	bl	1ca78 <fdt32_to_cpu>
   1cb0c:	e1a03000 	mov	r3, r0
}
   1cb10:	e1a00003 	mov	r0, r3
   1cb14:	e24bd004 	sub	sp, fp, #4
   1cb18:	e8bd8800 	pop	{fp, pc}

0001cb1c <fdt_header_size>:
 * fdt_header_size - return the size of the tree's header
 * @fdt: pointer to a flattened device tree
 */
size_t fdt_header_size_(uint32_t version);
static inline size_t fdt_header_size(const void *fdt)
{
   1cb1c:	e92d4800 	push	{fp, lr}
   1cb20:	e28db004 	add	fp, sp, #4
   1cb24:	e24dd008 	sub	sp, sp, #8
   1cb28:	e50b0008 	str	r0, [fp, #-8]
	return fdt_header_size_(fdt_version(fdt));
   1cb2c:	e51b3008 	ldr	r3, [fp, #-8]
   1cb30:	e2833014 	add	r3, r3, #20
   1cb34:	e1a00003 	mov	r0, r3
   1cb38:	ebffffe7 	bl	1cadc <fdt32_ld>
   1cb3c:	e1a03000 	mov	r3, r0
   1cb40:	e1a00003 	mov	r0, r3
   1cb44:	eb000086 	bl	1cd64 <fdt_header_size_>
   1cb48:	e1a03000 	mov	r3, r0
}
   1cb4c:	e1a00003 	mov	r0, r3
   1cb50:	e24bd004 	sub	sp, fp, #4
   1cb54:	e8bd8800 	pop	{fp, pc}

0001cb58 <fdt_offset_ptr_>:
{
   1cb58:	e92d4800 	push	{fp, lr}
   1cb5c:	e28db004 	add	fp, sp, #4
   1cb60:	e24dd008 	sub	sp, sp, #8
   1cb64:	e50b0008 	str	r0, [fp, #-8]
   1cb68:	e50b100c 	str	r1, [fp, #-12]
	return (const char *)fdt + fdt_off_dt_struct(fdt) + offset;
   1cb6c:	e51b3008 	ldr	r3, [fp, #-8]
   1cb70:	e2833008 	add	r3, r3, #8
   1cb74:	e1a00003 	mov	r0, r3
   1cb78:	ebffffd7 	bl	1cadc <fdt32_ld>
   1cb7c:	e1a02000 	mov	r2, r0
   1cb80:	e51b300c 	ldr	r3, [fp, #-12]
   1cb84:	e0823003 	add	r3, r2, r3
   1cb88:	e51b2008 	ldr	r2, [fp, #-8]
   1cb8c:	e0823003 	add	r3, r2, r3
}
   1cb90:	e1a00003 	mov	r0, r3
   1cb94:	e24bd004 	sub	sp, fp, #4
   1cb98:	e8bd8800 	pop	{fp, pc}

0001cb9c <fdt_ro_probe_>:
 * Minimal sanity check for a read-only tree. fdt_ro_probe_() checks
 * that the given buffer contains what appears to be a flattened
 * device tree with sane information in its header.
 */
int fdt_ro_probe_(const void *fdt)
{
   1cb9c:	e92d4800 	push	{fp, lr}
   1cba0:	e28db004 	add	fp, sp, #4
   1cba4:	e24dd008 	sub	sp, sp, #8
   1cba8:	e50b0008 	str	r0, [fp, #-8]
	if (fdt_magic(fdt) == FDT_MAGIC) {
   1cbac:	e51b3008 	ldr	r3, [fp, #-8]
   1cbb0:	e1a00003 	mov	r0, r3
   1cbb4:	ebffffc8 	bl	1cadc <fdt32_ld>
   1cbb8:	e1a02000 	mov	r2, r0
   1cbbc:	e30f3eed 	movw	r3, #65261	; 0xfeed
   1cbc0:	e34d300d 	movt	r3, #53261	; 0xd00d
   1cbc4:	e1520003 	cmp	r2, r3
   1cbc8:	1a000011 	bne	1cc14 <fdt_ro_probe_+0x78>
		/* Complete tree */
		if (fdt_version(fdt) < FDT_FIRST_SUPPORTED_VERSION)
   1cbcc:	e51b3008 	ldr	r3, [fp, #-8]
   1cbd0:	e2833014 	add	r3, r3, #20
   1cbd4:	e1a00003 	mov	r0, r3
   1cbd8:	ebffffbf 	bl	1cadc <fdt32_ld>
   1cbdc:	e1a03000 	mov	r3, r0
   1cbe0:	e3530001 	cmp	r3, #1
   1cbe4:	8a000001 	bhi	1cbf0 <fdt_ro_probe_+0x54>
			return -FDT_ERR_BADVERSION;
   1cbe8:	e3e03009 	mvn	r3, #9
   1cbec:	ea00001c 	b	1cc64 <fdt_ro_probe_+0xc8>
		if (fdt_last_comp_version(fdt) > FDT_LAST_SUPPORTED_VERSION)
   1cbf0:	e51b3008 	ldr	r3, [fp, #-8]
   1cbf4:	e2833018 	add	r3, r3, #24
   1cbf8:	e1a00003 	mov	r0, r3
   1cbfc:	ebffffb6 	bl	1cadc <fdt32_ld>
   1cc00:	e1a03000 	mov	r3, r0
   1cc04:	e3530011 	cmp	r3, #17
   1cc08:	9a000014 	bls	1cc60 <fdt_ro_probe_+0xc4>
			return -FDT_ERR_BADVERSION;
   1cc0c:	e3e03009 	mvn	r3, #9
   1cc10:	ea000013 	b	1cc64 <fdt_ro_probe_+0xc8>
	} else if (fdt_magic(fdt) == FDT_SW_MAGIC) {
   1cc14:	e51b3008 	ldr	r3, [fp, #-8]
   1cc18:	e1a00003 	mov	r0, r3
   1cc1c:	ebffffae 	bl	1cadc <fdt32_ld>
   1cc20:	e1a02000 	mov	r2, r0
   1cc24:	e3003112 	movw	r3, #274	; 0x112
   1cc28:	e3423ff2 	movt	r3, #12274	; 0x2ff2
   1cc2c:	e1520003 	cmp	r2, r3
   1cc30:	1a000008 	bne	1cc58 <fdt_ro_probe_+0xbc>
		/* Unfinished sequential-write blob */
		if (fdt_size_dt_struct(fdt) == 0)
   1cc34:	e51b3008 	ldr	r3, [fp, #-8]
   1cc38:	e2833024 	add	r3, r3, #36	; 0x24
   1cc3c:	e1a00003 	mov	r0, r3
   1cc40:	ebffffa5 	bl	1cadc <fdt32_ld>
   1cc44:	e1a03000 	mov	r3, r0
   1cc48:	e3530000 	cmp	r3, #0
   1cc4c:	1a000003 	bne	1cc60 <fdt_ro_probe_+0xc4>
			return -FDT_ERR_BADSTATE;
   1cc50:	e3e03006 	mvn	r3, #6
   1cc54:	ea000002 	b	1cc64 <fdt_ro_probe_+0xc8>
	} else {
		return -FDT_ERR_BADMAGIC;
   1cc58:	e3e03008 	mvn	r3, #8
   1cc5c:	ea000000 	b	1cc64 <fdt_ro_probe_+0xc8>
	}

	return 0;
   1cc60:	e3a03000 	mov	r3, #0
}
   1cc64:	e1a00003 	mov	r0, r3
   1cc68:	e24bd004 	sub	sp, fp, #4
   1cc6c:	e8bd8800 	pop	{fp, pc}

0001cc70 <check_off_>:

static int check_off_(uint32_t hdrsize, uint32_t totalsize, uint32_t off)
{
   1cc70:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1cc74:	e28db000 	add	fp, sp, #0
   1cc78:	e24dd014 	sub	sp, sp, #20
   1cc7c:	e50b0008 	str	r0, [fp, #-8]
   1cc80:	e50b100c 	str	r1, [fp, #-12]
   1cc84:	e50b2010 	str	r2, [fp, #-16]
	return (off >= hdrsize) && (off <= totalsize);
   1cc88:	e51b2010 	ldr	r2, [fp, #-16]
   1cc8c:	e51b3008 	ldr	r3, [fp, #-8]
   1cc90:	e1520003 	cmp	r2, r3
   1cc94:	3a000005 	bcc	1ccb0 <check_off_+0x40>
   1cc98:	e51b2010 	ldr	r2, [fp, #-16]
   1cc9c:	e51b300c 	ldr	r3, [fp, #-12]
   1cca0:	e1520003 	cmp	r2, r3
   1cca4:	8a000001 	bhi	1ccb0 <check_off_+0x40>
   1cca8:	e3a03001 	mov	r3, #1
   1ccac:	ea000000 	b	1ccb4 <check_off_+0x44>
   1ccb0:	e3a03000 	mov	r3, #0
}
   1ccb4:	e1a00003 	mov	r0, r3
   1ccb8:	e28bd000 	add	sp, fp, #0
   1ccbc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1ccc0:	e12fff1e 	bx	lr

0001ccc4 <check_block_>:

static int check_block_(uint32_t hdrsize, uint32_t totalsize,
			uint32_t base, uint32_t size)
{
   1ccc4:	e92d4800 	push	{fp, lr}
   1ccc8:	e28db004 	add	fp, sp, #4
   1cccc:	e24dd010 	sub	sp, sp, #16
   1ccd0:	e50b0008 	str	r0, [fp, #-8]
   1ccd4:	e50b100c 	str	r1, [fp, #-12]
   1ccd8:	e50b2010 	str	r2, [fp, #-16]
   1ccdc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	if (!check_off_(hdrsize, totalsize, base))
   1cce0:	e51b2010 	ldr	r2, [fp, #-16]
   1cce4:	e51b100c 	ldr	r1, [fp, #-12]
   1cce8:	e51b0008 	ldr	r0, [fp, #-8]
   1ccec:	ebffffdf 	bl	1cc70 <check_off_>
   1ccf0:	e1a03000 	mov	r3, r0
   1ccf4:	e3530000 	cmp	r3, #0
   1ccf8:	1a000001 	bne	1cd04 <check_block_+0x40>
		return 0; /* block start out of bounds */
   1ccfc:	e3a03000 	mov	r3, #0
   1cd00:	ea000014 	b	1cd58 <check_block_+0x94>
	if ((base + size) < base)
   1cd04:	e51b2010 	ldr	r2, [fp, #-16]
   1cd08:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd0c:	e0823003 	add	r3, r2, r3
   1cd10:	e51b2010 	ldr	r2, [fp, #-16]
   1cd14:	e1520003 	cmp	r2, r3
   1cd18:	9a000001 	bls	1cd24 <check_block_+0x60>
		return 0; /* overflow */
   1cd1c:	e3a03000 	mov	r3, #0
   1cd20:	ea00000c 	b	1cd58 <check_block_+0x94>
	if (!check_off_(hdrsize, totalsize, base + size))
   1cd24:	e51b2010 	ldr	r2, [fp, #-16]
   1cd28:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd2c:	e0823003 	add	r3, r2, r3
   1cd30:	e1a02003 	mov	r2, r3
   1cd34:	e51b100c 	ldr	r1, [fp, #-12]
   1cd38:	e51b0008 	ldr	r0, [fp, #-8]
   1cd3c:	ebffffcb 	bl	1cc70 <check_off_>
   1cd40:	e1a03000 	mov	r3, r0
   1cd44:	e3530000 	cmp	r3, #0
   1cd48:	1a000001 	bne	1cd54 <check_block_+0x90>
		return 0; /* block end out of bounds */
   1cd4c:	e3a03000 	mov	r3, #0
   1cd50:	ea000000 	b	1cd58 <check_block_+0x94>
	return 1;
   1cd54:	e3a03001 	mov	r3, #1
}
   1cd58:	e1a00003 	mov	r0, r3
   1cd5c:	e24bd004 	sub	sp, fp, #4
   1cd60:	e8bd8800 	pop	{fp, pc}

0001cd64 <fdt_header_size_>:

size_t fdt_header_size_(uint32_t version)
{
   1cd64:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1cd68:	e28db000 	add	fp, sp, #0
   1cd6c:	e24dd00c 	sub	sp, sp, #12
   1cd70:	e50b0008 	str	r0, [fp, #-8]
	if (version <= 1)
   1cd74:	e51b3008 	ldr	r3, [fp, #-8]
   1cd78:	e3530001 	cmp	r3, #1
   1cd7c:	8a000001 	bhi	1cd88 <fdt_header_size_+0x24>
		return FDT_V1_SIZE;
   1cd80:	e3a0301c 	mov	r3, #28
   1cd84:	ea00000f 	b	1cdc8 <fdt_header_size_+0x64>
	else if (version <= 2)
   1cd88:	e51b3008 	ldr	r3, [fp, #-8]
   1cd8c:	e3530002 	cmp	r3, #2
   1cd90:	8a000001 	bhi	1cd9c <fdt_header_size_+0x38>
		return FDT_V2_SIZE;
   1cd94:	e3a03020 	mov	r3, #32
   1cd98:	ea00000a 	b	1cdc8 <fdt_header_size_+0x64>
	else if (version <= 3)
   1cd9c:	e51b3008 	ldr	r3, [fp, #-8]
   1cda0:	e3530003 	cmp	r3, #3
   1cda4:	8a000001 	bhi	1cdb0 <fdt_header_size_+0x4c>
		return FDT_V3_SIZE;
   1cda8:	e3a03024 	mov	r3, #36	; 0x24
   1cdac:	ea000005 	b	1cdc8 <fdt_header_size_+0x64>
	else if (version <= 16)
   1cdb0:	e51b3008 	ldr	r3, [fp, #-8]
   1cdb4:	e3530010 	cmp	r3, #16
   1cdb8:	8a000001 	bhi	1cdc4 <fdt_header_size_+0x60>
		return FDT_V16_SIZE;
   1cdbc:	e3a03024 	mov	r3, #36	; 0x24
   1cdc0:	ea000000 	b	1cdc8 <fdt_header_size_+0x64>
	else
		return FDT_V17_SIZE;
   1cdc4:	e3a03028 	mov	r3, #40	; 0x28
}
   1cdc8:	e1a00003 	mov	r0, r3
   1cdcc:	e28bd000 	add	sp, fp, #0
   1cdd0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1cdd4:	e12fff1e 	bx	lr

0001cdd8 <fdt_check_header>:

int fdt_check_header(const void *fdt)
{
   1cdd8:	e92d4830 	push	{r4, r5, fp, lr}
   1cddc:	e28db00c 	add	fp, sp, #12
   1cde0:	e24dd010 	sub	sp, sp, #16
   1cde4:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
	size_t hdrsize;

	if (fdt_magic(fdt) != FDT_MAGIC)
   1cde8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cdec:	e1a00003 	mov	r0, r3
   1cdf0:	ebffff39 	bl	1cadc <fdt32_ld>
   1cdf4:	e1a02000 	mov	r2, r0
   1cdf8:	e30f3eed 	movw	r3, #65261	; 0xfeed
   1cdfc:	e34d300d 	movt	r3, #53261	; 0xd00d
   1ce00:	e1520003 	cmp	r2, r3
   1ce04:	0a000001 	beq	1ce10 <fdt_check_header+0x38>
		return -FDT_ERR_BADMAGIC;
   1ce08:	e3e03008 	mvn	r3, #8
   1ce0c:	ea00008f 	b	1d050 <fdt_check_header+0x278>
	hdrsize = fdt_header_size(fdt);
   1ce10:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce14:	ebffff40 	bl	1cb1c <fdt_header_size>
   1ce18:	e50b0010 	str	r0, [fp, #-16]
	if ((fdt_version(fdt) < FDT_FIRST_SUPPORTED_VERSION)
   1ce1c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce20:	e2833014 	add	r3, r3, #20
   1ce24:	e1a00003 	mov	r0, r3
   1ce28:	ebffff2b 	bl	1cadc <fdt32_ld>
   1ce2c:	e1a03000 	mov	r3, r0
   1ce30:	e3530001 	cmp	r3, #1
   1ce34:	9a000006 	bls	1ce54 <fdt_check_header+0x7c>
	    || (fdt_last_comp_version(fdt) > FDT_LAST_SUPPORTED_VERSION))
   1ce38:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce3c:	e2833018 	add	r3, r3, #24
   1ce40:	e1a00003 	mov	r0, r3
   1ce44:	ebffff24 	bl	1cadc <fdt32_ld>
   1ce48:	e1a03000 	mov	r3, r0
   1ce4c:	e3530011 	cmp	r3, #17
   1ce50:	9a000001 	bls	1ce5c <fdt_check_header+0x84>
		return -FDT_ERR_BADVERSION;
   1ce54:	e3e03009 	mvn	r3, #9
   1ce58:	ea00007c 	b	1d050 <fdt_check_header+0x278>
	if (fdt_version(fdt) < fdt_last_comp_version(fdt))
   1ce5c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce60:	e2833014 	add	r3, r3, #20
   1ce64:	e1a00003 	mov	r0, r3
   1ce68:	ebffff1b 	bl	1cadc <fdt32_ld>
   1ce6c:	e1a04000 	mov	r4, r0
   1ce70:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce74:	e2833018 	add	r3, r3, #24
   1ce78:	e1a00003 	mov	r0, r3
   1ce7c:	ebffff16 	bl	1cadc <fdt32_ld>
   1ce80:	e1a03000 	mov	r3, r0
   1ce84:	e1540003 	cmp	r4, r3
   1ce88:	2a000001 	bcs	1ce94 <fdt_check_header+0xbc>
		return -FDT_ERR_BADVERSION;
   1ce8c:	e3e03009 	mvn	r3, #9
   1ce90:	ea00006e 	b	1d050 <fdt_check_header+0x278>

	if ((fdt_totalsize(fdt) < hdrsize)
   1ce94:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce98:	e2833004 	add	r3, r3, #4
   1ce9c:	e1a00003 	mov	r0, r3
   1cea0:	ebffff0d 	bl	1cadc <fdt32_ld>
   1cea4:	e1a02000 	mov	r2, r0
   1cea8:	e51b3010 	ldr	r3, [fp, #-16]
   1ceac:	e1530002 	cmp	r3, r2
   1ceb0:	8a000006 	bhi	1ced0 <fdt_check_header+0xf8>
	    || (fdt_totalsize(fdt) > INT_MAX))
   1ceb4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ceb8:	e2833004 	add	r3, r3, #4
   1cebc:	e1a00003 	mov	r0, r3
   1cec0:	ebffff05 	bl	1cadc <fdt32_ld>
   1cec4:	e1a03000 	mov	r3, r0
   1cec8:	e3530000 	cmp	r3, #0
   1cecc:	aa000001 	bge	1ced8 <fdt_check_header+0x100>
		return -FDT_ERR_TRUNCATED;
   1ced0:	e3e03007 	mvn	r3, #7
   1ced4:	ea00005d 	b	1d050 <fdt_check_header+0x278>

	/* Bounds check memrsv block */
	if (!check_off_(hdrsize, fdt_totalsize(fdt), fdt_off_mem_rsvmap(fdt)))
   1ced8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cedc:	e2833004 	add	r3, r3, #4
   1cee0:	e1a00003 	mov	r0, r3
   1cee4:	ebfffefc 	bl	1cadc <fdt32_ld>
   1cee8:	e1a04000 	mov	r4, r0
   1ceec:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cef0:	e2833010 	add	r3, r3, #16
   1cef4:	e1a00003 	mov	r0, r3
   1cef8:	ebfffef7 	bl	1cadc <fdt32_ld>
   1cefc:	e1a03000 	mov	r3, r0
   1cf00:	e1a02003 	mov	r2, r3
   1cf04:	e1a01004 	mov	r1, r4
   1cf08:	e51b0010 	ldr	r0, [fp, #-16]
   1cf0c:	ebffff57 	bl	1cc70 <check_off_>
   1cf10:	e1a03000 	mov	r3, r0
   1cf14:	e3530000 	cmp	r3, #0
   1cf18:	1a000001 	bne	1cf24 <fdt_check_header+0x14c>
		return -FDT_ERR_TRUNCATED;
   1cf1c:	e3e03007 	mvn	r3, #7
   1cf20:	ea00004a 	b	1d050 <fdt_check_header+0x278>

	/* Bounds check structure block */
	if (fdt_version(fdt) < 17) {
   1cf24:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf28:	e2833014 	add	r3, r3, #20
   1cf2c:	e1a00003 	mov	r0, r3
   1cf30:	ebfffee9 	bl	1cadc <fdt32_ld>
   1cf34:	e1a03000 	mov	r3, r0
   1cf38:	e3530010 	cmp	r3, #16
   1cf3c:	8a000012 	bhi	1cf8c <fdt_check_header+0x1b4>
		if (!check_off_(hdrsize, fdt_totalsize(fdt),
   1cf40:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf44:	e2833004 	add	r3, r3, #4
   1cf48:	e1a00003 	mov	r0, r3
   1cf4c:	ebfffee2 	bl	1cadc <fdt32_ld>
   1cf50:	e1a04000 	mov	r4, r0
   1cf54:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf58:	e2833008 	add	r3, r3, #8
   1cf5c:	e1a00003 	mov	r0, r3
   1cf60:	ebfffedd 	bl	1cadc <fdt32_ld>
   1cf64:	e1a03000 	mov	r3, r0
   1cf68:	e1a02003 	mov	r2, r3
   1cf6c:	e1a01004 	mov	r1, r4
   1cf70:	e51b0010 	ldr	r0, [fp, #-16]
   1cf74:	ebffff3d 	bl	1cc70 <check_off_>
   1cf78:	e1a03000 	mov	r3, r0
   1cf7c:	e3530000 	cmp	r3, #0
   1cf80:	1a000019 	bne	1cfec <fdt_check_header+0x214>
				fdt_off_dt_struct(fdt)))
			return -FDT_ERR_TRUNCATED;
   1cf84:	e3e03007 	mvn	r3, #7
   1cf88:	ea000030 	b	1d050 <fdt_check_header+0x278>
	} else {
		if (!check_block_(hdrsize, fdt_totalsize(fdt),
   1cf8c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cf90:	e2833004 	add	r3, r3, #4
   1cf94:	e1a00003 	mov	r0, r3
   1cf98:	ebfffecf 	bl	1cadc <fdt32_ld>
   1cf9c:	e1a04000 	mov	r4, r0
   1cfa0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfa4:	e2833008 	add	r3, r3, #8
   1cfa8:	e1a00003 	mov	r0, r3
   1cfac:	ebfffeca 	bl	1cadc <fdt32_ld>
   1cfb0:	e1a05000 	mov	r5, r0
   1cfb4:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cfb8:	e2833024 	add	r3, r3, #36	; 0x24
   1cfbc:	e1a00003 	mov	r0, r3
   1cfc0:	ebfffec5 	bl	1cadc <fdt32_ld>
   1cfc4:	e1a03000 	mov	r3, r0
   1cfc8:	e1a02005 	mov	r2, r5
   1cfcc:	e1a01004 	mov	r1, r4
   1cfd0:	e51b0010 	ldr	r0, [fp, #-16]
   1cfd4:	ebffff3a 	bl	1ccc4 <check_block_>
   1cfd8:	e1a03000 	mov	r3, r0
   1cfdc:	e3530000 	cmp	r3, #0
   1cfe0:	1a000001 	bne	1cfec <fdt_check_header+0x214>
				  fdt_off_dt_struct(fdt),
				  fdt_size_dt_struct(fdt)))
			return -FDT_ERR_TRUNCATED;
   1cfe4:	e3e03007 	mvn	r3, #7
   1cfe8:	ea000018 	b	1d050 <fdt_check_header+0x278>
	}

	/* Bounds check strings block */
	if (!check_block_(hdrsize, fdt_totalsize(fdt),
   1cfec:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cff0:	e2833004 	add	r3, r3, #4
   1cff4:	e1a00003 	mov	r0, r3
   1cff8:	ebfffeb7 	bl	1cadc <fdt32_ld>
   1cffc:	e1a04000 	mov	r4, r0
   1d000:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d004:	e283300c 	add	r3, r3, #12
   1d008:	e1a00003 	mov	r0, r3
   1d00c:	ebfffeb2 	bl	1cadc <fdt32_ld>
   1d010:	e1a05000 	mov	r5, r0
   1d014:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d018:	e2833020 	add	r3, r3, #32
   1d01c:	e1a00003 	mov	r0, r3
   1d020:	ebfffead 	bl	1cadc <fdt32_ld>
   1d024:	e1a03000 	mov	r3, r0
   1d028:	e1a02005 	mov	r2, r5
   1d02c:	e1a01004 	mov	r1, r4
   1d030:	e51b0010 	ldr	r0, [fp, #-16]
   1d034:	ebffff22 	bl	1ccc4 <check_block_>
   1d038:	e1a03000 	mov	r3, r0
   1d03c:	e3530000 	cmp	r3, #0
   1d040:	1a000001 	bne	1d04c <fdt_check_header+0x274>
			  fdt_off_dt_strings(fdt), fdt_size_dt_strings(fdt)))
		return -FDT_ERR_TRUNCATED;
   1d044:	e3e03007 	mvn	r3, #7
   1d048:	ea000000 	b	1d050 <fdt_check_header+0x278>

	return 0;
   1d04c:	e3a03000 	mov	r3, #0
}
   1d050:	e1a00003 	mov	r0, r3
   1d054:	e24bd00c 	sub	sp, fp, #12
   1d058:	e8bd8830 	pop	{r4, r5, fp, pc}

0001d05c <fdt_offset_ptr>:

const void *fdt_offset_ptr(const void *fdt, int offset, unsigned int len)
{
   1d05c:	e92d4810 	push	{r4, fp, lr}
   1d060:	e28db008 	add	fp, sp, #8
   1d064:	e24dd01c 	sub	sp, sp, #28
   1d068:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1d06c:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1d070:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
	unsigned absoffset = offset + fdt_off_dt_struct(fdt);
   1d074:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d078:	e2833008 	add	r3, r3, #8
   1d07c:	e1a00003 	mov	r0, r3
   1d080:	ebfffe95 	bl	1cadc <fdt32_ld>
   1d084:	e1a02000 	mov	r2, r0
   1d088:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d08c:	e0823003 	add	r3, r2, r3
   1d090:	e50b3010 	str	r3, [fp, #-16]

	if ((absoffset < offset)
   1d094:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d098:	e51b2010 	ldr	r2, [fp, #-16]
   1d09c:	e1520003 	cmp	r2, r3
   1d0a0:	3a00000f 	bcc	1d0e4 <fdt_offset_ptr+0x88>
	    || ((absoffset + len) < absoffset)
   1d0a4:	e51b2010 	ldr	r2, [fp, #-16]
   1d0a8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d0ac:	e0823003 	add	r3, r2, r3
   1d0b0:	e51b2010 	ldr	r2, [fp, #-16]
   1d0b4:	e1520003 	cmp	r2, r3
   1d0b8:	8a000009 	bhi	1d0e4 <fdt_offset_ptr+0x88>
	    || (absoffset + len) > fdt_totalsize(fdt))
   1d0bc:	e51b2010 	ldr	r2, [fp, #-16]
   1d0c0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d0c4:	e0824003 	add	r4, r2, r3
   1d0c8:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d0cc:	e2833004 	add	r3, r3, #4
   1d0d0:	e1a00003 	mov	r0, r3
   1d0d4:	ebfffe80 	bl	1cadc <fdt32_ld>
   1d0d8:	e1a03000 	mov	r3, r0
   1d0dc:	e1540003 	cmp	r4, r3
   1d0e0:	9a000001 	bls	1d0ec <fdt_offset_ptr+0x90>
		return NULL;
   1d0e4:	e3a03000 	mov	r3, #0
   1d0e8:	ea00001c 	b	1d160 <fdt_offset_ptr+0x104>

	if (fdt_version(fdt) >= 0x11)
   1d0ec:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d0f0:	e2833014 	add	r3, r3, #20
   1d0f4:	e1a00003 	mov	r0, r3
   1d0f8:	ebfffe77 	bl	1cadc <fdt32_ld>
   1d0fc:	e1a03000 	mov	r3, r0
   1d100:	e3530010 	cmp	r3, #16
   1d104:	9a000011 	bls	1d150 <fdt_offset_ptr+0xf4>
		if (((offset + len) < offset)
   1d108:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d10c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d110:	e0822003 	add	r2, r2, r3
   1d114:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d118:	e1520003 	cmp	r2, r3
   1d11c:	3a000009 	bcc	1d148 <fdt_offset_ptr+0xec>
		    || ((offset + len) > fdt_size_dt_struct(fdt)))
   1d120:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d124:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d128:	e0824003 	add	r4, r2, r3
   1d12c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d130:	e2833024 	add	r3, r3, #36	; 0x24
   1d134:	e1a00003 	mov	r0, r3
   1d138:	ebfffe67 	bl	1cadc <fdt32_ld>
   1d13c:	e1a03000 	mov	r3, r0
   1d140:	e1540003 	cmp	r4, r3
   1d144:	9a000001 	bls	1d150 <fdt_offset_ptr+0xf4>
			return NULL;
   1d148:	e3a03000 	mov	r3, #0
   1d14c:	ea000003 	b	1d160 <fdt_offset_ptr+0x104>

	return fdt_offset_ptr_(fdt, offset);
   1d150:	e51b101c 	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d154:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d158:	ebfffe7e 	bl	1cb58 <fdt_offset_ptr_>
   1d15c:	e1a03000 	mov	r3, r0
}
   1d160:	e1a00003 	mov	r0, r3
   1d164:	e24bd008 	sub	sp, fp, #8
   1d168:	e8bd8810 	pop	{r4, fp, pc}

0001d16c <fdt_next_tag>:

uint32_t fdt_next_tag(const void *fdt, int startoffset, int *nextoffset)
{
   1d16c:	e92d4810 	push	{r4, fp, lr}
   1d170:	e28db008 	add	fp, sp, #8
   1d174:	e24dd02c 	sub	sp, sp, #44	; 0x2c
   1d178:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8
   1d17c:	e50b102c 	str	r1, [fp, #-44]	; 0xffffffd4
   1d180:	e50b2030 	str	r2, [fp, #-48]	; 0xffffffd0
	const fdt32_t *tagp, *lenp;
	uint32_t tag;
	int offset = startoffset;
   1d184:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d188:	e50b3010 	str	r3, [fp, #-16]
	const char *p;

	*nextoffset = -FDT_ERR_TRUNCATED;
   1d18c:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d190:	e3e02007 	mvn	r2, #7
   1d194:	e5832000 	str	r2, [r3]
	tagp = fdt_offset_ptr(fdt, offset, FDT_TAGSIZE);
   1d198:	e3a02004 	mov	r2, #4
   1d19c:	e51b1010 	ldr	r1, [fp, #-16]
   1d1a0:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d1a4:	ebffffac 	bl	1d05c <fdt_offset_ptr>
   1d1a8:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
	if (!tagp)
   1d1ac:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1b0:	e3530000 	cmp	r3, #0
   1d1b4:	1a000001 	bne	1d1c0 <fdt_next_tag+0x54>
		return FDT_END; /* premature end */
   1d1b8:	e3a03009 	mov	r3, #9
   1d1bc:	ea000075 	b	1d398 <fdt_next_tag+0x22c>
	tag = fdt32_to_cpu(*tagp);
   1d1c0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1c4:	e5933000 	ldr	r3, [r3]
   1d1c8:	e1a00003 	mov	r0, r3
   1d1cc:	ebfffe29 	bl	1ca78 <fdt32_to_cpu>
   1d1d0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
	offset += FDT_TAGSIZE;
   1d1d4:	e51b3010 	ldr	r3, [fp, #-16]
   1d1d8:	e2833004 	add	r3, r3, #4
   1d1dc:	e50b3010 	str	r3, [fp, #-16]

	*nextoffset = -FDT_ERR_BADSTRUCTURE;
   1d1e0:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d1e4:	e3e0200a 	mvn	r2, #10
   1d1e8:	e5832000 	str	r2, [r3]
   1d1ec:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d1f0:	e2433001 	sub	r3, r3, #1
   1d1f4:	e3530008 	cmp	r3, #8
   1d1f8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   1d1fc:	ea00004c 	b	1d334 <fdt_next_tag+0x1c8>
   1d200:	0001d228 	andeq	sp, r1, r8, lsr #4
   1d204:	0001d33c 	andeq	sp, r1, ip, lsr r3
   1d208:	0001d278 	andeq	sp, r1, r8, ror r2
   1d20c:	0001d33c 	andeq	sp, r1, ip, lsr r3
   1d210:	0001d334 	andeq	sp, r1, r4, lsr r3
   1d214:	0001d334 	andeq	sp, r1, r4, lsr r3
   1d218:	0001d334 	andeq	sp, r1, r4, lsr r3
   1d21c:	0001d334 	andeq	sp, r1, r4, lsr r3
   1d220:	0001d33c 	andeq	sp, r1, ip, lsr r3
	switch (tag) {
	case FDT_BEGIN_NODE:
   1d224:	e320f000 	nop	{0}
		/* skip name */
		do {
			p = fdt_offset_ptr(fdt, offset++, 1);
   1d228:	e51b3010 	ldr	r3, [fp, #-16]
   1d22c:	e2832001 	add	r2, r3, #1
   1d230:	e50b2010 	str	r2, [fp, #-16]
   1d234:	e3a02001 	mov	r2, #1
   1d238:	e1a01003 	mov	r1, r3
   1d23c:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d240:	ebffff85 	bl	1d05c <fdt_offset_ptr>
   1d244:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
		} while (p && (*p != '\0'));
   1d248:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d24c:	e3530000 	cmp	r3, #0
   1d250:	0a000003 	beq	1d264 <fdt_next_tag+0xf8>
   1d254:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d258:	e5d33000 	ldrb	r3, [r3]
   1d25c:	e3530000 	cmp	r3, #0
   1d260:	1affffef 	bne	1d224 <fdt_next_tag+0xb8>
		if (!p)
   1d264:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d268:	e3530000 	cmp	r3, #0
   1d26c:	1a000034 	bne	1d344 <fdt_next_tag+0x1d8>
			return FDT_END; /* premature end */
   1d270:	e3a03009 	mov	r3, #9
   1d274:	ea000047 	b	1d398 <fdt_next_tag+0x22c>
		break;

	case FDT_PROP:
		lenp = fdt_offset_ptr(fdt, offset, sizeof(*lenp));
   1d278:	e3a02004 	mov	r2, #4
   1d27c:	e51b1010 	ldr	r1, [fp, #-16]
   1d280:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d284:	ebffff74 	bl	1d05c <fdt_offset_ptr>
   1d288:	e50b001c 	str	r0, [fp, #-28]	; 0xffffffe4
		if (!lenp)
   1d28c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d290:	e3530000 	cmp	r3, #0
   1d294:	1a000001 	bne	1d2a0 <fdt_next_tag+0x134>
			return FDT_END; /* premature end */
   1d298:	e3a03009 	mov	r3, #9
   1d29c:	ea00003d 	b	1d398 <fdt_next_tag+0x22c>
		/* skip-name offset, length and value */
		offset += sizeof(struct fdt_property) - FDT_TAGSIZE
			+ fdt32_to_cpu(*lenp);
   1d2a0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2a4:	e5933000 	ldr	r3, [r3]
   1d2a8:	e1a00003 	mov	r0, r3
   1d2ac:	ebfffdf1 	bl	1ca78 <fdt32_to_cpu>
   1d2b0:	e1a03000 	mov	r3, r0
   1d2b4:	e2832008 	add	r2, r3, #8
		offset += sizeof(struct fdt_property) - FDT_TAGSIZE
   1d2b8:	e51b3010 	ldr	r3, [fp, #-16]
   1d2bc:	e0823003 	add	r3, r2, r3
   1d2c0:	e50b3010 	str	r3, [fp, #-16]
		if (fdt_version(fdt) < 0x10 && fdt32_to_cpu(*lenp) >= 8 &&
   1d2c4:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d2c8:	e2833014 	add	r3, r3, #20
   1d2cc:	e1a00003 	mov	r0, r3
   1d2d0:	ebfffe01 	bl	1cadc <fdt32_ld>
   1d2d4:	e1a03000 	mov	r3, r0
   1d2d8:	e353000f 	cmp	r3, #15
   1d2dc:	8a00001a 	bhi	1d34c <fdt_next_tag+0x1e0>
   1d2e0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2e4:	e5933000 	ldr	r3, [r3]
   1d2e8:	e1a00003 	mov	r0, r3
   1d2ec:	ebfffde1 	bl	1ca78 <fdt32_to_cpu>
   1d2f0:	e1a03000 	mov	r3, r0
   1d2f4:	e3530007 	cmp	r3, #7
   1d2f8:	9a000013 	bls	1d34c <fdt_next_tag+0x1e0>
		    ((offset - fdt32_to_cpu(*lenp)) % 8) != 0)
   1d2fc:	e51b4010 	ldr	r4, [fp, #-16]
   1d300:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d304:	e5933000 	ldr	r3, [r3]
   1d308:	e1a00003 	mov	r0, r3
   1d30c:	ebfffdd9 	bl	1ca78 <fdt32_to_cpu>
   1d310:	e1a03000 	mov	r3, r0
   1d314:	e0443003 	sub	r3, r4, r3
   1d318:	e2033007 	and	r3, r3, #7
		if (fdt_version(fdt) < 0x10 && fdt32_to_cpu(*lenp) >= 8 &&
   1d31c:	e3530000 	cmp	r3, #0
   1d320:	0a000009 	beq	1d34c <fdt_next_tag+0x1e0>
			offset += 4;
   1d324:	e51b3010 	ldr	r3, [fp, #-16]
   1d328:	e2833004 	add	r3, r3, #4
   1d32c:	e50b3010 	str	r3, [fp, #-16]
		break;
   1d330:	ea000005 	b	1d34c <fdt_next_tag+0x1e0>
	case FDT_END_NODE:
	case FDT_NOP:
		break;

	default:
		return FDT_END;
   1d334:	e3a03009 	mov	r3, #9
   1d338:	ea000016 	b	1d398 <fdt_next_tag+0x22c>
		break;
   1d33c:	e320f000 	nop	{0}
   1d340:	ea000002 	b	1d350 <fdt_next_tag+0x1e4>
		break;
   1d344:	e320f000 	nop	{0}
   1d348:	ea000000 	b	1d350 <fdt_next_tag+0x1e4>
		break;
   1d34c:	e320f000 	nop	{0}
	}

	if (!fdt_offset_ptr(fdt, startoffset, offset - startoffset))
   1d350:	e51b2010 	ldr	r2, [fp, #-16]
   1d354:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d358:	e0423003 	sub	r3, r2, r3
   1d35c:	e1a02003 	mov	r2, r3
   1d360:	e51b102c 	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d364:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d368:	ebffff3b 	bl	1d05c <fdt_offset_ptr>
   1d36c:	e1a03000 	mov	r3, r0
   1d370:	e3530000 	cmp	r3, #0
   1d374:	1a000001 	bne	1d380 <fdt_next_tag+0x214>
		return FDT_END; /* premature end */
   1d378:	e3a03009 	mov	r3, #9
   1d37c:	ea000005 	b	1d398 <fdt_next_tag+0x22c>

	*nextoffset = FDT_TAGALIGN(offset);
   1d380:	e51b3010 	ldr	r3, [fp, #-16]
   1d384:	e2833003 	add	r3, r3, #3
   1d388:	e3c32003 	bic	r2, r3, #3
   1d38c:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d390:	e5832000 	str	r2, [r3]
	return tag;
   1d394:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
}
   1d398:	e1a00003 	mov	r0, r3
   1d39c:	e24bd008 	sub	sp, fp, #8
   1d3a0:	e8bd8810 	pop	{r4, fp, pc}

0001d3a4 <fdt_check_node_offset_>:

int fdt_check_node_offset_(const void *fdt, int offset)
{
   1d3a4:	e92d4800 	push	{fp, lr}
   1d3a8:	e28db004 	add	fp, sp, #4
   1d3ac:	e24dd008 	sub	sp, sp, #8
   1d3b0:	e50b0008 	str	r0, [fp, #-8]
   1d3b4:	e50b100c 	str	r1, [fp, #-12]
	if ((offset < 0) || (offset % FDT_TAGSIZE)
   1d3b8:	e51b300c 	ldr	r3, [fp, #-12]
   1d3bc:	e3530000 	cmp	r3, #0
   1d3c0:	ba00000b 	blt	1d3f4 <fdt_check_node_offset_+0x50>
   1d3c4:	e51b300c 	ldr	r3, [fp, #-12]
   1d3c8:	e2033003 	and	r3, r3, #3
   1d3cc:	e3530000 	cmp	r3, #0
   1d3d0:	1a000007 	bne	1d3f4 <fdt_check_node_offset_+0x50>
	    || (fdt_next_tag(fdt, offset, &offset) != FDT_BEGIN_NODE))
   1d3d4:	e51b300c 	ldr	r3, [fp, #-12]
   1d3d8:	e24b200c 	sub	r2, fp, #12
   1d3dc:	e1a01003 	mov	r1, r3
   1d3e0:	e51b0008 	ldr	r0, [fp, #-8]
   1d3e4:	ebffff60 	bl	1d16c <fdt_next_tag>
   1d3e8:	e1a03000 	mov	r3, r0
   1d3ec:	e3530001 	cmp	r3, #1
   1d3f0:	0a000001 	beq	1d3fc <fdt_check_node_offset_+0x58>
		return -FDT_ERR_BADOFFSET;
   1d3f4:	e3e03003 	mvn	r3, #3
   1d3f8:	ea000000 	b	1d400 <fdt_check_node_offset_+0x5c>

	return offset;
   1d3fc:	e51b300c 	ldr	r3, [fp, #-12]
}
   1d400:	e1a00003 	mov	r0, r3
   1d404:	e24bd004 	sub	sp, fp, #4
   1d408:	e8bd8800 	pop	{fp, pc}

0001d40c <fdt_check_prop_offset_>:

int fdt_check_prop_offset_(const void *fdt, int offset)
{
   1d40c:	e92d4800 	push	{fp, lr}
   1d410:	e28db004 	add	fp, sp, #4
   1d414:	e24dd008 	sub	sp, sp, #8
   1d418:	e50b0008 	str	r0, [fp, #-8]
   1d41c:	e50b100c 	str	r1, [fp, #-12]
	if ((offset < 0) || (offset % FDT_TAGSIZE)
   1d420:	e51b300c 	ldr	r3, [fp, #-12]
   1d424:	e3530000 	cmp	r3, #0
   1d428:	ba00000b 	blt	1d45c <fdt_check_prop_offset_+0x50>
   1d42c:	e51b300c 	ldr	r3, [fp, #-12]
   1d430:	e2033003 	and	r3, r3, #3
   1d434:	e3530000 	cmp	r3, #0
   1d438:	1a000007 	bne	1d45c <fdt_check_prop_offset_+0x50>
	    || (fdt_next_tag(fdt, offset, &offset) != FDT_PROP))
   1d43c:	e51b300c 	ldr	r3, [fp, #-12]
   1d440:	e24b200c 	sub	r2, fp, #12
   1d444:	e1a01003 	mov	r1, r3
   1d448:	e51b0008 	ldr	r0, [fp, #-8]
   1d44c:	ebffff46 	bl	1d16c <fdt_next_tag>
   1d450:	e1a03000 	mov	r3, r0
   1d454:	e3530003 	cmp	r3, #3
   1d458:	0a000001 	beq	1d464 <fdt_check_prop_offset_+0x58>
		return -FDT_ERR_BADOFFSET;
   1d45c:	e3e03003 	mvn	r3, #3
   1d460:	ea000000 	b	1d468 <fdt_check_prop_offset_+0x5c>

	return offset;
   1d464:	e51b300c 	ldr	r3, [fp, #-12]
}
   1d468:	e1a00003 	mov	r0, r3
   1d46c:	e24bd004 	sub	sp, fp, #4
   1d470:	e8bd8800 	pop	{fp, pc}

0001d474 <fdt_next_node>:

int fdt_next_node(const void *fdt, int offset, int *depth)
{
   1d474:	e92d4800 	push	{fp, lr}
   1d478:	e28db004 	add	fp, sp, #4
   1d47c:	e24dd018 	sub	sp, sp, #24
   1d480:	e50b0010 	str	r0, [fp, #-16]
   1d484:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1d488:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	int nextoffset = 0;
   1d48c:	e3a03000 	mov	r3, #0
   1d490:	e50b300c 	str	r3, [fp, #-12]
	uint32_t tag;

	if (offset >= 0)
   1d494:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1d498:	e3530000 	cmp	r3, #0
   1d49c:	ba000009 	blt	1d4c8 <fdt_next_node+0x54>
		if ((nextoffset = fdt_check_node_offset_(fdt, offset)) < 0)
   1d4a0:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1d4a4:	e51b0010 	ldr	r0, [fp, #-16]
   1d4a8:	ebffffbd 	bl	1d3a4 <fdt_check_node_offset_>
   1d4ac:	e1a03000 	mov	r3, r0
   1d4b0:	e50b300c 	str	r3, [fp, #-12]
   1d4b4:	e51b300c 	ldr	r3, [fp, #-12]
   1d4b8:	e3530000 	cmp	r3, #0
   1d4bc:	aa000001 	bge	1d4c8 <fdt_next_node+0x54>
			return nextoffset;
   1d4c0:	e51b300c 	ldr	r3, [fp, #-12]
   1d4c4:	ea000040 	b	1d5cc <fdt_next_node+0x158>

	do {
		offset = nextoffset;
   1d4c8:	e51b300c 	ldr	r3, [fp, #-12]
   1d4cc:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
		tag = fdt_next_tag(fdt, offset, &nextoffset);
   1d4d0:	e24b300c 	sub	r3, fp, #12
   1d4d4:	e1a02003 	mov	r2, r3
   1d4d8:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1d4dc:	e51b0010 	ldr	r0, [fp, #-16]
   1d4e0:	ebffff21 	bl	1d16c <fdt_next_tag>
   1d4e4:	e50b0008 	str	r0, [fp, #-8]
   1d4e8:	e51b3008 	ldr	r3, [fp, #-8]
   1d4ec:	e2433001 	sub	r3, r3, #1
   1d4f0:	e3530008 	cmp	r3, #8
   1d4f4:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   1d4f8:	ea00002f 	b	1d5bc <fdt_next_node+0x148>
   1d4fc:	0001d520 	andeq	sp, r1, r0, lsr #10
   1d500:	0001d544 	andeq	sp, r1, r4, asr #10
   1d504:	0001d5bc 			; <UNDEFINED> instruction: 0x0001d5bc
   1d508:	0001d5bc 			; <UNDEFINED> instruction: 0x0001d5bc
   1d50c:	0001d5bc 			; <UNDEFINED> instruction: 0x0001d5bc
   1d510:	0001d5bc 			; <UNDEFINED> instruction: 0x0001d5bc
   1d514:	0001d5bc 			; <UNDEFINED> instruction: 0x0001d5bc
   1d518:	0001d5bc 			; <UNDEFINED> instruction: 0x0001d5bc
   1d51c:	0001d57c 	andeq	sp, r1, ip, ror r5
		case FDT_PROP:
		case FDT_NOP:
			break;

		case FDT_BEGIN_NODE:
			if (depth)
   1d520:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d524:	e3530000 	cmp	r3, #0
   1d528:	0a000020 	beq	1d5b0 <fdt_next_node+0x13c>
				(*depth)++;
   1d52c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d530:	e5933000 	ldr	r3, [r3]
   1d534:	e2832001 	add	r2, r3, #1
   1d538:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d53c:	e5832000 	str	r2, [r3]
			break;
   1d540:	ea00001a 	b	1d5b0 <fdt_next_node+0x13c>

		case FDT_END_NODE:
			if (depth && ((--(*depth)) < 0))
   1d544:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d548:	e3530000 	cmp	r3, #0
   1d54c:	0a000019 	beq	1d5b8 <fdt_next_node+0x144>
   1d550:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d554:	e5933000 	ldr	r3, [r3]
   1d558:	e2432001 	sub	r2, r3, #1
   1d55c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d560:	e5832000 	str	r2, [r3]
   1d564:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d568:	e5933000 	ldr	r3, [r3]
   1d56c:	e3530000 	cmp	r3, #0
   1d570:	aa000010 	bge	1d5b8 <fdt_next_node+0x144>
				return nextoffset;
   1d574:	e51b300c 	ldr	r3, [fp, #-12]
   1d578:	ea000013 	b	1d5cc <fdt_next_node+0x158>
			break;

		case FDT_END:
			if ((nextoffset >= 0)
   1d57c:	e51b300c 	ldr	r3, [fp, #-12]
   1d580:	e3530000 	cmp	r3, #0
   1d584:	aa000005 	bge	1d5a0 <fdt_next_node+0x12c>
			    || ((nextoffset == -FDT_ERR_TRUNCATED) && !depth))
   1d588:	e51b300c 	ldr	r3, [fp, #-12]
   1d58c:	e3730008 	cmn	r3, #8
   1d590:	1a000004 	bne	1d5a8 <fdt_next_node+0x134>
   1d594:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d598:	e3530000 	cmp	r3, #0
   1d59c:	1a000001 	bne	1d5a8 <fdt_next_node+0x134>
				return -FDT_ERR_NOTFOUND;
   1d5a0:	e3e03000 	mvn	r3, #0
   1d5a4:	ea000008 	b	1d5cc <fdt_next_node+0x158>
			else
				return nextoffset;
   1d5a8:	e51b300c 	ldr	r3, [fp, #-12]
   1d5ac:	ea000006 	b	1d5cc <fdt_next_node+0x158>
			break;
   1d5b0:	e320f000 	nop	{0}
   1d5b4:	ea000000 	b	1d5bc <fdt_next_node+0x148>
			break;
   1d5b8:	e320f000 	nop	{0}
		}
	} while (tag != FDT_BEGIN_NODE);
   1d5bc:	e51b3008 	ldr	r3, [fp, #-8]
   1d5c0:	e3530001 	cmp	r3, #1
   1d5c4:	1affffbf 	bne	1d4c8 <fdt_next_node+0x54>

	return offset;
   1d5c8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   1d5cc:	e1a00003 	mov	r0, r3
   1d5d0:	e24bd004 	sub	sp, fp, #4
   1d5d4:	e8bd8800 	pop	{fp, pc}

0001d5d8 <fdt_first_subnode>:

int fdt_first_subnode(const void *fdt, int offset)
{
   1d5d8:	e92d4800 	push	{fp, lr}
   1d5dc:	e28db004 	add	fp, sp, #4
   1d5e0:	e24dd010 	sub	sp, sp, #16
   1d5e4:	e50b0010 	str	r0, [fp, #-16]
   1d5e8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int depth = 0;
   1d5ec:	e3a03000 	mov	r3, #0
   1d5f0:	e50b3008 	str	r3, [fp, #-8]

	offset = fdt_next_node(fdt, offset, &depth);
   1d5f4:	e24b3008 	sub	r3, fp, #8
   1d5f8:	e1a02003 	mov	r2, r3
   1d5fc:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1d600:	e51b0010 	ldr	r0, [fp, #-16]
   1d604:	ebffff9a 	bl	1d474 <fdt_next_node>
   1d608:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
	if (offset < 0 || depth != 1)
   1d60c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1d610:	e3530000 	cmp	r3, #0
   1d614:	ba000002 	blt	1d624 <fdt_first_subnode+0x4c>
   1d618:	e51b3008 	ldr	r3, [fp, #-8]
   1d61c:	e3530001 	cmp	r3, #1
   1d620:	0a000001 	beq	1d62c <fdt_first_subnode+0x54>
		return -FDT_ERR_NOTFOUND;
   1d624:	e3e03000 	mvn	r3, #0
   1d628:	ea000000 	b	1d630 <fdt_first_subnode+0x58>

	return offset;
   1d62c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   1d630:	e1a00003 	mov	r0, r3
   1d634:	e24bd004 	sub	sp, fp, #4
   1d638:	e8bd8800 	pop	{fp, pc}

0001d63c <fdt_next_subnode>:

int fdt_next_subnode(const void *fdt, int offset)
{
   1d63c:	e92d4800 	push	{fp, lr}
   1d640:	e28db004 	add	fp, sp, #4
   1d644:	e24dd010 	sub	sp, sp, #16
   1d648:	e50b0010 	str	r0, [fp, #-16]
   1d64c:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	int depth = 1;
   1d650:	e3a03001 	mov	r3, #1
   1d654:	e50b3008 	str	r3, [fp, #-8]
	/*
	 * With respect to the parent, the depth of the next subnode will be
	 * the same as the last.
	 */
	do {
		offset = fdt_next_node(fdt, offset, &depth);
   1d658:	e24b3008 	sub	r3, fp, #8
   1d65c:	e1a02003 	mov	r2, r3
   1d660:	e51b1014 	ldr	r1, [fp, #-20]	; 0xffffffec
   1d664:	e51b0010 	ldr	r0, [fp, #-16]
   1d668:	ebffff81 	bl	1d474 <fdt_next_node>
   1d66c:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
		if (offset < 0 || depth < 1)
   1d670:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1d674:	e3530000 	cmp	r3, #0
   1d678:	ba000002 	blt	1d688 <fdt_next_subnode+0x4c>
   1d67c:	e51b3008 	ldr	r3, [fp, #-8]
   1d680:	e3530000 	cmp	r3, #0
   1d684:	ca000001 	bgt	1d690 <fdt_next_subnode+0x54>
			return -FDT_ERR_NOTFOUND;
   1d688:	e3e03000 	mvn	r3, #0
   1d68c:	ea000003 	b	1d6a0 <fdt_next_subnode+0x64>
	} while (depth > 1);
   1d690:	e51b3008 	ldr	r3, [fp, #-8]
   1d694:	e3530001 	cmp	r3, #1
   1d698:	caffffee 	bgt	1d658 <fdt_next_subnode+0x1c>

	return offset;
   1d69c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
}
   1d6a0:	e1a00003 	mov	r0, r3
   1d6a4:	e24bd004 	sub	sp, fp, #4
   1d6a8:	e8bd8800 	pop	{fp, pc}

0001d6ac <fdt_find_string_>:

const char *fdt_find_string_(const char *strtab, int tabsize, const char *s)
{
   1d6ac:	e92d4800 	push	{fp, lr}
   1d6b0:	e28db004 	add	fp, sp, #4
   1d6b4:	e24dd020 	sub	sp, sp, #32
   1d6b8:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1d6bc:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1d6c0:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
	int len = strlen(s) + 1;
   1d6c4:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d6c8:	eb0011fb 	bl	21ebc <strlen>
   1d6cc:	e1a03000 	mov	r3, r0
   1d6d0:	e2833001 	add	r3, r3, #1
   1d6d4:	e50b300c 	str	r3, [fp, #-12]
	const char *last = strtab + tabsize - len;
   1d6d8:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d6dc:	e51b300c 	ldr	r3, [fp, #-12]
   1d6e0:	e0423003 	sub	r3, r2, r3
   1d6e4:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d6e8:	e0823003 	add	r3, r2, r3
   1d6ec:	e50b3010 	str	r3, [fp, #-16]
	const char *p;

	for (p = strtab; p <= last; p++)
   1d6f0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d6f4:	e50b3008 	str	r3, [fp, #-8]
   1d6f8:	ea00000c 	b	1d730 <fdt_find_string_+0x84>
		if (memcmp(p, s, len) == 0)
   1d6fc:	e51b300c 	ldr	r3, [fp, #-12]
   1d700:	e1a02003 	mov	r2, r3
   1d704:	e51b1020 	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d708:	e51b0008 	ldr	r0, [fp, #-8]
   1d70c:	eb00111b 	bl	21b80 <memcmp>
   1d710:	e1a03000 	mov	r3, r0
   1d714:	e3530000 	cmp	r3, #0
   1d718:	1a000001 	bne	1d724 <fdt_find_string_+0x78>
			return p;
   1d71c:	e51b3008 	ldr	r3, [fp, #-8]
   1d720:	ea000007 	b	1d744 <fdt_find_string_+0x98>
	for (p = strtab; p <= last; p++)
   1d724:	e51b3008 	ldr	r3, [fp, #-8]
   1d728:	e2833001 	add	r3, r3, #1
   1d72c:	e50b3008 	str	r3, [fp, #-8]
   1d730:	e51b2008 	ldr	r2, [fp, #-8]
   1d734:	e51b3010 	ldr	r3, [fp, #-16]
   1d738:	e1520003 	cmp	r2, r3
   1d73c:	9affffee 	bls	1d6fc <fdt_find_string_+0x50>
	return NULL;
   1d740:	e3a03000 	mov	r3, #0
}
   1d744:	e1a00003 	mov	r0, r3
   1d748:	e24bd004 	sub	sp, fp, #4
   1d74c:	e8bd8800 	pop	{fp, pc}

0001d750 <fdt_move>:

int fdt_move(const void *fdt, void *buf, int bufsize)
{
   1d750:	e92d4800 	push	{fp, lr}
   1d754:	e28db004 	add	fp, sp, #4
   1d758:	e24dd018 	sub	sp, sp, #24
   1d75c:	e50b0010 	str	r0, [fp, #-16]
   1d760:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
   1d764:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	FDT_RO_PROBE(fdt);
   1d768:	e51b0010 	ldr	r0, [fp, #-16]
   1d76c:	ebfffd0a 	bl	1cb9c <fdt_ro_probe_>
   1d770:	e50b0008 	str	r0, [fp, #-8]
   1d774:	e51b3008 	ldr	r3, [fp, #-8]
   1d778:	e3530000 	cmp	r3, #0
   1d77c:	0a000001 	beq	1d788 <fdt_move+0x38>
   1d780:	e51b3008 	ldr	r3, [fp, #-8]
   1d784:	ea000013 	b	1d7d8 <fdt_move+0x88>

	if (fdt_totalsize(fdt) > bufsize)
   1d788:	e51b3010 	ldr	r3, [fp, #-16]
   1d78c:	e2833004 	add	r3, r3, #4
   1d790:	e1a00003 	mov	r0, r3
   1d794:	ebfffcd0 	bl	1cadc <fdt32_ld>
   1d798:	e1a02000 	mov	r2, r0
   1d79c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d7a0:	e1520003 	cmp	r2, r3
   1d7a4:	9a000001 	bls	1d7b0 <fdt_move+0x60>
		return -FDT_ERR_NOSPACE;
   1d7a8:	e3e03002 	mvn	r3, #2
   1d7ac:	ea000009 	b	1d7d8 <fdt_move+0x88>

	memmove(buf, fdt, fdt_totalsize(fdt));
   1d7b0:	e51b3010 	ldr	r3, [fp, #-16]
   1d7b4:	e2833004 	add	r3, r3, #4
   1d7b8:	e1a00003 	mov	r0, r3
   1d7bc:	ebfffcc6 	bl	1cadc <fdt32_ld>
   1d7c0:	e1a03000 	mov	r3, r0
   1d7c4:	e1a02003 	mov	r2, r3
   1d7c8:	e51b1010 	ldr	r1, [fp, #-16]
   1d7cc:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7d0:	eb0010fd 	bl	21bcc <memmove>
	return 0;
   1d7d4:	e3a03000 	mov	r3, #0
}
   1d7d8:	e1a00003 	mov	r0, r3
   1d7dc:	e24bd004 	sub	sp, fp, #4
   1d7e0:	e8bd8800 	pop	{fp, pc}

0001d7e4 <buffer_callback>:
#endif
}
#endif // ZF_LOG_PUT_CTX

static void buffer_callback(zf_log_output_ctx *ctx, char *buf)
{
   1d7e4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1d7e8:	e28db000 	add	fp, sp, #0
   1d7ec:	e24dd00c 	sub	sp, sp, #12
   1d7f0:	e50b0008 	str	r0, [fp, #-8]
   1d7f4:	e50b100c 	str	r1, [fp, #-12]
	ctx->e = (ctx->p = ctx->buf = buf) + g_buf_sz;
   1d7f8:	e51b3008 	ldr	r3, [fp, #-8]
   1d7fc:	e51b200c 	ldr	r2, [fp, #-12]
   1d800:	e5832008 	str	r2, [r3, #8]
   1d804:	e51b3008 	ldr	r3, [fp, #-8]
   1d808:	e5932008 	ldr	r2, [r3, #8]
   1d80c:	e51b3008 	ldr	r3, [fp, #-8]
   1d810:	e5832010 	str	r2, [r3, #16]
   1d814:	e51b3008 	ldr	r3, [fp, #-8]
   1d818:	e5933010 	ldr	r3, [r3, #16]
   1d81c:	e3a020fe 	mov	r2, #254	; 0xfe
   1d820:	e0832002 	add	r2, r3, r2
   1d824:	e51b3008 	ldr	r3, [fp, #-8]
   1d828:	e583200c 	str	r2, [r3, #12]
}
   1d82c:	e320f000 	nop	{0}
   1d830:	e28bd000 	add	sp, fp, #0
   1d834:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1d838:	e12fff1e 	bx	lr

0001d83c <output_callback>:

static void output_callback(zf_log_output_ctx *const ctx)
{
   1d83c:	e92d4800 	push	{fp, lr}
   1d840:	e28db004 	add	fp, sp, #4
   1d844:	e24dd008 	sub	sp, sp, #8
   1d848:	e50b0008 	str	r0, [fp, #-8]
	__android_log_print(android_lvl(ctx->lvl), tag, "%s", ctx->msg_b);
#elif ZF_LOG_APPLE_LOG
	*ctx->p = 0;
	CFLog(apple_lvl(ctx->lvl), CFSTR("%s"), ctx->tag_b);
#else
	strcpy(ctx->p, ZF_LOG_EOL);
   1d84c:	e51b3008 	ldr	r3, [fp, #-8]
   1d850:	e5932010 	ldr	r2, [r3, #16]
   1d854:	e3093b74 	movw	r3, #39796	; 0x9b74
   1d858:	e3403002 	movt	r3, #2
   1d85c:	e1a00002 	mov	r0, r2
   1d860:	e1a01003 	mov	r1, r3
   1d864:	e3a03002 	mov	r3, #2
   1d868:	e1a02003 	mov	r2, r3
   1d86c:	eb000fd4 	bl	217c4 <memcpy>
	fputs(ctx->buf, stderr);
   1d870:	e51b3008 	ldr	r3, [fp, #-8]
   1d874:	e5932008 	ldr	r2, [r3, #8]
   1d878:	e3093c1c 	movw	r3, #39964	; 0x9c1c
   1d87c:	e3403002 	movt	r3, #2
   1d880:	e5933000 	ldr	r3, [r3]
   1d884:	e1a01003 	mov	r1, r3
   1d888:	e1a00002 	mov	r0, r2
   1d88c:	eb00076e 	bl	1f64c <fputs>
#endif
	if (ZF_LOG_FATAL == ctx->lvl)
   1d890:	e51b3008 	ldr	r3, [fp, #-8]
   1d894:	e5933000 	ldr	r3, [r3]
   1d898:	e30f2fff 	movw	r2, #65535	; 0xffff
   1d89c:	e1530002 	cmp	r3, r2
   1d8a0:	1a000005 	bne	1d8bc <output_callback+0x80>
	{
		fflush(stderr);
   1d8a4:	e3093c1c 	movw	r3, #39964	; 0x9c1c
   1d8a8:	e3403002 	movt	r3, #2
   1d8ac:	e5933000 	ldr	r3, [r3]
   1d8b0:	e1a00003 	mov	r0, r3
   1d8b4:	eb000710 	bl	1f4fc <fflush>
		abort();
   1d8b8:	eb000321 	bl	1e544 <abort>
	}
}
   1d8bc:	e320f000 	nop	{0}
   1d8c0:	e24bd004 	sub	sp, fp, #4
   1d8c4:	e8bd8800 	pop	{fp, pc}

0001d8c8 <filename>:

static const char *filename(const char *file)
{
   1d8c8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1d8cc:	e28db000 	add	fp, sp, #0
   1d8d0:	e24dd014 	sub	sp, sp, #20
   1d8d4:	e50b0010 	str	r0, [fp, #-16]
	const char *f = file;
   1d8d8:	e51b3010 	ldr	r3, [fp, #-16]
   1d8dc:	e50b3008 	str	r3, [fp, #-8]
	for (const char *p = file; 0 != *p; ++p)
   1d8e0:	e51b3010 	ldr	r3, [fp, #-16]
   1d8e4:	e50b300c 	str	r3, [fp, #-12]
   1d8e8:	ea00000d 	b	1d924 <filename+0x5c>
	{
		if ('/' == *p || '\\' == *p)
   1d8ec:	e51b300c 	ldr	r3, [fp, #-12]
   1d8f0:	e5d33000 	ldrb	r3, [r3]
   1d8f4:	e353002f 	cmp	r3, #47	; 0x2f
   1d8f8:	0a000003 	beq	1d90c <filename+0x44>
   1d8fc:	e51b300c 	ldr	r3, [fp, #-12]
   1d900:	e5d33000 	ldrb	r3, [r3]
   1d904:	e353005c 	cmp	r3, #92	; 0x5c
   1d908:	1a000002 	bne	1d918 <filename+0x50>
		{
			f = p + 1;
   1d90c:	e51b300c 	ldr	r3, [fp, #-12]
   1d910:	e2833001 	add	r3, r3, #1
   1d914:	e50b3008 	str	r3, [fp, #-8]
	for (const char *p = file; 0 != *p; ++p)
   1d918:	e51b300c 	ldr	r3, [fp, #-12]
   1d91c:	e2833001 	add	r3, r3, #1
   1d920:	e50b300c 	str	r3, [fp, #-12]
   1d924:	e51b300c 	ldr	r3, [fp, #-12]
   1d928:	e5d33000 	ldrb	r3, [r3]
   1d92c:	e3530000 	cmp	r3, #0
   1d930:	1affffed 	bne	1d8ec <filename+0x24>
		}
	}
	return f;
   1d934:	e51b3008 	ldr	r3, [fp, #-8]
}
   1d938:	e1a00003 	mov	r0, r3
   1d93c:	e28bd000 	add	sp, fp, #0
   1d940:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1d944:	e12fff1e 	bx	lr

0001d948 <nprintf_size>:

static inline size_t nprintf_size(zf_log_output_ctx *const ctx)
{
   1d948:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1d94c:	e28db000 	add	fp, sp, #0
   1d950:	e24dd00c 	sub	sp, sp, #12
   1d954:	e50b0008 	str	r0, [fp, #-8]
	// leaves space for one more character. Some put_xxx() functions don't use
	// *nprintf() and could use that last character. In that case log line will
	// have multiple (two) half-written parts which is confusing. To workaround
	// that we allow *nprintf() to write its 0 in the eol area (which is always
	// not empty).
	return ctx->e - ctx->p + 1;
   1d958:	e51b3008 	ldr	r3, [fp, #-8]
   1d95c:	e593200c 	ldr	r2, [r3, #12]
   1d960:	e51b3008 	ldr	r3, [fp, #-8]
   1d964:	e5933010 	ldr	r3, [r3, #16]
   1d968:	e0423003 	sub	r3, r2, r3
   1d96c:	e2833001 	add	r3, r3, #1
}
   1d970:	e1a00003 	mov	r0, r3
   1d974:	e28bd000 	add	sp, fp, #0
   1d978:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1d97c:	e12fff1e 	bx	lr

0001d980 <put_nprintf>:

static inline void put_nprintf(zf_log_output_ctx *const ctx, const int n)
{
   1d980:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1d984:	e28db000 	add	fp, sp, #0
   1d988:	e24dd00c 	sub	sp, sp, #12
   1d98c:	e50b0008 	str	r0, [fp, #-8]
   1d990:	e50b100c 	str	r1, [fp, #-12]
	if (0 < n && ctx->e < (ctx->p += n))
   1d994:	e51b300c 	ldr	r3, [fp, #-12]
   1d998:	e3530000 	cmp	r3, #0
   1d99c:	da00000f 	ble	1d9e0 <put_nprintf+0x60>
   1d9a0:	e51b3008 	ldr	r3, [fp, #-8]
   1d9a4:	e593200c 	ldr	r2, [r3, #12]
   1d9a8:	e51b3008 	ldr	r3, [fp, #-8]
   1d9ac:	e5931010 	ldr	r1, [r3, #16]
   1d9b0:	e51b300c 	ldr	r3, [fp, #-12]
   1d9b4:	e0811003 	add	r1, r1, r3
   1d9b8:	e51b3008 	ldr	r3, [fp, #-8]
   1d9bc:	e5831010 	str	r1, [r3, #16]
   1d9c0:	e51b3008 	ldr	r3, [fp, #-8]
   1d9c4:	e5933010 	ldr	r3, [r3, #16]
   1d9c8:	e1520003 	cmp	r2, r3
   1d9cc:	2a000003 	bcs	1d9e0 <put_nprintf+0x60>
	{
		ctx->p = ctx->e;
   1d9d0:	e51b3008 	ldr	r3, [fp, #-8]
   1d9d4:	e593200c 	ldr	r2, [r3, #12]
   1d9d8:	e51b3008 	ldr	r3, [fp, #-8]
   1d9dc:	e5832010 	str	r2, [r3, #16]
	}
}
   1d9e0:	e320f000 	nop	{0}
   1d9e4:	e28bd000 	add	sp, fp, #0
   1d9e8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1d9ec:	e12fff1e 	bx	lr

0001d9f0 <put_ctx>:

static void put_ctx(zf_log_output_ctx *const ctx)
{
   1d9f0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1d9f4:	e28db000 	add	fp, sp, #0
   1d9f8:	e24dd00c 	sub	sp, sp, #12
   1d9fc:	e50b0008 	str	r0, [fp, #-8]
				 pid, tid, (char)lvl_char(ctx->lvl));
	put_nprintf(ctx, n);
#else
	(void)ctx;
#endif
}
   1da00:	e320f000 	nop	{0}
   1da04:	e28bd000 	add	sp, fp, #0
   1da08:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1da0c:	e12fff1e 	bx	lr

0001da10 <put_tag>:

static void put_tag(zf_log_output_ctx *const ctx, const char *const tag)
{
   1da10:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1da14:	e28db000 	add	fp, sp, #0
   1da18:	e24dd014 	sub	sp, sp, #20
   1da1c:	e50b0010 	str	r0, [fp, #-16]
   1da20:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
	const char *ch;
	ctx->tag_b = ctx->p;
   1da24:	e51b3010 	ldr	r3, [fp, #-16]
   1da28:	e5932010 	ldr	r2, [r3, #16]
   1da2c:	e51b3010 	ldr	r3, [fp, #-16]
   1da30:	e5832014 	str	r2, [r3, #20]
	if (0 != (ch = g_tag_prefix))
   1da34:	e3083108 	movw	r3, #33032	; 0x8108
   1da38:	e3403004 	movt	r3, #4
   1da3c:	e5933000 	ldr	r3, [r3]
   1da40:	e50b3008 	str	r3, [fp, #-8]
   1da44:	e51b3008 	ldr	r3, [fp, #-8]
   1da48:	e3530000 	cmp	r3, #0
   1da4c:	0a000016 	beq	1daac <put_tag+0x9c>
	{
		for (;ctx->e != ctx->p && 0 != (*ctx->p = *ch); ++ctx->p, ++ch)
   1da50:	ea000007 	b	1da74 <put_tag+0x64>
   1da54:	e51b3010 	ldr	r3, [fp, #-16]
   1da58:	e5933010 	ldr	r3, [r3, #16]
   1da5c:	e2832001 	add	r2, r3, #1
   1da60:	e51b3010 	ldr	r3, [fp, #-16]
   1da64:	e5832010 	str	r2, [r3, #16]
   1da68:	e51b3008 	ldr	r3, [fp, #-8]
   1da6c:	e2833001 	add	r3, r3, #1
   1da70:	e50b3008 	str	r3, [fp, #-8]
   1da74:	e51b3010 	ldr	r3, [fp, #-16]
   1da78:	e593200c 	ldr	r2, [r3, #12]
   1da7c:	e51b3010 	ldr	r3, [fp, #-16]
   1da80:	e5933010 	ldr	r3, [r3, #16]
   1da84:	e1520003 	cmp	r2, r3
   1da88:	0a000007 	beq	1daac <put_tag+0x9c>
   1da8c:	e51b3010 	ldr	r3, [fp, #-16]
   1da90:	e5933010 	ldr	r3, [r3, #16]
   1da94:	e51b2008 	ldr	r2, [fp, #-8]
   1da98:	e5d22000 	ldrb	r2, [r2]
   1da9c:	e5c32000 	strb	r2, [r3]
   1daa0:	e5d33000 	ldrb	r3, [r3]
   1daa4:	e3530000 	cmp	r3, #0
   1daa8:	1affffe9 	bne	1da54 <put_tag+0x44>
		{
		}
	}
	if (0 != (ch = tag) && 0 != tag[0])
   1daac:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1dab0:	e50b3008 	str	r3, [fp, #-8]
   1dab4:	e51b3008 	ldr	r3, [fp, #-8]
   1dab8:	e3530000 	cmp	r3, #0
   1dabc:	0a00002d 	beq	1db78 <put_tag+0x168>
   1dac0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1dac4:	e5d33000 	ldrb	r3, [r3]
   1dac8:	e3530000 	cmp	r3, #0
   1dacc:	0a000029 	beq	1db78 <put_tag+0x168>
	{
		if (ctx->tag_b != ctx->p && ctx->e != ctx->p)
   1dad0:	e51b3010 	ldr	r3, [fp, #-16]
   1dad4:	e5932014 	ldr	r2, [r3, #20]
   1dad8:	e51b3010 	ldr	r3, [fp, #-16]
   1dadc:	e5933010 	ldr	r3, [r3, #16]
   1dae0:	e1520003 	cmp	r2, r3
   1dae4:	0a000015 	beq	1db40 <put_tag+0x130>
   1dae8:	e51b3010 	ldr	r3, [fp, #-16]
   1daec:	e593200c 	ldr	r2, [r3, #12]
   1daf0:	e51b3010 	ldr	r3, [fp, #-16]
   1daf4:	e5933010 	ldr	r3, [r3, #16]
   1daf8:	e1520003 	cmp	r2, r3
   1dafc:	0a00000f 	beq	1db40 <put_tag+0x130>
		{
			*ctx->p++ = '.';
   1db00:	e51b3010 	ldr	r3, [fp, #-16]
   1db04:	e5933010 	ldr	r3, [r3, #16]
   1db08:	e2831001 	add	r1, r3, #1
   1db0c:	e51b2010 	ldr	r2, [fp, #-16]
   1db10:	e5821010 	str	r1, [r2, #16]
   1db14:	e3a0202e 	mov	r2, #46	; 0x2e
   1db18:	e5c32000 	strb	r2, [r3]
		}
		for (;ctx->e != ctx->p && 0 != (*ctx->p = *ch); ++ctx->p, ++ch)
   1db1c:	ea000007 	b	1db40 <put_tag+0x130>
   1db20:	e51b3010 	ldr	r3, [fp, #-16]
   1db24:	e5933010 	ldr	r3, [r3, #16]
   1db28:	e2832001 	add	r2, r3, #1
   1db2c:	e51b3010 	ldr	r3, [fp, #-16]
   1db30:	e5832010 	str	r2, [r3, #16]
   1db34:	e51b3008 	ldr	r3, [fp, #-8]
   1db38:	e2833001 	add	r3, r3, #1
   1db3c:	e50b3008 	str	r3, [fp, #-8]
   1db40:	e51b3010 	ldr	r3, [fp, #-16]
   1db44:	e593200c 	ldr	r2, [r3, #12]
   1db48:	e51b3010 	ldr	r3, [fp, #-16]
   1db4c:	e5933010 	ldr	r3, [r3, #16]
   1db50:	e1520003 	cmp	r2, r3
   1db54:	0a000007 	beq	1db78 <put_tag+0x168>
   1db58:	e51b3010 	ldr	r3, [fp, #-16]
   1db5c:	e5933010 	ldr	r3, [r3, #16]
   1db60:	e51b2008 	ldr	r2, [fp, #-8]
   1db64:	e5d22000 	ldrb	r2, [r2]
   1db68:	e5c32000 	strb	r2, [r3]
   1db6c:	e5d33000 	ldrb	r3, [r3]
   1db70:	e3530000 	cmp	r3, #0
   1db74:	1affffe9 	bne	1db20 <put_tag+0x110>
		{
		}
	}
	ctx->tag_e = ctx->p;
   1db78:	e51b3010 	ldr	r3, [fp, #-16]
   1db7c:	e5932010 	ldr	r2, [r3, #16]
   1db80:	e51b3010 	ldr	r3, [fp, #-16]
   1db84:	e5832018 	str	r2, [r3, #24]
	if (ctx->tag_b != ctx->p && ctx->e != ctx->p)
   1db88:	e51b3010 	ldr	r3, [fp, #-16]
   1db8c:	e5932014 	ldr	r2, [r3, #20]
   1db90:	e51b3010 	ldr	r3, [fp, #-16]
   1db94:	e5933010 	ldr	r3, [r3, #16]
   1db98:	e1520003 	cmp	r2, r3
   1db9c:	0a00000c 	beq	1dbd4 <put_tag+0x1c4>
   1dba0:	e51b3010 	ldr	r3, [fp, #-16]
   1dba4:	e593200c 	ldr	r2, [r3, #12]
   1dba8:	e51b3010 	ldr	r3, [fp, #-16]
   1dbac:	e5933010 	ldr	r3, [r3, #16]
   1dbb0:	e1520003 	cmp	r2, r3
   1dbb4:	0a000006 	beq	1dbd4 <put_tag+0x1c4>
	{
		*ctx->p++ = ' ';
   1dbb8:	e51b3010 	ldr	r3, [fp, #-16]
   1dbbc:	e5933010 	ldr	r3, [r3, #16]
   1dbc0:	e2831001 	add	r1, r3, #1
   1dbc4:	e51b2010 	ldr	r2, [fp, #-16]
   1dbc8:	e5821010 	str	r1, [r2, #16]
   1dbcc:	e3a02020 	mov	r2, #32
   1dbd0:	e5c32000 	strb	r2, [r3]
	}
}
   1dbd4:	e320f000 	nop	{0}
   1dbd8:	e28bd000 	add	sp, fp, #0
   1dbdc:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1dbe0:	e12fff1e 	bx	lr

0001dbe4 <put_src>:

static void put_src(zf_log_output_ctx *const ctx, const char *const func,
					const char *const file, const unsigned line)
{
   1dbe4:	e92d4830 	push	{r4, r5, fp, lr}
   1dbe8:	e28db00c 	add	fp, sp, #12
   1dbec:	e24dd020 	sub	sp, sp, #32
   1dbf0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1dbf4:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1dbf8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
   1dbfc:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
	int n;
	n = snprintf(ctx->p, nprintf_size(ctx), "%s@%s:%u ",
   1dc00:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc04:	e5934010 	ldr	r4, [r3, #16]
   1dc08:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc0c:	ebffff4d 	bl	1d948 <nprintf_size>
   1dc10:	e1a05000 	mov	r5, r0
   1dc14:	e51b0020 	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dc18:	ebffff2a 	bl	1d8c8 <filename>
   1dc1c:	e1a02000 	mov	r2, r0
   1dc20:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc24:	e58d3004 	str	r3, [sp, #4]
   1dc28:	e58d2000 	str	r2, [sp]
   1dc2c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc30:	e3092b78 	movw	r2, #39800	; 0x9b78
   1dc34:	e3402002 	movt	r2, #2
   1dc38:	e1a01005 	mov	r1, r5
   1dc3c:	e1a00004 	mov	r0, r4
   1dc40:	eb000727 	bl	1f8e4 <snprintf>
   1dc44:	e50b0010 	str	r0, [fp, #-16]
				 func, filename(file), line);
	put_nprintf(ctx, n);
   1dc48:	e51b1010 	ldr	r1, [fp, #-16]
   1dc4c:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc50:	ebffff4a 	bl	1d980 <put_nprintf>
}
   1dc54:	e320f000 	nop	{0}
   1dc58:	e24bd00c 	sub	sp, fp, #12
   1dc5c:	e8bd8830 	pop	{r4, r5, fp, pc}

0001dc60 <put_msg>:

static void put_msg(zf_log_output_ctx *const ctx,
					const char *const fmt, va_list va)
{
   1dc60:	e92d4810 	push	{r4, fp, lr}
   1dc64:	e28db008 	add	fp, sp, #8
   1dc68:	e24dd01c 	sub	sp, sp, #28
   1dc6c:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8
   1dc70:	e50b101c 	str	r1, [fp, #-28]	; 0xffffffe4
   1dc74:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
	int n;
	ctx->msg_b = ctx->p;
   1dc78:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc7c:	e5932010 	ldr	r2, [r3, #16]
   1dc80:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc84:	e583201c 	str	r2, [r3, #28]
	n = vsnprintf(ctx->p, nprintf_size(ctx), fmt, va);
   1dc88:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dc8c:	e5934010 	ldr	r4, [r3, #16]
   1dc90:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc94:	ebffff2b 	bl	1d948 <nprintf_size>
   1dc98:	e1a01000 	mov	r1, r0
   1dc9c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dca0:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dca4:	e1a00004 	mov	r0, r4
   1dca8:	eb000e80 	bl	216b0 <vsnprintf>
   1dcac:	e50b0010 	str	r0, [fp, #-16]
	put_nprintf(ctx, n);
   1dcb0:	e51b1010 	ldr	r1, [fp, #-16]
   1dcb4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcb8:	ebffff30 	bl	1d980 <put_nprintf>
}
   1dcbc:	e320f000 	nop	{0}
   1dcc0:	e24bd008 	sub	sp, fp, #8
   1dcc4:	e8bd8810 	pop	{r4, fp, pc}

0001dcc8 <output_mem>:

static void output_mem(zf_log_output_ctx *const ctx,
					   const void *const d, const unsigned d_sz)
{
   1dcc8:	e92d4800 	push	{fp, lr}
   1dccc:	e28db004 	add	fp, sp, #4
   1dcd0:	e24dd038 	sub	sp, sp, #56	; 0x38
   1dcd4:	e50b0030 	str	r0, [fp, #-48]	; 0xffffffd0
   1dcd8:	e50b1034 	str	r1, [fp, #-52]	; 0xffffffcc
   1dcdc:	e50b2038 	str	r2, [fp, #-56]	; 0xffffffc8
	if (0 == d || 0 == d_sz)
   1dce0:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dce4:	e3530000 	cmp	r3, #0
   1dce8:	0a000071 	beq	1deb4 <output_mem+0x1ec>
   1dcec:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dcf0:	e3530000 	cmp	r3, #0
   1dcf4:	0a00006e 	beq	1deb4 <output_mem+0x1ec>
	{
		return;
	}
	const unsigned char *mem_p = (const unsigned char *)d;
   1dcf8:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dcfc:	e50b3008 	str	r3, [fp, #-8]
	const unsigned char *const mem_e = mem_p + d_sz;
   1dd00:	e51b2008 	ldr	r2, [fp, #-8]
   1dd04:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
   1dd08:	e0823003 	add	r3, r2, r3
   1dd0c:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
	const unsigned char *mem_cut;
	const ptrdiff_t mem_width = g_mem_width;
   1dd10:	e30c37a4 	movw	r3, #51108	; 0xc7a4
   1dd14:	e3403002 	movt	r3, #2
   1dd18:	e5933000 	ldr	r3, [r3]
   1dd1c:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	char *const hex_b = ctx->msg_b;
   1dd20:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dd24:	e593301c 	ldr	r3, [r3, #28]
   1dd28:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
	char *const ascii_b = hex_b + 2 * mem_width + 2;
   1dd2c:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd30:	e1a03083 	lsl	r3, r3, #1
   1dd34:	e2833002 	add	r3, r3, #2
   1dd38:	e51b201c 	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dd3c:	e0823003 	add	r3, r2, r3
   1dd40:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
	char *const ascii_e = ascii_b + mem_width;
   1dd44:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd48:	e51b2020 	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dd4c:	e0823003 	add	r3, r2, r3
   1dd50:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
	if (ctx->e < ascii_e)
   1dd54:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dd58:	e593300c 	ldr	r3, [r3, #12]
   1dd5c:	e51b2024 	ldr	r2, [fp, #-36]	; 0xffffffdc
   1dd60:	e1520003 	cmp	r2, r3
   1dd64:	8a000054 	bhi	1debc <output_mem+0x1f4>
	{
		return;
	}
	while (mem_p != mem_e)
   1dd68:	ea00004c 	b	1dea0 <output_mem+0x1d8>
	{
		char *hex = hex_b;
   1dd6c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dd70:	e50b300c 	str	r3, [fp, #-12]
		char *ascii = ascii_b;
   1dd74:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd78:	e50b3010 	str	r3, [fp, #-16]
		for (mem_cut = mem_width < mem_e - mem_p? mem_p + mem_width: mem_e;
   1dd7c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
   1dd80:	e51b3008 	ldr	r3, [fp, #-8]
   1dd84:	e0423003 	sub	r3, r2, r3
   1dd88:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dd8c:	e1520003 	cmp	r2, r3
   1dd90:	aa000003 	bge	1dda4 <output_mem+0xdc>
   1dd94:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd98:	e51b2008 	ldr	r2, [fp, #-8]
   1dd9c:	e0823003 	add	r3, r2, r3
   1dda0:	ea000000 	b	1dda8 <output_mem+0xe0>
   1dda4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1dda8:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
   1ddac:	ea000025 	b	1de48 <output_mem+0x180>
			 mem_cut != mem_p; ++mem_p)
		{
			const char ch = *mem_p;
   1ddb0:	e51b3008 	ldr	r3, [fp, #-8]
   1ddb4:	e5d33000 	ldrb	r3, [r3]
   1ddb8:	e54b3029 	strb	r3, [fp, #-41]	; 0xffffffd7
			*hex++ = c_hex[(0xf0 & ch) >> 4];
   1ddbc:	e55b3029 	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1ddc0:	e1a03223 	lsr	r3, r3, #4
   1ddc4:	e6ef3073 	uxtb	r3, r3
   1ddc8:	e1a01003 	mov	r1, r3
   1ddcc:	e51b200c 	ldr	r2, [fp, #-12]
   1ddd0:	e2823001 	add	r3, r2, #1
   1ddd4:	e50b300c 	str	r3, [fp, #-12]
   1ddd8:	e3093b58 	movw	r3, #39768	; 0x9b58
   1dddc:	e3403002 	movt	r3, #2
   1dde0:	e7d33001 	ldrb	r3, [r3, r1]
   1dde4:	e5c23000 	strb	r3, [r2]
			*hex++ = c_hex[(0x0f & ch)];
   1dde8:	e55b3029 	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1ddec:	e203100f 	and	r1, r3, #15
   1ddf0:	e51b200c 	ldr	r2, [fp, #-12]
   1ddf4:	e2823001 	add	r3, r2, #1
   1ddf8:	e50b300c 	str	r3, [fp, #-12]
   1ddfc:	e3093b58 	movw	r3, #39768	; 0x9b58
   1de00:	e3403002 	movt	r3, #2
   1de04:	e7d33001 	ldrb	r3, [r3, r1]
   1de08:	e5c23000 	strb	r3, [r2]
			*ascii++ = isprint(ch)? ch: '?';
   1de0c:	e55b3029 	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1de10:	e2433020 	sub	r3, r3, #32
   1de14:	e353005e 	cmp	r3, #94	; 0x5e
   1de18:	8a000001 	bhi	1de24 <output_mem+0x15c>
   1de1c:	e55b1029 	ldrb	r1, [fp, #-41]	; 0xffffffd7
   1de20:	ea000000 	b	1de28 <output_mem+0x160>
   1de24:	e3a0103f 	mov	r1, #63	; 0x3f
   1de28:	e51b3010 	ldr	r3, [fp, #-16]
   1de2c:	e2832001 	add	r2, r3, #1
   1de30:	e50b2010 	str	r2, [fp, #-16]
   1de34:	e1a02001 	mov	r2, r1
   1de38:	e5c32000 	strb	r2, [r3]
			 mem_cut != mem_p; ++mem_p)
   1de3c:	e51b3008 	ldr	r3, [fp, #-8]
   1de40:	e2833001 	add	r3, r3, #1
   1de44:	e50b3008 	str	r3, [fp, #-8]
		for (mem_cut = mem_width < mem_e - mem_p? mem_p + mem_width: mem_e;
   1de48:	e51b2028 	ldr	r2, [fp, #-40]	; 0xffffffd8
   1de4c:	e51b3008 	ldr	r3, [fp, #-8]
   1de50:	e1520003 	cmp	r2, r3
   1de54:	1affffd5 	bne	1ddb0 <output_mem+0xe8>
		}
		while (hex != ascii_b)
   1de58:	ea000004 	b	1de70 <output_mem+0x1a8>
		{
			*hex++ = ' ';
   1de5c:	e51b300c 	ldr	r3, [fp, #-12]
   1de60:	e2832001 	add	r2, r3, #1
   1de64:	e50b200c 	str	r2, [fp, #-12]
   1de68:	e3a02020 	mov	r2, #32
   1de6c:	e5c32000 	strb	r2, [r3]
		while (hex != ascii_b)
   1de70:	e51b200c 	ldr	r2, [fp, #-12]
   1de74:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de78:	e1520003 	cmp	r2, r3
   1de7c:	1afffff6 	bne	1de5c <output_mem+0x194>
		}
		ctx->p = ascii;
   1de80:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
   1de84:	e51b2010 	ldr	r2, [fp, #-16]
   1de88:	e5832010 	str	r2, [r3, #16]
		g_output_cb(ctx);
   1de8c:	e30c37a8 	movw	r3, #51112	; 0xc7a8
   1de90:	e3403002 	movt	r3, #2
   1de94:	e5933000 	ldr	r3, [r3]
   1de98:	e51b0030 	ldr	r0, [fp, #-48]	; 0xffffffd0
   1de9c:	e12fff33 	blx	r3
	while (mem_p != mem_e)
   1dea0:	e51b2008 	ldr	r2, [fp, #-8]
   1dea4:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
   1dea8:	e1520003 	cmp	r2, r3
   1deac:	1affffae 	bne	1dd6c <output_mem+0xa4>
   1deb0:	ea000002 	b	1dec0 <output_mem+0x1f8>
		return;
   1deb4:	e320f000 	nop	{0}
   1deb8:	ea000000 	b	1dec0 <output_mem+0x1f8>
		return;
   1debc:	e320f000 	nop	{0}
	}
}
   1dec0:	e24bd004 	sub	sp, fp, #4
   1dec4:	e8bd8800 	pop	{fp, pc}

0001dec8 <zf_log_set_tag_prefix>:

void zf_log_set_tag_prefix(const char *const prefix)
{
   1dec8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1decc:	e28db000 	add	fp, sp, #0
   1ded0:	e24dd00c 	sub	sp, sp, #12
   1ded4:	e50b0008 	str	r0, [fp, #-8]
	g_tag_prefix = prefix;
   1ded8:	e3083108 	movw	r3, #33032	; 0x8108
   1dedc:	e3403004 	movt	r3, #4
   1dee0:	e51b2008 	ldr	r2, [fp, #-8]
   1dee4:	e5832000 	str	r2, [r3]
}
   1dee8:	e320f000 	nop	{0}
   1deec:	e28bd000 	add	sp, fp, #0
   1def0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1def4:	e12fff1e 	bx	lr

0001def8 <zf_log_set_mem_width>:

void zf_log_set_mem_width(const unsigned w)
{
   1def8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1defc:	e28db000 	add	fp, sp, #0
   1df00:	e24dd00c 	sub	sp, sp, #12
   1df04:	e50b0008 	str	r0, [fp, #-8]
	g_mem_width = w;
   1df08:	e30c37a4 	movw	r3, #51108	; 0xc7a4
   1df0c:	e3403002 	movt	r3, #2
   1df10:	e51b2008 	ldr	r2, [fp, #-8]
   1df14:	e5832000 	str	r2, [r3]
}
   1df18:	e320f000 	nop	{0}
   1df1c:	e28bd000 	add	sp, fp, #0
   1df20:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1df24:	e12fff1e 	bx	lr

0001df28 <zf_log_set_output_level>:

void zf_log_set_output_level(const int lvl)
{
   1df28:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1df2c:	e28db000 	add	fp, sp, #0
   1df30:	e24dd00c 	sub	sp, sp, #12
   1df34:	e50b0008 	str	r0, [fp, #-8]
	_zf_log_output_lvl = lvl;
   1df38:	e3083104 	movw	r3, #33028	; 0x8104
   1df3c:	e3403004 	movt	r3, #4
   1df40:	e51b2008 	ldr	r2, [fp, #-8]
   1df44:	e5832000 	str	r2, [r3]
}
   1df48:	e320f000 	nop	{0}
   1df4c:	e28bd000 	add	sp, fp, #0
   1df50:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1df54:	e12fff1e 	bx	lr

0001df58 <zf_log_set_output_callback>:

void zf_log_set_output_callback(const zf_log_output_cb cb)
{
   1df58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   1df5c:	e28db000 	add	fp, sp, #0
   1df60:	e24dd00c 	sub	sp, sp, #12
   1df64:	e50b0008 	str	r0, [fp, #-8]
	g_output_cb = cb;
   1df68:	e30c37a8 	movw	r3, #51112	; 0xc7a8
   1df6c:	e3403002 	movt	r3, #2
   1df70:	e51b2008 	ldr	r2, [fp, #-8]
   1df74:	e5832000 	str	r2, [r3]
}
   1df78:	e320f000 	nop	{0}
   1df7c:	e28bd000 	add	sp, fp, #0
   1df80:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   1df84:	e12fff1e 	bx	lr

0001df88 <_zf_log_write_d>:

void _zf_log_write_d(const char *const func,
					 const char *const file, const unsigned line,
					 const int lvl, const char *const tag,
					 const char *const fmt, ...)
{
   1df88:	e92d4800 	push	{fp, lr}
   1df8c:	e28db004 	add	fp, sp, #4
   1df90:	e24ddf4e 	sub	sp, sp, #312	; 0x138
   1df94:	e50b0130 	str	r0, [fp, #-304]	; 0xfffffed0
   1df98:	e50b1134 	str	r1, [fp, #-308]	; 0xfffffecc
   1df9c:	e50b2138 	str	r2, [fp, #-312]	; 0xfffffec8
   1dfa0:	e50b313c 	str	r3, [fp, #-316]	; 0xfffffec4
	CTX(lvl, tag);
   1dfa4:	e51b313c 	ldr	r3, [fp, #-316]	; 0xfffffec4
   1dfa8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
   1dfac:	e59b3004 	ldr	r3, [fp, #4]
   1dfb0:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   1dfb4:	e30d37e4 	movw	r3, #55268	; 0xd7e4
   1dfb8:	e3403001 	movt	r3, #1
   1dfbc:	e24b1f49 	sub	r1, fp, #292	; 0x124
   1dfc0:	e24b2024 	sub	r2, fp, #36	; 0x24
   1dfc4:	e1a00002 	mov	r0, r2
   1dfc8:	e12fff33 	blx	r3
	va_list va;
	va_start(va, fmt);
   1dfcc:	e28b300c 	add	r3, fp, #12
   1dfd0:	e50b3128 	str	r3, [fp, #-296]	; 0xfffffed8
	put_ctx(&ctx);
   1dfd4:	e24b3024 	sub	r3, fp, #36	; 0x24
   1dfd8:	e1a00003 	mov	r0, r3
   1dfdc:	ebfffe83 	bl	1d9f0 <put_ctx>
	put_tag(&ctx, tag);
   1dfe0:	e24b3024 	sub	r3, fp, #36	; 0x24
   1dfe4:	e59b1004 	ldr	r1, [fp, #4]
   1dfe8:	e1a00003 	mov	r0, r3
   1dfec:	ebfffe87 	bl	1da10 <put_tag>
	put_src(&ctx, func, file, line);
   1dff0:	e24b0024 	sub	r0, fp, #36	; 0x24
   1dff4:	e51b3138 	ldr	r3, [fp, #-312]	; 0xfffffec8
   1dff8:	e51b2134 	ldr	r2, [fp, #-308]	; 0xfffffecc
   1dffc:	e51b1130 	ldr	r1, [fp, #-304]	; 0xfffffed0
   1e000:	ebfffef7 	bl	1dbe4 <put_src>
	put_msg(&ctx, fmt, va);
   1e004:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e008:	e51b2128 	ldr	r2, [fp, #-296]	; 0xfffffed8
   1e00c:	e59b1008 	ldr	r1, [fp, #8]
   1e010:	e1a00003 	mov	r0, r3
   1e014:	ebffff11 	bl	1dc60 <put_msg>
	g_output_cb(&ctx);
   1e018:	e30c37a8 	movw	r3, #51112	; 0xc7a8
   1e01c:	e3403002 	movt	r3, #2
   1e020:	e5933000 	ldr	r3, [r3]
   1e024:	e24b2024 	sub	r2, fp, #36	; 0x24
   1e028:	e1a00002 	mov	r0, r2
   1e02c:	e12fff33 	blx	r3
	va_end(va);
}
   1e030:	e320f000 	nop	{0}
   1e034:	e24bd004 	sub	sp, fp, #4
   1e038:	e8bd8800 	pop	{fp, pc}

0001e03c <_zf_log_write>:

void _zf_log_write(const int lvl, const char *const tag,
				   const char *const fmt, ...)
{
   1e03c:	e92d000c 	push	{r2, r3}
   1e040:	e92d4800 	push	{fp, lr}
   1e044:	e28db004 	add	fp, sp, #4
   1e048:	e24dde13 	sub	sp, sp, #304	; 0x130
   1e04c:	e50b0130 	str	r0, [fp, #-304]	; 0xfffffed0
   1e050:	e50b1134 	str	r1, [fp, #-308]	; 0xfffffecc
	CTX(lvl, tag);
   1e054:	e51b3130 	ldr	r3, [fp, #-304]	; 0xfffffed0
   1e058:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
   1e05c:	e51b3134 	ldr	r3, [fp, #-308]	; 0xfffffecc
   1e060:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   1e064:	e30d37e4 	movw	r3, #55268	; 0xd7e4
   1e068:	e3403001 	movt	r3, #1
   1e06c:	e24b1f49 	sub	r1, fp, #292	; 0x124
   1e070:	e24b2024 	sub	r2, fp, #36	; 0x24
   1e074:	e1a00002 	mov	r0, r2
   1e078:	e12fff33 	blx	r3
	va_list va;
	va_start(va, fmt);
   1e07c:	e28b3008 	add	r3, fp, #8
   1e080:	e50b3128 	str	r3, [fp, #-296]	; 0xfffffed8
	put_ctx(&ctx);
   1e084:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e088:	e1a00003 	mov	r0, r3
   1e08c:	ebfffe57 	bl	1d9f0 <put_ctx>
	put_tag(&ctx, tag);
   1e090:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e094:	e51b1134 	ldr	r1, [fp, #-308]	; 0xfffffecc
   1e098:	e1a00003 	mov	r0, r3
   1e09c:	ebfffe5b 	bl	1da10 <put_tag>
	put_msg(&ctx, fmt, va);
   1e0a0:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e0a4:	e51b2128 	ldr	r2, [fp, #-296]	; 0xfffffed8
   1e0a8:	e59b1004 	ldr	r1, [fp, #4]
   1e0ac:	e1a00003 	mov	r0, r3
   1e0b0:	ebfffeea 	bl	1dc60 <put_msg>
	g_output_cb(&ctx);
   1e0b4:	e30c37a8 	movw	r3, #51112	; 0xc7a8
   1e0b8:	e3403002 	movt	r3, #2
   1e0bc:	e5933000 	ldr	r3, [r3]
   1e0c0:	e24b2024 	sub	r2, fp, #36	; 0x24
   1e0c4:	e1a00002 	mov	r0, r2
   1e0c8:	e12fff33 	blx	r3
	va_end(va);
}
   1e0cc:	e320f000 	nop	{0}
   1e0d0:	e24bd004 	sub	sp, fp, #4
   1e0d4:	e8bd4800 	pop	{fp, lr}
   1e0d8:	e28dd008 	add	sp, sp, #8
   1e0dc:	e12fff1e 	bx	lr

0001e0e0 <_zf_log_write_mem_d>:
void _zf_log_write_mem_d(const char *const func,
						 const char *const file, const unsigned line,
						 const int lvl, const char *const tag,
						 const void *const d, const unsigned d_sz,
						 const char *const fmt, ...)
{
   1e0e0:	e92d4800 	push	{fp, lr}
   1e0e4:	e28db004 	add	fp, sp, #4
   1e0e8:	e24ddf4e 	sub	sp, sp, #312	; 0x138
   1e0ec:	e50b0130 	str	r0, [fp, #-304]	; 0xfffffed0
   1e0f0:	e50b1134 	str	r1, [fp, #-308]	; 0xfffffecc
   1e0f4:	e50b2138 	str	r2, [fp, #-312]	; 0xfffffec8
   1e0f8:	e50b313c 	str	r3, [fp, #-316]	; 0xfffffec4
	CTX(lvl, tag);
   1e0fc:	e51b313c 	ldr	r3, [fp, #-316]	; 0xfffffec4
   1e100:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
   1e104:	e59b3004 	ldr	r3, [fp, #4]
   1e108:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   1e10c:	e30d37e4 	movw	r3, #55268	; 0xd7e4
   1e110:	e3403001 	movt	r3, #1
   1e114:	e24b1f49 	sub	r1, fp, #292	; 0x124
   1e118:	e24b2024 	sub	r2, fp, #36	; 0x24
   1e11c:	e1a00002 	mov	r0, r2
   1e120:	e12fff33 	blx	r3
	va_list va;
	va_start(va, fmt);
   1e124:	e28b3014 	add	r3, fp, #20
   1e128:	e50b3128 	str	r3, [fp, #-296]	; 0xfffffed8
	put_ctx(&ctx);
   1e12c:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e130:	e1a00003 	mov	r0, r3
   1e134:	ebfffe2d 	bl	1d9f0 <put_ctx>
	put_tag(&ctx, tag);
   1e138:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e13c:	e59b1004 	ldr	r1, [fp, #4]
   1e140:	e1a00003 	mov	r0, r3
   1e144:	ebfffe31 	bl	1da10 <put_tag>
	put_src(&ctx, func, file, line);
   1e148:	e24b0024 	sub	r0, fp, #36	; 0x24
   1e14c:	e51b3138 	ldr	r3, [fp, #-312]	; 0xfffffec8
   1e150:	e51b2134 	ldr	r2, [fp, #-308]	; 0xfffffecc
   1e154:	e51b1130 	ldr	r1, [fp, #-304]	; 0xfffffed0
   1e158:	ebfffea1 	bl	1dbe4 <put_src>
	put_msg(&ctx, fmt, va);
   1e15c:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e160:	e51b2128 	ldr	r2, [fp, #-296]	; 0xfffffed8
   1e164:	e59b1010 	ldr	r1, [fp, #16]
   1e168:	e1a00003 	mov	r0, r3
   1e16c:	ebfffebb 	bl	1dc60 <put_msg>
	g_output_cb(&ctx);
   1e170:	e30c37a8 	movw	r3, #51112	; 0xc7a8
   1e174:	e3403002 	movt	r3, #2
   1e178:	e5933000 	ldr	r3, [r3]
   1e17c:	e24b2024 	sub	r2, fp, #36	; 0x24
   1e180:	e1a00002 	mov	r0, r2
   1e184:	e12fff33 	blx	r3
	output_mem(&ctx, d, d_sz);
   1e188:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e18c:	e59b200c 	ldr	r2, [fp, #12]
   1e190:	e59b1008 	ldr	r1, [fp, #8]
   1e194:	e1a00003 	mov	r0, r3
   1e198:	ebfffeca 	bl	1dcc8 <output_mem>
	va_end(va);
}
   1e19c:	e320f000 	nop	{0}
   1e1a0:	e24bd004 	sub	sp, fp, #4
   1e1a4:	e8bd8800 	pop	{fp, pc}

0001e1a8 <_zf_log_write_mem>:

void _zf_log_write_mem(const int lvl, const char *const tag,
					   const void *const d, const unsigned d_sz,
					   const char *const fmt, ...)
{
   1e1a8:	e92d4800 	push	{fp, lr}
   1e1ac:	e28db004 	add	fp, sp, #4
   1e1b0:	e24ddf4e 	sub	sp, sp, #312	; 0x138
   1e1b4:	e50b0130 	str	r0, [fp, #-304]	; 0xfffffed0
   1e1b8:	e50b1134 	str	r1, [fp, #-308]	; 0xfffffecc
   1e1bc:	e50b2138 	str	r2, [fp, #-312]	; 0xfffffec8
   1e1c0:	e50b313c 	str	r3, [fp, #-316]	; 0xfffffec4
	CTX(lvl, tag);
   1e1c4:	e51b3130 	ldr	r3, [fp, #-304]	; 0xfffffed0
   1e1c8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
   1e1cc:	e51b3134 	ldr	r3, [fp, #-308]	; 0xfffffecc
   1e1d0:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
   1e1d4:	e30d37e4 	movw	r3, #55268	; 0xd7e4
   1e1d8:	e3403001 	movt	r3, #1
   1e1dc:	e24b1f49 	sub	r1, fp, #292	; 0x124
   1e1e0:	e24b2024 	sub	r2, fp, #36	; 0x24
   1e1e4:	e1a00002 	mov	r0, r2
   1e1e8:	e12fff33 	blx	r3
	va_list va;
	va_start(va, fmt);
   1e1ec:	e28b3008 	add	r3, fp, #8
   1e1f0:	e50b3128 	str	r3, [fp, #-296]	; 0xfffffed8
	put_ctx(&ctx);
   1e1f4:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e1f8:	e1a00003 	mov	r0, r3
   1e1fc:	ebfffdfb 	bl	1d9f0 <put_ctx>
	put_tag(&ctx, tag);
   1e200:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e204:	e51b1134 	ldr	r1, [fp, #-308]	; 0xfffffecc
   1e208:	e1a00003 	mov	r0, r3
   1e20c:	ebfffdff 	bl	1da10 <put_tag>
	put_msg(&ctx, fmt, va);
   1e210:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e214:	e51b2128 	ldr	r2, [fp, #-296]	; 0xfffffed8
   1e218:	e59b1004 	ldr	r1, [fp, #4]
   1e21c:	e1a00003 	mov	r0, r3
   1e220:	ebfffe8e 	bl	1dc60 <put_msg>
	g_output_cb(&ctx);
   1e224:	e30c37a8 	movw	r3, #51112	; 0xc7a8
   1e228:	e3403002 	movt	r3, #2
   1e22c:	e5933000 	ldr	r3, [r3]
   1e230:	e24b2024 	sub	r2, fp, #36	; 0x24
   1e234:	e1a00002 	mov	r0, r2
   1e238:	e12fff33 	blx	r3
	output_mem(&ctx, d, d_sz);
   1e23c:	e24b3024 	sub	r3, fp, #36	; 0x24
   1e240:	e51b213c 	ldr	r2, [fp, #-316]	; 0xfffffec4
   1e244:	e51b1138 	ldr	r1, [fp, #-312]	; 0xfffffec8
   1e248:	e1a00003 	mov	r0, r3
   1e24c:	ebfffe9d 	bl	1dcc8 <output_mem>
	va_end(va);
}
   1e250:	e320f000 	nop	{0}
   1e254:	e24bd004 	sub	sp, fp, #4
   1e258:	e8bd8800 	pop	{fp, pc}

0001e25c <dummy>:
   1e25c:	e12fff1e 	bx	lr

0001e260 <__init_ssp>:
   1e260:	e12fff1e 	bx	lr

0001e264 <__init_libc>:
   1e264:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   1e268:	e24dd0b4 	sub	sp, sp, #180	; 0xb4
   1e26c:	e1a04000 	mov	r4, r0
   1e270:	e1a05001 	mov	r5, r1
   1e274:	e28d0018 	add	r0, sp, #24
   1e278:	e3a02098 	mov	r2, #152	; 0x98
   1e27c:	e3a01000 	mov	r1, #0
   1e280:	eb000e9c 	bl	21cf8 <memset>
   1e284:	e59f3170 	ldr	r3, [pc, #368]	; 1e3fc <__init_libc+0x198>
   1e288:	e3a00000 	mov	r0, #0
   1e28c:	e5834000 	str	r4, [r3]
   1e290:	e7943100 	ldr	r3, [r4, r0, lsl #2]
   1e294:	e2800001 	add	r0, r0, #1
   1e298:	e3530000 	cmp	r3, #0
   1e29c:	1afffffb 	bne	1e290 <__init_libc+0x2c>
   1e2a0:	e59f6158 	ldr	r6, [pc, #344]	; 1e400 <__init_libc+0x19c>
   1e2a4:	e0840100 	add	r0, r4, r0, lsl #2
   1e2a8:	e5860010 	str	r0, [r6, #16]
   1e2ac:	e2800004 	add	r0, r0, #4
   1e2b0:	e5104004 	ldr	r4, [r0, #-4]
   1e2b4:	e3540000 	cmp	r4, #0
   1e2b8:	1a000034 	bne	1e390 <__init_libc+0x12c>
   1e2bc:	e59f3140 	ldr	r3, [pc, #320]	; 1e404 <__init_libc+0x1a0>
   1e2c0:	e3550000 	cmp	r5, #0
   1e2c4:	e59d2058 	ldr	r2, [sp, #88]	; 0x58
   1e2c8:	e59f7138 	ldr	r7, [pc, #312]	; 1e408 <__init_libc+0x1a4>
   1e2cc:	e5832000 	str	r2, [r3]
   1e2d0:	e59d3098 	ldr	r3, [sp, #152]	; 0x98
   1e2d4:	e5873000 	str	r3, [r7]
   1e2d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
   1e2dc:	e5863024 	str	r3, [r6, #36]	; 0x24
   1e2e0:	1a000031 	bne	1e3ac <__init_libc+0x148>
   1e2e4:	e28d0018 	add	r0, sp, #24
   1e2e8:	eb00103f 	bl	223ec <__init_tls>
   1e2ec:	e59d007c 	ldr	r0, [sp, #124]	; 0x7c
   1e2f0:	ebffffda 	bl	1e260 <__init_ssp>
   1e2f4:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
   1e2f8:	e59d3048 	ldr	r3, [sp, #72]	; 0x48
   1e2fc:	e1520003 	cmp	r2, r3
   1e300:	0a000034 	beq	1e3d8 <__init_libc+0x174>
   1e304:	e3a02018 	mov	r2, #24
   1e308:	e3a01000 	mov	r1, #0
   1e30c:	e1a0000d 	mov	r0, sp
   1e310:	e59f80f4 	ldr	r8, [pc, #244]	; 1e40c <__init_libc+0x1a8>
   1e314:	e59f90f4 	ldr	r9, [pc, #244]	; 1e410 <__init_libc+0x1ac>
   1e318:	eb000e76 	bl	21cf8 <memset>
   1e31c:	e5975000 	ldr	r5, [r7]
   1e320:	e3a03001 	mov	r3, #1
   1e324:	e3a02003 	mov	r2, #3
   1e328:	e58d3008 	str	r3, [sp, #8]
   1e32c:	e1a0100d 	mov	r1, sp
   1e330:	e3a03002 	mov	r3, #2
   1e334:	e3a000a8 	mov	r0, #168	; 0xa8
   1e338:	e58d3010 	str	r3, [sp, #16]
   1e33c:	e3a03000 	mov	r3, #0
   1e340:	e12fff35 	blx	r5
   1e344:	e1a0500d 	mov	r5, sp
   1e348:	e1d530b6 	ldrh	r3, [r5, #6]
   1e34c:	e3130020 	tst	r3, #32
   1e350:	0a000007 	beq	1e374 <__init_libc+0x110>
   1e354:	e5973000 	ldr	r3, [r7]
   1e358:	e1a02008 	mov	r2, r8
   1e35c:	e1a01009 	mov	r1, r9
   1e360:	e3a00005 	mov	r0, #5
   1e364:	e12fff33 	blx	r3
   1e368:	e3500000 	cmp	r0, #0
   1e36c:	aa000000 	bge	1e374 <__init_libc+0x110>
   1e370:	e7f000f0 	udf	#0
   1e374:	e2844001 	add	r4, r4, #1
   1e378:	e2855008 	add	r5, r5, #8
   1e37c:	e3540003 	cmp	r4, #3
   1e380:	1afffff0 	bne	1e348 <__init_libc+0xe4>
   1e384:	e3a03001 	mov	r3, #1
   1e388:	e5863008 	str	r3, [r6, #8]
   1e38c:	ea000018 	b	1e3f4 <__init_libc+0x190>
   1e390:	e3540025 	cmp	r4, #37	; 0x25
   1e394:	e2800008 	add	r0, r0, #8
   1e398:	928d30b0 	addls	r3, sp, #176	; 0xb0
   1e39c:	90834104 	addls	r4, r3, r4, lsl #2
   1e3a0:	95103008 	ldrls	r3, [r0, #-8]
   1e3a4:	95043098 	strls	r3, [r4, #-152]	; 0xffffff68
   1e3a8:	eaffffc0 	b	1e2b0 <__init_libc+0x4c>
   1e3ac:	e59f3060 	ldr	r3, [pc, #96]	; 1e414 <__init_libc+0x1b0>
   1e3b0:	e5835000 	str	r5, [r3]
   1e3b4:	e59f305c 	ldr	r3, [pc, #92]	; 1e418 <__init_libc+0x1b4>
   1e3b8:	e5835000 	str	r5, [r3]
   1e3bc:	ea000001 	b	1e3c8 <__init_libc+0x164>
   1e3c0:	e352002f 	cmp	r2, #47	; 0x2f
   1e3c4:	0afffffb 	beq	1e3b8 <__init_libc+0x154>
   1e3c8:	e4d52001 	ldrb	r2, [r5], #1
   1e3cc:	e3520000 	cmp	r2, #0
   1e3d0:	1afffffa 	bne	1e3c0 <__init_libc+0x15c>
   1e3d4:	eaffffc2 	b	1e2e4 <__init_libc+0x80>
   1e3d8:	e59d204c 	ldr	r2, [sp, #76]	; 0x4c
   1e3dc:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
   1e3e0:	e1520003 	cmp	r2, r3
   1e3e4:	1affffc6 	bne	1e304 <__init_libc+0xa0>
   1e3e8:	e59d3074 	ldr	r3, [sp, #116]	; 0x74
   1e3ec:	e3530000 	cmp	r3, #0
   1e3f0:	1affffc3 	bne	1e304 <__init_libc+0xa0>
   1e3f4:	e28dd0b4 	add	sp, sp, #180	; 0xb4
   1e3f8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e3fc:	00048960 	andeq	r8, r4, r0, ror #18
   1e400:	00149004 	andseq	r9, r4, r4
   1e404:	00149000 	andseq	r9, r4, r0
   1e408:	00149044 	andseq	r9, r4, r4, asr #32
   1e40c:	00020002 	andeq	r0, r2, r2
   1e410:	00029b82 	andeq	r9, r2, r2, lsl #23
   1e414:	00048110 	andeq	r8, r4, r0, lsl r1
   1e418:	0004810c 	andeq	r8, r4, ip, lsl #2

0001e41c <__libc_start_init>:
   1e41c:	e92d4070 	push	{r4, r5, r6, lr}
   1e420:	ebffc73c 	bl	10118 <_init>
   1e424:	e59f4014 	ldr	r4, [pc, #20]	; 1e440 <__libc_start_init+0x24>
   1e428:	e59f5014 	ldr	r5, [pc, #20]	; 1e444 <__libc_start_init+0x28>
   1e42c:	e1540005 	cmp	r4, r5
   1e430:	28bd8070 	popcs	{r4, r5, r6, pc}
   1e434:	e4943004 	ldr	r3, [r4], #4
   1e438:	e12fff33 	blx	r3
   1e43c:	eafffffa 	b	1e42c <__libc_start_init+0x10>
   1e440:	0002bfe8 	andeq	fp, r2, r8, ror #31
   1e444:	0002bffc 	strdeq	fp, [r2], -ip

0001e448 <__libc_start_main>:
   1e448:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1e44c:	e2816001 	add	r6, r1, #1
   1e450:	e1a04002 	mov	r4, r2
   1e454:	e1a05001 	mov	r5, r1
   1e458:	e0826106 	add	r6, r2, r6, lsl #2
   1e45c:	e5921000 	ldr	r1, [r2]
   1e460:	e1a07000 	mov	r7, r0
   1e464:	e1a00006 	mov	r0, r6
   1e468:	ebffff7d 	bl	1e264 <__init_libc>
   1e46c:	ebffffea 	bl	1e41c <__libc_start_init>
   1e470:	e1a02006 	mov	r2, r6
   1e474:	e1a01004 	mov	r1, r4
   1e478:	e1a00005 	mov	r0, r5
   1e47c:	e12fff37 	blx	r7
   1e480:	ebffc728 	bl	10128 <exit>

0001e484 <getenv>:
   1e484:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1e488:	e1a07000 	mov	r7, r0
   1e48c:	eb000e8a 	bl	21ebc <strlen>
   1e490:	e59f6090 	ldr	r6, [pc, #144]	; 1e528 <getenv+0xa4>
   1e494:	e5963000 	ldr	r3, [r6]
   1e498:	e3530000 	cmp	r3, #0
   1e49c:	1a000001 	bne	1e4a8 <getenv+0x24>
   1e4a0:	e3a00000 	mov	r0, #0
   1e4a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1e4a8:	e5d73000 	ldrb	r3, [r7]
   1e4ac:	e3530000 	cmp	r3, #0
   1e4b0:	0afffffa 	beq	1e4a0 <getenv+0x1c>
   1e4b4:	e1a05000 	mov	r5, r0
   1e4b8:	e3a0103d 	mov	r1, #61	; 0x3d
   1e4bc:	e1a00007 	mov	r0, r7
   1e4c0:	eb000e49 	bl	21dec <strchr>
   1e4c4:	e2504000 	subs	r4, r0, #0
   1e4c8:	1afffff4 	bne	1e4a0 <getenv+0x1c>
   1e4cc:	e5963000 	ldr	r3, [r6]
   1e4d0:	e7931004 	ldr	r1, [r3, r4]
   1e4d4:	e3510000 	cmp	r1, #0
   1e4d8:	1a000006 	bne	1e4f8 <getenv+0x74>
   1e4dc:	e5963000 	ldr	r3, [r6]
   1e4e0:	e7933004 	ldr	r3, [r3, r4]
   1e4e4:	e3530000 	cmp	r3, #0
   1e4e8:	0affffec 	beq	1e4a0 <getenv+0x1c>
   1e4ec:	e2850001 	add	r0, r5, #1
   1e4f0:	e0830000 	add	r0, r3, r0
   1e4f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1e4f8:	e1a02005 	mov	r2, r5
   1e4fc:	e1a00007 	mov	r0, r7
   1e500:	eb000e8a 	bl	21f30 <strncmp>
   1e504:	e3500000 	cmp	r0, #0
   1e508:	1a000004 	bne	1e520 <getenv+0x9c>
   1e50c:	e5963000 	ldr	r3, [r6]
   1e510:	e7933004 	ldr	r3, [r3, r4]
   1e514:	e7d33005 	ldrb	r3, [r3, r5]
   1e518:	e353003d 	cmp	r3, #61	; 0x3d
   1e51c:	0affffee 	beq	1e4dc <getenv+0x58>
   1e520:	e2844004 	add	r4, r4, #4
   1e524:	eaffffe8 	b	1e4cc <getenv+0x48>
   1e528:	00048960 	andeq	r8, r4, r0, ror #18

0001e52c <__errno_location>:
   1e52c:	e59f300c 	ldr	r3, [pc, #12]	; 1e540 <__errno_location+0x14>
   1e530:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1e534:	ebffcf70 	bl	122fc <__aeabi_read_tp>
   1e538:	e0830000 	add	r0, r3, r0
   1e53c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1e540:	0000000c 	andeq	r0, r0, ip

0001e544 <abort>:
   1e544:	e92d4010 	push	{r4, lr}
   1e548:	e3a00006 	mov	r0, #6
   1e54c:	eb0003d4 	bl	1f4a4 <raise>
   1e550:	e3a00000 	mov	r0, #0
   1e554:	eb0003a9 	bl	1f400 <__block_all_sigs>
   1e558:	e7f000f0 	udf	#0
   1e55c:	e3a00009 	mov	r0, #9
   1e560:	eb0003cf 	bl	1f4a4 <raise>
   1e564:	e3a0007f 	mov	r0, #127	; 0x7f
   1e568:	eb00100e 	bl	225a8 <_Exit>

0001e56c <__assert_fail>:
   1e56c:	e92d4007 	push	{r0, r1, r2, lr}
   1e570:	e58d2004 	str	r2, [sp, #4]
   1e574:	e1a02000 	mov	r2, r0
   1e578:	e59f001c 	ldr	r0, [pc, #28]	; 1e59c <__assert_fail+0x30>
   1e57c:	e58d3000 	str	r3, [sp]
   1e580:	e1a03001 	mov	r3, r1
   1e584:	e59f1014 	ldr	r1, [pc, #20]	; 1e5a0 <__assert_fail+0x34>
   1e588:	e5900000 	ldr	r0, [r0]
   1e58c:	eb000424 	bl	1f624 <fprintf>
   1e590:	e3a00000 	mov	r0, #0
   1e594:	eb0003d8 	bl	1f4fc <fflush>
   1e598:	ebffffe9 	bl	1e544 <abort>
   1e59c:	00029c1c 	andeq	r9, r2, ip, lsl ip
   1e5a0:	00029b8c 	andeq	r9, r2, ip, lsl #23

0001e5a4 <__funcs_on_exit>:
   1e5a4:	e12fff1e 	bx	lr

0001e5a8 <__libc_exit_fini>:
   1e5a8:	e92d4070 	push	{r4, r5, r6, lr}
   1e5ac:	e59f401c 	ldr	r4, [pc, #28]	; 1e5d0 <__libc_exit_fini+0x28>
   1e5b0:	e59f501c 	ldr	r5, [pc, #28]	; 1e5d4 <__libc_exit_fini+0x2c>
   1e5b4:	e1540005 	cmp	r4, r5
   1e5b8:	8a000001 	bhi	1e5c4 <__libc_exit_fini+0x1c>
   1e5bc:	e8bd4070 	pop	{r4, r5, r6, lr}
   1e5c0:	ea002420 	b	27648 <_fini>
   1e5c4:	e5343004 	ldr	r3, [r4, #-4]!
   1e5c8:	e12fff33 	blx	r3
   1e5cc:	eafffff8 	b	1e5b4 <__libc_exit_fini+0xc>
   1e5d0:	0002c000 	andeq	ip, r2, r0
   1e5d4:	0002bffc 	strdeq	fp, [r2], -ip

0001e5d8 <open>:
   1e5d8:	e92d000e 	push	{r1, r2, r3}
   1e5dc:	e1a01000 	mov	r1, r0
   1e5e0:	e92d4030 	push	{r4, r5, lr}
   1e5e4:	e24dd018 	sub	sp, sp, #24
   1e5e8:	e59d5024 	ldr	r5, [sp, #36]	; 0x24
   1e5ec:	e2153040 	ands	r3, r5, #64	; 0x40
   1e5f0:	1a000002 	bne	1e600 <open+0x28>
   1e5f4:	e59f2070 	ldr	r2, [pc, #112]	; 1e66c <open+0x94>
   1e5f8:	e1d22005 	bics	r2, r2, r5
   1e5fc:	1a000002 	bne	1e60c <open+0x34>
   1e600:	e28d3028 	add	r3, sp, #40	; 0x28
   1e604:	e58d3014 	str	r3, [sp, #20]
   1e608:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1e60c:	e3a02000 	mov	r2, #0
   1e610:	e3a00005 	mov	r0, #5
   1e614:	e58d2008 	str	r2, [sp, #8]
   1e618:	e58d2004 	str	r2, [sp, #4]
   1e61c:	e58d2000 	str	r2, [sp]
   1e620:	e3852802 	orr	r2, r5, #131072	; 0x20000
   1e624:	eb000ea1 	bl	220b0 <__syscall_cp>
   1e628:	e2504000 	subs	r4, r0, #0
   1e62c:	ba000008 	blt	1e654 <open+0x7c>
   1e630:	e3150702 	tst	r5, #524288	; 0x80000
   1e634:	0a000006 	beq	1e654 <open+0x7c>
   1e638:	e59f3030 	ldr	r3, [pc, #48]	; 1e670 <open+0x98>
   1e63c:	e3a02002 	mov	r2, #2
   1e640:	e1a01004 	mov	r1, r4
   1e644:	e3a000dd 	mov	r0, #221	; 0xdd
   1e648:	e5935000 	ldr	r5, [r3]
   1e64c:	e3a03001 	mov	r3, #1
   1e650:	e12fff35 	blx	r5
   1e654:	e1a00004 	mov	r0, r4
   1e658:	eb000005 	bl	1e674 <__syscall_ret>
   1e65c:	e28dd018 	add	sp, sp, #24
   1e660:	e8bd4030 	pop	{r4, r5, lr}
   1e664:	e28dd00c 	add	sp, sp, #12
   1e668:	e12fff1e 	bx	lr
   1e66c:	00404000 	subeq	r4, r0, r0
   1e670:	00149044 	andseq	r9, r4, r4, asr #32

0001e674 <__syscall_ret>:
   1e674:	e3700a01 	cmn	r0, #4096	; 0x1000
   1e678:	e1a03000 	mov	r3, r0
   1e67c:	912fff1e 	bxls	lr
   1e680:	e59f2014 	ldr	r2, [pc, #20]	; 1e69c <__syscall_ret+0x28>
   1e684:	e2633000 	rsb	r3, r3, #0
   1e688:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1e68c:	ebffcf1a 	bl	122fc <__aeabi_read_tp>
   1e690:	e7823000 	str	r3, [r2, r0]
   1e694:	e3e00000 	mvn	r0, #0
   1e698:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1e69c:	0000000c 	andeq	r0, r0, ip

0001e6a0 <__simple_malloc>:
   1e6a0:	e3500001 	cmp	r0, #1
   1e6a4:	e92d41f3 	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1e6a8:	e1a08000 	mov	r8, r0
   1e6ac:	21a05000 	movcs	r5, r0
   1e6b0:	33a05001 	movcc	r5, #1
   1e6b4:	e3a04001 	mov	r4, #1
   1e6b8:	e354000f 	cmp	r4, #15
   1e6bc:	91540005 	cmpls	r4, r5
   1e6c0:	3a000017 	bcc	1e724 <__simple_malloc+0x84>
   1e6c4:	e59f6094 	ldr	r6, [pc, #148]	; 1e760 <__simple_malloc+0xc0>
   1e6c8:	e2444001 	sub	r4, r4, #1
   1e6cc:	e59f0090 	ldr	r0, [pc, #144]	; 1e764 <__simple_malloc+0xc4>
   1e6d0:	eb000e40 	bl	21fd8 <__lock>
   1e6d4:	e358013e 	cmp	r8, #-2147483633	; 0x8000000f
   1e6d8:	e59f8088 	ldr	r8, [pc, #136]	; 1e768 <__simple_malloc+0xc8>
   1e6dc:	e5962000 	ldr	r2, [r6]
   1e6e0:	e5983000 	ldr	r3, [r8]
   1e6e4:	e2627000 	rsb	r7, r2, #0
   1e6e8:	e0077004 	and	r7, r7, r4
   1e6ec:	90855007 	addls	r5, r5, r7
   1e6f0:	e0433002 	sub	r3, r3, r2
   1e6f4:	e1530005 	cmp	r3, r5
   1e6f8:	2a000013 	bcs	1e74c <__simple_malloc+0xac>
   1e6fc:	e28d0004 	add	r0, sp, #4
   1e700:	e58d5004 	str	r5, [sp, #4]
   1e704:	eb000fc2 	bl	22614 <__expand_heap>
   1e708:	e2504000 	subs	r4, r0, #0
   1e70c:	1a000006 	bne	1e72c <__simple_malloc+0x8c>
   1e710:	e59f004c 	ldr	r0, [pc, #76]	; 1e764 <__simple_malloc+0xc4>
   1e714:	eb000e46 	bl	22034 <__unlock>
   1e718:	e1a00004 	mov	r0, r4
   1e71c:	e28dd008 	add	sp, sp, #8
   1e720:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1e724:	e1a04084 	lsl	r4, r4, #1
   1e728:	eaffffe2 	b	1e6b8 <__simple_malloc+0x18>
   1e72c:	e5983000 	ldr	r3, [r8]
   1e730:	e59d0004 	ldr	r0, [sp, #4]
   1e734:	e1530004 	cmp	r3, r4
   1e738:	15864000 	strne	r4, [r6]
   1e73c:	10455007 	subne	r5, r5, r7
   1e740:	e0844000 	add	r4, r4, r0
   1e744:	13a07000 	movne	r7, #0
   1e748:	e5884000 	str	r4, [r8]
   1e74c:	e5963000 	ldr	r3, [r6]
   1e750:	e0835005 	add	r5, r3, r5
   1e754:	e0834007 	add	r4, r3, r7
   1e758:	e5865000 	str	r5, [r6]
   1e75c:	eaffffeb 	b	1e710 <__simple_malloc+0x70>
   1e760:	00048114 	andeq	r8, r4, r4, lsl r1
   1e764:	0004811c 	andeq	r8, r4, ip, lsl r1
   1e768:	00048118 	andeq	r8, r4, r8, lsl r1

0001e76c <bin_index>:
   1e76c:	e1a00220 	lsr	r0, r0, #4
   1e770:	e2400001 	sub	r0, r0, #1
   1e774:	e3500020 	cmp	r0, #32
   1e778:	912fff1e 	bxls	lr
   1e77c:	e3500c02 	cmp	r0, #512	; 0x200
   1e780:	2a000003 	bcs	1e794 <bin_index+0x28>
   1e784:	e59f3024 	ldr	r3, [pc, #36]	; 1e7b0 <bin_index+0x44>
   1e788:	e08301a0 	add	r0, r3, r0, lsr #3
   1e78c:	e5500004 	ldrb	r0, [r0, #-4]
   1e790:	e12fff1e 	bx	lr
   1e794:	e3500b07 	cmp	r0, #7168	; 0x1c00
   1e798:	959f3010 	ldrls	r3, [pc, #16]	; 1e7b0 <bin_index+0x44>
   1e79c:	908303a0 	addls	r0, r3, r0, lsr #7
   1e7a0:	95500004 	ldrbls	r0, [r0, #-4]
   1e7a4:	92800010 	addls	r0, r0, #16
   1e7a8:	83a0003f 	movhi	r0, #63	; 0x3f
   1e7ac:	e12fff1e 	bx	lr
   1e7b0:	00029baf 	andeq	r9, r2, pc, lsr #23

0001e7b4 <lock>:
   1e7b4:	e59f3050 	ldr	r3, [pc, #80]	; 1e80c <lock+0x58>
   1e7b8:	e593300c 	ldr	r3, [r3, #12]
   1e7bc:	e3530000 	cmp	r3, #0
   1e7c0:	012fff1e 	bxeq	lr
   1e7c4:	e92d4070 	push	{r4, r5, r6, lr}
   1e7c8:	e2806004 	add	r6, r0, #4
   1e7cc:	e1a04000 	mov	r4, r0
   1e7d0:	e3a05001 	mov	r5, #1
   1e7d4:	f57ff05b 	dmb	ish
   1e7d8:	e1943f9f 	ldrex	r3, [r4]
   1e7dc:	e1842f95 	strex	r2, r5, [r4]
   1e7e0:	e3520000 	cmp	r2, #0
   1e7e4:	1afffffb 	bne	1e7d8 <lock+0x24>
   1e7e8:	f57ff05b 	dmb	ish
   1e7ec:	e3530000 	cmp	r3, #0
   1e7f0:	08bd8070 	popeq	{r4, r5, r6, pc}
   1e7f4:	e3a03001 	mov	r3, #1
   1e7f8:	e1a01006 	mov	r1, r6
   1e7fc:	e1a02003 	mov	r2, r3
   1e800:	e1a00004 	mov	r0, r4
   1e804:	eb000e2a 	bl	220b4 <__wait>
   1e808:	eafffff1 	b	1e7d4 <lock+0x20>
   1e80c:	00149004 	andseq	r9, r4, r4

0001e810 <lock_bin>:
   1e810:	e92d4070 	push	{r4, r5, r6, lr}
   1e814:	e1a04000 	mov	r4, r0
   1e818:	e59f6028 	ldr	r6, [pc, #40]	; 1e848 <lock_bin+0x38>
   1e81c:	e0865200 	add	r5, r6, r0, lsl #4
   1e820:	e2855008 	add	r5, r5, #8
   1e824:	e1a00005 	mov	r0, r5
   1e828:	ebffffe1 	bl	1e7b4 <lock>
   1e82c:	e2843001 	add	r3, r4, #1
   1e830:	e7962203 	ldr	r2, [r6, r3, lsl #4]
   1e834:	e3520000 	cmp	r2, #0
   1e838:	07865203 	streq	r5, [r6, r3, lsl #4]
   1e83c:	00862203 	addeq	r2, r6, r3, lsl #4
   1e840:	05825004 	streq	r5, [r2, #4]
   1e844:	e8bd8070 	pop	{r4, r5, r6, pc}
   1e848:	00048130 	andeq	r8, r4, r0, lsr r1

0001e84c <unlock>:
   1e84c:	e5903000 	ldr	r3, [r0]
   1e850:	e3530000 	cmp	r3, #0
   1e854:	012fff1e 	bxeq	lr
   1e858:	e92d4070 	push	{r4, r5, r6, lr}
   1e85c:	e1a04000 	mov	r4, r0
   1e860:	f57ff05b 	dmb	ish
   1e864:	e3a03000 	mov	r3, #0
   1e868:	e5803000 	str	r3, [r0]
   1e86c:	f57ff05b 	dmb	ish
   1e870:	e5903004 	ldr	r3, [r0, #4]
   1e874:	e3530000 	cmp	r3, #0
   1e878:	08bd8070 	popeq	{r4, r5, r6, pc}
   1e87c:	e59f503c 	ldr	r5, [pc, #60]	; 1e8c0 <unlock+0x74>
   1e880:	e1a01000 	mov	r1, r0
   1e884:	e3a03001 	mov	r3, #1
   1e888:	e3a02081 	mov	r2, #129	; 0x81
   1e88c:	e3a000f0 	mov	r0, #240	; 0xf0
   1e890:	e5956000 	ldr	r6, [r5]
   1e894:	e12fff36 	blx	r6
   1e898:	e3700026 	cmn	r0, #38	; 0x26
   1e89c:	18bd8070 	popne	{r4, r5, r6, pc}
   1e8a0:	e595e000 	ldr	lr, [r5]
   1e8a4:	e3a03001 	mov	r3, #1
   1e8a8:	e1a01004 	mov	r1, r4
   1e8ac:	e1a02003 	mov	r2, r3
   1e8b0:	e3a000f0 	mov	r0, #240	; 0xf0
   1e8b4:	e1a0c00e 	mov	ip, lr
   1e8b8:	e8bd4070 	pop	{r4, r5, r6, lr}
   1e8bc:	e12fff1c 	bx	ip
   1e8c0:	00149044 	andseq	r9, r4, r4, asr #32

0001e8c4 <unbin>:
   1e8c4:	e590200c 	ldr	r2, [r0, #12]
   1e8c8:	e5903008 	ldr	r3, [r0, #8]
   1e8cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   1e8d0:	e1520003 	cmp	r2, r3
   1e8d4:	1a00001c 	bne	1e94c <unbin+0x88>
   1e8d8:	e3a02001 	mov	r2, #1
   1e8dc:	e2413020 	sub	r3, r1, #32
   1e8e0:	e1a03312 	lsl	r3, r2, r3
   1e8e4:	e261c020 	rsb	ip, r1, #32
   1e8e8:	e1833c32 	orr	r3, r3, r2, lsr ip
   1e8ec:	e1e0e112 	mvn	lr, r2, lsl r1
   1e8f0:	e1b02112 	lsls	r2, r2, r1
   1e8f4:	e1e03003 	mvn	r3, r3
   1e8f8:	0a000007 	beq	1e91c <unbin+0x58>
   1e8fc:	f57ff05b 	dmb	ish
   1e900:	e59f1074 	ldr	r1, [pc, #116]	; 1e97c <unbin+0xb8>
   1e904:	e1912f9f 	ldrex	r2, [r1]
   1e908:	e002200e 	and	r2, r2, lr
   1e90c:	e181cf92 	strex	ip, r2, [r1]
   1e910:	e35c0000 	cmp	ip, #0
   1e914:	1afffffa 	bne	1e904 <unbin+0x40>
   1e918:	f57ff05b 	dmb	ish
   1e91c:	e3730001 	cmn	r3, #1
   1e920:	0a000009 	beq	1e94c <unbin+0x88>
   1e924:	f57ff05b 	dmb	ish
   1e928:	e59f104c 	ldr	r1, [pc, #76]	; 1e97c <unbin+0xb8>
   1e92c:	e2812004 	add	r2, r1, #4
   1e930:	e1922f9f 	ldrex	r2, [r2]
   1e934:	e0022003 	and	r2, r2, r3
   1e938:	e281e004 	add	lr, r1, #4
   1e93c:	e18ecf92 	strex	ip, r2, [lr]
   1e940:	e35c0000 	cmp	ip, #0
   1e944:	1afffff8 	bne	1e92c <unbin+0x68>
   1e948:	f57ff05b 	dmb	ish
   1e94c:	e590200c 	ldr	r2, [r0, #12]
   1e950:	e5903008 	ldr	r3, [r0, #8]
   1e954:	e5823008 	str	r3, [r2, #8]
   1e958:	e583200c 	str	r2, [r3, #12]
   1e95c:	e5903004 	ldr	r3, [r0, #4]
   1e960:	e3832001 	orr	r2, r3, #1
   1e964:	e3c33001 	bic	r3, r3, #1
   1e968:	e5802004 	str	r2, [r0, #4]
   1e96c:	e7902003 	ldr	r2, [r0, r3]
   1e970:	e3822001 	orr	r2, r2, #1
   1e974:	e7802003 	str	r2, [r0, r3]
   1e978:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   1e97c:	00048130 	andeq	r8, r4, r0, lsr r1

0001e980 <alloc_rev>:
   1e980:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1e984:	e1a04000 	mov	r4, r0
   1e988:	e59f8060 	ldr	r8, [pc, #96]	; 1e9f0 <alloc_rev+0x70>
   1e98c:	e5947000 	ldr	r7, [r4]
   1e990:	e3170001 	tst	r7, #1
   1e994:	0a000001 	beq	1e9a0 <alloc_rev+0x20>
   1e998:	e3a00000 	mov	r0, #0
   1e99c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1e9a0:	e1a00007 	mov	r0, r7
   1e9a4:	ebffff70 	bl	1e76c <bin_index>
   1e9a8:	e1a06000 	mov	r6, r0
   1e9ac:	ebffff97 	bl	1e810 <lock_bin>
   1e9b0:	e5943000 	ldr	r3, [r4]
   1e9b4:	e0885206 	add	r5, r8, r6, lsl #4
   1e9b8:	e2855008 	add	r5, r5, #8
   1e9bc:	e1530007 	cmp	r3, r7
   1e9c0:	1a000007 	bne	1e9e4 <alloc_rev+0x64>
   1e9c4:	e3c33001 	bic	r3, r3, #1
   1e9c8:	e1a01006 	mov	r1, r6
   1e9cc:	e0440003 	sub	r0, r4, r3
   1e9d0:	ebffffbb 	bl	1e8c4 <unbin>
   1e9d4:	e1a00005 	mov	r0, r5
   1e9d8:	ebffff9b 	bl	1e84c <unlock>
   1e9dc:	e3a00001 	mov	r0, #1
   1e9e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1e9e4:	e1a00005 	mov	r0, r5
   1e9e8:	ebffff97 	bl	1e84c <unlock>
   1e9ec:	eaffffe6 	b	1e98c <alloc_rev+0xc>
   1e9f0:	00048130 	andeq	r8, r4, r0, lsr r1

0001e9f4 <alloc_fwd>:
   1e9f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1e9f8:	e1a04000 	mov	r4, r0
   1e9fc:	e59f805c 	ldr	r8, [pc, #92]	; 1ea60 <alloc_fwd+0x6c>
   1ea00:	e5947004 	ldr	r7, [r4, #4]
   1ea04:	e3170001 	tst	r7, #1
   1ea08:	0a000001 	beq	1ea14 <alloc_fwd+0x20>
   1ea0c:	e3a00000 	mov	r0, #0
   1ea10:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1ea14:	e1a00007 	mov	r0, r7
   1ea18:	ebffff53 	bl	1e76c <bin_index>
   1ea1c:	e1a06000 	mov	r6, r0
   1ea20:	ebffff7a 	bl	1e810 <lock_bin>
   1ea24:	e5943004 	ldr	r3, [r4, #4]
   1ea28:	e0885206 	add	r5, r8, r6, lsl #4
   1ea2c:	e2855008 	add	r5, r5, #8
   1ea30:	e1530007 	cmp	r3, r7
   1ea34:	1a000006 	bne	1ea54 <alloc_fwd+0x60>
   1ea38:	e1a01006 	mov	r1, r6
   1ea3c:	e1a00004 	mov	r0, r4
   1ea40:	ebffff9f 	bl	1e8c4 <unbin>
   1ea44:	e1a00005 	mov	r0, r5
   1ea48:	ebffff7f 	bl	1e84c <unlock>
   1ea4c:	e3a00001 	mov	r0, #1
   1ea50:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1ea54:	e1a00005 	mov	r0, r5
   1ea58:	ebffff7b 	bl	1e84c <unlock>
   1ea5c:	eaffffe7 	b	1ea00 <alloc_fwd+0xc>
   1ea60:	00048130 	andeq	r8, r4, r0, lsr r1

0001ea64 <free>:
   1ea64:	e3500000 	cmp	r0, #0
   1ea68:	012fff1e 	bxeq	lr
   1ea6c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea70:	e2404008 	sub	r4, r0, #8
   1ea74:	e5103004 	ldr	r3, [r0, #-4]
   1ea78:	e3130001 	tst	r3, #1
   1ea7c:	e3c3b001 	bic	fp, r3, #1
   1ea80:	1a000007 	bne	1eaa4 <free+0x40>
   1ea84:	e5103008 	ldr	r3, [r0, #-8]
   1ea88:	e3130001 	tst	r3, #1
   1ea8c:	e0440003 	sub	r0, r4, r3
   1ea90:	e083100b 	add	r1, r3, fp
   1ea94:	0a000000 	beq	1ea9c <free+0x38>
   1ea98:	e7f000f0 	udf	#0
   1ea9c:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eaa0:	ea000249 	b	1f3cc <__munmap>
   1eaa4:	e794200b 	ldr	r2, [r4, fp]
   1eaa8:	e084500b 	add	r5, r4, fp
   1eaac:	e1530002 	cmp	r3, r2
   1eab0:	0a000000 	beq	1eab8 <free+0x54>
   1eab4:	e7f000f0 	udf	#0
   1eab8:	e59f61d8 	ldr	r6, [pc, #472]	; 1ec98 <free+0x234>
   1eabc:	e1a0a00b 	mov	sl, fp
   1eac0:	e3a09000 	mov	r9, #0
   1eac4:	e5943000 	ldr	r3, [r4]
   1eac8:	e5952004 	ldr	r2, [r5, #4]
   1eacc:	e0033002 	and	r3, r3, r2
   1ead0:	e3130001 	tst	r3, #1
   1ead4:	0a000013 	beq	1eb28 <free+0xc4>
   1ead8:	e38a3001 	orr	r3, sl, #1
   1eadc:	e1a0000a 	mov	r0, sl
   1eae0:	e5843004 	str	r3, [r4, #4]
   1eae4:	e5853000 	str	r3, [r5]
   1eae8:	ebffff1f 	bl	1e76c <bin_index>
   1eaec:	e1a08000 	mov	r8, r0
   1eaf0:	ebffff46 	bl	1e810 <lock_bin>
   1eaf4:	e59f01a0 	ldr	r0, [pc, #416]	; 1ec9c <free+0x238>
   1eaf8:	e0867208 	add	r7, r6, r8, lsl #4
   1eafc:	ebffff2c 	bl	1e7b4 <lock>
   1eb00:	e5943000 	ldr	r3, [r4]
   1eb04:	e5952004 	ldr	r2, [r5, #4]
   1eb08:	e2877008 	add	r7, r7, #8
   1eb0c:	e0033002 	and	r3, r3, r2
   1eb10:	e3130001 	tst	r3, #1
   1eb14:	1a000022 	bne	1eba4 <free+0x140>
   1eb18:	e59f017c 	ldr	r0, [pc, #380]	; 1ec9c <free+0x238>
   1eb1c:	ebffff4a 	bl	1e84c <unlock>
   1eb20:	e1a00007 	mov	r0, r7
   1eb24:	ebffff48 	bl	1e84c <unlock>
   1eb28:	e1a00004 	mov	r0, r4
   1eb2c:	ebffff93 	bl	1e980 <alloc_rev>
   1eb30:	e3500000 	cmp	r0, #0
   1eb34:	0a00000b 	beq	1eb68 <free+0x104>
   1eb38:	e5943000 	ldr	r3, [r4]
   1eb3c:	e3c33001 	bic	r3, r3, #1
   1eb40:	e0444003 	sub	r4, r4, r3
   1eb44:	e5943004 	ldr	r3, [r4, #4]
   1eb48:	e3c33001 	bic	r3, r3, #1
   1eb4c:	e083200b 	add	r2, r3, fp
   1eb50:	e08aa003 	add	sl, sl, r3
   1eb54:	e352090a 	cmp	r2, #163840	; 0x28000
   1eb58:	9a000002 	bls	1eb68 <free+0x104>
   1eb5c:	e0222003 	eor	r2, r2, r3
   1eb60:	e1520003 	cmp	r2, r3
   1eb64:	83a09001 	movhi	r9, #1
   1eb68:	e1a00005 	mov	r0, r5
   1eb6c:	ebffffa0 	bl	1e9f4 <alloc_fwd>
   1eb70:	e3500000 	cmp	r0, #0
   1eb74:	0affffd2 	beq	1eac4 <free+0x60>
   1eb78:	e5953004 	ldr	r3, [r5, #4]
   1eb7c:	e3c33001 	bic	r3, r3, #1
   1eb80:	e083200b 	add	r2, r3, fp
   1eb84:	e08aa003 	add	sl, sl, r3
   1eb88:	e352090a 	cmp	r2, #163840	; 0x28000
   1eb8c:	9a000002 	bls	1eb9c <free+0x138>
   1eb90:	e0222003 	eor	r2, r2, r3
   1eb94:	e1520003 	cmp	r2, r3
   1eb98:	83a09001 	movhi	r9, #1
   1eb9c:	e0855003 	add	r5, r5, r3
   1eba0:	eaffffc7 	b	1eac4 <free+0x60>
   1eba4:	e1c620d0 	ldrd	r2, [r6]
   1eba8:	e2680020 	rsb	r0, r8, #32
   1ebac:	e248c020 	sub	ip, r8, #32
   1ebb0:	e3a01001 	mov	r1, #1
   1ebb4:	e3a0b000 	mov	fp, #0
   1ebb8:	e1a0e832 	lsr	lr, r2, r8
   1ebbc:	e18ee013 	orr	lr, lr, r3, lsl r0
   1ebc0:	e18eec33 	orr	lr, lr, r3, lsr ip
   1ebc4:	e1a0300b 	mov	r3, fp
   1ebc8:	e00e2001 	and	r2, lr, r1
   1ebcc:	e1923003 	orrs	r3, r2, r3
   1ebd0:	1a000015 	bne	1ec2c <free+0x1c8>
   1ebd4:	e18b3c11 	orr	r3, fp, r1, lsl ip
   1ebd8:	e1833031 	orr	r3, r3, r1, lsr r0
   1ebdc:	e1b01811 	lsls	r1, r1, r8
   1ebe0:	0a000006 	beq	1ec00 <free+0x19c>
   1ebe4:	f57ff05b 	dmb	ish
   1ebe8:	e1962f9f 	ldrex	r2, [r6]
   1ebec:	e1812002 	orr	r2, r1, r2
   1ebf0:	e1860f92 	strex	r0, r2, [r6]
   1ebf4:	e3500000 	cmp	r0, #0
   1ebf8:	1afffffa 	bne	1ebe8 <free+0x184>
   1ebfc:	f57ff05b 	dmb	ish
   1ec00:	e3530000 	cmp	r3, #0
   1ec04:	0a000008 	beq	1ec2c <free+0x1c8>
   1ec08:	f57ff05b 	dmb	ish
   1ec0c:	e2862004 	add	r2, r6, #4
   1ec10:	e1922f9f 	ldrex	r2, [r2]
   1ec14:	e1832002 	orr	r2, r3, r2
   1ec18:	e2860004 	add	r0, r6, #4
   1ec1c:	e1801f92 	strex	r1, r2, [r0]
   1ec20:	e3510000 	cmp	r1, #0
   1ec24:	1afffff8 	bne	1ec0c <free+0x1a8>
   1ec28:	f57ff05b 	dmb	ish
   1ec2c:	e2888001 	add	r8, r8, #1
   1ec30:	e584a004 	str	sl, [r4, #4]
   1ec34:	e59f0060 	ldr	r0, [pc, #96]	; 1ec9c <free+0x238>
   1ec38:	e0866208 	add	r6, r6, r8, lsl #4
   1ec3c:	e585a000 	str	sl, [r5]
   1ec40:	ebffff01 	bl	1e84c <unlock>
   1ec44:	e2463008 	sub	r3, r6, #8
   1ec48:	e5843008 	str	r3, [r4, #8]
   1ec4c:	e3590000 	cmp	r9, #0
   1ec50:	e5963004 	ldr	r3, [r6, #4]
   1ec54:	e584300c 	str	r3, [r4, #12]
   1ec58:	e5864004 	str	r4, [r6, #4]
   1ec5c:	e594300c 	ldr	r3, [r4, #12]
   1ec60:	e5834008 	str	r4, [r3, #8]
   1ec64:	0a000008 	beq	1ec8c <free+0x228>
   1ec68:	e59f1030 	ldr	r1, [pc, #48]	; 1eca0 <free+0x23c>
   1ec6c:	e2844a01 	add	r4, r4, #4096	; 0x1000
   1ec70:	e284400f 	add	r4, r4, #15
   1ec74:	e2455010 	sub	r5, r5, #16
   1ec78:	e0040001 	and	r0, r4, r1
   1ec7c:	e0011005 	and	r1, r1, r5
   1ec80:	e0411000 	sub	r1, r1, r0
   1ec84:	e3a02004 	mov	r2, #4
   1ec88:	eb00016d 	bl	1f244 <__madvise>
   1ec8c:	e1a00007 	mov	r0, r7
   1ec90:	e8bd4ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ec94:	eafffeec 	b	1e84c <unlock>
   1ec98:	00048130 	andeq	r8, r4, r0, lsr r1
   1ec9c:	00048538 	andeq	r8, r4, r8, lsr r5
   1eca0:	fffff000 			; <UNDEFINED> instruction: 0xfffff000

0001eca4 <trim>:
   1eca4:	e5903004 	ldr	r3, [r0, #4]
   1eca8:	e3c33001 	bic	r3, r3, #1
   1ecac:	e2432010 	sub	r2, r3, #16
   1ecb0:	e1520001 	cmp	r2, r1
   1ecb4:	912fff1e 	bxls	lr
   1ecb8:	e0802001 	add	r2, r0, r1
   1ecbc:	e381c001 	orr	ip, r1, #1
   1ecc0:	e780c001 	str	ip, [r0, r1]
   1ecc4:	e0431001 	sub	r1, r3, r1
   1ecc8:	e3811001 	orr	r1, r1, #1
   1eccc:	e5821004 	str	r1, [r2, #4]
   1ecd0:	e7801003 	str	r1, [r0, r3]
   1ecd4:	e580c004 	str	ip, [r0, #4]
   1ecd8:	e2820008 	add	r0, r2, #8
   1ecdc:	eaffff60 	b	1ea64 <free>

0001ece0 <malloc>:
   1ece0:	e59f3300 	ldr	r3, [pc, #768]	; 1efe8 <malloc+0x308>
   1ece4:	e2402001 	sub	r2, r0, #1
   1ece8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ecec:	e1520003 	cmp	r2, r3
   1ecf0:	e24dd024 	sub	sp, sp, #36	; 0x24
   1ecf4:	9a000008 	bls	1ed1c <malloc+0x3c>
   1ecf8:	e3500000 	cmp	r0, #0
   1ecfc:	03a05010 	moveq	r5, #16
   1ed00:	0a000021 	beq	1ed8c <malloc+0xac>
   1ed04:	e59f32e0 	ldr	r3, [pc, #736]	; 1efec <malloc+0x30c>
   1ed08:	e3a0200c 	mov	r2, #12
   1ed0c:	ebffcd7a 	bl	122fc <__aeabi_read_tp>
   1ed10:	e7832000 	str	r2, [r3, r0]
   1ed14:	e3a04000 	mov	r4, #0
   1ed18:	ea000018 	b	1ed80 <malloc+0xa0>
   1ed1c:	e2800017 	add	r0, r0, #23
   1ed20:	e3c0500f 	bic	r5, r0, #15
   1ed24:	e3550907 	cmp	r5, #114688	; 0x1c000
   1ed28:	9a000017 	bls	1ed8c <malloc+0xac>
   1ed2c:	e2855a01 	add	r5, r5, #4096	; 0x1000
   1ed30:	e3a02000 	mov	r2, #0
   1ed34:	e2855007 	add	r5, r5, #7
   1ed38:	e3a03000 	mov	r3, #0
   1ed3c:	e3c55eff 	bic	r5, r5, #4080	; 0xff0
   1ed40:	e1cd20f8 	strd	r2, [sp, #8]
   1ed44:	e3c5500f 	bic	r5, r5, #15
   1ed48:	e3e03000 	mvn	r3, #0
   1ed4c:	e3a02003 	mov	r2, #3
   1ed50:	e58d3000 	str	r3, [sp]
   1ed54:	e1a01005 	mov	r1, r5
   1ed58:	e3a03022 	mov	r3, #34	; 0x22
   1ed5c:	e3a00000 	mov	r0, #0
   1ed60:	eb000143 	bl	1f274 <__mmap>
   1ed64:	e3700001 	cmn	r0, #1
   1ed68:	0affffe9 	beq	1ed14 <malloc+0x34>
   1ed6c:	e2804010 	add	r4, r0, #16
   1ed70:	e2455008 	sub	r5, r5, #8
   1ed74:	e3a03008 	mov	r3, #8
   1ed78:	e580500c 	str	r5, [r0, #12]
   1ed7c:	e5803008 	str	r3, [r0, #8]
   1ed80:	e1a00004 	mov	r0, r4
   1ed84:	e28dd024 	add	sp, sp, #36	; 0x24
   1ed88:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed8c:	e1a02225 	lsr	r2, r5, #4
   1ed90:	e2423001 	sub	r3, r2, #1
   1ed94:	e3530020 	cmp	r3, #32
   1ed98:	91a09003 	movls	r9, r3
   1ed9c:	9a000008 	bls	1edc4 <malloc+0xe4>
   1eda0:	e59f3248 	ldr	r3, [pc, #584]	; 1eff0 <malloc+0x310>
   1eda4:	e2422002 	sub	r2, r2, #2
   1eda8:	e3520c02 	cmp	r2, #512	; 0x200
   1edac:	308331a2 	addcc	r3, r3, r2, lsr #3
   1edb0:	208333a2 	addcs	r3, r3, r2, lsr #7
   1edb4:	35533004 	ldrbcc	r3, [r3, #-4]
   1edb8:	25533004 	ldrbcs	r3, [r3, #-4]
   1edbc:	32839001 	addcc	r9, r3, #1
   1edc0:	22839011 	addcs	r9, r3, #17
   1edc4:	e3a02001 	mov	r2, #1
   1edc8:	e249e020 	sub	lr, r9, #32
   1edcc:	e59fb220 	ldr	fp, [pc, #544]	; 1eff4 <malloc+0x314>
   1edd0:	e269c020 	rsb	ip, r9, #32
   1edd4:	e1a00912 	lsl	r0, r2, r9
   1edd8:	e3a01000 	mov	r1, #0
   1eddc:	e1811e12 	orr	r1, r1, r2, lsl lr
   1ede0:	e2700000 	rsbs	r0, r0, #0
   1ede4:	e1811c32 	orr	r1, r1, r2, lsr ip
   1ede8:	e2e11000 	rsc	r1, r1, #0
   1edec:	e1cd01f0 	strd	r0, [sp, #16]
   1edf0:	e59f3200 	ldr	r3, [pc, #512]	; 1eff8 <malloc+0x318>
   1edf4:	e1c300d0 	ldrd	r0, [r3]
   1edf8:	e59d3010 	ldr	r3, [sp, #16]
   1edfc:	e0006003 	and	r6, r0, r3
   1ee00:	e59d3014 	ldr	r3, [sp, #20]
   1ee04:	e0017003 	and	r7, r1, r3
   1ee08:	e1963007 	orrs	r3, r6, r7
   1ee0c:	1a000035 	bne	1eee8 <malloc+0x208>
   1ee10:	e59f01e4 	ldr	r0, [pc, #484]	; 1effc <malloc+0x31c>
   1ee14:	e2853010 	add	r3, r5, #16
   1ee18:	e58d301c 	str	r3, [sp, #28]
   1ee1c:	ebfffe64 	bl	1e7b4 <lock>
   1ee20:	e28d001c 	add	r0, sp, #28
   1ee24:	eb000dfa 	bl	22614 <__expand_heap>
   1ee28:	e2504000 	subs	r4, r0, #0
   1ee2c:	1a000002 	bne	1ee3c <malloc+0x15c>
   1ee30:	e59f01c4 	ldr	r0, [pc, #452]	; 1effc <malloc+0x31c>
   1ee34:	ebfffe84 	bl	1e84c <unlock>
   1ee38:	eaffffd0 	b	1ed80 <malloc+0xa0>
   1ee3c:	e59f31bc 	ldr	r3, [pc, #444]	; 1f000 <malloc+0x320>
   1ee40:	e5936000 	ldr	r6, [r3]
   1ee44:	e1a02003 	mov	r2, r3
   1ee48:	e1540006 	cmp	r4, r6
   1ee4c:	0a000005 	beq	1ee68 <malloc+0x188>
   1ee50:	e59d301c 	ldr	r3, [sp, #28]
   1ee54:	e2846010 	add	r6, r4, #16
   1ee58:	e2433010 	sub	r3, r3, #16
   1ee5c:	e58d301c 	str	r3, [sp, #28]
   1ee60:	e3a03001 	mov	r3, #1
   1ee64:	e5843008 	str	r3, [r4, #8]
   1ee68:	e59d301c 	ldr	r3, [sp, #28]
   1ee6c:	e2464008 	sub	r4, r6, #8
   1ee70:	e59f0184 	ldr	r0, [pc, #388]	; 1effc <malloc+0x31c>
   1ee74:	e0861003 	add	r1, r6, r3
   1ee78:	e3833001 	orr	r3, r3, #1
   1ee7c:	e5821000 	str	r1, [r2]
   1ee80:	e3a02001 	mov	r2, #1
   1ee84:	e5013008 	str	r3, [r1, #-8]
   1ee88:	e5012004 	str	r2, [r1, #-4]
   1ee8c:	e5063004 	str	r3, [r6, #-4]
   1ee90:	ebfffe6d 	bl	1e84c <unlock>
   1ee94:	e1a00004 	mov	r0, r4
   1ee98:	ebfffeb8 	bl	1e980 <alloc_rev>
   1ee9c:	e3500000 	cmp	r0, #0
   1eea0:	0a00000b 	beq	1eed4 <malloc+0x1f4>
   1eea4:	e5163008 	ldr	r3, [r6, #-8]
   1eea8:	e5161004 	ldr	r1, [r6, #-4]
   1eeac:	e3c33001 	bic	r3, r3, #1
   1eeb0:	e0443003 	sub	r3, r4, r3
   1eeb4:	e5932004 	ldr	r2, [r3, #4]
   1eeb8:	e3c22001 	bic	r2, r2, #1
   1eebc:	e0822001 	add	r2, r2, r1
   1eec0:	e5832004 	str	r2, [r3, #4]
   1eec4:	e5161004 	ldr	r1, [r6, #-4]
   1eec8:	e3c11001 	bic	r1, r1, #1
   1eecc:	e7842001 	str	r2, [r4, r1]
   1eed0:	e1a04003 	mov	r4, r3
   1eed4:	e1a00004 	mov	r0, r4
   1eed8:	e1a01005 	mov	r1, r5
   1eedc:	ebffff70 	bl	1eca4 <trim>
   1eee0:	e2844008 	add	r4, r4, #8
   1eee4:	eaffffa5 	b	1ed80 <malloc+0xa0>
   1eee8:	e3560000 	cmp	r6, #0
   1eeec:	e59f1110 	ldr	r1, [pc, #272]	; 1f004 <malloc+0x324>
   1eef0:	1a00001d 	bne	1ef6c <malloc+0x28c>
   1eef4:	e2672000 	rsb	r2, r7, #0
   1eef8:	e0022007 	and	r2, r2, r7
   1eefc:	e002029b 	mul	r2, fp, r2
   1ef00:	e7d11da2 	ldrb	r1, [r1, r2, lsr #27]
   1ef04:	e281a020 	add	sl, r1, #32
   1ef08:	e1a0000a 	mov	r0, sl
   1ef0c:	e28a8001 	add	r8, sl, #1
   1ef10:	ebfffe3e 	bl	1e810 <lock_bin>
   1ef14:	e59f30dc 	ldr	r3, [pc, #220]	; 1eff8 <malloc+0x318>
   1ef18:	e7934208 	ldr	r4, [r3, r8, lsl #4]
   1ef1c:	e0838208 	add	r8, r3, r8, lsl #4
   1ef20:	e2488008 	sub	r8, r8, #8
   1ef24:	e1540008 	cmp	r4, r8
   1ef28:	0a00002b 	beq	1efdc <malloc+0x2fc>
   1ef2c:	e35a0027 	cmp	sl, #39	; 0x27
   1ef30:	da000009 	ble	1ef5c <malloc+0x27c>
   1ef34:	e2893002 	add	r3, r9, #2
   1ef38:	e15a0003 	cmp	sl, r3
   1ef3c:	ca00000f 	bgt	1ef80 <malloc+0x2a0>
   1ef40:	e35a003f 	cmp	sl, #63	; 0x3f
   1ef44:	1a000004 	bne	1ef5c <malloc+0x27c>
   1ef48:	e5942004 	ldr	r2, [r4, #4]
   1ef4c:	e3c22001 	bic	r2, r2, #1
   1ef50:	e0423005 	sub	r3, r2, r5
   1ef54:	e3530907 	cmp	r3, #114688	; 0x1c000
   1ef58:	8a00000a 	bhi	1ef88 <malloc+0x2a8>
   1ef5c:	e1a0100a 	mov	r1, sl
   1ef60:	e1a00004 	mov	r0, r4
   1ef64:	ebfffe56 	bl	1e8c4 <unbin>
   1ef68:	ea000018 	b	1efd0 <malloc+0x2f0>
   1ef6c:	e2662000 	rsb	r2, r6, #0
   1ef70:	e0022006 	and	r2, r2, r6
   1ef74:	e002029b 	mul	r2, fp, r2
   1ef78:	e7d1ada2 	ldrb	sl, [r1, r2, lsr #27]
   1ef7c:	eaffffe1 	b	1ef08 <malloc+0x228>
   1ef80:	e5942004 	ldr	r2, [r4, #4]
   1ef84:	e3c22001 	bic	r2, r2, #1
   1ef88:	e0426005 	sub	r6, r2, r5
   1ef8c:	e1a00006 	mov	r0, r6
   1ef90:	ebfffdf5 	bl	1e76c <bin_index>
   1ef94:	e15a0000 	cmp	sl, r0
   1ef98:	1affffef 	bne	1ef5c <malloc+0x27c>
   1ef9c:	e594100c 	ldr	r1, [r4, #12]
   1efa0:	e0843005 	add	r3, r4, r5
   1efa4:	e5940008 	ldr	r0, [r4, #8]
   1efa8:	e583100c 	str	r1, [r3, #12]
   1efac:	e5830008 	str	r0, [r3, #8]
   1efb0:	e5813008 	str	r3, [r1, #8]
   1efb4:	e5931008 	ldr	r1, [r3, #8]
   1efb8:	e581300c 	str	r3, [r1, #12]
   1efbc:	e3851001 	orr	r1, r5, #1
   1efc0:	e7841005 	str	r1, [r4, r5]
   1efc4:	e5836004 	str	r6, [r3, #4]
   1efc8:	e7846002 	str	r6, [r4, r2]
   1efcc:	e5841004 	str	r1, [r4, #4]
   1efd0:	e1a00008 	mov	r0, r8
   1efd4:	ebfffe1c 	bl	1e84c <unlock>
   1efd8:	eaffffbd 	b	1eed4 <malloc+0x1f4>
   1efdc:	e1a00004 	mov	r0, r4
   1efe0:	ebfffe19 	bl	1e84c <unlock>
   1efe4:	eaffff81 	b	1edf0 <malloc+0x110>
   1efe8:	7fffefef 	svcvc	0x00ffefef
   1efec:	0000000c 	andeq	r0, r0, ip
   1eff0:	00029baf 	andeq	r9, r2, pc, lsr #23
   1eff4:	076be629 	strbeq	lr, [fp, -r9, lsr #12]!
   1eff8:	00048130 	andeq	r8, r4, r0, lsr r1
   1effc:	00048128 	andeq	r8, r4, r8, lsr #2
   1f000:	00048124 	andeq	r8, r4, r4, lsr #2
   1f004:	00029beb 	andeq	r9, r2, fp, ror #23

0001f008 <__malloc0>:
   1f008:	e92d4010 	push	{r4, lr}
   1f00c:	e1a04000 	mov	r4, r0
   1f010:	ebffff32 	bl	1ece0 <malloc>
   1f014:	e3500000 	cmp	r0, #0
   1f018:	08bd8010 	popeq	{r4, pc}
   1f01c:	e5103004 	ldr	r3, [r0, #-4]
   1f020:	e3130001 	tst	r3, #1
   1f024:	08bd8010 	popeq	{r4, pc}
   1f028:	e2844003 	add	r4, r4, #3
   1f02c:	e1a03000 	mov	r3, r0
   1f030:	e3c44003 	bic	r4, r4, #3
   1f034:	e3a02000 	mov	r2, #0
   1f038:	e0804004 	add	r4, r0, r4
   1f03c:	e1530004 	cmp	r3, r4
   1f040:	08bd8010 	popeq	{r4, pc}
   1f044:	e5931000 	ldr	r1, [r3]
   1f048:	e2833004 	add	r3, r3, #4
   1f04c:	e3510000 	cmp	r1, #0
   1f050:	15032004 	strne	r2, [r3, #-4]
   1f054:	eafffff8 	b	1f03c <__malloc0+0x34>

0001f058 <realloc>:
   1f058:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f05c:	e2506000 	subs	r6, r0, #0
   1f060:	1a000002 	bne	1f070 <realloc+0x18>
   1f064:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f068:	e1a00001 	mov	r0, r1
   1f06c:	eaffff1b 	b	1ece0 <malloc>
   1f070:	e59f316c 	ldr	r3, [pc, #364]	; 1f1e4 <realloc+0x18c>
   1f074:	e2412001 	sub	r2, r1, #1
   1f078:	e1520003 	cmp	r2, r3
   1f07c:	9a000009 	bls	1f0a8 <realloc+0x50>
   1f080:	e3510000 	cmp	r1, #0
   1f084:	03a05010 	moveq	r5, #16
   1f088:	0a000008 	beq	1f0b0 <realloc+0x58>
   1f08c:	e59f3154 	ldr	r3, [pc, #340]	; 1f1e8 <realloc+0x190>
   1f090:	e3a0200c 	mov	r2, #12
   1f094:	ebffcc98 	bl	122fc <__aeabi_read_tp>
   1f098:	e7832000 	str	r2, [r3, r0]
   1f09c:	e3a04000 	mov	r4, #0
   1f0a0:	e1a00004 	mov	r0, r4
   1f0a4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1f0a8:	e2811017 	add	r1, r1, #23
   1f0ac:	e3c1500f 	bic	r5, r1, #15
   1f0b0:	e5163004 	ldr	r3, [r6, #-4]
   1f0b4:	e2469008 	sub	r9, r6, #8
   1f0b8:	e3130001 	tst	r3, #1
   1f0bc:	e3c38001 	bic	r8, r3, #1
   1f0c0:	1a000023 	bne	1f154 <realloc+0xfc>
   1f0c4:	e5167008 	ldr	r7, [r6, #-8]
   1f0c8:	e3170001 	tst	r7, #1
   1f0cc:	e0888007 	add	r8, r8, r7
   1f0d0:	e085a007 	add	sl, r5, r7
   1f0d4:	0a000000 	beq	1f0dc <realloc+0x84>
   1f0d8:	e7f000f0 	udf	#0
   1f0dc:	e35a0a01 	cmp	sl, #4096	; 0x1000
   1f0e0:	2a000004 	bcs	1f0f8 <realloc+0xa0>
   1f0e4:	e1a00005 	mov	r0, r5
   1f0e8:	ebfffefc 	bl	1ece0 <malloc>
   1f0ec:	e2504000 	subs	r4, r0, #0
   1f0f0:	12452008 	subne	r2, r5, #8
   1f0f4:	1a000035 	bne	1f1d0 <realloc+0x178>
   1f0f8:	e28a4eff 	add	r4, sl, #4080	; 0xff0
   1f0fc:	e284400f 	add	r4, r4, #15
   1f100:	e3c44eff 	bic	r4, r4, #4080	; 0xff0
   1f104:	e3c4400f 	bic	r4, r4, #15
   1f108:	e1580004 	cmp	r8, r4
   1f10c:	1a000001 	bne	1f118 <realloc+0xc0>
   1f110:	e1a04006 	mov	r4, r6
   1f114:	eaffffe1 	b	1f0a0 <realloc+0x48>
   1f118:	e0490007 	sub	r0, r9, r7
   1f11c:	e3a03001 	mov	r3, #1
   1f120:	e1a02004 	mov	r2, r4
   1f124:	e1a01008 	mov	r1, r8
   1f128:	eb000082 	bl	1f338 <__mremap>
   1f12c:	e3700001 	cmn	r0, #1
   1f130:	1a000002 	bne	1f140 <realloc+0xe8>
   1f134:	e1580004 	cmp	r8, r4
   1f138:	8afffff4 	bhi	1f110 <realloc+0xb8>
   1f13c:	eaffffd6 	b	1f09c <realloc+0x44>
   1f140:	e0800007 	add	r0, r0, r7
   1f144:	e0447007 	sub	r7, r4, r7
   1f148:	e2804008 	add	r4, r0, #8
   1f14c:	e5807004 	str	r7, [r0, #4]
   1f150:	eaffffd2 	b	1f0a0 <realloc+0x48>
   1f154:	e7992008 	ldr	r2, [r9, r8]
   1f158:	e0894008 	add	r4, r9, r8
   1f15c:	e1530002 	cmp	r3, r2
   1f160:	0a000000 	beq	1f168 <realloc+0x110>
   1f164:	e7f000f0 	udf	#0
   1f168:	e1550008 	cmp	r5, r8
   1f16c:	9a000010 	bls	1f1b4 <realloc+0x15c>
   1f170:	e1a00004 	mov	r0, r4
   1f174:	ebfffe1e 	bl	1e9f4 <alloc_fwd>
   1f178:	e3500000 	cmp	r0, #0
   1f17c:	0a00000c 	beq	1f1b4 <realloc+0x15c>
   1f180:	e5942004 	ldr	r2, [r4, #4]
   1f184:	e3c22001 	bic	r2, r2, #1
   1f188:	e0823008 	add	r3, r2, r8
   1f18c:	e0844002 	add	r4, r4, r2
   1f190:	e1550003 	cmp	r5, r3
   1f194:	e3832001 	orr	r2, r3, #1
   1f198:	e5062004 	str	r2, [r6, #-4]
   1f19c:	e5842000 	str	r2, [r4]
   1f1a0:	8a000005 	bhi	1f1bc <realloc+0x164>
   1f1a4:	e1a01005 	mov	r1, r5
   1f1a8:	e1a00009 	mov	r0, r9
   1f1ac:	ebfffebc 	bl	1eca4 <trim>
   1f1b0:	eaffffd6 	b	1f110 <realloc+0xb8>
   1f1b4:	e1a03008 	mov	r3, r8
   1f1b8:	eafffff4 	b	1f190 <realloc+0x138>
   1f1bc:	e2450008 	sub	r0, r5, #8
   1f1c0:	ebfffec6 	bl	1ece0 <malloc>
   1f1c4:	e2504000 	subs	r4, r0, #0
   1f1c8:	0affffb4 	beq	1f0a0 <realloc+0x48>
   1f1cc:	e2482008 	sub	r2, r8, #8
   1f1d0:	e1a01006 	mov	r1, r6
   1f1d4:	eb00097a 	bl	217c4 <memcpy>
   1f1d8:	e1a00006 	mov	r0, r6
   1f1dc:	ebfffe20 	bl	1ea64 <free>
   1f1e0:	eaffffae 	b	1f0a0 <realloc+0x48>
   1f1e4:	7fffefef 	svcvc	0x00ffefef
   1f1e8:	0000000c 	andeq	r0, r0, ip

0001f1ec <syscall>:
   1f1ec:	e92d000f 	push	{r0, r1, r2, r3}
   1f1f0:	e92d4010 	push	{r4, lr}
   1f1f4:	e24dd018 	sub	sp, sp, #24
   1f1f8:	e28d0020 	add	r0, sp, #32
   1f1fc:	e28d2024 	add	r2, sp, #36	; 0x24
   1f200:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
   1f204:	e58d2014 	str	r2, [sp, #20]
   1f208:	e58d3008 	str	r3, [sp, #8]
   1f20c:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
   1f210:	e58d3004 	str	r3, [sp, #4]
   1f214:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
   1f218:	e58d3000 	str	r3, [sp]
   1f21c:	e59f301c 	ldr	r3, [pc, #28]	; 1f240 <syscall+0x54>
   1f220:	e5934000 	ldr	r4, [r3]
   1f224:	e890000f 	ldm	r0, {r0, r1, r2, r3}
   1f228:	e12fff34 	blx	r4
   1f22c:	ebfffd10 	bl	1e674 <__syscall_ret>
   1f230:	e28dd018 	add	sp, sp, #24
   1f234:	e8bd4010 	pop	{r4, lr}
   1f238:	e28dd010 	add	sp, sp, #16
   1f23c:	e12fff1e 	bx	lr
   1f240:	00149044 	andseq	r9, r4, r4, asr #32

0001f244 <__madvise>:
   1f244:	e1a03002 	mov	r3, r2
   1f248:	e59f201c 	ldr	r2, [pc, #28]	; 1f26c <__madvise+0x28>
   1f24c:	e92d4010 	push	{r4, lr}
   1f250:	e5924000 	ldr	r4, [r2]
   1f254:	e1a02001 	mov	r2, r1
   1f258:	e1a01000 	mov	r1, r0
   1f25c:	e3a000dc 	mov	r0, #220	; 0xdc
   1f260:	e12fff34 	blx	r4
   1f264:	e8bd4010 	pop	{r4, lr}
   1f268:	eafffd01 	b	1e674 <__syscall_ret>
   1f26c:	00149044 	andseq	r9, r4, r4, asr #32

0001f270 <__vm_wait>:
   1f270:	e12fff1e 	bx	lr

0001f274 <__mmap>:
   1f274:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f278:	e24dd01c 	sub	sp, sp, #28
   1f27c:	e1a0a002 	mov	sl, r2
   1f280:	e1a08003 	mov	r8, r3
   1f284:	e59db04c 	ldr	fp, [sp, #76]	; 0x4c
   1f288:	e59d4048 	ldr	r4, [sp, #72]	; 0x48
   1f28c:	e3cb7eff 	bic	r7, fp, #4080	; 0xff0
   1f290:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
   1f294:	e7eb6054 	ubfx	r6, r4, #0, #12
   1f298:	e3c7700f 	bic	r7, r7, #15
   1f29c:	e1962007 	orrs	r2, r6, r7
   1f2a0:	0a000006 	beq	1f2c0 <__mmap+0x4c>
   1f2a4:	e59f3080 	ldr	r3, [pc, #128]	; 1f32c <__mmap+0xb8>
   1f2a8:	e3a02016 	mov	r2, #22
   1f2ac:	ebffcc12 	bl	122fc <__aeabi_read_tp>
   1f2b0:	e7832000 	str	r2, [r3, r0]
   1f2b4:	e3e00000 	mvn	r0, #0
   1f2b8:	e28dd01c 	add	sp, sp, #28
   1f2bc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f2c0:	e371010a 	cmn	r1, #-2147483646	; 0x80000002
   1f2c4:	e1a05001 	mov	r5, r1
   1f2c8:	9a000003 	bls	1f2dc <__mmap+0x68>
   1f2cc:	e59f3058 	ldr	r3, [pc, #88]	; 1f32c <__mmap+0xb8>
   1f2d0:	e3a0200c 	mov	r2, #12
   1f2d4:	ebffcc08 	bl	122fc <__aeabi_read_tp>
   1f2d8:	eafffff4 	b	1f2b0 <__mmap+0x3c>
   1f2dc:	e3180010 	tst	r8, #16
   1f2e0:	e1a09000 	mov	r9, r0
   1f2e4:	0a000002 	beq	1f2f4 <__mmap+0x80>
   1f2e8:	e58d3014 	str	r3, [sp, #20]
   1f2ec:	ebffffdf 	bl	1f270 <__vm_wait>
   1f2f0:	e59d3014 	ldr	r3, [sp, #20]
   1f2f4:	e1a0c624 	lsr	ip, r4, #12
   1f2f8:	e58d8000 	str	r8, [sp]
   1f2fc:	e18cca0b 	orr	ip, ip, fp, lsl #20
   1f300:	e98d1008 	stmib	sp, {r3, ip}
   1f304:	e59f3024 	ldr	r3, [pc, #36]	; 1f330 <__mmap+0xbc>
   1f308:	e1a02005 	mov	r2, r5
   1f30c:	e1a01009 	mov	r1, r9
   1f310:	e3a000c0 	mov	r0, #192	; 0xc0
   1f314:	e5934000 	ldr	r4, [r3]
   1f318:	e1a0300a 	mov	r3, sl
   1f31c:	e12fff34 	blx	r4
   1f320:	e28dd01c 	add	sp, sp, #28
   1f324:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f328:	eafffcd1 	b	1e674 <__syscall_ret>
   1f32c:	0000000c 	andeq	r0, r0, ip
   1f330:	00149044 	andseq	r9, r4, r4, asr #32

0001f334 <dummy>:
   1f334:	e12fff1e 	bx	lr

0001f338 <__mremap>:
   1f338:	e372010a 	cmn	r2, #-2147483646	; 0x80000002
   1f33c:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
   1f340:	e92d40ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
   1f344:	e59d7024 	ldr	r7, [sp, #36]	; 0x24
   1f348:	9a000008 	bls	1f370 <__mremap+0x38>
   1f34c:	e59f306c 	ldr	r3, [pc, #108]	; 1f3c0 <__mremap+0x88>
   1f350:	ebffcbe9 	bl	122fc <__aeabi_read_tp>
   1f354:	e3a0200c 	mov	r2, #12
   1f358:	e7832000 	str	r2, [r3, r0]
   1f35c:	e3e00000 	mvn	r0, #0
   1f360:	e28dd010 	add	sp, sp, #16
   1f364:	e8bd40f0 	pop	{r4, r5, r6, r7, lr}
   1f368:	e28dd004 	add	sp, sp, #4
   1f36c:	e12fff1e 	bx	lr
   1f370:	e2173002 	ands	r3, r7, #2
   1f374:	e1a05000 	mov	r5, r0
   1f378:	e1a06001 	mov	r6, r1
   1f37c:	e1a04002 	mov	r4, r2
   1f380:	0a000003 	beq	1f394 <__mremap+0x5c>
   1f384:	ebffffb9 	bl	1f270 <__vm_wait>
   1f388:	e28d3028 	add	r3, sp, #40	; 0x28
   1f38c:	e58d300c 	str	r3, [sp, #12]
   1f390:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   1f394:	e58d3004 	str	r3, [sp, #4]
   1f398:	e1a02006 	mov	r2, r6
   1f39c:	e59f3020 	ldr	r3, [pc, #32]	; 1f3c4 <__mremap+0x8c>
   1f3a0:	e1a01005 	mov	r1, r5
   1f3a4:	e58d7000 	str	r7, [sp]
   1f3a8:	e3a000a3 	mov	r0, #163	; 0xa3
   1f3ac:	e5937000 	ldr	r7, [r3]
   1f3b0:	e1a03004 	mov	r3, r4
   1f3b4:	e12fff37 	blx	r7
   1f3b8:	ebfffcad 	bl	1e674 <__syscall_ret>
   1f3bc:	eaffffe7 	b	1f360 <__mremap+0x28>
   1f3c0:	0000000c 	andeq	r0, r0, ip
   1f3c4:	00149044 	andseq	r9, r4, r4, asr #32

0001f3c8 <dummy>:
   1f3c8:	e12fff1e 	bx	lr

0001f3cc <__munmap>:
   1f3cc:	e92d4070 	push	{r4, r5, r6, lr}
   1f3d0:	e1a04000 	mov	r4, r0
   1f3d4:	e1a05001 	mov	r5, r1
   1f3d8:	ebffffa4 	bl	1f270 <__vm_wait>
   1f3dc:	e59f3018 	ldr	r3, [pc, #24]	; 1f3fc <__munmap+0x30>
   1f3e0:	e1a02005 	mov	r2, r5
   1f3e4:	e1a01004 	mov	r1, r4
   1f3e8:	e3a0005b 	mov	r0, #91	; 0x5b
   1f3ec:	e5933000 	ldr	r3, [r3]
   1f3f0:	e12fff33 	blx	r3
   1f3f4:	e8bd4070 	pop	{r4, r5, r6, lr}
   1f3f8:	eafffc9d 	b	1e674 <__syscall_ret>
   1f3fc:	00149044 	andseq	r9, r4, r4, asr #32

0001f400 <__block_all_sigs>:
   1f400:	e92d4013 	push	{r0, r1, r4, lr}
   1f404:	e3a02008 	mov	r2, #8
   1f408:	e58d2000 	str	r2, [sp]
   1f40c:	e1a03000 	mov	r3, r0
   1f410:	e59f2018 	ldr	r2, [pc, #24]	; 1f430 <__block_all_sigs+0x30>
   1f414:	e3a01000 	mov	r1, #0
   1f418:	e3a000af 	mov	r0, #175	; 0xaf
   1f41c:	e5924000 	ldr	r4, [r2]
   1f420:	e59f200c 	ldr	r2, [pc, #12]	; 1f434 <__block_all_sigs+0x34>
   1f424:	e12fff34 	blx	r4
   1f428:	e28dd008 	add	sp, sp, #8
   1f42c:	e8bd8010 	pop	{r4, pc}
   1f430:	00149044 	andseq	r9, r4, r4, asr #32
   1f434:	00029c0c 	andeq	r9, r2, ip, lsl #24

0001f438 <__block_app_sigs>:
   1f438:	e92d4013 	push	{r0, r1, r4, lr}
   1f43c:	e3a02008 	mov	r2, #8
   1f440:	e58d2000 	str	r2, [sp]
   1f444:	e1a03000 	mov	r3, r0
   1f448:	e59f2018 	ldr	r2, [pc, #24]	; 1f468 <__block_app_sigs+0x30>
   1f44c:	e3a01000 	mov	r1, #0
   1f450:	e3a000af 	mov	r0, #175	; 0xaf
   1f454:	e5924000 	ldr	r4, [r2]
   1f458:	e59f200c 	ldr	r2, [pc, #12]	; 1f46c <__block_app_sigs+0x34>
   1f45c:	e12fff34 	blx	r4
   1f460:	e28dd008 	add	sp, sp, #8
   1f464:	e8bd8010 	pop	{r4, pc}
   1f468:	00149044 	andseq	r9, r4, r4, asr #32
   1f46c:	00029c14 	andeq	r9, r2, r4, lsl ip

0001f470 <__restore_sigs>:
   1f470:	e92d4013 	push	{r0, r1, r4, lr}
   1f474:	e3a03008 	mov	r3, #8
   1f478:	e58d3000 	str	r3, [sp]
   1f47c:	e1a02000 	mov	r2, r0
   1f480:	e59f3018 	ldr	r3, [pc, #24]	; 1f4a0 <__restore_sigs+0x30>
   1f484:	e3a01002 	mov	r1, #2
   1f488:	e3a000af 	mov	r0, #175	; 0xaf
   1f48c:	e5934000 	ldr	r4, [r3]
   1f490:	e3a03000 	mov	r3, #0
   1f494:	e12fff34 	blx	r4
   1f498:	e28dd008 	add	sp, sp, #8
   1f49c:	e8bd8010 	pop	{r4, pc}
   1f4a0:	00149044 	andseq	r9, r4, r4, asr #32

0001f4a4 <raise>:
   1f4a4:	e92d4030 	push	{r4, r5, lr}
   1f4a8:	e24dd084 	sub	sp, sp, #132	; 0x84
   1f4ac:	e59f5044 	ldr	r5, [pc, #68]	; 1f4f8 <raise+0x54>
   1f4b0:	e1a04000 	mov	r4, r0
   1f4b4:	e1a0000d 	mov	r0, sp
   1f4b8:	ebffffde 	bl	1f438 <__block_app_sigs>
   1f4bc:	e3a000e0 	mov	r0, #224	; 0xe0
   1f4c0:	e5953000 	ldr	r3, [r5]
   1f4c4:	e12fff33 	blx	r3
   1f4c8:	e1a02004 	mov	r2, r4
   1f4cc:	e5953000 	ldr	r3, [r5]
   1f4d0:	e1a01000 	mov	r1, r0
   1f4d4:	e3a000ee 	mov	r0, #238	; 0xee
   1f4d8:	e12fff33 	blx	r3
   1f4dc:	ebfffc64 	bl	1e674 <__syscall_ret>
   1f4e0:	e1a04000 	mov	r4, r0
   1f4e4:	e1a0000d 	mov	r0, sp
   1f4e8:	ebffffe0 	bl	1f470 <__restore_sigs>
   1f4ec:	e1a00004 	mov	r0, r4
   1f4f0:	e28dd084 	add	sp, sp, #132	; 0x84
   1f4f4:	e8bd8030 	pop	{r4, r5, pc}
   1f4f8:	00149044 	andseq	r9, r4, r4, asr #32

0001f4fc <fflush>:
   1f4fc:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
   1f500:	e2504000 	subs	r4, r0, #0
   1f504:	1a000017 	bne	1f568 <fflush+0x6c>
   1f508:	e59f3110 	ldr	r3, [pc, #272]	; 1f620 <fflush+0x124>
   1f50c:	e5930000 	ldr	r0, [r3]
   1f510:	e3500000 	cmp	r0, #0
   1f514:	0a000001 	beq	1f520 <fflush+0x24>
   1f518:	e5930000 	ldr	r0, [r3]
   1f51c:	ebfffff6 	bl	1f4fc <fflush>
   1f520:	e1a06000 	mov	r6, r0
   1f524:	eb0000ae 	bl	1f7e4 <__ofl_lock>
   1f528:	e5904000 	ldr	r4, [r0]
   1f52c:	e3540000 	cmp	r4, #0
   1f530:	1a000003 	bne	1f544 <fflush+0x48>
   1f534:	eb0000b1 	bl	1f800 <__ofl_unlock>
   1f538:	e1a00006 	mov	r0, r6
   1f53c:	e28dd008 	add	sp, sp, #8
   1f540:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f544:	e5942014 	ldr	r2, [r4, #20]
   1f548:	e594301c 	ldr	r3, [r4, #28]
   1f54c:	e1520003 	cmp	r2, r3
   1f550:	9a000002 	bls	1f560 <fflush+0x64>
   1f554:	e1a00004 	mov	r0, r4
   1f558:	ebffffe7 	bl	1f4fc <fflush>
   1f55c:	e1866000 	orr	r6, r6, r0
   1f560:	e5944038 	ldr	r4, [r4, #56]	; 0x38
   1f564:	eafffff0 	b	1f52c <fflush+0x30>
   1f568:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   1f56c:	e3530000 	cmp	r3, #0
   1f570:	b3a06000 	movlt	r6, #0
   1f574:	ba000001 	blt	1f580 <fflush+0x84>
   1f578:	eb000c8b 	bl	227ac <__lockfile>
   1f57c:	e1a06000 	mov	r6, r0
   1f580:	e5942014 	ldr	r2, [r4, #20]
   1f584:	e594301c 	ldr	r3, [r4, #28]
   1f588:	e1520003 	cmp	r2, r3
   1f58c:	9a00000d 	bls	1f5c8 <fflush+0xcc>
   1f590:	e3a02000 	mov	r2, #0
   1f594:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   1f598:	e1a01002 	mov	r1, r2
   1f59c:	e1a00004 	mov	r0, r4
   1f5a0:	e12fff33 	blx	r3
   1f5a4:	e5943014 	ldr	r3, [r4, #20]
   1f5a8:	e3530000 	cmp	r3, #0
   1f5ac:	1a000005 	bne	1f5c8 <fflush+0xcc>
   1f5b0:	e3560000 	cmp	r6, #0
   1f5b4:	0a000001 	beq	1f5c0 <fflush+0xc4>
   1f5b8:	e1a00004 	mov	r0, r4
   1f5bc:	eb000c95 	bl	22818 <__unlockfile>
   1f5c0:	e3e06000 	mvn	r6, #0
   1f5c4:	eaffffdb 	b	1f538 <fflush+0x3c>
   1f5c8:	e994000c 	ldmib	r4, {r2, r3}
   1f5cc:	e1520003 	cmp	r2, r3
   1f5d0:	2a000006 	bcs	1f5f0 <fflush+0xf4>
   1f5d4:	e0422003 	sub	r2, r2, r3
   1f5d8:	e1a00004 	mov	r0, r4
   1f5dc:	e3a03001 	mov	r3, #1
   1f5e0:	e58d3000 	str	r3, [sp]
   1f5e4:	e1a03fc2 	asr	r3, r2, #31
   1f5e8:	e5941028 	ldr	r1, [r4, #40]	; 0x28
   1f5ec:	e12fff31 	blx	r1
   1f5f0:	e3a05000 	mov	r5, #0
   1f5f4:	e1560005 	cmp	r6, r5
   1f5f8:	e5845010 	str	r5, [r4, #16]
   1f5fc:	e584501c 	str	r5, [r4, #28]
   1f600:	e5845014 	str	r5, [r4, #20]
   1f604:	e5845008 	str	r5, [r4, #8]
   1f608:	e5845004 	str	r5, [r4, #4]
   1f60c:	0affffc9 	beq	1f538 <fflush+0x3c>
   1f610:	e1a00004 	mov	r0, r4
   1f614:	e1a06005 	mov	r6, r5
   1f618:	eb000c7e 	bl	22818 <__unlockfile>
   1f61c:	eaffffc5 	b	1f538 <fflush+0x3c>
   1f620:	0002c840 	andeq	ip, r2, r0, asr #16

0001f624 <fprintf>:
   1f624:	e92d000e 	push	{r1, r2, r3}
   1f628:	e92d4003 	push	{r0, r1, lr}
   1f62c:	e28d2010 	add	r2, sp, #16
   1f630:	e59d100c 	ldr	r1, [sp, #12]
   1f634:	e58d2004 	str	r2, [sp, #4]
   1f638:	eb00079e 	bl	214b8 <vfprintf>
   1f63c:	e28dd008 	add	sp, sp, #8
   1f640:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   1f644:	e28dd00c 	add	sp, sp, #12
   1f648:	e12fff1e 	bx	lr

0001f64c <fputs>:
   1f64c:	e92d4070 	push	{r4, r5, r6, lr}
   1f650:	e1a06001 	mov	r6, r1
   1f654:	e1a05000 	mov	r5, r0
   1f658:	eb000a17 	bl	21ebc <strlen>
   1f65c:	e1a03006 	mov	r3, r6
   1f660:	e3a01001 	mov	r1, #1
   1f664:	e1a04000 	mov	r4, r0
   1f668:	e1a02000 	mov	r2, r0
   1f66c:	e1a00005 	mov	r0, r5
   1f670:	eb00003a 	bl	1f760 <fwrite>
   1f674:	e0500004 	subs	r0, r0, r4
   1f678:	13e00000 	mvnne	r0, #0
   1f67c:	e8bd8070 	pop	{r4, r5, r6, pc}

0001f680 <__fwritex>:
   1f680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   1f684:	e1a07000 	mov	r7, r0
   1f688:	e5925010 	ldr	r5, [r2, #16]
   1f68c:	e1a06001 	mov	r6, r1
   1f690:	e1a04002 	mov	r4, r2
   1f694:	e3550000 	cmp	r5, #0
   1f698:	0a00000a 	beq	1f6c8 <__fwritex+0x48>
   1f69c:	e5943010 	ldr	r3, [r4, #16]
   1f6a0:	e5942014 	ldr	r2, [r4, #20]
   1f6a4:	e0433002 	sub	r3, r3, r2
   1f6a8:	e1530006 	cmp	r3, r6
   1f6ac:	2a00000b 	bcs	1f6e0 <__fwritex+0x60>
   1f6b0:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   1f6b4:	e1a02006 	mov	r2, r6
   1f6b8:	e1a01007 	mov	r1, r7
   1f6bc:	e1a00004 	mov	r0, r4
   1f6c0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
   1f6c4:	e12fff13 	bx	r3
   1f6c8:	e1a00002 	mov	r0, r2
   1f6cc:	eb000d1e 	bl	22b4c <__towrite>
   1f6d0:	e3500000 	cmp	r0, #0
   1f6d4:	0afffff0 	beq	1f69c <__fwritex+0x1c>
   1f6d8:	e1a00005 	mov	r0, r5
   1f6dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1f6e0:	e1d434db 	ldrsb	r3, [r4, #75]	; 0x4b
   1f6e4:	e1a05006 	mov	r5, r6
   1f6e8:	e3530000 	cmp	r3, #0
   1f6ec:	ba00000e 	blt	1f72c <__fwritex+0xac>
   1f6f0:	e3550000 	cmp	r5, #0
   1f6f4:	0a000017 	beq	1f758 <__fwritex+0xd8>
   1f6f8:	e2453001 	sub	r3, r5, #1
   1f6fc:	e7d72003 	ldrb	r2, [r7, r3]
   1f700:	e352000a 	cmp	r2, #10
   1f704:	1a000011 	bne	1f750 <__fwritex+0xd0>
   1f708:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   1f70c:	e1a02005 	mov	r2, r5
   1f710:	e1a01007 	mov	r1, r7
   1f714:	e1a00004 	mov	r0, r4
   1f718:	e12fff33 	blx	r3
   1f71c:	e1550000 	cmp	r5, r0
   1f720:	88bd81f0 	pophi	{r4, r5, r6, r7, r8, pc}
   1f724:	e0877005 	add	r7, r7, r5
   1f728:	e0465005 	sub	r5, r6, r5
   1f72c:	e1a02005 	mov	r2, r5
   1f730:	e5940014 	ldr	r0, [r4, #20]
   1f734:	e1a01007 	mov	r1, r7
   1f738:	eb000821 	bl	217c4 <memcpy>
   1f73c:	e5942014 	ldr	r2, [r4, #20]
   1f740:	e1a00006 	mov	r0, r6
   1f744:	e0825005 	add	r5, r2, r5
   1f748:	e5845014 	str	r5, [r4, #20]
   1f74c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   1f750:	e1a05003 	mov	r5, r3
   1f754:	eaffffe5 	b	1f6f0 <__fwritex+0x70>
   1f758:	e1a05006 	mov	r5, r6
   1f75c:	eafffff2 	b	1f72c <__fwritex+0xac>

0001f760 <fwrite>:
   1f760:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1f764:	e3510000 	cmp	r1, #0
   1f768:	e1a05003 	mov	r5, r3
   1f76c:	e593304c 	ldr	r3, [r3, #76]	; 0x4c
   1f770:	e1a04002 	mov	r4, r2
   1f774:	11a04002 	movne	r4, r2
   1f778:	03a04000 	moveq	r4, #0
   1f77c:	e3530000 	cmp	r3, #0
   1f780:	e0090192 	mul	r9, r2, r1
   1f784:	e1a07000 	mov	r7, r0
   1f788:	e1a06001 	mov	r6, r1
   1f78c:	b3a08000 	movlt	r8, #0
   1f790:	ba000002 	blt	1f7a0 <fwrite+0x40>
   1f794:	e1a00005 	mov	r0, r5
   1f798:	eb000c03 	bl	227ac <__lockfile>
   1f79c:	e1a08000 	mov	r8, r0
   1f7a0:	e1a00007 	mov	r0, r7
   1f7a4:	e1a02005 	mov	r2, r5
   1f7a8:	e1a01009 	mov	r1, r9
   1f7ac:	ebffffb3 	bl	1f680 <__fwritex>
   1f7b0:	e3580000 	cmp	r8, #0
   1f7b4:	e1a07000 	mov	r7, r0
   1f7b8:	0a000001 	beq	1f7c4 <fwrite+0x64>
   1f7bc:	e1a00005 	mov	r0, r5
   1f7c0:	eb000c14 	bl	22818 <__unlockfile>
   1f7c4:	e1590007 	cmp	r9, r7
   1f7c8:	0a000003 	beq	1f7dc <fwrite+0x7c>
   1f7cc:	e1a01006 	mov	r1, r6
   1f7d0:	e1a00007 	mov	r0, r7
   1f7d4:	eb001ab4 	bl	262ac <__udivsi3>
   1f7d8:	e1a04000 	mov	r4, r0
   1f7dc:	e1a00004 	mov	r0, r4
   1f7e0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

0001f7e4 <__ofl_lock>:
   1f7e4:	e59f000c 	ldr	r0, [pc, #12]	; 1f7f8 <__ofl_lock+0x14>
   1f7e8:	e92d4010 	push	{r4, lr}
   1f7ec:	eb0009f9 	bl	21fd8 <__lock>
   1f7f0:	e59f0004 	ldr	r0, [pc, #4]	; 1f7fc <__ofl_lock+0x18>
   1f7f4:	e8bd8010 	pop	{r4, pc}
   1f7f8:	00048548 	andeq	r8, r4, r8, asr #10
   1f7fc:	00048544 	andeq	r8, r4, r4, asr #10

0001f800 <__ofl_unlock>:
   1f800:	e59f0000 	ldr	r0, [pc]	; 1f808 <__ofl_unlock+0x8>
   1f804:	ea000a0a 	b	22034 <__unlock>
   1f808:	00048548 	andeq	r8, r4, r8, asr #10

0001f80c <printf>:
   1f80c:	e92d000f 	push	{r0, r1, r2, r3}
   1f810:	e59f3024 	ldr	r3, [pc, #36]	; 1f83c <printf+0x30>
   1f814:	e92d4007 	push	{r0, r1, r2, lr}
   1f818:	e28d2014 	add	r2, sp, #20
   1f81c:	e59d1010 	ldr	r1, [sp, #16]
   1f820:	e5930000 	ldr	r0, [r3]
   1f824:	e58d2004 	str	r2, [sp, #4]
   1f828:	eb000722 	bl	214b8 <vfprintf>
   1f82c:	e28dd00c 	add	sp, sp, #12
   1f830:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   1f834:	e28dd010 	add	sp, sp, #16
   1f838:	e12fff1e 	bx	lr
   1f83c:	00029c20 	andeq	r9, r2, r0, lsr #24

0001f840 <puts>:
   1f840:	e59f3098 	ldr	r3, [pc, #152]	; 1f8e0 <puts+0xa0>
   1f844:	e92d4070 	push	{r4, r5, r6, lr}
   1f848:	e1a05000 	mov	r5, r0
   1f84c:	e5934000 	ldr	r4, [r3]
   1f850:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   1f854:	e3530000 	cmp	r3, #0
   1f858:	b3a06000 	movlt	r6, #0
   1f85c:	ba000002 	blt	1f86c <puts+0x2c>
   1f860:	e1a00004 	mov	r0, r4
   1f864:	eb000bd0 	bl	227ac <__lockfile>
   1f868:	e1a06000 	mov	r6, r0
   1f86c:	e1a01004 	mov	r1, r4
   1f870:	e1a00005 	mov	r0, r5
   1f874:	ebffff74 	bl	1f64c <fputs>
   1f878:	e3500000 	cmp	r0, #0
   1f87c:	b3a03001 	movlt	r3, #1
   1f880:	ba00000a 	blt	1f8b0 <puts+0x70>
   1f884:	e1d434db 	ldrsb	r3, [r4, #75]	; 0x4b
   1f888:	e353000a 	cmp	r3, #10
   1f88c:	0a00000e 	beq	1f8cc <puts+0x8c>
   1f890:	e1c421d0 	ldrd	r2, [r4, #16]
   1f894:	e1530002 	cmp	r3, r2
   1f898:	2a00000b 	bcs	1f8cc <puts+0x8c>
   1f89c:	e2832001 	add	r2, r3, #1
   1f8a0:	e5842014 	str	r2, [r4, #20]
   1f8a4:	e3a0200a 	mov	r2, #10
   1f8a8:	e5c32000 	strb	r2, [r3]
   1f8ac:	e3a03000 	mov	r3, #0
   1f8b0:	e3560000 	cmp	r6, #0
   1f8b4:	e2635000 	rsb	r5, r3, #0
   1f8b8:	0a000001 	beq	1f8c4 <puts+0x84>
   1f8bc:	e1a00004 	mov	r0, r4
   1f8c0:	eb000bd4 	bl	22818 <__unlockfile>
   1f8c4:	e1a00005 	mov	r0, r5
   1f8c8:	e8bd8070 	pop	{r4, r5, r6, pc}
   1f8cc:	e3a0100a 	mov	r1, #10
   1f8d0:	e1a00004 	mov	r0, r4
   1f8d4:	eb000bea 	bl	22884 <__overflow>
   1f8d8:	e1a03fa0 	lsr	r3, r0, #31
   1f8dc:	eafffff3 	b	1f8b0 <puts+0x70>
   1f8e0:	00029c20 	andeq	r9, r2, r0, lsr #24

0001f8e4 <snprintf>:
   1f8e4:	e92d000c 	push	{r2, r3}
   1f8e8:	e92d4007 	push	{r0, r1, r2, lr}
   1f8ec:	e28d3014 	add	r3, sp, #20
   1f8f0:	e59d2010 	ldr	r2, [sp, #16]
   1f8f4:	e58d3004 	str	r3, [sp, #4]
   1f8f8:	eb00076c 	bl	216b0 <vsnprintf>
   1f8fc:	e28dd00c 	add	sp, sp, #12
   1f900:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   1f904:	e28dd008 	add	sp, sp, #8
   1f908:	e12fff1e 	bx	lr

0001f90c <sprintf>:
   1f90c:	e92d000e 	push	{r1, r2, r3}
   1f910:	e92d4003 	push	{r0, r1, lr}
   1f914:	e28d2010 	add	r2, sp, #16
   1f918:	e59d100c 	ldr	r1, [sp, #12]
   1f91c:	e58d2004 	str	r2, [sp, #4]
   1f920:	eb00078c 	bl	21758 <vsprintf>
   1f924:	e28dd008 	add	sp, sp, #8
   1f928:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   1f92c:	e28dd00c 	add	sp, sp, #12
   1f930:	e12fff1e 	bx	lr

0001f934 <sscanf>:
   1f934:	e92d000e 	push	{r1, r2, r3}
   1f938:	e92d4003 	push	{r0, r1, lr}
   1f93c:	e28d2010 	add	r2, sp, #16
   1f940:	e59d100c 	ldr	r1, [sp, #12]
   1f944:	e58d2004 	str	r2, [sp, #4]
   1f948:	eb000787 	bl	2176c <vsscanf>
   1f94c:	e28dd008 	add	sp, sp, #8
   1f950:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   1f954:	e28dd00c 	add	sp, sp, #12
   1f958:	e12fff1e 	bx	lr

0001f95c <fmt_u>:
   1f95c:	e92d4370 	push	{r4, r5, r6, r8, r9, lr}
   1f960:	e1a04000 	mov	r4, r0
   1f964:	e1a05001 	mov	r5, r1
   1f968:	e1a06002 	mov	r6, r2
   1f96c:	e3e08000 	mvn	r8, #0
   1f970:	e3a09000 	mov	r9, #0
   1f974:	e1550009 	cmp	r5, r9
   1f978:	01540008 	cmpeq	r4, r8
   1f97c:	8a000005 	bhi	1f998 <fmt_u+0x3c>
   1f980:	e59f2068 	ldr	r2, [pc, #104]	; 1f9f0 <fmt_u+0x94>
   1f984:	e3a0100a 	mov	r1, #10
   1f988:	e3540000 	cmp	r4, #0
   1f98c:	1a000010 	bne	1f9d4 <fmt_u+0x78>
   1f990:	e1a00006 	mov	r0, r6
   1f994:	e8bd8370 	pop	{r4, r5, r6, r8, r9, pc}
   1f998:	e1a00004 	mov	r0, r4
   1f99c:	e1a01005 	mov	r1, r5
   1f9a0:	e3a0200a 	mov	r2, #10
   1f9a4:	e3a03000 	mov	r3, #0
   1f9a8:	eb001ec6 	bl	274c8 <__aeabi_uldivmod>
   1f9ac:	e1a00004 	mov	r0, r4
   1f9b0:	e1a01005 	mov	r1, r5
   1f9b4:	e3a03000 	mov	r3, #0
   1f9b8:	e2822030 	add	r2, r2, #48	; 0x30
   1f9bc:	e5662001 	strb	r2, [r6, #-1]!
   1f9c0:	e3a0200a 	mov	r2, #10
   1f9c4:	eb001ebf 	bl	274c8 <__aeabi_uldivmod>
   1f9c8:	e1a04000 	mov	r4, r0
   1f9cc:	e1a05001 	mov	r5, r1
   1f9d0:	eaffffe7 	b	1f974 <fmt_u+0x18>
   1f9d4:	e0898294 	umull	r8, r9, r4, r2
   1f9d8:	e1a031a9 	lsr	r3, r9, #3
   1f9dc:	e0644391 	mls	r4, r1, r3, r4
   1f9e0:	e2844030 	add	r4, r4, #48	; 0x30
   1f9e4:	e5664001 	strb	r4, [r6, #-1]!
   1f9e8:	e1a04003 	mov	r4, r3
   1f9ec:	eaffffe5 	b	1f988 <fmt_u+0x2c>
   1f9f0:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd

0001f9f4 <getint>:
   1f9f4:	e92d4030 	push	{r4, r5, lr}
   1f9f8:	e1a01000 	mov	r1, r0
   1f9fc:	e59fe048 	ldr	lr, [pc, #72]	; 1fa4c <getint+0x58>
   1fa00:	e3a00000 	mov	r0, #0
   1fa04:	e3e04009 	mvn	r4, #9
   1fa08:	e3a0500a 	mov	r5, #10
   1fa0c:	e5912000 	ldr	r2, [r1]
   1fa10:	e5d23000 	ldrb	r3, [r2]
   1fa14:	e2433030 	sub	r3, r3, #48	; 0x30
   1fa18:	e3530009 	cmp	r3, #9
   1fa1c:	88bd8030 	pophi	{r4, r5, pc}
   1fa20:	e150000e 	cmp	r0, lr
   1fa24:	8a000004 	bhi	1fa3c <getint+0x48>
   1fa28:	e00c0094 	mul	ip, r4, r0
   1fa2c:	e24cc106 	sub	ip, ip, #-2147483647	; 0x80000001
   1fa30:	e153000c 	cmp	r3, ip
   1fa34:	d0203095 	mlale	r0, r5, r0, r3
   1fa38:	da000000 	ble	1fa40 <getint+0x4c>
   1fa3c:	e3e00000 	mvn	r0, #0
   1fa40:	e2822001 	add	r2, r2, #1
   1fa44:	e5812000 	str	r2, [r1]
   1fa48:	eaffffef 	b	1fa0c <getint+0x18>
   1fa4c:	0ccccccc 	stcleq	12, cr12, [ip], {204}	; 0xcc

0001fa50 <out>:
   1fa50:	e1a03000 	mov	r3, r0
   1fa54:	e1a00001 	mov	r0, r1
   1fa58:	e1a01002 	mov	r1, r2
   1fa5c:	e5932000 	ldr	r2, [r3]
   1fa60:	e3120020 	tst	r2, #32
   1fa64:	112fff1e 	bxne	lr
   1fa68:	e1a02003 	mov	r2, r3
   1fa6c:	eaffff03 	b	1f680 <__fwritex>

0001fa70 <pop_arg>:
   1fa70:	e3510014 	cmp	r1, #20
   1fa74:	812fff1e 	bxhi	lr
   1fa78:	e2411009 	sub	r1, r1, #9
   1fa7c:	e3510009 	cmp	r1, #9
   1fa80:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   1fa84:	ea000041 	b	1fb90 <pop_arg+0x120>
   1fa88:	0001fab0 			; <UNDEFINED> instruction: 0x0001fab0
   1fa8c:	0001fac8 	andeq	pc, r1, r8, asr #21
   1fa90:	0001fae0 	andeq	pc, r1, r0, ror #21
   1fa94:	0001fb00 	andeq	pc, r1, r0, lsl #22
   1fa98:	0001fb20 	andeq	pc, r1, r0, lsr #22
   1fa9c:	0001fb34 	andeq	pc, r1, r4, lsr fp	; <UNPREDICTABLE>
   1faa0:	0001fb4c 	andeq	pc, r1, ip, asr #22
   1faa4:	0001fb60 	andeq	pc, r1, r0, ror #22
   1faa8:	0001fb74 	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1faac:	0001fb74 	andeq	pc, r1, r4, ror fp	; <UNPREDICTABLE>
   1fab0:	e5923000 	ldr	r3, [r2]
   1fab4:	e2831004 	add	r1, r3, #4
   1fab8:	e5821000 	str	r1, [r2]
   1fabc:	e5933000 	ldr	r3, [r3]
   1fac0:	e5803000 	str	r3, [r0]
   1fac4:	e12fff1e 	bx	lr
   1fac8:	e5923000 	ldr	r3, [r2]
   1facc:	e2831004 	add	r1, r3, #4
   1fad0:	e5821000 	str	r1, [r2]
   1fad4:	e5932000 	ldr	r2, [r3]
   1fad8:	e1a03fc2 	asr	r3, r2, #31
   1fadc:	ea00000d 	b	1fb18 <pop_arg+0xa8>
   1fae0:	e5923000 	ldr	r3, [r2]
   1fae4:	e2831004 	add	r1, r3, #4
   1fae8:	e5821000 	str	r1, [r2]
   1faec:	e5933000 	ldr	r3, [r3]
   1faf0:	e5803000 	str	r3, [r0]
   1faf4:	e3a03000 	mov	r3, #0
   1faf8:	e5803004 	str	r3, [r0, #4]
   1fafc:	e12fff1e 	bx	lr
   1fb00:	e5923000 	ldr	r3, [r2]
   1fb04:	e2833007 	add	r3, r3, #7
   1fb08:	e3c33007 	bic	r3, r3, #7
   1fb0c:	e2831008 	add	r1, r3, #8
   1fb10:	e5821000 	str	r1, [r2]
   1fb14:	e1c320d0 	ldrd	r2, [r3]
   1fb18:	e1c020f0 	strd	r2, [r0]
   1fb1c:	e12fff1e 	bx	lr
   1fb20:	e5923000 	ldr	r3, [r2]
   1fb24:	e2831004 	add	r1, r3, #4
   1fb28:	e5821000 	str	r1, [r2]
   1fb2c:	e1d320f0 	ldrsh	r2, [r3]
   1fb30:	eaffffe8 	b	1fad8 <pop_arg+0x68>
   1fb34:	e5923000 	ldr	r3, [r2]
   1fb38:	e2831004 	add	r1, r3, #4
   1fb3c:	e5821000 	str	r1, [r2]
   1fb40:	e1d320b0 	ldrh	r2, [r3]
   1fb44:	e3a03000 	mov	r3, #0
   1fb48:	eafffff2 	b	1fb18 <pop_arg+0xa8>
   1fb4c:	e5923000 	ldr	r3, [r2]
   1fb50:	e2831004 	add	r1, r3, #4
   1fb54:	e5821000 	str	r1, [r2]
   1fb58:	e1d320d0 	ldrsb	r2, [r3]
   1fb5c:	eaffffdd 	b	1fad8 <pop_arg+0x68>
   1fb60:	e5923000 	ldr	r3, [r2]
   1fb64:	e2831004 	add	r1, r3, #4
   1fb68:	e5821000 	str	r1, [r2]
   1fb6c:	e5d32000 	ldrb	r2, [r3]
   1fb70:	eafffff3 	b	1fb44 <pop_arg+0xd4>
   1fb74:	e5923000 	ldr	r3, [r2]
   1fb78:	e2833007 	add	r3, r3, #7
   1fb7c:	e3c33007 	bic	r3, r3, #7
   1fb80:	e2831008 	add	r1, r3, #8
   1fb84:	e5821000 	str	r1, [r2]
   1fb88:	e1c320d0 	ldrd	r2, [r3]
   1fb8c:	e1c020f0 	strd	r2, [r0]
   1fb90:	e12fff1e 	bx	lr

0001fb94 <pad>:
   1fb94:	e92d4070 	push	{r4, r5, r6, lr}
   1fb98:	e24ddc01 	sub	sp, sp, #256	; 0x100
   1fb9c:	e1a05000 	mov	r5, r0
   1fba0:	e59d0110 	ldr	r0, [sp, #272]	; 0x110
   1fba4:	e3100a12 	tst	r0, #73728	; 0x12000
   1fba8:	13a00001 	movne	r0, #1
   1fbac:	03a00000 	moveq	r0, #0
   1fbb0:	e1530002 	cmp	r3, r2
   1fbb4:	a3800001 	orrge	r0, r0, #1
   1fbb8:	e3500000 	cmp	r0, #0
   1fbbc:	1a00000e 	bne	1fbfc <pad+0x68>
   1fbc0:	e0424003 	sub	r4, r2, r3
   1fbc4:	e1a0000d 	mov	r0, sp
   1fbc8:	e3540c01 	cmp	r4, #256	; 0x100
   1fbcc:	e1a06004 	mov	r6, r4
   1fbd0:	31a02004 	movcc	r2, r4
   1fbd4:	23a02c01 	movcs	r2, #256	; 0x100
   1fbd8:	eb000846 	bl	21cf8 <memset>
   1fbdc:	e35400ff 	cmp	r4, #255	; 0xff
   1fbe0:	ca000007 	bgt	1fc04 <pad+0x70>
   1fbe4:	e1a03426 	lsr	r3, r6, #8
   1fbe8:	e3e020ff 	mvn	r2, #255	; 0xff
   1fbec:	e1a0100d 	mov	r1, sp
   1fbf0:	e1a00005 	mov	r0, r5
   1fbf4:	e0226392 	mla	r2, r2, r3, r6
   1fbf8:	ebffff94 	bl	1fa50 <out>
   1fbfc:	e28ddc01 	add	sp, sp, #256	; 0x100
   1fc00:	e8bd8070 	pop	{r4, r5, r6, pc}
   1fc04:	e3a02c01 	mov	r2, #256	; 0x100
   1fc08:	e1a0100d 	mov	r1, sp
   1fc0c:	e1a00005 	mov	r0, r5
   1fc10:	e2444c01 	sub	r4, r4, #256	; 0x100
   1fc14:	ebffff8d 	bl	1fa50 <out>
   1fc18:	eaffffef 	b	1fbdc <pad+0x48>
   1fc1c:	00000000 	andeq	r0, r0, r0

0001fc20 <printf_core>:
   1fc20:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fc24:	e24ddfb3 	sub	sp, sp, #716	; 0x2cc
   1fc28:	e1a09000 	mov	r9, r0
   1fc2c:	e3a08000 	mov	r8, #0
   1fc30:	e58d202c 	str	r2, [sp, #44]	; 0x2c
   1fc34:	e58d303c 	str	r3, [sp, #60]	; 0x3c
   1fc38:	e58d1064 	str	r1, [sp, #100]	; 0x64
   1fc3c:	e58d8018 	str	r8, [sp, #24]
   1fc40:	e58d8020 	str	r8, [sp, #32]
   1fc44:	e59d4064 	ldr	r4, [sp, #100]	; 0x64
   1fc48:	e59d3018 	ldr	r3, [sp, #24]
   1fc4c:	e0833008 	add	r3, r3, r8
   1fc50:	e58d3018 	str	r3, [sp, #24]
   1fc54:	e5d43000 	ldrb	r3, [r4]
   1fc58:	e3530000 	cmp	r3, #0
   1fc5c:	1a000014 	bne	1fcb4 <printf_core+0x94>
   1fc60:	e3590000 	cmp	r9, #0
   1fc64:	1a0000e9 	bne	20010 <printf_core+0x3f0>
   1fc68:	e59d3020 	ldr	r3, [sp, #32]
   1fc6c:	e3530000 	cmp	r3, #0
   1fc70:	0a0000e4 	beq	20008 <printf_core+0x3e8>
   1fc74:	e59d32f0 	ldr	r3, [sp, #752]	; 0x2f0
   1fc78:	e59d2020 	ldr	r2, [sp, #32]
   1fc7c:	e7931102 	ldr	r1, [r3, r2, lsl #2]
   1fc80:	e3510000 	cmp	r1, #0
   1fc84:	1a0005ff 	bne	21488 <printf_core+0x1868>
   1fc88:	e0833102 	add	r3, r3, r2, lsl #2
   1fc8c:	e59d22f0 	ldr	r2, [sp, #752]	; 0x2f0
   1fc90:	e2821028 	add	r1, r2, #40	; 0x28
   1fc94:	e1510003 	cmp	r1, r3
   1fc98:	0a000604 	beq	214b0 <printf_core+0x1890>
   1fc9c:	e4932004 	ldr	r2, [r3], #4
   1fca0:	e3520000 	cmp	r2, #0
   1fca4:	0afffffa 	beq	1fc94 <printf_core+0x74>
   1fca8:	ea00009a 	b	1ff18 <printf_core+0x2f8>
   1fcac:	e2833001 	add	r3, r3, #1
   1fcb0:	e58d3064 	str	r3, [sp, #100]	; 0x64
   1fcb4:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
   1fcb8:	e5d32000 	ldrb	r2, [r3]
   1fcbc:	e3520000 	cmp	r2, #0
   1fcc0:	13520025 	cmpne	r2, #37	; 0x25
   1fcc4:	1afffff8 	bne	1fcac <printf_core+0x8c>
   1fcc8:	e59d2064 	ldr	r2, [sp, #100]	; 0x64
   1fccc:	e5d21000 	ldrb	r1, [r2]
   1fcd0:	e3510025 	cmp	r1, #37	; 0x25
   1fcd4:	1a000002 	bne	1fce4 <printf_core+0xc4>
   1fcd8:	e5d21001 	ldrb	r1, [r2, #1]
   1fcdc:	e3510025 	cmp	r1, #37	; 0x25
   1fce0:	0a00007f 	beq	1fee4 <printf_core+0x2c4>
   1fce4:	e0438004 	sub	r8, r3, r4
   1fce8:	e59d3018 	ldr	r3, [sp, #24]
   1fcec:	e263347f 	rsb	r3, r3, #2130706432	; 0x7f000000
   1fcf0:	e28338ff 	add	r3, r3, #16711680	; 0xff0000
   1fcf4:	e2833cff 	add	r3, r3, #65280	; 0xff00
   1fcf8:	e28330ff 	add	r3, r3, #255	; 0xff
   1fcfc:	e58d3044 	str	r3, [sp, #68]	; 0x44
   1fd00:	e1580003 	cmp	r8, r3
   1fd04:	ca00022b 	bgt	205b8 <printf_core+0x998>
   1fd08:	e3590000 	cmp	r9, #0
   1fd0c:	0a000003 	beq	1fd20 <printf_core+0x100>
   1fd10:	e1a02008 	mov	r2, r8
   1fd14:	e1a01004 	mov	r1, r4
   1fd18:	e1a00009 	mov	r0, r9
   1fd1c:	ebffff4b 	bl	1fa50 <out>
   1fd20:	e3580000 	cmp	r8, #0
   1fd24:	1affffc6 	bne	1fc44 <printf_core+0x24>
   1fd28:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
   1fd2c:	e5d37001 	ldrb	r7, [r3, #1]
   1fd30:	e2477030 	sub	r7, r7, #48	; 0x30
   1fd34:	e3570009 	cmp	r7, #9
   1fd38:	8a000005 	bhi	1fd54 <printf_core+0x134>
   1fd3c:	e5d32002 	ldrb	r2, [r3, #2]
   1fd40:	e3520024 	cmp	r2, #36	; 0x24
   1fd44:	02833003 	addeq	r3, r3, #3
   1fd48:	03a02001 	moveq	r2, #1
   1fd4c:	058d2020 	streq	r2, [sp, #32]
   1fd50:	0a000001 	beq	1fd5c <printf_core+0x13c>
   1fd54:	e2833001 	add	r3, r3, #1
   1fd58:	e3e07000 	mvn	r7, #0
   1fd5c:	e59fcf94 	ldr	ip, [pc, #3988]	; 20cf8 <printf_core+0x10d8>
   1fd60:	e3a0e001 	mov	lr, #1
   1fd64:	e58d3064 	str	r3, [sp, #100]	; 0x64
   1fd68:	e3a03000 	mov	r3, #0
   1fd6c:	e58d3008 	str	r3, [sp, #8]
   1fd70:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
   1fd74:	e5d31000 	ldrb	r1, [r3]
   1fd78:	e2412020 	sub	r2, r1, #32
   1fd7c:	e352001f 	cmp	r2, #31
   1fd80:	8a000002 	bhi	1fd90 <printf_core+0x170>
   1fd84:	e1a0023c 	lsr	r0, ip, r2
   1fd88:	e3100001 	tst	r0, #1
   1fd8c:	1a000058 	bne	1fef4 <printf_core+0x2d4>
   1fd90:	e351002a 	cmp	r1, #42	; 0x2a
   1fd94:	1a000071 	bne	1ff60 <printf_core+0x340>
   1fd98:	e5d32001 	ldrb	r2, [r3, #1]
   1fd9c:	e2421030 	sub	r1, r2, #48	; 0x30
   1fda0:	e3510009 	cmp	r1, #9
   1fda4:	8a000058 	bhi	1ff0c <printf_core+0x2ec>
   1fda8:	e5d31002 	ldrb	r1, [r3, #2]
   1fdac:	e3510024 	cmp	r1, #36	; 0x24
   1fdb0:	1a000055 	bne	1ff0c <printf_core+0x2ec>
   1fdb4:	e59d02f0 	ldr	r0, [sp, #752]	; 0x2f0
   1fdb8:	e24221c3 	sub	r2, r2, #-1073741776	; 0xc0000030
   1fdbc:	e3a0100a 	mov	r1, #10
   1fdc0:	e2833003 	add	r3, r3, #3
   1fdc4:	e7801102 	str	r1, [r0, r2, lsl #2]
   1fdc8:	e5532002 	ldrb	r2, [r3, #-2]
   1fdcc:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
   1fdd0:	e2822202 	add	r2, r2, #536870912	; 0x20000000
   1fdd4:	e58d3064 	str	r3, [sp, #100]	; 0x64
   1fdd8:	e2422030 	sub	r2, r2, #48	; 0x30
   1fddc:	e3a03001 	mov	r3, #1
   1fde0:	e58d3020 	str	r3, [sp, #32]
   1fde4:	e7912182 	ldr	r2, [r1, r2, lsl #3]
   1fde8:	e58d200c 	str	r2, [sp, #12]
   1fdec:	e59d300c 	ldr	r3, [sp, #12]
   1fdf0:	e3530000 	cmp	r3, #0
   1fdf4:	aa000005 	bge	1fe10 <printf_core+0x1f0>
   1fdf8:	e59d3008 	ldr	r3, [sp, #8]
   1fdfc:	e3833a02 	orr	r3, r3, #8192	; 0x2000
   1fe00:	e58d3008 	str	r3, [sp, #8]
   1fe04:	e59d300c 	ldr	r3, [sp, #12]
   1fe08:	e2633000 	rsb	r3, r3, #0
   1fe0c:	e58d300c 	str	r3, [sp, #12]
   1fe10:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
   1fe14:	e5d32000 	ldrb	r2, [r3]
   1fe18:	e352002e 	cmp	r2, #46	; 0x2e
   1fe1c:	1a000069 	bne	1ffc8 <printf_core+0x3a8>
   1fe20:	e5d32001 	ldrb	r2, [r3, #1]
   1fe24:	e352002a 	cmp	r2, #42	; 0x2a
   1fe28:	1a00005f 	bne	1ffac <printf_core+0x38c>
   1fe2c:	e5d32002 	ldrb	r2, [r3, #2]
   1fe30:	e2421030 	sub	r1, r2, #48	; 0x30
   1fe34:	e3510009 	cmp	r1, #9
   1fe38:	8a00004e 	bhi	1ff78 <printf_core+0x358>
   1fe3c:	e5d31003 	ldrb	r1, [r3, #3]
   1fe40:	e3510024 	cmp	r1, #36	; 0x24
   1fe44:	1a00004b 	bne	1ff78 <printf_core+0x358>
   1fe48:	e59d02f0 	ldr	r0, [sp, #752]	; 0x2f0
   1fe4c:	e24221c3 	sub	r2, r2, #-1073741776	; 0xc0000030
   1fe50:	e3a0100a 	mov	r1, #10
   1fe54:	e2833004 	add	r3, r3, #4
   1fe58:	e7801102 	str	r1, [r0, r2, lsl #2]
   1fe5c:	e5532002 	ldrb	r2, [r3, #-2]
   1fe60:	e59d103c 	ldr	r1, [sp, #60]	; 0x3c
   1fe64:	e2822202 	add	r2, r2, #536870912	; 0x20000000
   1fe68:	e2422030 	sub	r2, r2, #48	; 0x30
   1fe6c:	e791b182 	ldr	fp, [r1, r2, lsl #3]
   1fe70:	e1e0500b 	mvn	r5, fp
   1fe74:	e58d3064 	str	r3, [sp, #100]	; 0x64
   1fe78:	e1a05fa5 	lsr	r5, r5, #31
   1fe7c:	e59f2e78 	ldr	r2, [pc, #3704]	; 20cfc <printf_core+0x10dc>
   1fe80:	e3a06000 	mov	r6, #0
   1fe84:	e3a0003a 	mov	r0, #58	; 0x3a
   1fe88:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
   1fe8c:	e5d31000 	ldrb	r1, [r3]
   1fe90:	e2411041 	sub	r1, r1, #65	; 0x41
   1fe94:	e3510039 	cmp	r1, #57	; 0x39
   1fe98:	8a00001e 	bhi	1ff18 <printf_core+0x2f8>
   1fe9c:	e2831001 	add	r1, r3, #1
   1fea0:	e58d1064 	str	r1, [sp, #100]	; 0x64
   1fea4:	e5d31000 	ldrb	r1, [r3]
   1fea8:	e0232690 	mla	r3, r0, r6, r2
   1feac:	e0833001 	add	r3, r3, r1
   1feb0:	e5531041 	ldrb	r1, [r3, #-65]	; 0xffffffbf
   1feb4:	e2413001 	sub	r3, r1, #1
   1feb8:	e3530007 	cmp	r3, #7
   1febc:	9a000044 	bls	1ffd4 <printf_core+0x3b4>
   1fec0:	e3510000 	cmp	r1, #0
   1fec4:	0a000013 	beq	1ff18 <printf_core+0x2f8>
   1fec8:	e3510013 	cmp	r1, #19
   1fecc:	1a000042 	bne	1ffdc <printf_core+0x3bc>
   1fed0:	e3570000 	cmp	r7, #0
   1fed4:	aa00000f 	bge	1ff18 <printf_core+0x2f8>
   1fed8:	e3590000 	cmp	r9, #0
   1fedc:	1a000051 	bne	20028 <printf_core+0x408>
   1fee0:	eaffff57 	b	1fc44 <printf_core+0x24>
   1fee4:	e2822002 	add	r2, r2, #2
   1fee8:	e2833001 	add	r3, r3, #1
   1feec:	e58d2064 	str	r2, [sp, #100]	; 0x64
   1fef0:	eaffff74 	b	1fcc8 <printf_core+0xa8>
   1fef4:	e59d1008 	ldr	r1, [sp, #8]
   1fef8:	e2833001 	add	r3, r3, #1
   1fefc:	e58d3064 	str	r3, [sp, #100]	; 0x64
   1ff00:	e181221e 	orr	r2, r1, lr, lsl r2
   1ff04:	e58d2008 	str	r2, [sp, #8]
   1ff08:	eaffff98 	b	1fd70 <printf_core+0x150>
   1ff0c:	e59d2020 	ldr	r2, [sp, #32]
   1ff10:	e3520000 	cmp	r2, #0
   1ff14:	0a000005 	beq	1ff30 <printf_core+0x310>
   1ff18:	e59f3de0 	ldr	r3, [pc, #3552]	; 20d00 <printf_core+0x10e0>
   1ff1c:	e3a02016 	mov	r2, #22
   1ff20:	ebffc8f5 	bl	122fc <__aeabi_read_tp>
   1ff24:	e7832000 	str	r2, [r3, r0]
   1ff28:	e3e03000 	mvn	r3, #0
   1ff2c:	ea000036 	b	2000c <printf_core+0x3ec>
   1ff30:	e3590000 	cmp	r9, #0
   1ff34:	e2833001 	add	r3, r3, #1
   1ff38:	058d900c 	streq	r9, [sp, #12]
   1ff3c:	159d202c 	ldrne	r2, [sp, #44]	; 0x2c
   1ff40:	159d002c 	ldrne	r0, [sp, #44]	; 0x2c
   1ff44:	15922000 	ldrne	r2, [r2]
   1ff48:	12821004 	addne	r1, r2, #4
   1ff4c:	15801000 	strne	r1, [r0]
   1ff50:	15922000 	ldrne	r2, [r2]
   1ff54:	e58d3064 	str	r3, [sp, #100]	; 0x64
   1ff58:	158d200c 	strne	r2, [sp, #12]
   1ff5c:	eaffffa2 	b	1fdec <printf_core+0x1cc>
   1ff60:	e28d0064 	add	r0, sp, #100	; 0x64
   1ff64:	ebfffea2 	bl	1f9f4 <getint>
   1ff68:	e2503000 	subs	r3, r0, #0
   1ff6c:	e58d300c 	str	r3, [sp, #12]
   1ff70:	aaffffa6 	bge	1fe10 <printf_core+0x1f0>
   1ff74:	ea00018f 	b	205b8 <printf_core+0x998>
   1ff78:	e59d2020 	ldr	r2, [sp, #32]
   1ff7c:	e3520000 	cmp	r2, #0
   1ff80:	1affffe4 	bne	1ff18 <printf_core+0x2f8>
   1ff84:	e3590000 	cmp	r9, #0
   1ff88:	e2833002 	add	r3, r3, #2
   1ff8c:	159d202c 	ldrne	r2, [sp, #44]	; 0x2c
   1ff90:	01a0b009 	moveq	fp, r9
   1ff94:	159d002c 	ldrne	r0, [sp, #44]	; 0x2c
   1ff98:	15922000 	ldrne	r2, [r2]
   1ff9c:	12821004 	addne	r1, r2, #4
   1ffa0:	15801000 	strne	r1, [r0]
   1ffa4:	1592b000 	ldrne	fp, [r2]
   1ffa8:	eaffffb0 	b	1fe70 <printf_core+0x250>
   1ffac:	e28d0064 	add	r0, sp, #100	; 0x64
   1ffb0:	e2833001 	add	r3, r3, #1
   1ffb4:	e58d3064 	str	r3, [sp, #100]	; 0x64
   1ffb8:	ebfffe8d 	bl	1f9f4 <getint>
   1ffbc:	e3a05001 	mov	r5, #1
   1ffc0:	e1a0b000 	mov	fp, r0
   1ffc4:	eaffffac 	b	1fe7c <printf_core+0x25c>
   1ffc8:	e3a05000 	mov	r5, #0
   1ffcc:	e3e0b000 	mvn	fp, #0
   1ffd0:	eaffffa9 	b	1fe7c <printf_core+0x25c>
   1ffd4:	e1a06001 	mov	r6, r1
   1ffd8:	eaffffaa 	b	1fe88 <printf_core+0x268>
   1ffdc:	e3570000 	cmp	r7, #0
   1ffe0:	ba000006 	blt	20000 <printf_core+0x3e0>
   1ffe4:	e59d32f0 	ldr	r3, [sp, #752]	; 0x2f0
   1ffe8:	e7831107 	str	r1, [r3, r7, lsl #2]
   1ffec:	e1a07187 	lsl	r7, r7, #3
   1fff0:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
   1fff4:	e18320d7 	ldrd	r2, [r3, r7]
   1fff8:	e1cd27f0 	strd	r2, [sp, #112]	; 0x70
   1fffc:	eaffffb5 	b	1fed8 <printf_core+0x2b8>
   20000:	e3590000 	cmp	r9, #0
   20004:	1a000004 	bne	2001c <printf_core+0x3fc>
   20008:	e3a03000 	mov	r3, #0
   2000c:	e58d3018 	str	r3, [sp, #24]
   20010:	e59d0018 	ldr	r0, [sp, #24]
   20014:	e28ddfb3 	add	sp, sp, #716	; 0x2cc
   20018:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2001c:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
   20020:	e28d0070 	add	r0, sp, #112	; 0x70
   20024:	ebfffe91 	bl	1fa70 <pop_arg>
   20028:	e59d3064 	ldr	r3, [sp, #100]	; 0x64
   2002c:	e3560000 	cmp	r6, #0
   20030:	e5533001 	ldrb	r3, [r3, #-1]
   20034:	e58d3010 	str	r3, [sp, #16]
   20038:	0a000004 	beq	20050 <printf_core+0x430>
   2003c:	e203300f 	and	r3, r3, #15
   20040:	e3530003 	cmp	r3, #3
   20044:	059d3010 	ldreq	r3, [sp, #16]
   20048:	03c33020 	biceq	r3, r3, #32
   2004c:	058d3010 	streq	r3, [sp, #16]
   20050:	e59d3008 	ldr	r3, [sp, #8]
   20054:	e3130a02 	tst	r3, #8192	; 0x2000
   20058:	13c33801 	bicne	r3, r3, #65536	; 0x10000
   2005c:	158d3008 	strne	r3, [sp, #8]
   20060:	e59d3010 	ldr	r3, [sp, #16]
   20064:	e2433041 	sub	r3, r3, #65	; 0x41
   20068:	e3530037 	cmp	r3, #55	; 0x37
   2006c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   20070:	ea000501 	b	2147c <printf_core+0x185c>
   20074:	00020604 	andeq	r0, r2, r4, lsl #12
   20078:	0002147c 	andeq	r1, r2, ip, ror r4
   2007c:	000204ec 	andeq	r0, r2, ip, ror #9
   20080:	0002147c 	andeq	r1, r2, ip, ror r4
   20084:	00020604 	andeq	r0, r2, r4, lsl #12
   20088:	00020604 	andeq	r0, r2, r4, lsl #12
   2008c:	00020604 	andeq	r0, r2, r4, lsl #12
   20090:	0002147c 	andeq	r1, r2, ip, ror r4
   20094:	0002147c 	andeq	r1, r2, ip, ror r4
   20098:	0002147c 	andeq	r1, r2, ip, ror r4
   2009c:	0002147c 	andeq	r1, r2, ip, ror r4
   200a0:	0002147c 	andeq	r1, r2, ip, ror r4
   200a4:	0002147c 	andeq	r1, r2, ip, ror r4
   200a8:	0002147c 	andeq	r1, r2, ip, ror r4
   200ac:	0002147c 	andeq	r1, r2, ip, ror r4
   200b0:	0002147c 	andeq	r1, r2, ip, ror r4
   200b4:	0002147c 	andeq	r1, r2, ip, ror r4
   200b8:	0002147c 	andeq	r1, r2, ip, ror r4
   200bc:	00020508 	andeq	r0, r2, r8, lsl #10
   200c0:	0002147c 	andeq	r1, r2, ip, ror r4
   200c4:	0002147c 	andeq	r1, r2, ip, ror r4
   200c8:	0002147c 	andeq	r1, r2, ip, ror r4
   200cc:	0002147c 	andeq	r1, r2, ip, ror r4
   200d0:	000201e0 	andeq	r0, r2, r0, ror #3
   200d4:	0002147c 	andeq	r1, r2, ip, ror r4
   200d8:	0002147c 	andeq	r1, r2, ip, ror r4
   200dc:	0002147c 	andeq	r1, r2, ip, ror r4
   200e0:	0002147c 	andeq	r1, r2, ip, ror r4
   200e4:	0002147c 	andeq	r1, r2, ip, ror r4
   200e8:	0002147c 	andeq	r1, r2, ip, ror r4
   200ec:	0002147c 	andeq	r1, r2, ip, ror r4
   200f0:	0002147c 	andeq	r1, r2, ip, ror r4
   200f4:	00020604 	andeq	r0, r2, r4, lsl #12
   200f8:	0002147c 	andeq	r1, r2, ip, ror r4
   200fc:	00020458 	andeq	r0, r2, r8, asr r4
   20100:	000203f0 	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20104:	00020604 	andeq	r0, r2, r4, lsl #12
   20108:	00020604 	andeq	r0, r2, r4, lsl #12
   2010c:	00020604 	andeq	r0, r2, r4, lsl #12
   20110:	0002147c 	andeq	r1, r2, ip, ror r4
   20114:	000203f0 	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20118:	0002147c 	andeq	r1, r2, ip, ror r4
   2011c:	0002147c 	andeq	r1, r2, ip, ror r4
   20120:	0002147c 	andeq	r1, r2, ip, ror r4
   20124:	00020480 	andeq	r0, r2, r0, lsl #9
   20128:	00020154 	andeq	r0, r2, r4, asr r1
   2012c:	00020388 	andeq	r0, r2, r8, lsl #7
   20130:	000201c4 	andeq	r0, r2, r4, asr #3
   20134:	0002147c 	andeq	r1, r2, ip, ror r4
   20138:	0002147c 	andeq	r1, r2, ip, ror r4
   2013c:	000204d8 	ldrdeq	r0, [r2], -r8
   20140:	0002147c 	andeq	r1, r2, ip, ror r4
   20144:	00020450 	andeq	r0, r2, r0, asr r4
   20148:	0002147c 	andeq	r1, r2, ip, ror r4
   2014c:	0002147c 	andeq	r1, r2, ip, ror r4
   20150:	000201e0 	andeq	r0, r2, r0, ror #3
   20154:	e3560007 	cmp	r6, #7
   20158:	979ff106 	ldrls	pc, [pc, r6, lsl #2]
   2015c:	ea000112 	b	205ac <printf_core+0x98c>
   20160:	000201a0 	andeq	r0, r2, r0, lsr #3
   20164:	000201a0 	andeq	r0, r2, r0, lsr #3
   20168:	000201b0 			; <UNDEFINED> instruction: 0x000201b0
   2016c:	00020180 	andeq	r0, r2, r0, lsl #3
   20170:	00020190 	muleq	r2, r0, r1
   20174:	000205ac 	andeq	r0, r2, ip, lsr #11
   20178:	000201a0 	andeq	r0, r2, r0, lsr #3
   2017c:	000201b0 			; <UNDEFINED> instruction: 0x000201b0
   20180:	e59d3070 	ldr	r3, [sp, #112]	; 0x70
   20184:	e59d2018 	ldr	r2, [sp, #24]
   20188:	e1c320b0 	strh	r2, [r3]
   2018c:	eafffeac 	b	1fc44 <printf_core+0x24>
   20190:	e59d3070 	ldr	r3, [sp, #112]	; 0x70
   20194:	e59d2018 	ldr	r2, [sp, #24]
   20198:	e5c32000 	strb	r2, [r3]
   2019c:	eafffea8 	b	1fc44 <printf_core+0x24>
   201a0:	e59d3070 	ldr	r3, [sp, #112]	; 0x70
   201a4:	e59d2018 	ldr	r2, [sp, #24]
   201a8:	e5832000 	str	r2, [r3]
   201ac:	eafffea4 	b	1fc44 <printf_core+0x24>
   201b0:	e59d2018 	ldr	r2, [sp, #24]
   201b4:	e59d1070 	ldr	r1, [sp, #112]	; 0x70
   201b8:	e1a03fc2 	asr	r3, r2, #31
   201bc:	e1c120f0 	strd	r2, [r1]
   201c0:	eafffe9f 	b	1fc44 <printf_core+0x24>
   201c4:	e35b0008 	cmp	fp, #8
   201c8:	e59d3008 	ldr	r3, [sp, #8]
   201cc:	33a0b008 	movcc	fp, #8
   201d0:	e3833008 	orr	r3, r3, #8
   201d4:	e58d3008 	str	r3, [sp, #8]
   201d8:	e3a03078 	mov	r3, #120	; 0x78
   201dc:	e58d3010 	str	r3, [sp, #16]
   201e0:	e1cd07d0 	ldrd	r0, [sp, #112]	; 0x70
   201e4:	e28d40d0 	add	r4, sp, #208	; 0xd0
   201e8:	e59d3010 	ldr	r3, [sp, #16]
   201ec:	e59f6b10 	ldr	r6, [pc, #2832]	; 20d04 <printf_core+0x10e4>
   201f0:	e203e020 	and	lr, r3, #32
   201f4:	e1a02000 	mov	r2, r0
   201f8:	e1a03001 	mov	r3, r1
   201fc:	e192c003 	orrs	ip, r2, r3
   20200:	1a000056 	bne	20360 <printf_core+0x740>
   20204:	e1903001 	orrs	r3, r0, r1
   20208:	e59f6af8 	ldr	r6, [pc, #2808]	; 20d08 <printf_core+0x10e8>
   2020c:	03a08000 	moveq	r8, #0
   20210:	0a000004 	beq	20228 <printf_core+0x608>
   20214:	e59d3008 	ldr	r3, [sp, #8]
   20218:	e2138008 	ands	r8, r3, #8
   2021c:	159d3010 	ldrne	r3, [sp, #16]
   20220:	13a08002 	movne	r8, #2
   20224:	10866243 	addne	r6, r6, r3, asr #4
   20228:	e0153fab 	ands	r3, r5, fp, lsr #31
   2022c:	1a0000e1 	bne	205b8 <printf_core+0x998>
   20230:	e35b0000 	cmp	fp, #0
   20234:	e28d70d0 	add	r7, sp, #208	; 0xd0
   20238:	a59d3008 	ldrge	r3, [sp, #8]
   2023c:	a3c33801 	bicge	r3, r3, #65536	; 0x10000
   20240:	a58d3008 	strge	r3, [sp, #8]
   20244:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
   20248:	e1923003 	orrs	r3, r2, r3
   2024c:	03a02001 	moveq	r2, #1
   20250:	13a02000 	movne	r2, #0
   20254:	e35b0000 	cmp	fp, #0
   20258:	01a03002 	moveq	r3, r2
   2025c:	13a03000 	movne	r3, #0
   20260:	e3530000 	cmp	r3, #0
   20264:	11a04007 	movne	r4, r7
   20268:	13a0b000 	movne	fp, #0
   2026c:	11a07004 	movne	r7, r4
   20270:	1a000003 	bne	20284 <printf_core+0x664>
   20274:	e0473004 	sub	r3, r7, r4
   20278:	e0833002 	add	r3, r3, r2
   2027c:	e15b0003 	cmp	fp, r3
   20280:	b1a0b003 	movlt	fp, r3
   20284:	e0477004 	sub	r7, r7, r4
   20288:	e3e03102 	mvn	r3, #-2147483648	; 0x80000000
   2028c:	e157000b 	cmp	r7, fp
   20290:	e0433008 	sub	r3, r3, r8
   20294:	a1a0b007 	movge	fp, r7
   20298:	e153000b 	cmp	r3, fp
   2029c:	ba0000c5 	blt	205b8 <printf_core+0x998>
   202a0:	e59d300c 	ldr	r3, [sp, #12]
   202a4:	e088500b 	add	r5, r8, fp
   202a8:	e1550003 	cmp	r5, r3
   202ac:	b1a0a003 	movlt	sl, r3
   202b0:	e59d3044 	ldr	r3, [sp, #68]	; 0x44
   202b4:	a1a0a005 	movge	sl, r5
   202b8:	e153000a 	cmp	r3, sl
   202bc:	ba0000bd 	blt	205b8 <printf_core+0x998>
   202c0:	e59d3008 	ldr	r3, [sp, #8]
   202c4:	e1a0200a 	mov	r2, sl
   202c8:	e3a01020 	mov	r1, #32
   202cc:	e1a00009 	mov	r0, r9
   202d0:	e58d3000 	str	r3, [sp]
   202d4:	e1a03005 	mov	r3, r5
   202d8:	ebfffe2d 	bl	1fb94 <pad>
   202dc:	e1a02008 	mov	r2, r8
   202e0:	e1a01006 	mov	r1, r6
   202e4:	e1a00009 	mov	r0, r9
   202e8:	ebfffdd8 	bl	1fa50 <out>
   202ec:	e59d3008 	ldr	r3, [sp, #8]
   202f0:	e1a0200a 	mov	r2, sl
   202f4:	e3a01030 	mov	r1, #48	; 0x30
   202f8:	e2233801 	eor	r3, r3, #65536	; 0x10000
   202fc:	e1a00009 	mov	r0, r9
   20300:	e58d3000 	str	r3, [sp]
   20304:	e1a03005 	mov	r3, r5
   20308:	ebfffe21 	bl	1fb94 <pad>
   2030c:	e3a03000 	mov	r3, #0
   20310:	e1a0200b 	mov	r2, fp
   20314:	e3a01030 	mov	r1, #48	; 0x30
   20318:	e1a00009 	mov	r0, r9
   2031c:	e58d3000 	str	r3, [sp]
   20320:	e1a03007 	mov	r3, r7
   20324:	e1a0800a 	mov	r8, sl
   20328:	ebfffe19 	bl	1fb94 <pad>
   2032c:	e1a02007 	mov	r2, r7
   20330:	e1a01004 	mov	r1, r4
   20334:	e1a00009 	mov	r0, r9
   20338:	ebfffdc4 	bl	1fa50 <out>
   2033c:	e59d3008 	ldr	r3, [sp, #8]
   20340:	e1a0200a 	mov	r2, sl
   20344:	e3a01020 	mov	r1, #32
   20348:	e2233a02 	eor	r3, r3, #8192	; 0x2000
   2034c:	e1a00009 	mov	r0, r9
   20350:	e58d3000 	str	r3, [sp]
   20354:	e1a03005 	mov	r3, r5
   20358:	ebfffe0d 	bl	1fb94 <pad>
   2035c:	eafffe38 	b	1fc44 <printf_core+0x24>
   20360:	e202c00f 	and	ip, r2, #15
   20364:	e1a07223 	lsr	r7, r3, #4
   20368:	e7d6c00c 	ldrb	ip, [r6, ip]
   2036c:	e18cc00e 	orr	ip, ip, lr
   20370:	e564c001 	strb	ip, [r4, #-1]!
   20374:	e1a0c222 	lsr	ip, r2, #4
   20378:	e18cce03 	orr	ip, ip, r3, lsl #28
   2037c:	e1a03007 	mov	r3, r7
   20380:	e1a0200c 	mov	r2, ip
   20384:	eaffff9c 	b	201fc <printf_core+0x5dc>
   20388:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
   2038c:	e28d40d0 	add	r4, sp, #208	; 0xd0
   20390:	e1921003 	orrs	r1, r2, r3
   20394:	1a00000c 	bne	203cc <printf_core+0x7ac>
   20398:	e59d3008 	ldr	r3, [sp, #8]
   2039c:	e2138008 	ands	r8, r3, #8
   203a0:	059f6960 	ldreq	r6, [pc, #2400]	; 20d08 <printf_core+0x10e8>
   203a4:	0affff9f 	beq	20228 <printf_core+0x608>
   203a8:	e59f6958 	ldr	r6, [pc, #2392]	; 20d08 <printf_core+0x10e8>
   203ac:	e28d30d0 	add	r3, sp, #208	; 0xd0
   203b0:	e0433004 	sub	r3, r3, r4
   203b4:	e153000b 	cmp	r3, fp
   203b8:	e2863005 	add	r3, r6, #5
   203bc:	a3a08001 	movge	r8, #1
   203c0:	b3a08000 	movlt	r8, #0
   203c4:	a1a06003 	movge	r6, r3
   203c8:	eaffff96 	b	20228 <printf_core+0x608>
   203cc:	e2021007 	and	r1, r2, #7
   203d0:	e1a001a3 	lsr	r0, r3, #3
   203d4:	e2811030 	add	r1, r1, #48	; 0x30
   203d8:	e5641001 	strb	r1, [r4, #-1]!
   203dc:	e1a011a2 	lsr	r1, r2, #3
   203e0:	e1811e83 	orr	r1, r1, r3, lsl #29
   203e4:	e1a03000 	mov	r3, r0
   203e8:	e1a02001 	mov	r2, r1
   203ec:	eaffffe7 	b	20390 <printf_core+0x770>
   203f0:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
   203f4:	e3520000 	cmp	r2, #0
   203f8:	e2d31000 	sbcs	r1, r3, #0
   203fc:	aa000005 	bge	20418 <printf_core+0x7f8>
   20400:	e2722000 	rsbs	r2, r2, #0
   20404:	e3a08001 	mov	r8, #1
   20408:	e2e33000 	rsc	r3, r3, #0
   2040c:	e1cd27f0 	strd	r2, [sp, #112]	; 0x70
   20410:	e59f68f0 	ldr	r6, [pc, #2288]	; 20d08 <printf_core+0x10e8>
   20414:	ea000008 	b	2043c <printf_core+0x81c>
   20418:	e59d3008 	ldr	r3, [sp, #8]
   2041c:	e3130b02 	tst	r3, #2048	; 0x800
   20420:	159f68e4 	ldrne	r6, [pc, #2276]	; 20d0c <printf_core+0x10ec>
   20424:	13a08001 	movne	r8, #1
   20428:	1a000003 	bne	2043c <printf_core+0x81c>
   2042c:	e59f68dc 	ldr	r6, [pc, #2268]	; 20d10 <printf_core+0x10f0>
   20430:	e2138001 	ands	r8, r3, #1
   20434:	e2463002 	sub	r3, r6, #2
   20438:	01a06003 	moveq	r6, r3
   2043c:	e1cd07d0 	ldrd	r0, [sp, #112]	; 0x70
   20440:	e28d20d0 	add	r2, sp, #208	; 0xd0
   20444:	ebfffd44 	bl	1f95c <fmt_u>
   20448:	e1a04000 	mov	r4, r0
   2044c:	eaffff75 	b	20228 <printf_core+0x608>
   20450:	e3a08000 	mov	r8, #0
   20454:	eaffffed 	b	20410 <printf_core+0x7f0>
   20458:	e59d3070 	ldr	r3, [sp, #112]	; 0x70
   2045c:	e28d70d0 	add	r7, sp, #208	; 0xd0
   20460:	e59f68a0 	ldr	r6, [pc, #2208]	; 20d08 <printf_core+0x10e8>
   20464:	e28d40cf 	add	r4, sp, #207	; 0xcf
   20468:	e3a0b001 	mov	fp, #1
   2046c:	e5cd30cf 	strb	r3, [sp, #207]	; 0xcf
   20470:	e59d3008 	ldr	r3, [sp, #8]
   20474:	e3c33801 	bic	r3, r3, #65536	; 0x10000
   20478:	e58d3008 	str	r3, [sp, #8]
   2047c:	eaffff80 	b	20284 <printf_core+0x664>
   20480:	e59f3878 	ldr	r3, [pc, #2168]	; 20d00 <printf_core+0x10e0>
   20484:	ebffc79c 	bl	122fc <__aeabi_read_tp>
   20488:	e7930000 	ldr	r0, [r3, r0]
   2048c:	eb000842 	bl	2259c <strerror>
   20490:	e1a04000 	mov	r4, r0
   20494:	e35b0000 	cmp	fp, #0
   20498:	e1a00004 	mov	r0, r4
   2049c:	a1a0100b 	movge	r1, fp
   204a0:	b3e01102 	mvnlt	r1, #-2147483648	; 0x80000000
   204a4:	eb0006b8 	bl	21f8c <strnlen>
   204a8:	e35b0000 	cmp	fp, #0
   204ac:	e0847000 	add	r7, r4, r0
   204b0:	aa000002 	bge	204c0 <printf_core+0x8a0>
   204b4:	e7d43000 	ldrb	r3, [r4, r0]
   204b8:	e3530000 	cmp	r3, #0
   204bc:	1a00003d 	bne	205b8 <printf_core+0x998>
   204c0:	e59d3008 	ldr	r3, [sp, #8]
   204c4:	e1a0b000 	mov	fp, r0
   204c8:	e59f6838 	ldr	r6, [pc, #2104]	; 20d08 <printf_core+0x10e8>
   204cc:	e3c33801 	bic	r3, r3, #65536	; 0x10000
   204d0:	e58d3008 	str	r3, [sp, #8]
   204d4:	eaffff6a 	b	20284 <printf_core+0x664>
   204d8:	e59d4070 	ldr	r4, [sp, #112]	; 0x70
   204dc:	e59f3830 	ldr	r3, [pc, #2096]	; 20d14 <printf_core+0x10f4>
   204e0:	e3540000 	cmp	r4, #0
   204e4:	01a04003 	moveq	r4, r3
   204e8:	eaffffe9 	b	20494 <printf_core+0x874>
   204ec:	e59d3070 	ldr	r3, [sp, #112]	; 0x70
   204f0:	e3e0b000 	mvn	fp, #0
   204f4:	e58d307c 	str	r3, [sp, #124]	; 0x7c
   204f8:	e3a03000 	mov	r3, #0
   204fc:	e58d3080 	str	r3, [sp, #128]	; 0x80
   20500:	e28d307c 	add	r3, sp, #124	; 0x7c
   20504:	e58d3070 	str	r3, [sp, #112]	; 0x70
   20508:	e59d5070 	ldr	r5, [sp, #112]	; 0x70
   2050c:	e3a04000 	mov	r4, #0
   20510:	e2455004 	sub	r5, r5, #4
   20514:	e15b0004 	cmp	fp, r4
   20518:	9a000009 	bls	20544 <printf_core+0x924>
   2051c:	e5b51004 	ldr	r1, [r5, #4]!
   20520:	e3510000 	cmp	r1, #0
   20524:	0a000006 	beq	20544 <printf_core+0x924>
   20528:	e28d0068 	add	r0, sp, #104	; 0x68
   2052c:	eb00089a 	bl	2279c <wctomb>
   20530:	e3500000 	cmp	r0, #0
   20534:	bafffe7b 	blt	1ff28 <printf_core+0x308>
   20538:	e04b3004 	sub	r3, fp, r4
   2053c:	e1530000 	cmp	r3, r0
   20540:	2a000020 	bcs	205c8 <printf_core+0x9a8>
   20544:	e3540000 	cmp	r4, #0
   20548:	ba00001a 	blt	205b8 <printf_core+0x998>
   2054c:	e59d3008 	ldr	r3, [sp, #8]
   20550:	e3a01020 	mov	r1, #32
   20554:	e59d200c 	ldr	r2, [sp, #12]
   20558:	e1a00009 	mov	r0, r9
   2055c:	e3a06000 	mov	r6, #0
   20560:	e58d3000 	str	r3, [sp]
   20564:	e1a03004 	mov	r3, r4
   20568:	ebfffd89 	bl	1fb94 <pad>
   2056c:	e59d5070 	ldr	r5, [sp, #112]	; 0x70
   20570:	e2455004 	sub	r5, r5, #4
   20574:	e1540006 	cmp	r4, r6
   20578:	8a000014 	bhi	205d0 <printf_core+0x9b0>
   2057c:	e59d3008 	ldr	r3, [sp, #8]
   20580:	e3a01020 	mov	r1, #32
   20584:	e59d200c 	ldr	r2, [sp, #12]
   20588:	e1a00009 	mov	r0, r9
   2058c:	e2233a02 	eor	r3, r3, #8192	; 0x2000
   20590:	e58d3000 	str	r3, [sp]
   20594:	e1a03004 	mov	r3, r4
   20598:	ebfffd7d 	bl	1fb94 <pad>
   2059c:	e59d300c 	ldr	r3, [sp, #12]
   205a0:	e1540003 	cmp	r4, r3
   205a4:	a1a08004 	movge	r8, r4
   205a8:	b1a08003 	movlt	r8, r3
   205ac:	e59d3044 	ldr	r3, [sp, #68]	; 0x44
   205b0:	e1530008 	cmp	r3, r8
   205b4:	aafffda2 	bge	1fc44 <printf_core+0x24>
   205b8:	e59f3740 	ldr	r3, [pc, #1856]	; 20d00 <printf_core+0x10e0>
   205bc:	e3a0204b 	mov	r2, #75	; 0x4b
   205c0:	ebffc74d 	bl	122fc <__aeabi_read_tp>
   205c4:	eafffe56 	b	1ff24 <printf_core+0x304>
   205c8:	e0844000 	add	r4, r4, r0
   205cc:	eaffffd0 	b	20514 <printf_core+0x8f4>
   205d0:	e5b51004 	ldr	r1, [r5, #4]!
   205d4:	e3510000 	cmp	r1, #0
   205d8:	0affffe7 	beq	2057c <printf_core+0x95c>
   205dc:	e28d0068 	add	r0, sp, #104	; 0x68
   205e0:	eb00086d 	bl	2279c <wctomb>
   205e4:	e0866000 	add	r6, r6, r0
   205e8:	e1a02000 	mov	r2, r0
   205ec:	e1560004 	cmp	r6, r4
   205f0:	8affffe1 	bhi	2057c <printf_core+0x95c>
   205f4:	e28d1068 	add	r1, sp, #104	; 0x68
   205f8:	e1a00009 	mov	r0, r9
   205fc:	ebfffd13 	bl	1fa50 <out>
   20600:	eaffffdb 	b	20574 <printf_core+0x954>
   20604:	e0153fab 	ands	r3, r5, fp, lsr #31
   20608:	e58d3040 	str	r3, [sp, #64]	; 0x40
   2060c:	1affffe9 	bne	205b8 <printf_core+0x998>
   20610:	e59dc074 	ldr	ip, [sp, #116]	; 0x74
   20614:	e58d306c 	str	r3, [sp, #108]	; 0x6c
   20618:	e59de070 	ldr	lr, [sp, #112]	; 0x70
   2061c:	e1b03fac 	lsrs	r3, ip, #31
   20620:	e58d3024 	str	r3, [sp, #36]	; 0x24
   20624:	128cc102 	addne	ip, ip, #-2147483648	; 0x80000000
   20628:	159f36e8 	ldrne	r3, [pc, #1768]	; 20d18 <printf_core+0x10f8>
   2062c:	1a000046 	bne	2074c <printf_core+0xb2c>
   20630:	e59d3008 	ldr	r3, [sp, #8]
   20634:	e3130b02 	tst	r3, #2048	; 0x800
   20638:	1a000040 	bne	20740 <printf_core+0xb20>
   2063c:	e59f26d8 	ldr	r2, [pc, #1752]	; 20d1c <printf_core+0x10fc>
   20640:	e2033001 	and	r3, r3, #1
   20644:	e3530000 	cmp	r3, #0
   20648:	e2421005 	sub	r1, r2, #5
   2064c:	11a03002 	movne	r3, r2
   20650:	01a03001 	moveq	r3, r1
   20654:	e58d3028 	str	r3, [sp, #40]	; 0x28
   20658:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   2065c:	13a03001 	movne	r3, #1
   20660:	e58d3024 	str	r3, [sp, #36]	; 0x24
   20664:	e3cc3102 	bic	r3, ip, #-2147483648	; 0x80000000
   20668:	e58de050 	str	lr, [sp, #80]	; 0x50
   2066c:	e58d3054 	str	r3, [sp, #84]	; 0x54
   20670:	e3e02000 	mvn	r2, #0
   20674:	e1cd05d0 	ldrd	r0, [sp, #80]	; 0x50
   20678:	e59f36a0 	ldr	r3, [pc, #1696]	; 20d20 <printf_core+0x1100>
   2067c:	e1510003 	cmp	r1, r3
   20680:	01500002 	cmpeq	r0, r2
   20684:	9a000032 	bls	20754 <printf_core+0xb34>
   20688:	e59d3010 	ldr	r3, [sp, #16]
   2068c:	e1a0200e 	mov	r2, lr
   20690:	e59f468c 	ldr	r4, [pc, #1676]	; 20d24 <printf_core+0x1104>
   20694:	e1a0000e 	mov	r0, lr
   20698:	e2135020 	ands	r5, r3, #32
   2069c:	e59f3684 	ldr	r3, [pc, #1668]	; 20d28 <printf_core+0x1108>
   206a0:	e1a0100c 	mov	r1, ip
   206a4:	01a04003 	moveq	r4, r3
   206a8:	e1a0300c 	mov	r3, ip
   206ac:	eb001a4f 	bl	26ff0 <__aeabi_dcmpeq>
   206b0:	e3500000 	cmp	r0, #0
   206b4:	1a000003 	bne	206c8 <printf_core+0xaa8>
   206b8:	e59f366c 	ldr	r3, [pc, #1644]	; 20d2c <printf_core+0x110c>
   206bc:	e3550000 	cmp	r5, #0
   206c0:	e59f4668 	ldr	r4, [pc, #1640]	; 20d30 <printf_core+0x1110>
   206c4:	01a04003 	moveq	r4, r3
   206c8:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   206cc:	e3a01020 	mov	r1, #32
   206d0:	e59d200c 	ldr	r2, [sp, #12]
   206d4:	e1a00009 	mov	r0, r9
   206d8:	e2838003 	add	r8, r3, #3
   206dc:	e59d3008 	ldr	r3, [sp, #8]
   206e0:	e3c33801 	bic	r3, r3, #65536	; 0x10000
   206e4:	e58d3000 	str	r3, [sp]
   206e8:	e1a03008 	mov	r3, r8
   206ec:	ebfffd28 	bl	1fb94 <pad>
   206f0:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
   206f4:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
   206f8:	e1a00009 	mov	r0, r9
   206fc:	ebfffcd3 	bl	1fa50 <out>
   20700:	e3a02003 	mov	r2, #3
   20704:	e1a01004 	mov	r1, r4
   20708:	e1a00009 	mov	r0, r9
   2070c:	ebfffccf 	bl	1fa50 <out>
   20710:	e59d3008 	ldr	r3, [sp, #8]
   20714:	e59d200c 	ldr	r2, [sp, #12]
   20718:	e3a01020 	mov	r1, #32
   2071c:	e2233a02 	eor	r3, r3, #8192	; 0x2000
   20720:	e1a00009 	mov	r0, r9
   20724:	e58d3000 	str	r3, [sp]
   20728:	e1a03008 	mov	r3, r8
   2072c:	ebfffd18 	bl	1fb94 <pad>
   20730:	e59d300c 	ldr	r3, [sp, #12]
   20734:	e1530008 	cmp	r3, r8
   20738:	a1a08003 	movge	r8, r3
   2073c:	eaffff9a 	b	205ac <printf_core+0x98c>
   20740:	e3a03001 	mov	r3, #1
   20744:	e58d3024 	str	r3, [sp, #36]	; 0x24
   20748:	e59f35e4 	ldr	r3, [pc, #1508]	; 20d34 <printf_core+0x1114>
   2074c:	e58d3028 	str	r3, [sp, #40]	; 0x28
   20750:	eaffffc3 	b	20664 <printf_core+0xa44>
   20754:	e1a0000e 	mov	r0, lr
   20758:	e1a0100c 	mov	r1, ip
   2075c:	e28d206c 	add	r2, sp, #108	; 0x6c
   20760:	eb00080c 	bl	22798 <frexpl>
   20764:	e1a02000 	mov	r2, r0
   20768:	e1a03001 	mov	r3, r1
   2076c:	eb0017e4 	bl	26704 <__adddf3>
   20770:	e3a03000 	mov	r3, #0
   20774:	e3a02000 	mov	r2, #0
   20778:	e1a0a000 	mov	sl, r0
   2077c:	e1a04001 	mov	r4, r1
   20780:	eb001a1a 	bl	26ff0 <__aeabi_dcmpeq>
   20784:	e3500000 	cmp	r0, #0
   20788:	059d306c 	ldreq	r3, [sp, #108]	; 0x6c
   2078c:	02433001 	subeq	r3, r3, #1
   20790:	058d306c 	streq	r3, [sp, #108]	; 0x6c
   20794:	e59d3010 	ldr	r3, [sp, #16]
   20798:	e3833020 	orr	r3, r3, #32
   2079c:	e58d3038 	str	r3, [sp, #56]	; 0x38
   207a0:	e3530061 	cmp	r3, #97	; 0x61
   207a4:	1a0000ac 	bne	20a5c <printf_core+0xe3c>
   207a8:	e59d3010 	ldr	r3, [sp, #16]
   207ac:	e3130020 	tst	r3, #32
   207b0:	159d3028 	ldrne	r3, [sp, #40]	; 0x28
   207b4:	12833009 	addne	r3, r3, #9
   207b8:	158d3028 	strne	r3, [sp, #40]	; 0x28
   207bc:	e35b000b 	cmp	fp, #11
   207c0:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   207c4:	e2833002 	add	r3, r3, #2
   207c8:	e58d3014 	str	r3, [sp, #20]
   207cc:	8a000014 	bhi	20824 <printf_core+0xc04>
   207d0:	e59f7560 	ldr	r7, [pc, #1376]	; 20d38 <printf_core+0x1118>
   207d4:	e26b500c 	rsb	r5, fp, #12
   207d8:	e3a06000 	mov	r6, #0
   207dc:	e2555001 	subs	r5, r5, #1
   207e0:	2a00008b 	bcs	20a14 <printf_core+0xdf4>
   207e4:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   207e8:	e1a02006 	mov	r2, r6
   207ec:	e1a0000a 	mov	r0, sl
   207f0:	e5d33000 	ldrb	r3, [r3]
   207f4:	e353002d 	cmp	r3, #45	; 0x2d
   207f8:	e1a03007 	mov	r3, r7
   207fc:	1a00008c 	bne	20a34 <printf_core+0xe14>
   20800:	e2841102 	add	r1, r4, #-2147483648	; 0x80000000
   20804:	eb0017bd 	bl	26700 <__aeabi_dsub>
   20808:	e1a02000 	mov	r2, r0
   2080c:	e1a03001 	mov	r3, r1
   20810:	e1a00006 	mov	r0, r6
   20814:	e1a01007 	mov	r1, r7
   20818:	eb0017b9 	bl	26704 <__adddf3>
   2081c:	e2814102 	add	r4, r1, #-2147483648	; 0x80000000
   20820:	e1a0a000 	mov	sl, r0
   20824:	e59d006c 	ldr	r0, [sp, #108]	; 0x6c
   20828:	e28d5090 	add	r5, sp, #144	; 0x90
   2082c:	e28d6090 	add	r6, sp, #144	; 0x90
   20830:	e3500000 	cmp	r0, #0
   20834:	e1a02005 	mov	r2, r5
   20838:	b2600000 	rsblt	r0, r0, #0
   2083c:	e1a01fc0 	asr	r1, r0, #31
   20840:	ebfffc45 	bl	1f95c <fmt_u>
   20844:	e1500005 	cmp	r0, r5
   20848:	028d008f 	addeq	r0, sp, #143	; 0x8f
   2084c:	03a03030 	moveq	r3, #48	; 0x30
   20850:	05cd308f 	strbeq	r3, [sp, #143]	; 0x8f
   20854:	e59d306c 	ldr	r3, [sp, #108]	; 0x6c
   20858:	e2407002 	sub	r7, r0, #2
   2085c:	e3530000 	cmp	r3, #0
   20860:	b3a0302d 	movlt	r3, #45	; 0x2d
   20864:	a3a0302b 	movge	r3, #43	; 0x2b
   20868:	e5403001 	strb	r3, [r0, #-1]
   2086c:	e59d3010 	ldr	r3, [sp, #16]
   20870:	e283300f 	add	r3, r3, #15
   20874:	e5403002 	strb	r3, [r0, #-2]
   20878:	e59d3010 	ldr	r3, [sp, #16]
   2087c:	e2033020 	and	r3, r3, #32
   20880:	e58d3010 	str	r3, [sp, #16]
   20884:	e59d3008 	ldr	r3, [sp, #8]
   20888:	e2038008 	and	r8, r3, #8
   2088c:	e1a01004 	mov	r1, r4
   20890:	e1a0000a 	mov	r0, sl
   20894:	eb0019ee 	bl	27054 <__aeabi_d2iz>
   20898:	e59f3464 	ldr	r3, [pc, #1124]	; 20d04 <printf_core+0x10e4>
   2089c:	e59d2010 	ldr	r2, [sp, #16]
   208a0:	e1a05006 	mov	r5, r6
   208a4:	e7d33000 	ldrb	r3, [r3, r0]
   208a8:	e1833002 	orr	r3, r3, r2
   208ac:	e4c53001 	strb	r3, [r5], #1
   208b0:	eb001847 	bl	269d4 <__aeabi_i2d>
   208b4:	e1a02000 	mov	r2, r0
   208b8:	e1a03001 	mov	r3, r1
   208bc:	e1a0000a 	mov	r0, sl
   208c0:	e1a01004 	mov	r1, r4
   208c4:	eb00178d 	bl	26700 <__aeabi_dsub>
   208c8:	e59f346c 	ldr	r3, [pc, #1132]	; 20d3c <printf_core+0x111c>
   208cc:	e3a02000 	mov	r2, #0
   208d0:	eb001878 	bl	26ab8 <__aeabi_dmul>
   208d4:	e28d3090 	add	r3, sp, #144	; 0x90
   208d8:	e0453003 	sub	r3, r5, r3
   208dc:	e3530001 	cmp	r3, #1
   208e0:	e1a0a000 	mov	sl, r0
   208e4:	e1a04001 	mov	r4, r1
   208e8:	1a00000e 	bne	20928 <printf_core+0xd08>
   208ec:	e3a03000 	mov	r3, #0
   208f0:	e3a02000 	mov	r2, #0
   208f4:	eb0019bd 	bl	26ff0 <__aeabi_dcmpeq>
   208f8:	e35b0000 	cmp	fp, #0
   208fc:	d3a03000 	movle	r3, #0
   20900:	c3a03001 	movgt	r3, #1
   20904:	e3500000 	cmp	r0, #0
   20908:	03a03001 	moveq	r3, #1
   2090c:	e3530000 	cmp	r3, #0
   20910:	1a000001 	bne	2091c <printf_core+0xcfc>
   20914:	e3580000 	cmp	r8, #0
   20918:	0a000009 	beq	20944 <printf_core+0xd24>
   2091c:	e2865002 	add	r5, r6, #2
   20920:	e3a0302e 	mov	r3, #46	; 0x2e
   20924:	e5c63001 	strb	r3, [r6, #1]
   20928:	e3a02000 	mov	r2, #0
   2092c:	e3a03000 	mov	r3, #0
   20930:	e1a0000a 	mov	r0, sl
   20934:	e1a01004 	mov	r1, r4
   20938:	eb0019ac 	bl	26ff0 <__aeabi_dcmpeq>
   2093c:	e3500000 	cmp	r0, #0
   20940:	0a000043 	beq	20a54 <printf_core+0xe34>
   20944:	e28d2090 	add	r2, sp, #144	; 0x90
   20948:	e59d1014 	ldr	r1, [sp, #20]
   2094c:	e0424007 	sub	r4, r2, r7
   20950:	e3e0310a 	mvn	r3, #-2147483646	; 0x80000002
   20954:	e0433004 	sub	r3, r3, r4
   20958:	e0433001 	sub	r3, r3, r1
   2095c:	e15b0003 	cmp	fp, r3
   20960:	caffff14 	bgt	205b8 <printf_core+0x998>
   20964:	e35b0000 	cmp	fp, #0
   20968:	e0455002 	sub	r5, r5, r2
   2096c:	0a000004 	beq	20984 <printf_core+0xd64>
   20970:	e2453001 	sub	r3, r5, #1
   20974:	e15b0003 	cmp	fp, r3
   20978:	a28b6002 	addge	r6, fp, #2
   2097c:	a0866004 	addge	r6, r6, r4
   20980:	aa000000 	bge	20988 <printf_core+0xd68>
   20984:	e0846005 	add	r6, r4, r5
   20988:	e59d3014 	ldr	r3, [sp, #20]
   2098c:	e3a01020 	mov	r1, #32
   20990:	e59d200c 	ldr	r2, [sp, #12]
   20994:	e1a00009 	mov	r0, r9
   20998:	e0838006 	add	r8, r3, r6
   2099c:	e59d3008 	ldr	r3, [sp, #8]
   209a0:	e58d3000 	str	r3, [sp]
   209a4:	e1a03008 	mov	r3, r8
   209a8:	ebfffc79 	bl	1fb94 <pad>
   209ac:	e59d2014 	ldr	r2, [sp, #20]
   209b0:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
   209b4:	e1a00009 	mov	r0, r9
   209b8:	ebfffc24 	bl	1fa50 <out>
   209bc:	e59d3008 	ldr	r3, [sp, #8]
   209c0:	e59d200c 	ldr	r2, [sp, #12]
   209c4:	e3a01030 	mov	r1, #48	; 0x30
   209c8:	e2233801 	eor	r3, r3, #65536	; 0x10000
   209cc:	e1a00009 	mov	r0, r9
   209d0:	e58d3000 	str	r3, [sp]
   209d4:	e1a03008 	mov	r3, r8
   209d8:	ebfffc6d 	bl	1fb94 <pad>
   209dc:	e28d1090 	add	r1, sp, #144	; 0x90
   209e0:	e1a02005 	mov	r2, r5
   209e4:	e1a00009 	mov	r0, r9
   209e8:	ebfffc18 	bl	1fa50 <out>
   209ec:	e0462004 	sub	r2, r6, r4
   209f0:	e0422005 	sub	r2, r2, r5
   209f4:	e3a03000 	mov	r3, #0
   209f8:	e3a01030 	mov	r1, #48	; 0x30
   209fc:	e1a00009 	mov	r0, r9
   20a00:	e58d3000 	str	r3, [sp]
   20a04:	ebfffc62 	bl	1fb94 <pad>
   20a08:	e1a02004 	mov	r2, r4
   20a0c:	e1a01007 	mov	r1, r7
   20a10:	eaffff3c 	b	20708 <printf_core+0xae8>
   20a14:	e1a00006 	mov	r0, r6
   20a18:	e1a01007 	mov	r1, r7
   20a1c:	e59f3318 	ldr	r3, [pc, #792]	; 20d3c <printf_core+0x111c>
   20a20:	e3a02000 	mov	r2, #0
   20a24:	eb001823 	bl	26ab8 <__aeabi_dmul>
   20a28:	e1a06000 	mov	r6, r0
   20a2c:	e1a07001 	mov	r7, r1
   20a30:	eaffff69 	b	207dc <printf_core+0xbbc>
   20a34:	e1a01004 	mov	r1, r4
   20a38:	eb001731 	bl	26704 <__adddf3>
   20a3c:	e1a02006 	mov	r2, r6
   20a40:	e1a03007 	mov	r3, r7
   20a44:	eb00172d 	bl	26700 <__aeabi_dsub>
   20a48:	e1a0a000 	mov	sl, r0
   20a4c:	e1a04001 	mov	r4, r1
   20a50:	eaffff73 	b	20824 <printf_core+0xc04>
   20a54:	e1a06005 	mov	r6, r5
   20a58:	eaffff8b 	b	2088c <printf_core+0xc6c>
   20a5c:	e35b0000 	cmp	fp, #0
   20a60:	e3a02000 	mov	r2, #0
   20a64:	e3a03000 	mov	r3, #0
   20a68:	e1a0000a 	mov	r0, sl
   20a6c:	e1a01004 	mov	r1, r4
   20a70:	b3a0b006 	movlt	fp, #6
   20a74:	eb00195d 	bl	26ff0 <__aeabi_dcmpeq>
   20a78:	e3500000 	cmp	r0, #0
   20a7c:	1a000009 	bne	20aa8 <printf_core+0xe88>
   20a80:	e59f32b8 	ldr	r3, [pc, #696]	; 20d40 <printf_core+0x1120>
   20a84:	e1a0000a 	mov	r0, sl
   20a88:	e1a01004 	mov	r1, r4
   20a8c:	e3a02000 	mov	r2, #0
   20a90:	eb001808 	bl	26ab8 <__aeabi_dmul>
   20a94:	e59d306c 	ldr	r3, [sp, #108]	; 0x6c
   20a98:	e243301c 	sub	r3, r3, #28
   20a9c:	e58d306c 	str	r3, [sp, #108]	; 0x6c
   20aa0:	e1a0a000 	mov	sl, r0
   20aa4:	e1a04001 	mov	r4, r1
   20aa8:	e59d506c 	ldr	r5, [sp, #108]	; 0x6c
   20aac:	e3a06000 	mov	r6, #0
   20ab0:	e59f728c 	ldr	r7, [pc, #652]	; 20d44 <printf_core+0x1124>
   20ab4:	e3550000 	cmp	r5, #0
   20ab8:	b28d30d0 	addlt	r3, sp, #208	; 0xd0
   20abc:	a28d3e1f 	addge	r3, sp, #496	; 0x1f0
   20ac0:	e58d301c 	str	r3, [sp, #28]
   20ac4:	e59d301c 	ldr	r3, [sp, #28]
   20ac8:	e58d3014 	str	r3, [sp, #20]
   20acc:	e1a01004 	mov	r1, r4
   20ad0:	e1a0000a 	mov	r0, sl
   20ad4:	eb001975 	bl	270b0 <__aeabi_d2uiz>
   20ad8:	e59d3014 	ldr	r3, [sp, #20]
   20adc:	e4830004 	str	r0, [r3], #4
   20ae0:	e58d3014 	str	r3, [sp, #20]
   20ae4:	eb0017b1 	bl	269b0 <__aeabi_ui2d>
   20ae8:	e1a02000 	mov	r2, r0
   20aec:	e1a03001 	mov	r3, r1
   20af0:	e1a0000a 	mov	r0, sl
   20af4:	e1a01004 	mov	r1, r4
   20af8:	eb001700 	bl	26700 <__aeabi_dsub>
   20afc:	e1a02006 	mov	r2, r6
   20b00:	e1a03007 	mov	r3, r7
   20b04:	eb0017eb 	bl	26ab8 <__aeabi_dmul>
   20b08:	e3a02000 	mov	r2, #0
   20b0c:	e3a03000 	mov	r3, #0
   20b10:	e1a0a000 	mov	sl, r0
   20b14:	e1a04001 	mov	r4, r1
   20b18:	eb001934 	bl	26ff0 <__aeabi_dcmpeq>
   20b1c:	e3500000 	cmp	r0, #0
   20b20:	0affffe9 	beq	20acc <printf_core+0xeac>
   20b24:	e59d401c 	ldr	r4, [sp, #28]
   20b28:	e3a03000 	mov	r3, #0
   20b2c:	e3550000 	cmp	r5, #0
   20b30:	ca000058 	bgt	20c98 <printf_core+0x1078>
   20b34:	e59fa20c 	ldr	sl, [pc, #524]	; 20d48 <printf_core+0x1128>
   20b38:	e28b2019 	add	r2, fp, #25
   20b3c:	e3530000 	cmp	r3, #0
   20b40:	e59f7204 	ldr	r7, [pc, #516]	; 20d4c <printf_core+0x112c>
   20b44:	158d506c 	strne	r5, [sp, #108]	; 0x6c
   20b48:	e3a06001 	mov	r6, #1
   20b4c:	e0832a92 	umull	r2, r3, r2, sl
   20b50:	e1a000a3 	lsr	r0, r3, #1
   20b54:	e2800001 	add	r0, r0, #1
   20b58:	e1a03100 	lsl	r3, r0, #2
   20b5c:	e58d3048 	str	r3, [sp, #72]	; 0x48
   20b60:	e59d306c 	ldr	r3, [sp, #108]	; 0x6c
   20b64:	e3530000 	cmp	r3, #0
   20b68:	ba00008e 	blt	20da8 <printf_core+0x1188>
   20b6c:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
   20b70:	e3520000 	cmp	r2, #0
   20b74:	158d306c 	strne	r3, [sp, #108]	; 0x6c
   20b78:	e59d3014 	ldr	r3, [sp, #20]
   20b7c:	e1530004 	cmp	r3, r4
   20b80:	93a05000 	movls	r5, #0
   20b84:	9a000008 	bls	20bac <printf_core+0xf8c>
   20b88:	e59d301c 	ldr	r3, [sp, #28]
   20b8c:	e5942000 	ldr	r2, [r4]
   20b90:	e0435004 	sub	r5, r3, r4
   20b94:	e3a0300a 	mov	r3, #10
   20b98:	e1a01003 	mov	r1, r3
   20b9c:	e1a05145 	asr	r5, r5, #2
   20ba0:	e0855185 	add	r5, r5, r5, lsl #3
   20ba4:	e1520003 	cmp	r2, r3
   20ba8:	2a0000a6 	bcs	20e48 <printf_core+0x1228>
   20bac:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
   20bb0:	e59d2038 	ldr	r2, [sp, #56]	; 0x38
   20bb4:	e2533066 	subs	r3, r3, #102	; 0x66
   20bb8:	e59d101c 	ldr	r1, [sp, #28]
   20bbc:	e2422067 	sub	r2, r2, #103	; 0x67
   20bc0:	13a03001 	movne	r3, #1
   20bc4:	e16f2f12 	clz	r2, r2
   20bc8:	e063b395 	mls	r3, r5, r3, fp
   20bcc:	e35b0000 	cmp	fp, #0
   20bd0:	e1a022a2 	lsr	r2, r2, #5
   20bd4:	03a02000 	moveq	r2, #0
   20bd8:	e0433002 	sub	r3, r3, r2
   20bdc:	e59d2014 	ldr	r2, [sp, #20]
   20be0:	e0422001 	sub	r2, r2, r1
   20be4:	e1a02142 	asr	r2, r2, #2
   20be8:	e2422001 	sub	r2, r2, #1
   20bec:	e0822182 	add	r2, r2, r2, lsl #3
   20bf0:	e1530002 	cmp	r3, r2
   20bf4:	aa0000d8 	bge	20f5c <printf_core+0x133c>
   20bf8:	e2833b09 	add	r3, r3, #9216	; 0x2400
   20bfc:	e0c10a93 	smull	r0, r1, r3, sl
   20c00:	e1a02fc3 	asr	r2, r3, #31
   20c04:	e3a0a00a 	mov	sl, #10
   20c08:	e06220c1 	rsb	r2, r2, r1, asr #1
   20c0c:	e59d101c 	ldr	r1, [sp, #28]
   20c10:	e2426fff 	sub	r6, r2, #1020	; 0x3fc
   20c14:	e246610f 	sub	r6, r6, #-1073741821	; 0xc0000003
   20c18:	e0822182 	add	r2, r2, r2, lsl #3
   20c1c:	e0433002 	sub	r3, r3, r2
   20c20:	e1a0200a 	mov	r2, sl
   20c24:	e0816106 	add	r6, r1, r6, lsl #2
   20c28:	e2833001 	add	r3, r3, #1
   20c2c:	e3530009 	cmp	r3, #9
   20c30:	1a000087 	bne	20e54 <printf_core+0x1234>
   20c34:	e5963000 	ldr	r3, [r6]
   20c38:	e1a0100a 	mov	r1, sl
   20c3c:	e1a00003 	mov	r0, r3
   20c40:	e58d3048 	str	r3, [sp, #72]	; 0x48
   20c44:	eb001613 	bl	26498 <__aeabi_uidivmod>
   20c48:	e3510000 	cmp	r1, #0
   20c4c:	1a000003 	bne	20c60 <printf_core+0x1040>
   20c50:	e59d2014 	ldr	r2, [sp, #20]
   20c54:	e2863004 	add	r3, r6, #4
   20c58:	e1520003 	cmp	r2, r3
   20c5c:	0a0000b9 	beq	20f48 <printf_core+0x1328>
   20c60:	e3100001 	tst	r0, #1
   20c64:	1a00007d 	bne	20e60 <printf_core+0x1240>
   20c68:	e59f70dc 	ldr	r7, [pc, #220]	; 20d4c <printf_core+0x112c>
   20c6c:	e1540006 	cmp	r4, r6
   20c70:	e04a7007 	sub	r7, sl, r7
   20c74:	e16f7f17 	clz	r7, r7
   20c78:	e1a072a7 	lsr	r7, r7, #5
   20c7c:	23a07000 	movcs	r7, #0
   20c80:	e3570000 	cmp	r7, #0
   20c84:	15167004 	ldrne	r7, [r6, #-4]
   20c88:	12073001 	andne	r3, r7, #1
   20c8c:	1a000074 	bne	20e64 <printf_core+0x1244>
   20c90:	e58d7040 	str	r7, [sp, #64]	; 0x40
   20c94:	ea000073 	b	20e68 <printf_core+0x1248>
   20c98:	e355001d 	cmp	r5, #29
   20c9c:	e59d3014 	ldr	r3, [sp, #20]
   20ca0:	e3a00000 	mov	r0, #0
   20ca4:	b1a06005 	movlt	r6, r5
   20ca8:	a3a0601d 	movge	r6, #29
   20cac:	e246a020 	sub	sl, r6, #32
   20cb0:	e2437004 	sub	r7, r3, #4
   20cb4:	e2663020 	rsb	r3, r6, #32
   20cb8:	e58d305c 	str	r3, [sp, #92]	; 0x5c
   20cbc:	e1570004 	cmp	r7, r4
   20cc0:	2a000022 	bcs	20d50 <printf_core+0x1130>
   20cc4:	e3500000 	cmp	r0, #0
   20cc8:	e59d3014 	ldr	r3, [sp, #20]
   20ccc:	15040004 	strne	r0, [r4, #-4]
   20cd0:	12444004 	subne	r4, r4, #4
   20cd4:	e1530004 	cmp	r3, r4
   20cd8:	e58d3014 	str	r3, [sp, #20]
   20cdc:	9a000002 	bls	20cec <printf_core+0x10cc>
   20ce0:	e5332004 	ldr	r2, [r3, #-4]!
   20ce4:	e3520000 	cmp	r2, #0
   20ce8:	0afffff9 	beq	20cd4 <printf_core+0x10b4>
   20cec:	e0455006 	sub	r5, r5, r6
   20cf0:	e3a03001 	mov	r3, #1
   20cf4:	eaffff8c 	b	20b2c <printf_core+0xf0c>
   20cf8:	00012889 	andeq	r2, r1, r9, lsl #17
   20cfc:	00029c5a 	andeq	r9, r2, sl, asr ip
   20d00:	0000000c 	andeq	r0, r0, ip
   20d04:	00029e2a 	andeq	r9, r2, sl, lsr #28
   20d08:	00029c24 	andeq	r9, r2, r4, lsr #24
   20d0c:	00029c25 	andeq	r9, r2, r5, lsr #24
   20d10:	00029c26 	andeq	r9, r2, r6, lsr #24
   20d14:	00029c2e 	andeq	r9, r2, lr, lsr #24
   20d18:	00029c35 	andeq	r9, r2, r5, lsr ip
   20d1c:	00029c3b 	andeq	r9, r2, fp, lsr ip
   20d20:	7fefffff 	svcvc	0x00efffff
   20d24:	00029c48 	andeq	r9, r2, r8, asr #24
   20d28:	00029c4c 	andeq	r9, r2, ip, asr #24
   20d2c:	00029c54 	andeq	r9, r2, r4, asr ip
   20d30:	00029c50 	andeq	r9, r2, r0, asr ip
   20d34:	00029c38 	andeq	r9, r2, r8, lsr ip
   20d38:	40200000 	eormi	r0, r0, r0
   20d3c:	40300000 	eorsmi	r0, r0, r0
   20d40:	41b00000 	movsmi	r0, r0
   20d44:	41cdcd65 	bicmi	ip, sp, r5, ror #26
   20d48:	38e38e39 	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   20d4c:	3b9aca00 	blcc	fe6d3554 <__bss_end__+0xfe58a50c>
   20d50:	e5973000 	ldr	r3, [r7]
   20d54:	e3a02000 	mov	r2, #0
   20d58:	e59d105c 	ldr	r1, [sp, #92]	; 0x5c
   20d5c:	e1822a13 	orr	r2, r2, r3, lsl sl
   20d60:	e1822133 	orr	r2, r2, r3, lsr r1
   20d64:	e1a03613 	lsl	r3, r3, r6
   20d68:	e58d2034 	str	r2, [sp, #52]	; 0x34
   20d6c:	e58d3030 	str	r3, [sp, #48]	; 0x30
   20d70:	e1cd23d0 	ldrd	r2, [sp, #48]	; 0x30
   20d74:	e0922000 	adds	r2, r2, r0
   20d78:	e2a33000 	adc	r3, r3, #0
   20d7c:	e1cd24f8 	strd	r2, [sp, #72]	; 0x48
   20d80:	e1cd04d8 	ldrd	r0, [sp, #72]	; 0x48
   20d84:	e28f3fa1 	add	r3, pc, #644	; 0x284
   20d88:	e1c320d0 	ldrd	r2, [r3]
   20d8c:	eb0019cd 	bl	274c8 <__aeabi_uldivmod>
   20d90:	e1cd04d8 	ldrd	r0, [sp, #72]	; 0x48
   20d94:	e4072004 	str	r2, [r7], #-4
   20d98:	e28f3e27 	add	r3, pc, #624	; 0x270
   20d9c:	e1c320d0 	ldrd	r2, [r3]
   20da0:	eb0019c8 	bl	274c8 <__aeabi_uldivmod>
   20da4:	eaffffc4 	b	20cbc <printf_core+0x109c>
   20da8:	e3730009 	cmn	r3, #9
   20dac:	e1a0c004 	mov	ip, r4
   20db0:	a2631000 	rsbge	r1, r3, #0
   20db4:	b3a01009 	movlt	r1, #9
   20db8:	e1a05116 	lsl	r5, r6, r1
   20dbc:	e2455001 	sub	r5, r5, #1
   20dc0:	e1a02157 	asr	r2, r7, r1
   20dc4:	e58d2040 	str	r2, [sp, #64]	; 0x40
   20dc8:	e3a02000 	mov	r2, #0
   20dcc:	e59de014 	ldr	lr, [sp, #20]
   20dd0:	e15c000e 	cmp	ip, lr
   20dd4:	3a000014 	bcc	20e2c <printf_core+0x120c>
   20dd8:	e594c000 	ldr	ip, [r4]
   20ddc:	e0833001 	add	r3, r3, r1
   20de0:	e35c0000 	cmp	ip, #0
   20de4:	02844004 	addeq	r4, r4, #4
   20de8:	e3520000 	cmp	r2, #0
   20dec:	159dc014 	ldrne	ip, [sp, #20]
   20df0:	148c2004 	strne	r2, [ip], #4
   20df4:	158dc014 	strne	ip, [sp, #20]
   20df8:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
   20dfc:	e59d201c 	ldr	r2, [sp, #28]
   20e00:	e35c0066 	cmp	ip, #102	; 0x66
   20e04:	e59dc014 	ldr	ip, [sp, #20]
   20e08:	11a02004 	movne	r2, r4
   20e0c:	e04cc002 	sub	ip, ip, r2
   20e10:	e150014c 	cmp	r0, ip, asr #2
   20e14:	b59dc048 	ldrlt	ip, [sp, #72]	; 0x48
   20e18:	b082200c 	addlt	r2, r2, ip
   20e1c:	b58d2014 	strlt	r2, [sp, #20]
   20e20:	e3a02001 	mov	r2, #1
   20e24:	e58d2040 	str	r2, [sp, #64]	; 0x40
   20e28:	eaffff4d 	b	20b64 <printf_core+0xf44>
   20e2c:	e59ce000 	ldr	lr, [ip]
   20e30:	e082213e 	add	r2, r2, lr, lsr r1
   20e34:	e48c2004 	str	r2, [ip], #4
   20e38:	e00e2005 	and	r2, lr, r5
   20e3c:	e59de040 	ldr	lr, [sp, #64]	; 0x40
   20e40:	e002029e 	mul	r2, lr, r2
   20e44:	eaffffe0 	b	20dcc <printf_core+0x11ac>
   20e48:	e0030391 	mul	r3, r1, r3
   20e4c:	e2855001 	add	r5, r5, #1
   20e50:	eaffff53 	b	20ba4 <printf_core+0xf84>
   20e54:	e00a0a92 	mul	sl, r2, sl
   20e58:	e2833001 	add	r3, r3, #1
   20e5c:	eaffff72 	b	20c2c <printf_core+0x100c>
   20e60:	e3a03001 	mov	r3, #1
   20e64:	e58d3040 	str	r3, [sp, #64]	; 0x40
   20e68:	e15100ca 	cmp	r1, sl, asr #1
   20e6c:	e59f71a4 	ldr	r7, [pc, #420]	; 21018 <printf_core+0x13f8>
   20e70:	359f31a4 	ldrcc	r3, [pc, #420]	; 2101c <printf_core+0x13fc>
   20e74:	33a02000 	movcc	r2, #0
   20e78:	3a00000a 	bcc	20ea8 <printf_core+0x1288>
   20e7c:	159f319c 	ldrne	r3, [pc, #412]	; 21020 <printf_core+0x1400>
   20e80:	13a02000 	movne	r2, #0
   20e84:	1a000007 	bne	20ea8 <printf_core+0x1288>
   20e88:	e59de014 	ldr	lr, [sp, #20]
   20e8c:	e2863004 	add	r3, r6, #4
   20e90:	e59fc18c 	ldr	ip, [pc, #396]	; 21024 <printf_core+0x1404>
   20e94:	e3a02000 	mov	r2, #0
   20e98:	e59f0180 	ldr	r0, [pc, #384]	; 21020 <printf_core+0x1400>
   20e9c:	e15e0003 	cmp	lr, r3
   20ea0:	01a0300c 	moveq	r3, ip
   20ea4:	11a03000 	movne	r3, r0
   20ea8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
   20eac:	e3500000 	cmp	r0, #0
   20eb0:	0a000004 	beq	20ec8 <printf_core+0x12a8>
   20eb4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
   20eb8:	e5d00000 	ldrb	r0, [r0]
   20ebc:	e350002d 	cmp	r0, #45	; 0x2d
   20ec0:	02877102 	addeq	r7, r7, #-2147483648	; 0x80000000
   20ec4:	02833102 	addeq	r3, r3, #-2147483648	; 0x80000000
   20ec8:	e59d0048 	ldr	r0, [sp, #72]	; 0x48
   20ecc:	e0401001 	sub	r1, r0, r1
   20ed0:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
   20ed4:	e58d1048 	str	r1, [sp, #72]	; 0x48
   20ed8:	e1a01007 	mov	r1, r7
   20edc:	eb001608 	bl	26704 <__adddf3>
   20ee0:	e1a03001 	mov	r3, r1
   20ee4:	e1a02000 	mov	r2, r0
   20ee8:	e1a01007 	mov	r1, r7
   20eec:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
   20ef0:	eb00183e 	bl	26ff0 <__aeabi_dcmpeq>
   20ef4:	e59d3048 	ldr	r3, [sp, #72]	; 0x48
   20ef8:	e3500000 	cmp	r0, #0
   20efc:	15863000 	strne	r3, [r6]
   20f00:	1a000010 	bne	20f48 <printf_core+0x1328>
   20f04:	e59f111c 	ldr	r1, [pc, #284]	; 21028 <printf_core+0x1408>
   20f08:	e1a02006 	mov	r2, r6
   20f0c:	e08a3003 	add	r3, sl, r3
   20f10:	e5863000 	str	r3, [r6]
   20f14:	e1a06002 	mov	r6, r2
   20f18:	e4123004 	ldr	r3, [r2], #-4
   20f1c:	e1530001 	cmp	r3, r1
   20f20:	8a00002e 	bhi	20fe0 <printf_core+0x13c0>
   20f24:	e59d301c 	ldr	r3, [sp, #28]
   20f28:	e5942000 	ldr	r2, [r4]
   20f2c:	e0435004 	sub	r5, r3, r4
   20f30:	e3a0300a 	mov	r3, #10
   20f34:	e1a01003 	mov	r1, r3
   20f38:	e1a05145 	asr	r5, r5, #2
   20f3c:	e0855185 	add	r5, r5, r5, lsl #3
   20f40:	e1520003 	cmp	r2, r3
   20f44:	2a00002d 	bcs	21000 <printf_core+0x13e0>
   20f48:	e59d3014 	ldr	r3, [sp, #20]
   20f4c:	e2866004 	add	r6, r6, #4
   20f50:	e1530006 	cmp	r3, r6
   20f54:	21a03006 	movcs	r3, r6
   20f58:	e58d3014 	str	r3, [sp, #20]
   20f5c:	e59d3014 	ldr	r3, [sp, #20]
   20f60:	e1530004 	cmp	r3, r4
   20f64:	e58d3014 	str	r3, [sp, #20]
   20f68:	9a000002 	bls	20f78 <printf_core+0x1358>
   20f6c:	e5332004 	ldr	r2, [r3, #-4]!
   20f70:	e3520000 	cmp	r2, #0
   20f74:	0afffff9 	beq	20f60 <printf_core+0x1340>
   20f78:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
   20f7c:	e3530067 	cmp	r3, #103	; 0x67
   20f80:	1a000041 	bne	2108c <printf_core+0x146c>
   20f84:	e59d3010 	ldr	r3, [sp, #16]
   20f88:	e35b0000 	cmp	fp, #0
   20f8c:	03a0b001 	moveq	fp, #1
   20f90:	e3750004 	cmn	r5, #4
   20f94:	a15b0005 	cmpge	fp, r5
   20f98:	c2433001 	subgt	r3, r3, #1
   20f9c:	c58d3010 	strgt	r3, [sp, #16]
   20fa0:	c2853001 	addgt	r3, r5, #1
   20fa4:	d2433002 	suble	r3, r3, #2
   20fa8:	c04bb003 	subgt	fp, fp, r3
   20fac:	d58d3010 	strle	r3, [sp, #16]
   20fb0:	e59d3008 	ldr	r3, [sp, #8]
   20fb4:	d24bb001 	suble	fp, fp, #1
   20fb8:	e2136008 	ands	r6, r3, #8
   20fbc:	1a000032 	bne	2108c <printf_core+0x146c>
   20fc0:	e59d3014 	ldr	r3, [sp, #20]
   20fc4:	e1530004 	cmp	r3, r4
   20fc8:	9a000002 	bls	20fd8 <printf_core+0x13b8>
   20fcc:	e513a004 	ldr	sl, [r3, #-4]
   20fd0:	e35a0000 	cmp	sl, #0
   20fd4:	1a000096 	bne	21234 <printf_core+0x1614>
   20fd8:	e3a06009 	mov	r6, #9
   20fdc:	ea00001c 	b	21054 <printf_core+0x1434>
   20fe0:	e1540002 	cmp	r4, r2
   20fe4:	e5820004 	str	r0, [r2, #4]
   20fe8:	85040004 	strhi	r0, [r4, #-4]
   20fec:	82444004 	subhi	r4, r4, #4
   20ff0:	e5923000 	ldr	r3, [r2]
   20ff4:	e2833001 	add	r3, r3, #1
   20ff8:	e5823000 	str	r3, [r2]
   20ffc:	eaffffc4 	b	20f14 <printf_core+0x12f4>
   21000:	e0030391 	mul	r3, r1, r3
   21004:	e2855001 	add	r5, r5, #1
   21008:	eaffffcc 	b	20f40 <printf_core+0x1320>
   2100c:	e320f000 	nop	{0}
   21010:	3b9aca00 	blcc	fe6d3818 <__bss_end__+0xfe58a7d0>
   21014:	00000000 	andeq	r0, r0, r0
   21018:	43400000 	movtmi	r0, #0
   2101c:	3fe00000 	svccc	0x00e00000
   21020:	3ff80000 	svccc	0x00f80000
   21024:	3ff00000 	svccc	0x00f00000	; IMB
   21028:	3b9ac9ff 	blcc	fe6d382c <__bss_end__+0xfe58a7e4>
   2102c:	00029c58 	andeq	r9, r2, r8, asr ip
   21030:	00029c24 	andeq	r9, r2, r4, lsr #24
   21034:	e0070793 	mul	r7, r3, r7
   21038:	e2866001 	add	r6, r6, #1
   2103c:	e1a01007 	mov	r1, r7
   21040:	e1a0000a 	mov	r0, sl
   21044:	eb001513 	bl	26498 <__aeabi_uidivmod>
   21048:	e3a0300a 	mov	r3, #10
   2104c:	e3510000 	cmp	r1, #0
   21050:	0afffff7 	beq	21034 <printf_core+0x1414>
   21054:	e59d201c 	ldr	r2, [sp, #28]
   21058:	e59d3014 	ldr	r3, [sp, #20]
   2105c:	e0433002 	sub	r3, r3, r2
   21060:	e59d2010 	ldr	r2, [sp, #16]
   21064:	e1a03143 	asr	r3, r3, #2
   21068:	e3822020 	orr	r2, r2, #32
   2106c:	e2433001 	sub	r3, r3, #1
   21070:	e3520066 	cmp	r2, #102	; 0x66
   21074:	e0833183 	add	r3, r3, r3, lsl #3
   21078:	10853003 	addne	r3, r5, r3
   2107c:	e0436006 	sub	r6, r3, r6
   21080:	e1c66fc6 	bic	r6, r6, r6, asr #31
   21084:	e15b0006 	cmp	fp, r6
   21088:	a1a0b006 	movge	fp, r6
   2108c:	e37b010e 	cmn	fp, #-2147483645	; 0x80000003
   21090:	cafffd48 	bgt	205b8 <printf_core+0x998>
   21094:	e59d3008 	ldr	r3, [sp, #8]
   21098:	e3e07102 	mvn	r7, #-2147483648	; 0x80000000
   2109c:	e2033008 	and	r3, r3, #8
   210a0:	e58d3038 	str	r3, [sp, #56]	; 0x38
   210a4:	e19b3003 	orrs	r3, fp, r3
   210a8:	e58d3040 	str	r3, [sp, #64]	; 0x40
   210ac:	e28b3001 	add	r3, fp, #1
   210b0:	13a02001 	movne	r2, #1
   210b4:	03a02000 	moveq	r2, #0
   210b8:	e082a003 	add	sl, r2, r3
   210bc:	e59d3010 	ldr	r3, [sp, #16]
   210c0:	e047700a 	sub	r7, r7, sl
   210c4:	e3836020 	orr	r6, r3, #32
   210c8:	e3560066 	cmp	r6, #102	; 0x66
   210cc:	1a00005a 	bne	2123c <printf_core+0x161c>
   210d0:	e1550007 	cmp	r5, r7
   210d4:	cafffd37 	bgt	205b8 <printf_core+0x998>
   210d8:	e3550000 	cmp	r5, #0
   210dc:	c08aa005 	addgt	sl, sl, r5
   210e0:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   210e4:	e3530000 	cmp	r3, #0
   210e8:	03e03102 	mvneq	r3, #-2147483648	; 0x80000000
   210ec:	13e03106 	mvnne	r3, #-2147483647	; 0x80000001
   210f0:	e153000a 	cmp	r3, sl
   210f4:	bafffd2f 	blt	205b8 <printf_core+0x998>
   210f8:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   210fc:	e3a01020 	mov	r1, #32
   21100:	e59d200c 	ldr	r2, [sp, #12]
   21104:	e1a00009 	mov	r0, r9
   21108:	e083a00a 	add	sl, r3, sl
   2110c:	e59d3008 	ldr	r3, [sp, #8]
   21110:	e58d3000 	str	r3, [sp]
   21114:	e1a0300a 	mov	r3, sl
   21118:	ebfffa9d 	bl	1fb94 <pad>
   2111c:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
   21120:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
   21124:	e1a00009 	mov	r0, r9
   21128:	ebfffa48 	bl	1fa50 <out>
   2112c:	e59d3008 	ldr	r3, [sp, #8]
   21130:	e59d200c 	ldr	r2, [sp, #12]
   21134:	e3a01030 	mov	r1, #48	; 0x30
   21138:	e2233801 	eor	r3, r3, #65536	; 0x10000
   2113c:	e1a00009 	mov	r0, r9
   21140:	e58d3000 	str	r3, [sp]
   21144:	e1a0300a 	mov	r3, sl
   21148:	ebfffa91 	bl	1fb94 <pad>
   2114c:	e3560066 	cmp	r6, #102	; 0x66
   21150:	1a000081 	bne	2135c <printf_core+0x173c>
   21154:	e59d301c 	ldr	r3, [sp, #28]
   21158:	e28d6090 	add	r6, sp, #144	; 0x90
   2115c:	e2867009 	add	r7, r6, #9
   21160:	e1530004 	cmp	r3, r4
   21164:	31a04003 	movcc	r4, r3
   21168:	e1a05004 	mov	r5, r4
   2116c:	e59d301c 	ldr	r3, [sp, #28]
   21170:	e1530005 	cmp	r3, r5
   21174:	2a00004b 	bcs	212a8 <printf_core+0x1688>
   21178:	e2832004 	add	r2, r3, #4
   2117c:	e2441003 	sub	r1, r4, #3
   21180:	e2833001 	add	r3, r3, #1
   21184:	e0422004 	sub	r2, r2, r4
   21188:	e1530001 	cmp	r3, r1
   2118c:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
   21190:	e3c22003 	bic	r2, r2, #3
   21194:	33a02000 	movcc	r2, #0
   21198:	e3530000 	cmp	r3, #0
   2119c:	e0844002 	add	r4, r4, r2
   211a0:	0a00000f 	beq	211e4 <printf_core+0x15c4>
   211a4:	e51f1180 	ldr	r1, [pc, #-384]	; 2102c <printf_core+0x140c>
   211a8:	e3a02001 	mov	r2, #1
   211ac:	e1a00009 	mov	r0, r9
   211b0:	e28d6090 	add	r6, sp, #144	; 0x90
   211b4:	ebfffa25 	bl	1fa50 <out>
   211b8:	e2865009 	add	r5, r6, #9
   211bc:	e1a0800b 	mov	r8, fp
   211c0:	e59d3014 	ldr	r3, [sp, #20]
   211c4:	e1a01004 	mov	r1, r4
   211c8:	e1530004 	cmp	r3, r4
   211cc:	93a03000 	movls	r3, #0
   211d0:	83a03001 	movhi	r3, #1
   211d4:	e3580000 	cmp	r8, #0
   211d8:	d3a03000 	movle	r3, #0
   211dc:	e3530000 	cmp	r3, #0
   211e0:	1a000048 	bne	21308 <printf_core+0x16e8>
   211e4:	e3a03000 	mov	r3, #0
   211e8:	e3a01030 	mov	r1, #48	; 0x30
   211ec:	e58d3000 	str	r3, [sp]
   211f0:	e1a00009 	mov	r0, r9
   211f4:	e3a03009 	mov	r3, #9
   211f8:	e0882003 	add	r2, r8, r3
   211fc:	ebfffa64 	bl	1fb94 <pad>
   21200:	e59d3008 	ldr	r3, [sp, #8]
   21204:	e3a01020 	mov	r1, #32
   21208:	e59d200c 	ldr	r2, [sp, #12]
   2120c:	e1a00009 	mov	r0, r9
   21210:	e2233a02 	eor	r3, r3, #8192	; 0x2000
   21214:	e58d3000 	str	r3, [sp]
   21218:	e1a0300a 	mov	r3, sl
   2121c:	ebfffa5c 	bl	1fb94 <pad>
   21220:	e59d300c 	ldr	r3, [sp, #12]
   21224:	e153000a 	cmp	r3, sl
   21228:	a1a08003 	movge	r8, r3
   2122c:	b1a0800a 	movlt	r8, sl
   21230:	eafffcdd 	b	205ac <printf_core+0x98c>
   21234:	e3a0700a 	mov	r7, #10
   21238:	eaffff7f 	b	2103c <printf_core+0x141c>
   2123c:	e0250fc5 	eor	r0, r5, r5, asr #31
   21240:	e28d2090 	add	r2, sp, #144	; 0x90
   21244:	e0400fc5 	sub	r0, r0, r5, asr #31
   21248:	e1a01fc0 	asr	r1, r0, #31
   2124c:	ebfff9c2 	bl	1f95c <fmt_u>
   21250:	e28d2090 	add	r2, sp, #144	; 0x90
   21254:	e3a01030 	mov	r1, #48	; 0x30
   21258:	e0423000 	sub	r3, r2, r0
   2125c:	e3530001 	cmp	r3, #1
   21260:	da00000e 	ble	212a0 <printf_core+0x1680>
   21264:	e3550000 	cmp	r5, #0
   21268:	b3a0302d 	movlt	r3, #45	; 0x2d
   2126c:	a3a0302b 	movge	r3, #43	; 0x2b
   21270:	e5403001 	strb	r3, [r0, #-1]
   21274:	e2403002 	sub	r3, r0, #2
   21278:	e58d3058 	str	r3, [sp, #88]	; 0x58
   2127c:	e59d3010 	ldr	r3, [sp, #16]
   21280:	e59d2058 	ldr	r2, [sp, #88]	; 0x58
   21284:	e5403002 	strb	r3, [r0, #-2]
   21288:	e28d3090 	add	r3, sp, #144	; 0x90
   2128c:	e0433002 	sub	r3, r3, r2
   21290:	e1530007 	cmp	r3, r7
   21294:	cafffcc7 	bgt	205b8 <printf_core+0x998>
   21298:	e08aa003 	add	sl, sl, r3
   2129c:	eaffff8f 	b	210e0 <printf_core+0x14c0>
   212a0:	e5601001 	strb	r1, [r0, #-1]!
   212a4:	eaffffeb 	b	21258 <printf_core+0x1638>
   212a8:	e1a02007 	mov	r2, r7
   212ac:	e3a01000 	mov	r1, #0
   212b0:	e5950000 	ldr	r0, [r5]
   212b4:	ebfff9a8 	bl	1f95c <fmt_u>
   212b8:	e1540005 	cmp	r4, r5
   212bc:	13a02030 	movne	r2, #48	; 0x30
   212c0:	e1a01000 	mov	r1, r0
   212c4:	11a03000 	movne	r3, r0
   212c8:	1a000005 	bne	212e4 <printf_core+0x16c4>
   212cc:	e1500007 	cmp	r0, r7
   212d0:	028d1098 	addeq	r1, sp, #152	; 0x98
   212d4:	03a03030 	moveq	r3, #48	; 0x30
   212d8:	05cd3098 	strbeq	r3, [sp, #152]	; 0x98
   212dc:	ea000004 	b	212f4 <printf_core+0x16d4>
   212e0:	e5632001 	strb	r2, [r3, #-1]!
   212e4:	e1530006 	cmp	r3, r6
   212e8:	8afffffc 	bhi	212e0 <printf_core+0x16c0>
   212ec:	e1510006 	cmp	r1, r6
   212f0:	21a01006 	movcs	r1, r6
   212f4:	e0472001 	sub	r2, r7, r1
   212f8:	e1a00009 	mov	r0, r9
   212fc:	ebfff9d3 	bl	1fa50 <out>
   21300:	e2855004 	add	r5, r5, #4
   21304:	eaffff98 	b	2116c <printf_core+0x154c>
   21308:	e5910000 	ldr	r0, [r1]
   2130c:	e1a02005 	mov	r2, r5
   21310:	e3a01000 	mov	r1, #0
   21314:	e2844004 	add	r4, r4, #4
   21318:	ebfff98f 	bl	1f95c <fmt_u>
   2131c:	e3a02030 	mov	r2, #48	; 0x30
   21320:	e1a03000 	mov	r3, r0
   21324:	e1530006 	cmp	r3, r6
   21328:	8a000009 	bhi	21354 <printf_core+0x1734>
   2132c:	e3580009 	cmp	r8, #9
   21330:	b1a02008 	movlt	r2, r8
   21334:	a3a02009 	movge	r2, #9
   21338:	e1500006 	cmp	r0, r6
   2133c:	e2488009 	sub	r8, r8, #9
   21340:	31a01000 	movcc	r1, r0
   21344:	21a01006 	movcs	r1, r6
   21348:	e1a00009 	mov	r0, r9
   2134c:	ebfff9bf 	bl	1fa50 <out>
   21350:	eaffff9a 	b	211c0 <printf_core+0x15a0>
   21354:	e5632001 	strb	r2, [r3, #-1]!
   21358:	eafffff1 	b	21324 <printf_core+0x1704>
   2135c:	e59d3014 	ldr	r3, [sp, #20]
   21360:	e28d6090 	add	r6, sp, #144	; 0x90
   21364:	e2867009 	add	r7, r6, #9
   21368:	e1a05004 	mov	r5, r4
   2136c:	e1530004 	cmp	r3, r4
   21370:	92843004 	addls	r3, r4, #4
   21374:	958d3014 	strls	r3, [sp, #20]
   21378:	e59d3014 	ldr	r3, [sp, #20]
   2137c:	e1550003 	cmp	r5, r3
   21380:	23a03000 	movcs	r3, #0
   21384:	33a03001 	movcc	r3, #1
   21388:	e35b0000 	cmp	fp, #0
   2138c:	b3a03000 	movlt	r3, #0
   21390:	e3530000 	cmp	r3, #0
   21394:	1a00000c 	bne	213cc <printf_core+0x17ac>
   21398:	e1a00009 	mov	r0, r9
   2139c:	e58d3000 	str	r3, [sp]
   213a0:	e3a01030 	mov	r1, #48	; 0x30
   213a4:	e3a03012 	mov	r3, #18
   213a8:	e08b2003 	add	r2, fp, r3
   213ac:	ebfff9f8 	bl	1fb94 <pad>
   213b0:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
   213b4:	e28d2090 	add	r2, sp, #144	; 0x90
   213b8:	e1a00009 	mov	r0, r9
   213bc:	e0422003 	sub	r2, r2, r3
   213c0:	e1a01003 	mov	r1, r3
   213c4:	ebfff9a1 	bl	1fa50 <out>
   213c8:	eaffff8c 	b	21200 <printf_core+0x15e0>
   213cc:	e1a02007 	mov	r2, r7
   213d0:	e3a01000 	mov	r1, #0
   213d4:	e5950000 	ldr	r0, [r5]
   213d8:	ebfff95f 	bl	1f95c <fmt_u>
   213dc:	e1500007 	cmp	r0, r7
   213e0:	e1a01000 	mov	r1, r0
   213e4:	028d1098 	addeq	r1, sp, #152	; 0x98
   213e8:	03a03030 	moveq	r3, #48	; 0x30
   213ec:	05cd3098 	strbeq	r3, [sp, #152]	; 0x98
   213f0:	e1540005 	cmp	r4, r5
   213f4:	11a03001 	movne	r3, r1
   213f8:	13a02030 	movne	r2, #48	; 0x30
   213fc:	1a00000f 	bne	21440 <printf_core+0x1820>
   21400:	e3a02001 	mov	r2, #1
   21404:	e1a00009 	mov	r0, r9
   21408:	e2813001 	add	r3, r1, #1
   2140c:	e58d3010 	str	r3, [sp, #16]
   21410:	ebfff98e 	bl	1fa50 <out>
   21414:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
   21418:	e19b3003 	orrs	r3, fp, r3
   2141c:	e59d3010 	ldr	r3, [sp, #16]
   21420:	0a00000b 	beq	21454 <printf_core+0x1834>
   21424:	e51f1400 	ldr	r1, [pc, #-1024]	; 2102c <printf_core+0x140c>
   21428:	e3a02001 	mov	r2, #1
   2142c:	e1a00009 	mov	r0, r9
   21430:	ebfff986 	bl	1fa50 <out>
   21434:	e59d3010 	ldr	r3, [sp, #16]
   21438:	ea000005 	b	21454 <printf_core+0x1834>
   2143c:	e5632001 	strb	r2, [r3, #-1]!
   21440:	e1530006 	cmp	r3, r6
   21444:	8afffffc 	bhi	2143c <printf_core+0x181c>
   21448:	e1510006 	cmp	r1, r6
   2144c:	31a03001 	movcc	r3, r1
   21450:	21a03006 	movcs	r3, r6
   21454:	e0478003 	sub	r8, r7, r3
   21458:	e1a01003 	mov	r1, r3
   2145c:	e15b0008 	cmp	fp, r8
   21460:	e1a00009 	mov	r0, r9
   21464:	e2855004 	add	r5, r5, #4
   21468:	b1a0200b 	movlt	r2, fp
   2146c:	a1a02008 	movge	r2, r8
   21470:	ebfff976 	bl	1fa50 <out>
   21474:	e04bb008 	sub	fp, fp, r8
   21478:	eaffffbe 	b	21378 <printf_core+0x1758>
   2147c:	e51f6454 	ldr	r6, [pc, #-1108]	; 21030 <printf_core+0x1410>
   21480:	e28d70d0 	add	r7, sp, #208	; 0xd0
   21484:	eafffb7e 	b	20284 <printf_core+0x664>
   21488:	e59d0020 	ldr	r0, [sp, #32]
   2148c:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c
   21490:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
   21494:	e0830180 	add	r0, r3, r0, lsl #3
   21498:	ebfff974 	bl	1fa70 <pop_arg>
   2149c:	e59d3020 	ldr	r3, [sp, #32]
   214a0:	e2833001 	add	r3, r3, #1
   214a4:	e58d3020 	str	r3, [sp, #32]
   214a8:	e353000a 	cmp	r3, #10
   214ac:	1afff9f0 	bne	1fc74 <printf_core+0x54>
   214b0:	e3a03001 	mov	r3, #1
   214b4:	eafffad4 	b	2000c <printf_core+0x3ec>

000214b8 <vfprintf>:
   214b8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
   214bc:	e24dd0dc 	sub	sp, sp, #220	; 0xdc
   214c0:	e28d9010 	add	r9, sp, #16
   214c4:	e1a05001 	mov	r5, r1
   214c8:	e1a06002 	mov	r6, r2
   214cc:	e3a01000 	mov	r1, #0
   214d0:	e3a02028 	mov	r2, #40	; 0x28
   214d4:	e1a04000 	mov	r4, r0
   214d8:	e1a00009 	mov	r0, r9
   214dc:	eb000205 	bl	21cf8 <memset>
   214e0:	e1a01005 	mov	r1, r5
   214e4:	e28d3038 	add	r3, sp, #56	; 0x38
   214e8:	e28d200c 	add	r2, sp, #12
   214ec:	e3a00000 	mov	r0, #0
   214f0:	e58d9000 	str	r9, [sp]
   214f4:	e58d600c 	str	r6, [sp, #12]
   214f8:	ebfff9c8 	bl	1fc20 <printf_core>
   214fc:	e3500000 	cmp	r0, #0
   21500:	b3e05000 	mvnlt	r5, #0
   21504:	ba000039 	blt	215f0 <vfprintf+0x138>
   21508:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   2150c:	e3530000 	cmp	r3, #0
   21510:	b3a06000 	movlt	r6, #0
   21514:	ba000002 	blt	21524 <vfprintf+0x6c>
   21518:	e1a00004 	mov	r0, r4
   2151c:	eb0004a2 	bl	227ac <__lockfile>
   21520:	e1a06000 	mov	r6, r0
   21524:	e5943000 	ldr	r3, [r4]
   21528:	e1d424da 	ldrsb	r2, [r4, #74]	; 0x4a
   2152c:	e2037020 	and	r7, r3, #32
   21530:	e3520000 	cmp	r2, #0
   21534:	d3c33020 	bicle	r3, r3, #32
   21538:	d5843000 	strle	r3, [r4]
   2153c:	e5943030 	ldr	r3, [r4, #48]	; 0x30
   21540:	e3530000 	cmp	r3, #0
   21544:	13a08000 	movne	r8, #0
   21548:	1a000008 	bne	21570 <vfprintf+0xb8>
   2154c:	e28d3088 	add	r3, sp, #136	; 0x88
   21550:	e594802c 	ldr	r8, [r4, #44]	; 0x2c
   21554:	e584301c 	str	r3, [r4, #28]
   21558:	e584302c 	str	r3, [r4, #44]	; 0x2c
   2155c:	e5843014 	str	r3, [r4, #20]
   21560:	e3a03050 	mov	r3, #80	; 0x50
   21564:	e5843030 	str	r3, [r4, #48]	; 0x30
   21568:	e28d30d8 	add	r3, sp, #216	; 0xd8
   2156c:	e5843010 	str	r3, [r4, #16]
   21570:	e1a01005 	mov	r1, r5
   21574:	e28d3038 	add	r3, sp, #56	; 0x38
   21578:	e28d200c 	add	r2, sp, #12
   2157c:	e1a00004 	mov	r0, r4
   21580:	e58d9000 	str	r9, [sp]
   21584:	ebfff9a5 	bl	1fc20 <printf_core>
   21588:	e3580000 	cmp	r8, #0
   2158c:	e1a05000 	mov	r5, r0
   21590:	0a00000d 	beq	215cc <vfprintf+0x114>
   21594:	e3a02000 	mov	r2, #0
   21598:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   2159c:	e1a01002 	mov	r1, r2
   215a0:	e1a00004 	mov	r0, r4
   215a4:	e12fff33 	blx	r3
   215a8:	e5943014 	ldr	r3, [r4, #20]
   215ac:	e584802c 	str	r8, [r4, #44]	; 0x2c
   215b0:	e3530000 	cmp	r3, #0
   215b4:	e3a03000 	mov	r3, #0
   215b8:	e5843030 	str	r3, [r4, #48]	; 0x30
   215bc:	03e05000 	mvneq	r5, #0
   215c0:	e5843010 	str	r3, [r4, #16]
   215c4:	e584301c 	str	r3, [r4, #28]
   215c8:	e5843014 	str	r3, [r4, #20]
   215cc:	e5943000 	ldr	r3, [r4]
   215d0:	e3130020 	tst	r3, #32
   215d4:	e1877003 	orr	r7, r7, r3
   215d8:	e5847000 	str	r7, [r4]
   215dc:	13e05000 	mvnne	r5, #0
   215e0:	e3560000 	cmp	r6, #0
   215e4:	0a000001 	beq	215f0 <vfprintf+0x138>
   215e8:	e1a00004 	mov	r0, r4
   215ec:	eb000489 	bl	22818 <__unlockfile>
   215f0:	e1a00005 	mov	r0, r5
   215f4:	e28dd0dc 	add	sp, sp, #220	; 0xdc
   215f8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}

000215fc <sn_write>:
   215fc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   21600:	e1a08001 	mov	r8, r1
   21604:	e5904054 	ldr	r4, [r0, #84]	; 0x54
   21608:	e1a07002 	mov	r7, r2
   2160c:	e590101c 	ldr	r1, [r0, #28]
   21610:	e1a06000 	mov	r6, r0
   21614:	e5905014 	ldr	r5, [r0, #20]
   21618:	e5942004 	ldr	r2, [r4, #4]
   2161c:	e0455001 	sub	r5, r5, r1
   21620:	e1550002 	cmp	r5, r2
   21624:	21a05002 	movcs	r5, r2
   21628:	e3550000 	cmp	r5, #0
   2162c:	0a000008 	beq	21654 <sn_write+0x58>
   21630:	e1a02005 	mov	r2, r5
   21634:	e5940000 	ldr	r0, [r4]
   21638:	eb000061 	bl	217c4 <memcpy>
   2163c:	e5943000 	ldr	r3, [r4]
   21640:	e5942004 	ldr	r2, [r4, #4]
   21644:	e0833005 	add	r3, r3, r5
   21648:	e5843000 	str	r3, [r4]
   2164c:	e0422005 	sub	r2, r2, r5
   21650:	e5842004 	str	r2, [r4, #4]
   21654:	e5945004 	ldr	r5, [r4, #4]
   21658:	e1570005 	cmp	r7, r5
   2165c:	31a05007 	movcc	r5, r7
   21660:	e3550000 	cmp	r5, #0
   21664:	0a000009 	beq	21690 <sn_write+0x94>
   21668:	e1a02005 	mov	r2, r5
   2166c:	e5940000 	ldr	r0, [r4]
   21670:	e1a01008 	mov	r1, r8
   21674:	eb000052 	bl	217c4 <memcpy>
   21678:	e5943000 	ldr	r3, [r4]
   2167c:	e5942004 	ldr	r2, [r4, #4]
   21680:	e0833005 	add	r3, r3, r5
   21684:	e5843000 	str	r3, [r4]
   21688:	e0422005 	sub	r2, r2, r5
   2168c:	e5842004 	str	r2, [r4, #4]
   21690:	e5943000 	ldr	r3, [r4]
   21694:	e3a02000 	mov	r2, #0
   21698:	e1a00007 	mov	r0, r7
   2169c:	e5c32000 	strb	r2, [r3]
   216a0:	e596302c 	ldr	r3, [r6, #44]	; 0x2c
   216a4:	e586301c 	str	r3, [r6, #28]
   216a8:	e5863014 	str	r3, [r6, #20]
   216ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000216b0 <vsnprintf>:
   216b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   216b4:	e2515000 	subs	r5, r1, #0
   216b8:	e24dd0a0 	sub	sp, sp, #160	; 0xa0
   216bc:	e1a07002 	mov	r7, r2
   216c0:	11a06000 	movne	r6, r0
   216c4:	028d6004 	addeq	r6, sp, #4
   216c8:	e3550000 	cmp	r5, #0
   216cc:	e28d0010 	add	r0, sp, #16
   216d0:	e3a02090 	mov	r2, #144	; 0x90
   216d4:	e3a01000 	mov	r1, #0
   216d8:	e1a08003 	mov	r8, r3
   216dc:	e58d6008 	str	r6, [sp, #8]
   216e0:	12453001 	subne	r3, r5, #1
   216e4:	01a03005 	moveq	r3, r5
   216e8:	e58d300c 	str	r3, [sp, #12]
   216ec:	eb000181 	bl	21cf8 <memset>
   216f0:	e59f3058 	ldr	r3, [pc, #88]	; 21750 <vsnprintf+0xa0>
   216f4:	e3550000 	cmp	r5, #0
   216f8:	e3e04000 	mvn	r4, #0
   216fc:	e58dd03c 	str	sp, [sp, #60]	; 0x3c
   21700:	e5cd405b 	strb	r4, [sp, #91]	; 0x5b
   21704:	e58d3034 	str	r3, [sp, #52]	; 0x34
   21708:	e28d3008 	add	r3, sp, #8
   2170c:	e58d405c 	str	r4, [sp, #92]	; 0x5c
   21710:	e58d3064 	str	r3, [sp, #100]	; 0x64
   21714:	aa000006 	bge	21734 <vsnprintf+0x84>
   21718:	e59f3034 	ldr	r3, [pc, #52]	; 21754 <vsnprintf+0xa4>
   2171c:	ebffc2f6 	bl	122fc <__aeabi_read_tp>
   21720:	e3a0204b 	mov	r2, #75	; 0x4b
   21724:	e7832000 	str	r2, [r3, r0]
   21728:	e1a00004 	mov	r0, r4
   2172c:	e28dd0a0 	add	sp, sp, #160	; 0xa0
   21730:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   21734:	e3a03000 	mov	r3, #0
   21738:	e28d0010 	add	r0, sp, #16
   2173c:	e1a02008 	mov	r2, r8
   21740:	e1a01007 	mov	r1, r7
   21744:	e5c63000 	strb	r3, [r6]
   21748:	ebffff5a 	bl	214b8 <vfprintf>
   2174c:	eafffff6 	b	2172c <vsnprintf+0x7c>
   21750:	000215fc 	strdeq	r1, [r2], -ip
   21754:	0000000c 	andeq	r0, r0, ip

00021758 <vsprintf>:
   21758:	e1a03002 	mov	r3, r2
   2175c:	e1a02001 	mov	r2, r1
   21760:	e3e01102 	mvn	r1, #-2147483648	; 0x80000000
   21764:	eaffffd1 	b	216b0 <vsnprintf>

00021768 <do_read>:
   21768:	ea0004de 	b	22ae8 <__string_read>

0002176c <vsscanf>:
   2176c:	e92d4070 	push	{r4, r5, r6, lr}
   21770:	e24dd090 	sub	sp, sp, #144	; 0x90
   21774:	e1a04000 	mov	r4, r0
   21778:	e1a05001 	mov	r5, r1
   2177c:	e1a06002 	mov	r6, r2
   21780:	e3a01000 	mov	r1, #0
   21784:	e3a02090 	mov	r2, #144	; 0x90
   21788:	e1a0000d 	mov	r0, sp
   2178c:	eb000159 	bl	21cf8 <memset>
   21790:	e59f3028 	ldr	r3, [pc, #40]	; 217c0 <vsscanf+0x54>
   21794:	e1a02006 	mov	r2, r6
   21798:	e1a01005 	mov	r1, r5
   2179c:	e1a0000d 	mov	r0, sp
   217a0:	e58d402c 	str	r4, [sp, #44]	; 0x2c
   217a4:	e58d3020 	str	r3, [sp, #32]
   217a8:	e3e03000 	mvn	r3, #0
   217ac:	e58d4054 	str	r4, [sp, #84]	; 0x54
   217b0:	e58d304c 	str	r3, [sp, #76]	; 0x4c
   217b4:	eb000524 	bl	22c4c <vfscanf>
   217b8:	e28dd090 	add	sp, sp, #144	; 0x90
   217bc:	e8bd8070 	pop	{r4, r5, r6, pc}
   217c0:	00021768 	andeq	r1, r2, r8, ror #14

000217c4 <memcpy>:
   217c4:	e92d4011 	push	{r0, r4, lr}
   217c8:	e24dd01c 	sub	sp, sp, #28
   217cc:	e3520004 	cmp	r2, #4
   217d0:	3a0000b0 	bcc	21a98 <copy_last_3_and_return>
   217d4:	e2613000 	rsb	r3, r1, #0
   217d8:	e2133003 	ands	r3, r3, #3
   217dc:	0a000007 	beq	21800 <src_aligned>
   217e0:	e1b0cf83 	lsls	ip, r3, #31
   217e4:	e0422003 	sub	r2, r2, r3
   217e8:	44d13001 	ldrbmi	r3, [r1], #1
   217ec:	24d14001 	ldrbcs	r4, [r1], #1
   217f0:	24d1c001 	ldrbcs	ip, [r1], #1
   217f4:	44c03001 	strbmi	r3, [r0], #1
   217f8:	24c04001 	strbcs	r4, [r0], #1
   217fc:	24c0c001 	strbcs	ip, [r0], #1

00021800 <src_aligned>:
   21800:	e020c001 	eor	ip, r0, r1
   21804:	e31c0003 	tst	ip, #3
   21808:	1a000027 	bne	218ac <non_congruent>
   2180c:	e88d0fe0 	stm	sp, {r5, r6, r7, r8, r9, sl, fp}
   21810:	e2603000 	rsb	r3, r0, #0
   21814:	e213301c 	ands	r3, r3, #28
   21818:	0a00000a 	beq	21848 <cached_aligned32>
   2181c:	e1530002 	cmp	r3, r2
   21820:	8202301c 	andhi	r3, r2, #28
   21824:	e1b0ce03 	lsls	ip, r3, #28
   21828:	28b100f0 	ldmcs	r1!, {r4, r5, r6, r7}
   2182c:	48b10300 	ldmmi	r1!, {r8, r9}
   21830:	28a000f0 	stmiacs	r0!, {r4, r5, r6, r7}
   21834:	48a00300 	stmiami	r0!, {r8, r9}
   21838:	e3130004 	tst	r3, #4
   2183c:	1491a004 	ldrne	sl, [r1], #4
   21840:	1480a004 	strne	sl, [r0], #4
   21844:	e0422003 	sub	r2, r2, r3

00021848 <cached_aligned32>:
   21848:	e2522020 	subs	r2, r2, #32
   2184c:	3a000004 	bcc	21864 <less_than_32_left>
   21850:	e8b10ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp}
   21854:	e2522020 	subs	r2, r2, #32
   21858:	e8a00ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
   2185c:	2afffffb 	bcs	21850 <cached_aligned32+0x8>
   21860:	e2822020 	add	r2, r2, #32

00021864 <less_than_32_left>:
   21864:	e312001f 	tst	r2, #31
   21868:	0a00000c 	beq	218a0 <less_than_32_left+0x3c>
   2186c:	e1b0ce02 	lsls	ip, r2, #28
   21870:	28b100f0 	ldmcs	r1!, {r4, r5, r6, r7}
   21874:	48b10300 	ldmmi	r1!, {r8, r9}
   21878:	28a000f0 	stmiacs	r0!, {r4, r5, r6, r7}
   2187c:	48a00300 	stmiami	r0!, {r8, r9}
   21880:	e1b0cf02 	lsls	ip, r2, #30
   21884:	24913004 	ldrcs	r3, [r1], #4
   21888:	40d140b2 	ldrhmi	r4, [r1], #2
   2188c:	24803004 	strcs	r3, [r0], #4
   21890:	40c040b2 	strhmi	r4, [r0], #2
   21894:	e3120001 	tst	r2, #1
   21898:	15d13000 	ldrbne	r3, [r1]
   2189c:	15c03000 	strbne	r3, [r0]
   218a0:	e8bd0fe0 	pop	{r5, r6, r7, r8, r9, sl, fp}
   218a4:	e8bd4011 	pop	{r0, r4, lr}
   218a8:	e12fff1e 	bx	lr

000218ac <non_congruent>:
   218ac:	e3520004 	cmp	r2, #4
   218b0:	3a000078 	bcc	21a98 <copy_last_3_and_return>
   218b4:	e88d0fe0 	stm	sp, {r5, r6, r7, r8, r9, sl, fp}
   218b8:	e2605000 	rsb	r5, r0, #0
   218bc:	e2055003 	and	r5, r5, #3
   218c0:	e1a0c185 	lsl	ip, r5, #3
   218c4:	e26ce020 	rsb	lr, ip, #32
   218c8:	e4913004 	ldr	r3, [r1], #4
   218cc:	e2422004 	sub	r2, r2, #4
   218d0:	e1b05f85 	lsls	r5, r5, #31
   218d4:	44c03001 	strbmi	r3, [r0], #1
   218d8:	41a03423 	lsrmi	r3, r3, #8
   218dc:	24c03001 	strbcs	r3, [r0], #1
   218e0:	21a03423 	lsrcs	r3, r3, #8
   218e4:	24c03001 	strbcs	r3, [r0], #1
   218e8:	21a03423 	lsrcs	r3, r3, #8
   218ec:	e3520004 	cmp	r2, #4
   218f0:	3a000061 	bcc	21a7c <partial_word_tail>
   218f4:	e310001c 	tst	r0, #28
   218f8:	0a000007 	beq	2191c <non_congruent+0x70>
   218fc:	e4915004 	ldr	r5, [r1], #4
   21900:	e2422004 	sub	r2, r2, #4
   21904:	e1834e15 	orr	r4, r3, r5, lsl lr
   21908:	e1a03c35 	lsr	r3, r5, ip
   2190c:	e4804004 	str	r4, [r0], #4
   21910:	e3520004 	cmp	r2, #4
   21914:	2afffff6 	bcs	218f4 <non_congruent+0x48>
   21918:	3a000057 	bcc	21a7c <partial_word_tail>
   2191c:	e2522020 	subs	r2, r2, #32
   21920:	3a00004a 	bcc	21a50 <less_than_thirtytwo>
   21924:	e35c0018 	cmp	ip, #24
   21928:	0a000031 	beq	219f4 <loop24>
   2192c:	e35c0008 	cmp	ip, #8
   21930:	0a000017 	beq	21994 <loop8>

00021934 <loop16>:
   21934:	e491c004 	ldr	ip, [r1], #4
   21938:	e1a0400c 	mov	r4, ip
   2193c:	e8b10fe0 	ldm	r1!, {r5, r6, r7, r8, r9, sl, fp}
   21940:	e2522020 	subs	r2, r2, #32
   21944:	2491c004 	ldrcs	ip, [r1], #4
   21948:	e1833804 	orr	r3, r3, r4, lsl #16
   2194c:	e1a04824 	lsr	r4, r4, #16
   21950:	e1844805 	orr	r4, r4, r5, lsl #16
   21954:	e1a05825 	lsr	r5, r5, #16
   21958:	e1855806 	orr	r5, r5, r6, lsl #16
   2195c:	e1a06826 	lsr	r6, r6, #16
   21960:	e1866807 	orr	r6, r6, r7, lsl #16
   21964:	e1a07827 	lsr	r7, r7, #16
   21968:	e1877808 	orr	r7, r7, r8, lsl #16
   2196c:	e1a08828 	lsr	r8, r8, #16
   21970:	e1888809 	orr	r8, r8, r9, lsl #16
   21974:	e1a09829 	lsr	r9, r9, #16
   21978:	e189980a 	orr	r9, r9, sl, lsl #16
   2197c:	e1a0a82a 	lsr	sl, sl, #16
   21980:	e18aa80b 	orr	sl, sl, fp, lsl #16
   21984:	e8a007f8 	stmia	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}
   21988:	e1a0382b 	lsr	r3, fp, #16
   2198c:	2affffe9 	bcs	21938 <loop16+0x4>
   21990:	ea00002e 	b	21a50 <less_than_thirtytwo>

00021994 <loop8>:
   21994:	e491c004 	ldr	ip, [r1], #4
   21998:	e1a0400c 	mov	r4, ip
   2199c:	e8b10fe0 	ldm	r1!, {r5, r6, r7, r8, r9, sl, fp}
   219a0:	e2522020 	subs	r2, r2, #32
   219a4:	2491c004 	ldrcs	ip, [r1], #4
   219a8:	e1833c04 	orr	r3, r3, r4, lsl #24
   219ac:	e1a04424 	lsr	r4, r4, #8
   219b0:	e1844c05 	orr	r4, r4, r5, lsl #24
   219b4:	e1a05425 	lsr	r5, r5, #8
   219b8:	e1855c06 	orr	r5, r5, r6, lsl #24
   219bc:	e1a06426 	lsr	r6, r6, #8
   219c0:	e1866c07 	orr	r6, r6, r7, lsl #24
   219c4:	e1a07427 	lsr	r7, r7, #8
   219c8:	e1877c08 	orr	r7, r7, r8, lsl #24
   219cc:	e1a08428 	lsr	r8, r8, #8
   219d0:	e1888c09 	orr	r8, r8, r9, lsl #24
   219d4:	e1a09429 	lsr	r9, r9, #8
   219d8:	e1899c0a 	orr	r9, r9, sl, lsl #24
   219dc:	e1a0a42a 	lsr	sl, sl, #8
   219e0:	e18aac0b 	orr	sl, sl, fp, lsl #24
   219e4:	e8a007f8 	stmia	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}
   219e8:	e1a0342b 	lsr	r3, fp, #8
   219ec:	2affffe9 	bcs	21998 <loop8+0x4>
   219f0:	ea000016 	b	21a50 <less_than_thirtytwo>

000219f4 <loop24>:
   219f4:	e491c004 	ldr	ip, [r1], #4
   219f8:	e1a0400c 	mov	r4, ip
   219fc:	e8b10fe0 	ldm	r1!, {r5, r6, r7, r8, r9, sl, fp}
   21a00:	e2522020 	subs	r2, r2, #32
   21a04:	2491c004 	ldrcs	ip, [r1], #4
   21a08:	e1833404 	orr	r3, r3, r4, lsl #8
   21a0c:	e1a04c24 	lsr	r4, r4, #24
   21a10:	e1844405 	orr	r4, r4, r5, lsl #8
   21a14:	e1a05c25 	lsr	r5, r5, #24
   21a18:	e1855406 	orr	r5, r5, r6, lsl #8
   21a1c:	e1a06c26 	lsr	r6, r6, #24
   21a20:	e1866407 	orr	r6, r6, r7, lsl #8
   21a24:	e1a07c27 	lsr	r7, r7, #24
   21a28:	e1877408 	orr	r7, r7, r8, lsl #8
   21a2c:	e1a08c28 	lsr	r8, r8, #24
   21a30:	e1888409 	orr	r8, r8, r9, lsl #8
   21a34:	e1a09c29 	lsr	r9, r9, #24
   21a38:	e189940a 	orr	r9, r9, sl, lsl #8
   21a3c:	e1a0ac2a 	lsr	sl, sl, #24
   21a40:	e18aa40b 	orr	sl, sl, fp, lsl #8
   21a44:	e8a007f8 	stmia	r0!, {r3, r4, r5, r6, r7, r8, r9, sl}
   21a48:	e1a03c2b 	lsr	r3, fp, #24
   21a4c:	2affffe9 	bcs	219f8 <loop24+0x4>

00021a50 <less_than_thirtytwo>:
   21a50:	e26ec020 	rsb	ip, lr, #32
   21a54:	e2822020 	add	r2, r2, #32
   21a58:	e3520004 	cmp	r2, #4
   21a5c:	3a000006 	bcc	21a7c <partial_word_tail>
   21a60:	e4915004 	ldr	r5, [r1], #4
   21a64:	e2422004 	sub	r2, r2, #4
   21a68:	e1834e15 	orr	r4, r3, r5, lsl lr
   21a6c:	e1a03c35 	lsr	r3, r5, ip
   21a70:	e4804004 	str	r4, [r0], #4
   21a74:	e3520004 	cmp	r2, #4
   21a78:	2afffff8 	bcs	21a60 <less_than_thirtytwo+0x10>

00021a7c <partial_word_tail>:
   21a7c:	e1b05e0e 	lsls	r5, lr, #28
   21a80:	44c03001 	strbmi	r3, [r0], #1
   21a84:	41a03423 	lsrmi	r3, r3, #8
   21a88:	24c03001 	strbcs	r3, [r0], #1
   21a8c:	21a03423 	lsrcs	r3, r3, #8
   21a90:	24c03001 	strbcs	r3, [r0], #1
   21a94:	e89d0fe0 	ldm	sp, {r5, r6, r7, r8, r9, sl, fp}

00021a98 <copy_last_3_and_return>:
   21a98:	e1b02f82 	lsls	r2, r2, #31
   21a9c:	44d12001 	ldrbmi	r2, [r1], #1
   21aa0:	24d13001 	ldrbcs	r3, [r1], #1
   21aa4:	25d1c000 	ldrbcs	ip, [r1]
   21aa8:	44c02001 	strbmi	r2, [r0], #1
   21aac:	24c03001 	strbcs	r3, [r0], #1
   21ab0:	25c0c000 	strbcs	ip, [r0]
   21ab4:	e28dd01c 	add	sp, sp, #28
   21ab8:	e8bd4011 	pop	{r0, r4, lr}
   21abc:	e12fff1e 	bx	lr

00021ac0 <memchr>:
   21ac0:	e6ef1071 	uxtb	r1, r1
   21ac4:	e92d4070 	push	{r4, r5, r6, lr}
   21ac8:	e1a05000 	mov	r5, r0
   21acc:	e3150003 	tst	r5, #3
   21ad0:	e1a00005 	mov	r0, r5
   21ad4:	0a000007 	beq	21af8 <memchr+0x38>
   21ad8:	e3520000 	cmp	r2, #0
   21adc:	0a000023 	beq	21b70 <memchr+0xb0>
   21ae0:	e5d03000 	ldrb	r3, [r0]
   21ae4:	e2855001 	add	r5, r5, #1
   21ae8:	e1530001 	cmp	r3, r1
   21aec:	08bd8070 	popeq	{r4, r5, r6, pc}
   21af0:	e2422001 	sub	r2, r2, #1
   21af4:	eafffff4 	b	21acc <memchr+0xc>
   21af8:	e3520000 	cmp	r2, #0
   21afc:	0a00001b 	beq	21b70 <memchr+0xb0>
   21b00:	e5d53000 	ldrb	r3, [r5]
   21b04:	e1530001 	cmp	r3, r1
   21b08:	08bd8070 	popeq	{r4, r5, r6, pc}
   21b0c:	e0813401 	add	r3, r1, r1, lsl #8
   21b10:	e59f6060 	ldr	r6, [pc, #96]	; 21b78 <memchr+0xb8>
   21b14:	e59f0060 	ldr	r0, [pc, #96]	; 21b7c <memchr+0xbc>
   21b18:	e083c803 	add	ip, r3, r3, lsl #16
   21b1c:	e3520003 	cmp	r2, #3
   21b20:	9a000006 	bls	21b40 <memchr+0x80>
   21b24:	e1a04005 	mov	r4, r5
   21b28:	e4943004 	ldr	r3, [r4], #4
   21b2c:	e023300c 	eor	r3, r3, ip
   21b30:	e083e006 	add	lr, r3, r6
   21b34:	e1ce3003 	bic	r3, lr, r3
   21b38:	e1130000 	tst	r3, r0
   21b3c:	0a000008 	beq	21b64 <memchr+0xa4>
   21b40:	e0822005 	add	r2, r2, r5
   21b44:	e1550002 	cmp	r5, r2
   21b48:	e1a00005 	mov	r0, r5
   21b4c:	0a000007 	beq	21b70 <memchr+0xb0>
   21b50:	e5d03000 	ldrb	r3, [r0]
   21b54:	e2855001 	add	r5, r5, #1
   21b58:	e1530001 	cmp	r3, r1
   21b5c:	1afffff8 	bne	21b44 <memchr+0x84>
   21b60:	e8bd8070 	pop	{r4, r5, r6, pc}
   21b64:	e2422004 	sub	r2, r2, #4
   21b68:	e1a05004 	mov	r5, r4
   21b6c:	eaffffea 	b	21b1c <memchr+0x5c>
   21b70:	e3a00000 	mov	r0, #0
   21b74:	e8bd8070 	pop	{r4, r5, r6, pc}
   21b78:	fefefeff 	mrc2	14, 7, pc, cr14, cr15, {7}
   21b7c:	80808080 	addhi	r8, r0, r0, lsl #1

00021b80 <memcmp>:
   21b80:	e3a0c000 	mov	ip, #0
   21b84:	e152000c 	cmp	r2, ip
   21b88:	e2411001 	sub	r1, r1, #1
   21b8c:	1a00000c 	bne	21bc4 <memcmp+0x44>
   21b90:	e3a00000 	mov	r0, #0
   21b94:	e12fff1e 	bx	lr
   21b98:	e152000c 	cmp	r2, ip
   21b9c:	0a000006 	beq	21bbc <memcmp+0x3c>
   21ba0:	e7d0300c 	ldrb	r3, [r0, ip]
   21ba4:	e28cc001 	add	ip, ip, #1
   21ba8:	e7d1e00c 	ldrb	lr, [r1, ip]
   21bac:	e153000e 	cmp	r3, lr
   21bb0:	0afffff8 	beq	21b98 <memcmp+0x18>
   21bb4:	e043000e 	sub	r0, r3, lr
   21bb8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   21bbc:	e3a00000 	mov	r0, #0
   21bc0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   21bc4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   21bc8:	eafffff4 	b	21ba0 <memcmp+0x20>

00021bcc <memmove>:
   21bcc:	e1500001 	cmp	r0, r1
   21bd0:	0a000046 	beq	21cf0 <memmove+0x124>
   21bd4:	e0813002 	add	r3, r1, r2
   21bd8:	e1500003 	cmp	r0, r3
   21bdc:	2a000002 	bcs	21bec <memmove+0x20>
   21be0:	e0803002 	add	r3, r0, r2
   21be4:	e1530001 	cmp	r3, r1
   21be8:	8a000000 	bhi	21bf0 <memmove+0x24>
   21bec:	eafffef4 	b	217c4 <memcpy>
   21bf0:	e1500001 	cmp	r0, r1
   21bf4:	e021c000 	eor	ip, r1, r0
   21bf8:	e92d4070 	push	{r4, r5, r6, lr}
   21bfc:	e20cc003 	and	ip, ip, #3
   21c00:	e1a0e000 	mov	lr, r0
   21c04:	2a00001e 	bcs	21c84 <memmove+0xb8>
   21c08:	e35c0000 	cmp	ip, #0
   21c0c:	11a03000 	movne	r3, r0
   21c10:	1a00000b 	bne	21c44 <memmove+0x78>
   21c14:	e31e0003 	tst	lr, #3
   21c18:	e1a0300e 	mov	r3, lr
   21c1c:	1a00000f 	bne	21c60 <memmove+0x94>
   21c20:	e3c2c003 	bic	ip, r2, #3
   21c24:	e241e004 	sub	lr, r1, #4
   21c28:	e1a04122 	lsr	r4, r2, #2
   21c2c:	e083500c 	add	r5, r3, ip
   21c30:	e1530005 	cmp	r3, r5
   21c34:	1a00000f 	bne	21c78 <memmove+0xac>
   21c38:	e3e0e003 	mvn	lr, #3
   21c3c:	e081100c 	add	r1, r1, ip
   21c40:	e022249e 	mla	r2, lr, r4, r2
   21c44:	e2433001 	sub	r3, r3, #1
   21c48:	e0812002 	add	r2, r1, r2
   21c4c:	e1510002 	cmp	r1, r2
   21c50:	08bd8070 	popeq	{r4, r5, r6, pc}
   21c54:	e4d1c001 	ldrb	ip, [r1], #1
   21c58:	e5e3c001 	strb	ip, [r3, #1]!
   21c5c:	eafffffa 	b	21c4c <memmove+0x80>
   21c60:	e3520000 	cmp	r2, #0
   21c64:	08bd8070 	popeq	{r4, r5, r6, pc}
   21c68:	e4d13001 	ldrb	r3, [r1], #1
   21c6c:	e2422001 	sub	r2, r2, #1
   21c70:	e4ce3001 	strb	r3, [lr], #1
   21c74:	eaffffe6 	b	21c14 <memmove+0x48>
   21c78:	e5be6004 	ldr	r6, [lr, #4]!
   21c7c:	e4836004 	str	r6, [r3], #4
   21c80:	eaffffea 	b	21c30 <memmove+0x64>
   21c84:	e35c0000 	cmp	ip, #0
   21c88:	1a000007 	bne	21cac <memmove+0xe0>
   21c8c:	e3130003 	tst	r3, #3
   21c90:	1a00000c 	bne	21cc8 <memmove+0xfc>
   21c94:	e1a03002 	mov	r3, r2
   21c98:	e3530003 	cmp	r3, #3
   21c9c:	8a00000f 	bhi	21ce0 <memmove+0x114>
   21ca0:	e1a03122 	lsr	r3, r2, #2
   21ca4:	e3e0c003 	mvn	ip, #3
   21ca8:	e022239c 	mla	r2, ip, r3, r2
   21cac:	e0813002 	add	r3, r1, r2
   21cb0:	e0802002 	add	r2, r0, r2
   21cb4:	e1510003 	cmp	r1, r3
   21cb8:	08bd8070 	popeq	{r4, r5, r6, pc}
   21cbc:	e573c001 	ldrb	ip, [r3, #-1]!
   21cc0:	e562c001 	strb	ip, [r2, #-1]!
   21cc4:	eafffffa 	b	21cb4 <memmove+0xe8>
   21cc8:	e1500003 	cmp	r0, r3
   21ccc:	e2422001 	sub	r2, r2, #1
   21cd0:	08bd8070 	popeq	{r4, r5, r6, pc}
   21cd4:	e7d1c002 	ldrb	ip, [r1, r2]
   21cd8:	e563c001 	strb	ip, [r3, #-1]!
   21cdc:	eaffffea 	b	21c8c <memmove+0xc0>
   21ce0:	e2433004 	sub	r3, r3, #4
   21ce4:	e791c003 	ldr	ip, [r1, r3]
   21ce8:	e780c003 	str	ip, [r0, r3]
   21cec:	eaffffe9 	b	21c98 <memmove+0xcc>
   21cf0:	e1a00001 	mov	r0, r1
   21cf4:	e12fff1e 	bx	lr

00021cf8 <memset>:
   21cf8:	e3520000 	cmp	r2, #0
   21cfc:	012fff1e 	bxeq	lr
   21d00:	e0803002 	add	r3, r0, r2
   21d04:	e3520002 	cmp	r2, #2
   21d08:	e6ef1071 	uxtb	r1, r1
   21d0c:	e5431001 	strb	r1, [r3, #-1]
   21d10:	e5c01000 	strb	r1, [r0]
   21d14:	912fff1e 	bxls	lr
   21d18:	e3520006 	cmp	r2, #6
   21d1c:	e5431002 	strb	r1, [r3, #-2]
   21d20:	e5c01001 	strb	r1, [r0, #1]
   21d24:	e5431003 	strb	r1, [r3, #-3]
   21d28:	e5c01002 	strb	r1, [r0, #2]
   21d2c:	912fff1e 	bxls	lr
   21d30:	e3520008 	cmp	r2, #8
   21d34:	e5431004 	strb	r1, [r3, #-4]
   21d38:	e5c01003 	strb	r1, [r0, #3]
   21d3c:	912fff1e 	bxls	lr
   21d40:	e260c000 	rsb	ip, r0, #0
   21d44:	e0811401 	add	r1, r1, r1, lsl #8
   21d48:	e20cc003 	and	ip, ip, #3
   21d4c:	e042200c 	sub	r2, r2, ip
   21d50:	e080300c 	add	r3, r0, ip
   21d54:	e3c22003 	bic	r2, r2, #3
   21d58:	e0811801 	add	r1, r1, r1, lsl #16
   21d5c:	e3520008 	cmp	r2, #8
   21d60:	e780100c 	str	r1, [r0, ip]
   21d64:	e083c002 	add	ip, r3, r2
   21d68:	e50c1004 	str	r1, [ip, #-4]
   21d6c:	912fff1e 	bxls	lr
   21d70:	e3520018 	cmp	r2, #24
   21d74:	e5831004 	str	r1, [r3, #4]
   21d78:	e5831008 	str	r1, [r3, #8]
   21d7c:	e50c100c 	str	r1, [ip, #-12]
   21d80:	e50c1008 	str	r1, [ip, #-8]
   21d84:	912fff1e 	bxls	lr
   21d88:	e583100c 	str	r1, [r3, #12]
   21d8c:	e5831010 	str	r1, [r3, #16]
   21d90:	e5831014 	str	r1, [r3, #20]
   21d94:	e5831018 	str	r1, [r3, #24]
   21d98:	e50c101c 	str	r1, [ip, #-28]	; 0xffffffe4
   21d9c:	e50c1018 	str	r1, [ip, #-24]	; 0xffffffe8
   21da0:	e50c1014 	str	r1, [ip, #-20]	; 0xffffffec
   21da4:	e50c1010 	str	r1, [ip, #-16]
   21da8:	e203c004 	and	ip, r3, #4
   21dac:	e28cc018 	add	ip, ip, #24
   21db0:	e042200c 	sub	r2, r2, ip
   21db4:	e083300c 	add	r3, r3, ip
   21db8:	e352001f 	cmp	r2, #31
   21dbc:	e2833020 	add	r3, r3, #32
   21dc0:	912fff1e 	bxls	lr
   21dc4:	e2422020 	sub	r2, r2, #32
   21dc8:	e5031020 	str	r1, [r3, #-32]	; 0xffffffe0
   21dcc:	e503101c 	str	r1, [r3, #-28]	; 0xffffffe4
   21dd0:	e5031018 	str	r1, [r3, #-24]	; 0xffffffe8
   21dd4:	e5031014 	str	r1, [r3, #-20]	; 0xffffffec
   21dd8:	e5031010 	str	r1, [r3, #-16]
   21ddc:	e503100c 	str	r1, [r3, #-12]
   21de0:	e5031008 	str	r1, [r3, #-8]
   21de4:	e5031004 	str	r1, [r3, #-4]
   21de8:	eafffff2 	b	21db8 <memset+0xc0>

00021dec <strchr>:
   21dec:	e92d4010 	push	{r4, lr}
   21df0:	e1a04001 	mov	r4, r1
   21df4:	eb000004 	bl	21e0c <__strchrnul>
   21df8:	e6ef4074 	uxtb	r4, r4
   21dfc:	e5d03000 	ldrb	r3, [r0]
   21e00:	e1530004 	cmp	r3, r4
   21e04:	13a00000 	movne	r0, #0
   21e08:	e8bd8010 	pop	{r4, pc}

00021e0c <__strchrnul>:
   21e0c:	e21110ff 	ands	r1, r1, #255	; 0xff
   21e10:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   21e14:	e1a04000 	mov	r4, r0
   21e18:	1a000007 	bne	21e3c <__strchrnul+0x30>
   21e1c:	eb000026 	bl	21ebc <strlen>
   21e20:	e0840000 	add	r0, r4, r0
   21e24:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   21e28:	e4d43001 	ldrb	r3, [r4], #1
   21e2c:	e3530000 	cmp	r3, #0
   21e30:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   21e34:	e1530001 	cmp	r3, r1
   21e38:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   21e3c:	e3140003 	tst	r4, #3
   21e40:	e1a00004 	mov	r0, r4
   21e44:	1afffff7 	bne	21e28 <__strchrnul+0x1c>
   21e48:	e0813401 	add	r3, r1, r1, lsl #8
   21e4c:	e59f604c 	ldr	r6, [pc, #76]	; 21ea0 <__strchrnul+0x94>
   21e50:	e59f704c 	ldr	r7, [pc, #76]	; 21ea4 <__strchrnul+0x98>
   21e54:	e0832803 	add	r2, r3, r3, lsl #16
   21e58:	e594e000 	ldr	lr, [r4]
   21e5c:	e1a0c004 	mov	ip, r4
   21e60:	e2844004 	add	r4, r4, #4
   21e64:	e02e5002 	eor	r5, lr, r2
   21e68:	e08e3006 	add	r3, lr, r6
   21e6c:	e0850006 	add	r0, r5, r6
   21e70:	e1c3300e 	bic	r3, r3, lr
   21e74:	e1c00005 	bic	r0, r0, r5
   21e78:	e1833000 	orr	r3, r3, r0
   21e7c:	e1130007 	tst	r3, r7
   21e80:	0afffff4 	beq	21e58 <__strchrnul+0x4c>
   21e84:	e1a0000c 	mov	r0, ip
   21e88:	e4dc3001 	ldrb	r3, [ip], #1
   21e8c:	e3530000 	cmp	r3, #0
   21e90:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}
   21e94:	e1530001 	cmp	r3, r1
   21e98:	1afffff9 	bne	21e84 <__strchrnul+0x78>
   21e9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   21ea0:	fefefeff 	mrc2	14, 7, pc, cr14, cr15, {7}
   21ea4:	80808080 	addhi	r8, r0, r0, lsl #1

00021ea8 <strcpy>:
   21ea8:	e92d4010 	push	{r4, lr}
   21eac:	e1a04000 	mov	r4, r0
   21eb0:	eb000634 	bl	23788 <__stpcpy>
   21eb4:	e1a00004 	mov	r0, r4
   21eb8:	e8bd8010 	pop	{r4, pc}

00021ebc <strlen>:
   21ebc:	e1a03000 	mov	r3, r0
   21ec0:	e3130003 	tst	r3, #3
   21ec4:	e1a02003 	mov	r2, r3
   21ec8:	1a000010 	bne	21f10 <strlen+0x54>
   21ecc:	e92d4010 	push	{r4, lr}
   21ed0:	e59f4050 	ldr	r4, [pc, #80]	; 21f28 <strlen+0x6c>
   21ed4:	e59fe050 	ldr	lr, [pc, #80]	; 21f2c <strlen+0x70>
   21ed8:	e593c000 	ldr	ip, [r3]
   21edc:	e1a02003 	mov	r2, r3
   21ee0:	e2833004 	add	r3, r3, #4
   21ee4:	e08c1004 	add	r1, ip, r4
   21ee8:	e1c1100c 	bic	r1, r1, ip
   21eec:	e111000e 	tst	r1, lr
   21ef0:	0afffff8 	beq	21ed8 <strlen+0x1c>
   21ef4:	e1a03002 	mov	r3, r2
   21ef8:	e2822001 	add	r2, r2, #1
   21efc:	e5d31000 	ldrb	r1, [r3]
   21f00:	e3510000 	cmp	r1, #0
   21f04:	1afffffa 	bne	21ef4 <strlen+0x38>
   21f08:	e0430000 	sub	r0, r3, r0
   21f0c:	e8bd8010 	pop	{r4, pc}
   21f10:	e5d21000 	ldrb	r1, [r2]
   21f14:	e2833001 	add	r3, r3, #1
   21f18:	e3510000 	cmp	r1, #0
   21f1c:	1affffe7 	bne	21ec0 <strlen+0x4>
   21f20:	e0420000 	sub	r0, r2, r0
   21f24:	e12fff1e 	bx	lr
   21f28:	fefefeff 	mrc2	14, 7, pc, cr14, cr15, {7}
   21f2c:	80808080 	addhi	r8, r0, r0, lsl #1

00021f30 <strncmp>:
   21f30:	e2523000 	subs	r3, r2, #0
   21f34:	0a000012 	beq	21f84 <strncmp+0x54>
   21f38:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   21f3c:	e2411001 	sub	r1, r1, #1
   21f40:	e080e003 	add	lr, r0, r3
   21f44:	e4d03001 	ldrb	r3, [r0], #1
   21f48:	e5f12001 	ldrb	r2, [r1, #1]!
   21f4c:	e3530000 	cmp	r3, #0
   21f50:	0a000009 	beq	21f7c <strncmp+0x4c>
   21f54:	e043c002 	sub	ip, r3, r2
   21f58:	e3520000 	cmp	r2, #0
   21f5c:	e16fcf1c 	clz	ip, ip
   21f60:	e1a0c2ac 	lsr	ip, ip, #5
   21f64:	03a0c000 	moveq	ip, #0
   21f68:	e15e0000 	cmp	lr, r0
   21f6c:	03a0c000 	moveq	ip, #0
   21f70:	120cc001 	andne	ip, ip, #1
   21f74:	e35c0000 	cmp	ip, #0
   21f78:	1afffff1 	bne	21f44 <strncmp+0x14>
   21f7c:	e0430002 	sub	r0, r3, r2
   21f80:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   21f84:	e1a00003 	mov	r0, r3
   21f88:	e12fff1e 	bx	lr

00021f8c <strnlen>:
   21f8c:	e92d4070 	push	{r4, r5, r6, lr}
   21f90:	e1a02001 	mov	r2, r1
   21f94:	e1a04001 	mov	r4, r1
   21f98:	e3a01000 	mov	r1, #0
   21f9c:	e1a05000 	mov	r5, r0
   21fa0:	ebfffec6 	bl	21ac0 <memchr>
   21fa4:	e3500000 	cmp	r0, #0
   21fa8:	10404005 	subne	r4, r0, r5
   21fac:	e1a00004 	mov	r0, r4
   21fb0:	e8bd8070 	pop	{r4, r5, r6, pc}

00021fb4 <strrchr>:
   21fb4:	e92d4070 	push	{r4, r5, r6, lr}
   21fb8:	e1a04000 	mov	r4, r0
   21fbc:	e1a05001 	mov	r5, r1
   21fc0:	ebffffbd 	bl	21ebc <strlen>
   21fc4:	e1a01005 	mov	r1, r5
   21fc8:	e2802001 	add	r2, r0, #1
   21fcc:	e1a00004 	mov	r0, r4
   21fd0:	e8bd4070 	pop	{r4, r5, r6, lr}
   21fd4:	ea0005de 	b	23754 <__memrchr>

00021fd8 <__lock>:
   21fd8:	e59f3050 	ldr	r3, [pc, #80]	; 22030 <__lock+0x58>
   21fdc:	e593300c 	ldr	r3, [r3, #12]
   21fe0:	e3530000 	cmp	r3, #0
   21fe4:	012fff1e 	bxeq	lr
   21fe8:	e92d4070 	push	{r4, r5, r6, lr}
   21fec:	e2806004 	add	r6, r0, #4
   21ff0:	e1a04000 	mov	r4, r0
   21ff4:	e3a05001 	mov	r5, #1
   21ff8:	f57ff05b 	dmb	ish
   21ffc:	e1943f9f 	ldrex	r3, [r4]
   22000:	e1842f95 	strex	r2, r5, [r4]
   22004:	e3520000 	cmp	r2, #0
   22008:	1afffffb 	bne	21ffc <__lock+0x24>
   2200c:	f57ff05b 	dmb	ish
   22010:	e3530000 	cmp	r3, #0
   22014:	08bd8070 	popeq	{r4, r5, r6, pc}
   22018:	e3a03001 	mov	r3, #1
   2201c:	e1a01006 	mov	r1, r6
   22020:	e1a02003 	mov	r2, r3
   22024:	e1a00004 	mov	r0, r4
   22028:	eb000021 	bl	220b4 <__wait>
   2202c:	eafffff1 	b	21ff8 <__lock+0x20>
   22030:	00149004 	andseq	r9, r4, r4

00022034 <__unlock>:
   22034:	e5903000 	ldr	r3, [r0]
   22038:	e3530000 	cmp	r3, #0
   2203c:	012fff1e 	bxeq	lr
   22040:	e92d4070 	push	{r4, r5, r6, lr}
   22044:	e1a04000 	mov	r4, r0
   22048:	f57ff05b 	dmb	ish
   2204c:	e3a03000 	mov	r3, #0
   22050:	e5803000 	str	r3, [r0]
   22054:	f57ff05b 	dmb	ish
   22058:	e5903004 	ldr	r3, [r0, #4]
   2205c:	e3530000 	cmp	r3, #0
   22060:	08bd8070 	popeq	{r4, r5, r6, pc}
   22064:	e59f503c 	ldr	r5, [pc, #60]	; 220a8 <__unlock+0x74>
   22068:	e1a01000 	mov	r1, r0
   2206c:	e3a03001 	mov	r3, #1
   22070:	e3a02081 	mov	r2, #129	; 0x81
   22074:	e3a000f0 	mov	r0, #240	; 0xf0
   22078:	e5956000 	ldr	r6, [r5]
   2207c:	e12fff36 	blx	r6
   22080:	e3700026 	cmn	r0, #38	; 0x26
   22084:	18bd8070 	popne	{r4, r5, r6, pc}
   22088:	e595e000 	ldr	lr, [r5]
   2208c:	e3a03001 	mov	r3, #1
   22090:	e1a01004 	mov	r1, r4
   22094:	e1a02003 	mov	r2, r3
   22098:	e3a000f0 	mov	r0, #240	; 0xf0
   2209c:	e1a0c00e 	mov	ip, lr
   220a0:	e8bd4070 	pop	{r4, r5, r6, lr}
   220a4:	e12fff1c 	bx	ip
   220a8:	00149044 	andseq	r9, r4, r4, asr #32

000220ac <__syscall_cp_c>:
   220ac:	ea000149 	b	225d8 <__syscall>

000220b0 <__syscall_cp>:
   220b0:	eafffffd 	b	220ac <__syscall_cp_c>

000220b4 <__wait>:
   220b4:	e92d47f3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   220b8:	e2537000 	subs	r7, r3, #0
   220bc:	e1a06000 	mov	r6, r0
   220c0:	e1a04001 	mov	r4, r1
   220c4:	e1a05002 	mov	r5, r2
   220c8:	13a07080 	movne	r7, #128	; 0x80
   220cc:	e3a03065 	mov	r3, #101	; 0x65
   220d0:	e2533001 	subs	r3, r3, #1
   220d4:	0a000011 	beq	22120 <__wait+0x6c>
   220d8:	e3540000 	cmp	r4, #0
   220dc:	0a00000a 	beq	2210c <__wait+0x58>
   220e0:	e5942000 	ldr	r2, [r4]
   220e4:	e3520000 	cmp	r2, #0
   220e8:	0a000007 	beq	2210c <__wait+0x58>
   220ec:	f57ff05b 	dmb	ish
   220f0:	e1943f9f 	ldrex	r3, [r4]
   220f4:	e2833001 	add	r3, r3, #1
   220f8:	e1842f93 	strex	r2, r3, [r4]
   220fc:	e3520000 	cmp	r2, #0
   22100:	1afffffa 	bne	220f0 <__wait+0x3c>
   22104:	f57ff05b 	dmb	ish
   22108:	ea000006 	b	22128 <__wait+0x74>
   2210c:	e5962000 	ldr	r2, [r6]
   22110:	e1520005 	cmp	r2, r5
   22114:	1a000011 	bne	22160 <__wait+0xac>
   22118:	f57ff05b 	dmb	ish
   2211c:	eaffffeb 	b	220d0 <__wait+0x1c>
   22120:	e3540000 	cmp	r4, #0
   22124:	1afffff0 	bne	220ec <__wait+0x38>
   22128:	e59f807c 	ldr	r8, [pc, #124]	; 221ac <__wait+0xf8>
   2212c:	e3a09000 	mov	r9, #0
   22130:	e5963000 	ldr	r3, [r6]
   22134:	e1530005 	cmp	r3, r5
   22138:	0a00000a 	beq	22168 <__wait+0xb4>
   2213c:	e3540000 	cmp	r4, #0
   22140:	0a000006 	beq	22160 <__wait+0xac>
   22144:	f57ff05b 	dmb	ish
   22148:	e1943f9f 	ldrex	r3, [r4]
   2214c:	e2433001 	sub	r3, r3, #1
   22150:	e1842f93 	strex	r2, r3, [r4]
   22154:	e3520000 	cmp	r2, #0
   22158:	1afffffa 	bne	22148 <__wait+0x94>
   2215c:	f57ff05b 	dmb	ish
   22160:	e28dd008 	add	sp, sp, #8
   22164:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22168:	e598a000 	ldr	sl, [r8]
   2216c:	e1a03005 	mov	r3, r5
   22170:	e1a02007 	mov	r2, r7
   22174:	e1a01006 	mov	r1, r6
   22178:	e3a000f0 	mov	r0, #240	; 0xf0
   2217c:	e58d9000 	str	r9, [sp]
   22180:	e12fff3a 	blx	sl
   22184:	e3700026 	cmn	r0, #38	; 0x26
   22188:	1affffe8 	bne	22130 <__wait+0x7c>
   2218c:	e598a000 	ldr	sl, [r8]
   22190:	e1a03005 	mov	r3, r5
   22194:	e3a02000 	mov	r2, #0
   22198:	e1a01006 	mov	r1, r6
   2219c:	e58d9000 	str	r9, [sp]
   221a0:	e3a000f0 	mov	r0, #240	; 0xf0
   221a4:	e12fff3a 	blx	sl
   221a8:	eaffffe0 	b	22130 <__wait+0x7c>
   221ac:	00149044 	andseq	r9, r4, r4, asr #32

000221b0 <__aio_close>:
   221b0:	e12fff1e 	bx	lr

000221b4 <close>:
   221b4:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
   221b8:	ebfffffc 	bl	221b0 <__aio_close>
   221bc:	e3a03000 	mov	r3, #0
   221c0:	e1a02003 	mov	r2, r3
   221c4:	e58d3008 	str	r3, [sp, #8]
   221c8:	e58d3004 	str	r3, [sp, #4]
   221cc:	e58d3000 	str	r3, [sp]
   221d0:	e1a01000 	mov	r1, r0
   221d4:	e3a00006 	mov	r0, #6
   221d8:	ebffffb4 	bl	220b0 <__syscall_cp>
   221dc:	e3700004 	cmn	r0, #4
   221e0:	03a00000 	moveq	r0, #0
   221e4:	e28dd014 	add	sp, sp, #20
   221e8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   221ec:	eafff120 	b	1e674 <__syscall_ret>

000221f0 <readv>:
   221f0:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
   221f4:	e3a0c000 	mov	ip, #0
   221f8:	e1a03002 	mov	r3, r2
   221fc:	e58dc008 	str	ip, [sp, #8]
   22200:	e1a02001 	mov	r2, r1
   22204:	e58dc004 	str	ip, [sp, #4]
   22208:	e1a01000 	mov	r1, r0
   2220c:	e58dc000 	str	ip, [sp]
   22210:	e3a00091 	mov	r0, #145	; 0x91
   22214:	ebffffa5 	bl	220b0 <__syscall_cp>
   22218:	e28dd014 	add	sp, sp, #20
   2221c:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   22220:	eafff113 	b	1e674 <__syscall_ret>

00022224 <writev>:
   22224:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
   22228:	e3a0c000 	mov	ip, #0
   2222c:	e1a03002 	mov	r3, r2
   22230:	e58dc008 	str	ip, [sp, #8]
   22234:	e1a02001 	mov	r2, r1
   22238:	e58dc004 	str	ip, [sp, #4]
   2223c:	e1a01000 	mov	r1, r0
   22240:	e58dc000 	str	ip, [sp]
   22244:	e3a00092 	mov	r0, #146	; 0x92
   22248:	ebffff98 	bl	220b0 <__syscall_cp>
   2224c:	e28dd014 	add	sp, sp, #20
   22250:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
   22254:	eafff106 	b	1e674 <__syscall_ret>

00022258 <__init_tp>:
   22258:	e92d4010 	push	{r4, lr}
   2225c:	e1a04000 	mov	r4, r0
   22260:	e5800000 	str	r0, [r0]
   22264:	e28000a8 	add	r0, r0, #168	; 0xa8
   22268:	eb000568 	bl	23810 <__set_thread_area>
   2226c:	e3500000 	cmp	r0, #0
   22270:	ba00000e 	blt	222b0 <__init_tp+0x58>
   22274:	059f303c 	ldreq	r3, [pc, #60]	; 222b8 <__init_tp+0x60>
   22278:	03a02001 	moveq	r2, #1
   2227c:	e284101c 	add	r1, r4, #28
   22280:	e3a00c01 	mov	r0, #256	; 0x100
   22284:	05832000 	streq	r2, [r3]
   22288:	e59f302c 	ldr	r3, [pc, #44]	; 222bc <__init_tp+0x64>
   2228c:	e5933000 	ldr	r3, [r3]
   22290:	e12fff33 	blx	r3
   22294:	e59f3024 	ldr	r3, [pc, #36]	; 222c0 <__init_tp+0x68>
   22298:	e5843078 	str	r3, [r4, #120]	; 0x78
   2229c:	e2843064 	add	r3, r4, #100	; 0x64
   222a0:	e5843064 	str	r3, [r4, #100]	; 0x64
   222a4:	e584001c 	str	r0, [r4, #28]
   222a8:	e3a00000 	mov	r0, #0
   222ac:	e8bd8010 	pop	{r4, pc}
   222b0:	e3e00000 	mvn	r0, #0
   222b4:	e8bd8010 	pop	{r4, pc}
   222b8:	00149004 	andseq	r9, r4, r4
   222bc:	00149044 	andseq	r9, r4, r4, asr #32
   222c0:	0014902c 	andseq	r9, r4, ip, lsr #32

000222c4 <libc_get_tls_size>:
   222c4:	e59f3004 	ldr	r3, [pc, #4]	; 222d0 <libc_get_tls_size+0xc>
   222c8:	e5930018 	ldr	r0, [r3, #24]
   222cc:	e12fff1e 	bx	lr
   222d0:	00149004 	andseq	r9, r4, r4

000222d4 <libc_set_threaded>:
   222d4:	f57ff05b 	dmb	ish
   222d8:	e59f300c 	ldr	r3, [pc, #12]	; 222ec <libc_set_threaded+0x18>
   222dc:	e3a02001 	mov	r2, #1
   222e0:	e5832004 	str	r2, [r3, #4]
   222e4:	f57ff05b 	dmb	ish
   222e8:	e12fff1e 	bx	lr
   222ec:	00149004 	andseq	r9, r4, r4

000222f0 <libc_get_threads_minus_1>:
   222f0:	e59f3004 	ldr	r3, [pc, #4]	; 222fc <libc_get_threads_minus_1+0xc>
   222f4:	e593000c 	ldr	r0, [r3, #12]
   222f8:	e12fff1e 	bx	lr
   222fc:	00149004 	andseq	r9, r4, r4

00022300 <libc_inc_threads_minus_1>:
   22300:	f57ff05b 	dmb	ish
   22304:	e59f2020 	ldr	r2, [pc, #32]	; 2232c <libc_inc_threads_minus_1+0x2c>
   22308:	e282300c 	add	r3, r2, #12
   2230c:	e1930f9f 	ldrex	r0, [r3]
   22310:	e2803001 	add	r3, r0, #1
   22314:	e282c00c 	add	ip, r2, #12
   22318:	e18c1f93 	strex	r1, r3, [ip]
   2231c:	e3510000 	cmp	r1, #0
   22320:	1afffff8 	bne	22308 <libc_inc_threads_minus_1+0x8>
   22324:	f57ff05b 	dmb	ish
   22328:	e12fff1e 	bx	lr
   2232c:	00149004 	andseq	r9, r4, r4

00022330 <libc_dec_threads_minus_1>:
   22330:	f57ff05b 	dmb	ish
   22334:	e59f2020 	ldr	r2, [pc, #32]	; 2235c <libc_dec_threads_minus_1+0x2c>
   22338:	e282300c 	add	r3, r2, #12
   2233c:	e1930f9f 	ldrex	r0, [r3]
   22340:	e2403001 	sub	r3, r0, #1
   22344:	e282c00c 	add	ip, r2, #12
   22348:	e18c1f93 	strex	r1, r3, [ip]
   2234c:	e3510000 	cmp	r1, #0
   22350:	1afffff8 	bne	22338 <libc_dec_threads_minus_1+0x8>
   22354:	f57ff05b 	dmb	ish
   22358:	e12fff1e 	bx	lr
   2235c:	00149004 	andseq	r9, r4, r4

00022360 <libc_tp_adj>:
   22360:	e28000a8 	add	r0, r0, #168	; 0xa8
   22364:	e12fff1e 	bx	lr

00022368 <__copy_tls>:
   22368:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2236c:	e1a06000 	mov	r6, r0
   22370:	e59f5070 	ldr	r5, [pc, #112]	; 223e8 <__copy_tls+0x80>
   22374:	e5958020 	ldr	r8, [r5, #32]
   22378:	e595401c 	ldr	r4, [r5, #28]
   2237c:	e5957014 	ldr	r7, [r5, #20]
   22380:	e1e03008 	mvn	r3, r8
   22384:	e5958018 	ldr	r8, [r5, #24]
   22388:	e2444001 	sub	r4, r4, #1
   2238c:	e0888103 	add	r8, r8, r3, lsl #2
   22390:	e3e030af 	mvn	r3, #175	; 0xaf
   22394:	e0433000 	sub	r3, r3, r0
   22398:	e0809008 	add	r9, r0, r8
   2239c:	e0044003 	and	r4, r4, r3
   223a0:	e0804004 	add	r4, r0, r4
   223a4:	e1a0a009 	mov	sl, r9
   223a8:	e3570000 	cmp	r7, #0
   223ac:	1a000005 	bne	223c8 <__copy_tls+0x60>
   223b0:	e5953020 	ldr	r3, [r5, #32]
   223b4:	e1a00004 	mov	r0, r4
   223b8:	e7863008 	str	r3, [r6, r8]
   223bc:	e58490ac 	str	r9, [r4, #172]	; 0xac
   223c0:	e5849004 	str	r9, [r4, #4]
   223c4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   223c8:	e5970014 	ldr	r0, [r7, #20]
   223cc:	e28000b0 	add	r0, r0, #176	; 0xb0
   223d0:	e0840000 	add	r0, r4, r0
   223d4:	e5aa0004 	str	r0, [sl, #4]!
   223d8:	e9970006 	ldmib	r7, {r1, r2}
   223dc:	ebfffcf8 	bl	217c4 <memcpy>
   223e0:	e5977000 	ldr	r7, [r7]
   223e4:	eaffffef 	b	223a8 <__copy_tls+0x40>
   223e8:	00149004 	andseq	r9, r4, r4

000223ec <__init_tls>:
   223ec:	e92d4030 	push	{r4, r5, lr}
   223f0:	e3a02000 	mov	r2, #0
   223f4:	e590400c 	ldr	r4, [r0, #12]
   223f8:	e24dd014 	sub	sp, sp, #20
   223fc:	e590c014 	ldr	ip, [r0, #20]
   22400:	e1a01002 	mov	r1, r2
   22404:	e59f5128 	ldr	r5, [pc, #296]	; 22534 <__init_tls+0x148>
   22408:	e1a03004 	mov	r3, r4
   2240c:	e35c0000 	cmp	ip, #0
   22410:	1a000036 	bne	224f0 <__init_tls+0x104>
   22414:	e3510000 	cmp	r1, #0
   22418:	e59f3118 	ldr	r3, [pc, #280]	; 22538 <__init_tls+0x14c>
   2241c:	e59f0118 	ldr	r0, [pc, #280]	; 2253c <__init_tls+0x150>
   22420:	0a00000b 	beq	22454 <__init_tls+0x68>
   22424:	e591c008 	ldr	ip, [r1, #8]
   22428:	e08c2002 	add	r2, ip, r2
   2242c:	e5832004 	str	r2, [r3, #4]
   22430:	e5912010 	ldr	r2, [r1, #16]
   22434:	e5832008 	str	r2, [r3, #8]
   22438:	e5912014 	ldr	r2, [r1, #20]
   2243c:	e5803014 	str	r3, [r0, #20]
   22440:	e583200c 	str	r2, [r3, #12]
   22444:	e591201c 	ldr	r2, [r1, #28]
   22448:	e5832010 	str	r2, [r3, #16]
   2244c:	e3a02001 	mov	r2, #1
   22450:	e5802020 	str	r2, [r0, #32]
   22454:	e593100c 	ldr	r1, [r3, #12]
   22458:	e5932004 	ldr	r2, [r3, #4]
   2245c:	e593c010 	ldr	ip, [r3, #16]
   22460:	e0822001 	add	r2, r2, r1
   22464:	e35c0003 	cmp	ip, #3
   22468:	e2622000 	rsb	r2, r2, #0
   2246c:	e24ce001 	sub	lr, ip, #1
   22470:	e002200e 	and	r2, r2, lr
   22474:	e0821001 	add	r1, r2, r1
   22478:	93a02004 	movls	r2, #4
   2247c:	e583100c 	str	r1, [r3, #12]
   22480:	95832010 	strls	r2, [r3, #16]
   22484:	e5933010 	ldr	r3, [r3, #16]
   22488:	e28320bb 	add	r2, r3, #187	; 0xbb
   2248c:	e0822001 	add	r2, r2, r1
   22490:	e580301c 	str	r3, [r0, #28]
   22494:	e3c22003 	bic	r2, r2, #3
   22498:	e5802018 	str	r2, [r0, #24]
   2249c:	e35200f4 	cmp	r2, #244	; 0xf4
   224a0:	959f0098 	ldrls	r0, [pc, #152]	; 22540 <__init_tls+0x154>
   224a4:	9a00000a 	bls	224d4 <__init_tls+0xe8>
   224a8:	e3e03000 	mvn	r3, #0
   224ac:	e58d3004 	str	r3, [sp, #4]
   224b0:	e3a03022 	mov	r3, #34	; 0x22
   224b4:	e58d3000 	str	r3, [sp]
   224b8:	e59f3084 	ldr	r3, [pc, #132]	; 22544 <__init_tls+0x158>
   224bc:	e3a01000 	mov	r1, #0
   224c0:	e3a000c0 	mov	r0, #192	; 0xc0
   224c4:	e58d1008 	str	r1, [sp, #8]
   224c8:	e5934000 	ldr	r4, [r3]
   224cc:	e3a03003 	mov	r3, #3
   224d0:	e12fff34 	blx	r4
   224d4:	ebffffa3 	bl	22368 <__copy_tls>
   224d8:	ebffff5e 	bl	22258 <__init_tp>
   224dc:	e3500000 	cmp	r0, #0
   224e0:	aa000000 	bge	224e8 <__init_tls+0xfc>
   224e4:	e7f000f0 	udf	#0
   224e8:	e28dd014 	add	sp, sp, #20
   224ec:	e8bd8030 	pop	{r4, r5, pc}
   224f0:	e593e000 	ldr	lr, [r3]
   224f4:	e35e0006 	cmp	lr, #6
   224f8:	05932008 	ldreq	r2, [r3, #8]
   224fc:	00442002 	subeq	r2, r4, r2
   22500:	0a000003 	beq	22514 <__init_tls+0x128>
   22504:	e35e0002 	cmp	lr, #2
   22508:	0a000005 	beq	22524 <__init_tls+0x138>
   2250c:	e35e0007 	cmp	lr, #7
   22510:	01a01003 	moveq	r1, r3
   22514:	e590e010 	ldr	lr, [r0, #16]
   22518:	e24cc001 	sub	ip, ip, #1
   2251c:	e083300e 	add	r3, r3, lr
   22520:	eaffffb9 	b	2240c <__init_tls+0x20>
   22524:	e3550000 	cmp	r5, #0
   22528:	15932008 	ldrne	r2, [r3, #8]
   2252c:	10452002 	subne	r2, r5, r2
   22530:	eafffff7 	b	22514 <__init_tls+0x128>
   22534:	00000000 	andeq	r0, r0, r0
   22538:	00048a58 	andeq	r8, r4, r8, asr sl
   2253c:	00149004 	andseq	r9, r4, r4
   22540:	00048964 	andeq	r8, r4, r4, ror #18
   22544:	00149044 	andseq	r9, r4, r4, asr #32

00022548 <__strerror_l>:
   22548:	e59fc044 	ldr	ip, [pc, #68]	; 22594 <__strerror_l+0x4c>
   2254c:	e3a03000 	mov	r3, #0
   22550:	e4dc2001 	ldrb	r2, [ip], #1
   22554:	e3520000 	cmp	r2, #0
   22558:	0a000001 	beq	22564 <__strerror_l+0x1c>
   2255c:	e1520000 	cmp	r2, r0
   22560:	1a000001 	bne	2256c <__strerror_l+0x24>
   22564:	e59f002c 	ldr	r0, [pc, #44]	; 22598 <__strerror_l+0x50>
   22568:	ea000005 	b	22584 <__strerror_l+0x3c>
   2256c:	e2833001 	add	r3, r3, #1
   22570:	eafffff6 	b	22550 <__strerror_l+0x8>
   22574:	e4d02001 	ldrb	r2, [r0], #1
   22578:	e3520000 	cmp	r2, #0
   2257c:	1afffffc 	bne	22574 <__strerror_l+0x2c>
   22580:	e2433001 	sub	r3, r3, #1
   22584:	e3530000 	cmp	r3, #0
   22588:	1afffff9 	bne	22574 <__strerror_l+0x2c>
   2258c:	e5911014 	ldr	r1, [r1, #20]
   22590:	ea00001a 	b	22600 <__lctrans>
   22594:	00029e3a 	andeq	r9, r2, sl, lsr lr
   22598:	00029e92 	muleq	r2, r2, lr

0002259c <strerror>:
   2259c:	e59f1000 	ldr	r1, [pc]	; 225a4 <strerror+0x8>
   225a0:	eaffffe8 	b	22548 <__strerror_l>
   225a4:	0002a5d4 	ldrdeq	sl, [r2], -r4

000225a8 <_Exit>:
   225a8:	e59f5024 	ldr	r5, [pc, #36]	; 225d4 <_Exit+0x2c>
   225ac:	e1a01000 	mov	r1, r0
   225b0:	e92d4010 	push	{r4, lr}
   225b4:	e1a04000 	mov	r4, r0
   225b8:	e5953000 	ldr	r3, [r5]
   225bc:	e3a000f8 	mov	r0, #248	; 0xf8
   225c0:	e12fff33 	blx	r3
   225c4:	e5953000 	ldr	r3, [r5]
   225c8:	e1a01004 	mov	r1, r4
   225cc:	e3a00001 	mov	r0, #1
   225d0:	eafffffa 	b	225c0 <_Exit+0x18>
   225d4:	00149044 	andseq	r9, r4, r4, asr #32

000225d8 <__syscall>:
   225d8:	e24dd004 	sub	sp, sp, #4
   225dc:	e92d0060 	push	{r5, r6}
   225e0:	e28f5010 	add	r5, pc, #16
   225e4:	e59f600c 	ldr	r6, [pc, #12]	; 225f8 <__syscall+0x20>
   225e8:	e7955006 	ldr	r5, [r5, r6]
   225ec:	e58d5008 	str	r5, [sp, #8]
   225f0:	e8bd0060 	pop	{r5, r6}
   225f4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   225f8:	00126a4c 	andseq	r6, r2, ip, asr #20

000225fc <__lctrans_impl>:
   225fc:	e12fff1e 	bx	lr

00022600 <__lctrans>:
   22600:	eafffffd 	b	225fc <__lctrans_impl>

00022604 <__lctrans_cur>:
   22604:	ee1d3f70 	mrc	15, 0, r3, cr13, cr0, {3}
   22608:	e5133030 	ldr	r3, [r3, #-48]	; 0xffffffd0
   2260c:	e5931014 	ldr	r1, [r3, #20]
   22610:	eafffff9 	b	225fc <__lctrans_impl>

00022614 <__expand_heap>:
   22614:	e5903000 	ldr	r3, [r0]
   22618:	e59f2160 	ldr	r2, [pc, #352]	; 22780 <__expand_heap+0x16c>
   2261c:	e92d4070 	push	{r4, r5, r6, lr}
   22620:	e1530002 	cmp	r3, r2
   22624:	e24dd018 	sub	sp, sp, #24
   22628:	9a000005 	bls	22644 <__expand_heap+0x30>
   2262c:	e59f3150 	ldr	r3, [pc, #336]	; 22784 <__expand_heap+0x170>
   22630:	e3a0200c 	mov	r2, #12
   22634:	ebffbf30 	bl	122fc <__aeabi_read_tp>
   22638:	e7832000 	str	r2, [r3, r0]
   2263c:	e3a00000 	mov	r0, #0
   22640:	ea00004c 	b	22778 <__expand_heap+0x164>
   22644:	e59f613c 	ldr	r6, [pc, #316]	; 22788 <__expand_heap+0x174>
   22648:	e2634000 	rsb	r4, r3, #0
   2264c:	e7eb4054 	ubfx	r4, r4, #0, #12
   22650:	e1a05000 	mov	r5, r0
   22654:	e0844003 	add	r4, r4, r3
   22658:	e5961000 	ldr	r1, [r6]
   2265c:	e3510000 	cmp	r1, #0
   22660:	1a000007 	bne	22684 <__expand_heap+0x70>
   22664:	e59f3120 	ldr	r3, [pc, #288]	; 2278c <__expand_heap+0x178>
   22668:	e3a0002d 	mov	r0, #45	; 0x2d
   2266c:	e5933000 	ldr	r3, [r3]
   22670:	e12fff33 	blx	r3
   22674:	e2603000 	rsb	r3, r0, #0
   22678:	e7eb3053 	ubfx	r3, r3, #0, #12
   2267c:	e0830000 	add	r0, r3, r0
   22680:	e5860000 	str	r0, [r6]
   22684:	e5962000 	ldr	r2, [r6]
   22688:	e1e03002 	mvn	r3, r2
   2268c:	e1530004 	cmp	r3, r4
   22690:	9a000021 	bls	2271c <__expand_heap+0x108>
   22694:	e59f30f4 	ldr	r3, [pc, #244]	; 22790 <__expand_heap+0x17c>
   22698:	e0821004 	add	r1, r2, r4
   2269c:	e5930010 	ldr	r0, [r3, #16]
   226a0:	e3500502 	cmp	r0, #8388608	; 0x800000
   226a4:	21a03000 	movcs	r3, r0
   226a8:	33a03502 	movcc	r3, #8388608	; 0x800000
   226ac:	e2433502 	sub	r3, r3, #8388608	; 0x800000
   226b0:	e1510003 	cmp	r1, r3
   226b4:	93a03000 	movls	r3, #0
   226b8:	83a03001 	movhi	r3, #1
   226bc:	e1520000 	cmp	r2, r0
   226c0:	23a03000 	movcs	r3, #0
   226c4:	e3530000 	cmp	r3, #0
   226c8:	1a000013 	bne	2271c <__expand_heap+0x108>
   226cc:	e28d3014 	add	r3, sp, #20
   226d0:	e3530502 	cmp	r3, #8388608	; 0x800000
   226d4:	21a00003 	movcs	r0, r3
   226d8:	33a00502 	movcc	r0, #8388608	; 0x800000
   226dc:	e2400502 	sub	r0, r0, #8388608	; 0x800000
   226e0:	e1510000 	cmp	r1, r0
   226e4:	9a000001 	bls	226f0 <__expand_heap+0xdc>
   226e8:	e1520003 	cmp	r2, r3
   226ec:	3a00000a 	bcc	2271c <__expand_heap+0x108>
   226f0:	e59f3094 	ldr	r3, [pc, #148]	; 2278c <__expand_heap+0x178>
   226f4:	e3a0002d 	mov	r0, #45	; 0x2d
   226f8:	e5933000 	ldr	r3, [r3]
   226fc:	e12fff33 	blx	r3
   22700:	e5963000 	ldr	r3, [r6]
   22704:	e0832004 	add	r2, r3, r4
   22708:	e1520000 	cmp	r2, r0
   2270c:	05854000 	streq	r4, [r5]
   22710:	05862000 	streq	r2, [r6]
   22714:	01a00003 	moveq	r0, r3
   22718:	0a000016 	beq	22778 <__expand_heap+0x164>
   2271c:	e59f6070 	ldr	r6, [pc, #112]	; 22794 <__expand_heap+0x180>
   22720:	e3a02000 	mov	r2, #0
   22724:	e3a00000 	mov	r0, #0
   22728:	e5961000 	ldr	r1, [r6]
   2272c:	e1a030a1 	lsr	r3, r1, #1
   22730:	e3a01a01 	mov	r1, #4096	; 0x1000
   22734:	e1a01311 	lsl	r1, r1, r3
   22738:	e3a03000 	mov	r3, #0
   2273c:	e1510004 	cmp	r1, r4
   22740:	e1cd20f8 	strd	r2, [sp, #8]
   22744:	e3e03000 	mvn	r3, #0
   22748:	e3a02003 	mov	r2, #3
   2274c:	21a04001 	movcs	r4, r1
   22750:	e58d3000 	str	r3, [sp]
   22754:	e1a01004 	mov	r1, r4
   22758:	e3a03022 	mov	r3, #34	; 0x22
   2275c:	ebfff2c4 	bl	1f274 <__mmap>
   22760:	e3700001 	cmn	r0, #1
   22764:	0affffb4 	beq	2263c <__expand_heap+0x28>
   22768:	e5963000 	ldr	r3, [r6]
   2276c:	e5854000 	str	r4, [r5]
   22770:	e2833001 	add	r3, r3, #1
   22774:	e5863000 	str	r3, [r6]
   22778:	e28dd018 	add	sp, sp, #24
   2277c:	e8bd8070 	pop	{r4, r5, r6, pc}
   22780:	7fffefff 	svcvc	0x00ffefff
   22784:	0000000c 	andeq	r0, r0, ip
   22788:	00048a70 	andeq	r8, r4, r0, ror sl
   2278c:	00149044 	andseq	r9, r4, r4, asr #32
   22790:	00149004 	andseq	r9, r4, r4
   22794:	00048a74 	andeq	r8, r4, r4, ror sl

00022798 <frexpl>:
   22798:	ea000bc7 	b	256bc <frexp>

0002279c <wctomb>:
   2279c:	e3500000 	cmp	r0, #0
   227a0:	012fff1e 	bxeq	lr
   227a4:	e3a02000 	mov	r2, #0
   227a8:	ea000c83 	b	259bc <wcrtomb>

000227ac <__lockfile>:
   227ac:	e92d4070 	push	{r4, r5, r6, lr}
   227b0:	ee1d3f70 	mrc	15, 0, r3, cr13, cr0, {3}
   227b4:	e513608c 	ldr	r6, [r3, #-140]	; 0xffffff74
   227b8:	e590304c 	ldr	r3, [r0, #76]	; 0x4c
   227bc:	e1530006 	cmp	r3, r6
   227c0:	11a01000 	movne	r1, r0
   227c4:	1281504c 	addne	r5, r1, #76	; 0x4c
   227c8:	12814050 	addne	r4, r1, #80	; 0x50
   227cc:	1a000005 	bne	227e8 <__lockfile+0x3c>
   227d0:	e3a00000 	mov	r0, #0
   227d4:	e8bd8070 	pop	{r4, r5, r6, pc}
   227d8:	e3a03001 	mov	r3, #1
   227dc:	e1a01004 	mov	r1, r4
   227e0:	e1a00005 	mov	r0, r5
   227e4:	ebfffe32 	bl	220b4 <__wait>
   227e8:	f57ff05b 	dmb	ish
   227ec:	e1952f9f 	ldrex	r2, [r5]
   227f0:	e3520000 	cmp	r2, #0
   227f4:	1a000002 	bne	22804 <__lockfile+0x58>
   227f8:	e1852f96 	strex	r2, r6, [r5]
   227fc:	e3520000 	cmp	r2, #0
   22800:	1afffff9 	bne	227ec <__lockfile+0x40>
   22804:	f57ff05b 	dmb	ish
   22808:	e3520000 	cmp	r2, #0
   2280c:	1afffff1 	bne	227d8 <__lockfile+0x2c>
   22810:	e3a00001 	mov	r0, #1
   22814:	e8bd8070 	pop	{r4, r5, r6, pc}

00022818 <__unlockfile>:
   22818:	f57ff05b 	dmb	ish
   2281c:	e3a03000 	mov	r3, #0
   22820:	e580304c 	str	r3, [r0, #76]	; 0x4c
   22824:	f57ff05b 	dmb	ish
   22828:	e5903050 	ldr	r3, [r0, #80]	; 0x50
   2282c:	e3530000 	cmp	r3, #0
   22830:	012fff1e 	bxeq	lr
   22834:	e92d4070 	push	{r4, r5, r6, lr}
   22838:	e280404c 	add	r4, r0, #76	; 0x4c
   2283c:	e59f503c 	ldr	r5, [pc, #60]	; 22880 <__unlockfile+0x68>
   22840:	e3a03001 	mov	r3, #1
   22844:	e3a02081 	mov	r2, #129	; 0x81
   22848:	e1a01004 	mov	r1, r4
   2284c:	e3a000f0 	mov	r0, #240	; 0xf0
   22850:	e5956000 	ldr	r6, [r5]
   22854:	e12fff36 	blx	r6
   22858:	e3700026 	cmn	r0, #38	; 0x26
   2285c:	18bd8070 	popne	{r4, r5, r6, pc}
   22860:	e595e000 	ldr	lr, [r5]
   22864:	e3a03001 	mov	r3, #1
   22868:	e1a01004 	mov	r1, r4
   2286c:	e1a02003 	mov	r2, r3
   22870:	e3a000f0 	mov	r0, #240	; 0xf0
   22874:	e1a0c00e 	mov	ip, lr
   22878:	e8bd4070 	pop	{r4, r5, r6, lr}
   2287c:	e12fff1c 	bx	ip
   22880:	00149044 	andseq	r9, r4, r4, asr #32

00022884 <__overflow>:
   22884:	e5903010 	ldr	r3, [r0, #16]
   22888:	e92d4013 	push	{r0, r1, r4, lr}
   2288c:	e3530000 	cmp	r3, #0
   22890:	e1a04000 	mov	r4, r0
   22894:	e5cd1007 	strb	r1, [sp, #7]
   22898:	0a00000b 	beq	228cc <__overflow+0x48>
   2289c:	e1c421d0 	ldrd	r2, [r4, #16]
   228a0:	e1530002 	cmp	r3, r2
   228a4:	3a00000e 	bcc	228e4 <__overflow+0x60>
   228a8:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   228ac:	e28d1007 	add	r1, sp, #7
   228b0:	e3a02001 	mov	r2, #1
   228b4:	e1a00004 	mov	r0, r4
   228b8:	e12fff33 	blx	r3
   228bc:	e3500001 	cmp	r0, #1
   228c0:	1a000004 	bne	228d8 <__overflow+0x54>
   228c4:	e5dd0007 	ldrb	r0, [sp, #7]
   228c8:	ea000003 	b	228dc <__overflow+0x58>
   228cc:	eb00009e 	bl	22b4c <__towrite>
   228d0:	e3500000 	cmp	r0, #0
   228d4:	0afffff0 	beq	2289c <__overflow+0x18>
   228d8:	e3e00000 	mvn	r0, #0
   228dc:	e28dd008 	add	sp, sp, #8
   228e0:	e8bd8010 	pop	{r4, pc}
   228e4:	e1d424db 	ldrsb	r2, [r4, #75]	; 0x4b
   228e8:	e5dd0007 	ldrb	r0, [sp, #7]
   228ec:	e1500002 	cmp	r0, r2
   228f0:	12832001 	addne	r2, r3, #1
   228f4:	15842014 	strne	r2, [r4, #20]
   228f8:	15c30000 	strbne	r0, [r3]
   228fc:	1afffff6 	bne	228dc <__overflow+0x58>
   22900:	eaffffe8 	b	228a8 <__overflow+0x24>

00022904 <dummy>:
   22904:	e12fff1e 	bx	lr

00022908 <__stdio_close>:
   22908:	e92d4010 	push	{r4, lr}
   2290c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
   22910:	ebfffe26 	bl	221b0 <__aio_close>
   22914:	e59f3014 	ldr	r3, [pc, #20]	; 22930 <__stdio_close+0x28>
   22918:	e5933000 	ldr	r3, [r3]
   2291c:	e1a01000 	mov	r1, r0
   22920:	e3a00006 	mov	r0, #6
   22924:	e12fff33 	blx	r3
   22928:	e8bd4010 	pop	{r4, lr}
   2292c:	eaffef50 	b	1e674 <__syscall_ret>
   22930:	00149044 	andseq	r9, r4, r4, asr #32

00022934 <__stdio_seek>:
   22934:	e92d401f 	push	{r0, r1, r2, r3, r4, lr}
   22938:	e1a01002 	mov	r1, r2
   2293c:	e1a02003 	mov	r2, r3
   22940:	e59d3018 	ldr	r3, [sp, #24]
   22944:	e58d3004 	str	r3, [sp, #4]
   22948:	e28d3008 	add	r3, sp, #8
   2294c:	e58d3000 	str	r3, [sp]
   22950:	e59f3030 	ldr	r3, [pc, #48]	; 22988 <__stdio_seek+0x54>
   22954:	e5934000 	ldr	r4, [r3]
   22958:	e1a03001 	mov	r3, r1
   2295c:	e590103c 	ldr	r1, [r0, #60]	; 0x3c
   22960:	e3a0008c 	mov	r0, #140	; 0x8c
   22964:	e12fff34 	blx	r4
   22968:	ebffef41 	bl	1e674 <__syscall_ret>
   2296c:	e3500000 	cmp	r0, #0
   22970:	b3e02000 	mvnlt	r2, #0
   22974:	b3e03000 	mvnlt	r3, #0
   22978:	b1cd20f8 	strdlt	r2, [sp, #8]
   2297c:	e1cd00d8 	ldrd	r0, [sp, #8]
   22980:	e28dd010 	add	sp, sp, #16
   22984:	e8bd8010 	pop	{r4, pc}
   22988:	00149044 	andseq	r9, r4, r4, asr #32

0002298c <__stdio_write>:
   2298c:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   22990:	e1a04000 	mov	r4, r0
   22994:	e590301c 	ldr	r3, [r0, #28]
   22998:	e1a06002 	mov	r6, r2
   2299c:	e5907014 	ldr	r7, [r0, #20]
   229a0:	e3a08002 	mov	r8, #2
   229a4:	e59f90cc 	ldr	r9, [pc, #204]	; 22a78 <__stdio_write+0xec>
   229a8:	e1a0500d 	mov	r5, sp
   229ac:	e0477003 	sub	r7, r7, r3
   229b0:	e58d7004 	str	r7, [sp, #4]
   229b4:	e0877002 	add	r7, r7, r2
   229b8:	e58d3000 	str	r3, [sp]
   229bc:	e58d1008 	str	r1, [sp, #8]
   229c0:	e58d200c 	str	r2, [sp, #12]
   229c4:	e594103c 	ldr	r1, [r4, #60]	; 0x3c
   229c8:	e1a03008 	mov	r3, r8
   229cc:	e1a02005 	mov	r2, r5
   229d0:	e599a000 	ldr	sl, [r9]
   229d4:	e3a00092 	mov	r0, #146	; 0x92
   229d8:	e12fff3a 	blx	sl
   229dc:	ebffef24 	bl	1e674 <__syscall_ret>
   229e0:	e1500007 	cmp	r0, r7
   229e4:	1a000008 	bne	22a0c <__stdio_write+0x80>
   229e8:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   229ec:	e5942030 	ldr	r2, [r4, #48]	; 0x30
   229f0:	e584301c 	str	r3, [r4, #28]
   229f4:	e0832002 	add	r2, r3, r2
   229f8:	e5843014 	str	r3, [r4, #20]
   229fc:	e5842010 	str	r2, [r4, #16]
   22a00:	e1a00006 	mov	r0, r6
   22a04:	e28dd010 	add	sp, sp, #16
   22a08:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22a0c:	e3500000 	cmp	r0, #0
   22a10:	aa00000b 	bge	22a44 <__stdio_write+0xb8>
   22a14:	e5943000 	ldr	r3, [r4]
   22a18:	e3580002 	cmp	r8, #2
   22a1c:	e3a02000 	mov	r2, #0
   22a20:	e5842010 	str	r2, [r4, #16]
   22a24:	e3833020 	orr	r3, r3, #32
   22a28:	e5843000 	str	r3, [r4]
   22a2c:	15953004 	ldrne	r3, [r5, #4]
   22a30:	e584201c 	str	r2, [r4, #28]
   22a34:	10466003 	subne	r6, r6, r3
   22a38:	e5842014 	str	r2, [r4, #20]
   22a3c:	01a06002 	moveq	r6, r2
   22a40:	eaffffee 	b	22a00 <__stdio_write+0x74>
   22a44:	e5953004 	ldr	r3, [r5, #4]
   22a48:	e0477000 	sub	r7, r7, r0
   22a4c:	e1500003 	cmp	r0, r3
   22a50:	82855008 	addhi	r5, r5, #8
   22a54:	80400003 	subhi	r0, r0, r3
   22a58:	82488001 	subhi	r8, r8, #1
   22a5c:	e5953000 	ldr	r3, [r5]
   22a60:	e0833000 	add	r3, r3, r0
   22a64:	e5853000 	str	r3, [r5]
   22a68:	e5953004 	ldr	r3, [r5, #4]
   22a6c:	e0430000 	sub	r0, r3, r0
   22a70:	e5850004 	str	r0, [r5, #4]
   22a74:	eaffffd2 	b	229c4 <__stdio_write+0x38>
   22a78:	00149044 	andseq	r9, r4, r4, asr #32

00022a7c <__stdout_write>:
   22a7c:	e59f305c 	ldr	r3, [pc, #92]	; 22ae0 <__stdout_write+0x64>
   22a80:	e92d40f7 	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   22a84:	e1a04000 	mov	r4, r0
   22a88:	e5803024 	str	r3, [r0, #36]	; 0x24
   22a8c:	e1a05001 	mov	r5, r1
   22a90:	e5903000 	ldr	r3, [r0]
   22a94:	e1a06002 	mov	r6, r2
   22a98:	e3130040 	tst	r3, #64	; 0x40
   22a9c:	1a000009 	bne	22ac8 <__stdout_write+0x4c>
   22aa0:	e59f303c 	ldr	r3, [pc, #60]	; 22ae4 <__stdout_write+0x68>
   22aa4:	e3052413 	movw	r2, #21523	; 0x5413
   22aa8:	e590103c 	ldr	r1, [r0, #60]	; 0x3c
   22aac:	e3a00036 	mov	r0, #54	; 0x36
   22ab0:	e5937000 	ldr	r7, [r3]
   22ab4:	e1a0300d 	mov	r3, sp
   22ab8:	e12fff37 	blx	r7
   22abc:	e3500000 	cmp	r0, #0
   22ac0:	13e03000 	mvnne	r3, #0
   22ac4:	15c4304b 	strbne	r3, [r4, #75]	; 0x4b
   22ac8:	e1a02006 	mov	r2, r6
   22acc:	e1a01005 	mov	r1, r5
   22ad0:	e1a00004 	mov	r0, r4
   22ad4:	ebffffac 	bl	2298c <__stdio_write>
   22ad8:	e28dd00c 	add	sp, sp, #12
   22adc:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
   22ae0:	0002298c 	andeq	r2, r2, ip, lsl #19
   22ae4:	00149044 	andseq	r9, r4, r4, asr #32

00022ae8 <__string_read>:
   22ae8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   22aec:	e2827c01 	add	r7, r2, #256	; 0x100
   22af0:	e5905054 	ldr	r5, [r0, #84]	; 0x54
   22af4:	e1a04002 	mov	r4, r2
   22af8:	e1a06000 	mov	r6, r0
   22afc:	e1a02007 	mov	r2, r7
   22b00:	e1a08001 	mov	r8, r1
   22b04:	e3a01000 	mov	r1, #0
   22b08:	e1a00005 	mov	r0, r5
   22b0c:	ebfffbeb 	bl	21ac0 <memchr>
   22b10:	e1a01005 	mov	r1, r5
   22b14:	e3500000 	cmp	r0, #0
   22b18:	10407005 	subne	r7, r0, r5
   22b1c:	e1a00008 	mov	r0, r8
   22b20:	e1570004 	cmp	r7, r4
   22b24:	31a04007 	movcc	r4, r7
   22b28:	e1a02004 	mov	r2, r4
   22b2c:	ebfffb24 	bl	217c4 <memcpy>
   22b30:	e0853004 	add	r3, r5, r4
   22b34:	e1a00004 	mov	r0, r4
   22b38:	e0855007 	add	r5, r5, r7
   22b3c:	e5863004 	str	r3, [r6, #4]
   22b40:	e5865008 	str	r5, [r6, #8]
   22b44:	e5865054 	str	r5, [r6, #84]	; 0x54
   22b48:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00022b4c <__towrite>:
   22b4c:	e1d034da 	ldrsb	r3, [r0, #74]	; 0x4a
   22b50:	e2432001 	sub	r2, r3, #1
   22b54:	e1833002 	orr	r3, r3, r2
   22b58:	e5902000 	ldr	r2, [r0]
   22b5c:	e5c0304a 	strb	r3, [r0, #74]	; 0x4a
   22b60:	e2123008 	ands	r3, r2, #8
   22b64:	0a000003 	beq	22b78 <__towrite+0x2c>
   22b68:	e3822020 	orr	r2, r2, #32
   22b6c:	e5802000 	str	r2, [r0]
   22b70:	e3e00000 	mvn	r0, #0
   22b74:	e12fff1e 	bx	lr
   22b78:	e590202c 	ldr	r2, [r0, #44]	; 0x2c
   22b7c:	e5901030 	ldr	r1, [r0, #48]	; 0x30
   22b80:	e5803008 	str	r3, [r0, #8]
   22b84:	e580201c 	str	r2, [r0, #28]
   22b88:	e5802014 	str	r2, [r0, #20]
   22b8c:	e0822001 	add	r2, r2, r1
   22b90:	e5803004 	str	r3, [r0, #4]
   22b94:	e5802010 	str	r2, [r0, #16]
   22b98:	e1a00003 	mov	r0, r3
   22b9c:	e12fff1e 	bx	lr

00022ba0 <__towrite_needs_stdio_exit>:
   22ba0:	ea000be6 	b	25b40 <__stdio_exit>

00022ba4 <store_int>:
   22ba4:	e3500000 	cmp	r0, #0
   22ba8:	012fff1e 	bxeq	lr
   22bac:	e2811002 	add	r1, r1, #2
   22bb0:	e3510005 	cmp	r1, #5
   22bb4:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
   22bb8:	ea00000c 	b	22bf0 <store_int+0x4c>
   22bbc:	00022bd4 	ldrdeq	r2, [r2], -r4
   22bc0:	00022bdc 	ldrdeq	r2, [r2], -ip
   22bc4:	00022be4 	andeq	r2, r2, r4, ror #23
   22bc8:	00022be4 	andeq	r2, r2, r4, ror #23
   22bcc:	00022bf0 	strdeq	r2, [r2], -r0
   22bd0:	00022bec 	andeq	r2, r2, ip, ror #23
   22bd4:	e5c02000 	strb	r2, [r0]
   22bd8:	e12fff1e 	bx	lr
   22bdc:	e1c020b0 	strh	r2, [r0]
   22be0:	e12fff1e 	bx	lr
   22be4:	e5802000 	str	r2, [r0]
   22be8:	e12fff1e 	bx	lr
   22bec:	e1c020f0 	strd	r2, [r0]
   22bf0:	e12fff1e 	bx	lr

00022bf4 <arg_n>:
   22bf4:	e24dd008 	sub	sp, sp, #8
   22bf8:	e1a03001 	mov	r3, r1
   22bfc:	e3a02000 	mov	r2, #0
   22c00:	e58d0004 	str	r0, [sp, #4]
   22c04:	e3530001 	cmp	r3, #1
   22c08:	8a00000c 	bhi	22c40 <arg_n+0x4c>
   22c0c:	e3510000 	cmp	r1, #0
   22c10:	e2413001 	sub	r3, r1, #1
   22c14:	03a03000 	moveq	r3, #0
   22c18:	11a03103 	lslne	r3, r3, #2
   22c1c:	e3520000 	cmp	r2, #0
   22c20:	e0800003 	add	r0, r0, r3
   22c24:	158d0004 	strne	r0, [sp, #4]
   22c28:	e59d3004 	ldr	r3, [sp, #4]
   22c2c:	e2832004 	add	r2, r3, #4
   22c30:	e58d2004 	str	r2, [sp, #4]
   22c34:	e5930000 	ldr	r0, [r3]
   22c38:	e28dd008 	add	sp, sp, #8
   22c3c:	e12fff1e 	bx	lr
   22c40:	e2433001 	sub	r3, r3, #1
   22c44:	e3a02001 	mov	r2, #1
   22c48:	eaffffed 	b	22c04 <arg_n+0x10>

00022c4c <vfscanf>:
   22c4c:	e590304c 	ldr	r3, [r0, #76]	; 0x4c
   22c50:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c54:	e3530000 	cmp	r3, #0
   22c58:	e24ddf55 	sub	sp, sp, #340	; 0x154
   22c5c:	e1a04000 	mov	r4, r0
   22c60:	b3a03000 	movlt	r3, #0
   22c64:	e1a09001 	mov	r9, r1
   22c68:	e58d2024 	str	r2, [sp, #36]	; 0x24
   22c6c:	b58d3028 	strlt	r3, [sp, #40]	; 0x28
   22c70:	ba000001 	blt	22c7c <vfscanf+0x30>
   22c74:	ebfffecc 	bl	227ac <__lockfile>
   22c78:	e58d0028 	str	r0, [sp, #40]	; 0x28
   22c7c:	e3a03000 	mov	r3, #0
   22c80:	e58d3018 	str	r3, [sp, #24]
   22c84:	e58d301c 	str	r3, [sp, #28]
   22c88:	e58d3014 	str	r3, [sp, #20]
   22c8c:	e5d95000 	ldrb	r5, [r9]
   22c90:	e3550000 	cmp	r5, #0
   22c94:	1a000007 	bne	22cb8 <vfscanf+0x6c>
   22c98:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
   22c9c:	e3530000 	cmp	r3, #0
   22ca0:	0a000001 	beq	22cac <vfscanf+0x60>
   22ca4:	e1a00004 	mov	r0, r4
   22ca8:	ebfffeda 	bl	22818 <__unlockfile>
   22cac:	e59d0014 	ldr	r0, [sp, #20]
   22cb0:	e28ddf55 	add	sp, sp, #340	; 0x154
   22cb4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22cb8:	e2458009 	sub	r8, r5, #9
   22cbc:	e3550020 	cmp	r5, #32
   22cc0:	13580004 	cmpne	r8, #4
   22cc4:	93a08001 	movls	r8, #1
   22cc8:	83a08000 	movhi	r8, #0
   22ccc:	8a000029 	bhi	22d78 <vfscanf+0x12c>
   22cd0:	e5d93001 	ldrb	r3, [r9, #1]
   22cd4:	e1a05009 	mov	r5, r9
   22cd8:	e2899001 	add	r9, r9, #1
   22cdc:	e2432009 	sub	r2, r3, #9
   22ce0:	e3530020 	cmp	r3, #32
   22ce4:	13520004 	cmpne	r2, #4
   22ce8:	9afffff8 	bls	22cd0 <vfscanf+0x84>
   22cec:	e3a02000 	mov	r2, #0
   22cf0:	e3a03000 	mov	r3, #0
   22cf4:	e1a00004 	mov	r0, r4
   22cf8:	eb000a27 	bl	2559c <__shlim>
   22cfc:	e5943004 	ldr	r3, [r4, #4]
   22d00:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   22d04:	e1530002 	cmp	r3, r2
   22d08:	32832001 	addcc	r2, r3, #1
   22d0c:	35842004 	strcc	r2, [r4, #4]
   22d10:	35d30000 	ldrbcc	r0, [r3]
   22d14:	3a000001 	bcc	22d20 <vfscanf+0xd4>
   22d18:	e1a00004 	mov	r0, r4
   22d1c:	eb000a32 	bl	255ec <__shgetc>
   22d20:	e2403009 	sub	r3, r0, #9
   22d24:	e3500020 	cmp	r0, #32
   22d28:	13530004 	cmpne	r3, #4
   22d2c:	9afffff2 	bls	22cfc <vfscanf+0xb0>
   22d30:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   22d34:	e3530000 	cmp	r3, #0
   22d38:	15943004 	ldrne	r3, [r4, #4]
   22d3c:	12433001 	subne	r3, r3, #1
   22d40:	15843004 	strne	r3, [r4, #4]
   22d44:	e994000a 	ldmib	r4, {r1, r3}
   22d48:	e0411003 	sub	r1, r1, r3
   22d4c:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   22d50:	e0922001 	adds	r2, r2, r1
   22d54:	e0a33fc1 	adc	r3, r3, r1, asr #31
   22d58:	e59d1018 	ldr	r1, [sp, #24]
   22d5c:	e0911002 	adds	r1, r1, r2
   22d60:	e58d1018 	str	r1, [sp, #24]
   22d64:	e59d101c 	ldr	r1, [sp, #28]
   22d68:	e0a13003 	adc	r3, r1, r3
   22d6c:	e58d301c 	str	r3, [sp, #28]
   22d70:	e2859001 	add	r9, r5, #1
   22d74:	eaffffc4 	b	22c8c <vfscanf+0x40>
   22d78:	e3550025 	cmp	r5, #37	; 0x25
   22d7c:	1a000002 	bne	22d8c <vfscanf+0x140>
   22d80:	e5d91001 	ldrb	r1, [r9, #1]
   22d84:	e3510025 	cmp	r1, #37	; 0x25
   22d88:	1a000024 	bne	22e20 <vfscanf+0x1d4>
   22d8c:	e3a02000 	mov	r2, #0
   22d90:	e3a03000 	mov	r3, #0
   22d94:	e1a00004 	mov	r0, r4
   22d98:	e3550025 	cmp	r5, #37	; 0x25
   22d9c:	11a05009 	movne	r5, r9
   22da0:	02895001 	addeq	r5, r9, #1
   22da4:	eb0009fc 	bl	2559c <__shlim>
   22da8:	e5943004 	ldr	r3, [r4, #4]
   22dac:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   22db0:	e1530002 	cmp	r3, r2
   22db4:	32832001 	addcc	r2, r3, #1
   22db8:	35842004 	strcc	r2, [r4, #4]
   22dbc:	35d30000 	ldrbcc	r0, [r3]
   22dc0:	3a000001 	bcc	22dcc <vfscanf+0x180>
   22dc4:	e1a00004 	mov	r0, r4
   22dc8:	eb000a07 	bl	255ec <__shgetc>
   22dcc:	e5d53000 	ldrb	r3, [r5]
   22dd0:	e1530000 	cmp	r3, r0
   22dd4:	0a00000b 	beq	22e08 <vfscanf+0x1bc>
   22dd8:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   22ddc:	e3530000 	cmp	r3, #0
   22de0:	15943004 	ldrne	r3, [r4, #4]
   22de4:	12433001 	subne	r3, r3, #1
   22de8:	15843004 	strne	r3, [r4, #4]
   22dec:	e3500000 	cmp	r0, #0
   22df0:	aaffffa8 	bge	22c98 <vfscanf+0x4c>
   22df4:	e59d3014 	ldr	r3, [sp, #20]
   22df8:	e3530000 	cmp	r3, #0
   22dfc:	03e03000 	mvneq	r3, #0
   22e00:	e58d3014 	str	r3, [sp, #20]
   22e04:	eaffffa3 	b	22c98 <vfscanf+0x4c>
   22e08:	e59d3018 	ldr	r3, [sp, #24]
   22e0c:	e2933001 	adds	r3, r3, #1
   22e10:	e58d3018 	str	r3, [sp, #24]
   22e14:	e59d301c 	ldr	r3, [sp, #28]
   22e18:	e2a33000 	adc	r3, r3, #0
   22e1c:	eaffffd2 	b	22d6c <vfscanf+0x120>
   22e20:	e351002a 	cmp	r1, #42	; 0x2a
   22e24:	02891002 	addeq	r1, r9, #2
   22e28:	0a000009 	beq	22e54 <vfscanf+0x208>
   22e2c:	e2411030 	sub	r1, r1, #48	; 0x30
   22e30:	e3510009 	cmp	r1, #9
   22e34:	8a000057 	bhi	22f98 <vfscanf+0x34c>
   22e38:	e5d93002 	ldrb	r3, [r9, #2]
   22e3c:	e3530024 	cmp	r3, #36	; 0x24
   22e40:	1a000054 	bne	22f98 <vfscanf+0x34c>
   22e44:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
   22e48:	ebffff69 	bl	22bf4 <arg_n>
   22e4c:	e2891003 	add	r1, r9, #3
   22e50:	e1a08000 	mov	r8, r0
   22e54:	e3a09000 	mov	r9, #0
   22e58:	e3a0c00a 	mov	ip, #10
   22e5c:	e1a02001 	mov	r2, r1
   22e60:	e4d23001 	ldrb	r3, [r2], #1
   22e64:	e2430030 	sub	r0, r3, #48	; 0x30
   22e68:	e3500009 	cmp	r0, #9
   22e6c:	9a00004e 	bls	22fac <vfscanf+0x360>
   22e70:	e353006d 	cmp	r3, #109	; 0x6d
   22e74:	13a03000 	movne	r3, #0
   22e78:	158d3020 	strne	r3, [sp, #32]
   22e7c:	1a000005 	bne	22e98 <vfscanf+0x24c>
   22e80:	e2583000 	subs	r3, r8, #0
   22e84:	e3a06000 	mov	r6, #0
   22e88:	e1a01002 	mov	r1, r2
   22e8c:	e1a07006 	mov	r7, r6
   22e90:	13a03001 	movne	r3, #1
   22e94:	e58d3020 	str	r3, [sp, #32]
   22e98:	e1a05001 	mov	r5, r1
   22e9c:	e4d53001 	ldrb	r3, [r5], #1
   22ea0:	e2433041 	sub	r3, r3, #65	; 0x41
   22ea4:	e3530039 	cmp	r3, #57	; 0x39
   22ea8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   22eac:	ea000199 	b	23518 <vfscanf+0x8cc>
   22eb0:	00023104 	andeq	r3, r2, r4, lsl #2
   22eb4:	00023518 	andeq	r3, r2, r8, lsl r5
   22eb8:	00023104 	andeq	r3, r2, r4, lsl #2
   22ebc:	00023518 	andeq	r3, r2, r8, lsl r5
   22ec0:	00023104 	andeq	r3, r2, r4, lsl #2
   22ec4:	00023104 	andeq	r3, r2, r4, lsl #2
   22ec8:	00023104 	andeq	r3, r2, r4, lsl #2
   22ecc:	00023518 	andeq	r3, r2, r8, lsl r5
   22ed0:	00023518 	andeq	r3, r2, r8, lsl r5
   22ed4:	00023518 	andeq	r3, r2, r8, lsl r5
   22ed8:	00023518 	andeq	r3, r2, r8, lsl r5
   22edc:	00022fec 	andeq	r2, r2, ip, ror #31
   22ee0:	00023518 	andeq	r3, r2, r8, lsl r5
   22ee4:	00023518 	andeq	r3, r2, r8, lsl r5
   22ee8:	00023518 	andeq	r3, r2, r8, lsl r5
   22eec:	00023518 	andeq	r3, r2, r8, lsl r5
   22ef0:	00023518 	andeq	r3, r2, r8, lsl r5
   22ef4:	00023518 	andeq	r3, r2, r8, lsl r5
   22ef8:	00023104 	andeq	r3, r2, r4, lsl #2
   22efc:	00023518 	andeq	r3, r2, r8, lsl r5
   22f00:	00023518 	andeq	r3, r2, r8, lsl r5
   22f04:	00023518 	andeq	r3, r2, r8, lsl r5
   22f08:	00023518 	andeq	r3, r2, r8, lsl r5
   22f0c:	00023104 	andeq	r3, r2, r4, lsl #2
   22f10:	00023518 	andeq	r3, r2, r8, lsl r5
   22f14:	00023518 	andeq	r3, r2, r8, lsl r5
   22f18:	00023104 	andeq	r3, r2, r4, lsl #2
   22f1c:	00023518 	andeq	r3, r2, r8, lsl r5
   22f20:	00023518 	andeq	r3, r2, r8, lsl r5
   22f24:	00023518 	andeq	r3, r2, r8, lsl r5
   22f28:	00023518 	andeq	r3, r2, r8, lsl r5
   22f2c:	00023518 	andeq	r3, r2, r8, lsl r5
   22f30:	00023104 	andeq	r3, r2, r4, lsl #2
   22f34:	00023518 	andeq	r3, r2, r8, lsl r5
   22f38:	00023104 	andeq	r3, r2, r4, lsl #2
   22f3c:	00023104 	andeq	r3, r2, r4, lsl #2
   22f40:	00023104 	andeq	r3, r2, r4, lsl #2
   22f44:	00023104 	andeq	r3, r2, r4, lsl #2
   22f48:	00023104 	andeq	r3, r2, r4, lsl #2
   22f4c:	00022fbc 			; <UNDEFINED> instruction: 0x00022fbc
   22f50:	00023104 	andeq	r3, r2, r4, lsl #2
   22f54:	00023110 	andeq	r3, r2, r0, lsl r1
   22f58:	00023518 	andeq	r3, r2, r8, lsl r5
   22f5c:	00022fd4 	ldrdeq	r2, [r2], -r4
   22f60:	00023518 	andeq	r3, r2, r8, lsl r5
   22f64:	00023104 	andeq	r3, r2, r4, lsl #2
   22f68:	00023104 	andeq	r3, r2, r4, lsl #2
   22f6c:	00023104 	andeq	r3, r2, r4, lsl #2
   22f70:	00023518 	andeq	r3, r2, r8, lsl r5
   22f74:	00023518 	andeq	r3, r2, r8, lsl r5
   22f78:	00023104 	andeq	r3, r2, r4, lsl #2
   22f7c:	00022fe4 	andeq	r2, r2, r4, ror #31
   22f80:	00023104 	andeq	r3, r2, r4, lsl #2
   22f84:	00023518 	andeq	r3, r2, r8, lsl r5
   22f88:	00023518 	andeq	r3, r2, r8, lsl r5
   22f8c:	00023104 	andeq	r3, r2, r4, lsl #2
   22f90:	00023518 	andeq	r3, r2, r8, lsl r5
   22f94:	00022fe4 	andeq	r2, r2, r4, ror #31
   22f98:	e59d2024 	ldr	r2, [sp, #36]	; 0x24
   22f9c:	e2891001 	add	r1, r9, #1
   22fa0:	e4928004 	ldr	r8, [r2], #4
   22fa4:	e58d2024 	str	r2, [sp, #36]	; 0x24
   22fa8:	eaffffa9 	b	22e54 <vfscanf+0x208>
   22fac:	e029399c 	mla	r9, ip, r9, r3
   22fb0:	e1a01002 	mov	r1, r2
   22fb4:	e2499030 	sub	r9, r9, #48	; 0x30
   22fb8:	eaffffa7 	b	22e5c <vfscanf+0x210>
   22fbc:	e5d13001 	ldrb	r3, [r1, #1]
   22fc0:	e3530068 	cmp	r3, #104	; 0x68
   22fc4:	02815002 	addeq	r5, r1, #2
   22fc8:	03e0b001 	mvneq	fp, #1
   22fcc:	13e0b000 	mvnne	fp, #0
   22fd0:	ea000006 	b	22ff0 <vfscanf+0x3a4>
   22fd4:	e5d13001 	ldrb	r3, [r1, #1]
   22fd8:	e353006c 	cmp	r3, #108	; 0x6c
   22fdc:	02815002 	addeq	r5, r1, #2
   22fe0:	0a00004a 	beq	23110 <vfscanf+0x4c4>
   22fe4:	e3a0b001 	mov	fp, #1
   22fe8:	ea000000 	b	22ff0 <vfscanf+0x3a4>
   22fec:	e3a0b002 	mov	fp, #2
   22ff0:	e5d53000 	ldrb	r3, [r5]
   22ff4:	e203202f 	and	r2, r3, #47	; 0x2f
   22ff8:	e3520003 	cmp	r2, #3
   22ffc:	158d3008 	strne	r3, [sp, #8]
   23000:	03833020 	orreq	r3, r3, #32
   23004:	058d3008 	streq	r3, [sp, #8]
   23008:	e59d3008 	ldr	r3, [sp, #8]
   2300c:	03a0b001 	moveq	fp, #1
   23010:	e3530063 	cmp	r3, #99	; 0x63
   23014:	0a00003f 	beq	23118 <vfscanf+0x4cc>
   23018:	e353006e 	cmp	r3, #110	; 0x6e
   2301c:	0a000040 	beq	23124 <vfscanf+0x4d8>
   23020:	e353005b 	cmp	r3, #91	; 0x5b
   23024:	1a000044 	bne	2313c <vfscanf+0x4f0>
   23028:	e1a03fc9 	asr	r3, r9, #31
   2302c:	e1a02009 	mov	r2, r9
   23030:	e1a00004 	mov	r0, r4
   23034:	e1cd23f0 	strd	r2, [sp, #48]	; 0x30
   23038:	eb000957 	bl	2559c <__shlim>
   2303c:	e5943004 	ldr	r3, [r4, #4]
   23040:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23044:	e1530002 	cmp	r3, r2
   23048:	32833001 	addcc	r3, r3, #1
   2304c:	35843004 	strcc	r3, [r4, #4]
   23050:	3a000003 	bcc	23064 <vfscanf+0x418>
   23054:	e1a00004 	mov	r0, r4
   23058:	eb000963 	bl	255ec <__shgetc>
   2305c:	e3500000 	cmp	r0, #0
   23060:	ba00012c 	blt	23518 <vfscanf+0x8cc>
   23064:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   23068:	e3530000 	cmp	r3, #0
   2306c:	15943004 	ldrne	r3, [r4, #4]
   23070:	12433001 	subne	r3, r3, #1
   23074:	15843004 	strne	r3, [r4, #4]
   23078:	e59d3008 	ldr	r3, [sp, #8]
   2307c:	e3530078 	cmp	r3, #120	; 0x78
   23080:	ca00019f 	bgt	23704 <vfscanf+0xab8>
   23084:	e3530057 	cmp	r3, #87	; 0x57
   23088:	ca00004d 	bgt	231c4 <vfscanf+0x578>
   2308c:	e3530041 	cmp	r3, #65	; 0x41
   23090:	0a000002 	beq	230a0 <vfscanf+0x454>
   23094:	e2433045 	sub	r3, r3, #69	; 0x45
   23098:	e3530002 	cmp	r3, #2
   2309c:	8a000198 	bhi	23704 <vfscanf+0xab8>
   230a0:	e3a02000 	mov	r2, #0
   230a4:	e1a0100b 	mov	r1, fp
   230a8:	e1a00004 	mov	r0, r4
   230ac:	eb000536 	bl	2458c <__floatscan>
   230b0:	e1a03001 	mov	r3, r1
   230b4:	e1a02000 	mov	r2, r0
   230b8:	e1cd20f8 	strd	r2, [sp, #8]
   230bc:	e9941008 	ldmib	r4, {r3, ip}
   230c0:	e043c00c 	sub	ip, r3, ip
   230c4:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   230c8:	e092200c 	adds	r2, r2, ip
   230cc:	e0a33fcc 	adc	r3, r3, ip, asr #31
   230d0:	e1923003 	orrs	r3, r2, r3
   230d4:	0a0000fc 	beq	234cc <vfscanf+0x880>
   230d8:	e3580000 	cmp	r8, #0
   230dc:	0a000188 	beq	23704 <vfscanf+0xab8>
   230e0:	e35b0001 	cmp	fp, #1
   230e4:	0a000172 	beq	236b4 <vfscanf+0xa68>
   230e8:	e35b0002 	cmp	fp, #2
   230ec:	0a000170 	beq	236b4 <vfscanf+0xa68>
   230f0:	e35b0000 	cmp	fp, #0
   230f4:	1a000182 	bne	23704 <vfscanf+0xab8>
   230f8:	eb001001 	bl	27104 <__aeabi_d2f>
   230fc:	e5880000 	str	r0, [r8]
   23100:	ea00017f 	b	23704 <vfscanf+0xab8>
   23104:	e1a05001 	mov	r5, r1
   23108:	e3a0b000 	mov	fp, #0
   2310c:	eaffffb7 	b	22ff0 <vfscanf+0x3a4>
   23110:	e3a0b003 	mov	fp, #3
   23114:	eaffffb5 	b	22ff0 <vfscanf+0x3a4>
   23118:	e3590001 	cmp	r9, #1
   2311c:	b3a09001 	movlt	r9, #1
   23120:	eaffffc0 	b	23028 <vfscanf+0x3dc>
   23124:	e59d2018 	ldr	r2, [sp, #24]
   23128:	e1a0100b 	mov	r1, fp
   2312c:	e59d301c 	ldr	r3, [sp, #28]
   23130:	e1a00008 	mov	r0, r8
   23134:	ebfffe9a 	bl	22ba4 <store_int>
   23138:	eaffff0c 	b	22d70 <vfscanf+0x124>
   2313c:	e3a02000 	mov	r2, #0
   23140:	e3a03000 	mov	r3, #0
   23144:	e1a00004 	mov	r0, r4
   23148:	eb000913 	bl	2559c <__shlim>
   2314c:	e5943004 	ldr	r3, [r4, #4]
   23150:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23154:	e1530002 	cmp	r3, r2
   23158:	32832001 	addcc	r2, r3, #1
   2315c:	35842004 	strcc	r2, [r4, #4]
   23160:	35d30000 	ldrbcc	r0, [r3]
   23164:	3a000001 	bcc	23170 <vfscanf+0x524>
   23168:	e1a00004 	mov	r0, r4
   2316c:	eb00091e 	bl	255ec <__shgetc>
   23170:	e2403009 	sub	r3, r0, #9
   23174:	e3500020 	cmp	r0, #32
   23178:	13530004 	cmpne	r3, #4
   2317c:	9afffff2 	bls	2314c <vfscanf+0x500>
   23180:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   23184:	e3530000 	cmp	r3, #0
   23188:	15943004 	ldrne	r3, [r4, #4]
   2318c:	12433001 	subne	r3, r3, #1
   23190:	15843004 	strne	r3, [r4, #4]
   23194:	e994000a 	ldmib	r4, {r1, r3}
   23198:	e0411003 	sub	r1, r1, r3
   2319c:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   231a0:	e0922001 	adds	r2, r2, r1
   231a4:	e0a33fc1 	adc	r3, r3, r1, asr #31
   231a8:	e59d1018 	ldr	r1, [sp, #24]
   231ac:	e0911002 	adds	r1, r1, r2
   231b0:	e58d1018 	str	r1, [sp, #24]
   231b4:	e59d101c 	ldr	r1, [sp, #28]
   231b8:	e0a13003 	adc	r3, r1, r3
   231bc:	e58d301c 	str	r3, [sp, #28]
   231c0:	eaffff98 	b	23028 <vfscanf+0x3dc>
   231c4:	e59d3008 	ldr	r3, [sp, #8]
   231c8:	e2433058 	sub	r3, r3, #88	; 0x58
   231cc:	e3530020 	cmp	r3, #32
   231d0:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
   231d4:	ea00014a 	b	23704 <vfscanf+0xab8>
   231d8:	0002325c 	andeq	r3, r2, ip, asr r2
   231dc:	00023704 	andeq	r3, r2, r4, lsl #14
   231e0:	00023704 	andeq	r3, r2, r4, lsl #14
   231e4:	000232d4 	ldrdeq	r3, [r2], -r4
   231e8:	00023704 	andeq	r3, r2, r4, lsl #14
   231ec:	00023704 	andeq	r3, r2, r4, lsl #14
   231f0:	00023704 	andeq	r3, r2, r4, lsl #14
   231f4:	00023704 	andeq	r3, r2, r4, lsl #14
   231f8:	00023704 	andeq	r3, r2, r4, lsl #14
   231fc:	000230a0 	andeq	r3, r2, r0, lsr #1
   23200:	00023704 	andeq	r3, r2, r4, lsl #14
   23204:	000232d4 	ldrdeq	r3, [r2], -r4
   23208:	000236a4 	andeq	r3, r2, r4, lsr #13
   2320c:	000230a0 	andeq	r3, r2, r0, lsr #1
   23210:	000230a0 	andeq	r3, r2, r0, lsr #1
   23214:	000230a0 	andeq	r3, r2, r0, lsr #1
   23218:	00023704 	andeq	r3, r2, r4, lsl #14
   2321c:	000236ac 	andeq	r3, r2, ip, lsr #13
   23220:	00023704 	andeq	r3, r2, r4, lsl #14
   23224:	00023704 	andeq	r3, r2, r4, lsl #14
   23228:	00023704 	andeq	r3, r2, r4, lsl #14
   2322c:	00023704 	andeq	r3, r2, r4, lsl #14
   23230:	00023704 	andeq	r3, r2, r4, lsl #14
   23234:	0002369c 	muleq	r2, ip, r6
   23238:	0002325c 	andeq	r3, r2, ip, asr r2
   2323c:	00023704 	andeq	r3, r2, r4, lsl #14
   23240:	00023704 	andeq	r3, r2, r4, lsl #14
   23244:	000232d4 	ldrdeq	r3, [r2], -r4
   23248:	00023704 	andeq	r3, r2, r4, lsl #14
   2324c:	000236a4 	andeq	r3, r2, r4, lsr #13
   23250:	00023704 	andeq	r3, r2, r4, lsl #14
   23254:	00023704 	andeq	r3, r2, r4, lsl #14
   23258:	0002325c 	andeq	r3, r2, ip, asr r2
   2325c:	e3a01010 	mov	r1, #16
   23260:	e3e03000 	mvn	r3, #0
   23264:	e3e02000 	mvn	r2, #0
   23268:	e1a00004 	mov	r0, r4
   2326c:	e1cd20f0 	strd	r2, [sp]
   23270:	e3a02000 	mov	r2, #0
   23274:	eb000747 	bl	24f98 <__intscan>
   23278:	e1a0c001 	mov	ip, r1
   2327c:	e994000a 	ldmib	r4, {r1, r3}
   23280:	e0411003 	sub	r1, r1, r3
   23284:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   23288:	e0922001 	adds	r2, r2, r1
   2328c:	e0a33fc1 	adc	r3, r3, r1, asr #31
   23290:	e1923003 	orrs	r3, r2, r3
   23294:	0a00008c 	beq	234cc <vfscanf+0x880>
   23298:	e59d1008 	ldr	r1, [sp, #8]
   2329c:	e3580000 	cmp	r8, #0
   232a0:	e2411070 	sub	r1, r1, #112	; 0x70
   232a4:	e16f1f11 	clz	r1, r1
   232a8:	e1a012a1 	lsr	r1, r1, #5
   232ac:	03a01000 	moveq	r1, #0
   232b0:	e3510000 	cmp	r1, #0
   232b4:	15880000 	strne	r0, [r8]
   232b8:	1a000111 	bne	23704 <vfscanf+0xab8>
   232bc:	e1a02000 	mov	r2, r0
   232c0:	e1a0300c 	mov	r3, ip
   232c4:	e1a0100b 	mov	r1, fp
   232c8:	e1a00008 	mov	r0, r8
   232cc:	ebfffe34 	bl	22ba4 <store_int>
   232d0:	ea00010b 	b	23704 <vfscanf+0xab8>
   232d4:	e59d3008 	ldr	r3, [sp, #8]
   232d8:	e3c33010 	bic	r3, r3, #16
   232dc:	e3530063 	cmp	r3, #99	; 0x63
   232e0:	1a00001f 	bne	23364 <vfscanf+0x718>
   232e4:	e3002101 	movw	r2, #257	; 0x101
   232e8:	e28d004c 	add	r0, sp, #76	; 0x4c
   232ec:	e3e01000 	mvn	r1, #0
   232f0:	ebfffa80 	bl	21cf8 <memset>
   232f4:	e59d2008 	ldr	r2, [sp, #8]
   232f8:	e3a03000 	mov	r3, #0
   232fc:	e5cd304c 	strb	r3, [sp, #76]	; 0x4c
   23300:	e3520073 	cmp	r2, #115	; 0x73
   23304:	12899001 	addne	r9, r9, #1
   23308:	1a000004 	bne	23320 <vfscanf+0x6d4>
   2330c:	e1cd35b6 	strh	r3, [sp, #86]	; 0x56
   23310:	e1cd35b8 	strh	r3, [sp, #88]	; 0x58
   23314:	e5cd305a 	strb	r3, [sp, #90]	; 0x5a
   23318:	e5cd306d 	strb	r3, [sp, #109]	; 0x6d
   2331c:	e3a0901f 	mov	r9, #31
   23320:	e35b0001 	cmp	fp, #1
   23324:	e59d3020 	ldr	r3, [sp, #32]
   23328:	1a000092 	bne	23578 <vfscanf+0x92c>
   2332c:	e3530000 	cmp	r3, #0
   23330:	01a06008 	moveq	r6, r8
   23334:	0a00003a 	beq	23424 <vfscanf+0x7d8>
   23338:	e1a00109 	lsl	r0, r9, #2
   2333c:	ebffee67 	bl	1ece0 <malloc>
   23340:	e2506000 	subs	r6, r0, #0
   23344:	1a000036 	bne	23424 <vfscanf+0x7d8>
   23348:	e3a07000 	mov	r7, #0
   2334c:	e59d3014 	ldr	r3, [sp, #20]
   23350:	e3a06000 	mov	r6, #0
   23354:	e3530000 	cmp	r3, #0
   23358:	03e03000 	mvneq	r3, #0
   2335c:	058d3014 	streq	r3, [sp, #20]
   23360:	ea00005c 	b	234d8 <vfscanf+0x88c>
   23364:	e5d53001 	ldrb	r3, [r5, #1]
   23368:	e28d004c 	add	r0, sp, #76	; 0x4c
   2336c:	e3002101 	movw	r2, #257	; 0x101
   23370:	e353005e 	cmp	r3, #94	; 0x5e
   23374:	02855002 	addeq	r5, r5, #2
   23378:	12855001 	addne	r5, r5, #1
   2337c:	03a09001 	moveq	r9, #1
   23380:	13a09000 	movne	r9, #0
   23384:	e1a01009 	mov	r1, r9
   23388:	ebfffa5a 	bl	21cf8 <memset>
   2338c:	e3a03000 	mov	r3, #0
   23390:	e5cd304c 	strb	r3, [sp, #76]	; 0x4c
   23394:	e5d53000 	ldrb	r3, [r5]
   23398:	e353002d 	cmp	r3, #45	; 0x2d
   2339c:	02693001 	rsbeq	r3, r9, #1
   233a0:	02855001 	addeq	r5, r5, #1
   233a4:	05cd307a 	strbeq	r3, [sp, #122]	; 0x7a
   233a8:	0a000003 	beq	233bc <vfscanf+0x770>
   233ac:	e353005d 	cmp	r3, #93	; 0x5d
   233b0:	02855001 	addeq	r5, r5, #1
   233b4:	02693001 	rsbeq	r3, r9, #1
   233b8:	05cd30aa 	strbeq	r3, [sp, #170]	; 0xaa
   233bc:	e2692001 	rsb	r2, r9, #1
   233c0:	e28d104c 	add	r1, sp, #76	; 0x4c
   233c4:	e2299001 	eor	r9, r9, #1
   233c8:	e5d53000 	ldrb	r3, [r5]
   233cc:	e353005d 	cmp	r3, #93	; 0x5d
   233d0:	0affffd1 	beq	2331c <vfscanf+0x6d0>
   233d4:	e3530000 	cmp	r3, #0
   233d8:	0a00004e 	beq	23518 <vfscanf+0x8cc>
   233dc:	e353002d 	cmp	r3, #45	; 0x2d
   233e0:	1a000004 	bne	233f8 <vfscanf+0x7ac>
   233e4:	e5d50001 	ldrb	r0, [r5, #1]
   233e8:	e350005d 	cmp	r0, #93	; 0x5d
   233ec:	13500000 	cmpne	r0, #0
   233f0:	15553001 	ldrbne	r3, [r5, #-1]
   233f4:	1a000006 	bne	23414 <vfscanf+0x7c8>
   233f8:	e4d53001 	ldrb	r3, [r5], #1
   233fc:	e28d0e15 	add	r0, sp, #336	; 0x150
   23400:	e0803003 	add	r3, r0, r3
   23404:	e5432103 	strb	r2, [r3, #-259]	; 0xfffffefd
   23408:	eaffffee 	b	233c8 <vfscanf+0x77c>
   2340c:	e2833001 	add	r3, r3, #1
   23410:	e7c39001 	strb	r9, [r3, r1]
   23414:	e1500003 	cmp	r0, r3
   23418:	cafffffb 	bgt	2340c <vfscanf+0x7c0>
   2341c:	e2855001 	add	r5, r5, #1
   23420:	eafffff4 	b	233f8 <vfscanf+0x7ac>
   23424:	e3a0a000 	mov	sl, #0
   23428:	e28d3044 	add	r3, sp, #68	; 0x44
   2342c:	e58da044 	str	sl, [sp, #68]	; 0x44
   23430:	e58da048 	str	sl, [sp, #72]	; 0x48
   23434:	e58d302c 	str	r3, [sp, #44]	; 0x2c
   23438:	e5943004 	ldr	r3, [r4, #4]
   2343c:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23440:	e1530002 	cmp	r3, r2
   23444:	32832001 	addcc	r2, r3, #1
   23448:	35842004 	strcc	r2, [r4, #4]
   2344c:	35d30000 	ldrbcc	r0, [r3]
   23450:	3a000001 	bcc	2345c <vfscanf+0x810>
   23454:	e1a00004 	mov	r0, r4
   23458:	eb000863 	bl	255ec <__shgetc>
   2345c:	e28d3e15 	add	r3, sp, #336	; 0x150
   23460:	e0833000 	add	r3, r3, r0
   23464:	e5537103 	ldrb	r7, [r3, #-259]	; 0xfffffefd
   23468:	e3570000 	cmp	r7, #0
   2346c:	1a00001e 	bne	234ec <vfscanf+0x8a0>
   23470:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
   23474:	eb00094a 	bl	259a4 <mbsinit>
   23478:	e3500000 	cmp	r0, #0
   2347c:	0a00008f 	beq	236c0 <vfscanf+0xa74>
   23480:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   23484:	e3530000 	cmp	r3, #0
   23488:	15943004 	ldrne	r3, [r4, #4]
   2348c:	12433001 	subne	r3, r3, #1
   23490:	15843004 	strne	r3, [r4, #4]
   23494:	e994000a 	ldmib	r4, {r1, r3}
   23498:	e0411003 	sub	r1, r1, r3
   2349c:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   234a0:	e0922001 	adds	r2, r2, r1
   234a4:	e0a33fc1 	adc	r3, r3, r1, asr #31
   234a8:	e1921003 	orrs	r1, r2, r3
   234ac:	0a000006 	beq	234cc <vfscanf+0x880>
   234b0:	e59d1008 	ldr	r1, [sp, #8]
   234b4:	e3510063 	cmp	r1, #99	; 0x63
   234b8:	1a0000a1 	bne	23744 <vfscanf+0xaf8>
   234bc:	e1cd03d0 	ldrd	r0, [sp, #48]	; 0x30
   234c0:	e1510003 	cmp	r1, r3
   234c4:	01500002 	cmpeq	r0, r2
   234c8:	0a00007e 	beq	236c8 <vfscanf+0xa7c>
   234cc:	e59d3020 	ldr	r3, [sp, #32]
   234d0:	e3530000 	cmp	r3, #0
   234d4:	0afffdef 	beq	22c98 <vfscanf+0x4c>
   234d8:	e1a00007 	mov	r0, r7
   234dc:	ebffed60 	bl	1ea64 <free>
   234e0:	e1a00006 	mov	r0, r6
   234e4:	ebffed5e 	bl	1ea64 <free>
   234e8:	eafffdea 	b	22c98 <vfscanf+0x4c>
   234ec:	e5cd003f 	strb	r0, [sp, #63]	; 0x3f
   234f0:	e28d103f 	add	r1, sp, #63	; 0x3f
   234f4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
   234f8:	e28d0040 	add	r0, sp, #64	; 0x40
   234fc:	e3a02001 	mov	r2, #1
   23500:	eb0008d3 	bl	25854 <mbrtowc>
   23504:	e3700002 	cmn	r0, #2
   23508:	0affffca 	beq	23438 <vfscanf+0x7ec>
   2350c:	e3700001 	cmn	r0, #1
   23510:	1a000005 	bne	2352c <vfscanf+0x8e0>
   23514:	e3a07000 	mov	r7, #0
   23518:	e59d3014 	ldr	r3, [sp, #20]
   2351c:	e3530000 	cmp	r3, #0
   23520:	03e03000 	mvneq	r3, #0
   23524:	e58d3014 	str	r3, [sp, #20]
   23528:	eaffffe7 	b	234cc <vfscanf+0x880>
   2352c:	e3560000 	cmp	r6, #0
   23530:	159d3040 	ldrne	r3, [sp, #64]	; 0x40
   23534:	1786310a 	strne	r3, [r6, sl, lsl #2]
   23538:	128aa001 	addne	sl, sl, #1
   2353c:	e59d3020 	ldr	r3, [sp, #32]
   23540:	e15a0009 	cmp	sl, r9
   23544:	13a03000 	movne	r3, #0
   23548:	02033001 	andeq	r3, r3, #1
   2354c:	e3530000 	cmp	r3, #0
   23550:	0affffb8 	beq	23438 <vfscanf+0x7ec>
   23554:	e1a09089 	lsl	r9, r9, #1
   23558:	e1a00006 	mov	r0, r6
   2355c:	e2899001 	add	r9, r9, #1
   23560:	e1a01109 	lsl	r1, r9, #2
   23564:	ebffeebb 	bl	1f058 <realloc>
   23568:	e2507000 	subs	r7, r0, #0
   2356c:	0affffe9 	beq	23518 <vfscanf+0x8cc>
   23570:	e1a06007 	mov	r6, r7
   23574:	eaffffaf 	b	23438 <vfscanf+0x7ec>
   23578:	e3530000 	cmp	r3, #0
   2357c:	0a000020 	beq	23604 <vfscanf+0x9b8>
   23580:	e1a00009 	mov	r0, r9
   23584:	ebffedd5 	bl	1ece0 <malloc>
   23588:	e2507000 	subs	r7, r0, #0
   2358c:	0affff6d 	beq	23348 <vfscanf+0x6fc>
   23590:	e3a0a000 	mov	sl, #0
   23594:	e5943004 	ldr	r3, [r4, #4]
   23598:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   2359c:	e1530002 	cmp	r3, r2
   235a0:	32832001 	addcc	r2, r3, #1
   235a4:	35842004 	strcc	r2, [r4, #4]
   235a8:	35d30000 	ldrbcc	r0, [r3]
   235ac:	3a000001 	bcc	235b8 <vfscanf+0x96c>
   235b0:	e1a00004 	mov	r0, r4
   235b4:	eb00080c 	bl	255ec <__shgetc>
   235b8:	e28d3e15 	add	r3, sp, #336	; 0x150
   235bc:	e0833000 	add	r3, r3, r0
   235c0:	e5536103 	ldrb	r6, [r3, #-259]	; 0xfffffefd
   235c4:	e3560000 	cmp	r6, #0
   235c8:	0affffac 	beq	23480 <vfscanf+0x834>
   235cc:	e28a6001 	add	r6, sl, #1
   235d0:	e7c7000a 	strb	r0, [r7, sl]
   235d4:	e1590006 	cmp	r9, r6
   235d8:	1a000007 	bne	235fc <vfscanf+0x9b0>
   235dc:	e1a09089 	lsl	r9, r9, #1
   235e0:	e1a00007 	mov	r0, r7
   235e4:	e2899001 	add	r9, r9, #1
   235e8:	e1a01009 	mov	r1, r9
   235ec:	ebffee99 	bl	1f058 <realloc>
   235f0:	e3500000 	cmp	r0, #0
   235f4:	0affff54 	beq	2334c <vfscanf+0x700>
   235f8:	e1a07000 	mov	r7, r0
   235fc:	e1a0a006 	mov	sl, r6
   23600:	eaffffe3 	b	23594 <vfscanf+0x948>
   23604:	e3580000 	cmp	r8, #0
   23608:	159da020 	ldrne	sl, [sp, #32]
   2360c:	1a000012 	bne	2365c <vfscanf+0xa10>
   23610:	e5943004 	ldr	r3, [r4, #4]
   23614:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23618:	e1530002 	cmp	r3, r2
   2361c:	32832001 	addcc	r2, r3, #1
   23620:	35842004 	strcc	r2, [r4, #4]
   23624:	35d30000 	ldrbcc	r0, [r3]
   23628:	3a000001 	bcc	23634 <vfscanf+0x9e8>
   2362c:	e1a00004 	mov	r0, r4
   23630:	eb0007ed 	bl	255ec <__shgetc>
   23634:	e28d3e15 	add	r3, sp, #336	; 0x150
   23638:	e0830000 	add	r0, r3, r0
   2363c:	e5506103 	ldrb	r6, [r0, #-259]	; 0xfffffefd
   23640:	e3560000 	cmp	r6, #0
   23644:	1afffff1 	bne	23610 <vfscanf+0x9c4>
   23648:	e1a07006 	mov	r7, r6
   2364c:	e1a0a006 	mov	sl, r6
   23650:	eaffff8a 	b	23480 <vfscanf+0x834>
   23654:	e7c8000a 	strb	r0, [r8, sl]
   23658:	e28aa001 	add	sl, sl, #1
   2365c:	e5943004 	ldr	r3, [r4, #4]
   23660:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23664:	e1530002 	cmp	r3, r2
   23668:	32832001 	addcc	r2, r3, #1
   2366c:	35842004 	strcc	r2, [r4, #4]
   23670:	35d30000 	ldrbcc	r0, [r3]
   23674:	3a000001 	bcc	23680 <vfscanf+0xa34>
   23678:	e1a00004 	mov	r0, r4
   2367c:	eb0007da 	bl	255ec <__shgetc>
   23680:	e28d3e15 	add	r3, sp, #336	; 0x150
   23684:	e0833000 	add	r3, r3, r0
   23688:	e5536103 	ldrb	r6, [r3, #-259]	; 0xfffffefd
   2368c:	e3560000 	cmp	r6, #0
   23690:	1affffef 	bne	23654 <vfscanf+0xa08>
   23694:	e1a07008 	mov	r7, r8
   23698:	eaffff78 	b	23480 <vfscanf+0x834>
   2369c:	e3a01008 	mov	r1, #8
   236a0:	eafffeee 	b	23260 <vfscanf+0x614>
   236a4:	e3a0100a 	mov	r1, #10
   236a8:	eafffeec 	b	23260 <vfscanf+0x614>
   236ac:	e3a01000 	mov	r1, #0
   236b0:	eafffeea 	b	23260 <vfscanf+0x614>
   236b4:	e1cd20d8 	ldrd	r2, [sp, #8]
   236b8:	e1c820f0 	strd	r2, [r8]
   236bc:	ea000010 	b	23704 <vfscanf+0xab8>
   236c0:	e1a07000 	mov	r7, r0
   236c4:	eaffff93 	b	23518 <vfscanf+0x8cc>
   236c8:	e59d3020 	ldr	r3, [sp, #32]
   236cc:	e3530000 	cmp	r3, #0
   236d0:	0a00000b 	beq	23704 <vfscanf+0xab8>
   236d4:	e59d3008 	ldr	r3, [sp, #8]
   236d8:	e35b0001 	cmp	fp, #1
   236dc:	05886000 	streq	r6, [r8]
   236e0:	15887000 	strne	r7, [r8]
   236e4:	e3530063 	cmp	r3, #99	; 0x63
   236e8:	0a000005 	beq	23704 <vfscanf+0xab8>
   236ec:	e3560000 	cmp	r6, #0
   236f0:	13a03000 	movne	r3, #0
   236f4:	1786310a 	strne	r3, [r6, sl, lsl #2]
   236f8:	e3570000 	cmp	r7, #0
   236fc:	13a03000 	movne	r3, #0
   23700:	17c7300a 	strbne	r3, [r7, sl]
   23704:	e994000a 	ldmib	r4, {r1, r3}
   23708:	e0411003 	sub	r1, r1, r3
   2370c:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   23710:	e0922001 	adds	r2, r2, r1
   23714:	e0a33fc1 	adc	r3, r3, r1, asr #31
   23718:	e59d1018 	ldr	r1, [sp, #24]
   2371c:	e0911002 	adds	r1, r1, r2
   23720:	e58d1018 	str	r1, [sp, #24]
   23724:	e59d101c 	ldr	r1, [sp, #28]
   23728:	e0a13003 	adc	r3, r1, r3
   2372c:	e3580000 	cmp	r8, #0
   23730:	e58d301c 	str	r3, [sp, #28]
   23734:	159d3014 	ldrne	r3, [sp, #20]
   23738:	12833001 	addne	r3, r3, #1
   2373c:	158d3014 	strne	r3, [sp, #20]
   23740:	eafffd8a 	b	22d70 <vfscanf+0x124>
   23744:	e59d3020 	ldr	r3, [sp, #32]
   23748:	e3530000 	cmp	r3, #0
   2374c:	0affffe6 	beq	236ec <vfscanf+0xaa0>
   23750:	eaffffdf 	b	236d4 <vfscanf+0xa88>

00023754 <__memrchr>:
   23754:	e6ef1071 	uxtb	r1, r1
   23758:	e0802002 	add	r2, r0, r2
   2375c:	e1a03000 	mov	r3, r0
   23760:	e1520003 	cmp	r2, r3
   23764:	1a000001 	bne	23770 <__memrchr+0x1c>
   23768:	e3a00000 	mov	r0, #0
   2376c:	e12fff1e 	bx	lr
   23770:	e552c001 	ldrb	ip, [r2, #-1]
   23774:	e2422001 	sub	r2, r2, #1
   23778:	e15c0001 	cmp	ip, r1
   2377c:	e1a00002 	mov	r0, r2
   23780:	1afffff6 	bne	23760 <__memrchr+0xc>
   23784:	e12fff1e 	bx	lr

00023788 <__stpcpy>:
   23788:	e021c000 	eor	ip, r1, r0
   2378c:	e31c0003 	tst	ip, #3
   23790:	e92d4010 	push	{r4, lr}
   23794:	0a000018 	beq	237fc <__stpcpy+0x74>
   23798:	e2411001 	sub	r1, r1, #1
   2379c:	e1a03000 	mov	r3, r0
   237a0:	e5f12001 	ldrb	r2, [r1, #1]!
   237a4:	e1a00003 	mov	r0, r3
   237a8:	e3520000 	cmp	r2, #0
   237ac:	e4c32001 	strb	r2, [r3], #1
   237b0:	1afffffa 	bne	237a0 <__stpcpy+0x18>
   237b4:	e8bd8010 	pop	{r4, pc}
   237b8:	e4d31001 	ldrb	r1, [r3], #1
   237bc:	e3510000 	cmp	r1, #0
   237c0:	e4c21001 	strb	r1, [r2], #1
   237c4:	08bd8010 	popeq	{r4, pc}
   237c8:	e3130003 	tst	r3, #3
   237cc:	e1a00002 	mov	r0, r2
   237d0:	1afffff8 	bne	237b8 <__stpcpy+0x30>
   237d4:	e59f402c 	ldr	r4, [pc, #44]	; 23808 <__stpcpy+0x80>
   237d8:	e59fe02c 	ldr	lr, [pc, #44]	; 2380c <__stpcpy+0x84>
   237dc:	e1a01003 	mov	r1, r3
   237e0:	e493c004 	ldr	ip, [r3], #4
   237e4:	e08c2004 	add	r2, ip, r4
   237e8:	e1c2200c 	bic	r2, r2, ip
   237ec:	e112000e 	tst	r2, lr
   237f0:	1affffe8 	bne	23798 <__stpcpy+0x10>
   237f4:	e480c004 	str	ip, [r0], #4
   237f8:	eafffff7 	b	237dc <__stpcpy+0x54>
   237fc:	e1a03001 	mov	r3, r1
   23800:	e1a02000 	mov	r2, r0
   23804:	eaffffef 	b	237c8 <__stpcpy+0x40>
   23808:	fefefeff 	mrc2	14, 7, pc, cr14, cr15, {7}
   2380c:	80808080 	addhi	r8, r0, r0, lsl #1

00023810 <__set_thread_area>:
   23810:	e59f300c 	ldr	r3, [pc, #12]	; 23824 <__set_thread_area+0x14>
   23814:	e1a01000 	mov	r1, r0
   23818:	e59f0008 	ldr	r0, [pc, #8]	; 23828 <__set_thread_area+0x18>
   2381c:	e5933000 	ldr	r3, [r3]
   23820:	e12fff13 	bx	r3
   23824:	00149044 	andseq	r9, r4, r4, asr #32
   23828:	000f0005 	andeq	r0, pc, r5
   2382c:	00000000 	andeq	r0, r0, r0

00023830 <scanexp>:
   23830:	e5903004 	ldr	r3, [r0, #4]
   23834:	e5902068 	ldr	r2, [r0, #104]	; 0x68
   23838:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2383c:	e1530002 	cmp	r3, r2
   23840:	32832001 	addcc	r2, r3, #1
   23844:	e1a04000 	mov	r4, r0
   23848:	35802004 	strcc	r2, [r0, #4]
   2384c:	e1a07001 	mov	r7, r1
   23850:	35d30000 	ldrbcc	r0, [r3]
   23854:	3a000000 	bcc	2385c <scanexp+0x2c>
   23858:	eb000763 	bl	255ec <__shgetc>
   2385c:	e240302b 	sub	r3, r0, #43	; 0x2b
   23860:	e3d33002 	bics	r3, r3, #2
   23864:	13a05000 	movne	r5, #0
   23868:	1a000014 	bne	238c0 <scanexp+0x90>
   2386c:	e5943004 	ldr	r3, [r4, #4]
   23870:	e240502d 	sub	r5, r0, #45	; 0x2d
   23874:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23878:	e16f5f15 	clz	r5, r5
   2387c:	e1530002 	cmp	r3, r2
   23880:	e1a052a5 	lsr	r5, r5, #5
   23884:	32832001 	addcc	r2, r3, #1
   23888:	35842004 	strcc	r2, [r4, #4]
   2388c:	35d30000 	ldrbcc	r0, [r3]
   23890:	3a000001 	bcc	2389c <scanexp+0x6c>
   23894:	e1a00004 	mov	r0, r4
   23898:	eb000753 	bl	255ec <__shgetc>
   2389c:	e2403030 	sub	r3, r0, #48	; 0x30
   238a0:	e3570000 	cmp	r7, #0
   238a4:	13530009 	cmpne	r3, #9
   238a8:	9a000004 	bls	238c0 <scanexp+0x90>
   238ac:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   238b0:	e3530000 	cmp	r3, #0
   238b4:	15943004 	ldrne	r3, [r4, #4]
   238b8:	12433001 	subne	r3, r3, #1
   238bc:	15843004 	strne	r3, [r4, #4]
   238c0:	e2403030 	sub	r3, r0, #48	; 0x30
   238c4:	e3530009 	cmp	r3, #9
   238c8:	9a000009 	bls	238f4 <scanexp+0xc4>
   238cc:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   238d0:	e3a06000 	mov	r6, #0
   238d4:	e3a07102 	mov	r7, #-2147483648	; 0x80000000
   238d8:	e3530000 	cmp	r3, #0
   238dc:	15943004 	ldrne	r3, [r4, #4]
   238e0:	12433001 	subne	r3, r3, #1
   238e4:	15843004 	strne	r3, [r4, #4]
   238e8:	e1a00006 	mov	r0, r6
   238ec:	e1a01007 	mov	r1, r7
   238f0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   238f4:	e59f712c 	ldr	r7, [pc, #300]	; 23a28 <scanexp+0x1f8>
   238f8:	e3a06000 	mov	r6, #0
   238fc:	e3a0800a 	mov	r8, #10
   23900:	e5943004 	ldr	r3, [r4, #4]
   23904:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23908:	e0260698 	mla	r6, r8, r6, r0
   2390c:	e1530002 	cmp	r3, r2
   23910:	32832001 	addcc	r2, r3, #1
   23914:	35842004 	strcc	r2, [r4, #4]
   23918:	35d30000 	ldrbcc	r0, [r3]
   2391c:	e2466030 	sub	r6, r6, #48	; 0x30
   23920:	3a000001 	bcc	2392c <scanexp+0xfc>
   23924:	e1a00004 	mov	r0, r4
   23928:	eb00072f 	bl	255ec <__shgetc>
   2392c:	e2403030 	sub	r3, r0, #48	; 0x30
   23930:	e3530009 	cmp	r3, #9
   23934:	83a03000 	movhi	r3, #0
   23938:	93a03001 	movls	r3, #1
   2393c:	e1560007 	cmp	r6, r7
   23940:	a3a03000 	movge	r3, #0
   23944:	e3530000 	cmp	r3, #0
   23948:	1affffec 	bne	23900 <scanexp+0xd0>
   2394c:	e28f90cc 	add	r9, pc, #204	; 0xcc
   23950:	e1c980d0 	ldrd	r8, [r9]
   23954:	e1a07fc6 	asr	r7, r6, #31
   23958:	e3a0a00a 	mov	sl, #10
   2395c:	e1580006 	cmp	r8, r6
   23960:	e2403030 	sub	r3, r0, #48	; 0x30
   23964:	e0d92007 	sbcs	r2, r9, r7
   23968:	e5941068 	ldr	r1, [r4, #104]	; 0x68
   2396c:	a3a02001 	movge	r2, #1
   23970:	b3a02000 	movlt	r2, #0
   23974:	e3530009 	cmp	r3, #9
   23978:	83a03000 	movhi	r3, #0
   2397c:	92023001 	andls	r3, r2, #1
   23980:	e3530000 	cmp	r3, #0
   23984:	1a00000c 	bne	239bc <scanexp+0x18c>
   23988:	e2400030 	sub	r0, r0, #48	; 0x30
   2398c:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23990:	e3500009 	cmp	r0, #9
   23994:	9a000017 	bls	239f8 <scanexp+0x1c8>
   23998:	e3520000 	cmp	r2, #0
   2399c:	15943004 	ldrne	r3, [r4, #4]
   239a0:	12433001 	subne	r3, r3, #1
   239a4:	15843004 	strne	r3, [r4, #4]
   239a8:	e3550000 	cmp	r5, #0
   239ac:	0affffcd 	beq	238e8 <scanexp+0xb8>
   239b0:	e2766000 	rsbs	r6, r6, #0
   239b4:	e2e77000 	rsc	r7, r7, #0
   239b8:	eaffffca 	b	238e8 <scanexp+0xb8>
   239bc:	e0832a96 	umull	r2, r3, r6, sl
   239c0:	e0922000 	adds	r2, r2, r0
   239c4:	e023379a 	mla	r3, sl, r7, r3
   239c8:	e0a33fc0 	adc	r3, r3, r0, asr #31
   239cc:	e2526030 	subs	r6, r2, #48	; 0x30
   239d0:	e2c37000 	sbc	r7, r3, #0
   239d4:	e5943004 	ldr	r3, [r4, #4]
   239d8:	e1530001 	cmp	r3, r1
   239dc:	32832001 	addcc	r2, r3, #1
   239e0:	35842004 	strcc	r2, [r4, #4]
   239e4:	35d30000 	ldrbcc	r0, [r3]
   239e8:	3affffdb 	bcc	2395c <scanexp+0x12c>
   239ec:	e1a00004 	mov	r0, r4
   239f0:	eb0006fd 	bl	255ec <__shgetc>
   239f4:	eaffffd8 	b	2395c <scanexp+0x12c>
   239f8:	e5943004 	ldr	r3, [r4, #4]
   239fc:	e1530002 	cmp	r3, r2
   23a00:	32832001 	addcc	r2, r3, #1
   23a04:	35842004 	strcc	r2, [r4, #4]
   23a08:	35d30000 	ldrbcc	r0, [r3]
   23a0c:	3affffdd 	bcc	23988 <scanexp+0x158>
   23a10:	e1a00004 	mov	r0, r4
   23a14:	eb0006f4 	bl	255ec <__shgetc>
   23a18:	eaffffda 	b	23988 <scanexp+0x158>
   23a1c:	e320f000 	nop	{0}
   23a20:	7ae147ad 	bvc	ff8758dc <__bss_end__+0xff72c894>
   23a24:	0147ae14 	cmpeq	r7, r4, lsl lr
   23a28:	0ccccccc 	stcleq	12, cr12, [ip], {204}	; 0xcc
   23a2c:	00000000 	andeq	r0, r0, r0

00023a30 <decfloat>:
   23a30:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a34:	e24ddf8b 	sub	sp, sp, #556	; 0x22c
   23a38:	e1a04000 	mov	r4, r0
   23a3c:	e1a00001 	mov	r0, r1
   23a40:	e58d301c 	str	r3, [sp, #28]
   23a44:	e59d3250 	ldr	r3, [sp, #592]	; 0x250
   23a48:	e58d200c 	str	r2, [sp, #12]
   23a4c:	e58d3010 	str	r3, [sp, #16]
   23a50:	e59d3254 	ldr	r3, [sp, #596]	; 0x254
   23a54:	e58d3000 	str	r3, [sp]
   23a58:	e3a03000 	mov	r3, #0
   23a5c:	e3500030 	cmp	r0, #48	; 0x30
   23a60:	0a000057 	beq	23bc4 <decfloat+0x194>
   23a64:	e350002e 	cmp	r0, #46	; 0x2e
   23a68:	13a02000 	movne	r2, #0
   23a6c:	13a06000 	movne	r6, #0
   23a70:	13a07000 	movne	r7, #0
   23a74:	1a00000f 	bne	23ab8 <decfloat+0x88>
   23a78:	e5942004 	ldr	r2, [r4, #4]
   23a7c:	e5941068 	ldr	r1, [r4, #104]	; 0x68
   23a80:	e1520001 	cmp	r2, r1
   23a84:	32821001 	addcc	r1, r2, #1
   23a88:	35841004 	strcc	r1, [r4, #4]
   23a8c:	35d20000 	ldrbcc	r0, [r2]
   23a90:	3a000003 	bcc	23aa4 <decfloat+0x74>
   23a94:	e1a00004 	mov	r0, r4
   23a98:	e58d3018 	str	r3, [sp, #24]
   23a9c:	eb0006d2 	bl	255ec <__shgetc>
   23aa0:	e59d3018 	ldr	r3, [sp, #24]
   23aa4:	e3a06000 	mov	r6, #0
   23aa8:	e3a07000 	mov	r7, #0
   23aac:	e3500030 	cmp	r0, #48	; 0x30
   23ab0:	0a00004e 	beq	23bf0 <decfloat+0x1c0>
   23ab4:	e3a02001 	mov	r2, #1
   23ab8:	e3a09000 	mov	r9, #0
   23abc:	e3a0a000 	mov	sl, #0
   23ac0:	e3a0b000 	mov	fp, #0
   23ac4:	e1a08009 	mov	r8, r9
   23ac8:	e1a05009 	mov	r5, r9
   23acc:	e58d9028 	str	r9, [sp, #40]	; 0x28
   23ad0:	e2401030 	sub	r1, r0, #48	; 0x30
   23ad4:	e350002e 	cmp	r0, #46	; 0x2e
   23ad8:	13510009 	cmpne	r1, #9
   23adc:	9a000050 	bls	23c24 <decfloat+0x1f4>
   23ae0:	e3520000 	cmp	r2, #0
   23ae4:	01a0600a 	moveq	r6, sl
   23ae8:	01a0700b 	moveq	r7, fp
   23aec:	e3530000 	cmp	r3, #0
   23af0:	0a00028d 	beq	2452c <decfloat+0xafc>
   23af4:	e3802020 	orr	r2, r0, #32
   23af8:	e3520065 	cmp	r2, #101	; 0x65
   23afc:	1a00029f 	bne	24580 <decfloat+0xb50>
   23b00:	e59d1000 	ldr	r1, [sp]
   23b04:	e1a00004 	mov	r0, r4
   23b08:	ebffff48 	bl	23830 <scanexp>
   23b0c:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
   23b10:	e1a02000 	mov	r2, r0
   23b14:	03500000 	cmpeq	r0, #0
   23b18:	e1a03001 	mov	r3, r1
   23b1c:	1a000009 	bne	23b48 <decfloat+0x118>
   23b20:	e59d3000 	ldr	r3, [sp]
   23b24:	e3530000 	cmp	r3, #0
   23b28:	0a00028c 	beq	24560 <decfloat+0xb30>
   23b2c:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   23b30:	e3a02000 	mov	r2, #0
   23b34:	e3530000 	cmp	r3, #0
   23b38:	15943004 	ldrne	r3, [r4, #4]
   23b3c:	12433001 	subne	r3, r3, #1
   23b40:	15843004 	strne	r3, [r4, #4]
   23b44:	e3a03000 	mov	r3, #0
   23b48:	e0966002 	adds	r6, r6, r2
   23b4c:	e0a77003 	adc	r7, r7, r3
   23b50:	e59d0010 	ldr	r0, [sp, #16]
   23b54:	eb000b9e 	bl	269d4 <__aeabi_i2d>
   23b58:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
   23b5c:	e3540000 	cmp	r4, #0
   23b60:	e1a02000 	mov	r2, r0
   23b64:	e1a03001 	mov	r3, r1
   23b68:	e1cd20f0 	strd	r2, [sp]
   23b6c:	03a02000 	moveq	r2, #0
   23b70:	03a03000 	moveq	r3, #0
   23b74:	0a00006f 	beq	23d38 <decfloat+0x308>
   23b78:	e15b0007 	cmp	fp, r7
   23b7c:	015a0006 	cmpeq	sl, r6
   23b80:	03a03001 	moveq	r3, #1
   23b84:	13a03000 	movne	r3, #0
   23b88:	e35a000a 	cmp	sl, #10
   23b8c:	e2db2000 	sbcs	r2, fp, #0
   23b90:	b2033001 	andlt	r3, r3, #1
   23b94:	a3a03000 	movge	r3, #0
   23b98:	e3530000 	cmp	r3, #0
   23b9c:	0a000053 	beq	23cf0 <decfloat+0x2c0>
   23ba0:	e59d300c 	ldr	r3, [sp, #12]
   23ba4:	e353001e 	cmp	r3, #30
   23ba8:	ca000001 	bgt	23bb4 <decfloat+0x184>
   23bac:	e1b03334 	lsrs	r3, r4, r3
   23bb0:	1a00004e 	bne	23cf0 <decfloat+0x2c0>
   23bb4:	e1a00004 	mov	r0, r4
   23bb8:	eb000b7c 	bl	269b0 <__aeabi_ui2d>
   23bbc:	e1cd20d0 	ldrd	r2, [sp]
   23bc0:	ea00005c 	b	23d38 <decfloat+0x308>
   23bc4:	e5943004 	ldr	r3, [r4, #4]
   23bc8:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23bcc:	e1530002 	cmp	r3, r2
   23bd0:	32832001 	addcc	r2, r3, #1
   23bd4:	35842004 	strcc	r2, [r4, #4]
   23bd8:	35d30000 	ldrbcc	r0, [r3]
   23bdc:	3a000001 	bcc	23be8 <decfloat+0x1b8>
   23be0:	e1a00004 	mov	r0, r4
   23be4:	eb000680 	bl	255ec <__shgetc>
   23be8:	e3a03001 	mov	r3, #1
   23bec:	eaffff9a 	b	23a5c <decfloat+0x2c>
   23bf0:	e5943004 	ldr	r3, [r4, #4]
   23bf4:	e2566001 	subs	r6, r6, #1
   23bf8:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   23bfc:	e2c77000 	sbc	r7, r7, #0
   23c00:	e1530002 	cmp	r3, r2
   23c04:	32832001 	addcc	r2, r3, #1
   23c08:	35842004 	strcc	r2, [r4, #4]
   23c0c:	35d30000 	ldrbcc	r0, [r3]
   23c10:	3a000001 	bcc	23c1c <decfloat+0x1ec>
   23c14:	e1a00004 	mov	r0, r4
   23c18:	eb000673 	bl	255ec <__shgetc>
   23c1c:	e3a03001 	mov	r3, #1
   23c20:	eaffffa1 	b	23aac <decfloat+0x7c>
   23c24:	e350002e 	cmp	r0, #46	; 0x2e
   23c28:	1a000012 	bne	23c78 <decfloat+0x248>
   23c2c:	e3520000 	cmp	r2, #0
   23c30:	1affffad 	bne	23aec <decfloat+0xbc>
   23c34:	e1a0600a 	mov	r6, sl
   23c38:	e1a0700b 	mov	r7, fp
   23c3c:	e3a02001 	mov	r2, #1
   23c40:	e5941004 	ldr	r1, [r4, #4]
   23c44:	e5940068 	ldr	r0, [r4, #104]	; 0x68
   23c48:	e1510000 	cmp	r1, r0
   23c4c:	32810001 	addcc	r0, r1, #1
   23c50:	35840004 	strcc	r0, [r4, #4]
   23c54:	35d10000 	ldrbcc	r0, [r1]
   23c58:	3affff9c 	bcc	23ad0 <decfloat+0xa0>
   23c5c:	e1a00004 	mov	r0, r4
   23c60:	e58d2020 	str	r2, [sp, #32]
   23c64:	e58d3018 	str	r3, [sp, #24]
   23c68:	eb00065f 	bl	255ec <__shgetc>
   23c6c:	e59d2020 	ldr	r2, [sp, #32]
   23c70:	e59d3018 	ldr	r3, [sp, #24]
   23c74:	eaffff95 	b	23ad0 <decfloat+0xa0>
   23c78:	e29aa001 	adds	sl, sl, #1
   23c7c:	e2abb000 	adc	fp, fp, #0
   23c80:	e358007c 	cmp	r8, #124	; 0x7c
   23c84:	ca000012 	bgt	23cd4 <decfloat+0x2a4>
   23c88:	e3500030 	cmp	r0, #48	; 0x30
   23c8c:	11a0900a 	movne	r9, sl
   23c90:	e3550000 	cmp	r5, #0
   23c94:	0a000004 	beq	23cac <decfloat+0x27c>
   23c98:	e28d3f8a 	add	r3, sp, #552	; 0x228
   23c9c:	e3a0000a 	mov	r0, #10
   23ca0:	e0833108 	add	r3, r3, r8, lsl #2
   23ca4:	e5133200 	ldr	r3, [r3, #-512]	; 0xfffffe00
   23ca8:	e0211390 	mla	r1, r0, r3, r1
   23cac:	e2855001 	add	r5, r5, #1
   23cb0:	e28d3f8a 	add	r3, sp, #552	; 0x228
   23cb4:	e3550009 	cmp	r5, #9
   23cb8:	e0833108 	add	r3, r3, r8, lsl #2
   23cbc:	02888001 	addeq	r8, r8, #1
   23cc0:	03a05000 	moveq	r5, #0
   23cc4:	e5031200 	str	r1, [r3, #-512]	; 0xfffffe00
   23cc8:	03a03001 	moveq	r3, #1
   23ccc:	13a03001 	movne	r3, #1
   23cd0:	eaffffda 	b	23c40 <decfloat+0x210>
   23cd4:	e3500030 	cmp	r0, #48	; 0x30
   23cd8:	0affffd8 	beq	23c40 <decfloat+0x210>
   23cdc:	e59d1218 	ldr	r1, [sp, #536]	; 0x218
   23ce0:	e300945c 	movw	r9, #1116	; 0x45c
   23ce4:	e3811001 	orr	r1, r1, #1
   23ce8:	e58d1218 	str	r1, [sp, #536]	; 0x218
   23cec:	eaffffd3 	b	23c40 <decfloat+0x210>
   23cf0:	e59d301c 	ldr	r3, [sp, #28]
   23cf4:	e0832fa3 	add	r2, r3, r3, lsr #31
   23cf8:	e1a020c2 	asr	r2, r2, #1
   23cfc:	e2622000 	rsb	r2, r2, #0
   23d00:	e1520006 	cmp	r2, r6
   23d04:	e1a03fc2 	asr	r3, r2, #31
   23d08:	e0d33007 	sbcs	r3, r3, r7
   23d0c:	aa00000b 	bge	23d40 <decfloat+0x310>
   23d10:	e59f35a4 	ldr	r3, [pc, #1444]	; 242bc <decfloat+0x88c>
   23d14:	e3a02022 	mov	r2, #34	; 0x22
   23d18:	ebffb977 	bl	122fc <__aeabi_read_tp>
   23d1c:	e7832000 	str	r2, [r3, r0]
   23d20:	e3e02000 	mvn	r2, #0
   23d24:	e59f355c 	ldr	r3, [pc, #1372]	; 24288 <decfloat+0x858>
   23d28:	e1cd00d0 	ldrd	r0, [sp]
   23d2c:	eb000b61 	bl	26ab8 <__aeabi_dmul>
   23d30:	e59f3550 	ldr	r3, [pc, #1360]	; 24288 <decfloat+0x858>
   23d34:	e3e02000 	mvn	r2, #0
   23d38:	eb000b5e 	bl	26ab8 <__aeabi_dmul>
   23d3c:	ea00020d 	b	24578 <decfloat+0xb48>
   23d40:	e59d301c 	ldr	r3, [sp, #28]
   23d44:	e243206a 	sub	r2, r3, #106	; 0x6a
   23d48:	e1560002 	cmp	r6, r2
   23d4c:	e1a03fc2 	asr	r3, r2, #31
   23d50:	e0d73003 	sbcs	r3, r7, r3
   23d54:	aa00000a 	bge	23d84 <decfloat+0x354>
   23d58:	e59f355c 	ldr	r3, [pc, #1372]	; 242bc <decfloat+0x88c>
   23d5c:	e3a02022 	mov	r2, #34	; 0x22
   23d60:	ebffb965 	bl	122fc <__aeabi_read_tp>
   23d64:	e7832000 	str	r2, [r3, r0]
   23d68:	e3a02000 	mov	r2, #0
   23d6c:	e3a03601 	mov	r3, #1048576	; 0x100000
   23d70:	e1cd00d0 	ldrd	r0, [sp]
   23d74:	eb000b4f 	bl	26ab8 <__aeabi_dmul>
   23d78:	e3a02000 	mov	r2, #0
   23d7c:	e3a03601 	mov	r3, #1048576	; 0x100000
   23d80:	eaffffec 	b	23d38 <decfloat+0x308>
   23d84:	e3550000 	cmp	r5, #0
   23d88:	128d3f8a 	addne	r3, sp, #552	; 0x228
   23d8c:	10832108 	addne	r2, r3, r8, lsl #2
   23d90:	13a0100a 	movne	r1, #10
   23d94:	1a00001f 	bne	23e18 <decfloat+0x3e8>
   23d98:	e3560008 	cmp	r6, #8
   23d9c:	e1a05006 	mov	r5, r6
   23da0:	b1a03006 	movlt	r3, r6
   23da4:	a3a03008 	movge	r3, #8
   23da8:	e1590003 	cmp	r9, r3
   23dac:	d3560011 	cmple	r6, #17
   23db0:	ca000033 	bgt	23e84 <decfloat+0x454>
   23db4:	e3560009 	cmp	r6, #9
   23db8:	e59d4028 	ldr	r4, [sp, #40]	; 0x28
   23dbc:	0affff7c 	beq	23bb4 <decfloat+0x184>
   23dc0:	e3560008 	cmp	r6, #8
   23dc4:	ca000017 	bgt	23e28 <decfloat+0x3f8>
   23dc8:	e1a00004 	mov	r0, r4
   23dcc:	e2655008 	rsb	r5, r5, #8
   23dd0:	eb000af6 	bl	269b0 <__aeabi_ui2d>
   23dd4:	e1cd20d0 	ldrd	r2, [sp]
   23dd8:	eb000b36 	bl	26ab8 <__aeabi_dmul>
   23ddc:	e59f34a8 	ldr	r3, [pc, #1192]	; 2428c <decfloat+0x85c>
   23de0:	e1a06000 	mov	r6, r0
   23de4:	e7930105 	ldr	r0, [r3, r5, lsl #2]
   23de8:	e1a07001 	mov	r7, r1
   23dec:	eb000af8 	bl	269d4 <__aeabi_i2d>
   23df0:	e1a02000 	mov	r2, r0
   23df4:	e1a03001 	mov	r3, r1
   23df8:	e1a00006 	mov	r0, r6
   23dfc:	e1a01007 	mov	r1, r7
   23e00:	eb000bc7 	bl	26d24 <__aeabi_ddiv>
   23e04:	ea0001db 	b	24578 <decfloat+0xb48>
   23e08:	e5123200 	ldr	r3, [r2, #-512]	; 0xfffffe00
   23e0c:	e2855001 	add	r5, r5, #1
   23e10:	e0030391 	mul	r3, r1, r3
   23e14:	e5023200 	str	r3, [r2, #-512]	; 0xfffffe00
   23e18:	e3550008 	cmp	r5, #8
   23e1c:	dafffff9 	ble	23e08 <decfloat+0x3d8>
   23e20:	e2888001 	add	r8, r8, #1
   23e24:	eaffffdb 	b	23d98 <decfloat+0x368>
   23e28:	e2463009 	sub	r3, r6, #9
   23e2c:	e59d200c 	ldr	r2, [sp, #12]
   23e30:	e0433103 	sub	r3, r3, r3, lsl #2
   23e34:	e0833002 	add	r3, r3, r2
   23e38:	e353001e 	cmp	r3, #30
   23e3c:	ca000001 	bgt	23e48 <decfloat+0x418>
   23e40:	e1b03334 	lsrs	r3, r4, r3
   23e44:	1a00000e 	bne	23e84 <decfloat+0x454>
   23e48:	e59f343c 	ldr	r3, [pc, #1084]	; 2428c <decfloat+0x85c>
   23e4c:	e245500a 	sub	r5, r5, #10
   23e50:	e7930105 	ldr	r0, [r3, r5, lsl #2]
   23e54:	eb000ade 	bl	269d4 <__aeabi_i2d>
   23e58:	e1a06000 	mov	r6, r0
   23e5c:	e1a00004 	mov	r0, r4
   23e60:	e1a07001 	mov	r7, r1
   23e64:	eb000ad1 	bl	269b0 <__aeabi_ui2d>
   23e68:	e1cd20d0 	ldrd	r2, [sp]
   23e6c:	eb000b11 	bl	26ab8 <__aeabi_dmul>
   23e70:	e1a02000 	mov	r2, r0
   23e74:	e1a03001 	mov	r3, r1
   23e78:	e1a00006 	mov	r0, r6
   23e7c:	e1a01007 	mov	r1, r7
   23e80:	eaffffac 	b	23d38 <decfloat+0x308>
   23e84:	e28d3028 	add	r3, sp, #40	; 0x28
   23e88:	e1a04008 	mov	r4, r8
   23e8c:	e2488001 	sub	r8, r8, #1
   23e90:	e7933108 	ldr	r3, [r3, r8, lsl #2]
   23e94:	e3530000 	cmp	r3, #0
   23e98:	0afffff9 	beq	23e84 <decfloat+0x454>
   23e9c:	e3a01009 	mov	r1, #9
   23ea0:	e1a00005 	mov	r0, r5
   23ea4:	eb000a0b 	bl	266d8 <__aeabi_idivmod>
   23ea8:	e251b000 	subs	fp, r1, #0
   23eac:	0a000012 	beq	23efc <decfloat+0x4cc>
   23eb0:	e3550000 	cmp	r5, #0
   23eb4:	e59f33d0 	ldr	r3, [pc, #976]	; 2428c <decfloat+0x85c>
   23eb8:	b28bb009 	addlt	fp, fp, #9
   23ebc:	e3a06000 	mov	r6, #0
   23ec0:	e26b2008 	rsb	r2, fp, #8
   23ec4:	e28d8028 	add	r8, sp, #40	; 0x28
   23ec8:	e1a07006 	mov	r7, r6
   23ecc:	e1a09006 	mov	r9, r6
   23ed0:	e793a102 	ldr	sl, [r3, r2, lsl #2]
   23ed4:	e1590004 	cmp	r9, r4
   23ed8:	1a000009 	bne	23f04 <decfloat+0x4d4>
   23edc:	e3560000 	cmp	r6, #0
   23ee0:	e26b1009 	rsb	r1, fp, #9
   23ee4:	128d3f8a 	addne	r3, sp, #552	; 0x228
   23ee8:	e0855001 	add	r5, r5, r1
   23eec:	10833104 	addne	r3, r3, r4, lsl #2
   23ef0:	12844001 	addne	r4, r4, #1
   23ef4:	e1a0b007 	mov	fp, r7
   23ef8:	15036200 	strne	r6, [r3, #-512]	; 0xfffffe00
   23efc:	e3a09000 	mov	r9, #0
   23f00:	ea000055 	b	2405c <decfloat+0x62c>
   23f04:	e5980000 	ldr	r0, [r8]
   23f08:	e1a0100a 	mov	r1, sl
   23f0c:	eb000961 	bl	26498 <__aeabi_uidivmod>
   23f10:	e0803006 	add	r3, r0, r6
   23f14:	e58d1018 	str	r1, [sp, #24]
   23f18:	e4883004 	str	r3, [r8], #4
   23f1c:	e1a0100a 	mov	r1, sl
   23f20:	e59f0368 	ldr	r0, [pc, #872]	; 24290 <decfloat+0x860>
   23f24:	e58d3010 	str	r3, [sp, #16]
   23f28:	eb000962 	bl	264b8 <__divsi3>
   23f2c:	e59d3010 	ldr	r3, [sp, #16]
   23f30:	e59d2018 	ldr	r2, [sp, #24]
   23f34:	e3530000 	cmp	r3, #0
   23f38:	01590007 	cmpeq	r9, r7
   23f3c:	e2899001 	add	r9, r9, #1
   23f40:	02877001 	addeq	r7, r7, #1
   23f44:	02455009 	subeq	r5, r5, #9
   23f48:	0207707f 	andeq	r7, r7, #127	; 0x7f
   23f4c:	e0060092 	mul	r6, r2, r0
   23f50:	eaffffdf 	b	23ed4 <decfloat+0x4a4>
   23f54:	e2448001 	sub	r8, r4, #1
   23f58:	e249901d 	sub	r9, r9, #29
   23f5c:	e208807f 	and	r8, r8, #127	; 0x7f
   23f60:	e3a0a000 	mov	sl, #0
   23f64:	e1a03108 	lsl	r3, r8, #2
   23f68:	e58d3010 	str	r3, [sp, #16]
   23f6c:	e28d3f8a 	add	r3, sp, #552	; 0x228
   23f70:	e0833108 	add	r3, r3, r8, lsl #2
   23f74:	e5133200 	ldr	r3, [r3, #-512]	; 0xfffffe00
   23f78:	e1a06e83 	lsl	r6, r3, #29
   23f7c:	e1a071a3 	lsr	r7, r3, #3
   23f80:	e096600a 	adds	r6, r6, sl
   23f84:	e28f3fbd 	add	r3, pc, #756	; 0x2f4
   23f88:	e1c320d0 	ldrd	r2, [r3]
   23f8c:	e2a77000 	adc	r7, r7, #0
   23f90:	e1570003 	cmp	r7, r3
   23f94:	01560002 	cmpeq	r6, r2
   23f98:	93a0a000 	movls	sl, #0
   23f9c:	9a000009 	bls	23fc8 <decfloat+0x598>
   23fa0:	e1a00006 	mov	r0, r6
   23fa4:	e1a01007 	mov	r1, r7
   23fa8:	eb000d46 	bl	274c8 <__aeabi_uldivmod>
   23fac:	e28f3fb3 	add	r3, pc, #716	; 0x2cc
   23fb0:	e1c320d0 	ldrd	r2, [r3]
   23fb4:	e1a01007 	mov	r1, r7
   23fb8:	e1a0a000 	mov	sl, r0
   23fbc:	e1a00006 	mov	r0, r6
   23fc0:	eb000d40 	bl	274c8 <__aeabi_uldivmod>
   23fc4:	e1a06002 	mov	r6, r2
   23fc8:	e28d3f8a 	add	r3, sp, #552	; 0x228
   23fcc:	e1a02108 	lsl	r2, r8, #2
   23fd0:	e0833002 	add	r3, r3, r2
   23fd4:	e5036200 	str	r6, [r3, #-512]	; 0xfffffe00
   23fd8:	e2443001 	sub	r3, r4, #1
   23fdc:	e203307f 	and	r3, r3, #127	; 0x7f
   23fe0:	e1530008 	cmp	r3, r8
   23fe4:	1a000006 	bne	24004 <decfloat+0x5d4>
   23fe8:	e158000b 	cmp	r8, fp
   23fec:	0a000053 	beq	24140 <decfloat+0x710>
   23ff0:	e3560000 	cmp	r6, #0
   23ff4:	01a04008 	moveq	r4, r8
   23ff8:	e2488001 	sub	r8, r8, #1
   23ffc:	e208807f 	and	r8, r8, #127	; 0x7f
   24000:	eaffffd7 	b	23f64 <decfloat+0x534>
   24004:	e158000b 	cmp	r8, fp
   24008:	1afffffa 	bne	23ff8 <decfloat+0x5c8>
   2400c:	e35a0000 	cmp	sl, #0
   24010:	0a000011 	beq	2405c <decfloat+0x62c>
   24014:	e24b1001 	sub	r1, fp, #1
   24018:	e2855009 	add	r5, r5, #9
   2401c:	e201b07f 	and	fp, r1, #127	; 0x7f
   24020:	e154000b 	cmp	r4, fp
   24024:	1a000009 	bne	24050 <decfloat+0x620>
   24028:	e2432001 	sub	r2, r3, #1
   2402c:	e28d1f8a 	add	r1, sp, #552	; 0x228
   24030:	e202207f 	and	r2, r2, #127	; 0x7f
   24034:	e0810103 	add	r0, r1, r3, lsl #2
   24038:	e1a04003 	mov	r4, r3
   2403c:	e0812102 	add	r2, r1, r2, lsl #2
   24040:	e5100200 	ldr	r0, [r0, #-512]	; 0xfffffe00
   24044:	e5121200 	ldr	r1, [r2, #-512]	; 0xfffffe00
   24048:	e1811000 	orr	r1, r1, r0
   2404c:	e5021200 	str	r1, [r2, #-512]	; 0xfffffe00
   24050:	e28d3f8a 	add	r3, sp, #552	; 0x228
   24054:	e083310b 	add	r3, r3, fp, lsl #2
   24058:	e503a200 	str	sl, [r3, #-512]	; 0xfffffe00
   2405c:	e3550011 	cmp	r5, #17
   24060:	daffffbb 	ble	23f54 <decfloat+0x524>
   24064:	e3550012 	cmp	r5, #18
   24068:	1a000005 	bne	24084 <decfloat+0x654>
   2406c:	e28d3f8a 	add	r3, sp, #552	; 0x228
   24070:	e59f221c 	ldr	r2, [pc, #540]	; 24294 <decfloat+0x864>
   24074:	e083310b 	add	r3, r3, fp, lsl #2
   24078:	e5133200 	ldr	r3, [r3, #-512]	; 0xfffffe00
   2407c:	e1530002 	cmp	r3, r2
   24080:	9affffb3 	bls	23f54 <decfloat+0x524>
   24084:	e59f8204 	ldr	r8, [pc, #516]	; 24290 <decfloat+0x860>
   24088:	e3a07001 	mov	r7, #1
   2408c:	e15b0004 	cmp	fp, r4
   24090:	0a000012 	beq	240e0 <decfloat+0x6b0>
   24094:	e28d3f8a 	add	r3, sp, #552	; 0x228
   24098:	e59f21f4 	ldr	r2, [pc, #500]	; 24294 <decfloat+0x864>
   2409c:	e083310b 	add	r3, r3, fp, lsl #2
   240a0:	e5133200 	ldr	r3, [r3, #-512]	; 0xfffffe00
   240a4:	e1530002 	cmp	r3, r2
   240a8:	9a00000c 	bls	240e0 <decfloat+0x6b0>
   240ac:	e2822001 	add	r2, r2, #1
   240b0:	e1530002 	cmp	r3, r2
   240b4:	1a00000b 	bne	240e8 <decfloat+0x6b8>
   240b8:	e28b3001 	add	r3, fp, #1
   240bc:	e203307f 	and	r3, r3, #127	; 0x7f
   240c0:	e1540003 	cmp	r4, r3
   240c4:	0a000005 	beq	240e0 <decfloat+0x6b0>
   240c8:	e28d2f8a 	add	r2, sp, #552	; 0x228
   240cc:	e0823103 	add	r3, r2, r3, lsl #2
   240d0:	e59f21c0 	ldr	r2, [pc, #448]	; 24298 <decfloat+0x868>
   240d4:	e5133200 	ldr	r3, [r3, #-512]	; 0xfffffe00
   240d8:	e1530002 	cmp	r3, r2
   240dc:	2a000001 	bcs	240e8 <decfloat+0x6b8>
   240e0:	e3550012 	cmp	r5, #18
   240e4:	0a00002e 	beq	241a4 <decfloat+0x774>
   240e8:	e355001c 	cmp	r5, #28
   240ec:	e1a0300b 	mov	r3, fp
   240f0:	e3a02000 	mov	r2, #0
   240f4:	b3a00001 	movlt	r0, #1
   240f8:	a3a00009 	movge	r0, #9
   240fc:	e1a0c017 	lsl	ip, r7, r0
   24100:	e0899000 	add	r9, r9, r0
   24104:	e24cc001 	sub	ip, ip, #1
   24108:	e1a0a058 	asr	sl, r8, r0
   2410c:	e1530004 	cmp	r3, r4
   24110:	1a00000c 	bne	24148 <decfloat+0x718>
   24114:	e3520000 	cmp	r2, #0
   24118:	0affffdb 	beq	2408c <decfloat+0x65c>
   2411c:	e2843001 	add	r3, r4, #1
   24120:	e203307f 	and	r3, r3, #127	; 0x7f
   24124:	e153000b 	cmp	r3, fp
   24128:	0a000015 	beq	24184 <decfloat+0x754>
   2412c:	e28d1f8a 	add	r1, sp, #552	; 0x228
   24130:	e0814104 	add	r4, r1, r4, lsl #2
   24134:	e5042200 	str	r2, [r4, #-512]	; 0xfffffe00
   24138:	e1a04003 	mov	r4, r3
   2413c:	eaffffd2 	b	2408c <decfloat+0x65c>
   24140:	e1a0300b 	mov	r3, fp
   24144:	eaffffb0 	b	2400c <decfloat+0x5dc>
   24148:	e28d1f8a 	add	r1, sp, #552	; 0x228
   2414c:	e0816103 	add	r6, r1, r3, lsl #2
   24150:	e5161200 	ldr	r1, [r6, #-512]	; 0xfffffe00
   24154:	e082e031 	add	lr, r2, r1, lsr r0
   24158:	e00c2001 	and	r2, ip, r1
   2415c:	e35e0000 	cmp	lr, #0
   24160:	0153000b 	cmpeq	r3, fp
   24164:	e2833001 	add	r3, r3, #1
   24168:	028b1001 	addeq	r1, fp, #1
   2416c:	02455009 	subeq	r5, r5, #9
   24170:	e002029a 	mul	r2, sl, r2
   24174:	0201b07f 	andeq	fp, r1, #127	; 0x7f
   24178:	e203307f 	and	r3, r3, #127	; 0x7f
   2417c:	e506e200 	str	lr, [r6, #-512]	; 0xfffffe00
   24180:	eaffffe1 	b	2410c <decfloat+0x6dc>
   24184:	e2443001 	sub	r3, r4, #1
   24188:	e28d2f8a 	add	r2, sp, #552	; 0x228
   2418c:	e203307f 	and	r3, r3, #127	; 0x7f
   24190:	e0823103 	add	r3, r2, r3, lsl #2
   24194:	e5132200 	ldr	r2, [r3, #-512]	; 0xfffffe00
   24198:	e3822001 	orr	r2, r2, #1
   2419c:	e5032200 	str	r2, [r3, #-512]	; 0xfffffe00
   241a0:	eaffffb9 	b	2408c <decfloat+0x65c>
   241a4:	e15b0004 	cmp	fp, r4
   241a8:	e28b5001 	add	r5, fp, #1
   241ac:	1a000005 	bne	241c8 <decfloat+0x798>
   241b0:	e205407f 	and	r4, r5, #127	; 0x7f
   241b4:	e28d2f8a 	add	r2, sp, #552	; 0x228
   241b8:	e2443001 	sub	r3, r4, #1
   241bc:	e0823103 	add	r3, r2, r3, lsl #2
   241c0:	e3a02000 	mov	r2, #0
   241c4:	e5032200 	str	r2, [r3, #-512]	; 0xfffffe00
   241c8:	e28d3f8a 	add	r3, sp, #552	; 0x228
   241cc:	e205507f 	and	r5, r5, #127	; 0x7f
   241d0:	e083310b 	add	r3, r3, fp, lsl #2
   241d4:	e5130200 	ldr	r0, [r3, #-512]	; 0xfffffe00
   241d8:	eb0009f4 	bl	269b0 <__aeabi_ui2d>
   241dc:	e3a02000 	mov	r2, #0
   241e0:	e3a03000 	mov	r3, #0
   241e4:	eb000946 	bl	26704 <__adddf3>
   241e8:	e1550004 	cmp	r5, r4
   241ec:	1a000006 	bne	2420c <decfloat+0x7dc>
   241f0:	e2844001 	add	r4, r4, #1
   241f4:	e28d2f8a 	add	r2, sp, #552	; 0x228
   241f8:	e204407f 	and	r4, r4, #127	; 0x7f
   241fc:	e2443001 	sub	r3, r4, #1
   24200:	e0823103 	add	r3, r2, r3, lsl #2
   24204:	e3a02000 	mov	r2, #0
   24208:	e5032200 	str	r2, [r3, #-512]	; 0xfffffe00
   2420c:	e3a02000 	mov	r2, #0
   24210:	e59f3084 	ldr	r3, [pc, #132]	; 2429c <decfloat+0x86c>
   24214:	eb000a27 	bl	26ab8 <__aeabi_dmul>
   24218:	e28d3f8a 	add	r3, sp, #552	; 0x228
   2421c:	e0835105 	add	r5, r3, r5, lsl #2
   24220:	e1a06000 	mov	r6, r0
   24224:	e1a07001 	mov	r7, r1
   24228:	e5150200 	ldr	r0, [r5, #-512]	; 0xfffffe00
   2422c:	eb0009df 	bl	269b0 <__aeabi_ui2d>
   24230:	e1a02006 	mov	r2, r6
   24234:	e1a03007 	mov	r3, r7
   24238:	eb000931 	bl	26704 <__adddf3>
   2423c:	e1cd20d0 	ldrd	r2, [sp]
   24240:	eb000a1c 	bl	26ab8 <__aeabi_dmul>
   24244:	e59d201c 	ldr	r2, [sp, #28]
   24248:	e2893035 	add	r3, r9, #53	; 0x35
   2424c:	e0433002 	sub	r3, r3, r2
   24250:	e59d200c 	ldr	r2, [sp, #12]
   24254:	e58d3018 	str	r3, [sp, #24]
   24258:	e1530002 	cmp	r3, r2
   2425c:	e1cd01f0 	strd	r0, [sp, #16]
   24260:	aa000016 	bge	242c0 <decfloat+0x890>
   24264:	e3530000 	cmp	r3, #0
   24268:	a1a08003 	movge	r8, r3
   2426c:	a3a0a001 	movge	sl, #1
   24270:	aa000014 	bge	242c8 <decfloat+0x898>
   24274:	e3a0a001 	mov	sl, #1
   24278:	e3a08000 	mov	r8, #0
   2427c:	ea000013 	b	242d0 <decfloat+0x8a0>
   24280:	3b9aca00 	blcc	fe6d6a88 <__bss_end__+0xfe58da40>
   24284:	00000000 	andeq	r0, r0, r0
   24288:	7fefffff 	svcvc	0x00efffff
   2428c:	0002a614 	andeq	sl, r2, r4, lsl r6
   24290:	3b9aca00 	blcc	fe6d6a98 <__bss_end__+0xfe58da50>
   24294:	0089705e 	addeq	r7, r9, lr, asr r0
   24298:	0f2f0a00 	svceq	0x002f0a00
   2429c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
   242a0:	1dcd64ff 	cfstrdne	mvd6, [sp, #1020]	; 0x3fc
   242a4:	3fd00000 	svccc	0x00d00000
   242a8:	3ff00000 	svccc	0x00f00000	; IMB
   242ac:	43400000 	movtmi	r0, #0
   242b0:	1dcd6500 	cfstr64ne	mvdx6, [sp]
   242b4:	3fe00000 	svccc	0x00e00000
   242b8:	3fe80000 	svccc	0x00e80000
   242bc:	0000000c 	andeq	r0, r0, ip
   242c0:	e59d800c 	ldr	r8, [sp, #12]
   242c4:	e3a0a000 	mov	sl, #0
   242c8:	e3580034 	cmp	r8, #52	; 0x34
   242cc:	ca000084 	bgt	244e4 <decfloat+0xab4>
   242d0:	e2682069 	rsb	r2, r8, #105	; 0x69
   242d4:	e51f1034 	ldr	r1, [pc, #-52]	; 242a8 <decfloat+0x878>
   242d8:	e3a00000 	mov	r0, #0
   242dc:	eb00051f 	bl	25760 <scalbn>
   242e0:	e1cd21d0 	ldrd	r2, [sp, #16]
   242e4:	eb0004f2 	bl	256b4 <copysignl>
   242e8:	e2682035 	rsb	r2, r8, #53	; 0x35
   242ec:	e1cd02f0 	strd	r0, [sp, #32]
   242f0:	e3a00000 	mov	r0, #0
   242f4:	e51f1054 	ldr	r1, [pc, #-84]	; 242a8 <decfloat+0x878>
   242f8:	eb000518 	bl	25760 <scalbn>
   242fc:	e1a02000 	mov	r2, r0
   24300:	e1a03001 	mov	r3, r1
   24304:	e1cd01d0 	ldrd	r0, [sp, #16]
   24308:	eb0004ea 	bl	256b8 <fmodl>
   2430c:	e1a02000 	mov	r2, r0
   24310:	e1a03001 	mov	r3, r1
   24314:	e1a06000 	mov	r6, r0
   24318:	e1a07001 	mov	r7, r1
   2431c:	e1cd01d0 	ldrd	r0, [sp, #16]
   24320:	eb0008f6 	bl	26700 <__aeabi_dsub>
   24324:	e1a02000 	mov	r2, r0
   24328:	e1a03001 	mov	r3, r1
   2432c:	e1cd02d0 	ldrd	r0, [sp, #32]
   24330:	eb0008f3 	bl	26704 <__adddf3>
   24334:	e1cd01f0 	strd	r0, [sp, #16]
   24338:	e28b3002 	add	r3, fp, #2
   2433c:	e203307f 	and	r3, r3, #127	; 0x7f
   24340:	e1530004 	cmp	r3, r4
   24344:	0a00002a 	beq	243f4 <decfloat+0x9c4>
   24348:	e28d2f8a 	add	r2, sp, #552	; 0x228
   2434c:	e0823103 	add	r3, r2, r3, lsl #2
   24350:	e51f20b8 	ldr	r2, [pc, #-184]	; 242a0 <decfloat+0x870>
   24354:	e5133200 	ldr	r3, [r3, #-512]	; 0xfffffe00
   24358:	e1530002 	cmp	r3, r2
   2435c:	8a000066 	bhi	244fc <decfloat+0xacc>
   24360:	e3530000 	cmp	r3, #0
   24364:	1a000003 	bne	24378 <decfloat+0x948>
   24368:	e28b1003 	add	r1, fp, #3
   2436c:	e201107f 	and	r1, r1, #127	; 0x7f
   24370:	e1510004 	cmp	r1, r4
   24374:	0a00000a 	beq	243a4 <decfloat+0x974>
   24378:	e51f30dc 	ldr	r3, [pc, #-220]	; 242a4 <decfloat+0x874>
   2437c:	e3a02000 	mov	r2, #0
   24380:	e1cd00d0 	ldrd	r0, [sp]
   24384:	eb0009cb 	bl	26ab8 <__aeabi_dmul>
   24388:	e1a02000 	mov	r2, r0
   2438c:	e1a03001 	mov	r3, r1
   24390:	e1a00006 	mov	r0, r6
   24394:	e1a01007 	mov	r1, r7
   24398:	eb0008d9 	bl	26704 <__adddf3>
   2439c:	e1a06000 	mov	r6, r0
   243a0:	e1a07001 	mov	r7, r1
   243a4:	e2683035 	rsb	r3, r8, #53	; 0x35
   243a8:	e3530001 	cmp	r3, #1
   243ac:	da000010 	ble	243f4 <decfloat+0x9c4>
   243b0:	e51f3110 	ldr	r3, [pc, #-272]	; 242a8 <decfloat+0x878>
   243b4:	e3a02000 	mov	r2, #0
   243b8:	e1a00006 	mov	r0, r6
   243bc:	e1a01007 	mov	r1, r7
   243c0:	eb0004bc 	bl	256b8 <fmodl>
   243c4:	e3a02000 	mov	r2, #0
   243c8:	e3a03000 	mov	r3, #0
   243cc:	eb000b07 	bl	26ff0 <__aeabi_dcmpeq>
   243d0:	e3500000 	cmp	r0, #0
   243d4:	0a000006 	beq	243f4 <decfloat+0x9c4>
   243d8:	e1a00006 	mov	r0, r6
   243dc:	e1a01007 	mov	r1, r7
   243e0:	e51f3140 	ldr	r3, [pc, #-320]	; 242a8 <decfloat+0x878>
   243e4:	e3a02000 	mov	r2, #0
   243e8:	eb0008c5 	bl	26704 <__adddf3>
   243ec:	e1a06000 	mov	r6, r0
   243f0:	e1a07001 	mov	r7, r1
   243f4:	e59d301c 	ldr	r3, [sp, #28]
   243f8:	e1a02006 	mov	r2, r6
   243fc:	e1cd01d0 	ldrd	r0, [sp, #16]
   24400:	e263b000 	rsb	fp, r3, #0
   24404:	e59d300c 	ldr	r3, [sp, #12]
   24408:	e04bb003 	sub	fp, fp, r3
   2440c:	e1a03007 	mov	r3, r7
   24410:	eb0008bb 	bl	26704 <__adddf3>
   24414:	e1cd22d0 	ldrd	r2, [sp, #32]
   24418:	eb0008b8 	bl	26700 <__aeabi_dsub>
   2441c:	e2893035 	add	r3, r9, #53	; 0x35
   24420:	e24b2001 	sub	r2, fp, #1
   24424:	e3c33102 	bic	r3, r3, #-2147483648	; 0x80000000
   24428:	e1520003 	cmp	r2, r3
   2442c:	e1a04000 	mov	r4, r0
   24430:	e1a05001 	mov	r5, r1
   24434:	ca000024 	bgt	244cc <decfloat+0xa9c>
   24438:	eb00049a 	bl	256a8 <fabs>
   2443c:	e51f3198 	ldr	r3, [pc, #-408]	; 242ac <decfloat+0x87c>
   24440:	e3a02000 	mov	r2, #0
   24444:	eb000af8 	bl	2702c <__aeabi_dcmpge>
   24448:	e3500000 	cmp	r0, #0
   2444c:	0a00000d 	beq	24488 <decfloat+0xa58>
   24450:	e59d3018 	ldr	r3, [sp, #24]
   24454:	e22aa001 	eor	sl, sl, #1
   24458:	e1a00004 	mov	r0, r4
   2445c:	e1a01005 	mov	r1, r5
   24460:	e1530008 	cmp	r3, r8
   24464:	11a0800a 	movne	r8, sl
   24468:	038a8001 	orreq	r8, sl, #1
   2446c:	e3a02000 	mov	r2, #0
   24470:	e51f31c4 	ldr	r3, [pc, #-452]	; 242b4 <decfloat+0x884>
   24474:	e228a001 	eor	sl, r8, #1
   24478:	eb00098e 	bl	26ab8 <__aeabi_dmul>
   2447c:	e2899001 	add	r9, r9, #1
   24480:	e1a04000 	mov	r4, r0
   24484:	e1a05001 	mov	r5, r1
   24488:	e2893034 	add	r3, r9, #52	; 0x34
   2448c:	e28bb003 	add	fp, fp, #3
   24490:	e153000b 	cmp	r3, fp
   24494:	aa000008 	bge	244bc <decfloat+0xa8c>
   24498:	e3a02000 	mov	r2, #0
   2449c:	e3a03000 	mov	r3, #0
   244a0:	e1a00006 	mov	r0, r6
   244a4:	e1a01007 	mov	r1, r7
   244a8:	eb000ad0 	bl	26ff0 <__aeabi_dcmpeq>
   244ac:	e3500000 	cmp	r0, #0
   244b0:	13a0a000 	movne	sl, #0
   244b4:	e35a0000 	cmp	sl, #0
   244b8:	0a000003 	beq	244cc <decfloat+0xa9c>
   244bc:	e51f3208 	ldr	r3, [pc, #-520]	; 242bc <decfloat+0x88c>
   244c0:	e3a02022 	mov	r2, #34	; 0x22
   244c4:	ebffb78c 	bl	122fc <__aeabi_read_tp>
   244c8:	e7832000 	str	r2, [r3, r0]
   244cc:	e1a02009 	mov	r2, r9
   244d0:	e1a00004 	mov	r0, r4
   244d4:	e1a01005 	mov	r1, r5
   244d8:	e28ddf8b 	add	sp, sp, #556	; 0x22c
   244dc:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   244e0:	ea0004da 	b	25850 <scalbnl>
   244e4:	e3a02000 	mov	r2, #0
   244e8:	e3a03000 	mov	r3, #0
   244ec:	e1a06002 	mov	r6, r2
   244f0:	e1a07003 	mov	r7, r3
   244f4:	e1cd22f0 	strd	r2, [sp, #32]
   244f8:	eaffff8e 	b	24338 <decfloat+0x908>
   244fc:	e51f2254 	ldr	r2, [pc, #-596]	; 242b0 <decfloat+0x880>
   24500:	e1530002 	cmp	r3, r2
   24504:	13a02000 	movne	r2, #0
   24508:	1a000005 	bne	24524 <decfloat+0xaf4>
   2450c:	e28b1003 	add	r1, fp, #3
   24510:	e3a02000 	mov	r2, #0
   24514:	e201107f 	and	r1, r1, #127	; 0x7f
   24518:	e1510004 	cmp	r1, r4
   2451c:	051f3270 	ldreq	r3, [pc, #-624]	; 242b4 <decfloat+0x884>
   24520:	0affff96 	beq	24380 <decfloat+0x950>
   24524:	e51f3274 	ldr	r3, [pc, #-628]	; 242b8 <decfloat+0x888>
   24528:	eaffff94 	b	24380 <decfloat+0x950>
   2452c:	e3500000 	cmp	r0, #0
   24530:	ba000006 	blt	24550 <decfloat+0xb20>
   24534:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   24538:	e3520000 	cmp	r2, #0
   2453c:	15942004 	ldrne	r2, [r4, #4]
   24540:	12422001 	subne	r2, r2, #1
   24544:	15842004 	strne	r2, [r4, #4]
   24548:	e3530000 	cmp	r3, #0
   2454c:	1afffd7f 	bne	23b50 <decfloat+0x120>
   24550:	e51f329c 	ldr	r3, [pc, #-668]	; 242bc <decfloat+0x88c>
   24554:	e3a02016 	mov	r2, #22
   24558:	ebffb767 	bl	122fc <__aeabi_read_tp>
   2455c:	e7832000 	str	r2, [r3, r0]
   24560:	e1a00004 	mov	r0, r4
   24564:	e3a02000 	mov	r2, #0
   24568:	e3a03000 	mov	r3, #0
   2456c:	eb00040a 	bl	2559c <__shlim>
   24570:	e3a00000 	mov	r0, #0
   24574:	e3a01000 	mov	r1, #0
   24578:	e28ddf8b 	add	sp, sp, #556	; 0x22c
   2457c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24580:	e3500000 	cmp	r0, #0
   24584:	aaffffea 	bge	24534 <decfloat+0xb04>
   24588:	eafffd70 	b	23b50 <decfloat+0x120>

0002458c <__floatscan>:
   2458c:	e3510002 	cmp	r1, #2
   24590:	8a00026b 	bhi	24f44 <__floatscan+0x9b8>
   24594:	e59f39d0 	ldr	r3, [pc, #2512]	; 24f6c <__floatscan+0x9e0>
   24598:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2459c:	e24dd04c 	sub	sp, sp, #76	; 0x4c
   245a0:	e19330d1 	ldrsb	r3, [r3, r1]
   245a4:	e1a01081 	lsl	r1, r1, #1
   245a8:	e1a04000 	mov	r4, r0
   245ac:	e1a06002 	mov	r6, r2
   245b0:	e58d3030 	str	r3, [sp, #48]	; 0x30
   245b4:	e59f39b4 	ldr	r3, [pc, #2484]	; 24f70 <__floatscan+0x9e4>
   245b8:	e19330f1 	ldrsh	r3, [r3, r1]
   245bc:	e58d3018 	str	r3, [sp, #24]
   245c0:	e5943004 	ldr	r3, [r4, #4]
   245c4:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   245c8:	e1530002 	cmp	r3, r2
   245cc:	32832001 	addcc	r2, r3, #1
   245d0:	35842004 	strcc	r2, [r4, #4]
   245d4:	35d35000 	ldrbcc	r5, [r3]
   245d8:	3a000002 	bcc	245e8 <__floatscan+0x5c>
   245dc:	e1a00004 	mov	r0, r4
   245e0:	eb000401 	bl	255ec <__shgetc>
   245e4:	e1a05000 	mov	r5, r0
   245e8:	e2453009 	sub	r3, r5, #9
   245ec:	e3550020 	cmp	r5, #32
   245f0:	13530004 	cmpne	r3, #4
   245f4:	9afffff1 	bls	245c0 <__floatscan+0x34>
   245f8:	e245302b 	sub	r3, r5, #43	; 0x2b
   245fc:	e3d33002 	bics	r3, r3, #2
   24600:	13a07001 	movne	r7, #1
   24604:	1a00000c 	bne	2463c <__floatscan+0xb0>
   24608:	e5943004 	ldr	r3, [r4, #4]
   2460c:	e355002d 	cmp	r5, #45	; 0x2d
   24610:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   24614:	13a07001 	movne	r7, #1
   24618:	03e07000 	mvneq	r7, #0
   2461c:	e1530002 	cmp	r3, r2
   24620:	32832001 	addcc	r2, r3, #1
   24624:	35842004 	strcc	r2, [r4, #4]
   24628:	35d35000 	ldrbcc	r5, [r3]
   2462c:	3a000002 	bcc	2463c <__floatscan+0xb0>
   24630:	e1a00004 	mov	r0, r4
   24634:	eb0003ec 	bl	255ec <__shgetc>
   24638:	e1a05000 	mov	r5, r0
   2463c:	e59f8930 	ldr	r8, [pc, #2352]	; 24f74 <__floatscan+0x9e8>
   24640:	e3a0a000 	mov	sl, #0
   24644:	e7d8200a 	ldrb	r2, [r8, sl]
   24648:	e3853020 	orr	r3, r5, #32
   2464c:	e1530002 	cmp	r3, r2
   24650:	0a000016 	beq	246b0 <__floatscan+0x124>
   24654:	e35a0003 	cmp	sl, #3
   24658:	0a000005 	beq	24674 <__floatscan+0xe8>
   2465c:	83a03001 	movhi	r3, #1
   24660:	93a03000 	movls	r3, #0
   24664:	e3560000 	cmp	r6, #0
   24668:	03a03000 	moveq	r3, #0
   2466c:	e3530000 	cmp	r3, #0
   24670:	0a000024 	beq	24708 <__floatscan+0x17c>
   24674:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   24678:	e3520000 	cmp	r2, #0
   2467c:	15943004 	ldrne	r3, [r4, #4]
   24680:	12433001 	subne	r3, r3, #1
   24684:	15843004 	strne	r3, [r4, #4]
   24688:	e3560000 	cmp	r6, #0
   2468c:	0a000016 	beq	246ec <__floatscan+0x160>
   24690:	e35a0003 	cmp	sl, #3
   24694:	9a000014 	bls	246ec <__floatscan+0x160>
   24698:	e3520000 	cmp	r2, #0
   2469c:	e24aa001 	sub	sl, sl, #1
   246a0:	15943004 	ldrne	r3, [r4, #4]
   246a4:	12433001 	subne	r3, r3, #1
   246a8:	15843004 	strne	r3, [r4, #4]
   246ac:	eafffff7 	b	24690 <__floatscan+0x104>
   246b0:	e35a0007 	cmp	sl, #7
   246b4:	0a000009 	beq	246e0 <__floatscan+0x154>
   246b8:	e5943004 	ldr	r3, [r4, #4]
   246bc:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   246c0:	e1530002 	cmp	r3, r2
   246c4:	32832001 	addcc	r2, r3, #1
   246c8:	35842004 	strcc	r2, [r4, #4]
   246cc:	35d35000 	ldrbcc	r5, [r3]
   246d0:	3a000002 	bcc	246e0 <__floatscan+0x154>
   246d4:	e1a00004 	mov	r0, r4
   246d8:	eb0003c3 	bl	255ec <__shgetc>
   246dc:	e1a05000 	mov	r5, r0
   246e0:	e28aa001 	add	sl, sl, #1
   246e4:	e35a0008 	cmp	sl, #8
   246e8:	1affffd5 	bne	24644 <__floatscan+0xb8>
   246ec:	e1a00007 	mov	r0, r7
   246f0:	eb000b14 	bl	27348 <__aeabi_i2f>
   246f4:	e59f187c 	ldr	r1, [pc, #2172]	; 24f78 <__floatscan+0x9ec>
   246f8:	eb000685 	bl	26114 <__aeabi_fmul>
   246fc:	eb0008be 	bl	269fc <__aeabi_f2d>
   24700:	e28dd04c 	add	sp, sp, #76	; 0x4c
   24704:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24708:	e35a0000 	cmp	sl, #0
   2470c:	059f8868 	ldreq	r8, [pc, #2152]	; 24f7c <__floatscan+0x9f0>
   24710:	0a000014 	beq	24768 <__floatscan+0x1dc>
   24714:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   24718:	e3530000 	cmp	r3, #0
   2471c:	15943004 	ldrne	r3, [r4, #4]
   24720:	12433001 	subne	r3, r3, #1
   24724:	15843004 	strne	r3, [r4, #4]
   24728:	ea00008d 	b	24964 <__floatscan+0x3d8>
   2472c:	e35a0002 	cmp	sl, #2
   24730:	0a000009 	beq	2475c <__floatscan+0x1d0>
   24734:	e5943004 	ldr	r3, [r4, #4]
   24738:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   2473c:	e1530002 	cmp	r3, r2
   24740:	32832001 	addcc	r2, r3, #1
   24744:	35842004 	strcc	r2, [r4, #4]
   24748:	35d35000 	ldrbcc	r5, [r3]
   2474c:	3a000002 	bcc	2475c <__floatscan+0x1d0>
   24750:	e1a00004 	mov	r0, r4
   24754:	eb0003a4 	bl	255ec <__shgetc>
   24758:	e1a05000 	mov	r5, r0
   2475c:	e28aa001 	add	sl, sl, #1
   24760:	e35a0003 	cmp	sl, #3
   24764:	0a00004c 	beq	2489c <__floatscan+0x310>
   24768:	e7d8200a 	ldrb	r2, [r8, sl]
   2476c:	e3853020 	orr	r3, r5, #32
   24770:	e1530002 	cmp	r3, r2
   24774:	0affffec 	beq	2472c <__floatscan+0x1a0>
   24778:	e35a0000 	cmp	sl, #0
   2477c:	1affffe4 	bne	24714 <__floatscan+0x188>
   24780:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
   24784:	e3550030 	cmp	r5, #48	; 0x30
   24788:	e58d301c 	str	r3, [sp, #28]
   2478c:	1a0001e4 	bne	24f24 <__floatscan+0x998>
   24790:	e5943004 	ldr	r3, [r4, #4]
   24794:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   24798:	e1530002 	cmp	r3, r2
   2479c:	32832001 	addcc	r2, r3, #1
   247a0:	35842004 	strcc	r2, [r4, #4]
   247a4:	35d30000 	ldrbcc	r0, [r3]
   247a8:	3a000001 	bcc	247b4 <__floatscan+0x228>
   247ac:	e1a00004 	mov	r0, r4
   247b0:	eb00038d 	bl	255ec <__shgetc>
   247b4:	e3800020 	orr	r0, r0, #32
   247b8:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   247bc:	e3500078 	cmp	r0, #120	; 0x78
   247c0:	1a0001d3 	bne	24f14 <__floatscan+0x988>
   247c4:	e5943004 	ldr	r3, [r4, #4]
   247c8:	e1530002 	cmp	r3, r2
   247cc:	2a000076 	bcs	249ac <__floatscan+0x420>
   247d0:	e2832001 	add	r2, r3, #1
   247d4:	e5842004 	str	r2, [r4, #4]
   247d8:	e5d30000 	ldrb	r0, [r3]
   247dc:	e3a0c000 	mov	ip, #0
   247e0:	e3500030 	cmp	r0, #48	; 0x30
   247e4:	0a000073 	beq	249b8 <__floatscan+0x42c>
   247e8:	e350002e 	cmp	r0, #46	; 0x2e
   247ec:	0a00007c 	beq	249e4 <__floatscan+0x458>
   247f0:	e3a05000 	mov	r5, #0
   247f4:	e1a0b005 	mov	fp, r5
   247f8:	e1a03005 	mov	r3, r5
   247fc:	e58d3020 	str	r3, [sp, #32]
   24800:	e3a03000 	mov	r3, #0
   24804:	e58d3034 	str	r3, [sp, #52]	; 0x34
   24808:	e3a08000 	mov	r8, #0
   2480c:	e59f376c 	ldr	r3, [pc, #1900]	; 24f80 <__floatscan+0x9f4>
   24810:	e3a09000 	mov	r9, #0
   24814:	e3a02000 	mov	r2, #0
   24818:	e1cd22f8 	strd	r2, [sp, #40]	; 0x28
   2481c:	e3a02000 	mov	r2, #0
   24820:	e3a03000 	mov	r3, #0
   24824:	e1cd20f8 	strd	r2, [sp, #8]
   24828:	e2403030 	sub	r3, r0, #48	; 0x30
   2482c:	e58d3024 	str	r3, [sp, #36]	; 0x24
   24830:	e3530009 	cmp	r3, #9
   24834:	9a000087 	bls	24a58 <__floatscan+0x4cc>
   24838:	e3802020 	orr	r2, r0, #32
   2483c:	e2422061 	sub	r2, r2, #97	; 0x61
   24840:	e3520005 	cmp	r2, #5
   24844:	9a000083 	bls	24a58 <__floatscan+0x4cc>
   24848:	e350002e 	cmp	r0, #46	; 0x2e
   2484c:	0a000083 	beq	24a60 <__floatscan+0x4d4>
   24850:	e35c0000 	cmp	ip, #0
   24854:	1a0000d5 	bne	24bb0 <__floatscan+0x624>
   24858:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   2485c:	e3530000 	cmp	r3, #0
   24860:	0a0001ba 	beq	24f50 <__floatscan+0x9c4>
   24864:	e3560000 	cmp	r6, #0
   24868:	e5943004 	ldr	r3, [r4, #4]
   2486c:	0a0000c8 	beq	24b94 <__floatscan+0x608>
   24870:	e59d2020 	ldr	r2, [sp, #32]
   24874:	e3520000 	cmp	r2, #0
   24878:	02433002 	subeq	r3, r3, #2
   2487c:	12433003 	subne	r3, r3, #3
   24880:	e5843004 	str	r3, [r4, #4]
   24884:	e1a00007 	mov	r0, r7
   24888:	eb000851 	bl	269d4 <__aeabi_i2d>
   2488c:	e3a02000 	mov	r2, #0
   24890:	e3a03000 	mov	r3, #0
   24894:	eb000887 	bl	26ab8 <__aeabi_dmul>
   24898:	eaffff98 	b	24700 <__floatscan+0x174>
   2489c:	e5943004 	ldr	r3, [r4, #4]
   248a0:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   248a4:	e1530002 	cmp	r3, r2
   248a8:	32832001 	addcc	r2, r3, #1
   248ac:	35842004 	strcc	r2, [r4, #4]
   248b0:	35d30000 	ldrbcc	r0, [r3]
   248b4:	3a000001 	bcc	248c0 <__floatscan+0x334>
   248b8:	e1a00004 	mov	r0, r4
   248bc:	eb00034a 	bl	255ec <__shgetc>
   248c0:	e2500028 	subs	r0, r0, #40	; 0x28
   248c4:	13a00001 	movne	r0, #1
   248c8:	e3500000 	cmp	r0, #0
   248cc:	03a05001 	moveq	r5, #1
   248d0:	0a000007 	beq	248f4 <__floatscan+0x368>
   248d4:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   248d8:	e3530000 	cmp	r3, #0
   248dc:	15943004 	ldrne	r3, [r4, #4]
   248e0:	12433001 	subne	r3, r3, #1
   248e4:	15843004 	strne	r3, [r4, #4]
   248e8:	e59f1694 	ldr	r1, [pc, #1684]	; 24f84 <__floatscan+0x9f8>
   248ec:	e3a00000 	mov	r0, #0
   248f0:	eaffff82 	b	24700 <__floatscan+0x174>
   248f4:	e5943004 	ldr	r3, [r4, #4]
   248f8:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   248fc:	e1530002 	cmp	r3, r2
   24900:	32832001 	addcc	r2, r3, #1
   24904:	35842004 	strcc	r2, [r4, #4]
   24908:	35d30000 	ldrbcc	r0, [r3]
   2490c:	3a000001 	bcc	24918 <__floatscan+0x38c>
   24910:	e1a00004 	mov	r0, r4
   24914:	eb000334 	bl	255ec <__shgetc>
   24918:	e3c03020 	bic	r3, r0, #32
   2491c:	e2402030 	sub	r2, r0, #48	; 0x30
   24920:	e2433041 	sub	r3, r3, #65	; 0x41
   24924:	e3520009 	cmp	r2, #9
   24928:	83530019 	cmphi	r3, #25
   2492c:	9a000001 	bls	24938 <__floatscan+0x3ac>
   24930:	e350005f 	cmp	r0, #95	; 0x5f
   24934:	1a000001 	bne	24940 <__floatscan+0x3b4>
   24938:	e2855001 	add	r5, r5, #1
   2493c:	eaffffec 	b	248f4 <__floatscan+0x368>
   24940:	e3500029 	cmp	r0, #41	; 0x29
   24944:	0affffe7 	beq	248e8 <__floatscan+0x35c>
   24948:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   2494c:	e3520000 	cmp	r2, #0
   24950:	15943004 	ldrne	r3, [r4, #4]
   24954:	12433001 	subne	r3, r3, #1
   24958:	15843004 	strne	r3, [r4, #4]
   2495c:	e3560000 	cmp	r6, #0
   24960:	1a00000e 	bne	249a0 <__floatscan+0x414>
   24964:	e59f361c 	ldr	r3, [pc, #1564]	; 24f88 <__floatscan+0x9fc>
   24968:	e3a02016 	mov	r2, #22
   2496c:	ebffb662 	bl	122fc <__aeabi_read_tp>
   24970:	e7832000 	str	r2, [r3, r0]
   24974:	e1a00004 	mov	r0, r4
   24978:	e3a02000 	mov	r2, #0
   2497c:	e3a03000 	mov	r3, #0
   24980:	eb000305 	bl	2559c <__shlim>
   24984:	e3a00000 	mov	r0, #0
   24988:	e3a01000 	mov	r1, #0
   2498c:	eaffff5b 	b	24700 <__floatscan+0x174>
   24990:	e3520000 	cmp	r2, #0
   24994:	15943004 	ldrne	r3, [r4, #4]
   24998:	12433001 	subne	r3, r3, #1
   2499c:	15843004 	strne	r3, [r4, #4]
   249a0:	e2555001 	subs	r5, r5, #1
   249a4:	2afffff9 	bcs	24990 <__floatscan+0x404>
   249a8:	eaffffce 	b	248e8 <__floatscan+0x35c>
   249ac:	e1a00004 	mov	r0, r4
   249b0:	eb00030d 	bl	255ec <__shgetc>
   249b4:	eaffff88 	b	247dc <__floatscan+0x250>
   249b8:	e5943004 	ldr	r3, [r4, #4]
   249bc:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   249c0:	e1530002 	cmp	r3, r2
   249c4:	32832001 	addcc	r2, r3, #1
   249c8:	35842004 	strcc	r2, [r4, #4]
   249cc:	35d30000 	ldrbcc	r0, [r3]
   249d0:	3a000001 	bcc	249dc <__floatscan+0x450>
   249d4:	e1a00004 	mov	r0, r4
   249d8:	eb000303 	bl	255ec <__shgetc>
   249dc:	e3a0c001 	mov	ip, #1
   249e0:	eaffff7e 	b	247e0 <__floatscan+0x254>
   249e4:	e5942004 	ldr	r2, [r4, #4]
   249e8:	e5941068 	ldr	r1, [r4, #104]	; 0x68
   249ec:	e1520001 	cmp	r2, r1
   249f0:	32821001 	addcc	r1, r2, #1
   249f4:	35841004 	strcc	r1, [r4, #4]
   249f8:	35d20000 	ldrbcc	r0, [r2]
   249fc:	3a000003 	bcc	24a10 <__floatscan+0x484>
   24a00:	e1a00004 	mov	r0, r4
   24a04:	e58dc008 	str	ip, [sp, #8]
   24a08:	eb0002f7 	bl	255ec <__shgetc>
   24a0c:	e59dc008 	ldr	ip, [sp, #8]
   24a10:	e3a05000 	mov	r5, #0
   24a14:	e1a0b005 	mov	fp, r5
   24a18:	e3500030 	cmp	r0, #48	; 0x30
   24a1c:	13a03001 	movne	r3, #1
   24a20:	1affff75 	bne	247fc <__floatscan+0x270>
   24a24:	e5943004 	ldr	r3, [r4, #4]
   24a28:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   24a2c:	e1530002 	cmp	r3, r2
   24a30:	32832001 	addcc	r2, r3, #1
   24a34:	35842004 	strcc	r2, [r4, #4]
   24a38:	35d30000 	ldrbcc	r0, [r3]
   24a3c:	3a000001 	bcc	24a48 <__floatscan+0x4bc>
   24a40:	e1a00004 	mov	r0, r4
   24a44:	eb0002e8 	bl	255ec <__shgetc>
   24a48:	e2555001 	subs	r5, r5, #1
   24a4c:	e3a0c001 	mov	ip, #1
   24a50:	e2cbb000 	sbc	fp, fp, #0
   24a54:	eaffffef 	b	24a18 <__floatscan+0x48c>
   24a58:	e350002e 	cmp	r0, #46	; 0x2e
   24a5c:	1a000018 	bne	24ac4 <__floatscan+0x538>
   24a60:	e59d3020 	ldr	r3, [sp, #32]
   24a64:	e3530000 	cmp	r3, #0
   24a68:	1a00013b 	bne	24f5c <__floatscan+0x9d0>
   24a6c:	e1a02008 	mov	r2, r8
   24a70:	e3a03001 	mov	r3, #1
   24a74:	e58d9024 	str	r9, [sp, #36]	; 0x24
   24a78:	e58d3020 	str	r3, [sp, #32]
   24a7c:	e5941004 	ldr	r1, [r4, #4]
   24a80:	e5940068 	ldr	r0, [r4, #104]	; 0x68
   24a84:	e1510000 	cmp	r1, r0
   24a88:	32810001 	addcc	r0, r1, #1
   24a8c:	35840004 	strcc	r0, [r4, #4]
   24a90:	35d10000 	ldrbcc	r0, [r1]
   24a94:	3a000005 	bcc	24ab0 <__floatscan+0x524>
   24a98:	e1a00004 	mov	r0, r4
   24a9c:	e58d2044 	str	r2, [sp, #68]	; 0x44
   24aa0:	e58dc040 	str	ip, [sp, #64]	; 0x40
   24aa4:	eb0002d0 	bl	255ec <__shgetc>
   24aa8:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
   24aac:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
   24ab0:	e1a05008 	mov	r5, r8
   24ab4:	e1a0b009 	mov	fp, r9
   24ab8:	e1a08002 	mov	r8, r2
   24abc:	e59d9024 	ldr	r9, [sp, #36]	; 0x24
   24ac0:	eaffff58 	b	24828 <__floatscan+0x29c>
   24ac4:	e3500039 	cmp	r0, #57	; 0x39
   24ac8:	c3800020 	orrgt	r0, r0, #32
   24acc:	c2403057 	subgt	r3, r0, #87	; 0x57
   24ad0:	c58d3024 	strgt	r3, [sp, #36]	; 0x24
   24ad4:	e3580008 	cmp	r8, #8
   24ad8:	e2d93000 	sbcs	r3, r9, #0
   24adc:	b59d3024 	ldrlt	r3, [sp, #36]	; 0x24
   24ae0:	b083a20a 	addlt	sl, r3, sl, lsl #4
   24ae4:	ba000010 	blt	24b2c <__floatscan+0x5a0>
   24ae8:	e358000e 	cmp	r8, #14
   24aec:	e2d93000 	sbcs	r3, r9, #0
   24af0:	aa000014 	bge	24b48 <__floatscan+0x5bc>
   24af4:	e59f3490 	ldr	r3, [pc, #1168]	; 24f8c <__floatscan+0xa00>
   24af8:	e3a02000 	mov	r2, #0
   24afc:	e1cd02d8 	ldrd	r0, [sp, #40]	; 0x28
   24b00:	eb0007ec 	bl	26ab8 <__aeabi_dmul>
   24b04:	e1cd02f8 	strd	r0, [sp, #40]	; 0x28
   24b08:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
   24b0c:	eb0007b0 	bl	269d4 <__aeabi_i2d>
   24b10:	e1cd22d8 	ldrd	r2, [sp, #40]	; 0x28
   24b14:	eb0007e7 	bl	26ab8 <__aeabi_dmul>
   24b18:	e1a02000 	mov	r2, r0
   24b1c:	e1a03001 	mov	r3, r1
   24b20:	e1cd00d8 	ldrd	r0, [sp, #8]
   24b24:	eb0006f6 	bl	26704 <__adddf3>
   24b28:	e1cd00f8 	strd	r0, [sp, #8]
   24b2c:	e2982001 	adds	r2, r8, #1
   24b30:	e3a0c001 	mov	ip, #1
   24b34:	e2a93000 	adc	r3, r9, #0
   24b38:	e1a08005 	mov	r8, r5
   24b3c:	e1a0900b 	mov	r9, fp
   24b40:	e58d3024 	str	r3, [sp, #36]	; 0x24
   24b44:	eaffffcc 	b	24a7c <__floatscan+0x4f0>
   24b48:	e59d3024 	ldr	r3, [sp, #36]	; 0x24
   24b4c:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
   24b50:	e3530000 	cmp	r3, #0
   24b54:	12223001 	eorne	r3, r2, #1
   24b58:	03a03000 	moveq	r3, #0
   24b5c:	e3530000 	cmp	r3, #0
   24b60:	0afffff1 	beq	24b2c <__floatscan+0x5a0>
   24b64:	e59f3424 	ldr	r3, [pc, #1060]	; 24f90 <__floatscan+0xa04>
   24b68:	e3a02000 	mov	r2, #0
   24b6c:	e1cd02d8 	ldrd	r0, [sp, #40]	; 0x28
   24b70:	eb0007d0 	bl	26ab8 <__aeabi_dmul>
   24b74:	e1a03001 	mov	r3, r1
   24b78:	e1a02000 	mov	r2, r0
   24b7c:	e1cd00d8 	ldrd	r0, [sp, #8]
   24b80:	eb0006df 	bl	26704 <__adddf3>
   24b84:	e3a03001 	mov	r3, #1
   24b88:	e58d3034 	str	r3, [sp, #52]	; 0x34
   24b8c:	e1cd00f8 	strd	r0, [sp, #8]
   24b90:	eaffffe5 	b	24b2c <__floatscan+0x5a0>
   24b94:	e2433001 	sub	r3, r3, #1
   24b98:	e5843004 	str	r3, [r4, #4]
   24b9c:	e3a02000 	mov	r2, #0
   24ba0:	e3a03000 	mov	r3, #0
   24ba4:	e1a00004 	mov	r0, r4
   24ba8:	eb00027b 	bl	2559c <__shlim>
   24bac:	eaffff34 	b	24884 <__floatscan+0x2f8>
   24bb0:	e59d3020 	ldr	r3, [sp, #32]
   24bb4:	e3530000 	cmp	r3, #0
   24bb8:	01a05008 	moveq	r5, r8
   24bbc:	01a0b009 	moveq	fp, r9
   24bc0:	e3580008 	cmp	r8, #8
   24bc4:	e2d93000 	sbcs	r3, r9, #0
   24bc8:	ba000031 	blt	24c94 <__floatscan+0x708>
   24bcc:	e3800020 	orr	r0, r0, #32
   24bd0:	e3500070 	cmp	r0, #112	; 0x70
   24bd4:	1a000009 	bne	24c00 <__floatscan+0x674>
   24bd8:	e1a01006 	mov	r1, r6
   24bdc:	e1a00004 	mov	r0, r4
   24be0:	ebfffb12 	bl	23830 <scanexp>
   24be4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
   24be8:	e1a02000 	mov	r2, r0
   24bec:	03500000 	cmpeq	r0, #0
   24bf0:	e1a03001 	mov	r3, r1
   24bf4:	1a000008 	bne	24c1c <__floatscan+0x690>
   24bf8:	e3560000 	cmp	r6, #0
   24bfc:	0affff5c 	beq	24974 <__floatscan+0x3e8>
   24c00:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   24c04:	e3a02000 	mov	r2, #0
   24c08:	e3530000 	cmp	r3, #0
   24c0c:	15943004 	ldrne	r3, [r4, #4]
   24c10:	12433001 	subne	r3, r3, #1
   24c14:	15843004 	strne	r3, [r4, #4]
   24c18:	e3a03000 	mov	r3, #0
   24c1c:	e35a0000 	cmp	sl, #0
   24c20:	0affff17 	beq	24884 <__floatscan+0x2f8>
   24c24:	e2555008 	subs	r5, r5, #8
   24c28:	e2cb8000 	sbc	r8, fp, #0
   24c2c:	e1a00105 	lsl	r0, r5, #2
   24c30:	e1a01108 	lsl	r1, r8, #2
   24c34:	e0900002 	adds	r0, r0, r2
   24c38:	e1811f25 	orr	r1, r1, r5, lsr #30
   24c3c:	e58d0010 	str	r0, [sp, #16]
   24c40:	e0a13003 	adc	r3, r1, r3
   24c44:	e58d3014 	str	r3, [sp, #20]
   24c48:	e59d3018 	ldr	r3, [sp, #24]
   24c4c:	e1cd01d0 	ldrd	r0, [sp, #16]
   24c50:	e2632000 	rsb	r2, r3, #0
   24c54:	e1520000 	cmp	r2, r0
   24c58:	e1a03fc2 	asr	r3, r2, #31
   24c5c:	e0d33001 	sbcs	r3, r3, r1
   24c60:	aa00000f 	bge	24ca4 <__floatscan+0x718>
   24c64:	e59f331c 	ldr	r3, [pc, #796]	; 24f88 <__floatscan+0x9fc>
   24c68:	e3a02022 	mov	r2, #34	; 0x22
   24c6c:	ebffb5a2 	bl	122fc <__aeabi_read_tp>
   24c70:	e7832000 	str	r2, [r3, r0]
   24c74:	e1a00007 	mov	r0, r7
   24c78:	eb000755 	bl	269d4 <__aeabi_i2d>
   24c7c:	e59f3310 	ldr	r3, [pc, #784]	; 24f94 <__floatscan+0xa08>
   24c80:	e3e02000 	mvn	r2, #0
   24c84:	eb00078b 	bl	26ab8 <__aeabi_dmul>
   24c88:	e59f3304 	ldr	r3, [pc, #772]	; 24f94 <__floatscan+0xa08>
   24c8c:	e3e02000 	mvn	r2, #0
   24c90:	eafffeff 	b	24894 <__floatscan+0x308>
   24c94:	e2988001 	adds	r8, r8, #1
   24c98:	e1a0a20a 	lsl	sl, sl, #4
   24c9c:	e2a99000 	adc	r9, r9, #0
   24ca0:	eaffffc6 	b	24bc0 <__floatscan+0x634>
   24ca4:	e59d3018 	ldr	r3, [sp, #24]
   24ca8:	e1cd01d0 	ldrd	r0, [sp, #16]
   24cac:	e243206a 	sub	r2, r3, #106	; 0x6a
   24cb0:	e1500002 	cmp	r0, r2
   24cb4:	e1a03fc2 	asr	r3, r2, #31
   24cb8:	e0d13003 	sbcs	r3, r1, r3
   24cbc:	ba000069 	blt	24e68 <__floatscan+0x8dc>
   24cc0:	e59f92c8 	ldr	r9, [pc, #712]	; 24f90 <__floatscan+0xa04>
   24cc4:	e3a08000 	mov	r8, #0
   24cc8:	e59f52b0 	ldr	r5, [pc, #688]	; 24f80 <__floatscan+0x9f4>
   24ccc:	e3a04000 	mov	r4, #0
   24cd0:	e35a0000 	cmp	sl, #0
   24cd4:	aa00006f 	bge	24e98 <__floatscan+0x90c>
   24cd8:	e59d3010 	ldr	r3, [sp, #16]
   24cdc:	e1dd21f8 	ldrsh	r2, [sp, #24]
   24ce0:	e293c020 	adds	ip, r3, #32
   24ce4:	e59d3014 	ldr	r3, [sp, #20]
   24ce8:	e1dd03d0 	ldrsb	r0, [sp, #48]	; 0x30
   24cec:	e2a3e000 	adc	lr, r3, #0
   24cf0:	e05cc002 	subs	ip, ip, r2
   24cf4:	e1a03fc2 	asr	r3, r2, #31
   24cf8:	e58dc038 	str	ip, [sp, #56]	; 0x38
   24cfc:	e0ce3003 	sbc	r3, lr, r3
   24d00:	e58d303c 	str	r3, [sp, #60]	; 0x3c
   24d04:	e1cd23d8 	ldrd	r2, [sp, #56]	; 0x38
   24d08:	e1a01fc0 	asr	r1, r0, #31
   24d0c:	e1520000 	cmp	r2, r0
   24d10:	e0d33001 	sbcs	r3, r3, r1
   24d14:	aa000005 	bge	24d30 <__floatscan+0x7a4>
   24d18:	e59d3018 	ldr	r3, [sp, #24]
   24d1c:	e2630020 	rsb	r0, r3, #32
   24d20:	e59d3010 	ldr	r3, [sp, #16]
   24d24:	e0903003 	adds	r3, r0, r3
   24d28:	e58d301c 	str	r3, [sp, #28]
   24d2c:	4a000075 	bmi	24f08 <__floatscan+0x97c>
   24d30:	e59d301c 	ldr	r3, [sp, #28]
   24d34:	e3530034 	cmp	r3, #52	; 0x34
   24d38:	c3a04000 	movgt	r4, #0
   24d3c:	c3a05000 	movgt	r5, #0
   24d40:	ca00000f 	bgt	24d84 <__floatscan+0x7f8>
   24d44:	e59d301c 	ldr	r3, [sp, #28]
   24d48:	e3a00000 	mov	r0, #0
   24d4c:	e59f122c 	ldr	r1, [pc, #556]	; 24f80 <__floatscan+0x9f4>
   24d50:	e2632054 	rsb	r2, r3, #84	; 0x54
   24d54:	eb000281 	bl	25760 <scalbn>
   24d58:	e1a04000 	mov	r4, r0
   24d5c:	e1a00007 	mov	r0, r7
   24d60:	e1a05001 	mov	r5, r1
   24d64:	eb00071a 	bl	269d4 <__aeabi_i2d>
   24d68:	e1a02000 	mov	r2, r0
   24d6c:	e1a03001 	mov	r3, r1
   24d70:	e1a00004 	mov	r0, r4
   24d74:	e1a01005 	mov	r1, r5
   24d78:	eb00024d 	bl	256b4 <copysignl>
   24d7c:	e1a04000 	mov	r4, r0
   24d80:	e1a05001 	mov	r5, r1
   24d84:	e59d301c 	ldr	r3, [sp, #28]
   24d88:	e3a02000 	mov	r2, #0
   24d8c:	e1cd00d8 	ldrd	r0, [sp, #8]
   24d90:	e353001f 	cmp	r3, #31
   24d94:	e3a03000 	mov	r3, #0
   24d98:	c3a06000 	movgt	r6, #0
   24d9c:	d3a06001 	movle	r6, #1
   24da0:	eb000892 	bl	26ff0 <__aeabi_dcmpeq>
   24da4:	e3500000 	cmp	r0, #0
   24da8:	13a06000 	movne	r6, #0
   24dac:	e3560000 	cmp	r6, #0
   24db0:	0a000005 	beq	24dcc <__floatscan+0x840>
   24db4:	e31a0001 	tst	sl, #1
   24db8:	1a000003 	bne	24dcc <__floatscan+0x840>
   24dbc:	e28aa001 	add	sl, sl, #1
   24dc0:	e3a02000 	mov	r2, #0
   24dc4:	e3a03000 	mov	r3, #0
   24dc8:	e1cd20f8 	strd	r2, [sp, #8]
   24dcc:	e1a00007 	mov	r0, r7
   24dd0:	eb0006ff 	bl	269d4 <__aeabi_i2d>
   24dd4:	e1cd20d8 	ldrd	r2, [sp, #8]
   24dd8:	e1a08000 	mov	r8, r0
   24ddc:	e1a09001 	mov	r9, r1
   24de0:	eb000734 	bl	26ab8 <__aeabi_dmul>
   24de4:	e1a06000 	mov	r6, r0
   24de8:	e1a0000a 	mov	r0, sl
   24dec:	e1a07001 	mov	r7, r1
   24df0:	eb0006ee 	bl	269b0 <__aeabi_ui2d>
   24df4:	e1a02008 	mov	r2, r8
   24df8:	e1a03009 	mov	r3, r9
   24dfc:	eb00072d 	bl	26ab8 <__aeabi_dmul>
   24e00:	e1a02004 	mov	r2, r4
   24e04:	e1a03005 	mov	r3, r5
   24e08:	eb00063d 	bl	26704 <__adddf3>
   24e0c:	e1a02006 	mov	r2, r6
   24e10:	e1a03007 	mov	r3, r7
   24e14:	eb00063a 	bl	26704 <__adddf3>
   24e18:	e1a02004 	mov	r2, r4
   24e1c:	e1a03005 	mov	r3, r5
   24e20:	eb000636 	bl	26700 <__aeabi_dsub>
   24e24:	e3a02000 	mov	r2, #0
   24e28:	e3a03000 	mov	r3, #0
   24e2c:	e1a04000 	mov	r4, r0
   24e30:	e1a05001 	mov	r5, r1
   24e34:	eb00086d 	bl	26ff0 <__aeabi_dcmpeq>
   24e38:	e3500000 	cmp	r0, #0
   24e3c:	0a000003 	beq	24e50 <__floatscan+0x8c4>
   24e40:	e59f3140 	ldr	r3, [pc, #320]	; 24f88 <__floatscan+0x9fc>
   24e44:	e3a02022 	mov	r2, #34	; 0x22
   24e48:	ebffb52b 	bl	122fc <__aeabi_read_tp>
   24e4c:	e7832000 	str	r2, [r3, r0]
   24e50:	e59d2010 	ldr	r2, [sp, #16]
   24e54:	e1a00004 	mov	r0, r4
   24e58:	e1a01005 	mov	r1, r5
   24e5c:	e28dd04c 	add	sp, sp, #76	; 0x4c
   24e60:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24e64:	ea000279 	b	25850 <scalbnl>
   24e68:	e59f3118 	ldr	r3, [pc, #280]	; 24f88 <__floatscan+0x9fc>
   24e6c:	e3a02022 	mov	r2, #34	; 0x22
   24e70:	ebffb521 	bl	122fc <__aeabi_read_tp>
   24e74:	e7832000 	str	r2, [r3, r0]
   24e78:	e1a00007 	mov	r0, r7
   24e7c:	eb0006d4 	bl	269d4 <__aeabi_i2d>
   24e80:	e3a02000 	mov	r2, #0
   24e84:	e3a03601 	mov	r3, #1048576	; 0x100000
   24e88:	eb00070a 	bl	26ab8 <__aeabi_dmul>
   24e8c:	e3a02000 	mov	r2, #0
   24e90:	e3a03601 	mov	r3, #1048576	; 0x100000
   24e94:	eafffe7e 	b	24894 <__floatscan+0x308>
   24e98:	e1cd00d8 	ldrd	r0, [sp, #8]
   24e9c:	e1a02008 	mov	r2, r8
   24ea0:	e1a03009 	mov	r3, r9
   24ea4:	e1a0a08a 	lsl	sl, sl, #1
   24ea8:	eb00085f 	bl	2702c <__aeabi_dcmpge>
   24eac:	e3500000 	cmp	r0, #0
   24eb0:	0a000010 	beq	24ef8 <__floatscan+0x96c>
   24eb4:	e1a02004 	mov	r2, r4
   24eb8:	e1a03005 	mov	r3, r5
   24ebc:	e1cd00d8 	ldrd	r0, [sp, #8]
   24ec0:	e28aa001 	add	sl, sl, #1
   24ec4:	eb00060d 	bl	26700 <__aeabi_dsub>
   24ec8:	e1a02000 	mov	r2, r0
   24ecc:	e1a03001 	mov	r3, r1
   24ed0:	e1cd00d8 	ldrd	r0, [sp, #8]
   24ed4:	eb00060a 	bl	26704 <__adddf3>
   24ed8:	e59d3010 	ldr	r3, [sp, #16]
   24edc:	e2533001 	subs	r3, r3, #1
   24ee0:	e58d3010 	str	r3, [sp, #16]
   24ee4:	e59d3014 	ldr	r3, [sp, #20]
   24ee8:	e2c33000 	sbc	r3, r3, #0
   24eec:	e58d3014 	str	r3, [sp, #20]
   24ef0:	e1cd00f8 	strd	r0, [sp, #8]
   24ef4:	eaffff75 	b	24cd0 <__floatscan+0x744>
   24ef8:	e1cd20d8 	ldrd	r2, [sp, #8]
   24efc:	e1a00002 	mov	r0, r2
   24f00:	e1a01003 	mov	r1, r3
   24f04:	eafffff2 	b	24ed4 <__floatscan+0x948>
   24f08:	e3a03000 	mov	r3, #0
   24f0c:	e58d301c 	str	r3, [sp, #28]
   24f10:	eaffff8b 	b	24d44 <__floatscan+0x7b8>
   24f14:	e3520000 	cmp	r2, #0
   24f18:	15943004 	ldrne	r3, [r4, #4]
   24f1c:	12433001 	subne	r3, r3, #1
   24f20:	15843004 	strne	r3, [r4, #4]
   24f24:	e59d3018 	ldr	r3, [sp, #24]
   24f28:	e1a01005 	mov	r1, r5
   24f2c:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
   24f30:	e1a00004 	mov	r0, r4
   24f34:	e58d6004 	str	r6, [sp, #4]
   24f38:	e58d7000 	str	r7, [sp]
   24f3c:	ebfffabb 	bl	23a30 <decfloat>
   24f40:	eafffdee 	b	24700 <__floatscan+0x174>
   24f44:	e3a00000 	mov	r0, #0
   24f48:	e3a01000 	mov	r1, #0
   24f4c:	e12fff1e 	bx	lr
   24f50:	e3560000 	cmp	r6, #0
   24f54:	1afffe4a 	bne	24884 <__floatscan+0x2f8>
   24f58:	eaffff0f 	b	24b9c <__floatscan+0x610>
   24f5c:	e35c0000 	cmp	ip, #0
   24f60:	13a0002e 	movne	r0, #46	; 0x2e
   24f64:	1affff15 	bne	24bc0 <__floatscan+0x634>
   24f68:	eafffe3a 	b	24858 <__floatscan+0x2cc>
   24f6c:	0002a609 	andeq	sl, r2, r9, lsl #12
   24f70:	0002a60c 	andeq	sl, r2, ip, lsl #12
   24f74:	0002a600 	andeq	sl, r2, r0, lsl #12
   24f78:	7f800000 	svcvc	0x00800000
   24f7c:	00029c50 	andeq	r9, r2, r0, asr ip
   24f80:	3ff00000 	svccc	0x00f00000	; IMB
   24f84:	7ff80000 	svcvc	0x00f80000
   24f88:	0000000c 	andeq	r0, r0, ip
   24f8c:	3fb00000 	svccc	0x00b00000
   24f90:	3fe00000 	svccc	0x00e00000
   24f94:	7fefffff 	svcvc	0x00efffff

00024f98 <__intscan>:
   24f98:	e3510024 	cmp	r1, #36	; 0x24
   24f9c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fa0:	91a04000 	movls	r4, r0
   24fa4:	e24dd01c 	sub	sp, sp, #28
   24fa8:	91a05001 	movls	r5, r1
   24fac:	91a06002 	movls	r6, r2
   24fb0:	9a000004 	bls	24fc8 <__intscan+0x30>
   24fb4:	e59f35cc 	ldr	r3, [pc, #1484]	; 25588 <__intscan+0x5f0>
   24fb8:	e3a02016 	mov	r2, #22
   24fbc:	ebffb4ce 	bl	122fc <__aeabi_read_tp>
   24fc0:	e7832000 	str	r2, [r3, r0]
   24fc4:	ea000044 	b	250dc <__intscan+0x144>
   24fc8:	e5943004 	ldr	r3, [r4, #4]
   24fcc:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   24fd0:	e1530002 	cmp	r3, r2
   24fd4:	32832001 	addcc	r2, r3, #1
   24fd8:	35842004 	strcc	r2, [r4, #4]
   24fdc:	35d30000 	ldrbcc	r0, [r3]
   24fe0:	3a000001 	bcc	24fec <__intscan+0x54>
   24fe4:	e1a00004 	mov	r0, r4
   24fe8:	eb00017f 	bl	255ec <__shgetc>
   24fec:	e2408009 	sub	r8, r0, #9
   24ff0:	e3500020 	cmp	r0, #32
   24ff4:	13580004 	cmpne	r8, #4
   24ff8:	93a08001 	movls	r8, #1
   24ffc:	83a08000 	movhi	r8, #0
   25000:	9afffff0 	bls	24fc8 <__intscan+0x30>
   25004:	e240302b 	sub	r3, r0, #43	; 0x2b
   25008:	e3d33002 	bics	r3, r3, #2
   2500c:	1a00000b 	bne	25040 <__intscan+0xa8>
   25010:	e5943004 	ldr	r3, [r4, #4]
   25014:	e350002d 	cmp	r0, #45	; 0x2d
   25018:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   2501c:	13a08000 	movne	r8, #0
   25020:	03e08000 	mvneq	r8, #0
   25024:	e1530002 	cmp	r3, r2
   25028:	32832001 	addcc	r2, r3, #1
   2502c:	35842004 	strcc	r2, [r4, #4]
   25030:	35d30000 	ldrbcc	r0, [r3]
   25034:	3a000001 	bcc	25040 <__intscan+0xa8>
   25038:	e1a00004 	mov	r0, r4
   2503c:	eb00016a 	bl	255ec <__shgetc>
   25040:	e3c53010 	bic	r3, r5, #16
   25044:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   25048:	e3500030 	cmp	r0, #48	; 0x30
   2504c:	03530000 	cmpeq	r3, #0
   25050:	1a000034 	bne	25128 <__intscan+0x190>
   25054:	e5943004 	ldr	r3, [r4, #4]
   25058:	e1530002 	cmp	r3, r2
   2505c:	32832001 	addcc	r2, r3, #1
   25060:	35842004 	strcc	r2, [r4, #4]
   25064:	35d30000 	ldrbcc	r0, [r3]
   25068:	3a000001 	bcc	25074 <__intscan+0xdc>
   2506c:	e1a00004 	mov	r0, r4
   25070:	eb00015d 	bl	255ec <__shgetc>
   25074:	e3803020 	orr	r3, r0, #32
   25078:	e3530078 	cmp	r3, #120	; 0x78
   2507c:	1a000021 	bne	25108 <__intscan+0x170>
   25080:	e5943004 	ldr	r3, [r4, #4]
   25084:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   25088:	e1530002 	cmp	r3, r2
   2508c:	32832001 	addcc	r2, r3, #1
   25090:	35842004 	strcc	r2, [r4, #4]
   25094:	35d30000 	ldrbcc	r0, [r3]
   25098:	3a000001 	bcc	250a4 <__intscan+0x10c>
   2509c:	e1a00004 	mov	r0, r4
   250a0:	eb000151 	bl	255ec <__shgetc>
   250a4:	e59f34e0 	ldr	r3, [pc, #1248]	; 2558c <__intscan+0x5f4>
   250a8:	e0833000 	add	r3, r3, r0
   250ac:	e5d33001 	ldrb	r3, [r3, #1]
   250b0:	e353000f 	cmp	r3, #15
   250b4:	93a05010 	movls	r5, #16
   250b8:	9a000093 	bls	2530c <__intscan+0x374>
   250bc:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   250c0:	e3530000 	cmp	r3, #0
   250c4:	0a000129 	beq	25570 <__intscan+0x5d8>
   250c8:	e3560000 	cmp	r6, #0
   250cc:	e5943004 	ldr	r3, [r4, #4]
   250d0:	0a000005 	beq	250ec <__intscan+0x154>
   250d4:	e2433002 	sub	r3, r3, #2
   250d8:	e5843004 	str	r3, [r4, #4]
   250dc:	e3a00000 	mov	r0, #0
   250e0:	e1a01000 	mov	r1, r0
   250e4:	e28dd01c 	add	sp, sp, #28
   250e8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   250ec:	e2433001 	sub	r3, r3, #1
   250f0:	e5843004 	str	r3, [r4, #4]
   250f4:	e3a02000 	mov	r2, #0
   250f8:	e3a03000 	mov	r3, #0
   250fc:	e1a00004 	mov	r0, r4
   25100:	eb000125 	bl	2559c <__shlim>
   25104:	eafffff4 	b	250dc <__intscan+0x144>
   25108:	e3550000 	cmp	r5, #0
   2510c:	0a00007d 	beq	25308 <__intscan+0x370>
   25110:	e355000a 	cmp	r5, #10
   25114:	1a00007c 	bne	2530c <__intscan+0x374>
   25118:	e59f6470 	ldr	r6, [pc, #1136]	; 25590 <__intscan+0x5f8>
   2511c:	e3a0a000 	mov	sl, #0
   25120:	e1a07005 	mov	r7, r5
   25124:	ea000019 	b	25190 <__intscan+0x1f8>
   25128:	e59f345c 	ldr	r3, [pc, #1116]	; 2558c <__intscan+0x5f4>
   2512c:	e3550000 	cmp	r5, #0
   25130:	e0833000 	add	r3, r3, r0
   25134:	03a0500a 	moveq	r5, #10
   25138:	e5d33001 	ldrb	r3, [r3, #1]
   2513c:	e1530005 	cmp	r3, r5
   25140:	3afffff2 	bcc	25110 <__intscan+0x178>
   25144:	e3520000 	cmp	r2, #0
   25148:	e1a00004 	mov	r0, r4
   2514c:	e3a02000 	mov	r2, #0
   25150:	15943004 	ldrne	r3, [r4, #4]
   25154:	12433001 	subne	r3, r3, #1
   25158:	15843004 	strne	r3, [r4, #4]
   2515c:	e3a03000 	mov	r3, #0
   25160:	eb00010d 	bl	2559c <__shlim>
   25164:	eaffff92 	b	24fb4 <__intscan+0x1c>
   25168:	e5943004 	ldr	r3, [r4, #4]
   2516c:	e0200a97 	mla	r0, r7, sl, r0
   25170:	e1530002 	cmp	r3, r2
   25174:	32832001 	addcc	r2, r3, #1
   25178:	35842004 	strcc	r2, [r4, #4]
   2517c:	e240a030 	sub	sl, r0, #48	; 0x30
   25180:	35d30000 	ldrbcc	r0, [r3]
   25184:	3a000001 	bcc	25190 <__intscan+0x1f8>
   25188:	e1a00004 	mov	r0, r4
   2518c:	eb000116 	bl	255ec <__shgetc>
   25190:	e2403030 	sub	r3, r0, #48	; 0x30
   25194:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   25198:	e3530009 	cmp	r3, #9
   2519c:	915a0006 	cmpls	sl, r6
   251a0:	9afffff0 	bls	25168 <__intscan+0x1d0>
   251a4:	e3a0b000 	mov	fp, #0
   251a8:	e3a0900a 	mov	r9, #10
   251ac:	e2401030 	sub	r1, r0, #48	; 0x30
   251b0:	e594c068 	ldr	ip, [r4, #104]	; 0x68
   251b4:	e3510009 	cmp	r1, #9
   251b8:	8a00002e 	bhi	25278 <__intscan+0x2e0>
   251bc:	e28f3fef 	add	r3, pc, #956	; 0x3bc
   251c0:	e1c320d0 	ldrd	r2, [r3]
   251c4:	e15b0003 	cmp	fp, r3
   251c8:	015a0002 	cmpeq	sl, r2
   251cc:	8a00000d 	bhi	25208 <__intscan+0x270>
   251d0:	e083299a 	umull	r2, r3, sl, r9
   251d4:	e1a07fc1 	asr	r7, r1, #31
   251d8:	e1a06001 	mov	r6, r1
   251dc:	e1cd60f0 	strd	r6, [sp]
   251e0:	e1e01001 	mvn	r1, r1
   251e4:	e58d1008 	str	r1, [sp, #8]
   251e8:	e59d1004 	ldr	r1, [sp, #4]
   251ec:	e0233b99 	mla	r3, r9, fp, r3
   251f0:	e1e01001 	mvn	r1, r1
   251f4:	e58d100c 	str	r1, [sp, #12]
   251f8:	e1cd60d8 	ldrd	r6, [sp, #8]
   251fc:	e1530007 	cmp	r3, r7
   25200:	01520006 	cmpeq	r2, r6
   25204:	9a000032 	bls	252d4 <__intscan+0x33c>
   25208:	e59f637c 	ldr	r6, [pc, #892]	; 2558c <__intscan+0x5f4>
   2520c:	e0860000 	add	r0, r6, r0
   25210:	e5d03001 	ldrb	r3, [r0, #1]
   25214:	e1530005 	cmp	r3, r5
   25218:	2a000016 	bcs	25278 <__intscan+0x2e0>
   2521c:	e5943004 	ldr	r3, [r4, #4]
   25220:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   25224:	e1530002 	cmp	r3, r2
   25228:	32832001 	addcc	r2, r3, #1
   2522c:	35842004 	strcc	r2, [r4, #4]
   25230:	35d30000 	ldrbcc	r0, [r3]
   25234:	3a000001 	bcc	25240 <__intscan+0x2a8>
   25238:	e1a00004 	mov	r0, r4
   2523c:	eb0000ea 	bl	255ec <__shgetc>
   25240:	e0860000 	add	r0, r6, r0
   25244:	e5d03001 	ldrb	r3, [r0, #1]
   25248:	e1530005 	cmp	r3, r5
   2524c:	3afffff2 	bcc	2521c <__intscan+0x284>
   25250:	e59f3330 	ldr	r3, [pc, #816]	; 25588 <__intscan+0x5f0>
   25254:	e3a02022 	mov	r2, #34	; 0x22
   25258:	e59d1040 	ldr	r1, [sp, #64]	; 0x40
   2525c:	ebffb426 	bl	122fc <__aeabi_read_tp>
   25260:	e1cda4d0 	ldrd	sl, [sp, #64]	; 0x40
   25264:	e7832000 	str	r2, [r3, r0]
   25268:	e2012001 	and	r2, r1, #1
   2526c:	e3a03000 	mov	r3, #0
   25270:	e1923003 	orrs	r3, r2, r3
   25274:	13a08000 	movne	r8, #0
   25278:	e5943068 	ldr	r3, [r4, #104]	; 0x68
   2527c:	e3530000 	cmp	r3, #0
   25280:	15943004 	ldrne	r3, [r4, #4]
   25284:	12433001 	subne	r3, r3, #1
   25288:	15843004 	strne	r3, [r4, #4]
   2528c:	e1cd24d0 	ldrd	r2, [sp, #64]	; 0x40
   25290:	e15b0003 	cmp	fp, r3
   25294:	015a0002 	cmpeq	sl, r2
   25298:	3a0000ae 	bcc	25558 <__intscan+0x5c0>
   2529c:	e16f3f18 	clz	r3, r8
   252a0:	e59d2040 	ldr	r2, [sp, #64]	; 0x40
   252a4:	e1a032a3 	lsr	r3, r3, #5
   252a8:	e1d33002 	bics	r3, r3, r2
   252ac:	0a00009f 	beq	25530 <__intscan+0x598>
   252b0:	e59f32d0 	ldr	r3, [pc, #720]	; 25588 <__intscan+0x5f0>
   252b4:	ebffb410 	bl	122fc <__aeabi_read_tp>
   252b8:	e3a02022 	mov	r2, #34	; 0x22
   252bc:	e7832000 	str	r2, [r3, r0]
   252c0:	e59d3040 	ldr	r3, [sp, #64]	; 0x40
   252c4:	e2530001 	subs	r0, r3, #1
   252c8:	e59d3044 	ldr	r3, [sp, #68]	; 0x44
   252cc:	e2c31000 	sbc	r1, r3, #0
   252d0:	eaffff83 	b	250e4 <__intscan+0x14c>
   252d4:	e59d1000 	ldr	r1, [sp]
   252d8:	e092a001 	adds	sl, r2, r1
   252dc:	e59d1004 	ldr	r1, [sp, #4]
   252e0:	e0a3b001 	adc	fp, r3, r1
   252e4:	e5943004 	ldr	r3, [r4, #4]
   252e8:	e153000c 	cmp	r3, ip
   252ec:	32832001 	addcc	r2, r3, #1
   252f0:	35842004 	strcc	r2, [r4, #4]
   252f4:	35d30000 	ldrbcc	r0, [r3]
   252f8:	3affffab 	bcc	251ac <__intscan+0x214>
   252fc:	e1a00004 	mov	r0, r4
   25300:	eb0000b9 	bl	255ec <__shgetc>
   25304:	eaffffa8 	b	251ac <__intscan+0x214>
   25308:	e3a05008 	mov	r5, #8
   2530c:	e245a001 	sub	sl, r5, #1
   25310:	e59f6274 	ldr	r6, [pc, #628]	; 2558c <__intscan+0x5f4>
   25314:	e01aa005 	ands	sl, sl, r5
   25318:	1a000081 	bne	25524 <__intscan+0x58c>
   2531c:	e3a03017 	mov	r3, #23
   25320:	e59f226c 	ldr	r2, [pc, #620]	; 25594 <__intscan+0x5fc>
   25324:	e0030593 	mul	r3, r3, r5
   25328:	e7e232d3 	ubfx	r3, r3, #5, #3
   2532c:	e7d29003 	ldrb	r9, [r2, r3]
   25330:	e0863000 	add	r3, r6, r0
   25334:	e5941068 	ldr	r1, [r4, #104]	; 0x68
   25338:	e5d33001 	ldrb	r3, [r3, #1]
   2533c:	e1550003 	cmp	r5, r3
   25340:	83a02001 	movhi	r2, #1
   25344:	93a02000 	movls	r2, #0
   25348:	e37a037e 	cmn	sl, #-134217727	; 0xf8000001
   2534c:	83a02000 	movhi	r2, #0
   25350:	e3520000 	cmp	r2, #0
   25354:	1a000009 	bne	25380 <__intscan+0x3e8>
   25358:	e3e01000 	mvn	r1, #0
   2535c:	e2692020 	rsb	r2, r9, #32
   25360:	e1a06931 	lsr	r6, r1, r9
   25364:	e2493020 	sub	r3, r9, #32
   25368:	e1866211 	orr	r6, r6, r1, lsl r2
   2536c:	e1a07931 	lsr	r7, r1, r9
   25370:	e1866331 	orr	r6, r6, r1, lsr r3
   25374:	e3a0b000 	mov	fp, #0
   25378:	e59f120c 	ldr	r1, [pc, #524]	; 2558c <__intscan+0x5f4>
   2537c:	ea000014 	b	253d4 <__intscan+0x43c>
   25380:	e183a91a 	orr	sl, r3, sl, lsl r9
   25384:	e5943004 	ldr	r3, [r4, #4]
   25388:	e1530001 	cmp	r3, r1
   2538c:	32832001 	addcc	r2, r3, #1
   25390:	35842004 	strcc	r2, [r4, #4]
   25394:	35d30000 	ldrbcc	r0, [r3]
   25398:	3affffe4 	bcc	25330 <__intscan+0x398>
   2539c:	e1a00004 	mov	r0, r4
   253a0:	eb000091 	bl	255ec <__shgetc>
   253a4:	eaffffe1 	b	25330 <__intscan+0x398>
   253a8:	e1a0091b 	lsl	r0, fp, r9
   253ac:	e180031a 	orr	r0, r0, sl, lsl r3
   253b0:	e180023a 	orr	r0, r0, sl, lsr r2
   253b4:	e18ca91a 	orr	sl, ip, sl, lsl r9
   253b8:	e1a0b000 	mov	fp, r0
   253bc:	e5940004 	ldr	r0, [r4, #4]
   253c0:	e150000e 	cmp	r0, lr
   253c4:	2a00000b 	bcs	253f8 <__intscan+0x460>
   253c8:	e280c001 	add	ip, r0, #1
   253cc:	e584c004 	str	ip, [r4, #4]
   253d0:	e5d00000 	ldrb	r0, [r0]
   253d4:	e081c000 	add	ip, r1, r0
   253d8:	e594e068 	ldr	lr, [r4, #104]	; 0x68
   253dc:	e5dcc001 	ldrb	ip, [ip, #1]
   253e0:	e155000c 	cmp	r5, ip
   253e4:	9affff87 	bls	25208 <__intscan+0x270>
   253e8:	e157000b 	cmp	r7, fp
   253ec:	0156000a 	cmpeq	r6, sl
   253f0:	2affffec 	bcs	253a8 <__intscan+0x410>
   253f4:	eaffff83 	b	25208 <__intscan+0x270>
   253f8:	e1a00004 	mov	r0, r4
   253fc:	e58d2008 	str	r2, [sp, #8]
   25400:	e58d3000 	str	r3, [sp]
   25404:	eb000078 	bl	255ec <__shgetc>
   25408:	e59d2008 	ldr	r2, [sp, #8]
   2540c:	e59d3000 	ldr	r3, [sp]
   25410:	eaffffd8 	b	25378 <__intscan+0x3e0>
   25414:	e02a359a 	mla	sl, sl, r5, r3
   25418:	e5943004 	ldr	r3, [r4, #4]
   2541c:	e1530002 	cmp	r3, r2
   25420:	32832001 	addcc	r2, r3, #1
   25424:	35842004 	strcc	r2, [r4, #4]
   25428:	35d30000 	ldrbcc	r0, [r3]
   2542c:	3a000001 	bcc	25438 <__intscan+0x4a0>
   25430:	e1a00004 	mov	r0, r4
   25434:	eb00006c 	bl	255ec <__shgetc>
   25438:	e0863000 	add	r3, r6, r0
   2543c:	e15a0007 	cmp	sl, r7
   25440:	e5942068 	ldr	r2, [r4, #104]	; 0x68
   25444:	e5d33001 	ldrb	r3, [r3, #1]
   25448:	93a01001 	movls	r1, #1
   2544c:	83a01000 	movhi	r1, #0
   25450:	e1550003 	cmp	r5, r3
   25454:	93a01000 	movls	r1, #0
   25458:	e3510000 	cmp	r1, #0
   2545c:	1affffec 	bne	25414 <__intscan+0x47c>
   25460:	e59f9124 	ldr	r9, [pc, #292]	; 2558c <__intscan+0x5f4>
   25464:	e3a0b000 	mov	fp, #0
   25468:	e0893000 	add	r3, r9, r0
   2546c:	e594c068 	ldr	ip, [r4, #104]	; 0x68
   25470:	e5d31001 	ldrb	r1, [r3, #1]
   25474:	e1550001 	cmp	r5, r1
   25478:	9affff62 	bls	25208 <__intscan+0x270>
   2547c:	e35b0000 	cmp	fp, #0
   25480:	e3a02000 	mov	r2, #0
   25484:	e3a03000 	mov	r3, #0
   25488:	e1cd20f0 	strd	r2, [sp]
   2548c:	0a000007 	beq	254b0 <__intscan+0x518>
   25490:	e087659a 	umull	r6, r7, sl, r5
   25494:	e3a03000 	mov	r3, #0
   25498:	e1a02007 	mov	r2, r7
   2549c:	e0a3259b 	umlal	r2, r3, fp, r5
   254a0:	e3530000 	cmp	r3, #0
   254a4:	13a02001 	movne	r2, #1
   254a8:	13a03000 	movne	r3, #0
   254ac:	11cd20f0 	strdne	r2, [sp]
   254b0:	e1cd20d0 	ldrd	r2, [sp]
   254b4:	e1923003 	orrs	r3, r2, r3
   254b8:	1affff52 	bne	25208 <__intscan+0x270>
   254bc:	e0832a95 	umull	r2, r3, r5, sl
   254c0:	e6ef6071 	uxtb	r6, r1
   254c4:	e1e01001 	mvn	r1, r1
   254c8:	e58d1010 	str	r1, [sp, #16]
   254cc:	e3e01000 	mvn	r1, #0
   254d0:	e58d1014 	str	r1, [sp, #20]
   254d4:	e3a07000 	mov	r7, #0
   254d8:	e1cd60f0 	strd	r6, [sp]
   254dc:	e1cd61d0 	ldrd	r6, [sp, #16]
   254e0:	e0233b95 	mla	r3, r5, fp, r3
   254e4:	e1530007 	cmp	r3, r7
   254e8:	01520006 	cmpeq	r2, r6
   254ec:	8affff45 	bhi	25208 <__intscan+0x270>
   254f0:	e59d1000 	ldr	r1, [sp]
   254f4:	e092a001 	adds	sl, r2, r1
   254f8:	e59d1004 	ldr	r1, [sp, #4]
   254fc:	e0a3b001 	adc	fp, r3, r1
   25500:	e5943004 	ldr	r3, [r4, #4]
   25504:	e153000c 	cmp	r3, ip
   25508:	32832001 	addcc	r2, r3, #1
   2550c:	35842004 	strcc	r2, [r4, #4]
   25510:	35d30000 	ldrbcc	r0, [r3]
   25514:	3affffd3 	bcc	25468 <__intscan+0x4d0>
   25518:	e1a00004 	mov	r0, r4
   2551c:	eb000032 	bl	255ec <__shgetc>
   25520:	eaffffd0 	b	25468 <__intscan+0x4d0>
   25524:	e59f706c 	ldr	r7, [pc, #108]	; 25598 <__intscan+0x600>
   25528:	e3a0a000 	mov	sl, #0
   2552c:	eaffffc1 	b	25438 <__intscan+0x4a0>
   25530:	e1cd24d0 	ldrd	r2, [sp, #64]	; 0x40
   25534:	e15b0003 	cmp	fp, r3
   25538:	015a0002 	cmpeq	sl, r2
   2553c:	9a000005 	bls	25558 <__intscan+0x5c0>
   25540:	e59f3040 	ldr	r3, [pc, #64]	; 25588 <__intscan+0x5f0>
   25544:	ebffb36c 	bl	122fc <__aeabi_read_tp>
   25548:	e3a02022 	mov	r2, #34	; 0x22
   2554c:	e7832000 	str	r2, [r3, r0]
   25550:	e1cd04d0 	ldrd	r0, [sp, #64]	; 0x40
   25554:	eafffee2 	b	250e4 <__intscan+0x14c>
   25558:	e1a03fc8 	asr	r3, r8, #31
   2555c:	e028000a 	eor	r0, r8, sl
   25560:	e023100b 	eor	r1, r3, fp
   25564:	e0500008 	subs	r0, r0, r8
   25568:	e0c11003 	sbc	r1, r1, r3
   2556c:	eafffedc 	b	250e4 <__intscan+0x14c>
   25570:	e3560000 	cmp	r6, #0
   25574:	1afffed8 	bne	250dc <__intscan+0x144>
   25578:	eafffedd 	b	250f4 <__intscan+0x15c>
   2557c:	e320f000 	nop	{0}
   25580:	99999999 	ldmibls	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   25584:	19999999 	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   25588:	0000000c 	andeq	r0, r0, ip
   2558c:	0002a63d 	andeq	sl, r2, sp, lsr r6
   25590:	19999998 	ldmibne	r9, {r3, r4, r7, r8, fp, ip, pc}
   25594:	0002a634 	andeq	sl, r2, r4, lsr r6
   25598:	071c71c6 	ldreq	r7, [ip, -r6, asr #3]

0002559c <__shlim>:
   2559c:	e5901008 	ldr	r1, [r0, #8]
   255a0:	e92d4030 	push	{r4, r5, lr}
   255a4:	e1a04002 	mov	r4, r2
   255a8:	e590e004 	ldr	lr, [r0, #4]
   255ac:	e1a05003 	mov	r5, r3
   255b0:	e194c005 	orrs	ip, r4, r5
   255b4:	e1c047f0 	strd	r4, [r0, #112]	; 0x70
   255b8:	e041200e 	sub	r2, r1, lr
   255bc:	13a0c001 	movne	ip, #1
   255c0:	03a0c000 	moveq	ip, #0
   255c4:	e1a03fc2 	asr	r3, r2, #31
   255c8:	e1540002 	cmp	r4, r2
   255cc:	e1c027f8 	strd	r2, [r0, #120]	; 0x78
   255d0:	e0d53003 	sbcs	r3, r5, r3
   255d4:	b20c3001 	andlt	r3, ip, #1
   255d8:	a3a03000 	movge	r3, #0
   255dc:	e3530000 	cmp	r3, #0
   255e0:	108e1004 	addne	r1, lr, r4
   255e4:	e5801068 	str	r1, [r0, #104]	; 0x68
   255e8:	e8bd8030 	pop	{r4, r5, pc}

000255ec <__shgetc>:
   255ec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   255f0:	e1a04000 	mov	r4, r0
   255f4:	e1c007d0 	ldrd	r0, [r0, #112]	; 0x70
   255f8:	e1903001 	orrs	r3, r0, r1
   255fc:	0a000007 	beq	25620 <__shgetc+0x34>
   25600:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   25604:	e1520000 	cmp	r2, r0
   25608:	e0d33001 	sbcs	r3, r3, r1
   2560c:	ba000003 	blt	25620 <__shgetc+0x34>
   25610:	e3a03000 	mov	r3, #0
   25614:	e3e00000 	mvn	r0, #0
   25618:	e5843068 	str	r3, [r4, #104]	; 0x68
   2561c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25620:	e1a00004 	mov	r0, r4
   25624:	eb000157 	bl	25b88 <__uflow>
   25628:	e3500000 	cmp	r0, #0
   2562c:	bafffff7 	blt	25610 <__shgetc+0x24>
   25630:	e1c427d0 	ldrd	r2, [r4, #112]	; 0x70
   25634:	e9941002 	ldmib	r4, {r1, ip}
   25638:	e192e003 	orrs	lr, r2, r3
   2563c:	0a00000b 	beq	25670 <__shgetc+0x84>
   25640:	e594e078 	ldr	lr, [r4, #120]	; 0x78
   25644:	e04c8001 	sub	r8, ip, r1
   25648:	e594507c 	ldr	r5, [r4, #124]	; 0x7c
   2564c:	e052600e 	subs	r6, r2, lr
   25650:	e1a09fc8 	asr	r9, r8, #31
   25654:	e0c37005 	sbc	r7, r3, r5
   25658:	e1580006 	cmp	r8, r6
   2565c:	e0d95007 	sbcs	r5, r9, r7
   25660:	a2422001 	subge	r2, r2, #1
   25664:	a042200e 	subge	r2, r2, lr
   25668:	a0812002 	addge	r2, r1, r2
   2566c:	aa000000 	bge	25674 <__shgetc+0x88>
   25670:	e1a0200c 	mov	r2, ip
   25674:	e35c0000 	cmp	ip, #0
   25678:	e5842068 	str	r2, [r4, #104]	; 0x68
   2567c:	0a000005 	beq	25698 <__shgetc+0xac>
   25680:	e1c427d8 	ldrd	r2, [r4, #120]	; 0x78
   25684:	e04cc001 	sub	ip, ip, r1
   25688:	e28cc001 	add	ip, ip, #1
   2568c:	e092200c 	adds	r2, r2, ip
   25690:	e0a33fcc 	adc	r3, r3, ip, asr #31
   25694:	e1c427f8 	strd	r2, [r4, #120]	; 0x78
   25698:	e5513001 	ldrb	r3, [r1, #-1]
   2569c:	e1530000 	cmp	r3, r0
   256a0:	15410001 	strbne	r0, [r1, #-1]
   256a4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000256a8 <fabs>:
   256a8:	e3c13102 	bic	r3, r1, #-2147483648	; 0x80000000
   256ac:	e1a01003 	mov	r1, r3
   256b0:	e12fff1e 	bx	lr

000256b4 <copysignl>:
   256b4:	ea000144 	b	25bcc <copysign>

000256b8 <fmodl>:
   256b8:	ea000148 	b	25be0 <fmod>

000256bc <frexp>:
   256bc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   256c0:	e7ea4a51 	ubfx	r4, r1, #20, #11
   256c4:	e3540000 	cmp	r4, #0
   256c8:	e1a07000 	mov	r7, r0
   256cc:	e1a06001 	mov	r6, r1
   256d0:	e1a05002 	mov	r5, r2
   256d4:	1a000014 	bne	2572c <frexp+0x70>
   256d8:	e3a02000 	mov	r2, #0
   256dc:	e3a03000 	mov	r3, #0
   256e0:	eb000642 	bl	26ff0 <__aeabi_dcmpeq>
   256e4:	e3500000 	cmp	r0, #0
   256e8:	15854000 	strne	r4, [r5]
   256ec:	1a00000b 	bne	25720 <frexp+0x64>
   256f0:	e59f3064 	ldr	r3, [pc, #100]	; 2575c <frexp+0xa0>
   256f4:	e3a02000 	mov	r2, #0
   256f8:	e1a00007 	mov	r0, r7
   256fc:	e1a01006 	mov	r1, r6
   25700:	eb0004ec 	bl	26ab8 <__aeabi_dmul>
   25704:	e1a02005 	mov	r2, r5
   25708:	ebffffeb 	bl	256bc <frexp>
   2570c:	e5953000 	ldr	r3, [r5]
   25710:	e2433040 	sub	r3, r3, #64	; 0x40
   25714:	e5853000 	str	r3, [r5]
   25718:	e1a07000 	mov	r7, r0
   2571c:	e1a06001 	mov	r6, r1
   25720:	e1a00007 	mov	r0, r7
   25724:	e1a01006 	mov	r1, r6
   25728:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   2572c:	e30027ff 	movw	r2, #2047	; 0x7ff
   25730:	e1540002 	cmp	r4, r2
   25734:	0afffff9 	beq	25720 <frexp+0x64>
   25738:	e3c1147f 	bic	r1, r1, #2130706432	; 0x7f000000
   2573c:	e2444fff 	sub	r4, r4, #1020	; 0x3fc
   25740:	e3c1160f 	bic	r1, r1, #15728640	; 0xf00000
   25744:	e2444002 	sub	r4, r4, #2
   25748:	e38135ff 	orr	r3, r1, #1069547520	; 0x3fc00000
   2574c:	e5854000 	str	r4, [r5]
   25750:	e3833602 	orr	r3, r3, #2097152	; 0x200000
   25754:	e1a06003 	mov	r6, r3
   25758:	eafffff0 	b	25720 <frexp+0x64>
   2575c:	43f00000 	mvnsmi	r0, #0

00025760 <scalbn>:
   25760:	e3520b01 	cmp	r2, #1024	; 0x400
   25764:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
   25768:	e1a06002 	mov	r6, r2
   2576c:	ba00001c 	blt	257e4 <scalbn+0x84>
   25770:	e59f30d0 	ldr	r3, [pc, #208]	; 25848 <scalbn+0xe8>
   25774:	e3a02000 	mov	r2, #0
   25778:	eb0004ce 	bl	26ab8 <__aeabi_dmul>
   2577c:	e2463fff 	sub	r3, r6, #1020	; 0x3fc
   25780:	e2433003 	sub	r3, r3, #3
   25784:	e3530b01 	cmp	r3, #1024	; 0x400
   25788:	e1a04000 	mov	r4, r0
   2578c:	e1a05001 	mov	r5, r1
   25790:	ba000009 	blt	257bc <scalbn+0x5c>
   25794:	e59f30ac 	ldr	r3, [pc, #172]	; 25848 <scalbn+0xe8>
   25798:	e3a02000 	mov	r2, #0
   2579c:	eb0004c5 	bl	26ab8 <__aeabi_dmul>
   257a0:	e2463e7f 	sub	r3, r6, #2032	; 0x7f0
   257a4:	e243300e 	sub	r3, r3, #14
   257a8:	e30023ff 	movw	r2, #1023	; 0x3ff
   257ac:	e1530002 	cmp	r3, r2
   257b0:	a1a03002 	movge	r3, r2
   257b4:	e1a04000 	mov	r4, r0
   257b8:	e1a05001 	mov	r5, r1
   257bc:	e2833fff 	add	r3, r3, #1020	; 0x3fc
   257c0:	e3a00000 	mov	r0, #0
   257c4:	e2833003 	add	r3, r3, #3
   257c8:	e1a02000 	mov	r2, r0
   257cc:	e1a00004 	mov	r0, r4
   257d0:	e1a01a03 	lsl	r1, r3, #20
   257d4:	e1a03001 	mov	r3, r1
   257d8:	e1a01005 	mov	r1, r5
   257dc:	eb0004b5 	bl	26ab8 <__aeabi_dmul>
   257e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
   257e4:	e59f7060 	ldr	r7, [pc, #96]	; 2584c <scalbn+0xec>
   257e8:	e1520007 	cmp	r2, r7
   257ec:	a1a04000 	movge	r4, r0
   257f0:	a1a05001 	movge	r5, r1
   257f4:	a1a03002 	movge	r3, r2
   257f8:	aaffffef 	bge	257bc <scalbn+0x5c>
   257fc:	e3a03601 	mov	r3, #1048576	; 0x100000
   25800:	e3a02000 	mov	r2, #0
   25804:	eb0004ab 	bl	26ab8 <__aeabi_dmul>
   25808:	e2863fff 	add	r3, r6, #1020	; 0x3fc
   2580c:	e2833002 	add	r3, r3, #2
   25810:	e1530007 	cmp	r3, r7
   25814:	e1a04000 	mov	r4, r0
   25818:	e1a05001 	mov	r5, r1
   2581c:	aaffffe6 	bge	257bc <scalbn+0x5c>
   25820:	e3a03601 	mov	r3, #1048576	; 0x100000
   25824:	e3a02000 	mov	r2, #0
   25828:	eb0004a2 	bl	26ab8 <__aeabi_dmul>
   2582c:	e2863e7f 	add	r3, r6, #2032	; 0x7f0
   25830:	e283300c 	add	r3, r3, #12
   25834:	e1530007 	cmp	r3, r7
   25838:	b1a03007 	movlt	r3, r7
   2583c:	e1a04000 	mov	r4, r0
   25840:	e1a05001 	mov	r5, r1
   25844:	eaffffdc 	b	257bc <scalbn+0x5c>
   25848:	7fe00000 	svcvc	0x00e00000
   2584c:	fffffc02 			; <UNDEFINED> instruction: 0xfffffc02

00025850 <scalbnl>:
   25850:	eaffffc2 	b	25760 <scalbn>

00025854 <mbrtowc>:
   25854:	e92d4073 	push	{r0, r1, r4, r5, r6, lr}
   25858:	e1a0e000 	mov	lr, r0
   2585c:	e59f0134 	ldr	r0, [pc, #308]	; 25998 <mbrtowc+0x144>
   25860:	e3530000 	cmp	r3, #0
   25864:	01a03000 	moveq	r3, r0
   25868:	e3510000 	cmp	r1, #0
   2586c:	e5930000 	ldr	r0, [r3]
   25870:	1a000009 	bne	2589c <mbrtowc+0x48>
   25874:	e3500000 	cmp	r0, #0
   25878:	0a000014 	beq	258d0 <mbrtowc+0x7c>
   2587c:	e3a02000 	mov	r2, #0
   25880:	e5832000 	str	r2, [r3]
   25884:	e59f3110 	ldr	r3, [pc, #272]	; 2599c <mbrtowc+0x148>
   25888:	ebffb29b 	bl	122fc <__aeabi_read_tp>
   2588c:	e3a02054 	mov	r2, #84	; 0x54
   25890:	e7832000 	str	r2, [r3, r0]
   25894:	e3e00000 	mvn	r0, #0
   25898:	ea00000c 	b	258d0 <mbrtowc+0x7c>
   2589c:	e35e0000 	cmp	lr, #0
   258a0:	028de004 	addeq	lr, sp, #4
   258a4:	e3520000 	cmp	r2, #0
   258a8:	0a00001e 	beq	25928 <mbrtowc+0xd4>
   258ac:	e3500000 	cmp	r0, #0
   258b0:	1a00001e 	bne	25930 <mbrtowc+0xdc>
   258b4:	e1d100d0 	ldrsb	r0, [r1]
   258b8:	e5d1c000 	ldrb	ip, [r1]
   258bc:	e3500000 	cmp	r0, #0
   258c0:	ba000004 	blt	258d8 <mbrtowc+0x84>
   258c4:	e25c0000 	subs	r0, ip, #0
   258c8:	e58ec000 	str	ip, [lr]
   258cc:	13a00001 	movne	r0, #1
   258d0:	e28dd008 	add	sp, sp, #8
   258d4:	e8bd8070 	pop	{r4, r5, r6, pc}
   258d8:	ee1d4f70 	mrc	15, 0, r4, cr13, cr0, {3}
   258dc:	e5144030 	ldr	r4, [r4, #-48]	; 0xffffffd0
   258e0:	e5944000 	ldr	r4, [r4]
   258e4:	e3540000 	cmp	r4, #0
   258e8:	1a000005 	bne	25904 <mbrtowc+0xb0>
   258ec:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
   258f0:	e1a00800 	lsl	r0, r0, #16
   258f4:	e1a00820 	lsr	r0, r0, #16
   258f8:	e58e0000 	str	r0, [lr]
   258fc:	e3a00001 	mov	r0, #1
   25900:	eafffff2 	b	258d0 <mbrtowc+0x7c>
   25904:	e24cc0c2 	sub	ip, ip, #194	; 0xc2
   25908:	e35c0032 	cmp	ip, #50	; 0x32
   2590c:	8affffda 	bhi	2587c <mbrtowc+0x28>
   25910:	e59f0088 	ldr	r0, [pc, #136]	; 259a0 <mbrtowc+0x14c>
   25914:	e790010c 	ldr	r0, [r0, ip, lsl #2]
   25918:	e252c001 	subs	ip, r2, #1
   2591c:	12811001 	addne	r1, r1, #1
   25920:	1a000003 	bne	25934 <mbrtowc+0xe0>
   25924:	e5830000 	str	r0, [r3]
   25928:	e3e00001 	mvn	r0, #1
   2592c:	eaffffe7 	b	258d0 <mbrtowc+0x7c>
   25930:	e1a0c002 	mov	ip, r2
   25934:	e5d16000 	ldrb	r6, [r1]
   25938:	e1a04d40 	asr	r4, r0, #26
   2593c:	e1a051a6 	lsr	r5, r6, #3
   25940:	e08441a6 	add	r4, r4, r6, lsr #3
   25944:	e2455010 	sub	r5, r5, #16
   25948:	e1844005 	orr	r4, r4, r5
   2594c:	e3d44007 	bics	r4, r4, #7
   25950:	1affffc9 	bne	2587c <mbrtowc+0x28>
   25954:	e4d14001 	ldrb	r4, [r1], #1
   25958:	e24cc001 	sub	ip, ip, #1
   2595c:	e2444080 	sub	r4, r4, #128	; 0x80
   25960:	e1940300 	orrs	r0, r4, r0, lsl #6
   25964:	4a000004 	bmi	2597c <mbrtowc+0x128>
   25968:	e3a01000 	mov	r1, #0
   2596c:	e58e0000 	str	r0, [lr]
   25970:	e5831000 	str	r1, [r3]
   25974:	e042000c 	sub	r0, r2, ip
   25978:	eaffffd4 	b	258d0 <mbrtowc+0x7c>
   2597c:	e35c0000 	cmp	ip, #0
   25980:	0affffe7 	beq	25924 <mbrtowc+0xd0>
   25984:	e5d14000 	ldrb	r4, [r1]
   25988:	e2444080 	sub	r4, r4, #128	; 0x80
   2598c:	e354003f 	cmp	r4, #63	; 0x3f
   25990:	9affffef 	bls	25954 <mbrtowc+0x100>
   25994:	eaffffb8 	b	2587c <mbrtowc+0x28>
   25998:	00048a78 	andeq	r8, r4, r8, ror sl
   2599c:	0000000c 	andeq	r0, r0, ip
   259a0:	0002a740 	andeq	sl, r2, r0, asr #14

000259a4 <mbsinit>:
   259a4:	e3500000 	cmp	r0, #0
   259a8:	15900000 	ldrne	r0, [r0]
   259ac:	116f0f10 	clzne	r0, r0
   259b0:	11a002a0 	lsrne	r0, r0, #5
   259b4:	03a00001 	moveq	r0, #1
   259b8:	e12fff1e 	bx	lr

000259bc <wcrtomb>:
   259bc:	e3500000 	cmp	r0, #0
   259c0:	0a000002 	beq	259d0 <wcrtomb+0x14>
   259c4:	e351007f 	cmp	r1, #127	; 0x7f
   259c8:	8a000002 	bhi	259d8 <wcrtomb+0x1c>
   259cc:	e5c01000 	strb	r1, [r0]
   259d0:	e3a00001 	mov	r0, #1
   259d4:	e12fff1e 	bx	lr
   259d8:	ee1d3f70 	mrc	15, 0, r3, cr13, cr0, {3}
   259dc:	e5133030 	ldr	r3, [r3, #-48]	; 0xffffffd0
   259e0:	e5933000 	ldr	r3, [r3]
   259e4:	e3530000 	cmp	r3, #0
   259e8:	1a00000a 	bne	25a18 <wcrtomb+0x5c>
   259ec:	e2413cdf 	sub	r3, r1, #57088	; 0xdf00
   259f0:	e2433080 	sub	r3, r3, #128	; 0x80
   259f4:	e353007f 	cmp	r3, #127	; 0x7f
   259f8:	9afffff3 	bls	259cc <wcrtomb+0x10>
   259fc:	e59f30c8 	ldr	r3, [pc, #200]	; 25acc <wcrtomb+0x110>
   25a00:	e3a02054 	mov	r2, #84	; 0x54
   25a04:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
   25a08:	ebffb23b 	bl	122fc <__aeabi_read_tp>
   25a0c:	e7832000 	str	r2, [r3, r0]
   25a10:	e3e00000 	mvn	r0, #0
   25a14:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
   25a18:	e3510b02 	cmp	r1, #2048	; 0x800
   25a1c:	2a000008 	bcs	25a44 <wcrtomb+0x88>
   25a20:	e3e0303f 	mvn	r3, #63	; 0x3f
   25a24:	e1833321 	orr	r3, r3, r1, lsr #6
   25a28:	e201103f 	and	r1, r1, #63	; 0x3f
   25a2c:	e5c03000 	strb	r3, [r0]
   25a30:	e1e01c81 	mvn	r1, r1, lsl #25
   25a34:	e1e01ca1 	mvn	r1, r1, lsr #25
   25a38:	e5c01001 	strb	r1, [r0, #1]
   25a3c:	e3a00002 	mov	r0, #2
   25a40:	e12fff1e 	bx	lr
   25a44:	e2413a0e 	sub	r3, r1, #57344	; 0xe000
   25a48:	e3510b36 	cmp	r1, #55296	; 0xd800
   25a4c:	23530a02 	cmpcs	r3, #8192	; 0x2000
   25a50:	2a00000b 	bcs	25a84 <wcrtomb+0xc8>
   25a54:	e7e52351 	ubfx	r2, r1, #6, #6
   25a58:	e3e0301f 	mvn	r3, #31
   25a5c:	e1833621 	orr	r3, r3, r1, lsr #12
   25a60:	e201103f 	and	r1, r1, #63	; 0x3f
   25a64:	e5c03000 	strb	r3, [r0]
   25a68:	e3e0307f 	mvn	r3, #127	; 0x7f
   25a6c:	e1832002 	orr	r2, r3, r2
   25a70:	e1833001 	orr	r3, r3, r1
   25a74:	e5c02001 	strb	r2, [r0, #1]
   25a78:	e5c03002 	strb	r3, [r0, #2]
   25a7c:	e3a00003 	mov	r0, #3
   25a80:	e12fff1e 	bx	lr
   25a84:	e2413801 	sub	r3, r1, #65536	; 0x10000
   25a88:	e3530601 	cmp	r3, #1048576	; 0x100000
   25a8c:	2affffda 	bcs	259fc <wcrtomb+0x40>
   25a90:	e7e52651 	ubfx	r2, r1, #12, #6
   25a94:	e3e0300f 	mvn	r3, #15
   25a98:	e1833921 	orr	r3, r3, r1, lsr #18
   25a9c:	e5c03000 	strb	r3, [r0]
   25aa0:	e3e0307f 	mvn	r3, #127	; 0x7f
   25aa4:	e1832002 	orr	r2, r3, r2
   25aa8:	e5c02001 	strb	r2, [r0, #1]
   25aac:	e7e52351 	ubfx	r2, r1, #6, #6
   25ab0:	e201103f 	and	r1, r1, #63	; 0x3f
   25ab4:	e1832002 	orr	r2, r3, r2
   25ab8:	e1831001 	orr	r1, r3, r1
   25abc:	e5c02002 	strb	r2, [r0, #2]
   25ac0:	e5c01003 	strb	r1, [r0, #3]
   25ac4:	e3a00004 	mov	r0, #4
   25ac8:	e12fff1e 	bx	lr
   25acc:	0000000c 	andeq	r0, r0, ip

00025ad0 <close_file>:
   25ad0:	e92d4013 	push	{r0, r1, r4, lr}
   25ad4:	e2504000 	subs	r4, r0, #0
   25ad8:	0a000016 	beq	25b38 <close_file+0x68>
   25adc:	e594304c 	ldr	r3, [r4, #76]	; 0x4c
   25ae0:	e3530000 	cmp	r3, #0
   25ae4:	ba000000 	blt	25aec <close_file+0x1c>
   25ae8:	ebfff32f 	bl	227ac <__lockfile>
   25aec:	e5942014 	ldr	r2, [r4, #20]
   25af0:	e594301c 	ldr	r3, [r4, #28]
   25af4:	e1520003 	cmp	r2, r3
   25af8:	9a000004 	bls	25b10 <close_file+0x40>
   25afc:	e3a02000 	mov	r2, #0
   25b00:	e5943024 	ldr	r3, [r4, #36]	; 0x24
   25b04:	e1a01002 	mov	r1, r2
   25b08:	e1a00004 	mov	r0, r4
   25b0c:	e12fff33 	blx	r3
   25b10:	e994000c 	ldmib	r4, {r2, r3}
   25b14:	e1520003 	cmp	r2, r3
   25b18:	2a000006 	bcs	25b38 <close_file+0x68>
   25b1c:	e0422003 	sub	r2, r2, r3
   25b20:	e1a00004 	mov	r0, r4
   25b24:	e3a03001 	mov	r3, #1
   25b28:	e58d3000 	str	r3, [sp]
   25b2c:	e1a03fc2 	asr	r3, r2, #31
   25b30:	e5941028 	ldr	r1, [r4, #40]	; 0x28
   25b34:	e12fff31 	blx	r1
   25b38:	e28dd008 	add	sp, sp, #8
   25b3c:	e8bd8010 	pop	{r4, pc}

00025b40 <__stdio_exit>:
   25b40:	e92d4010 	push	{r4, lr}
   25b44:	ebffe726 	bl	1f7e4 <__ofl_lock>
   25b48:	e5904000 	ldr	r4, [r0]
   25b4c:	e3540000 	cmp	r4, #0
   25b50:	1a000006 	bne	25b70 <__stdio_exit+0x30>
   25b54:	e59f3024 	ldr	r3, [pc, #36]	; 25b80 <__stdio_exit+0x40>
   25b58:	e5930000 	ldr	r0, [r3]
   25b5c:	ebffffdb 	bl	25ad0 <close_file>
   25b60:	e59f301c 	ldr	r3, [pc, #28]	; 25b84 <__stdio_exit+0x44>
   25b64:	e8bd4010 	pop	{r4, lr}
   25b68:	e5930000 	ldr	r0, [r3]
   25b6c:	eaffffd7 	b	25ad0 <close_file>
   25b70:	e1a00004 	mov	r0, r4
   25b74:	ebffffd5 	bl	25ad0 <close_file>
   25b78:	e5944038 	ldr	r4, [r4, #56]	; 0x38
   25b7c:	eafffff2 	b	25b4c <__stdio_exit+0xc>
   25b80:	00048a7c 	andeq	r8, r4, ip, ror sl
   25b84:	0002c840 	andeq	ip, r2, r0, asr #16

00025b88 <__uflow>:
   25b88:	e92d4013 	push	{r0, r1, r4, lr}
   25b8c:	e1a04000 	mov	r4, r0
   25b90:	eb0000a3 	bl	25e24 <__toread>
   25b94:	e3500000 	cmp	r0, #0
   25b98:	0a000002 	beq	25ba8 <__uflow+0x20>
   25b9c:	e3e00000 	mvn	r0, #0
   25ba0:	e28dd008 	add	sp, sp, #8
   25ba4:	e8bd8010 	pop	{r4, pc}
   25ba8:	e5943020 	ldr	r3, [r4, #32]
   25bac:	e28d1007 	add	r1, sp, #7
   25bb0:	e3a02001 	mov	r2, #1
   25bb4:	e1a00004 	mov	r0, r4
   25bb8:	e12fff33 	blx	r3
   25bbc:	e3500001 	cmp	r0, #1
   25bc0:	1afffff5 	bne	25b9c <__uflow+0x14>
   25bc4:	e5dd0007 	ldrb	r0, [sp, #7]
   25bc8:	eafffff4 	b	25ba0 <__uflow+0x18>

00025bcc <copysign>:
   25bcc:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
   25bd0:	e203c102 	and	ip, r3, #-2147483648	; 0x80000000
   25bd4:	e181300c 	orr	r3, r1, ip
   25bd8:	e1a01003 	mov	r1, r3
   25bdc:	e12fff1e 	bx	lr

00025be0 <fmod>:
   25be0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25be4:	e24dd01c 	sub	sp, sp, #28
   25be8:	e1cd20f0 	strd	r2, [sp]
   25bec:	e59dc000 	ldr	ip, [sp]
   25bf0:	e59d8004 	ldr	r8, [sp, #4]
   25bf4:	e09c300c 	adds	r3, ip, ip
   25bf8:	e58d3008 	str	r3, [sp, #8]
   25bfc:	e0a83008 	adc	r3, r8, r8
   25c00:	e58d300c 	str	r3, [sp, #12]
   25c04:	e1cd20d8 	ldrd	r2, [sp, #8]
   25c08:	e1923003 	orrs	r3, r2, r3
   25c0c:	0a00000e 	beq	25c4c <fmod+0x6c>
   25c10:	e59f7208 	ldr	r7, [pc, #520]	; 25e20 <fmod+0x240>
   25c14:	e3c85102 	bic	r5, r8, #-2147483648	; 0x80000000
   25c18:	e3a06000 	mov	r6, #0
   25c1c:	e7ea2a51 	ubfx	r2, r1, #20, #11
   25c20:	e1550007 	cmp	r5, r7
   25c24:	e30047ff 	movw	r4, #2047	; 0x7ff
   25c28:	015c0006 	cmpeq	ip, r6
   25c2c:	e1a09000 	mov	r9, r0
   25c30:	e1a0e001 	mov	lr, r1
   25c34:	83a03001 	movhi	r3, #1
   25c38:	93a03000 	movls	r3, #0
   25c3c:	e1520004 	cmp	r2, r4
   25c40:	03833001 	orreq	r3, r3, #1
   25c44:	e3530000 	cmp	r3, #0
   25c48:	0a000006 	beq	25c68 <fmod+0x88>
   25c4c:	e1cd20d0 	ldrd	r2, [sp]
   25c50:	eb000398 	bl	26ab8 <__aeabi_dmul>
   25c54:	e1a02000 	mov	r2, r0
   25c58:	e1a03001 	mov	r3, r1
   25c5c:	eb000430 	bl	26d24 <__aeabi_ddiv>
   25c60:	e28dd01c 	add	sp, sp, #28
   25c64:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25c68:	e0903000 	adds	r3, r0, r0
   25c6c:	e58d3010 	str	r3, [sp, #16]
   25c70:	e0a13001 	adc	r3, r1, r1
   25c74:	e58d3014 	str	r3, [sp, #20]
   25c78:	e1cd40d8 	ldrd	r4, [sp, #8]
   25c7c:	e1cd61d0 	ldrd	r6, [sp, #16]
   25c80:	e1550007 	cmp	r5, r7
   25c84:	01540006 	cmpeq	r4, r6
   25c88:	3a000004 	bcc	25ca0 <fmod+0xc0>
   25c8c:	1afffff3 	bne	25c60 <fmod+0x80>
   25c90:	e3a02000 	mov	r2, #0
   25c94:	e3a03000 	mov	r3, #0
   25c98:	eb000386 	bl	26ab8 <__aeabi_dmul>
   25c9c:	eaffffef 	b	25c60 <fmod+0x80>
   25ca0:	e3520000 	cmp	r2, #0
   25ca4:	1a00003e 	bne	25da4 <fmod+0x1c4>
   25ca8:	e1a05601 	lsl	r5, r1, #12
   25cac:	e1a04600 	lsl	r4, r0, #12
   25cb0:	e1855a20 	orr	r5, r5, r0, lsr #20
   25cb4:	e3540000 	cmp	r4, #0
   25cb8:	e2d53000 	sbcs	r3, r5, #0
   25cbc:	aa000034 	bge	25d94 <fmod+0x1b4>
   25cc0:	e2624001 	rsb	r4, r2, #1
   25cc4:	e2447020 	sub	r7, r4, #32
   25cc8:	e1a0641e 	lsl	r6, lr, r4
   25ccc:	e2645020 	rsb	r5, r4, #32
   25cd0:	e1866719 	orr	r6, r6, r9, lsl r7
   25cd4:	e1866539 	orr	r6, r6, r9, lsr r5
   25cd8:	e1a03419 	lsl	r3, r9, r4
   25cdc:	e7ea7a58 	ubfx	r7, r8, #20, #11
   25ce0:	e3570000 	cmp	r7, #0
   25ce4:	17f38058 	ubfxne	r8, r8, #0, #20
   25ce8:	13884601 	orrne	r4, r8, #1048576	; 0x100000
   25cec:	11a0500c 	movne	r5, ip
   25cf0:	1a00000d 	bne	25d2c <fmod+0x14c>
   25cf4:	e1a05608 	lsl	r5, r8, #12
   25cf8:	e1a0460c 	lsl	r4, ip, #12
   25cfc:	e1855a2c 	orr	r5, r5, ip, lsr #20
   25d00:	e3540000 	cmp	r4, #0
   25d04:	e2d59000 	sbcs	r9, r5, #0
   25d08:	aa000029 	bge	25db4 <fmod+0x1d4>
   25d0c:	e2679001 	rsb	r9, r7, #1
   25d10:	e2494020 	sub	r4, r9, #32
   25d14:	e1a05004 	mov	r5, r4
   25d18:	e1a04918 	lsl	r4, r8, r9
   25d1c:	e184451c 	orr	r4, r4, ip, lsl r5
   25d20:	e2695020 	rsb	r5, r9, #32
   25d24:	e184453c 	orr	r4, r4, ip, lsr r5
   25d28:	e1a0591c 	lsl	r5, ip, r9
   25d2c:	e053a005 	subs	sl, r3, r5
   25d30:	e0c6b004 	sbc	fp, r6, r4
   25d34:	e1520007 	cmp	r2, r7
   25d38:	ca000021 	bgt	25dc4 <fmod+0x1e4>
   25d3c:	e35a0000 	cmp	sl, #0
   25d40:	e2dbc000 	sbcs	ip, fp, #0
   25d44:	ba000003 	blt	25d58 <fmod+0x178>
   25d48:	e19a300b 	orrs	r3, sl, fp
   25d4c:	11a0300a 	movne	r3, sl
   25d50:	11a0600b 	movne	r6, fp
   25d54:	0affffcd 	beq	25c90 <fmod+0xb0>
   25d58:	e1a00a26 	lsr	r0, r6, #20
   25d5c:	e3a01000 	mov	r1, #0
   25d60:	e1901001 	orrs	r1, r0, r1
   25d64:	0a000021 	beq	25df0 <fmod+0x210>
   25d68:	e3520000 	cmp	r2, #0
   25d6c:	da000023 	ble	25e00 <fmod+0x220>
   25d70:	e3a01000 	mov	r1, #0
   25d74:	e0933001 	adds	r3, r3, r1
   25d78:	e2411601 	sub	r1, r1, #1048576	; 0x100000
   25d7c:	e0a66001 	adc	r6, r6, r1
   25d80:	e1862a02 	orr	r2, r6, r2, lsl #20
   25d84:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
   25d88:	e1a00003 	mov	r0, r3
   25d8c:	e18e1002 	orr	r1, lr, r2
   25d90:	eaffffb2 	b	25c60 <fmod+0x80>
   25d94:	e0944004 	adds	r4, r4, r4
   25d98:	e2422001 	sub	r2, r2, #1
   25d9c:	e0a55005 	adc	r5, r5, r5
   25da0:	eaffffc3 	b	25cb4 <fmod+0xd4>
   25da4:	e7f34051 	ubfx	r4, r1, #0, #20
   25da8:	e1a03000 	mov	r3, r0
   25dac:	e3846601 	orr	r6, r4, #1048576	; 0x100000
   25db0:	eaffffc9 	b	25cdc <fmod+0xfc>
   25db4:	e0944004 	adds	r4, r4, r4
   25db8:	e2477001 	sub	r7, r7, #1
   25dbc:	e0a55005 	adc	r5, r5, r5
   25dc0:	eaffffce 	b	25d00 <fmod+0x120>
   25dc4:	e35a0000 	cmp	sl, #0
   25dc8:	e2dbc000 	sbcs	ip, fp, #0
   25dcc:	ba000003 	blt	25de0 <fmod+0x200>
   25dd0:	e19a300b 	orrs	r3, sl, fp
   25dd4:	0affffad 	beq	25c90 <fmod+0xb0>
   25dd8:	e1a0300a 	mov	r3, sl
   25ddc:	e1a0600b 	mov	r6, fp
   25de0:	e0933003 	adds	r3, r3, r3
   25de4:	e2422001 	sub	r2, r2, #1
   25de8:	e0a66006 	adc	r6, r6, r6
   25dec:	eaffffce 	b	25d2c <fmod+0x14c>
   25df0:	e0933003 	adds	r3, r3, r3
   25df4:	e2422001 	sub	r2, r2, #1
   25df8:	e0a66006 	adc	r6, r6, r6
   25dfc:	eaffffd5 	b	25d58 <fmod+0x178>
   25e00:	e2621001 	rsb	r1, r2, #1
   25e04:	e282201f 	add	r2, r2, #31
   25e08:	e1a03133 	lsr	r3, r3, r1
   25e0c:	e2410020 	sub	r0, r1, #32
   25e10:	e1833216 	orr	r3, r3, r6, lsl r2
   25e14:	e1a02136 	lsr	r2, r6, r1
   25e18:	e1833036 	orr	r3, r3, r6, lsr r0
   25e1c:	eaffffd8 	b	25d84 <fmod+0x1a4>
   25e20:	7ff00000 	svcvc	0x00f00000	; IMB

00025e24 <__toread>:
   25e24:	e92d4010 	push	{r4, lr}
   25e28:	e1a04000 	mov	r4, r0
   25e2c:	e1d034da 	ldrsb	r3, [r0, #74]	; 0x4a
   25e30:	e2432001 	sub	r2, r3, #1
   25e34:	e1833002 	orr	r3, r3, r2
   25e38:	e5902014 	ldr	r2, [r0, #20]
   25e3c:	e5c0304a 	strb	r3, [r0, #74]	; 0x4a
   25e40:	e590301c 	ldr	r3, [r0, #28]
   25e44:	e1520003 	cmp	r2, r3
   25e48:	9a000003 	bls	25e5c <__toread+0x38>
   25e4c:	e3a02000 	mov	r2, #0
   25e50:	e5903024 	ldr	r3, [r0, #36]	; 0x24
   25e54:	e1a01002 	mov	r1, r2
   25e58:	e12fff33 	blx	r3
   25e5c:	e5940000 	ldr	r0, [r4]
   25e60:	e3a03000 	mov	r3, #0
   25e64:	e5843010 	str	r3, [r4, #16]
   25e68:	e3100004 	tst	r0, #4
   25e6c:	e584301c 	str	r3, [r4, #28]
   25e70:	e5843014 	str	r3, [r4, #20]
   25e74:	0a000003 	beq	25e88 <__toread+0x64>
   25e78:	e3800020 	orr	r0, r0, #32
   25e7c:	e5840000 	str	r0, [r4]
   25e80:	e3e00000 	mvn	r0, #0
   25e84:	e8bd8010 	pop	{r4, pc}
   25e88:	e594302c 	ldr	r3, [r4, #44]	; 0x2c
   25e8c:	e7a00250 	sbfx	r0, r0, #4, #1
   25e90:	e5942030 	ldr	r2, [r4, #48]	; 0x30
   25e94:	e0833002 	add	r3, r3, r2
   25e98:	e5843008 	str	r3, [r4, #8]
   25e9c:	e5843004 	str	r3, [r4, #4]
   25ea0:	e8bd8010 	pop	{r4, pc}

00025ea4 <__toread_needs_stdio_exit>:
   25ea4:	eaffff25 	b	25b40 <__stdio_exit>
   25ea8:	e92d4070 	push	{r4, r5, r6, lr}
   25eac:	e3a0c0ff 	mov	ip, #255	; 0xff
   25eb0:	e38ccc07 	orr	ip, ip, #1792	; 0x700
   25eb4:	e01c4a21 	ands	r4, ip, r1, lsr #20
   25eb8:	101c5a23 	andsne	r5, ip, r3, lsr #20
   25ebc:	1134000c 	teqne	r4, ip
   25ec0:	1135000c 	teqne	r5, ip
   25ec4:	0b00006f 	bleq	26088 <__toread_needs_stdio_exit+0x1e4>
   25ec8:	e0844005 	add	r4, r4, r5
   25ecc:	e0216003 	eor	r6, r1, r3
   25ed0:	e1c11a8c 	bic	r1, r1, ip, lsl #21
   25ed4:	e1c33a8c 	bic	r3, r3, ip, lsl #21
   25ed8:	e1905601 	orrs	r5, r0, r1, lsl #12
   25edc:	11925603 	orrsne	r5, r2, r3, lsl #12
   25ee0:	e3811601 	orr	r1, r1, #1048576	; 0x100000
   25ee4:	e3833601 	orr	r3, r3, #1048576	; 0x100000
   25ee8:	0a00001c 	beq	25f60 <__toread_needs_stdio_exit+0xbc>
   25eec:	e08ec290 	umull	ip, lr, r0, r2
   25ef0:	e3a05000 	mov	r5, #0
   25ef4:	e0a5e291 	umlal	lr, r5, r1, r2
   25ef8:	e2062102 	and	r2, r6, #-2147483648	; 0x80000000
   25efc:	e0a5e390 	umlal	lr, r5, r0, r3
   25f00:	e3a06000 	mov	r6, #0
   25f04:	e0a65391 	umlal	r5, r6, r1, r3
   25f08:	e33c0000 	teq	ip, #0
   25f0c:	138ee001 	orrne	lr, lr, #1
   25f10:	e24440ff 	sub	r4, r4, #255	; 0xff
   25f14:	e3560c02 	cmp	r6, #512	; 0x200
   25f18:	e2c44c03 	sbc	r4, r4, #768	; 0x300
   25f1c:	2a000002 	bcs	25f2c <__toread_needs_stdio_exit+0x88>
   25f20:	e1b0e08e 	lsls	lr, lr, #1
   25f24:	e0b55005 	adcs	r5, r5, r5
   25f28:	e0a66006 	adc	r6, r6, r6
   25f2c:	e1821586 	orr	r1, r2, r6, lsl #11
   25f30:	e1811aa5 	orr	r1, r1, r5, lsr #21
   25f34:	e1a00585 	lsl	r0, r5, #11
   25f38:	e1800aae 	orr	r0, r0, lr, lsr #21
   25f3c:	e1a0e58e 	lsl	lr, lr, #11
   25f40:	e254c0fd 	subs	ip, r4, #253	; 0xfd
   25f44:	835c0c07 	cmphi	ip, #1792	; 0x700
   25f48:	8a00000f 	bhi	25f8c <__toread_needs_stdio_exit+0xe8>
   25f4c:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
   25f50:	01b0e0a0 	lsrseq	lr, r0, #1
   25f54:	e2b00000 	adcs	r0, r0, #0
   25f58:	e0a11a04 	adc	r1, r1, r4, lsl #20
   25f5c:	e8bd8070 	pop	{r4, r5, r6, pc}
   25f60:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
   25f64:	e1861001 	orr	r1, r6, r1
   25f68:	e1800002 	orr	r0, r0, r2
   25f6c:	e0211003 	eor	r1, r1, r3
   25f70:	e05440ac 	subs	r4, r4, ip, lsr #1
   25f74:	c074500c 	rsbsgt	r5, r4, ip
   25f78:	c1811a04 	orrgt	r1, r1, r4, lsl #20
   25f7c:	c8bd8070 	popgt	{r4, r5, r6, pc}
   25f80:	e3811601 	orr	r1, r1, #1048576	; 0x100000
   25f84:	e3a0e000 	mov	lr, #0
   25f88:	e2544001 	subs	r4, r4, #1
   25f8c:	ca000058 	bgt	260f4 <__toread_needs_stdio_exit+0x250>
   25f90:	e3740036 	cmn	r4, #54	; 0x36
   25f94:	d3a00000 	movle	r0, #0
   25f98:	d2011102 	andle	r1, r1, #-2147483648	; 0x80000000
   25f9c:	d8bd8070 	pople	{r4, r5, r6, pc}
   25fa0:	e2644000 	rsb	r4, r4, #0
   25fa4:	e2544020 	subs	r4, r4, #32
   25fa8:	aa000018 	bge	26010 <__toread_needs_stdio_exit+0x16c>
   25fac:	e294400c 	adds	r4, r4, #12
   25fb0:	ca00000b 	bgt	25fe4 <__toread_needs_stdio_exit+0x140>
   25fb4:	e2844014 	add	r4, r4, #20
   25fb8:	e2645020 	rsb	r5, r4, #32
   25fbc:	e1a03510 	lsl	r3, r0, r5
   25fc0:	e1a00430 	lsr	r0, r0, r4
   25fc4:	e1800511 	orr	r0, r0, r1, lsl r5
   25fc8:	e2012102 	and	r2, r1, #-2147483648	; 0x80000000
   25fcc:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
   25fd0:	e0900fa3 	adds	r0, r0, r3, lsr #31
   25fd4:	e0a21431 	adc	r1, r2, r1, lsr r4
   25fd8:	e19ee083 	orrs	lr, lr, r3, lsl #1
   25fdc:	01c00fa3 	biceq	r0, r0, r3, lsr #31
   25fe0:	e8bd8070 	pop	{r4, r5, r6, pc}
   25fe4:	e264400c 	rsb	r4, r4, #12
   25fe8:	e2645020 	rsb	r5, r4, #32
   25fec:	e1a03410 	lsl	r3, r0, r4
   25ff0:	e1a00530 	lsr	r0, r0, r5
   25ff4:	e1800411 	orr	r0, r0, r1, lsl r4
   25ff8:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   25ffc:	e0900fa3 	adds	r0, r0, r3, lsr #31
   26000:	e2a11000 	adc	r1, r1, #0
   26004:	e19ee083 	orrs	lr, lr, r3, lsl #1
   26008:	01c00fa3 	biceq	r0, r0, r3, lsr #31
   2600c:	e8bd8070 	pop	{r4, r5, r6, pc}
   26010:	e2645020 	rsb	r5, r4, #32
   26014:	e18ee510 	orr	lr, lr, r0, lsl r5
   26018:	e1a03430 	lsr	r3, r0, r4
   2601c:	e1833511 	orr	r3, r3, r1, lsl r5
   26020:	e1a00431 	lsr	r0, r1, r4
   26024:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   26028:	e1c00431 	bic	r0, r0, r1, lsr r4
   2602c:	e0800fa3 	add	r0, r0, r3, lsr #31
   26030:	e19ee083 	orrs	lr, lr, r3, lsl #1
   26034:	01c00fa3 	biceq	r0, r0, r3, lsr #31
   26038:	e8bd8070 	pop	{r4, r5, r6, pc}
   2603c:	e3340000 	teq	r4, #0
   26040:	1a000008 	bne	26068 <__toread_needs_stdio_exit+0x1c4>
   26044:	e2016102 	and	r6, r1, #-2147483648	; 0x80000000
   26048:	e1b00080 	lsls	r0, r0, #1
   2604c:	e0a11001 	adc	r1, r1, r1
   26050:	e3110601 	tst	r1, #1048576	; 0x100000
   26054:	02444001 	subeq	r4, r4, #1
   26058:	0afffffa 	beq	26048 <__toread_needs_stdio_exit+0x1a4>
   2605c:	e1811006 	orr	r1, r1, r6
   26060:	e3350000 	teq	r5, #0
   26064:	112fff1e 	bxne	lr
   26068:	e2036102 	and	r6, r3, #-2147483648	; 0x80000000
   2606c:	e1b02082 	lsls	r2, r2, #1
   26070:	e0a33003 	adc	r3, r3, r3
   26074:	e3130601 	tst	r3, #1048576	; 0x100000
   26078:	02455001 	subeq	r5, r5, #1
   2607c:	0afffffa 	beq	2606c <__toread_needs_stdio_exit+0x1c8>
   26080:	e1833006 	orr	r3, r3, r6
   26084:	e12fff1e 	bx	lr
   26088:	e134000c 	teq	r4, ip
   2608c:	e00c5a23 	and	r5, ip, r3, lsr #20
   26090:	1135000c 	teqne	r5, ip
   26094:	0a000006 	beq	260b4 <__toread_needs_stdio_exit+0x210>
   26098:	e1906081 	orrs	r6, r0, r1, lsl #1
   2609c:	11926083 	orrsne	r6, r2, r3, lsl #1
   260a0:	1affffe5 	bne	2603c <__toread_needs_stdio_exit+0x198>
   260a4:	e0211003 	eor	r1, r1, r3
   260a8:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   260ac:	e3a00000 	mov	r0, #0
   260b0:	e8bd8070 	pop	{r4, r5, r6, pc}
   260b4:	e1906081 	orrs	r6, r0, r1, lsl #1
   260b8:	01a00002 	moveq	r0, r2
   260bc:	01a01003 	moveq	r1, r3
   260c0:	11926083 	orrsne	r6, r2, r3, lsl #1
   260c4:	0a00000f 	beq	26108 <__toread_needs_stdio_exit+0x264>
   260c8:	e134000c 	teq	r4, ip
   260cc:	1a000001 	bne	260d8 <__toread_needs_stdio_exit+0x234>
   260d0:	e1906601 	orrs	r6, r0, r1, lsl #12
   260d4:	1a00000b 	bne	26108 <__toread_needs_stdio_exit+0x264>
   260d8:	e135000c 	teq	r5, ip
   260dc:	1a000003 	bne	260f0 <__toread_needs_stdio_exit+0x24c>
   260e0:	e1926603 	orrs	r6, r2, r3, lsl #12
   260e4:	11a00002 	movne	r0, r2
   260e8:	11a01003 	movne	r1, r3
   260ec:	1a000005 	bne	26108 <__toread_needs_stdio_exit+0x264>
   260f0:	e0211003 	eor	r1, r1, r3
   260f4:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   260f8:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
   260fc:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
   26100:	e3a00000 	mov	r0, #0
   26104:	e8bd8070 	pop	{r4, r5, r6, pc}
   26108:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
   2610c:	e381173e 	orr	r1, r1, #16252928	; 0xf80000
   26110:	e8bd8070 	pop	{r4, r5, r6, pc}

00026114 <__aeabi_fmul>:
   26114:	e3a0c0ff 	mov	ip, #255	; 0xff
   26118:	e01c2ba0 	ands	r2, ip, r0, lsr #23
   2611c:	101c3ba1 	andsne	r3, ip, r1, lsr #23
   26120:	1132000c 	teqne	r2, ip
   26124:	1133000c 	teqne	r3, ip
   26128:	0a00003e 	beq	26228 <__aeabi_fmul+0x114>
   2612c:	e0822003 	add	r2, r2, r3
   26130:	e020c001 	eor	ip, r0, r1
   26134:	e1b00480 	lsls	r0, r0, #9
   26138:	11b01481 	lslsne	r1, r1, #9
   2613c:	0a000010 	beq	26184 <__aeabi_fmul+0x70>
   26140:	e3a03302 	mov	r3, #134217728	; 0x8000000
   26144:	e18302a0 	orr	r0, r3, r0, lsr #5
   26148:	e18312a1 	orr	r1, r3, r1, lsr #5
   2614c:	e0813190 	umull	r3, r1, r0, r1
   26150:	e20c0102 	and	r0, ip, #-2147483648	; 0x80000000
   26154:	e3510502 	cmp	r1, #8388608	; 0x800000
   26158:	31a01081 	lslcc	r1, r1, #1
   2615c:	31811fa3 	orrcc	r1, r1, r3, lsr #31
   26160:	31a03083 	lslcc	r3, r3, #1
   26164:	e1800001 	orr	r0, r0, r1
   26168:	e2c2207f 	sbc	r2, r2, #127	; 0x7f
   2616c:	e35200fd 	cmp	r2, #253	; 0xfd
   26170:	8a00000f 	bhi	261b4 <__aeabi_fmul+0xa0>
   26174:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
   26178:	e0a00b82 	adc	r0, r0, r2, lsl #23
   2617c:	03c00001 	biceq	r0, r0, #1
   26180:	e12fff1e 	bx	lr
   26184:	e3300000 	teq	r0, #0
   26188:	e20cc102 	and	ip, ip, #-2147483648	; 0x80000000
   2618c:	01a01481 	lsleq	r1, r1, #9
   26190:	e18c04a0 	orr	r0, ip, r0, lsr #9
   26194:	e18004a1 	orr	r0, r0, r1, lsr #9
   26198:	e252207f 	subs	r2, r2, #127	; 0x7f
   2619c:	c27230ff 	rsbsgt	r3, r2, #255	; 0xff
   261a0:	c1800b82 	orrgt	r0, r0, r2, lsl #23
   261a4:	c12fff1e 	bxgt	lr
   261a8:	e3800502 	orr	r0, r0, #8388608	; 0x800000
   261ac:	e3a03000 	mov	r3, #0
   261b0:	e2522001 	subs	r2, r2, #1
   261b4:	ca000035 	bgt	26290 <__aeabi_fmul+0x17c>
   261b8:	e3720019 	cmn	r2, #25
   261bc:	d2000102 	andle	r0, r0, #-2147483648	; 0x80000000
   261c0:	d12fff1e 	bxle	lr
   261c4:	e2622000 	rsb	r2, r2, #0
   261c8:	e1b01080 	lsls	r1, r0, #1
   261cc:	e1a01231 	lsr	r1, r1, r2
   261d0:	e2622020 	rsb	r2, r2, #32
   261d4:	e1a0c210 	lsl	ip, r0, r2
   261d8:	e1b00061 	rrxs	r0, r1
   261dc:	e2a00000 	adc	r0, r0, #0
   261e0:	e193308c 	orrs	r3, r3, ip, lsl #1
   261e4:	01c00fac 	biceq	r0, r0, ip, lsr #31
   261e8:	e12fff1e 	bx	lr
   261ec:	e3320000 	teq	r2, #0
   261f0:	e200c102 	and	ip, r0, #-2147483648	; 0x80000000
   261f4:	01a00080 	lsleq	r0, r0, #1
   261f8:	03100502 	tsteq	r0, #8388608	; 0x800000
   261fc:	02422001 	subeq	r2, r2, #1
   26200:	0afffffb 	beq	261f4 <__aeabi_fmul+0xe0>
   26204:	e180000c 	orr	r0, r0, ip
   26208:	e3330000 	teq	r3, #0
   2620c:	e201c102 	and	ip, r1, #-2147483648	; 0x80000000
   26210:	01a01081 	lsleq	r1, r1, #1
   26214:	03110502 	tsteq	r1, #8388608	; 0x800000
   26218:	02433001 	subeq	r3, r3, #1
   2621c:	0afffffb 	beq	26210 <__aeabi_fmul+0xfc>
   26220:	e181100c 	orr	r1, r1, ip
   26224:	eaffffc0 	b	2612c <__aeabi_fmul+0x18>
   26228:	e00c3ba1 	and	r3, ip, r1, lsr #23
   2622c:	e132000c 	teq	r2, ip
   26230:	1133000c 	teqne	r3, ip
   26234:	0a000005 	beq	26250 <__aeabi_fmul+0x13c>
   26238:	e3d0c102 	bics	ip, r0, #-2147483648	; 0x80000000
   2623c:	13d1c102 	bicsne	ip, r1, #-2147483648	; 0x80000000
   26240:	1affffe9 	bne	261ec <__aeabi_fmul+0xd8>
   26244:	e0200001 	eor	r0, r0, r1
   26248:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
   2624c:	e12fff1e 	bx	lr
   26250:	e3300000 	teq	r0, #0
   26254:	13300102 	teqne	r0, #-2147483648	; 0x80000000
   26258:	01a00001 	moveq	r0, r1
   2625c:	13310000 	teqne	r1, #0
   26260:	13310102 	teqne	r1, #-2147483648	; 0x80000000
   26264:	0a00000d 	beq	262a0 <__aeabi_fmul+0x18c>
   26268:	e132000c 	teq	r2, ip
   2626c:	1a000001 	bne	26278 <__aeabi_fmul+0x164>
   26270:	e1b02480 	lsls	r2, r0, #9
   26274:	1a000009 	bne	262a0 <__aeabi_fmul+0x18c>
   26278:	e133000c 	teq	r3, ip
   2627c:	1a000002 	bne	2628c <__aeabi_fmul+0x178>
   26280:	e1b03481 	lsls	r3, r1, #9
   26284:	11a00001 	movne	r0, r1
   26288:	1a000004 	bne	262a0 <__aeabi_fmul+0x18c>
   2628c:	e0200001 	eor	r0, r0, r1
   26290:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
   26294:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
   26298:	e3800502 	orr	r0, r0, #8388608	; 0x800000
   2629c:	e12fff1e 	bx	lr
   262a0:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
   262a4:	e3800503 	orr	r0, r0, #12582912	; 0xc00000
   262a8:	e12fff1e 	bx	lr

000262ac <__udivsi3>:
   262ac:	e2512001 	subs	r2, r1, #1
   262b0:	012fff1e 	bxeq	lr
   262b4:	3a000074 	bcc	2648c <__udivsi3+0x1e0>
   262b8:	e1500001 	cmp	r0, r1
   262bc:	9a00006b 	bls	26470 <__udivsi3+0x1c4>
   262c0:	e1110002 	tst	r1, r2
   262c4:	0a00006c 	beq	2647c <__udivsi3+0x1d0>
   262c8:	e16f3f10 	clz	r3, r0
   262cc:	e16f2f11 	clz	r2, r1
   262d0:	e0423003 	sub	r3, r2, r3
   262d4:	e273301f 	rsbs	r3, r3, #31
   262d8:	10833083 	addne	r3, r3, r3, lsl #1
   262dc:	e3a02000 	mov	r2, #0
   262e0:	108ff103 	addne	pc, pc, r3, lsl #2
   262e4:	e1a00000 	nop			; (mov r0, r0)
   262e8:	e1500f81 	cmp	r0, r1, lsl #31
   262ec:	e0a22002 	adc	r2, r2, r2
   262f0:	20400f81 	subcs	r0, r0, r1, lsl #31
   262f4:	e1500f01 	cmp	r0, r1, lsl #30
   262f8:	e0a22002 	adc	r2, r2, r2
   262fc:	20400f01 	subcs	r0, r0, r1, lsl #30
   26300:	e1500e81 	cmp	r0, r1, lsl #29
   26304:	e0a22002 	adc	r2, r2, r2
   26308:	20400e81 	subcs	r0, r0, r1, lsl #29
   2630c:	e1500e01 	cmp	r0, r1, lsl #28
   26310:	e0a22002 	adc	r2, r2, r2
   26314:	20400e01 	subcs	r0, r0, r1, lsl #28
   26318:	e1500d81 	cmp	r0, r1, lsl #27
   2631c:	e0a22002 	adc	r2, r2, r2
   26320:	20400d81 	subcs	r0, r0, r1, lsl #27
   26324:	e1500d01 	cmp	r0, r1, lsl #26
   26328:	e0a22002 	adc	r2, r2, r2
   2632c:	20400d01 	subcs	r0, r0, r1, lsl #26
   26330:	e1500c81 	cmp	r0, r1, lsl #25
   26334:	e0a22002 	adc	r2, r2, r2
   26338:	20400c81 	subcs	r0, r0, r1, lsl #25
   2633c:	e1500c01 	cmp	r0, r1, lsl #24
   26340:	e0a22002 	adc	r2, r2, r2
   26344:	20400c01 	subcs	r0, r0, r1, lsl #24
   26348:	e1500b81 	cmp	r0, r1, lsl #23
   2634c:	e0a22002 	adc	r2, r2, r2
   26350:	20400b81 	subcs	r0, r0, r1, lsl #23
   26354:	e1500b01 	cmp	r0, r1, lsl #22
   26358:	e0a22002 	adc	r2, r2, r2
   2635c:	20400b01 	subcs	r0, r0, r1, lsl #22
   26360:	e1500a81 	cmp	r0, r1, lsl #21
   26364:	e0a22002 	adc	r2, r2, r2
   26368:	20400a81 	subcs	r0, r0, r1, lsl #21
   2636c:	e1500a01 	cmp	r0, r1, lsl #20
   26370:	e0a22002 	adc	r2, r2, r2
   26374:	20400a01 	subcs	r0, r0, r1, lsl #20
   26378:	e1500981 	cmp	r0, r1, lsl #19
   2637c:	e0a22002 	adc	r2, r2, r2
   26380:	20400981 	subcs	r0, r0, r1, lsl #19
   26384:	e1500901 	cmp	r0, r1, lsl #18
   26388:	e0a22002 	adc	r2, r2, r2
   2638c:	20400901 	subcs	r0, r0, r1, lsl #18
   26390:	e1500881 	cmp	r0, r1, lsl #17
   26394:	e0a22002 	adc	r2, r2, r2
   26398:	20400881 	subcs	r0, r0, r1, lsl #17
   2639c:	e1500801 	cmp	r0, r1, lsl #16
   263a0:	e0a22002 	adc	r2, r2, r2
   263a4:	20400801 	subcs	r0, r0, r1, lsl #16
   263a8:	e1500781 	cmp	r0, r1, lsl #15
   263ac:	e0a22002 	adc	r2, r2, r2
   263b0:	20400781 	subcs	r0, r0, r1, lsl #15
   263b4:	e1500701 	cmp	r0, r1, lsl #14
   263b8:	e0a22002 	adc	r2, r2, r2
   263bc:	20400701 	subcs	r0, r0, r1, lsl #14
   263c0:	e1500681 	cmp	r0, r1, lsl #13
   263c4:	e0a22002 	adc	r2, r2, r2
   263c8:	20400681 	subcs	r0, r0, r1, lsl #13
   263cc:	e1500601 	cmp	r0, r1, lsl #12
   263d0:	e0a22002 	adc	r2, r2, r2
   263d4:	20400601 	subcs	r0, r0, r1, lsl #12
   263d8:	e1500581 	cmp	r0, r1, lsl #11
   263dc:	e0a22002 	adc	r2, r2, r2
   263e0:	20400581 	subcs	r0, r0, r1, lsl #11
   263e4:	e1500501 	cmp	r0, r1, lsl #10
   263e8:	e0a22002 	adc	r2, r2, r2
   263ec:	20400501 	subcs	r0, r0, r1, lsl #10
   263f0:	e1500481 	cmp	r0, r1, lsl #9
   263f4:	e0a22002 	adc	r2, r2, r2
   263f8:	20400481 	subcs	r0, r0, r1, lsl #9
   263fc:	e1500401 	cmp	r0, r1, lsl #8
   26400:	e0a22002 	adc	r2, r2, r2
   26404:	20400401 	subcs	r0, r0, r1, lsl #8
   26408:	e1500381 	cmp	r0, r1, lsl #7
   2640c:	e0a22002 	adc	r2, r2, r2
   26410:	20400381 	subcs	r0, r0, r1, lsl #7
   26414:	e1500301 	cmp	r0, r1, lsl #6
   26418:	e0a22002 	adc	r2, r2, r2
   2641c:	20400301 	subcs	r0, r0, r1, lsl #6
   26420:	e1500281 	cmp	r0, r1, lsl #5
   26424:	e0a22002 	adc	r2, r2, r2
   26428:	20400281 	subcs	r0, r0, r1, lsl #5
   2642c:	e1500201 	cmp	r0, r1, lsl #4
   26430:	e0a22002 	adc	r2, r2, r2
   26434:	20400201 	subcs	r0, r0, r1, lsl #4
   26438:	e1500181 	cmp	r0, r1, lsl #3
   2643c:	e0a22002 	adc	r2, r2, r2
   26440:	20400181 	subcs	r0, r0, r1, lsl #3
   26444:	e1500101 	cmp	r0, r1, lsl #2
   26448:	e0a22002 	adc	r2, r2, r2
   2644c:	20400101 	subcs	r0, r0, r1, lsl #2
   26450:	e1500081 	cmp	r0, r1, lsl #1
   26454:	e0a22002 	adc	r2, r2, r2
   26458:	20400081 	subcs	r0, r0, r1, lsl #1
   2645c:	e1500001 	cmp	r0, r1
   26460:	e0a22002 	adc	r2, r2, r2
   26464:	20400001 	subcs	r0, r0, r1
   26468:	e1a00002 	mov	r0, r2
   2646c:	e12fff1e 	bx	lr
   26470:	03a00001 	moveq	r0, #1
   26474:	13a00000 	movne	r0, #0
   26478:	e12fff1e 	bx	lr
   2647c:	e16f2f11 	clz	r2, r1
   26480:	e262201f 	rsb	r2, r2, #31
   26484:	e1a00230 	lsr	r0, r0, r2
   26488:	e12fff1e 	bx	lr
   2648c:	e3500000 	cmp	r0, #0
   26490:	13e00000 	mvnne	r0, #0
   26494:	ea00041a 	b	27504 <__aeabi_idiv0>

00026498 <__aeabi_uidivmod>:
   26498:	e3510000 	cmp	r1, #0
   2649c:	0afffffa 	beq	2648c <__udivsi3+0x1e0>
   264a0:	e92d4003 	push	{r0, r1, lr}
   264a4:	ebffff80 	bl	262ac <__udivsi3>
   264a8:	e8bd4006 	pop	{r1, r2, lr}
   264ac:	e0030092 	mul	r3, r2, r0
   264b0:	e0411003 	sub	r1, r1, r3
   264b4:	e12fff1e 	bx	lr

000264b8 <__divsi3>:
   264b8:	e3510000 	cmp	r1, #0
   264bc:	0a000081 	beq	266c8 <.divsi3_skip_div0_test+0x208>

000264c0 <.divsi3_skip_div0_test>:
   264c0:	e020c001 	eor	ip, r0, r1
   264c4:	42611000 	rsbmi	r1, r1, #0
   264c8:	e2512001 	subs	r2, r1, #1
   264cc:	0a000070 	beq	26694 <.divsi3_skip_div0_test+0x1d4>
   264d0:	e1b03000 	movs	r3, r0
   264d4:	42603000 	rsbmi	r3, r0, #0
   264d8:	e1530001 	cmp	r3, r1
   264dc:	9a00006f 	bls	266a0 <.divsi3_skip_div0_test+0x1e0>
   264e0:	e1110002 	tst	r1, r2
   264e4:	0a000071 	beq	266b0 <.divsi3_skip_div0_test+0x1f0>
   264e8:	e16f2f13 	clz	r2, r3
   264ec:	e16f0f11 	clz	r0, r1
   264f0:	e0402002 	sub	r2, r0, r2
   264f4:	e272201f 	rsbs	r2, r2, #31
   264f8:	10822082 	addne	r2, r2, r2, lsl #1
   264fc:	e3a00000 	mov	r0, #0
   26500:	108ff102 	addne	pc, pc, r2, lsl #2
   26504:	e1a00000 	nop			; (mov r0, r0)
   26508:	e1530f81 	cmp	r3, r1, lsl #31
   2650c:	e0a00000 	adc	r0, r0, r0
   26510:	20433f81 	subcs	r3, r3, r1, lsl #31
   26514:	e1530f01 	cmp	r3, r1, lsl #30
   26518:	e0a00000 	adc	r0, r0, r0
   2651c:	20433f01 	subcs	r3, r3, r1, lsl #30
   26520:	e1530e81 	cmp	r3, r1, lsl #29
   26524:	e0a00000 	adc	r0, r0, r0
   26528:	20433e81 	subcs	r3, r3, r1, lsl #29
   2652c:	e1530e01 	cmp	r3, r1, lsl #28
   26530:	e0a00000 	adc	r0, r0, r0
   26534:	20433e01 	subcs	r3, r3, r1, lsl #28
   26538:	e1530d81 	cmp	r3, r1, lsl #27
   2653c:	e0a00000 	adc	r0, r0, r0
   26540:	20433d81 	subcs	r3, r3, r1, lsl #27
   26544:	e1530d01 	cmp	r3, r1, lsl #26
   26548:	e0a00000 	adc	r0, r0, r0
   2654c:	20433d01 	subcs	r3, r3, r1, lsl #26
   26550:	e1530c81 	cmp	r3, r1, lsl #25
   26554:	e0a00000 	adc	r0, r0, r0
   26558:	20433c81 	subcs	r3, r3, r1, lsl #25
   2655c:	e1530c01 	cmp	r3, r1, lsl #24
   26560:	e0a00000 	adc	r0, r0, r0
   26564:	20433c01 	subcs	r3, r3, r1, lsl #24
   26568:	e1530b81 	cmp	r3, r1, lsl #23
   2656c:	e0a00000 	adc	r0, r0, r0
   26570:	20433b81 	subcs	r3, r3, r1, lsl #23
   26574:	e1530b01 	cmp	r3, r1, lsl #22
   26578:	e0a00000 	adc	r0, r0, r0
   2657c:	20433b01 	subcs	r3, r3, r1, lsl #22
   26580:	e1530a81 	cmp	r3, r1, lsl #21
   26584:	e0a00000 	adc	r0, r0, r0
   26588:	20433a81 	subcs	r3, r3, r1, lsl #21
   2658c:	e1530a01 	cmp	r3, r1, lsl #20
   26590:	e0a00000 	adc	r0, r0, r0
   26594:	20433a01 	subcs	r3, r3, r1, lsl #20
   26598:	e1530981 	cmp	r3, r1, lsl #19
   2659c:	e0a00000 	adc	r0, r0, r0
   265a0:	20433981 	subcs	r3, r3, r1, lsl #19
   265a4:	e1530901 	cmp	r3, r1, lsl #18
   265a8:	e0a00000 	adc	r0, r0, r0
   265ac:	20433901 	subcs	r3, r3, r1, lsl #18
   265b0:	e1530881 	cmp	r3, r1, lsl #17
   265b4:	e0a00000 	adc	r0, r0, r0
   265b8:	20433881 	subcs	r3, r3, r1, lsl #17
   265bc:	e1530801 	cmp	r3, r1, lsl #16
   265c0:	e0a00000 	adc	r0, r0, r0
   265c4:	20433801 	subcs	r3, r3, r1, lsl #16
   265c8:	e1530781 	cmp	r3, r1, lsl #15
   265cc:	e0a00000 	adc	r0, r0, r0
   265d0:	20433781 	subcs	r3, r3, r1, lsl #15
   265d4:	e1530701 	cmp	r3, r1, lsl #14
   265d8:	e0a00000 	adc	r0, r0, r0
   265dc:	20433701 	subcs	r3, r3, r1, lsl #14
   265e0:	e1530681 	cmp	r3, r1, lsl #13
   265e4:	e0a00000 	adc	r0, r0, r0
   265e8:	20433681 	subcs	r3, r3, r1, lsl #13
   265ec:	e1530601 	cmp	r3, r1, lsl #12
   265f0:	e0a00000 	adc	r0, r0, r0
   265f4:	20433601 	subcs	r3, r3, r1, lsl #12
   265f8:	e1530581 	cmp	r3, r1, lsl #11
   265fc:	e0a00000 	adc	r0, r0, r0
   26600:	20433581 	subcs	r3, r3, r1, lsl #11
   26604:	e1530501 	cmp	r3, r1, lsl #10
   26608:	e0a00000 	adc	r0, r0, r0
   2660c:	20433501 	subcs	r3, r3, r1, lsl #10
   26610:	e1530481 	cmp	r3, r1, lsl #9
   26614:	e0a00000 	adc	r0, r0, r0
   26618:	20433481 	subcs	r3, r3, r1, lsl #9
   2661c:	e1530401 	cmp	r3, r1, lsl #8
   26620:	e0a00000 	adc	r0, r0, r0
   26624:	20433401 	subcs	r3, r3, r1, lsl #8
   26628:	e1530381 	cmp	r3, r1, lsl #7
   2662c:	e0a00000 	adc	r0, r0, r0
   26630:	20433381 	subcs	r3, r3, r1, lsl #7
   26634:	e1530301 	cmp	r3, r1, lsl #6
   26638:	e0a00000 	adc	r0, r0, r0
   2663c:	20433301 	subcs	r3, r3, r1, lsl #6
   26640:	e1530281 	cmp	r3, r1, lsl #5
   26644:	e0a00000 	adc	r0, r0, r0
   26648:	20433281 	subcs	r3, r3, r1, lsl #5
   2664c:	e1530201 	cmp	r3, r1, lsl #4
   26650:	e0a00000 	adc	r0, r0, r0
   26654:	20433201 	subcs	r3, r3, r1, lsl #4
   26658:	e1530181 	cmp	r3, r1, lsl #3
   2665c:	e0a00000 	adc	r0, r0, r0
   26660:	20433181 	subcs	r3, r3, r1, lsl #3
   26664:	e1530101 	cmp	r3, r1, lsl #2
   26668:	e0a00000 	adc	r0, r0, r0
   2666c:	20433101 	subcs	r3, r3, r1, lsl #2
   26670:	e1530081 	cmp	r3, r1, lsl #1
   26674:	e0a00000 	adc	r0, r0, r0
   26678:	20433081 	subcs	r3, r3, r1, lsl #1
   2667c:	e1530001 	cmp	r3, r1
   26680:	e0a00000 	adc	r0, r0, r0
   26684:	20433001 	subcs	r3, r3, r1
   26688:	e35c0000 	cmp	ip, #0
   2668c:	42600000 	rsbmi	r0, r0, #0
   26690:	e12fff1e 	bx	lr
   26694:	e13c0000 	teq	ip, r0
   26698:	42600000 	rsbmi	r0, r0, #0
   2669c:	e12fff1e 	bx	lr
   266a0:	33a00000 	movcc	r0, #0
   266a4:	01a00fcc 	asreq	r0, ip, #31
   266a8:	03800001 	orreq	r0, r0, #1
   266ac:	e12fff1e 	bx	lr
   266b0:	e16f2f11 	clz	r2, r1
   266b4:	e262201f 	rsb	r2, r2, #31
   266b8:	e35c0000 	cmp	ip, #0
   266bc:	e1a00233 	lsr	r0, r3, r2
   266c0:	42600000 	rsbmi	r0, r0, #0
   266c4:	e12fff1e 	bx	lr
   266c8:	e3500000 	cmp	r0, #0
   266cc:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
   266d0:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
   266d4:	ea00038a 	b	27504 <__aeabi_idiv0>

000266d8 <__aeabi_idivmod>:
   266d8:	e3510000 	cmp	r1, #0
   266dc:	0afffff9 	beq	266c8 <.divsi3_skip_div0_test+0x208>
   266e0:	e92d4003 	push	{r0, r1, lr}
   266e4:	ebffff75 	bl	264c0 <.divsi3_skip_div0_test>
   266e8:	e8bd4006 	pop	{r1, r2, lr}
   266ec:	e0030092 	mul	r3, r2, r0
   266f0:	e0411003 	sub	r1, r1, r3
   266f4:	e12fff1e 	bx	lr

000266f8 <__aeabi_drsub>:
   266f8:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000
   266fc:	ea000000 	b	26704 <__adddf3>

00026700 <__aeabi_dsub>:
   26700:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000

00026704 <__adddf3>:
   26704:	e92d4030 	push	{r4, r5, lr}
   26708:	e1a04081 	lsl	r4, r1, #1
   2670c:	e1a05083 	lsl	r5, r3, #1
   26710:	e1340005 	teq	r4, r5
   26714:	01300002 	teqeq	r0, r2
   26718:	1194c000 	orrsne	ip, r4, r0
   2671c:	1195c002 	orrsne	ip, r5, r2
   26720:	11f0cac4 	mvnsne	ip, r4, asr #21
   26724:	11f0cac5 	mvnsne	ip, r5, asr #21
   26728:	0a000079 	beq	26914 <__adddf3+0x210>
   2672c:	e1a04aa4 	lsr	r4, r4, #21
   26730:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
   26734:	b2655000 	rsblt	r5, r5, #0
   26738:	da000006 	ble	26758 <__adddf3+0x54>
   2673c:	e0844005 	add	r4, r4, r5
   26740:	e0202002 	eor	r2, r0, r2
   26744:	e0213003 	eor	r3, r1, r3
   26748:	e0220000 	eor	r0, r2, r0
   2674c:	e0231001 	eor	r1, r3, r1
   26750:	e0202002 	eor	r2, r0, r2
   26754:	e0213003 	eor	r3, r1, r3
   26758:	e3550036 	cmp	r5, #54	; 0x36
   2675c:	88bd8030 	pophi	{r4, r5, pc}
   26760:	e3110102 	tst	r1, #-2147483648	; 0x80000000
   26764:	e1a01601 	lsl	r1, r1, #12
   26768:	e3a0c601 	mov	ip, #1048576	; 0x100000
   2676c:	e18c1621 	orr	r1, ip, r1, lsr #12
   26770:	0a000001 	beq	2677c <__adddf3+0x78>
   26774:	e2700000 	rsbs	r0, r0, #0
   26778:	e2e11000 	rsc	r1, r1, #0
   2677c:	e3130102 	tst	r3, #-2147483648	; 0x80000000
   26780:	e1a03603 	lsl	r3, r3, #12
   26784:	e18c3623 	orr	r3, ip, r3, lsr #12
   26788:	0a000001 	beq	26794 <__adddf3+0x90>
   2678c:	e2722000 	rsbs	r2, r2, #0
   26790:	e2e33000 	rsc	r3, r3, #0
   26794:	e1340005 	teq	r4, r5
   26798:	0a000057 	beq	268fc <__adddf3+0x1f8>
   2679c:	e2444001 	sub	r4, r4, #1
   267a0:	e275e020 	rsbs	lr, r5, #32
   267a4:	ba000005 	blt	267c0 <__adddf3+0xbc>
   267a8:	e1a0ce12 	lsl	ip, r2, lr
   267ac:	e0900532 	adds	r0, r0, r2, lsr r5
   267b0:	e2a11000 	adc	r1, r1, #0
   267b4:	e0900e13 	adds	r0, r0, r3, lsl lr
   267b8:	e0b11553 	adcs	r1, r1, r3, asr r5
   267bc:	ea000006 	b	267dc <__adddf3+0xd8>
   267c0:	e2455020 	sub	r5, r5, #32
   267c4:	e28ee020 	add	lr, lr, #32
   267c8:	e3520001 	cmp	r2, #1
   267cc:	e1a0ce13 	lsl	ip, r3, lr
   267d0:	238cc002 	orrcs	ip, ip, #2
   267d4:	e0900553 	adds	r0, r0, r3, asr r5
   267d8:	e0b11fc3 	adcs	r1, r1, r3, asr #31
   267dc:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
   267e0:	5a000002 	bpl	267f0 <__adddf3+0xec>
   267e4:	e27cc000 	rsbs	ip, ip, #0
   267e8:	e2f00000 	rscs	r0, r0, #0
   267ec:	e2e11000 	rsc	r1, r1, #0
   267f0:	e3510601 	cmp	r1, #1048576	; 0x100000
   267f4:	3a00000e 	bcc	26834 <__adddf3+0x130>
   267f8:	e3510602 	cmp	r1, #2097152	; 0x200000
   267fc:	3a000006 	bcc	2681c <__adddf3+0x118>
   26800:	e1b010a1 	lsrs	r1, r1, #1
   26804:	e1b00060 	rrxs	r0, r0
   26808:	e1a0c06c 	rrx	ip, ip
   2680c:	e2844001 	add	r4, r4, #1
   26810:	e1a02a84 	lsl	r2, r4, #21
   26814:	e3720501 	cmn	r2, #4194304	; 0x400000
   26818:	2a000055 	bcs	26974 <__adddf3+0x270>
   2681c:	e35c0102 	cmp	ip, #-2147483648	; 0x80000000
   26820:	01b0c0a0 	lsrseq	ip, r0, #1
   26824:	e2b00000 	adcs	r0, r0, #0
   26828:	e0a11a04 	adc	r1, r1, r4, lsl #20
   2682c:	e1811005 	orr	r1, r1, r5
   26830:	e8bd8030 	pop	{r4, r5, pc}
   26834:	e1b0c08c 	lsls	ip, ip, #1
   26838:	e0b00000 	adcs	r0, r0, r0
   2683c:	e0a11001 	adc	r1, r1, r1
   26840:	e2544001 	subs	r4, r4, #1
   26844:	23510601 	cmpcs	r1, #1048576	; 0x100000
   26848:	2afffff3 	bcs	2681c <__adddf3+0x118>
   2684c:	e3310000 	teq	r1, #0
   26850:	01a01000 	moveq	r1, r0
   26854:	03a00000 	moveq	r0, #0
   26858:	e16f3f11 	clz	r3, r1
   2685c:	02833020 	addeq	r3, r3, #32
   26860:	e243300b 	sub	r3, r3, #11
   26864:	e2532020 	subs	r2, r3, #32
   26868:	aa000007 	bge	2688c <__adddf3+0x188>
   2686c:	e292200c 	adds	r2, r2, #12
   26870:	da000004 	ble	26888 <__adddf3+0x184>
   26874:	e282c014 	add	ip, r2, #20
   26878:	e262200c 	rsb	r2, r2, #12
   2687c:	e1a00c11 	lsl	r0, r1, ip
   26880:	e1a01231 	lsr	r1, r1, r2
   26884:	ea000004 	b	2689c <__adddf3+0x198>
   26888:	e2822014 	add	r2, r2, #20
   2688c:	d262c020 	rsble	ip, r2, #32
   26890:	e1a01211 	lsl	r1, r1, r2
   26894:	d1811c30 	orrle	r1, r1, r0, lsr ip
   26898:	d1a00210 	lslle	r0, r0, r2
   2689c:	e0544003 	subs	r4, r4, r3
   268a0:	a0811a04 	addge	r1, r1, r4, lsl #20
   268a4:	a1811005 	orrge	r1, r1, r5
   268a8:	a8bd8030 	popge	{r4, r5, pc}
   268ac:	e1e04004 	mvn	r4, r4
   268b0:	e254401f 	subs	r4, r4, #31
   268b4:	aa00000d 	bge	268f0 <__adddf3+0x1ec>
   268b8:	e294400c 	adds	r4, r4, #12
   268bc:	ca000005 	bgt	268d8 <__adddf3+0x1d4>
   268c0:	e2844014 	add	r4, r4, #20
   268c4:	e2642020 	rsb	r2, r4, #32
   268c8:	e1a00430 	lsr	r0, r0, r4
   268cc:	e1800211 	orr	r0, r0, r1, lsl r2
   268d0:	e1851431 	orr	r1, r5, r1, lsr r4
   268d4:	e8bd8030 	pop	{r4, r5, pc}
   268d8:	e264400c 	rsb	r4, r4, #12
   268dc:	e2642020 	rsb	r2, r4, #32
   268e0:	e1a00230 	lsr	r0, r0, r2
   268e4:	e1800411 	orr	r0, r0, r1, lsl r4
   268e8:	e1a01005 	mov	r1, r5
   268ec:	e8bd8030 	pop	{r4, r5, pc}
   268f0:	e1a00431 	lsr	r0, r1, r4
   268f4:	e1a01005 	mov	r1, r5
   268f8:	e8bd8030 	pop	{r4, r5, pc}
   268fc:	e3340000 	teq	r4, #0
   26900:	e2233601 	eor	r3, r3, #1048576	; 0x100000
   26904:	02211601 	eoreq	r1, r1, #1048576	; 0x100000
   26908:	02844001 	addeq	r4, r4, #1
   2690c:	12455001 	subne	r5, r5, #1
   26910:	eaffffa1 	b	2679c <__adddf3+0x98>
   26914:	e1f0cac4 	mvns	ip, r4, asr #21
   26918:	11f0cac5 	mvnsne	ip, r5, asr #21
   2691c:	0a000018 	beq	26984 <__adddf3+0x280>
   26920:	e1340005 	teq	r4, r5
   26924:	01300002 	teqeq	r0, r2
   26928:	0a000003 	beq	2693c <__adddf3+0x238>
   2692c:	e194c000 	orrs	ip, r4, r0
   26930:	01a01003 	moveq	r1, r3
   26934:	01a00002 	moveq	r0, r2
   26938:	e8bd8030 	pop	{r4, r5, pc}
   2693c:	e1310003 	teq	r1, r3
   26940:	13a01000 	movne	r1, #0
   26944:	13a00000 	movne	r0, #0
   26948:	18bd8030 	popne	{r4, r5, pc}
   2694c:	e1b0caa4 	lsrs	ip, r4, #21
   26950:	1a000003 	bne	26964 <__adddf3+0x260>
   26954:	e1b00080 	lsls	r0, r0, #1
   26958:	e0b11001 	adcs	r1, r1, r1
   2695c:	23811102 	orrcs	r1, r1, #-2147483648	; 0x80000000
   26960:	e8bd8030 	pop	{r4, r5, pc}
   26964:	e2944501 	adds	r4, r4, #4194304	; 0x400000
   26968:	32811601 	addcc	r1, r1, #1048576	; 0x100000
   2696c:	38bd8030 	popcc	{r4, r5, pc}
   26970:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
   26974:	e385147f 	orr	r1, r5, #2130706432	; 0x7f000000
   26978:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
   2697c:	e3a00000 	mov	r0, #0
   26980:	e8bd8030 	pop	{r4, r5, pc}
   26984:	e1f0cac4 	mvns	ip, r4, asr #21
   26988:	11a01003 	movne	r1, r3
   2698c:	11a00002 	movne	r0, r2
   26990:	01f0cac5 	mvnseq	ip, r5, asr #21
   26994:	11a03001 	movne	r3, r1
   26998:	11a02000 	movne	r2, r0
   2699c:	e1904601 	orrs	r4, r0, r1, lsl #12
   269a0:	01925603 	orrseq	r5, r2, r3, lsl #12
   269a4:	01310003 	teqeq	r1, r3
   269a8:	13811702 	orrne	r1, r1, #524288	; 0x80000
   269ac:	e8bd8030 	pop	{r4, r5, pc}

000269b0 <__aeabi_ui2d>:
   269b0:	e3300000 	teq	r0, #0
   269b4:	03a01000 	moveq	r1, #0
   269b8:	012fff1e 	bxeq	lr
   269bc:	e92d4030 	push	{r4, r5, lr}
   269c0:	e3a04b01 	mov	r4, #1024	; 0x400
   269c4:	e2844032 	add	r4, r4, #50	; 0x32
   269c8:	e3a05000 	mov	r5, #0
   269cc:	e3a01000 	mov	r1, #0
   269d0:	eaffff9d 	b	2684c <__adddf3+0x148>

000269d4 <__aeabi_i2d>:
   269d4:	e3300000 	teq	r0, #0
   269d8:	03a01000 	moveq	r1, #0
   269dc:	012fff1e 	bxeq	lr
   269e0:	e92d4030 	push	{r4, r5, lr}
   269e4:	e3a04b01 	mov	r4, #1024	; 0x400
   269e8:	e2844032 	add	r4, r4, #50	; 0x32
   269ec:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
   269f0:	42600000 	rsbmi	r0, r0, #0
   269f4:	e3a01000 	mov	r1, #0
   269f8:	eaffff93 	b	2684c <__adddf3+0x148>

000269fc <__aeabi_f2d>:
   269fc:	e1b02080 	lsls	r2, r0, #1
   26a00:	e1a011c2 	asr	r1, r2, #3
   26a04:	e1a01061 	rrx	r1, r1
   26a08:	e1a00e02 	lsl	r0, r2, #28
   26a0c:	121234ff 	andsne	r3, r2, #-16777216	; 0xff000000
   26a10:	133304ff 	teqne	r3, #-16777216	; 0xff000000
   26a14:	1221130e 	eorne	r1, r1, #939524096	; 0x38000000
   26a18:	112fff1e 	bxne	lr
   26a1c:	e3d224ff 	bics	r2, r2, #-16777216	; 0xff000000
   26a20:	012fff1e 	bxeq	lr
   26a24:	e33304ff 	teq	r3, #-16777216	; 0xff000000
   26a28:	03811702 	orreq	r1, r1, #524288	; 0x80000
   26a2c:	012fff1e 	bxeq	lr
   26a30:	e92d4030 	push	{r4, r5, lr}
   26a34:	e3a04d0e 	mov	r4, #896	; 0x380
   26a38:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
   26a3c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
   26a40:	eaffff81 	b	2684c <__adddf3+0x148>

00026a44 <__aeabi_ul2d>:
   26a44:	e1902001 	orrs	r2, r0, r1
   26a48:	012fff1e 	bxeq	lr
   26a4c:	e92d4030 	push	{r4, r5, lr}
   26a50:	e3a05000 	mov	r5, #0
   26a54:	ea000006 	b	26a74 <__aeabi_l2d+0x1c>

00026a58 <__aeabi_l2d>:
   26a58:	e1902001 	orrs	r2, r0, r1
   26a5c:	012fff1e 	bxeq	lr
   26a60:	e92d4030 	push	{r4, r5, lr}
   26a64:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
   26a68:	5a000001 	bpl	26a74 <__aeabi_l2d+0x1c>
   26a6c:	e2700000 	rsbs	r0, r0, #0
   26a70:	e2e11000 	rsc	r1, r1, #0
   26a74:	e3a04b01 	mov	r4, #1024	; 0x400
   26a78:	e2844032 	add	r4, r4, #50	; 0x32
   26a7c:	e1b0cb21 	lsrs	ip, r1, #22
   26a80:	0affff5a 	beq	267f0 <__adddf3+0xec>
   26a84:	e3a02003 	mov	r2, #3
   26a88:	e1b0c1ac 	lsrs	ip, ip, #3
   26a8c:	12822003 	addne	r2, r2, #3
   26a90:	e1b0c1ac 	lsrs	ip, ip, #3
   26a94:	12822003 	addne	r2, r2, #3
   26a98:	e08221ac 	add	r2, r2, ip, lsr #3
   26a9c:	e2623020 	rsb	r3, r2, #32
   26aa0:	e1a0c310 	lsl	ip, r0, r3
   26aa4:	e1a00230 	lsr	r0, r0, r2
   26aa8:	e1800311 	orr	r0, r0, r1, lsl r3
   26aac:	e1a01231 	lsr	r1, r1, r2
   26ab0:	e0844002 	add	r4, r4, r2
   26ab4:	eaffff4d 	b	267f0 <__adddf3+0xec>

00026ab8 <__aeabi_dmul>:
   26ab8:	e92d4070 	push	{r4, r5, r6, lr}
   26abc:	e3a0c0ff 	mov	ip, #255	; 0xff
   26ac0:	e38ccc07 	orr	ip, ip, #1792	; 0x700
   26ac4:	e01c4a21 	ands	r4, ip, r1, lsr #20
   26ac8:	101c5a23 	andsne	r5, ip, r3, lsr #20
   26acc:	1134000c 	teqne	r4, ip
   26ad0:	1135000c 	teqne	r5, ip
   26ad4:	0b00006f 	bleq	26c98 <__aeabi_dmul+0x1e0>
   26ad8:	e0844005 	add	r4, r4, r5
   26adc:	e0216003 	eor	r6, r1, r3
   26ae0:	e1c11a8c 	bic	r1, r1, ip, lsl #21
   26ae4:	e1c33a8c 	bic	r3, r3, ip, lsl #21
   26ae8:	e1905601 	orrs	r5, r0, r1, lsl #12
   26aec:	11925603 	orrsne	r5, r2, r3, lsl #12
   26af0:	e3811601 	orr	r1, r1, #1048576	; 0x100000
   26af4:	e3833601 	orr	r3, r3, #1048576	; 0x100000
   26af8:	0a00001c 	beq	26b70 <__aeabi_dmul+0xb8>
   26afc:	e08ec290 	umull	ip, lr, r0, r2
   26b00:	e3a05000 	mov	r5, #0
   26b04:	e0a5e291 	umlal	lr, r5, r1, r2
   26b08:	e2062102 	and	r2, r6, #-2147483648	; 0x80000000
   26b0c:	e0a5e390 	umlal	lr, r5, r0, r3
   26b10:	e3a06000 	mov	r6, #0
   26b14:	e0a65391 	umlal	r5, r6, r1, r3
   26b18:	e33c0000 	teq	ip, #0
   26b1c:	138ee001 	orrne	lr, lr, #1
   26b20:	e24440ff 	sub	r4, r4, #255	; 0xff
   26b24:	e3560c02 	cmp	r6, #512	; 0x200
   26b28:	e2c44c03 	sbc	r4, r4, #768	; 0x300
   26b2c:	2a000002 	bcs	26b3c <__aeabi_dmul+0x84>
   26b30:	e1b0e08e 	lsls	lr, lr, #1
   26b34:	e0b55005 	adcs	r5, r5, r5
   26b38:	e0a66006 	adc	r6, r6, r6
   26b3c:	e1821586 	orr	r1, r2, r6, lsl #11
   26b40:	e1811aa5 	orr	r1, r1, r5, lsr #21
   26b44:	e1a00585 	lsl	r0, r5, #11
   26b48:	e1800aae 	orr	r0, r0, lr, lsr #21
   26b4c:	e1a0e58e 	lsl	lr, lr, #11
   26b50:	e254c0fd 	subs	ip, r4, #253	; 0xfd
   26b54:	835c0c07 	cmphi	ip, #1792	; 0x700
   26b58:	8a00000f 	bhi	26b9c <__aeabi_dmul+0xe4>
   26b5c:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
   26b60:	01b0e0a0 	lsrseq	lr, r0, #1
   26b64:	e2b00000 	adcs	r0, r0, #0
   26b68:	e0a11a04 	adc	r1, r1, r4, lsl #20
   26b6c:	e8bd8070 	pop	{r4, r5, r6, pc}
   26b70:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
   26b74:	e1861001 	orr	r1, r6, r1
   26b78:	e1800002 	orr	r0, r0, r2
   26b7c:	e0211003 	eor	r1, r1, r3
   26b80:	e05440ac 	subs	r4, r4, ip, lsr #1
   26b84:	c074500c 	rsbsgt	r5, r4, ip
   26b88:	c1811a04 	orrgt	r1, r1, r4, lsl #20
   26b8c:	c8bd8070 	popgt	{r4, r5, r6, pc}
   26b90:	e3811601 	orr	r1, r1, #1048576	; 0x100000
   26b94:	e3a0e000 	mov	lr, #0
   26b98:	e2544001 	subs	r4, r4, #1
   26b9c:	ca000058 	bgt	26d04 <__aeabi_dmul+0x24c>
   26ba0:	e3740036 	cmn	r4, #54	; 0x36
   26ba4:	d3a00000 	movle	r0, #0
   26ba8:	d2011102 	andle	r1, r1, #-2147483648	; 0x80000000
   26bac:	d8bd8070 	pople	{r4, r5, r6, pc}
   26bb0:	e2644000 	rsb	r4, r4, #0
   26bb4:	e2544020 	subs	r4, r4, #32
   26bb8:	aa000018 	bge	26c20 <__aeabi_dmul+0x168>
   26bbc:	e294400c 	adds	r4, r4, #12
   26bc0:	ca00000b 	bgt	26bf4 <__aeabi_dmul+0x13c>
   26bc4:	e2844014 	add	r4, r4, #20
   26bc8:	e2645020 	rsb	r5, r4, #32
   26bcc:	e1a03510 	lsl	r3, r0, r5
   26bd0:	e1a00430 	lsr	r0, r0, r4
   26bd4:	e1800511 	orr	r0, r0, r1, lsl r5
   26bd8:	e2012102 	and	r2, r1, #-2147483648	; 0x80000000
   26bdc:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
   26be0:	e0900fa3 	adds	r0, r0, r3, lsr #31
   26be4:	e0a21431 	adc	r1, r2, r1, lsr r4
   26be8:	e19ee083 	orrs	lr, lr, r3, lsl #1
   26bec:	01c00fa3 	biceq	r0, r0, r3, lsr #31
   26bf0:	e8bd8070 	pop	{r4, r5, r6, pc}
   26bf4:	e264400c 	rsb	r4, r4, #12
   26bf8:	e2645020 	rsb	r5, r4, #32
   26bfc:	e1a03410 	lsl	r3, r0, r4
   26c00:	e1a00530 	lsr	r0, r0, r5
   26c04:	e1800411 	orr	r0, r0, r1, lsl r4
   26c08:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   26c0c:	e0900fa3 	adds	r0, r0, r3, lsr #31
   26c10:	e2a11000 	adc	r1, r1, #0
   26c14:	e19ee083 	orrs	lr, lr, r3, lsl #1
   26c18:	01c00fa3 	biceq	r0, r0, r3, lsr #31
   26c1c:	e8bd8070 	pop	{r4, r5, r6, pc}
   26c20:	e2645020 	rsb	r5, r4, #32
   26c24:	e18ee510 	orr	lr, lr, r0, lsl r5
   26c28:	e1a03430 	lsr	r3, r0, r4
   26c2c:	e1833511 	orr	r3, r3, r1, lsl r5
   26c30:	e1a00431 	lsr	r0, r1, r4
   26c34:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   26c38:	e1c00431 	bic	r0, r0, r1, lsr r4
   26c3c:	e0800fa3 	add	r0, r0, r3, lsr #31
   26c40:	e19ee083 	orrs	lr, lr, r3, lsl #1
   26c44:	01c00fa3 	biceq	r0, r0, r3, lsr #31
   26c48:	e8bd8070 	pop	{r4, r5, r6, pc}
   26c4c:	e3340000 	teq	r4, #0
   26c50:	1a000008 	bne	26c78 <__aeabi_dmul+0x1c0>
   26c54:	e2016102 	and	r6, r1, #-2147483648	; 0x80000000
   26c58:	e1b00080 	lsls	r0, r0, #1
   26c5c:	e0a11001 	adc	r1, r1, r1
   26c60:	e3110601 	tst	r1, #1048576	; 0x100000
   26c64:	02444001 	subeq	r4, r4, #1
   26c68:	0afffffa 	beq	26c58 <__aeabi_dmul+0x1a0>
   26c6c:	e1811006 	orr	r1, r1, r6
   26c70:	e3350000 	teq	r5, #0
   26c74:	112fff1e 	bxne	lr
   26c78:	e2036102 	and	r6, r3, #-2147483648	; 0x80000000
   26c7c:	e1b02082 	lsls	r2, r2, #1
   26c80:	e0a33003 	adc	r3, r3, r3
   26c84:	e3130601 	tst	r3, #1048576	; 0x100000
   26c88:	02455001 	subeq	r5, r5, #1
   26c8c:	0afffffa 	beq	26c7c <__aeabi_dmul+0x1c4>
   26c90:	e1833006 	orr	r3, r3, r6
   26c94:	e12fff1e 	bx	lr
   26c98:	e134000c 	teq	r4, ip
   26c9c:	e00c5a23 	and	r5, ip, r3, lsr #20
   26ca0:	1135000c 	teqne	r5, ip
   26ca4:	0a000006 	beq	26cc4 <__aeabi_dmul+0x20c>
   26ca8:	e1906081 	orrs	r6, r0, r1, lsl #1
   26cac:	11926083 	orrsne	r6, r2, r3, lsl #1
   26cb0:	1affffe5 	bne	26c4c <__aeabi_dmul+0x194>
   26cb4:	e0211003 	eor	r1, r1, r3
   26cb8:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   26cbc:	e3a00000 	mov	r0, #0
   26cc0:	e8bd8070 	pop	{r4, r5, r6, pc}
   26cc4:	e1906081 	orrs	r6, r0, r1, lsl #1
   26cc8:	01a00002 	moveq	r0, r2
   26ccc:	01a01003 	moveq	r1, r3
   26cd0:	11926083 	orrsne	r6, r2, r3, lsl #1
   26cd4:	0a00000f 	beq	26d18 <__aeabi_dmul+0x260>
   26cd8:	e134000c 	teq	r4, ip
   26cdc:	1a000001 	bne	26ce8 <__aeabi_dmul+0x230>
   26ce0:	e1906601 	orrs	r6, r0, r1, lsl #12
   26ce4:	1a00000b 	bne	26d18 <__aeabi_dmul+0x260>
   26ce8:	e135000c 	teq	r5, ip
   26cec:	1a000003 	bne	26d00 <__aeabi_dmul+0x248>
   26cf0:	e1926603 	orrs	r6, r2, r3, lsl #12
   26cf4:	11a00002 	movne	r0, r2
   26cf8:	11a01003 	movne	r1, r3
   26cfc:	1a000005 	bne	26d18 <__aeabi_dmul+0x260>
   26d00:	e0211003 	eor	r1, r1, r3
   26d04:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
   26d08:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
   26d0c:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
   26d10:	e3a00000 	mov	r0, #0
   26d14:	e8bd8070 	pop	{r4, r5, r6, pc}
   26d18:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
   26d1c:	e381173e 	orr	r1, r1, #16252928	; 0xf80000
   26d20:	e8bd8070 	pop	{r4, r5, r6, pc}

00026d24 <__aeabi_ddiv>:
   26d24:	e92d4070 	push	{r4, r5, r6, lr}
   26d28:	e3a0c0ff 	mov	ip, #255	; 0xff
   26d2c:	e38ccc07 	orr	ip, ip, #1792	; 0x700
   26d30:	e01c4a21 	ands	r4, ip, r1, lsr #20
   26d34:	101c5a23 	andsne	r5, ip, r3, lsr #20
   26d38:	1134000c 	teqne	r4, ip
   26d3c:	1135000c 	teqne	r5, ip
   26d40:	0b00005c 	bleq	26eb8 <__aeabi_ddiv+0x194>
   26d44:	e0444005 	sub	r4, r4, r5
   26d48:	e021e003 	eor	lr, r1, r3
   26d4c:	e1925603 	orrs	r5, r2, r3, lsl #12
   26d50:	e1a01601 	lsl	r1, r1, #12
   26d54:	0a00004b 	beq	26e88 <__aeabi_ddiv+0x164>
   26d58:	e1a03603 	lsl	r3, r3, #12
   26d5c:	e3a05201 	mov	r5, #268435456	; 0x10000000
   26d60:	e1853223 	orr	r3, r5, r3, lsr #4
   26d64:	e1833c22 	orr	r3, r3, r2, lsr #24
   26d68:	e1a02402 	lsl	r2, r2, #8
   26d6c:	e1855221 	orr	r5, r5, r1, lsr #4
   26d70:	e1855c20 	orr	r5, r5, r0, lsr #24
   26d74:	e1a06400 	lsl	r6, r0, #8
   26d78:	e20e1102 	and	r1, lr, #-2147483648	; 0x80000000
   26d7c:	e1550003 	cmp	r5, r3
   26d80:	01560002 	cmpeq	r6, r2
   26d84:	e2a440fd 	adc	r4, r4, #253	; 0xfd
   26d88:	e2844c03 	add	r4, r4, #768	; 0x300
   26d8c:	2a000001 	bcs	26d98 <__aeabi_ddiv+0x74>
   26d90:	e1b030a3 	lsrs	r3, r3, #1
   26d94:	e1a02062 	rrx	r2, r2
   26d98:	e0566002 	subs	r6, r6, r2
   26d9c:	e0c55003 	sbc	r5, r5, r3
   26da0:	e1b030a3 	lsrs	r3, r3, #1
   26da4:	e1a02062 	rrx	r2, r2
   26da8:	e3a00601 	mov	r0, #1048576	; 0x100000
   26dac:	e3a0c702 	mov	ip, #524288	; 0x80000
   26db0:	e056e002 	subs	lr, r6, r2
   26db4:	e0d5e003 	sbcs	lr, r5, r3
   26db8:	20466002 	subcs	r6, r6, r2
   26dbc:	21a0500e 	movcs	r5, lr
   26dc0:	2180000c 	orrcs	r0, r0, ip
   26dc4:	e1b030a3 	lsrs	r3, r3, #1
   26dc8:	e1a02062 	rrx	r2, r2
   26dcc:	e056e002 	subs	lr, r6, r2
   26dd0:	e0d5e003 	sbcs	lr, r5, r3
   26dd4:	20466002 	subcs	r6, r6, r2
   26dd8:	21a0500e 	movcs	r5, lr
   26ddc:	218000ac 	orrcs	r0, r0, ip, lsr #1
   26de0:	e1b030a3 	lsrs	r3, r3, #1
   26de4:	e1a02062 	rrx	r2, r2
   26de8:	e056e002 	subs	lr, r6, r2
   26dec:	e0d5e003 	sbcs	lr, r5, r3
   26df0:	20466002 	subcs	r6, r6, r2
   26df4:	21a0500e 	movcs	r5, lr
   26df8:	2180012c 	orrcs	r0, r0, ip, lsr #2
   26dfc:	e1b030a3 	lsrs	r3, r3, #1
   26e00:	e1a02062 	rrx	r2, r2
   26e04:	e056e002 	subs	lr, r6, r2
   26e08:	e0d5e003 	sbcs	lr, r5, r3
   26e0c:	20466002 	subcs	r6, r6, r2
   26e10:	21a0500e 	movcs	r5, lr
   26e14:	218001ac 	orrcs	r0, r0, ip, lsr #3
   26e18:	e195e006 	orrs	lr, r5, r6
   26e1c:	0a00000d 	beq	26e58 <__aeabi_ddiv+0x134>
   26e20:	e1a05205 	lsl	r5, r5, #4
   26e24:	e1855e26 	orr	r5, r5, r6, lsr #28
   26e28:	e1a06206 	lsl	r6, r6, #4
   26e2c:	e1a03183 	lsl	r3, r3, #3
   26e30:	e1833ea2 	orr	r3, r3, r2, lsr #29
   26e34:	e1a02182 	lsl	r2, r2, #3
   26e38:	e1b0c22c 	lsrs	ip, ip, #4
   26e3c:	1affffdb 	bne	26db0 <__aeabi_ddiv+0x8c>
   26e40:	e3110601 	tst	r1, #1048576	; 0x100000
   26e44:	1a000006 	bne	26e64 <__aeabi_ddiv+0x140>
   26e48:	e1811000 	orr	r1, r1, r0
   26e4c:	e3a00000 	mov	r0, #0
   26e50:	e3a0c102 	mov	ip, #-2147483648	; 0x80000000
   26e54:	eaffffd5 	b	26db0 <__aeabi_ddiv+0x8c>
   26e58:	e3110601 	tst	r1, #1048576	; 0x100000
   26e5c:	01811000 	orreq	r1, r1, r0
   26e60:	03a00000 	moveq	r0, #0
   26e64:	e254c0fd 	subs	ip, r4, #253	; 0xfd
   26e68:	835c0c07 	cmphi	ip, #1792	; 0x700
   26e6c:	8affff4a 	bhi	26b9c <__aeabi_dmul+0xe4>
   26e70:	e055c003 	subs	ip, r5, r3
   26e74:	0056c002 	subseq	ip, r6, r2
   26e78:	01b0c0a0 	lsrseq	ip, r0, #1
   26e7c:	e2b00000 	adcs	r0, r0, #0
   26e80:	e0a11a04 	adc	r1, r1, r4, lsl #20
   26e84:	e8bd8070 	pop	{r4, r5, r6, pc}
   26e88:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
   26e8c:	e18e1621 	orr	r1, lr, r1, lsr #12
   26e90:	e09440ac 	adds	r4, r4, ip, lsr #1
   26e94:	c074500c 	rsbsgt	r5, r4, ip
   26e98:	c1811a04 	orrgt	r1, r1, r4, lsl #20
   26e9c:	c8bd8070 	popgt	{r4, r5, r6, pc}
   26ea0:	e3811601 	orr	r1, r1, #1048576	; 0x100000
   26ea4:	e3a0e000 	mov	lr, #0
   26ea8:	e2544001 	subs	r4, r4, #1
   26eac:	eaffff3a 	b	26b9c <__aeabi_dmul+0xe4>
   26eb0:	e185e006 	orr	lr, r5, r6
   26eb4:	eaffff38 	b	26b9c <__aeabi_dmul+0xe4>
   26eb8:	e00c5a23 	and	r5, ip, r3, lsr #20
   26ebc:	e134000c 	teq	r4, ip
   26ec0:	0135000c 	teqeq	r5, ip
   26ec4:	0affff93 	beq	26d18 <__aeabi_dmul+0x260>
   26ec8:	e134000c 	teq	r4, ip
   26ecc:	1a000006 	bne	26eec <__aeabi_ddiv+0x1c8>
   26ed0:	e1904601 	orrs	r4, r0, r1, lsl #12
   26ed4:	1affff8f 	bne	26d18 <__aeabi_dmul+0x260>
   26ed8:	e135000c 	teq	r5, ip
   26edc:	1affff87 	bne	26d00 <__aeabi_dmul+0x248>
   26ee0:	e1a00002 	mov	r0, r2
   26ee4:	e1a01003 	mov	r1, r3
   26ee8:	eaffff8a 	b	26d18 <__aeabi_dmul+0x260>
   26eec:	e135000c 	teq	r5, ip
   26ef0:	1a000004 	bne	26f08 <__aeabi_ddiv+0x1e4>
   26ef4:	e1925603 	orrs	r5, r2, r3, lsl #12
   26ef8:	0affff6d 	beq	26cb4 <__aeabi_dmul+0x1fc>
   26efc:	e1a00002 	mov	r0, r2
   26f00:	e1a01003 	mov	r1, r3
   26f04:	eaffff83 	b	26d18 <__aeabi_dmul+0x260>
   26f08:	e1906081 	orrs	r6, r0, r1, lsl #1
   26f0c:	11926083 	orrsne	r6, r2, r3, lsl #1
   26f10:	1affff4d 	bne	26c4c <__aeabi_dmul+0x194>
   26f14:	e1904081 	orrs	r4, r0, r1, lsl #1
   26f18:	1affff78 	bne	26d00 <__aeabi_dmul+0x248>
   26f1c:	e1925083 	orrs	r5, r2, r3, lsl #1
   26f20:	1affff63 	bne	26cb4 <__aeabi_dmul+0x1fc>
   26f24:	eaffff7b 	b	26d18 <__aeabi_dmul+0x260>

00026f28 <__gedf2>:
   26f28:	e3e0c000 	mvn	ip, #0
   26f2c:	ea000002 	b	26f3c <__cmpdf2+0x4>

00026f30 <__ledf2>:
   26f30:	e3a0c001 	mov	ip, #1
   26f34:	ea000000 	b	26f3c <__cmpdf2+0x4>

00026f38 <__cmpdf2>:
   26f38:	e3a0c001 	mov	ip, #1
   26f3c:	e52dc004 	push	{ip}		; (str ip, [sp, #-4]!)
   26f40:	e1a0c081 	lsl	ip, r1, #1
   26f44:	e1f0cacc 	mvns	ip, ip, asr #21
   26f48:	e1a0c083 	lsl	ip, r3, #1
   26f4c:	11f0cacc 	mvnsne	ip, ip, asr #21
   26f50:	0a00000e 	beq	26f90 <__cmpdf2+0x58>
   26f54:	e28dd004 	add	sp, sp, #4
   26f58:	e190c081 	orrs	ip, r0, r1, lsl #1
   26f5c:	0192c083 	orrseq	ip, r2, r3, lsl #1
   26f60:	11310003 	teqne	r1, r3
   26f64:	01300002 	teqeq	r0, r2
   26f68:	03a00000 	moveq	r0, #0
   26f6c:	012fff1e 	bxeq	lr
   26f70:	e3700000 	cmn	r0, #0
   26f74:	e1310003 	teq	r1, r3
   26f78:	51510003 	cmppl	r1, r3
   26f7c:	01500002 	cmpeq	r0, r2
   26f80:	21a00fc3 	asrcs	r0, r3, #31
   26f84:	31e00fc3 	mvncc	r0, r3, asr #31
   26f88:	e3800001 	orr	r0, r0, #1
   26f8c:	e12fff1e 	bx	lr
   26f90:	e1a0c081 	lsl	ip, r1, #1
   26f94:	e1f0cacc 	mvns	ip, ip, asr #21
   26f98:	1a000001 	bne	26fa4 <__cmpdf2+0x6c>
   26f9c:	e190c601 	orrs	ip, r0, r1, lsl #12
   26fa0:	1a000004 	bne	26fb8 <__cmpdf2+0x80>
   26fa4:	e1a0c083 	lsl	ip, r3, #1
   26fa8:	e1f0cacc 	mvns	ip, ip, asr #21
   26fac:	1affffe8 	bne	26f54 <__cmpdf2+0x1c>
   26fb0:	e192c603 	orrs	ip, r2, r3, lsl #12
   26fb4:	0affffe6 	beq	26f54 <__cmpdf2+0x1c>
   26fb8:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
   26fbc:	e12fff1e 	bx	lr

00026fc0 <__aeabi_cdrcmple>:
   26fc0:	e1a0c000 	mov	ip, r0
   26fc4:	e1a00002 	mov	r0, r2
   26fc8:	e1a0200c 	mov	r2, ip
   26fcc:	e1a0c001 	mov	ip, r1
   26fd0:	e1a01003 	mov	r1, r3
   26fd4:	e1a0300c 	mov	r3, ip
   26fd8:	eaffffff 	b	26fdc <__aeabi_cdcmpeq>

00026fdc <__aeabi_cdcmpeq>:
   26fdc:	e92d4001 	push	{r0, lr}
   26fe0:	ebffffd4 	bl	26f38 <__cmpdf2>
   26fe4:	e3500000 	cmp	r0, #0
   26fe8:	43700000 	cmnmi	r0, #0
   26fec:	e8bd8001 	pop	{r0, pc}

00026ff0 <__aeabi_dcmpeq>:
   26ff0:	e52de008 	str	lr, [sp, #-8]!
   26ff4:	ebfffff8 	bl	26fdc <__aeabi_cdcmpeq>
   26ff8:	03a00001 	moveq	r0, #1
   26ffc:	13a00000 	movne	r0, #0
   27000:	e49df008 	ldr	pc, [sp], #8

00027004 <__aeabi_dcmplt>:
   27004:	e52de008 	str	lr, [sp, #-8]!
   27008:	ebfffff3 	bl	26fdc <__aeabi_cdcmpeq>
   2700c:	33a00001 	movcc	r0, #1
   27010:	23a00000 	movcs	r0, #0
   27014:	e49df008 	ldr	pc, [sp], #8

00027018 <__aeabi_dcmple>:
   27018:	e52de008 	str	lr, [sp, #-8]!
   2701c:	ebffffee 	bl	26fdc <__aeabi_cdcmpeq>
   27020:	93a00001 	movls	r0, #1
   27024:	83a00000 	movhi	r0, #0
   27028:	e49df008 	ldr	pc, [sp], #8

0002702c <__aeabi_dcmpge>:
   2702c:	e52de008 	str	lr, [sp, #-8]!
   27030:	ebffffe2 	bl	26fc0 <__aeabi_cdrcmple>
   27034:	93a00001 	movls	r0, #1
   27038:	83a00000 	movhi	r0, #0
   2703c:	e49df008 	ldr	pc, [sp], #8

00027040 <__aeabi_dcmpgt>:
   27040:	e52de008 	str	lr, [sp, #-8]!
   27044:	ebffffdd 	bl	26fc0 <__aeabi_cdrcmple>
   27048:	33a00001 	movcc	r0, #1
   2704c:	23a00000 	movcs	r0, #0
   27050:	e49df008 	ldr	pc, [sp], #8

00027054 <__aeabi_d2iz>:
   27054:	e1a02081 	lsl	r2, r1, #1
   27058:	e2922602 	adds	r2, r2, #2097152	; 0x200000
   2705c:	2a00000c 	bcs	27094 <__aeabi_d2iz+0x40>
   27060:	5a000009 	bpl	2708c <__aeabi_d2iz+0x38>
   27064:	e3e03e3e 	mvn	r3, #992	; 0x3e0
   27068:	e0532ac2 	subs	r2, r3, r2, asr #21
   2706c:	9a00000a 	bls	2709c <__aeabi_d2iz+0x48>
   27070:	e1a03581 	lsl	r3, r1, #11
   27074:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
   27078:	e1833aa0 	orr	r3, r3, r0, lsr #21
   2707c:	e3110102 	tst	r1, #-2147483648	; 0x80000000
   27080:	e1a00233 	lsr	r0, r3, r2
   27084:	12600000 	rsbne	r0, r0, #0
   27088:	e12fff1e 	bx	lr
   2708c:	e3a00000 	mov	r0, #0
   27090:	e12fff1e 	bx	lr
   27094:	e1900601 	orrs	r0, r0, r1, lsl #12
   27098:	1a000002 	bne	270a8 <__aeabi_d2iz+0x54>
   2709c:	e2110102 	ands	r0, r1, #-2147483648	; 0x80000000
   270a0:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
   270a4:	e12fff1e 	bx	lr
   270a8:	e3a00000 	mov	r0, #0
   270ac:	e12fff1e 	bx	lr

000270b0 <__aeabi_d2uiz>:
   270b0:	e1b02081 	lsls	r2, r1, #1
   270b4:	2a00000a 	bcs	270e4 <__aeabi_d2uiz+0x34>
   270b8:	e2922602 	adds	r2, r2, #2097152	; 0x200000
   270bc:	2a00000a 	bcs	270ec <__aeabi_d2uiz+0x3c>
   270c0:	5a000007 	bpl	270e4 <__aeabi_d2uiz+0x34>
   270c4:	e3e03e3e 	mvn	r3, #992	; 0x3e0
   270c8:	e0532ac2 	subs	r2, r3, r2, asr #21
   270cc:	4a000008 	bmi	270f4 <__aeabi_d2uiz+0x44>
   270d0:	e1a03581 	lsl	r3, r1, #11
   270d4:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
   270d8:	e1833aa0 	orr	r3, r3, r0, lsr #21
   270dc:	e1a00233 	lsr	r0, r3, r2
   270e0:	e12fff1e 	bx	lr
   270e4:	e3a00000 	mov	r0, #0
   270e8:	e12fff1e 	bx	lr
   270ec:	e1900601 	orrs	r0, r0, r1, lsl #12
   270f0:	1a000001 	bne	270fc <__aeabi_d2uiz+0x4c>
   270f4:	e3e00000 	mvn	r0, #0
   270f8:	e12fff1e 	bx	lr
   270fc:	e3a00000 	mov	r0, #0
   27100:	e12fff1e 	bx	lr

00027104 <__aeabi_d2f>:
   27104:	e1a02081 	lsl	r2, r1, #1
   27108:	e2523207 	subs	r3, r2, #1879048192	; 0x70000000
   2710c:	2253c602 	subscs	ip, r3, #2097152	; 0x200000
   27110:	227cc57f 	rsbscs	ip, ip, #532676608	; 0x1fc00000
   27114:	9a000006 	bls	27134 <__aeabi_d2f+0x30>
   27118:	e201c102 	and	ip, r1, #-2147483648	; 0x80000000
   2711c:	e1a02180 	lsl	r2, r0, #3
   27120:	e18c0ea0 	orr	r0, ip, r0, lsr #29
   27124:	e3520102 	cmp	r2, #-2147483648	; 0x80000000
   27128:	e0a00103 	adc	r0, r0, r3, lsl #2
   2712c:	03c00001 	biceq	r0, r0, #1
   27130:	e12fff1e 	bx	lr
   27134:	e3110101 	tst	r1, #1073741824	; 0x40000000
   27138:	1a00000f 	bne	2717c <__aeabi_d2f+0x78>
   2713c:	e293262e 	adds	r2, r3, #48234496	; 0x2e00000
   27140:	b2010102 	andlt	r0, r1, #-2147483648	; 0x80000000
   27144:	b12fff1e 	bxlt	lr
   27148:	e3811601 	orr	r1, r1, #1048576	; 0x100000
   2714c:	e1a02aa2 	lsr	r2, r2, #21
   27150:	e2622018 	rsb	r2, r2, #24
   27154:	e262c020 	rsb	ip, r2, #32
   27158:	e1b03c10 	lsls	r3, r0, ip
   2715c:	e1a00230 	lsr	r0, r0, r2
   27160:	13800001 	orrne	r0, r0, #1
   27164:	e1a03581 	lsl	r3, r1, #11
   27168:	e1a035a3 	lsr	r3, r3, #11
   2716c:	e1800c13 	orr	r0, r0, r3, lsl ip
   27170:	e1a03233 	lsr	r3, r3, r2
   27174:	e1a03083 	lsl	r3, r3, #1
   27178:	eaffffe6 	b	27118 <__aeabi_d2f+0x14>
   2717c:	e1f03ac2 	mvns	r3, r2, asr #21
   27180:	1a000003 	bne	27194 <__aeabi_d2f+0x90>
   27184:	e1903601 	orrs	r3, r0, r1, lsl #12
   27188:	13a0047f 	movne	r0, #2130706432	; 0x7f000000
   2718c:	13800503 	orrne	r0, r0, #12582912	; 0xc00000
   27190:	112fff1e 	bxne	lr
   27194:	e2010102 	and	r0, r1, #-2147483648	; 0x80000000
   27198:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
   2719c:	e3800502 	orr	r0, r0, #8388608	; 0x800000
   271a0:	e12fff1e 	bx	lr

000271a4 <__aeabi_frsub>:
   271a4:	e2200102 	eor	r0, r0, #-2147483648	; 0x80000000
   271a8:	ea000000 	b	271b0 <__addsf3>

000271ac <__aeabi_fsub>:
   271ac:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000

000271b0 <__addsf3>:
   271b0:	e1b02080 	lsls	r2, r0, #1
   271b4:	11b03081 	lslsne	r3, r1, #1
   271b8:	11320003 	teqne	r2, r3
   271bc:	11f0cc42 	mvnsne	ip, r2, asr #24
   271c0:	11f0cc43 	mvnsne	ip, r3, asr #24
   271c4:	0a00003c 	beq	272bc <__addsf3+0x10c>
   271c8:	e1a02c22 	lsr	r2, r2, #24
   271cc:	e0723c23 	rsbs	r3, r2, r3, lsr #24
   271d0:	c0822003 	addgt	r2, r2, r3
   271d4:	c0201001 	eorgt	r1, r0, r1
   271d8:	c0210000 	eorgt	r0, r1, r0
   271dc:	c0201001 	eorgt	r1, r0, r1
   271e0:	b2633000 	rsblt	r3, r3, #0
   271e4:	e3530019 	cmp	r3, #25
   271e8:	812fff1e 	bxhi	lr
   271ec:	e3100102 	tst	r0, #-2147483648	; 0x80000000
   271f0:	e3800502 	orr	r0, r0, #8388608	; 0x800000
   271f4:	e3c004ff 	bic	r0, r0, #-16777216	; 0xff000000
   271f8:	12600000 	rsbne	r0, r0, #0
   271fc:	e3110102 	tst	r1, #-2147483648	; 0x80000000
   27200:	e3811502 	orr	r1, r1, #8388608	; 0x800000
   27204:	e3c114ff 	bic	r1, r1, #-16777216	; 0xff000000
   27208:	12611000 	rsbne	r1, r1, #0
   2720c:	e1320003 	teq	r2, r3
   27210:	0a000023 	beq	272a4 <__addsf3+0xf4>
   27214:	e2422001 	sub	r2, r2, #1
   27218:	e0900351 	adds	r0, r0, r1, asr r3
   2721c:	e2633020 	rsb	r3, r3, #32
   27220:	e1a01311 	lsl	r1, r1, r3
   27224:	e2003102 	and	r3, r0, #-2147483648	; 0x80000000
   27228:	5a000001 	bpl	27234 <__addsf3+0x84>
   2722c:	e2711000 	rsbs	r1, r1, #0
   27230:	e2e00000 	rsc	r0, r0, #0
   27234:	e3500502 	cmp	r0, #8388608	; 0x800000
   27238:	3a00000b 	bcc	2726c <__addsf3+0xbc>
   2723c:	e3500401 	cmp	r0, #16777216	; 0x1000000
   27240:	3a000004 	bcc	27258 <__addsf3+0xa8>
   27244:	e1b000a0 	lsrs	r0, r0, #1
   27248:	e1a01061 	rrx	r1, r1
   2724c:	e2822001 	add	r2, r2, #1
   27250:	e35200fe 	cmp	r2, #254	; 0xfe
   27254:	2a00002d 	bcs	27310 <__addsf3+0x160>
   27258:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
   2725c:	e0a00b82 	adc	r0, r0, r2, lsl #23
   27260:	03c00001 	biceq	r0, r0, #1
   27264:	e1800003 	orr	r0, r0, r3
   27268:	e12fff1e 	bx	lr
   2726c:	e1b01081 	lsls	r1, r1, #1
   27270:	e0a00000 	adc	r0, r0, r0
   27274:	e2522001 	subs	r2, r2, #1
   27278:	23500502 	cmpcs	r0, #8388608	; 0x800000
   2727c:	2afffff5 	bcs	27258 <__addsf3+0xa8>
   27280:	e16fcf10 	clz	ip, r0
   27284:	e24cc008 	sub	ip, ip, #8
   27288:	e052200c 	subs	r2, r2, ip
   2728c:	e1a00c10 	lsl	r0, r0, ip
   27290:	a0800b82 	addge	r0, r0, r2, lsl #23
   27294:	b2622000 	rsblt	r2, r2, #0
   27298:	a1800003 	orrge	r0, r0, r3
   2729c:	b1830230 	orrlt	r0, r3, r0, lsr r2
   272a0:	e12fff1e 	bx	lr
   272a4:	e3320000 	teq	r2, #0
   272a8:	e2211502 	eor	r1, r1, #8388608	; 0x800000
   272ac:	02200502 	eoreq	r0, r0, #8388608	; 0x800000
   272b0:	02822001 	addeq	r2, r2, #1
   272b4:	12433001 	subne	r3, r3, #1
   272b8:	eaffffd5 	b	27214 <__addsf3+0x64>
   272bc:	e1a03081 	lsl	r3, r1, #1
   272c0:	e1f0cc42 	mvns	ip, r2, asr #24
   272c4:	11f0cc43 	mvnsne	ip, r3, asr #24
   272c8:	0a000013 	beq	2731c <__addsf3+0x16c>
   272cc:	e1320003 	teq	r2, r3
   272d0:	0a000002 	beq	272e0 <__addsf3+0x130>
   272d4:	e3320000 	teq	r2, #0
   272d8:	01a00001 	moveq	r0, r1
   272dc:	e12fff1e 	bx	lr
   272e0:	e1300001 	teq	r0, r1
   272e4:	13a00000 	movne	r0, #0
   272e8:	112fff1e 	bxne	lr
   272ec:	e31204ff 	tst	r2, #-16777216	; 0xff000000
   272f0:	1a000002 	bne	27300 <__addsf3+0x150>
   272f4:	e1b00080 	lsls	r0, r0, #1
   272f8:	23800102 	orrcs	r0, r0, #-2147483648	; 0x80000000
   272fc:	e12fff1e 	bx	lr
   27300:	e2922402 	adds	r2, r2, #33554432	; 0x2000000
   27304:	32800502 	addcc	r0, r0, #8388608	; 0x800000
   27308:	312fff1e 	bxcc	lr
   2730c:	e2003102 	and	r3, r0, #-2147483648	; 0x80000000
   27310:	e383047f 	orr	r0, r3, #2130706432	; 0x7f000000
   27314:	e3800502 	orr	r0, r0, #8388608	; 0x800000
   27318:	e12fff1e 	bx	lr
   2731c:	e1f02c42 	mvns	r2, r2, asr #24
   27320:	11a00001 	movne	r0, r1
   27324:	01f03c43 	mvnseq	r3, r3, asr #24
   27328:	11a01000 	movne	r1, r0
   2732c:	e1b02480 	lsls	r2, r0, #9
   27330:	01b03481 	lslseq	r3, r1, #9
   27334:	01300001 	teqeq	r0, r1
   27338:	13800501 	orrne	r0, r0, #4194304	; 0x400000
   2733c:	e12fff1e 	bx	lr

00027340 <__aeabi_ui2f>:
   27340:	e3a03000 	mov	r3, #0
   27344:	ea000001 	b	27350 <__aeabi_i2f+0x8>

00027348 <__aeabi_i2f>:
   27348:	e2103102 	ands	r3, r0, #-2147483648	; 0x80000000
   2734c:	42600000 	rsbmi	r0, r0, #0
   27350:	e1b0c000 	movs	ip, r0
   27354:	012fff1e 	bxeq	lr
   27358:	e383344b 	orr	r3, r3, #1258291200	; 0x4b000000
   2735c:	e1a01000 	mov	r1, r0
   27360:	e3a00000 	mov	r0, #0
   27364:	ea00000f 	b	273a8 <__aeabi_l2f+0x30>

00027368 <__aeabi_ul2f>:
   27368:	e1902001 	orrs	r2, r0, r1
   2736c:	012fff1e 	bxeq	lr
   27370:	e3a03000 	mov	r3, #0
   27374:	ea000005 	b	27390 <__aeabi_l2f+0x18>

00027378 <__aeabi_l2f>:
   27378:	e1902001 	orrs	r2, r0, r1
   2737c:	012fff1e 	bxeq	lr
   27380:	e2113102 	ands	r3, r1, #-2147483648	; 0x80000000
   27384:	5a000001 	bpl	27390 <__aeabi_l2f+0x18>
   27388:	e2700000 	rsbs	r0, r0, #0
   2738c:	e2e11000 	rsc	r1, r1, #0
   27390:	e1b0c001 	movs	ip, r1
   27394:	01a0c000 	moveq	ip, r0
   27398:	01a01000 	moveq	r1, r0
   2739c:	03a00000 	moveq	r0, #0
   273a0:	e383345b 	orr	r3, r3, #1526726656	; 0x5b000000
   273a4:	02433201 	subeq	r3, r3, #268435456	; 0x10000000
   273a8:	e2433502 	sub	r3, r3, #8388608	; 0x800000
   273ac:	e16f2f1c 	clz	r2, ip
   273b0:	e2522008 	subs	r2, r2, #8
   273b4:	e0433b82 	sub	r3, r3, r2, lsl #23
   273b8:	ba000006 	blt	273d8 <__aeabi_l2f+0x60>
   273bc:	e0833211 	add	r3, r3, r1, lsl r2
   273c0:	e1a0c210 	lsl	ip, r0, r2
   273c4:	e2622020 	rsb	r2, r2, #32
   273c8:	e35c0102 	cmp	ip, #-2147483648	; 0x80000000
   273cc:	e0a30230 	adc	r0, r3, r0, lsr r2
   273d0:	03c00001 	biceq	r0, r0, #1
   273d4:	e12fff1e 	bx	lr
   273d8:	e2822020 	add	r2, r2, #32
   273dc:	e1a0c211 	lsl	ip, r1, r2
   273e0:	e2622020 	rsb	r2, r2, #32
   273e4:	e190008c 	orrs	r0, r0, ip, lsl #1
   273e8:	e0a30231 	adc	r0, r3, r1, lsr r2
   273ec:	01c00fac 	biceq	r0, r0, ip, lsr #31
   273f0:	e12fff1e 	bx	lr

000273f4 <__aeabi_ldivmod>:
   273f4:	e3530000 	cmp	r3, #0
   273f8:	03520000 	cmpeq	r2, #0
   273fc:	1a000007 	bne	27420 <__aeabi_ldivmod+0x2c>
   27400:	e3510000 	cmp	r1, #0
   27404:	b3a01102 	movlt	r1, #-2147483648	; 0x80000000
   27408:	b3a00000 	movlt	r0, #0
   2740c:	ba000002 	blt	2741c <__aeabi_ldivmod+0x28>
   27410:	03500000 	cmpeq	r0, #0
   27414:	13e01102 	mvnne	r1, #-2147483648	; 0x80000000
   27418:	13e00000 	mvnne	r0, #0
   2741c:	ea000038 	b	27504 <__aeabi_idiv0>
   27420:	e24dd008 	sub	sp, sp, #8
   27424:	e92d6000 	push	{sp, lr}
   27428:	e3510000 	cmp	r1, #0
   2742c:	ba000006 	blt	2744c <__aeabi_ldivmod+0x58>
   27430:	e3530000 	cmp	r3, #0
   27434:	ba000011 	blt	27480 <__aeabi_ldivmod+0x8c>
   27438:	eb000035 	bl	27514 <__udivmoddi4>
   2743c:	e59de004 	ldr	lr, [sp, #4]
   27440:	e28dd008 	add	sp, sp, #8
   27444:	e8bd000c 	pop	{r2, r3}
   27448:	e12fff1e 	bx	lr
   2744c:	e2700000 	rsbs	r0, r0, #0
   27450:	e0c11081 	sbc	r1, r1, r1, lsl #1
   27454:	e3530000 	cmp	r3, #0
   27458:	ba000011 	blt	274a4 <__aeabi_ldivmod+0xb0>
   2745c:	eb00002c 	bl	27514 <__udivmoddi4>
   27460:	e59de004 	ldr	lr, [sp, #4]
   27464:	e28dd008 	add	sp, sp, #8
   27468:	e8bd000c 	pop	{r2, r3}
   2746c:	e2700000 	rsbs	r0, r0, #0
   27470:	e0c11081 	sbc	r1, r1, r1, lsl #1
   27474:	e2722000 	rsbs	r2, r2, #0
   27478:	e0c33083 	sbc	r3, r3, r3, lsl #1
   2747c:	e12fff1e 	bx	lr
   27480:	e2722000 	rsbs	r2, r2, #0
   27484:	e0c33083 	sbc	r3, r3, r3, lsl #1
   27488:	eb000021 	bl	27514 <__udivmoddi4>
   2748c:	e59de004 	ldr	lr, [sp, #4]
   27490:	e28dd008 	add	sp, sp, #8
   27494:	e8bd000c 	pop	{r2, r3}
   27498:	e2700000 	rsbs	r0, r0, #0
   2749c:	e0c11081 	sbc	r1, r1, r1, lsl #1
   274a0:	e12fff1e 	bx	lr
   274a4:	e2722000 	rsbs	r2, r2, #0
   274a8:	e0c33083 	sbc	r3, r3, r3, lsl #1
   274ac:	eb000018 	bl	27514 <__udivmoddi4>
   274b0:	e59de004 	ldr	lr, [sp, #4]
   274b4:	e28dd008 	add	sp, sp, #8
   274b8:	e8bd000c 	pop	{r2, r3}
   274bc:	e2722000 	rsbs	r2, r2, #0
   274c0:	e0c33083 	sbc	r3, r3, r3, lsl #1
   274c4:	e12fff1e 	bx	lr

000274c8 <__aeabi_uldivmod>:
   274c8:	e3530000 	cmp	r3, #0
   274cc:	03520000 	cmpeq	r2, #0
   274d0:	1a000004 	bne	274e8 <__aeabi_uldivmod+0x20>
   274d4:	e3510000 	cmp	r1, #0
   274d8:	03500000 	cmpeq	r0, #0
   274dc:	13e01000 	mvnne	r1, #0
   274e0:	13e00000 	mvnne	r0, #0
   274e4:	ea000006 	b	27504 <__aeabi_idiv0>
   274e8:	e24dd008 	sub	sp, sp, #8
   274ec:	e92d6000 	push	{sp, lr}
   274f0:	eb000007 	bl	27514 <__udivmoddi4>
   274f4:	e59de004 	ldr	lr, [sp, #4]
   274f8:	e28dd008 	add	sp, sp, #8
   274fc:	e8bd000c 	pop	{r2, r3}
   27500:	e12fff1e 	bx	lr

00027504 <__aeabi_idiv0>:
   27504:	e92d4002 	push	{r1, lr}
   27508:	e3a00008 	mov	r0, #8
   2750c:	ebffdfe4 	bl	1f4a4 <raise>
   27510:	e8bd8002 	pop	{r1, pc}

00027514 <__udivmoddi4>:
   27514:	e1510003 	cmp	r1, r3
   27518:	01500002 	cmpeq	r0, r2
   2751c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27520:	e1a04000 	mov	r4, r0
   27524:	33a00000 	movcc	r0, #0
   27528:	e1a05001 	mov	r5, r1
   2752c:	e59de024 	ldr	lr, [sp, #36]	; 0x24
   27530:	31a01000 	movcc	r1, r0
   27534:	3a00003f 	bcc	27638 <__udivmoddi4+0x124>
   27538:	e3530000 	cmp	r3, #0
   2753c:	016fcf12 	clzeq	ip, r2
   27540:	116fcf13 	clzne	ip, r3
   27544:	028cc020 	addeq	ip, ip, #32
   27548:	e3550000 	cmp	r5, #0
   2754c:	e1a07003 	mov	r7, r3
   27550:	016f3f14 	clzeq	r3, r4
   27554:	116f3f15 	clzne	r3, r5
   27558:	02833020 	addeq	r3, r3, #32
   2755c:	e04cc003 	sub	ip, ip, r3
   27560:	e24ca020 	sub	sl, ip, #32
   27564:	e1a09c17 	lsl	r9, r7, ip
   27568:	e1899a12 	orr	r9, r9, r2, lsl sl
   2756c:	e26cb020 	rsb	fp, ip, #32
   27570:	e1899b32 	orr	r9, r9, r2, lsr fp
   27574:	e1550009 	cmp	r5, r9
   27578:	e1a08c12 	lsl	r8, r2, ip
   2757c:	01540008 	cmpeq	r4, r8
   27580:	33a00000 	movcc	r0, #0
   27584:	e1a06002 	mov	r6, r2
   27588:	31a01000 	movcc	r1, r0
   2758c:	3a000005 	bcc	275a8 <__udivmoddi4+0x94>
   27590:	e3a00001 	mov	r0, #1
   27594:	e0544008 	subs	r4, r4, r8
   27598:	e1a01a10 	lsl	r1, r0, sl
   2759c:	e1811b30 	orr	r1, r1, r0, lsr fp
   275a0:	e0c55009 	sbc	r5, r5, r9
   275a4:	e1a00c10 	lsl	r0, r0, ip
   275a8:	e35c0000 	cmp	ip, #0
   275ac:	0a000021 	beq	27638 <__udivmoddi4+0x124>
   275b0:	e1a060a8 	lsr	r6, r8, #1
   275b4:	e1a0200c 	mov	r2, ip
   275b8:	e1866f89 	orr	r6, r6, r9, lsl #31
   275bc:	e1a070a9 	lsr	r7, r9, #1
   275c0:	ea000007 	b	275e4 <__udivmoddi4+0xd0>
   275c4:	e0543006 	subs	r3, r4, r6
   275c8:	e0c58007 	sbc	r8, r5, r7
   275cc:	e0933003 	adds	r3, r3, r3
   275d0:	e0a88008 	adc	r8, r8, r8
   275d4:	e2934001 	adds	r4, r3, #1
   275d8:	e2a85000 	adc	r5, r8, #0
   275dc:	e2522001 	subs	r2, r2, #1
   275e0:	0a000006 	beq	27600 <__udivmoddi4+0xec>
   275e4:	e1550007 	cmp	r5, r7
   275e8:	01540006 	cmpeq	r4, r6
   275ec:	2afffff4 	bcs	275c4 <__udivmoddi4+0xb0>
   275f0:	e0944004 	adds	r4, r4, r4
   275f4:	e0a55005 	adc	r5, r5, r5
   275f8:	e2522001 	subs	r2, r2, #1
   275fc:	1afffff8 	bne	275e4 <__udivmoddi4+0xd0>
   27600:	e1a03c34 	lsr	r3, r4, ip
   27604:	e1833b15 	orr	r3, r3, r5, lsl fp
   27608:	e1833a35 	orr	r3, r3, r5, lsr sl
   2760c:	e0900004 	adds	r0, r0, r4
   27610:	e1a04003 	mov	r4, r3
   27614:	e1a02c35 	lsr	r2, r5, ip
   27618:	e0a11005 	adc	r1, r1, r5
   2761c:	e1a05002 	mov	r5, r2
   27620:	e1a03c12 	lsl	r3, r2, ip
   27624:	e1833a14 	orr	r3, r3, r4, lsl sl
   27628:	e1a0cc14 	lsl	ip, r4, ip
   2762c:	e050000c 	subs	r0, r0, ip
   27630:	e1833b34 	orr	r3, r3, r4, lsr fp
   27634:	e0c11003 	sbc	r1, r1, r3
   27638:	e35e0000 	cmp	lr, #0
   2763c:	08bd8ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27640:	e88e0030 	stm	lr, {r4, r5}
   27644:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00027648 <_fini>:

.section .fini
.global _fini
_fini:
	stmdb sp!, {fp, lr}
   27648:	e92d4800 	push	{fp, lr}
	mov fp, sp
   2764c:	e1a0b00d 	mov	fp, sp

.section .fini
	ldmia sp!, {fp, lr}
   27650:	e8bd4800 	pop	{fp, lr}
	bx lr
   27654:	e12fff1e 	bx	lr

Disassembly of section .rodata:

00027658 <seL4_AsyncEndpointObject-0x10>:
   27658:	6c6c6548 	cfstr64vs	mvdx6, [ip], #-288	; 0xfffffee0
   2765c:	57202c6f 	strpl	r2, [r0, -pc, ror #24]!
   27660:	646c726f 	strbtvs	r7, [ip], #-623	; 0xfffffd91
   27664:	00000021 	andeq	r0, r0, r1, lsr #32

00027668 <seL4_AsyncEndpointObject>:
    seL4_ReplyObject,
#endif
    seL4_NonArchObjectTypeCount,
} seL4_ObjectType;

__attribute__((deprecated("use seL4_NotificationObject"))) static const seL4_ObjectType seL4_AsyncEndpointObject =
   27668:	00000003 	andeq	r0, r0, r3

0002766c <seL4_AsyncEndpointObject>:
   2766c:	00000003 	andeq	r0, r0, r3

00027670 <seL4_AsyncEndpointObject>:
   27670:	00000003 	andeq	r0, r0, r3
   27674:	746f6f72 	strbtvc	r6, [pc], #-3954	; 2767c <seL4_AsyncEndpointObject+0xc>
   27678:	76726573 			; <UNDEFINED> instruction: 0x76726573
   2767c:	00007265 	andeq	r7, r0, r5, ror #4
   27680:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
   27684:	0000313d 	andeq	r3, r0, sp, lsr r1

00027688 <seL4_AsyncEndpointObject>:
   27688:	00000003 	andeq	r0, r0, r3

0002768c <seL4_AsyncEndpointObject>:
   2768c:	00000003 	andeq	r0, r0, r3

00027690 <seL4_AsyncEndpointObject>:
   27690:	00000003 	andeq	r0, r0, r3

00027694 <seL4_AsyncEndpointObject>:
   27694:	00000003 	andeq	r0, r0, r3

00027698 <seL4_AsyncEndpointObject>:
   27698:	00000003 	andeq	r0, r0, r3

0002769c <sel4_page_sizes>:
#include <stddef.h>
#include <utils/attribute.h>
#include <sel4/sel4.h>

/* ordered list of page sizes for this architecture */
static const UNUSED size_t sel4_page_sizes[] = {
   2769c:	0000000c 	andeq	r0, r0, ip
   276a0:	00000010 	andeq	r0, r0, r0, lsl r0
   276a4:	00000014 	andeq	r0, r0, r4, lsl r0
   276a8:	00000018 	andeq	r0, r0, r8, lsl r0
   276ac:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 275f8 <__udivmoddi4+0xe4>
   276b0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   276b4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   276b8:	2f676e6f 	svccs	0x00676e6f
   276bc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   276c0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   276c4:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   276c8:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   276cc:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   276d0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   276d4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   276d8:	6f72702f 	svcvs	0x0072702f
   276dc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   276e0:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   276e4:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   276e8:	2f736269 	svccs	0x00736269
   276ec:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   276f0:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
   276f4:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
   276f8:	2f737973 	svccs	0x00737973
   276fc:	2f637273 	svccs	0x00637273
   27700:	5f737973 	svcpl	0x00737973
   27704:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
   27708:	00000000 	andeq	r0, r0, r0
   2770c:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
   27710:	5f64665f 	svcpl	0x0064665f
   27714:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
   27718:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
   2771c:	20786564 	rsbscs	r6, r8, r4, ror #10
   27720:	756e203c 	strbvc	r2, [lr, #-60]!	; 0xffffffc4
   27724:	64665f6d 	strbtvs	r5, [r6], #-3949	; 0xfffff093
   27728:	00000073 	andeq	r0, r0, r3, ror r0
   2772c:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   27730:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   27734:	6c61206f 	stclvs	0, cr2, [r1], #-444	; 0xfffffe44
   27738:	61636f6c 	cmnvs	r3, ip, ror #30
   2773c:	6e206574 	mcrvs	5, 1, r6, cr0, cr4, {3}
   27740:	765f7765 	ldrbvc	r7, [pc], -r5, ror #14
   27744:	0a736466 	beq	1d008e4 <__bss_end__+0x1bb789c>
   27748:	00000000 	andeq	r0, r0, r0
   2774c:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   27750:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   27754:	6c61206f 	stclvs	0, cr2, [r1], #-444	; 0xfffffe44
   27758:	61636f6c 	cmnvs	r3, ip, ror #30
   2775c:	66206574 			; <UNDEFINED> instruction: 0x66206574
   27760:	20656572 	rsbcs	r6, r5, r2, ror r5
   27764:	74206466 	strtvc	r6, [r0], #-1126	; 0xfffffb9a
   27768:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
   2776c:	0000000a 	andeq	r0, r0, sl
   27770:	3c206466 	cfstrscc	mvf6, [r0], #-408	; 0xfffffe68
   27774:	6d756e20 	ldclvs	14, cr6, [r5, #-128]!	; 0xffffff80
   27778:	7364665f 	cmnvc	r4, #99614720	; 0x5f00000
   2777c:	20262620 	eorcs	r2, r6, r0, lsr #12
   27780:	3e206466 	cdpcc	4, 2, cr6, cr0, cr6, {3}
   27784:	4946203d 	stmdbmi	r6, {r0, r2, r3, r4, r5, sp}^
   27788:	5f545352 	svcpl	0x00545352
   2778c:	52455355 	subpl	r5, r5, #1409286145	; 0x54000001
   27790:	0044465f 	subeq	r4, r4, pc, asr r6
   27794:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
   27798:	6c6e6f20 	stclvs	15, cr6, [lr], #-128	; 0xffffff80
   2779c:	75732079 	ldrbvc	r2, [r3, #-121]!	; 0xffffff87
   277a0:	726f7070 	rsbvc	r7, pc, #112	; 0x70
   277a4:	4f207374 	svcmi	0x00207374
   277a8:	4f44525f 	svcmi	0x0044525f
   277ac:	2c594c4e 	mrrccs	12, 4, r4, r9, cr14
   277b0:	746f6e20 	strbtvc	r6, [pc], #-3616	; 277b8 <sel4_page_sizes+0x11c>
   277b4:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
   277b8:	6e6f2078 	mcrvs	0, 3, r2, cr15, cr8, {3}
   277bc:	0a732520 	beq	1cf0c44 <__bss_end__+0x1ba7bfc>
   277c0:	00000000 	andeq	r0, r0, r0
   277c4:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
   277c8:	3d3d2073 	ldccc	0, cr2, [sp, #-460]!	; 0xfffffe34
   277cc:	525f4f20 	subspl	r4, pc, #32, 30	; 0x80
   277d0:	4c4e4f44 	mcrrmi	15, 4, r4, lr, cr4
   277d4:	00000059 	andeq	r0, r0, r9, asr r0
   277d8:	00002f2e 	andeq	r2, r0, lr, lsr #30
   277dc:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   277e0:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   277e4:	706f206f 	rsbvc	r2, pc, pc, rrx
   277e8:	66206e65 	strtvs	r6, [r0], -r5, ror #28
   277ec:	20656c69 	rsbcs	r6, r5, r9, ror #24
   277f0:	000a7325 	andeq	r7, sl, r5, lsr #6
   277f4:	2074754f 	rsbscs	r7, r4, pc, asr #10
   277f8:	6620666f 	strtvs	r6, [r0], -pc, ror #12
   277fc:	0a217364 	beq	884594 <__bss_end__+0x73b54c>
   27800:	00000000 	andeq	r0, r0, r0
   27804:	6c6c614d 	stfvse	f6, [ip], #-308	; 0xfffffecc
   27808:	6620636f 	strtvs	r6, [r0], -pc, ror #6
   2780c:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
   27810:	00000a64 	andeq	r0, r0, r4, ror #20
   27814:	6e65704f 	cdpvs	0, 6, cr7, cr5, cr15, {2}
   27818:	6f207461 	svcvs	0x00207461
   2781c:	20796c6e 	rsbscs	r6, r9, lr, ror #24
   27820:	70707573 	rsbsvc	r7, r0, r3, ror r5
   27824:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
   27828:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
   2782c:	76697461 	strbtvc	r7, [r9], -r1, ror #8
   27830:	61702065 	cmnvs	r0, r5, rrx
   27834:	74206874 	strtvc	r6, [r0], #-2164	; 0xfffff78c
   27838:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
   2783c:	75632065 	strbvc	r2, [r3, #-101]!	; 0xffffff9b
   27840:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
   27844:	6f772074 	svcvs	0x00772074
   27848:	6e696b72 	vmovvs.8	d9[7], r6
   2784c:	69642067 	stmdbvs	r4!, {r0, r1, r2, r5, r6, sp}^
   27850:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
   27854:	0a79726f 	beq	1e84218 <__bss_end__+0x1d3b1d0>
   27858:	00000000 	andeq	r0, r0, r0
   2785c:	6f6e2221 	svcvs	0x006e2221
   27860:	6d692074 	stclvs	0, cr2, [r9, #-464]!	; 0xfffffe30
   27864:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
   27868:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
   2786c:	00002264 	andeq	r2, r0, r4, ror #4
   27870:	6f4e2221 	svcvs	0x004e2221
   27874:	6d692074 	stclvs	0, cr2, [r9, #-464]!	; 0xfffffe30
   27878:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
   2787c:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
   27880:	00002264 	andeq	r2, r0, r4, ror #4
   27884:	69797254 	ldmdbvs	r9!, {r2, r4, r6, r9, ip, sp, lr}^
   27888:	7420676e 	strtvc	r6, [r0], #-1902	; 0xfffff892
   2788c:	6572206f 	ldrbvs	r2, [r2, #-111]!	; 0xffffff91
   27890:	65637564 	strbvs	r7, [r3, #-1380]!	; 0xfffffa9c
   27894:	65706f20 	ldrbvs	r6, [r0, #-3872]!	; 0xfffff0e0
   27898:	6966206e 	stmdbvs	r6!, {r1, r2, r3, r5, r6, sp}^
   2789c:	6c20656c 	cfstr32vs	mvfx6, [r0], #-432	; 0xfffffe50
   278a0:	74696d69 	strbtvc	r6, [r9], #-3433	; 0xfffff297
   278a4:	704f202e 	subvc	r2, pc, lr, lsr #32
   278a8:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
   278ac:	206e6f69 	rsbcs	r6, lr, r9, ror #30
   278b0:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   278b4:	70707573 	rsbsvc	r7, r0, r3, ror r5
   278b8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
   278bc:	69202c64 	stmdbvs	r0!, {r2, r5, r6, sl, fp, sp}
   278c0:	726f6e67 	rsbvc	r6, pc, #1648	; 0x670
   278c4:	00676e69 	rsbeq	r6, r7, r9, ror #28
   278c8:	6f4e2221 	svcvs	0x004e2221
   278cc:	6d692074 	stclvs	0, cr2, [r9, #-464]!	; 0xfffffe30
   278d0:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
   278d4:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
   278d8:	226e5c64 	rsbcs	r5, lr, #100, 24	; 0x6400
   278dc:	00000000 	andeq	r0, r0, r0
   278e0:	7473754d 	ldrbtvc	r7, [r3], #-1357	; 0xfffffab3
   278e4:	73617020 	cmnvc	r1, #32
   278e8:	5f462073 	svcpl	0x00462073
   278ec:	6f204b4f 	svcvs	0x00204b4f
   278f0:	5f522072 	svcpl	0x00522072
   278f4:	74204b4f 	strtvc	r4, [r0], #-2895	; 0xfffff4b1
   278f8:	7325206f 			; <UNDEFINED> instruction: 0x7325206f
   278fc:	0000000a 	andeq	r0, r0, sl

00027900 <__func__.9382>:
   27900:	5f646461 	svcpl	0x00646461
   27904:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
   27908:	0064665f 	rsbeq	r6, r4, pc, asr r6

0002790c <__func__.9401>:
   2790c:	776f7267 	strbvc	r7, [pc, -r7, ror #4]!
   27910:	7364665f 	cmnvc	r4, #99614720	; 0x5f00000
   27914:	00000000 	andeq	r0, r0, r0

00027918 <__func__.9412>:
   27918:	5f746567 	svcpl	0x00746567
   2791c:	735f6466 	cmpvc	pc, #1711276032	; 0x66000000
   27920:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
   27924:	00000074 	andeq	r0, r0, r4, ror r0

00027928 <__func__.9423>:
   27928:	5f737973 	svcpl	0x00737973
   2792c:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
   27930:	706d695f 	rsbvc	r6, sp, pc, asr r9
   27934:	0000006c 	andeq	r0, r0, ip, rrx

00027938 <__func__.9442>:
   27938:	5f737973 	svcpl	0x00737973
   2793c:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
   27940:	00007461 	andeq	r7, r0, r1, ror #8

00027944 <__func__.9447>:
   27944:	5f737973 	svcpl	0x00737973
   27948:	736f6c63 	cmnvc	pc, #25344	; 0x6300
   2794c:	00000065 	andeq	r0, r0, r5, rrx

00027950 <__func__.9470>:
   27950:	5f737973 	svcpl	0x00737973
   27954:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
   27958:	00007665 	andeq	r7, r0, r5, ror #12

0002795c <__func__.9486>:
   2795c:	5f737973 	svcpl	0x00737973
   27960:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
   27964:	00000076 	andeq	r0, r0, r6, ror r0

00027968 <__func__.9506>:
   27968:	5f737973 	svcpl	0x00737973
   2796c:	74636f69 	strbtvc	r6, [r3], #-3945	; 0xfffff097
   27970:	0000006c 	andeq	r0, r0, ip, rrx

00027974 <__func__.9515>:
   27974:	5f737973 	svcpl	0x00737973
   27978:	696c7270 	stmdbvs	ip!, {r4, r5, r6, r9, ip, sp, lr}^
   2797c:	3674696d 	ldrbtcc	r6, [r4], -sp, ror #18
   27980:	00000034 	andeq	r0, r0, r4, lsr r0

00027984 <__func__.9527>:
   27984:	5f737973 	svcpl	0x00737973
   27988:	6565736c 	strbvs	r7, [r5, #-876]!	; 0xfffffc94
   2798c:	0000006b 	andeq	r0, r0, fp, rrx

00027990 <__func__.9552>:
   27990:	5f737973 	svcpl	0x00737973
   27994:	65636361 	strbvs	r6, [r3, #-865]!	; 0xfffffc9f
   27998:	00007373 	andeq	r7, r0, r3, ror r3

0002799c <__FUNCTION__.9553>:
   2799c:	5f737973 	svcpl	0x00737973
   279a0:	65636361 	strbvs	r6, [r3, #-865]!	; 0xfffffc9f
   279a4:	00007373 	andeq	r7, r0, r3, ror r3

000279a8 <seL4_AsyncEndpointObject>:
   279a8:	00000003 	andeq	r0, r0, r3
   279ac:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   279b0:	2f346c65 	svccs	0x00346c65
   279b4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
   279b8:	2f656475 	svccs	0x00656475
   279bc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   279c0:	6168732f 	cmnvs	r8, pc, lsr #6
   279c4:	5f646572 	svcpl	0x00646572
   279c8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
   279cc:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
   279d0:	00682e6e 	rsbeq	r2, r8, lr, ror #28
   279d4:	62616c28 	rsbvs	r6, r1, #40, 24	; 0x2800
   279d8:	26206c65 	strtcs	r6, [r0], -r5, ror #24
   279dc:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   279e0:	66666666 	strbtvs	r6, [r6], -r6, ror #12
   279e4:	20297566 	eorcs	r7, r9, r6, ror #10
   279e8:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   279ec:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   279f0:	6c282026 	stcvs	0, cr2, [r8], #-152	; 0xffffff68
   279f4:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
   279f8:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   279fc:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   27a00:	3133203c 	teqcc	r3, ip, lsr r0
   27a04:	20292929 	eorcs	r2, r9, r9, lsr #18
   27a08:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   27a0c:	203a2030 	eorscs	r2, sl, r0, lsr r0
   27a10:	00002930 	andeq	r2, r0, r0, lsr r9
   27a14:	70616328 	rsbvc	r6, r1, r8, lsr #6
   27a18:	776e5573 			; <UNDEFINED> instruction: 0x776e5573
   27a1c:	70706172 	rsbsvc	r6, r0, r2, ror r1
   27a20:	26206465 	strtcs	r6, [r0], -r5, ror #8
   27a24:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   27a28:	20297537 	eorcs	r7, r9, r7, lsr r5
   27a2c:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   27a30:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   27a34:	63282026 			; <UNDEFINED> instruction: 0x63282026
   27a38:	55737061 	ldrbpl	r7, [r3, #-97]!	; 0xffffff9f
   27a3c:	6172776e 	cmnvs	r2, lr, ror #14
   27a40:	64657070 	strbtvs	r7, [r5], #-112	; 0xffffff90
   27a44:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   27a48:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   27a4c:	3133203c 	teqcc	r3, ip, lsr r0
   27a50:	20292929 	eorcs	r2, r9, r9, lsr #18
   27a54:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   27a58:	203a2030 	eorscs	r2, sl, r0, lsr r0
   27a5c:	00002930 	andeq	r2, r0, r0, lsr r9
   27a60:	74786528 	ldrbtvc	r6, [r8], #-1320	; 0xfffffad8
   27a64:	61436172 	hvcvs	13842	; 0x3612
   27a68:	26207370 			; <UNDEFINED> instruction: 0x26207370
   27a6c:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   27a70:	20297533 	eorcs	r7, r9, r3, lsr r5
   27a74:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   27a78:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   27a7c:	65282026 	strvs	r2, [r8, #-38]!	; 0xffffffda
   27a80:	61727478 	cmnvs	r2, r8, ror r4
   27a84:	73706143 	cmnvc	r0, #-1073741808	; 0xc0000010
   27a88:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   27a8c:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   27a90:	3133203c 	teqcc	r3, ip, lsr r0
   27a94:	20292929 	eorcs	r2, r9, r9, lsr #18
   27a98:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   27a9c:	203a2030 	eorscs	r2, sl, r0, lsr r0
   27aa0:	00002930 	andeq	r2, r0, r0, lsr r9
   27aa4:	6e656c28 	cdpvs	12, 6, cr6, cr5, cr8, {1}
   27aa8:	20687467 	rsbcs	r7, r8, r7, ror #8
   27aac:	307e2026 	rsbscc	r2, lr, r6, lsr #32
   27ab0:	75663778 	strbvc	r3, [r6, #-1912]!	; 0xfffff888
   27ab4:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
   27ab8:	30282820 	eorcc	r2, r8, r0, lsr #16
   27abc:	20262620 	eorcs	r2, r6, r0, lsr #12
   27ac0:	6e656c28 	cdpvs	12, 6, cr6, cr5, cr8, {1}
   27ac4:	20687467 	rsbcs	r7, r8, r7, ror #8
   27ac8:	31282026 			; <UNDEFINED> instruction: 0x31282026
   27acc:	3c3c2075 	ldccc	0, cr2, [ip], #-468	; 0xfffffe2c
   27ad0:	29313320 	ldmdbcs	r1!, {r5, r8, r9, ip, sp}
   27ad4:	3f202929 	svccc	0x00202929
   27ad8:	30783020 	rsbscc	r3, r8, r0, lsr #32
   27adc:	30203a20 	eorcc	r3, r0, r0, lsr #20
   27ae0:	00000029 	andeq	r0, r0, r9, lsr #32
   27ae4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 27a30 <seL4_AsyncEndpointObject+0x88>
   27ae8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   27aec:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   27af0:	2f676e6f 	svccs	0x00676e6f
   27af4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   27af8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   27afc:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   27b00:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   27b04:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   27b08:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   27b0c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   27b10:	6f72702f 	svcvs	0x0072702f
   27b14:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   27b18:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   27b1c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   27b20:	2f736269 	svccs	0x00736269
   27b24:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   27b28:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
   27b2c:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
   27b30:	2f737973 	svccs	0x00737973
   27b34:	2f637273 	svccs	0x00637273
   27b38:	73797376 	cmnvc	r9, #-671088639	; 0xd8000001
   27b3c:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
   27b40:	0000632e 	andeq	r6, r0, lr, lsr #6
   27b44:	746f6f42 	strbtvc	r6, [pc], #-3906	; 27b4c <seL4_AsyncEndpointObject+0x1a4>
   27b48:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
   27b4c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
   27b50:	20666f20 	rsbcs	r6, r6, r0, lsr #30
   27b54:	5f746573 	svcpl	0x00746573
   27b58:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
   27b5c:	615f6461 	cmpvs	pc, r1, ror #8
   27b60:	20616572 	rsbcs	r6, r1, r2, ror r5
   27b64:	656d6f73 	strbvs	r6, [sp, #-3955]!	; 0xfffff08d
   27b68:	20776f68 	rsbscs	r6, r7, r8, ror #30
   27b6c:	20746f67 	rsbscs	r6, r4, r7, ror #30
   27b70:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
   27b74:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   27b78:	65636977 	strbvs	r6, [r3, #-2423]!	; 0xfffff689
   27b7c:	00000000 	andeq	r0, r0, r0
   27b80:	746f6f62 	strbtvc	r6, [pc], #-3938	; 27b88 <seL4_AsyncEndpointObject+0x1e0>
   27b84:	6263745f 	rsbvs	r7, r3, #1593835520	; 0x5f000000
   27b88:	7470635f 	ldrbtvc	r6, [r0], #-863	; 0xfffffca1
   27b8c:	00000072 	andeq	r0, r0, r2, ror r0
   27b90:	00007025 	andeq	r7, r0, r5, lsr #32
   27b94:	746f6f42 	strbtvc	r6, [pc], #-3906	; 27b9c <seL4_AsyncEndpointObject+0x1f4>
   27b98:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
   27b9c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
   27ba0:	20666f20 	rsbcs	r6, r6, r0, lsr #30
   27ba4:	5f746573 	svcpl	0x00746573
   27ba8:	5f646974 	svcpl	0x00646974
   27bac:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
   27bb0:	20737365 	rsbscs	r7, r3, r5, ror #6
   27bb4:	656d6f73 	strbvs	r6, [sp, #-3955]!	; 0xfffff08d
   27bb8:	20776f68 	rsbscs	r6, r7, r8, ror #30
   27bbc:	20746f67 	rsbscs	r6, r4, r7, ror #30
   27bc0:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
   27bc4:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   27bc8:	65636977 	strbvs	r6, [r3, #-2423]!	; 0xfffff689
   27bcc:	00000000 	andeq	r0, r0, r0
   27bd0:	63737953 	cmnvs	r3, #1359872	; 0x14c000
   27bd4:	206c6c61 	rsbcs	r6, ip, r1, ror #24
   27bd8:	65206425 	strvs	r6, [r0, #-1061]!	; 0xfffffbdb
   27bdc:	65656378 	strbvs	r6, [r5, #-888]!	; 0xfffffc88
   27be0:	73207364 			; <UNDEFINED> instruction: 0x73207364
   27be4:	61637379 	smcvs	14137	; 0x3739
   27be8:	74206c6c 	strtvc	r6, [r0], #-3180	; 0xfffff394
   27bec:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
   27bf0:	7a697320 	bvc	1a84878 <__bss_end__+0x193b830>
   27bf4:	666f2065 	strbtvs	r2, [pc], -r5, rrx
   27bf8:	757a2520 	ldrbvc	r2, [sl, #-1312]!	; 0xfffffae0
   27bfc:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
   27c00:	746f6e20 	strbtvc	r6, [pc], #-3616	; 27c08 <seL4_AsyncEndpointObject+0x260>
   27c04:	756f6620 	strbvc	r6, [pc, #-1568]!	; 275ec <__udivmoddi4+0xd8>
   27c08:	6920646e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, sl, sp, lr}
   27c0c:	7073206e 	rsbsvc	r2, r3, lr, rrx
   27c10:	65737261 	ldrbvs	r7, [r3, #-609]!	; 0xfffffd9f
   27c14:	62617420 	rsbvs	r7, r1, #32, 8	; 0x20000000
   27c18:	0000656c 	andeq	r6, r0, ip, ror #10
   27c1c:	6e752221 	cdpvs	2, 7, cr2, cr5, cr1, {1}
   27c20:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
   27c24:	6c626168 	stfvse	f6, [r2], #-416	; 0xfffffe60
   27c28:	00002265 	andeq	r2, r0, r5, ror #4
   27c2c:	20746572 	rsbscs	r6, r4, r2, ror r5
   27c30:	62203d3d 	eorvs	r3, r0, #3904	; 0xf40
   27c34:	5f746f6f 	svcpl	0x00746f6f
   27c38:	5f746573 	svcpl	0x00746573
   27c3c:	5f646974 	svcpl	0x00646974
   27c40:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
   27c44:	00737365 	rsbseq	r7, r3, r5, ror #6
   27c48:	20746572 	rsbscs	r6, r4, r2, ror r5
   27c4c:	62203d3d 	eorvs	r3, r0, #3904	; 0xf40
   27c50:	5f746f6f 	svcpl	0x00746f6f
   27c54:	5f746573 	svcpl	0x00746573
   27c58:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
   27c5c:	615f6461 	cmpvs	pc, r1, ror #8
   27c60:	00616572 	rsbeq	r6, r1, r2, ror r5
   27c64:	20746572 	rsbscs	r6, r4, r2, ror r5
   27c68:	62203d3d 	eorvs	r3, r0, #3904	; 0xf40
   27c6c:	5f746f6f 	svcpl	0x00746f6f
   27c70:	5f737973 	svcpl	0x00737973
   27c74:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
   27c78:	00007665 	andeq	r7, r0, r5, ror #12
   27c7c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   27c80:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
   27c84:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
   27c88:	3a737973 	bcc	1d0625c <__bss_end__+0x1bbd214>
   27c8c:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
   27c90:	6120726f 			; <UNDEFINED> instruction: 0x6120726f
   27c94:	6d657474 	cfstrdvs	mvd7, [r5, #-464]!	; 0xfffffe30
   27c98:	6e697470 	mcrvs	4, 3, r7, cr9, cr0, {3}
   27c9c:	79732067 	ldmdbvc	r3!, {r0, r1, r2, r5, r6, sp}^
   27ca0:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
   27ca4:	6425206c 	strtvs	r2, [r5], #-108	; 0xffffff94
   27ca8:	0000000a 	andeq	r0, r0, sl

00027cac <__func__.8704>:
   27cac:	746f6f62 	strbtvc	r6, [pc], #-3938	; 27cb4 <__func__.8704+0x8>
   27cb0:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
   27cb4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
   27cb8:	5f646165 	svcpl	0x00646165
   27cbc:	61657261 	cmnvs	r5, r1, ror #4
   27cc0:	00000000 	andeq	r0, r0, r0

00027cc4 <__func__.6820>:
   27cc4:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
   27cc8:	73654d5f 	cmnvc	r5, #6080	; 0x17c0
   27ccc:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
   27cd0:	6f666e49 	svcvs	0x00666e49
   27cd4:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
   27cd8:	00000000 	andeq	r0, r0, r0

00027cdc <__func__.8714>:
   27cdc:	746f6f62 	strbtvc	r6, [pc], #-3938	; 27ce4 <__func__.8714+0x8>
   27ce0:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
   27ce4:	6469745f 	strbtvs	r7, [r9], #-1119	; 0xfffffba1
   27ce8:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
   27cec:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
   27cf0:	00000000 	andeq	r0, r0, r0

00027cf4 <__func__.8753>:
   27cf4:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
   27cf8:	73797363 	cmnvc	r9, #-1946157055	; 0x8c000001
   27cfc:	736e695f 	cmnvc	lr, #1556480	; 0x17c000
   27d00:	6c6c6174 	stfvse	f6, [ip], #-464	; 0xfffffe30
   27d04:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
   27d08:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
   27d0c:	00000000 	andeq	r0, r0, r0

00027d10 <__func__.8758>:
   27d10:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
   27d14:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
   27d18:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
   27d1c:	6261745f 	rsbvs	r7, r1, #1593835520	; 0x5f000000
   27d20:	0000656c 	andeq	r6, r0, ip, ror #10

00027d24 <seL4_AsyncEndpointObject>:
   27d24:	00000003 	andeq	r0, r0, r3

00027d28 <seL4_AsyncEndpointObject>:
   27d28:	00000003 	andeq	r0, r0, r3

00027d2c <KOBJECT_ASYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_NOTIFICATION") static const kobject_t KOBJECT_ASYNC_ENDPOINT = KOBJECT_NOTIFICATION;
   27d2c:	00000008 	andeq	r0, r0, r8

00027d30 <KOBJECT_SYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_ENDPOINT") static const kobject_t KOBJECT_SYNC_ENDPOINT  = KOBJECT_ENDPOINT;
   27d30:	00000007 	andeq	r0, r0, r7

00027d34 <sel4_page_sizes>:
   27d34:	0000000c 	andeq	r0, r0, ip
   27d38:	00000010 	andeq	r0, r0, r0, lsl r0
   27d3c:	00000014 	andeq	r0, r0, r4, lsl r0
   27d40:	00000018 	andeq	r0, r0, r8, lsl r0
   27d44:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 27c90 <seL4_AsyncEndpointObject+0x2e8>
   27d48:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   27d4c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   27d50:	2f676e6f 	svccs	0x00676e6f
   27d54:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   27d58:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   27d5c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   27d60:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   27d64:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   27d68:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   27d6c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   27d70:	6f72702f 	svcvs	0x0072702f
   27d74:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   27d78:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   27d7c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   27d80:	2f736269 	svccs	0x00736269
   27d84:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   27d88:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
   27d8c:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
   27d90:	2f737973 	svccs	0x00737973
   27d94:	2f637273 	svccs	0x00637273
   27d98:	5f737973 	svcpl	0x00737973
   27d9c:	65726f6d 	ldrbvs	r6, [r2, #-3949]!	; 0xfffff093
   27da0:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
   27da4:	0000632e 	andeq	r6, r0, lr, lsr #6
   27da8:	6f6e2221 	svcvs	0x006e2221
   27dac:	6d692074 	stclvs	0, cr2, [r9, #-464]!	; 0xfffffe30
   27db0:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
   27db4:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
   27db8:	00002264 	andeq	r2, r0, r4, ror #4
   27dbc:	69207325 	stmdbvs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
   27dc0:	6e752073 	mrcvs	0, 3, r2, cr5, cr3, {3}
   27dc4:	70707573 	rsbsvc	r7, r0, r3, ror r5
   27dc8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
   27dcc:	54202e64 	strtpl	r2, [r0], #-3684	; 0xfffff19c
   27dd0:	20736968 	rsbscs	r6, r3, r8, ror #18
   27dd4:	2079616d 	rsbscs	r6, r9, sp, ror #2
   27dd8:	65766168 	ldrbvs	r6, [r6, #-360]!	; 0xfffffe98
   27ddc:	65656220 	strbvs	r6, [r5, #-544]!	; 0xfffffde0
   27de0:	6163206e 	cmnvs	r3, lr, rrx
   27de4:	64656c6c 	strbtvs	r6, [r5], #-3180	; 0xfffff394
   27de8:	65756420 	ldrbvs	r6, [r5, #-1056]!	; 0xfffffbe0
   27dec:	206f7420 	rsbcs	r7, pc, r0, lsr #8
   27df0:	616c2061 	cmnvs	ip, r1, rrx
   27df4:	20656772 	rsbcs	r6, r5, r2, ror r7
   27df8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
   27dfc:	6427636f 	strtvs	r6, [r7], #-879	; 0xfffffc91
   27e00:	67657220 	strbvs	r7, [r5, -r0, lsr #4]!
   27e04:	206e6f69 	rsbcs	r6, lr, r9, ror #30
   27e08:	6e696562 	cdpvs	5, 6, cr6, cr9, cr2, {3}
   27e0c:	72662067 	rsbvc	r2, r6, #103	; 0x67
   27e10:	64276565 	strtvs	r6, [r7], #-1381	; 0xfffffa9b
   27e14:	0000002e 	andeq	r0, r0, lr, lsr #32

00027e18 <__func__.9892>:
   27e18:	5f737973 	svcpl	0x00737973
   27e1c:	70616d6d 	rsbvc	r6, r1, sp, ror #26
   27e20:	706d695f 	rsbvc	r6, sp, pc, asr r9
   27e24:	0000006c 	andeq	r0, r0, ip, rrx

00027e28 <__func__.9896>:
   27e28:	5f737973 	svcpl	0x00737973
   27e2c:	6d65726d 	sfmvs	f7, 2, [r5, #-436]!	; 0xfffffe4c
   27e30:	00007061 	andeq	r7, r0, r1, rrx

00027e34 <__func__.9921>:
   27e34:	5f737973 	svcpl	0x00737973
   27e38:	6d6e756d 	cfstr64vs	mvdx7, [lr, #-436]!	; 0xfffffe4c
   27e3c:	00007061 	andeq	r7, r0, r1, rrx

00027e40 <seL4_AsyncEndpointObject>:
   27e40:	00000003 	andeq	r0, r0, r3

00027e44 <seL4_AsyncEndpointObject>:
   27e44:	00000003 	andeq	r0, r0, r3
   27e48:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   27e4c:	2f346c65 	svccs	0x00346c65
   27e50:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
   27e54:	2f656475 	svccs	0x00656475
   27e58:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   27e5c:	6168732f 	cmnvs	r8, pc, lsr #6
   27e60:	5f646572 	svcpl	0x00646572
   27e64:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
   27e68:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
   27e6c:	00682e6e 	rsbeq	r2, r8, lr, ror #28
   27e70:	70616328 	rsbvc	r6, r1, r8, lsr #6
   27e74:	6f6c6c41 	svcvs	0x006c6c41
   27e78:	61724777 	cmnvs	r2, r7, ror r7
   27e7c:	6552746e 	ldrbvs	r7, [r2, #-1134]	; 0xfffffb92
   27e80:	20796c70 	rsbscs	r6, r9, r0, ror ip
   27e84:	307e2026 	rsbscc	r2, lr, r6, lsr #32
   27e88:	29753178 	ldmdbcs	r5!, {r3, r4, r5, r6, r8, ip, sp}^
   27e8c:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   27e90:	20302828 	eorscs	r2, r0, r8, lsr #16
   27e94:	28202626 	stmdacs	r0!, {r1, r2, r5, r9, sl, sp}
   27e98:	41706163 	cmnmi	r0, r3, ror #2
   27e9c:	776f6c6c 	strbvc	r6, [pc, -ip, ror #24]!
   27ea0:	6e617247 	cdpvs	2, 6, cr7, cr1, cr7, {2}
   27ea4:	70655274 	rsbvc	r5, r5, r4, ror r2
   27ea8:	2620796c 	strtcs	r7, [r0], -ip, ror #18
   27eac:	75312820 	ldrvc	r2, [r1, #-2080]!	; 0xfffff7e0
   27eb0:	203c3c20 	eorscs	r3, ip, r0, lsr #24
   27eb4:	29293133 	stmdbcs	r9!, {r0, r1, r4, r5, r8, ip, sp}
   27eb8:	203f2029 	eorscs	r2, pc, r9, lsr #32
   27ebc:	20307830 	eorscs	r7, r0, r0, lsr r8
   27ec0:	2930203a 	ldmdbcs	r0!, {r1, r3, r4, r5, sp}
   27ec4:	00000000 	andeq	r0, r0, r0
   27ec8:	70616328 	rsbvc	r6, r1, r8, lsr #6
   27ecc:	6f6c6c41 	svcvs	0x006c6c41
   27ed0:	61724777 	cmnvs	r2, r7, ror r7
   27ed4:	2620746e 	strtcs	r7, [r0], -lr, ror #8
   27ed8:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   27edc:	20297531 	eorcs	r7, r9, r1, lsr r5
   27ee0:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   27ee4:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   27ee8:	63282026 			; <UNDEFINED> instruction: 0x63282026
   27eec:	6c417061 	mcrrvs	0, 6, r7, r1, cr1
   27ef0:	47776f6c 	ldrbmi	r6, [r7, -ip, ror #30]!
   27ef4:	746e6172 	strbtvc	r6, [lr], #-370	; 0xfffffe8e
   27ef8:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   27efc:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   27f00:	3133203c 	teqcc	r3, ip, lsr r0
   27f04:	20292929 	eorcs	r2, r9, r9, lsr #18
   27f08:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   27f0c:	203a2030 	eorscs	r2, sl, r0, lsr r0
   27f10:	00002930 	andeq	r2, r0, r0, lsr r9
   27f14:	70616328 	rsbvc	r6, r1, r8, lsr #6
   27f18:	6f6c6c41 	svcvs	0x006c6c41
   27f1c:	61655277 	smcvs	21799	; 0x5527
   27f20:	20262064 	eorcs	r2, r6, r4, rrx
   27f24:	3178307e 	cmncc	r8, lr, ror r0
   27f28:	3d202975 			; <UNDEFINED> instruction: 0x3d202975
   27f2c:	2828203d 	stmdacs	r8!, {r0, r2, r3, r4, r5, sp}
   27f30:	26262030 			; <UNDEFINED> instruction: 0x26262030
   27f34:	61632820 	cmnvs	r3, r0, lsr #16
   27f38:	6c6c4170 	stfvse	f4, [ip], #-448	; 0xfffffe40
   27f3c:	6552776f 	ldrbvs	r7, [r2, #-1903]	; 0xfffff891
   27f40:	26206461 	strtcs	r6, [r0], -r1, ror #8
   27f44:	75312820 	ldrvc	r2, [r1, #-2080]!	; 0xfffff7e0
   27f48:	203c3c20 	eorscs	r3, ip, r0, lsr #24
   27f4c:	29293133 	stmdbcs	r9!, {r0, r1, r4, r5, r8, ip, sp}
   27f50:	203f2029 	eorscs	r2, pc, r9, lsr #32
   27f54:	20307830 	eorscs	r7, r0, r0, lsr r8
   27f58:	2930203a 	ldmdbcs	r0!, {r1, r3, r4, r5, sp}
   27f5c:	00000000 	andeq	r0, r0, r0
   27f60:	70616328 	rsbvc	r6, r1, r8, lsr #6
   27f64:	6f6c6c41 	svcvs	0x006c6c41
   27f68:	69725777 	ldmdbvs	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, sl, ip, lr}^
   27f6c:	26206574 			; <UNDEFINED> instruction: 0x26206574
   27f70:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   27f74:	20297531 	eorcs	r7, r9, r1, lsr r5
   27f78:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   27f7c:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   27f80:	63282026 			; <UNDEFINED> instruction: 0x63282026
   27f84:	6c417061 	mcrrvs	0, 6, r7, r1, cr1
   27f88:	57776f6c 	ldrbpl	r6, [r7, -ip, ror #30]!
   27f8c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
   27f90:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   27f94:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   27f98:	3133203c 	teqcc	r3, ip, lsr r0
   27f9c:	20292929 	eorcs	r2, r9, r9, lsr #18
   27fa0:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   27fa4:	203a2030 	eorscs	r2, sl, r0, lsr r0
   27fa8:	00002930 	andeq	r2, r0, r0, lsr r9
   27fac:	62616c28 	rsbvs	r6, r1, #40, 24	; 0x2800
   27fb0:	26206c65 	strtcs	r6, [r0], -r5, ror #24
   27fb4:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   27fb8:	66666666 	strbtvs	r6, [r6], -r6, ror #12
   27fbc:	20297566 	eorcs	r7, r9, r6, ror #10
   27fc0:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   27fc4:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   27fc8:	6c282026 	stcvs	0, cr2, [r8], #-152	; 0xffffff68
   27fcc:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
   27fd0:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   27fd4:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   27fd8:	3133203c 	teqcc	r3, ip, lsr r0
   27fdc:	20292929 	eorcs	r2, r9, r9, lsr #18
   27fe0:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   27fe4:	203a2030 	eorscs	r2, sl, r0, lsr r0
   27fe8:	00002930 	andeq	r2, r0, r0, lsr r9
   27fec:	70616328 	rsbvc	r6, r1, r8, lsr #6
   27ff0:	776e5573 			; <UNDEFINED> instruction: 0x776e5573
   27ff4:	70706172 	rsbsvc	r6, r0, r2, ror r1
   27ff8:	26206465 	strtcs	r6, [r0], -r5, ror #8
   27ffc:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   28000:	20297537 	eorcs	r7, r9, r7, lsr r5
   28004:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   28008:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   2800c:	63282026 			; <UNDEFINED> instruction: 0x63282026
   28010:	55737061 	ldrbpl	r7, [r3, #-97]!	; 0xffffff9f
   28014:	6172776e 	cmnvs	r2, lr, ror #14
   28018:	64657070 	strbtvs	r7, [r5], #-112	; 0xffffff90
   2801c:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   28020:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   28024:	3133203c 	teqcc	r3, ip, lsr r0
   28028:	20292929 	eorcs	r2, r9, r9, lsr #18
   2802c:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   28030:	203a2030 	eorscs	r2, sl, r0, lsr r0
   28034:	00002930 	andeq	r2, r0, r0, lsr r9
   28038:	74786528 	ldrbtvc	r6, [r8], #-1320	; 0xfffffad8
   2803c:	61436172 	hvcvs	13842	; 0x3612
   28040:	26207370 			; <UNDEFINED> instruction: 0x26207370
   28044:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   28048:	20297533 	eorcs	r7, r9, r3, lsr r5
   2804c:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   28050:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   28054:	65282026 	strvs	r2, [r8, #-38]!	; 0xffffffda
   28058:	61727478 	cmnvs	r2, r8, ror r4
   2805c:	73706143 	cmnvc	r0, #-1073741808	; 0xc0000010
   28060:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   28064:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   28068:	3133203c 	teqcc	r3, ip, lsr r0
   2806c:	20292929 	eorcs	r2, r9, r9, lsr #18
   28070:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   28074:	203a2030 	eorscs	r2, sl, r0, lsr r0
   28078:	00002930 	andeq	r2, r0, r0, lsr r9
   2807c:	6e656c28 	cdpvs	12, 6, cr6, cr5, cr8, {1}
   28080:	20687467 	rsbcs	r7, r8, r7, ror #8
   28084:	307e2026 	rsbscc	r2, lr, r6, lsr #32
   28088:	75663778 	strbvc	r3, [r6, #-1912]!	; 0xfffff888
   2808c:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
   28090:	30282820 	eorcc	r2, r8, r0, lsr #16
   28094:	20262620 	eorcs	r2, r6, r0, lsr #12
   28098:	6e656c28 	cdpvs	12, 6, cr6, cr5, cr8, {1}
   2809c:	20687467 	rsbcs	r7, r8, r7, ror #8
   280a0:	31282026 			; <UNDEFINED> instruction: 0x31282026
   280a4:	3c3c2075 	ldccc	0, cr2, [ip], #-468	; 0xfffffe2c
   280a8:	29313320 	ldmdbcs	r1!, {r5, r8, r9, ip, sp}
   280ac:	3f202929 	svccc	0x00202929
   280b0:	30783020 	rsbscc	r3, r8, r0, lsr #32
   280b4:	30203a20 	eorcc	r3, r0, r0, lsr #20
   280b8:	00000029 	andeq	r0, r0, r9, lsr #32
   280bc:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28008 <seL4_AsyncEndpointObject+0x1c4>
   280c0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   280c4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   280c8:	2f676e6f 	svccs	0x00676e6f
   280cc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   280d0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   280d4:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   280d8:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   280dc:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   280e0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   280e4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   280e8:	6f72702f 	svcvs	0x0072702f
   280ec:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   280f0:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   280f4:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   280f8:	2f736269 	svccs	0x00736269
   280fc:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   28100:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   28104:	692f616b 	stmdbvs	pc!, {r0, r1, r3, r5, r6, r8, sp, lr}	; <UNPREDICTABLE>
   28108:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
   2810c:	762f6564 	strtvc	r6, [pc], -r4, ror #10
   28110:	762f616b 	strtvc	r6, [pc], -fp, ror #2
   28114:	682e616b 	stmdavs	lr!, {r0, r1, r3, r5, r6, r8, sp, lr}
   28118:	00000000 	andeq	r0, r0, r0
   2811c:	20736572 	rsbscs	r6, r3, r2, ror r5
   28120:	4e207369 	cdpmi	3, 2, cr7, cr0, cr9, {3}
   28124:	004c4c55 	subeq	r4, ip, r5, asr ip
   28128:	6e752221 	cdpvs	2, 7, cr2, cr5, cr1, {1}
   2812c:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
   28130:	6c626168 	stfvse	f6, [r2], #-416	; 0xfffffe60
   28134:	00002265 	andeq	r2, r0, r5, ror #4
   28138:	20616b76 	rsbcs	r6, r1, r6, ror fp
   2813c:	4e207369 	cdpmi	3, 2, cr7, cr0, cr9, {3}
   28140:	004c4c55 	subeq	r4, ip, r5, asr ip
   28144:	6d696e55 	stclvs	14, cr6, [r9, #-340]!	; 0xfffffeac
   28148:	656d6c70 	strbvs	r6, [sp, #-3184]!	; 0xfffff390
   2814c:	6465746e 	strbtvs	r7, [r5], #-1134	; 0xfffffb92
   28150:	00000000 	andeq	r0, r0, r0
   28154:	746f6c73 	strbtvc	r6, [pc], #-3187	; 2815c <seL4_AsyncEndpointObject+0x318>
   28158:	20736920 	rsbscs	r6, r3, r0, lsr #18
   2815c:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   28160:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
   28164:	6163203a 	cmnvs	r3, sl, lsr r0
   28168:	76206c6c 	strtvc	r6, [r0], -ip, ror #24
   2816c:	635f616b 	cmpvs	pc, #-1073741798	; 0xc000001a
   28170:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
   28174:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
   28178:	20657465 	rsbcs	r7, r5, r5, ror #8
   2817c:	73726966 	cmnvc	r2, #1671168	; 0x198000
   28180:	00000074 	andeq	r0, r0, r4, ror r0
   28184:	20746f4e 	rsbscs	r6, r4, lr, asr #30
   28188:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   2818c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
   28190:	00646574 	rsbeq	r6, r4, r4, ror r5

00028194 <KOBJECT_ASYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_NOTIFICATION") static const kobject_t KOBJECT_ASYNC_ENDPOINT = KOBJECT_NOTIFICATION;
   28194:	00000008 	andeq	r0, r0, r8

00028198 <KOBJECT_SYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_ENDPOINT") static const kobject_t KOBJECT_SYNC_ENDPOINT  = KOBJECT_ENDPOINT;
   28198:	00000007 	andeq	r0, r0, r7

0002819c <sel4_page_sizes>:
   2819c:	0000000c 	andeq	r0, r0, ip
   281a0:	00000010 	andeq	r0, r0, r0, lsl r0
   281a4:	00000014 	andeq	r0, r0, r4, lsl r0
   281a8:	00000018 	andeq	r0, r0, r8, lsl r0
   281ac:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 280f8 <seL4_AsyncEndpointObject+0x2b4>
   281b0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   281b4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   281b8:	2f676e6f 	svccs	0x00676e6f
   281bc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   281c0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   281c4:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   281c8:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   281cc:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   281d0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   281d4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   281d8:	6f72702f 	svcvs	0x0072702f
   281dc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   281e0:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   281e4:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   281e8:	2f736269 	svccs	0x00736269
   281ec:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   281f0:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   281f4:	63617073 	cmnvs	r1, #115	; 0x73
   281f8:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
   281fc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
   28200:	73762f65 	cmnvc	r6, #404	; 0x194
   28204:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
   28208:	6761702f 	strbvs	r7, [r1, -pc, lsr #32]!
   2820c:	00682e65 	rsbeq	r2, r8, r5, ror #28
   28210:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28214:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
   28218:	69735f65 	ldmdbvs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
   2821c:	5b73657a 	blpl	1d0180c <__bss_end__+0x1bb87c4>
   28220:	202d2069 	eorcs	r2, sp, r9, rrx
   28224:	3c205d31 	stccc	13, cr5, [r0], #-196	; 0xffffff3c
   28228:	6c657320 	stclvs	3, cr7, [r5], #-128	; 0xffffff80
   2822c:	61705f34 	cmnvs	r0, r4, lsr pc
   28230:	735f6567 	cmpvc	pc, #432013312	; 0x19c00000
   28234:	73657a69 	cmnvc	r5, #430080	; 0x69000
   28238:	005d695b 	subseq	r6, sp, fp, asr r9
   2823c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28188 <seL4_AsyncEndpointObject+0x344>
   28240:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   28244:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28248:	2f676e6f 	svccs	0x00676e6f
   2824c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28250:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28254:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28258:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   2825c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   28260:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   28264:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28268:	6f72702f 	svcvs	0x0072702f
   2826c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28270:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   28274:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   28278:	2f736269 	svccs	0x00736269
   2827c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   28280:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   28284:	63617073 	cmnvs	r1, #115	; 0x73
   28288:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
   2828c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
   28290:	73762f65 	cmnvc	r6, #404	; 0x194
   28294:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
   28298:	7073762f 	rsbsvc	r7, r3, pc, lsr #12
   2829c:	2e656361 	cdpcs	3, 6, cr6, cr5, cr1, {3}
   282a0:	00000068 	andeq	r0, r0, r8, rrx
   282a4:	61707376 	cmnvs	r0, r6, ror r3
   282a8:	69206563 	stmdbvs	r0!, {r0, r1, r5, r6, r8, sl, sp, lr}
   282ac:	554e2073 	strbpl	r2, [lr, #-115]	; 0xffffff8d
   282b0:	002e4c4c 	eoreq	r4, lr, ip, asr #24
   282b4:	70707553 	rsbsvc	r7, r0, r3, asr r5
   282b8:	6465696c 	strbtvs	r6, [r5], #-2412	; 0xfffff694
   282bc:	70737620 	rsbsvc	r7, r3, r0, lsr #12
   282c0:	20656361 	rsbcs	r6, r5, r1, ror #6
   282c4:	73656f64 	cmnvc	r5, #100, 30	; 0x190
   282c8:	2074276e 	rsbscs	r2, r4, lr, ror #14
   282cc:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   282d0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
   282d4:	616d2074 	smcvs	53764	; 0xd204
   282d8:	61705f70 	cmnvs	r0, r0, ror pc
   282dc:	28736567 	ldmdacs	r3!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
   282e0:	00002e29 	andeq	r2, r0, r9, lsr #28
   282e4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
   282e8:	77206465 	strvc	r6, [r0, -r5, ror #8]!
   282ec:	20687469 	rsbcs	r7, r8, r9, ror #8
   282f0:	5f6d756e 	svcpl	0x006d756e
   282f4:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
   282f8:	3d3d2073 	ldccc	0, cr2, [sp, #-460]!	; 0xfffffe34
   282fc:	202e3020 	eorcs	r3, lr, r0, lsr #32
   28300:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
   28304:	6f69746e 	svcvs	0x0069746e
   28308:	3f6c616e 	svccc	0x006c616e
   2830c:	00000000 	andeq	r0, r0, r0
   28310:	61766e49 	cmnvs	r6, r9, asr #28
   28314:	2064696c 	rsbcs	r6, r4, ip, ror #18
   28318:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
   2831c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
   28320:	7a252073 	bvc	9704f4 <__bss_end__+0x8274ac>
   28324:	00000075 	andeq	r0, r0, r5, ror r0
   28328:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28274 <sel4_page_sizes+0xd8>
   2832c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   28330:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28334:	2f676e6f 	svccs	0x00676e6f
   28338:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   2833c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28340:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28344:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   28348:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   2834c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   28350:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28354:	6f72702f 	svcvs	0x0072702f
   28358:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   2835c:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   28360:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   28364:	2f736269 	svccs	0x00736269
   28368:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   2836c:	70346c65 	eorsvc	r6, r4, r5, ror #24
   28370:	7374616c 	cmnvc	r4, #108, 2
   28374:	6f707075 	svcvs	0x00707075
   28378:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   2837c:	632f6372 			; <UNDEFINED> instruction: 0x632f6372
   28380:	6f6d6d6f 	svcvs	0x006d6d6f
   28384:	00632e6e 	rsbeq	r2, r3, lr, ror #28
   28388:	72726521 	rsbsvc	r6, r2, #138412032	; 0x8400000
   2838c:	0000726f 	andeq	r7, r0, pc, ror #4
   28390:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28394:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28398:	6567206f 	strbvs	r2, [r7, #-111]!	; 0xffffff91
   2839c:	61632074 	smcvs	12804	; 0x3204
   283a0:	6f662070 	svcvs	0x00662070
   283a4:	65732072 	ldrbvs	r2, [r3, #-114]!	; 0xffffff8e
   283a8:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
   283ac:	76656420 	strbtvc	r6, [r5], -r0, lsr #8
   283b0:	20656369 	rsbcs	r6, r5, r9, ror #6
   283b4:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
   283b8:	00000065 	andeq	r0, r0, r5, rrx
   283bc:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   283c0:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   283c4:	616d206f 	cmnvs	sp, pc, rrx
   283c8:	65732070 	ldrbvs	r2, [r3, #-112]!	; 0xffffff90
   283cc:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
   283d0:	76656420 	strbtvc	r6, [r5], -r0, lsr #8
   283d4:	20656369 	rsbcs	r6, r5, r9, ror #6
   283d8:	000a283a 	andeq	r2, sl, sl, lsr r8
   283dc:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
   283e0:	206e776f 	rsbcs	r7, lr, pc, ror #14
   283e4:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
   283e8:	74732070 	ldrbtvc	r2, [r3], #-112	; 0xffffff90
   283ec:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
   283f0:	00000021 	andeq	r0, r0, r1, lsr #32
   283f4:	69797254 	ldmdbvs	r9!, {r2, r4, r6, r9, ip, sp, lr}^
   283f8:	7420676e 	strtvc	r6, [r0], #-1902	; 0xfffff892
   283fc:	6e69206f 	cdpvs	0, 6, cr2, cr9, cr15, {3}
   28400:	61697469 	cmnvs	r9, r9, ror #8
   28404:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
   28408:	70206120 	eorvc	r6, r0, r0, lsr #2
   2840c:	69747261 	ldmdbvs	r4!, {r0, r5, r6, r9, ip, sp, lr}^
   28410:	796c6c61 	stmdbvc	ip!, {r0, r5, r6, sl, fp, sp, lr}^
   28414:	696e6920 	stmdbvs	lr!, {r5, r8, fp, sp, lr}^
   28418:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
   2841c:	64657369 	strbtvs	r7, [r5], #-873	; 0xfffffc97
   28420:	72657320 	rsbvc	r7, r5, #32, 6	; 0x80000000
   28424:	2e6c6169 	powcsez	f6, f4, #1.0
   28428:	72754320 	rsbsvc	r4, r5, #32, 6	; 0x80000000
   2842c:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
   28430:	74657320 	strbtvc	r7, [r5], #-800	; 0xfffffce0
   28434:	73207075 			; <UNDEFINED> instruction: 0x73207075
   28438:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
   2843c:	73692073 	cmnvc	r9, #115	; 0x73
   28440:	0a642520 	beq	19318c8 <__bss_end__+0x17e8880>
   28444:	00000000 	andeq	r0, r0, r0
   28448:	6f592221 	svcvs	0x00592221
   2844c:	61632075 	smcvs	12805	; 0x3205
   28450:	746f6e6e 	strbtvc	r6, [pc], #-3694	; 28458 <sel4_page_sizes+0x2bc>
   28454:	63657220 	cmnvs	r5, #32, 4
   28458:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
   2845c:	00000022 	andeq	r0, r0, r2, lsr #32
   28460:	7261570a 	rsbvc	r5, r1, #2621440	; 0x280000
   28464:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
   28468:	7375203a 	cmnvc	r5, #58	; 0x3a
   2846c:	20676e69 	rsbcs	r6, r7, r9, ror #28
   28470:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
   28474:	62206674 	eorvs	r6, r0, #116, 12	; 0x7400000
   28478:	726f6665 	rsbvc	r6, pc, #105906176	; 0x6500000
   2847c:	65732065 	ldrbvs	r2, [r3, #-101]!	; 0xffffff9b
   28480:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
   28484:	20736920 	rsbscs	r6, r3, r0, lsr #18
   28488:	20746573 	rsbscs	r6, r4, r3, ror r5
   2848c:	202e7075 	eorcs	r7, lr, r5, ror r0
   28490:	73696854 	cmnvc	r9, #84, 16	; 0x540000
   28494:	6c6e6f20 	stclvs	15, cr6, [lr], #-128	; 0xffffff80
   28498:	6f772079 	svcvs	0x00772079
   2849c:	20736b72 	rsbscs	r6, r3, r2, ror fp
   284a0:	79207361 	stmdbvc	r0!, {r0, r5, r6, r8, r9, ip, sp, lr}
   284a4:	0072756f 	rsbseq	r7, r2, pc, ror #10
   284a8:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
   284ac:	69206674 	stmdbvs	r0!, {r2, r4, r5, r6, r9, sl, sp, lr}
   284b0:	61622073 	smcvs	8707	; 0x2203
   284b4:	64656b63 	strbtvs	r6, [r5], #-2915	; 0xfffff49d
   284b8:	20796220 	rsbscs	r6, r9, r0, lsr #4
   284bc:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
   284c0:	6265445f 	rsbvs	r4, r5, #1593835520	; 0x5f000000
   284c4:	505f6775 	subspl	r6, pc, r5, ror r7	; <UNPREDICTABLE>
   284c8:	68437475 	stmdavs	r3, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
   284cc:	29287261 	stmdbcs	r8!, {r0, r5, r6, r9, ip, sp, lr}
   284d0:	00000000 	andeq	r0, r0, r0

000284d4 <__func__.11225>:
   284d4:	616d5f5f 	cmnvs	sp, pc, asr pc
   284d8:	65645f70 	strbvs	r5, [r4, #-3952]!	; 0xfffff090
   284dc:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   284e0:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
   284e4:	61665f65 	cmnvs	r6, r5, ror #30
   284e8:	61736c69 	cmnvs	r3, r9, ror #24
   284ec:	00006566 	andeq	r6, r0, r6, ror #10

000284f0 <__func__.6493>:
   284f0:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
   284f4:	7061435f 	rsbvc	r4, r1, pc, asr r3
   284f8:	68676952 	stmdavs	r7!, {r1, r4, r6, r8, fp, sp, lr}^
   284fc:	6e5f7374 	mrcvs	3, 2, r7, cr15, cr4, {3}
   28500:	00007765 	andeq	r7, r0, r5, ror #14

00028504 <__func__.6584>:
   28504:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
   28508:	73654d5f 	cmnvc	r5, #6080	; 0x17c0
   2850c:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
   28510:	6f666e49 	svcvs	0x00666e49
   28514:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
   28518:	00000000 	andeq	r0, r0, r0

0002851c <__func__.11237>:
   2851c:	616d5f5f 	cmnvs	sp, pc, asr pc
   28520:	65645f70 	strbvs	r5, [r4, #-3952]!	; 0xfffff090
   28524:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   28528:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
   2852c:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
   28530:	616c7567 	cmnvs	ip, r7, ror #10
   28534:	00000072 	andeq	r0, r0, r2, ror r0

00028538 <__func__.10873>:
   28538:	61707376 	cmnvs	r0, r6, ror r3
   2853c:	6d5f6563 	cfldr64vs	mvdx6, [pc, #-396]	; 283b8 <sel4_page_sizes+0x21c>
   28540:	705f7061 	subsvc	r7, pc, r1, rrx
   28544:	73656761 	cmnvc	r5, #25427968	; 0x1840000
   28548:	00000000 	andeq	r0, r0, r0

0002854c <__func__.10663>:
   2854c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28550:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
   28554:	735f6469 	cmpvc	pc, #1761607680	; 0x69000000
   28558:	5f657a69 	svcpl	0x00657a69
   2855c:	73746962 	cmnvc	r4, #1605632	; 0x188000
   28560:	00000000 	andeq	r0, r0, r0

00028564 <__func__.9034>:
   28564:	5f616b76 	svcpl	0x00616b76
   28568:	61707363 	cmnvs	r0, r3, ror #6
   2856c:	6d5f6563 	cfldr64vs	mvdx6, [pc, #-396]	; 283e8 <sel4_page_sizes+0x24c>
   28570:	5f656b61 	svcpl	0x00656b61
   28574:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
   28578:	00000000 	andeq	r0, r0, r0

0002857c <__func__.9045>:
   2857c:	5f616b76 	svcpl	0x00616b76
   28580:	61707363 	cmnvs	r0, r3, ror #6
   28584:	665f6563 	ldrbvs	r6, [pc], -r3, ror #10
   28588:	00656572 	rsbeq	r6, r5, r2, ror r5

0002858c <__func__.11268>:
   2858c:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
   28590:	70707573 	rsbsvc	r7, r0, r3, ror r5
   28594:	5f74726f 	svcpl	0x0074726f
   28598:	69726573 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
   2859c:	735f6c61 	cmpvc	pc, #24832	; 0x6100
   285a0:	70757465 	rsbsvc	r7, r5, r5, ror #8
   285a4:	6d69735f 	stclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
   285a8:	00656c70 	rsbeq	r6, r5, r0, ror ip

000285ac <seL4_AsyncEndpointObject>:
   285ac:	00000003 	andeq	r0, r0, r3
   285b0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   285b4:	2f346c65 	svccs	0x00346c65
   285b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
   285bc:	2f656475 	svccs	0x00656475
   285c0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   285c4:	6168732f 	cmnvs	r8, pc, lsr #6
   285c8:	5f646572 	svcpl	0x00646572
   285cc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
   285d0:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
   285d4:	00682e6e 	rsbeq	r2, r8, lr, ror #28
   285d8:	70616328 	rsbvc	r6, r1, r8, lsr #6
   285dc:	6f6c6c41 	svcvs	0x006c6c41
   285e0:	61724777 	cmnvs	r2, r7, ror r7
   285e4:	6552746e 	ldrbvs	r7, [r2, #-1134]	; 0xfffffb92
   285e8:	20796c70 	rsbscs	r6, r9, r0, ror ip
   285ec:	307e2026 	rsbscc	r2, lr, r6, lsr #32
   285f0:	29753178 	ldmdbcs	r5!, {r3, r4, r5, r6, r8, ip, sp}^
   285f4:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   285f8:	20302828 	eorscs	r2, r0, r8, lsr #16
   285fc:	28202626 	stmdacs	r0!, {r1, r2, r5, r9, sl, sp}
   28600:	41706163 	cmnmi	r0, r3, ror #2
   28604:	776f6c6c 	strbvc	r6, [pc, -ip, ror #24]!
   28608:	6e617247 	cdpvs	2, 6, cr7, cr1, cr7, {2}
   2860c:	70655274 	rsbvc	r5, r5, r4, ror r2
   28610:	2620796c 	strtcs	r7, [r0], -ip, ror #18
   28614:	75312820 	ldrvc	r2, [r1, #-2080]!	; 0xfffff7e0
   28618:	203c3c20 	eorscs	r3, ip, r0, lsr #24
   2861c:	29293133 	stmdbcs	r9!, {r0, r1, r4, r5, r8, ip, sp}
   28620:	203f2029 	eorscs	r2, pc, r9, lsr #32
   28624:	20307830 	eorscs	r7, r0, r0, lsr r8
   28628:	2930203a 	ldmdbcs	r0!, {r1, r3, r4, r5, sp}
   2862c:	00000000 	andeq	r0, r0, r0
   28630:	70616328 	rsbvc	r6, r1, r8, lsr #6
   28634:	6f6c6c41 	svcvs	0x006c6c41
   28638:	61724777 	cmnvs	r2, r7, ror r7
   2863c:	2620746e 	strtcs	r7, [r0], -lr, ror #8
   28640:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   28644:	20297531 	eorcs	r7, r9, r1, lsr r5
   28648:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   2864c:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   28650:	63282026 			; <UNDEFINED> instruction: 0x63282026
   28654:	6c417061 	mcrrvs	0, 6, r7, r1, cr1
   28658:	47776f6c 	ldrbmi	r6, [r7, -ip, ror #30]!
   2865c:	746e6172 	strbtvc	r6, [lr], #-370	; 0xfffffe8e
   28660:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   28664:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   28668:	3133203c 	teqcc	r3, ip, lsr r0
   2866c:	20292929 	eorcs	r2, r9, r9, lsr #18
   28670:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   28674:	203a2030 	eorscs	r2, sl, r0, lsr r0
   28678:	00002930 	andeq	r2, r0, r0, lsr r9
   2867c:	70616328 	rsbvc	r6, r1, r8, lsr #6
   28680:	6f6c6c41 	svcvs	0x006c6c41
   28684:	61655277 	smcvs	21799	; 0x5527
   28688:	20262064 	eorcs	r2, r6, r4, rrx
   2868c:	3178307e 	cmncc	r8, lr, ror r0
   28690:	3d202975 			; <UNDEFINED> instruction: 0x3d202975
   28694:	2828203d 	stmdacs	r8!, {r0, r2, r3, r4, r5, sp}
   28698:	26262030 			; <UNDEFINED> instruction: 0x26262030
   2869c:	61632820 	cmnvs	r3, r0, lsr #16
   286a0:	6c6c4170 	stfvse	f4, [ip], #-448	; 0xfffffe40
   286a4:	6552776f 	ldrbvs	r7, [r2, #-1903]	; 0xfffff891
   286a8:	26206461 	strtcs	r6, [r0], -r1, ror #8
   286ac:	75312820 	ldrvc	r2, [r1, #-2080]!	; 0xfffff7e0
   286b0:	203c3c20 	eorscs	r3, ip, r0, lsr #24
   286b4:	29293133 	stmdbcs	r9!, {r0, r1, r4, r5, r8, ip, sp}
   286b8:	203f2029 	eorscs	r2, pc, r9, lsr #32
   286bc:	20307830 	eorscs	r7, r0, r0, lsr r8
   286c0:	2930203a 	ldmdbcs	r0!, {r1, r3, r4, r5, sp}
   286c4:	00000000 	andeq	r0, r0, r0
   286c8:	70616328 	rsbvc	r6, r1, r8, lsr #6
   286cc:	6f6c6c41 	svcvs	0x006c6c41
   286d0:	69725777 	ldmdbvs	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, sl, ip, lr}^
   286d4:	26206574 			; <UNDEFINED> instruction: 0x26206574
   286d8:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   286dc:	20297531 	eorcs	r7, r9, r1, lsr r5
   286e0:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   286e4:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   286e8:	63282026 			; <UNDEFINED> instruction: 0x63282026
   286ec:	6c417061 	mcrrvs	0, 6, r7, r1, cr1
   286f0:	57776f6c 	ldrbpl	r6, [r7, -ip, ror #30]!
   286f4:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
   286f8:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   286fc:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   28700:	3133203c 	teqcc	r3, ip, lsr r0
   28704:	20292929 	eorcs	r2, r9, r9, lsr #18
   28708:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   2870c:	203a2030 	eorscs	r2, sl, r0, lsr r0
   28710:	00002930 	andeq	r2, r0, r0, lsr r9
   28714:	62616c28 	rsbvs	r6, r1, #40, 24	; 0x2800
   28718:	26206c65 	strtcs	r6, [r0], -r5, ror #24
   2871c:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   28720:	66666666 	strbtvs	r6, [r6], -r6, ror #12
   28724:	20297566 	eorcs	r7, r9, r6, ror #10
   28728:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   2872c:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   28730:	6c282026 	stcvs	0, cr2, [r8], #-152	; 0xffffff68
   28734:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
   28738:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   2873c:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   28740:	3133203c 	teqcc	r3, ip, lsr r0
   28744:	20292929 	eorcs	r2, r9, r9, lsr #18
   28748:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   2874c:	203a2030 	eorscs	r2, sl, r0, lsr r0
   28750:	00002930 	andeq	r2, r0, r0, lsr r9
   28754:	70616328 	rsbvc	r6, r1, r8, lsr #6
   28758:	776e5573 			; <UNDEFINED> instruction: 0x776e5573
   2875c:	70706172 	rsbsvc	r6, r0, r2, ror r1
   28760:	26206465 	strtcs	r6, [r0], -r5, ror #8
   28764:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   28768:	20297537 	eorcs	r7, r9, r7, lsr r5
   2876c:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   28770:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   28774:	63282026 			; <UNDEFINED> instruction: 0x63282026
   28778:	55737061 	ldrbpl	r7, [r3, #-97]!	; 0xffffff9f
   2877c:	6172776e 	cmnvs	r2, lr, ror #14
   28780:	64657070 	strbtvs	r7, [r5], #-112	; 0xffffff90
   28784:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   28788:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   2878c:	3133203c 	teqcc	r3, ip, lsr r0
   28790:	20292929 	eorcs	r2, r9, r9, lsr #18
   28794:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   28798:	203a2030 	eorscs	r2, sl, r0, lsr r0
   2879c:	00002930 	andeq	r2, r0, r0, lsr r9
   287a0:	74786528 	ldrbtvc	r6, [r8], #-1320	; 0xfffffad8
   287a4:	61436172 	hvcvs	13842	; 0x3612
   287a8:	26207370 			; <UNDEFINED> instruction: 0x26207370
   287ac:	78307e20 	ldmdavc	r0!, {r5, r9, sl, fp, ip, sp, lr}
   287b0:	20297533 	eorcs	r7, r9, r3, lsr r5
   287b4:	28203d3d 	stmdacs	r0!, {r0, r2, r3, r4, r5, r8, sl, fp, ip, sp}
   287b8:	26203028 	strtcs	r3, [r0], -r8, lsr #32
   287bc:	65282026 	strvs	r2, [r8, #-38]!	; 0xffffffda
   287c0:	61727478 	cmnvs	r2, r8, ror r4
   287c4:	73706143 	cmnvc	r0, #-1073741808	; 0xc0000010
   287c8:	28202620 	stmdacs	r0!, {r5, r9, sl, sp}
   287cc:	3c207531 	cfstr32cc	mvfx7, [r0], #-196	; 0xffffff3c
   287d0:	3133203c 	teqcc	r3, ip, lsr r0
   287d4:	20292929 	eorcs	r2, r9, r9, lsr #18
   287d8:	7830203f 	ldmdavc	r0!, {r0, r1, r2, r3, r4, r5, sp}
   287dc:	203a2030 	eorscs	r2, sl, r0, lsr r0
   287e0:	00002930 	andeq	r2, r0, r0, lsr r9
   287e4:	6e656c28 	cdpvs	12, 6, cr6, cr5, cr8, {1}
   287e8:	20687467 	rsbcs	r7, r8, r7, ror #8
   287ec:	307e2026 	rsbscc	r2, lr, r6, lsr #32
   287f0:	75663778 	strbvc	r3, [r6, #-1912]!	; 0xfffff888
   287f4:	3d3d2029 	ldccc	0, cr2, [sp, #-164]!	; 0xffffff5c
   287f8:	30282820 	eorcc	r2, r8, r0, lsr #16
   287fc:	20262620 	eorcs	r2, r6, r0, lsr #12
   28800:	6e656c28 	cdpvs	12, 6, cr6, cr5, cr8, {1}
   28804:	20687467 	rsbcs	r7, r8, r7, ror #8
   28808:	31282026 			; <UNDEFINED> instruction: 0x31282026
   2880c:	3c3c2075 	ldccc	0, cr2, [ip], #-468	; 0xfffffe2c
   28810:	29313320 	ldmdbcs	r1!, {r5, r8, r9, ip, sp}
   28814:	3f202929 	svccc	0x00202929
   28818:	30783020 	rsbscc	r3, r8, r0, lsr #32
   2881c:	30203a20 	eorcc	r3, r0, r0, lsr #20
   28820:	00000029 	andeq	r0, r0, r9, lsr #32
   28824:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28770 <seL4_AsyncEndpointObject+0x1c4>
   28828:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   2882c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28830:	2f676e6f 	svccs	0x00676e6f
   28834:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28838:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   2883c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28840:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   28844:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   28848:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2884c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28850:	6f72702f 	svcvs	0x0072702f
   28854:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28858:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   2885c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   28860:	2f736269 	svccs	0x00736269
   28864:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   28868:	73346c65 	teqvc	r4, #25856	; 0x6500
   2886c:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   28870:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
   28874:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
   28878:	69732f65 	ldmdbvs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
   2887c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
   28880:	6d69732f 	stclvs	3, cr7, [r9, #-188]!	; 0xffffff44
   28884:	2e656c70 	mcrcs	12, 3, r6, cr5, cr0, {3}
   28888:	00000068 	andeq	r0, r0, r8, rrx
   2888c:	706d6953 	rsbvc	r6, sp, r3, asr r9
   28890:	6920656c 	stmdbvs	r0!, {r2, r3, r5, r6, r8, sl, sp, lr}
   28894:	554e2073 	strbpl	r2, [lr, #-115]	; 0xffffff8d
   28898:	00004c4c 	andeq	r4, r0, ip, asr #24
   2889c:	6e207325 	cdpvs	3, 2, cr7, cr0, cr5, {1}
   288a0:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
   288a4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
   288a8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
   288ac:	00006465 	andeq	r6, r0, r5, ror #8
   288b0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 287fc <seL4_AsyncEndpointObject+0x250>
   288b4:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   288b8:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   288bc:	2f676e6f 	svccs	0x00676e6f
   288c0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   288c4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   288c8:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   288cc:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   288d0:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   288d4:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   288d8:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   288dc:	6f72702f 	svcvs	0x0072702f
   288e0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   288e4:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   288e8:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   288ec:	2f736269 	svccs	0x00736269
   288f0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   288f4:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   288f8:	692f616b 	stmdbvs	pc!, {r0, r1, r3, r5, r6, r8, sp, lr}	; <UNPREDICTABLE>
   288fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
   28900:	762f6564 	strtvc	r6, [pc], -r4, ror #10
   28904:	762f616b 	strtvc	r6, [pc], -fp, ror #2
   28908:	682e616b 	stmdavs	lr!, {r0, r1, r3, r5, r6, r8, sp, lr}
   2890c:	00000000 	andeq	r0, r0, r0
   28910:	20616b76 	rsbcs	r6, r1, r6, ror fp
   28914:	4e207369 	cdpmi	3, 2, cr7, cr0, cr9, {3}
   28918:	004c4c55 	subeq	r4, ip, r5, asr ip
   2891c:	20736572 	rsbscs	r6, r3, r2, ror r5
   28920:	4e207369 	cdpmi	3, 2, cr7, cr0, cr9, {3}
   28924:	004c4c55 	subeq	r4, ip, r5, asr ip
   28928:	6d696e55 	stclvs	14, cr6, [r9, #-340]!	; 0xfffffeac
   2892c:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
   28930:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
   28934:	00000064 	andeq	r0, r0, r4, rrx
   28938:	6e752221 	cdpvs	2, 7, cr2, cr5, cr1, {1}
   2893c:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
   28940:	6c626168 	stfvse	f6, [r2], #-416	; 0xfffffe60
   28944:	00002265 	andeq	r2, r0, r5, ror #4
   28948:	6d696e55 	stclvs	14, cr6, [r9, #-340]!	; 0xfffffeac
   2894c:	656d6c70 	strbvs	r6, [sp, #-3184]!	; 0xfffff390
   28950:	6465746e 	strbtvs	r7, [r5], #-1134	; 0xfffffb92
   28954:	00000000 	andeq	r0, r0, r0
   28958:	746f6c73 	strbtvc	r6, [pc], #-3187	; 28960 <seL4_AsyncEndpointObject+0x3b4>
   2895c:	20736920 	rsbscs	r6, r3, r0, lsr #18
   28960:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   28964:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
   28968:	6163203a 	cmnvs	r3, sl, lsr r0
   2896c:	76206c6c 	strtvc	r6, [r0], -ip, ror #24
   28970:	635f616b 	cmpvs	pc, #-1073741798	; 0xc000001a
   28974:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
   28978:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
   2897c:	20657465 	rsbcs	r7, r5, r5, ror #8
   28980:	73726966 	cmnvc	r2, #1671168	; 0x198000
   28984:	00000074 	andeq	r0, r0, r4, ror r0
   28988:	20746f4e 	rsbscs	r6, r4, lr, asr #30
   2898c:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   28990:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
   28994:	00646574 	rsbeq	r6, r4, r4, ror r5
   28998:	6b6f6f63 	blvs	1c0472c <__bss_end__+0x1abb6e4>
   2899c:	69206569 	stmdbvs	r0!, {r0, r3, r5, r6, r8, sl, sp, lr}
   289a0:	554e2073 	strbpl	r2, [lr, #-115]	; 0xffffff8d
   289a4:	00004c4c 	andeq	r4, r0, ip, asr #24
   289a8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 288f4 <seL4_AsyncEndpointObject+0x348>
   289ac:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   289b0:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   289b4:	2f676e6f 	svccs	0x00676e6f
   289b8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   289bc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   289c0:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   289c4:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   289c8:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   289cc:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   289d0:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   289d4:	6f72702f 	svcvs	0x0072702f
   289d8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   289dc:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   289e0:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   289e4:	2f736269 	svccs	0x00736269
   289e8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   289ec:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   289f0:	732f616b 			; <UNDEFINED> instruction: 0x732f616b
   289f4:	5f346c65 	svcpl	0x00346c65
   289f8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
   289fc:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
   28a00:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
   28a04:	7261612f 	rsbvc	r6, r1, #-1073741813	; 0xc000000b
   28a08:	32336863 	eorscc	r6, r3, #6488064	; 0x630000
   28a0c:	616b762f 	cmnvs	fp, pc, lsr #12
   28a10:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28a14:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
   28a18:	6b2f6863 	blvs	c02bac <__bss_end__+0xab9b64>
   28a1c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
   28a20:	745f7463 	ldrbvc	r7, [pc], #-1123	; 28a28 <seL4_AsyncEndpointObject+0x47c>
   28a24:	0000682e 	andeq	r6, r0, lr, lsr #16
   28a28:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
   28a2c:	206e776f 	rsbcs	r7, lr, pc, ror #14
   28a30:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
   28a34:	74207463 	strtvc	r7, [r0], #-1123	; 0xfffffb9d
   28a38:	00657079 	rsbeq	r7, r5, r9, ror r0

00028a3c <KOBJECT_ASYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_NOTIFICATION") static const kobject_t KOBJECT_ASYNC_ENDPOINT = KOBJECT_NOTIFICATION;
   28a3c:	00000008 	andeq	r0, r0, r8

00028a40 <KOBJECT_SYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_ENDPOINT") static const kobject_t KOBJECT_SYNC_ENDPOINT  = KOBJECT_ENDPOINT;
   28a40:	00000007 	andeq	r0, r0, r7
   28a44:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28990 <seL4_AsyncEndpointObject+0x3e4>
   28a48:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   28a4c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28a50:	2f676e6f 	svccs	0x00676e6f
   28a54:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28a58:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28a5c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28a60:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   28a64:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   28a68:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   28a6c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28a70:	6f72702f 	svcvs	0x0072702f
   28a74:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28a78:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   28a7c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   28a80:	2f736269 	svccs	0x00736269
   28a84:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   28a88:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   28a8c:	692f616b 	stmdbvs	pc!, {r0, r1, r3, r5, r6, r8, sp, lr}	; <UNPREDICTABLE>
   28a90:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
   28a94:	762f6564 	strtvc	r6, [pc], -r4, ror #10
   28a98:	6f2f616b 	svcvs	0x002f616b
   28a9c:	63656a62 	cmnvs	r5, #401408	; 0x62000
   28aa0:	00682e74 	rsbeq	r2, r8, r4, ror lr
   28aa4:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
   28aa8:	206e776f 	rsbcs	r7, lr, pc, ror #14
   28aac:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
   28ab0:	74207463 	strtvc	r7, [r0], #-1123	; 0xfffffb9d
   28ab4:	3a657079 	bcc	1984ca0 <__bss_end__+0x183bc58>
   28ab8:	646c2520 	strbtvs	r2, [ip], #-1312	; 0xfffffae0
   28abc:	00000000 	andeq	r0, r0, r0
   28ac0:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28ac4:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28ac8:	6c61206f 	stclvs	0, cr2, [r1], #-444	; 0xfffffe44
   28acc:	61636f6c 	cmnvs	r3, ip, ror #30
   28ad0:	63206574 			; <UNDEFINED> instruction: 0x63206574
   28ad4:	746f6c73 	strbtvc	r6, [pc], #-3187	; 28adc <KOBJECT_SYNC_ENDPOINT+0x9c>
   28ad8:	7265203a 	rsbvc	r2, r5, #58	; 0x3a
   28adc:	20726f72 	rsbscs	r6, r2, r2, ror pc
   28ae0:	00006425 	andeq	r6, r0, r5, lsr #8
   28ae4:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28ae8:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28aec:	6c61206f 	stclvs	0, cr2, [r1], #-444	; 0xfffffe44
   28af0:	61636f6c 	cmnvs	r3, ip, ror #30
   28af4:	6f206574 	svcvs	0x00206574
   28af8:	63656a62 	cmnvs	r5, #401408	; 0x62000
   28afc:	666f2074 			; <UNDEFINED> instruction: 0x666f2074
   28b00:	7a697320 	bvc	1a85788 <__bss_end__+0x193c740>
   28b04:	6c252065 	stcvs	0, cr2, [r5], #-404	; 0xfffffe6c
   28b08:	65202c75 	strvs	r2, [r0, #-3189]!	; 0xfffff38b
   28b0c:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
   28b10:	00642520 	rsbeq	r2, r4, r0, lsr #10
   28b14:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28b18:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28b1c:	6c61206f 	stclvs	0, cr2, [r1], #-444	; 0xfffffe44
   28b20:	61636f6c 	cmnvs	r3, ip, ror #30
   28b24:	6f206574 	svcvs	0x00206574
   28b28:	63656a62 	cmnvs	r5, #401408	; 0x62000
   28b2c:	666f2074 			; <UNDEFINED> instruction: 0x666f2074
   28b30:	7a697320 	bvc	1a857b8 <__bss_end__+0x193c770>
   28b34:	6c252065 	stcvs	0, cr2, [r5], #-404	; 0xfffffe6c
   28b38:	74612075 	strbtvc	r2, [r1], #-117	; 0xffffff8b
   28b3c:	64617020 	strbtvs	r7, [r1], #-32	; 0xffffffe0
   28b40:	25207264 	strcs	r7, [r0, #-612]!	; 0xfffffd9c
   28b44:	65202c70 	strvs	r2, [r0, #-3184]!	; 0xfffff390
   28b48:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
   28b4c:	00642520 	rsbeq	r2, r4, r0, lsr #10
   28b50:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28b54:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28b58:	7263206f 	rsbvc	r2, r3, #111	; 0x6f
   28b5c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
   28b60:	70736320 	rsbsvc	r6, r3, r0, lsr #6
   28b64:	20656361 	rsbcs	r6, r5, r1, ror #6
   28b68:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
   28b6c:	206f7420 	rsbcs	r7, pc, r0, lsr #8
   28b70:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
   28b74:	00007463 	andeq	r7, r0, r3, ror #8

00028b78 <sel4_page_sizes>:
   28b78:	0000000c 	andeq	r0, r0, ip
   28b7c:	00000010 	andeq	r0, r0, r0, lsl r0
   28b80:	00000014 	andeq	r0, r0, r4, lsl r0
   28b84:	00000018 	andeq	r0, r0, r8, lsl r0
   28b88:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28ad4 <KOBJECT_SYNC_ENDPOINT+0x94>
   28b8c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   28b90:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28b94:	2f676e6f 	svccs	0x00676e6f
   28b98:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28b9c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28ba0:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28ba4:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   28ba8:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   28bac:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   28bb0:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28bb4:	6f72702f 	svcvs	0x0072702f
   28bb8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28bbc:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   28bc0:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   28bc4:	2f736269 	svccs	0x00736269
   28bc8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   28bcc:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   28bd0:	63617073 	cmnvs	r1, #115	; 0x73
   28bd4:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
   28bd8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
   28bdc:	73762f65 	cmnvc	r6, #404	; 0x194
   28be0:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
   28be4:	6761702f 	strbvs	r7, [r1, -pc, lsr #32]!
   28be8:	00682e65 	rsbeq	r2, r8, r5, ror #28
   28bec:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28bf0:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
   28bf4:	69735f65 	ldmdbvs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
   28bf8:	5b73657a 	blpl	1d021e8 <__bss_end__+0x1bb91a0>
   28bfc:	202d2069 	eorcs	r2, sp, r9, rrx
   28c00:	3c205d31 	stccc	13, cr5, [r0], #-196	; 0xffffff3c
   28c04:	6c657320 	stclvs	3, cr7, [r5], #-128	; 0xffffff80
   28c08:	61705f34 	cmnvs	r0, r4, lsr pc
   28c0c:	735f6567 	cmpvc	pc, #432013312	; 0x19c00000
   28c10:	73657a69 	cmnvc	r5, #430080	; 0x69000
   28c14:	005d695b 	subseq	r6, sp, fp, asr r9
   28c18:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28b64 <KOBJECT_SYNC_ENDPOINT+0x124>
   28c1c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   28c20:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28c24:	2f676e6f 	svccs	0x00676e6f
   28c28:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28c2c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28c30:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28c34:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   28c38:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   28c3c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   28c40:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28c44:	6f72702f 	svcvs	0x0072702f
   28c48:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28c4c:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   28c50:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   28c54:	2f736269 	svccs	0x00736269
   28c58:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   28c5c:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
   28c60:	63617073 	cmnvs	r1, #115	; 0x73
   28c64:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
   28c68:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
   28c6c:	73762f65 	cmnvc	r6, #404	; 0x194
   28c70:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
   28c74:	7073762f 	rsbsvc	r7, r3, pc, lsr #12
   28c78:	2e656361 	cdpcs	3, 6, cr6, cr5, cr1, {3}
   28c7c:	00000068 	andeq	r0, r0, r8, rrx
   28c80:	61707376 	cmnvs	r0, r6, ror r3
   28c84:	69206563 	stmdbvs	r0!, {r0, r1, r5, r6, r8, sl, sp, lr}
   28c88:	554e2073 	strbpl	r2, [lr, #-115]	; 0xffffff8d
   28c8c:	002e4c4c 	eoreq	r4, lr, ip, asr #24
   28c90:	70707553 	rsbsvc	r7, r0, r3, asr r5
   28c94:	6465696c 	strbtvs	r6, [r5], #-2412	; 0xfffff694
   28c98:	70737620 	rsbsvc	r7, r3, r0, lsr #12
   28c9c:	20656361 	rsbcs	r6, r5, r1, ror #6
   28ca0:	73656f64 	cmnvc	r5, #100, 30	; 0x190
   28ca4:	2074276e 	rsbscs	r2, r4, lr, ror #14
   28ca8:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   28cac:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
   28cb0:	616d2074 	smcvs	53764	; 0xd204
   28cb4:	61705f70 	cmnvs	r0, r0, ror pc
   28cb8:	28736567 	ldmdacs	r3!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
   28cbc:	00002e29 	andeq	r2, r0, r9, lsr #28
   28cc0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
   28cc4:	77206465 	strvc	r6, [r0, -r5, ror #8]!
   28cc8:	20687469 	rsbcs	r7, r8, r9, ror #8
   28ccc:	5f6d756e 	svcpl	0x006d756e
   28cd0:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
   28cd4:	3d3d2073 	ldccc	0, cr2, [sp, #-460]!	; 0xfffffe34
   28cd8:	202e3020 	eorcs	r3, lr, r0, lsr #32
   28cdc:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
   28ce0:	6f69746e 	svcvs	0x0069746e
   28ce4:	3f6c616e 	svccc	0x006c616e
   28ce8:	00000000 	andeq	r0, r0, r0
   28cec:	61766e49 	cmnvs	r6, r9, asr #28
   28cf0:	2064696c 	rsbcs	r6, r4, ip, ror #18
   28cf4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
   28cf8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
   28cfc:	7a252073 	bvc	970ed0 <__bss_end__+0x827e88>
   28d00:	00000075 	andeq	r0, r0, r5, ror r0
   28d04:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28c50 <sel4_page_sizes+0xd8>
   28d08:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   28d0c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28d10:	2f676e6f 	svccs	0x00676e6f
   28d14:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28d18:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28d1c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28d20:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   28d24:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   28d28:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   28d2c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28d30:	6f72702f 	svcvs	0x0072702f
   28d34:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28d38:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   28d3c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   28d40:	2f736269 	svccs	0x00736269
   28d44:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   28d48:	70346c65 	eorsvc	r6, r4, r5, ror #24
   28d4c:	7374616c 	cmnvc	r4, #108, 2
   28d50:	6f707075 	svcvs	0x00707075
   28d54:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   28d58:	642f6372 	strtvs	r6, [pc], #-882	; 28d60 <sel4_page_sizes+0x1e8>
   28d5c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   28d60:	00632e65 	rsbeq	r2, r3, r5, ror #28
   28d64:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28d68:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28d6c:	6c61206f 	stclvs	0, cr2, [r1], #-444	; 0xfffffe44
   28d70:	61636f6c 	cmnvs	r3, ip, ror #30
   28d74:	63206574 			; <UNDEFINED> instruction: 0x63206574
   28d78:	746f6c73 	strbtvc	r6, [pc], #-3187	; 28d80 <sel4_page_sizes+0x208>
   28d7c:	726f6620 	rsbvc	r6, pc, #32, 12	; 0x2000000
   28d80:	71726920 	cmnvc	r2, r0, lsr #18
   28d84:	00000000 	andeq	r0, r0, r0
   28d88:	2d717269 	lfmcs	f7, 2, [r1, #-420]!	; 0xfffffe5c
   28d8c:	7079743e 	rsbsvc	r7, r9, lr, lsr r4
   28d90:	3d212065 	stccc	0, cr2, [r1, #-404]!	; 0xfffffe6c
   28d94:	5f535020 	svcpl	0x00535020
   28d98:	454e4f4e 	strbmi	r4, [lr, #-3918]	; 0xfffff0b2
   28d9c:	00000000 	andeq	r0, r0, r0
   28da0:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28da4:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28da8:	6567206f 	strbvs	r2, [r7, #-111]!	; 0xffffff91
   28dac:	61632074 	smcvs	12804	; 0x3204
   28db0:	6f662070 	svcvs	0x00662070
   28db4:	72692072 	rsbvc	r2, r9, #114	; 0x72
   28db8:	00000071 	andeq	r0, r0, r1, ror r0
   28dbc:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28dc0:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28dc4:	6966206f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, sp}^
   28dc8:	6620646e 	strtvs	r6, [r0], -lr, ror #8
   28dcc:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
   28dd0:	20746120 	rsbscs	r6, r4, r0, lsr #2
   28dd4:	64646170 	strbtvs	r6, [r4], #-368	; 0xfffffe90
   28dd8:	70252072 	eorvc	r2, r5, r2, ror r0
   28ddc:	00000000 	andeq	r0, r0, r0
   28de0:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
   28de4:	74206465 	strtvc	r6, [r0], #-1125	; 0xfffffb9b
   28de8:	616d206f 	cmnvs	sp, pc, rrx
   28dec:	72662070 	rsbvc	r2, r6, #112	; 0x70
   28df0:	20656d61 	rsbcs	r6, r5, r1, ror #26
   28df4:	70207461 	eorvc	r7, r0, r1, ror #8
   28df8:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
   28dfc:	00702520 	rsbseq	r2, r0, r0, lsr #10

00028e00 <__func__.11173>:
   28e00:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28e04:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
   28e08:	70707573 	rsbsvc	r7, r0, r3, ror r5
   28e0c:	5f74726f 	svcpl	0x0074726f
   28e10:	79706f63 	ldmdbvc	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, sp, lr}^
   28e14:	7172695f 	cmnvc	r2, pc, asr r9
   28e18:	7061635f 	rsbvc	r6, r1, pc, asr r3
   28e1c:	00000000 	andeq	r0, r0, r0

00028e20 <__func__.9019>:
   28e20:	5f616b76 	svcpl	0x00616b76
   28e24:	61707363 	cmnvs	r0, r3, ror #6
   28e28:	615f6563 	cmpvs	pc, r3, ror #10
   28e2c:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
   28e30:	00000000 	andeq	r0, r0, r0

00028e34 <__func__.9025>:
   28e34:	5f616b76 	svcpl	0x00616b76
   28e38:	61707363 	cmnvs	r0, r3, ror #6
   28e3c:	6d5f6563 	cfldr64vs	mvdx6, [pc, #-396]	; 28cb8 <sel4_page_sizes+0x140>
   28e40:	5f656b61 	svcpl	0x00656b61
   28e44:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
   28e48:	00000000 	andeq	r0, r0, r0

00028e4c <__func__.8827>:
   28e4c:	706d6973 	rsbvc	r6, sp, r3, ror r9
   28e50:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
   28e54:	495f7465 	ldmdbmi	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
   28e58:	685f5152 	ldmdavs	pc, {r1, r4, r6, r8, ip, lr}^	; <UNPREDICTABLE>
   28e5c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
   28e60:	00007265 	andeq	r7, r0, r5, ror #4

00028e64 <__FUNCTION__.8828>:
   28e64:	706d6973 	rsbvc	r6, sp, r3, ror r9
   28e68:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
   28e6c:	495f7465 	ldmdbmi	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
   28e70:	685f5152 	ldmdavs	pc, {r1, r4, r6, r8, ip, lr}^	; <UNPREDICTABLE>
   28e74:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
   28e78:	00007265 	andeq	r7, r0, r5, ror #4

00028e7c <__func__.9036>:
   28e7c:	5f616b76 	svcpl	0x00616b76
   28e80:	61707363 	cmnvs	r0, r3, ror #6
   28e84:	665f6563 	ldrbvs	r6, [pc], -r3, ror #10
   28e88:	00656572 	rsbeq	r6, r5, r2, ror r5

00028e8c <__func__.11181>:
   28e8c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28e90:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
   28e94:	70707573 	rsbsvc	r7, r0, r3, ror r5
   28e98:	5f74726f 	svcpl	0x0074726f
   28e9c:	6f6c6c61 	svcvs	0x006c6c61
   28ea0:	72665f63 	rsbvc	r5, r6, #396	; 0x18c
   28ea4:	5f656d61 	svcpl	0x00656d61
   28ea8:	00007461 	andeq	r7, r0, r1, ror #8

00028eac <__func__.10186>:
   28eac:	5f6d7261 	svcpl	0x006d7261
   28eb0:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
   28eb4:	626f6b5f 	rsbvs	r6, pc, #97280	; 0x17c00
   28eb8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28ebc:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
   28ec0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
   28ec4:	00000065 	andeq	r0, r0, r5, rrx

00028ec8 <__func__.10428>:
   28ec8:	5f616b76 	svcpl	0x00616b76
   28ecc:	6f6c6c61 	svcvs	0x006c6c61
   28ed0:	626f5f63 	rsbvs	r5, pc, #396	; 0x18c
   28ed4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   28ed8:	5f74615f 	svcpl	0x0074615f
   28edc:	6279616d 	rsbsvs	r6, r9, #1073741851	; 0x4000001b
   28ee0:	65645f65 	strbvs	r5, [r4, #-3941]!	; 0xfffff09b
   28ee4:	00000076 	andeq	r0, r0, r6, ror r0

00028ee8 <__func__.9057>:
   28ee8:	5f616b76 	svcpl	0x00616b76
   28eec:	70737475 	rsbsvc	r7, r3, r5, ror r4
   28ef0:	5f656361 	svcpl	0x00656361
   28ef4:	6f6c6c61 	svcvs	0x006c6c61
   28ef8:	616d5f63 	cmnvs	sp, r3, ror #30
   28efc:	5f656279 	svcpl	0x00656279
   28f00:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   28f04:	00006563 	andeq	r6, r0, r3, ror #10

00028f08 <__func__.9066>:
   28f08:	5f616b76 	svcpl	0x00616b76
   28f0c:	70737475 	rsbsvc	r7, r3, r5, ror r4
   28f10:	5f656361 	svcpl	0x00656361
   28f14:	6f6c6c61 	svcvs	0x006c6c61
   28f18:	74615f63 	strbtvc	r5, [r1], #-3939	; 0xfffff09d
   28f1c:	00000000 	andeq	r0, r0, r0

00028f20 <__func__.11191>:
   28f20:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28f24:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
   28f28:	70707573 	rsbsvc	r7, r0, r3, ror r5
   28f2c:	5f74726f 	svcpl	0x0074726f
   28f30:	5f70616d 	svcpl	0x0070616d
   28f34:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
   28f38:	74615f65 	strbtvc	r5, [r1], #-3941	; 0xfffff09b
   28f3c:	00000000 	andeq	r0, r0, r0

00028f40 <__func__.6484>:
   28f40:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
   28f44:	7061435f 	rsbvc	r4, r1, pc, asr r3
   28f48:	68676952 	stmdavs	r7!, {r1, r4, r6, r8, fp, sp, lr}^
   28f4c:	6e5f7374 	mrcvs	3, 2, r7, cr15, cr4, {3}
   28f50:	00007765 	andeq	r7, r0, r5, ror #14

00028f54 <__func__.10864>:
   28f54:	61707376 	cmnvs	r0, r6, ror r3
   28f58:	6d5f6563 	cfldr64vs	mvdx6, [pc, #-396]	; 28dd4 <sel4_page_sizes+0x25c>
   28f5c:	705f7061 	subsvc	r7, pc, r1, rrx
   28f60:	73656761 	cmnvc	r5, #25427968	; 0x1840000
   28f64:	00000000 	andeq	r0, r0, r0

00028f68 <__func__.10654>:
   28f68:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28f6c:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
   28f70:	735f6469 	cmpvc	pc, #1761607680	; 0x69000000
   28f74:	5f657a69 	svcpl	0x00657a69
   28f78:	73746962 	cmnvc	r4, #1605632	; 0x188000
   28f7c:	00000000 	andeq	r0, r0, r0

00028f80 <__func__.10459>:
   28f80:	5f616b76 	svcpl	0x00616b76
   28f84:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
   28f88:	6a626f5f 	bvs	18c4d0c <__bss_end__+0x177bcc4>
   28f8c:	00746365 	rsbseq	r6, r4, r5, ror #6

00028f90 <__func__.6575>:
   28f90:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
   28f94:	73654d5f 	cmnvc	r5, #6080	; 0x17c0
   28f98:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
   28f9c:	6f666e49 	svcvs	0x00666e49
   28fa0:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
   28fa4:	00000000 	andeq	r0, r0, r0

00028fa8 <__func__.9073>:
   28fa8:	5f616b76 	svcpl	0x00616b76
   28fac:	70737475 	rsbsvc	r7, r3, r5, ror r4
   28fb0:	5f656361 	svcpl	0x00656361
   28fb4:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
   28fb8:	00000000 	andeq	r0, r0, r0

00028fbc <seL4_AsyncEndpointObject>:
   28fbc:	00000003 	andeq	r0, r0, r3

00028fc0 <KOBJECT_ASYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_NOTIFICATION") static const kobject_t KOBJECT_ASYNC_ENDPOINT = KOBJECT_NOTIFICATION;
   28fc0:	00000008 	andeq	r0, r0, r8

00028fc4 <KOBJECT_SYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_ENDPOINT") static const kobject_t KOBJECT_SYNC_ENDPOINT  = KOBJECT_ENDPOINT;
   28fc4:	00000007 	andeq	r0, r0, r7

00028fc8 <seL4_AsyncEndpointObject>:
   28fc8:	00000003 	andeq	r0, r0, r3
   28fcc:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28f18 <__func__.9066+0x10>
   28fd0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   28fd4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   28fd8:	2f676e6f 	svccs	0x00676e6f
   28fdc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   28fe0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   28fe4:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   28fe8:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   28fec:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   28ff0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   28ff4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   28ff8:	6f72702f 	svcvs	0x0072702f
   28ffc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29000:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   29004:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   29008:	2f736269 	svccs	0x00736269
   2900c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   29010:	73346c65 	teqvc	r4, #25856	; 0x6500
   29014:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   29018:	72612f65 	rsbvc	r2, r1, #404	; 0x194
   2901c:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
   29020:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
   29024:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
   29028:	732f6d72 			; <UNDEFINED> instruction: 0x732f6d72
   2902c:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   29030:	72612f65 	rsbvc	r2, r1, #404	; 0x194
   29034:	732f6863 			; <UNDEFINED> instruction: 0x732f6863
   29038:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   2903c:	00682e65 	rsbeq	r2, r8, r5, ror #28
   29040:	706d6953 	rsbvc	r6, sp, r3, asr r9
   29044:	6920656c 	stmdbvs	r0!, {r2, r3, r5, r6, r8, sl, sp, lr}
   29048:	554e2073 	strbpl	r2, [lr, #-115]	; 0xffffff8d
   2904c:	00004c4c 	andeq	r4, r0, ip, asr #24
   29050:	20746f4e 	rsbscs	r6, r4, lr, asr #30
   29054:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
   29058:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
   2905c:	00646574 	rsbeq	r6, r4, r4, ror r5

00029060 <KOBJECT_ASYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_NOTIFICATION") static const kobject_t KOBJECT_ASYNC_ENDPOINT = KOBJECT_NOTIFICATION;
   29060:	00000008 	andeq	r0, r0, r8

00029064 <KOBJECT_SYNC_ENDPOINT>:
DEPRECATED("Use KOBJECT_ENDPOINT") static const kobject_t KOBJECT_SYNC_ENDPOINT  = KOBJECT_ENDPOINT;
   29064:	00000007 	andeq	r0, r0, r7

00029068 <sel4_page_sizes>:
   29068:	0000000c 	andeq	r0, r0, ip
   2906c:	00000010 	andeq	r0, r0, r0, lsl r0
   29070:	00000014 	andeq	r0, r0, r4, lsl r0
   29074:	00000018 	andeq	r0, r0, r8, lsl r0
   29078:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 28fc4 <KOBJECT_SYNC_ENDPOINT>
   2907c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   29080:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   29084:	2f676e6f 	svccs	0x00676e6f
   29088:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   2908c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   29090:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   29094:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29098:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   2909c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   290a0:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   290a4:	6f72702f 	svcvs	0x0072702f
   290a8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   290ac:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
   290b0:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
   290b4:	2f736269 	svccs	0x00736269
   290b8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
   290bc:	70346c65 	eorsvc	r6, r4, r5, ror #24
   290c0:	7374616c 	cmnvc	r4, #108, 2
   290c4:	6f707075 	svcvs	0x00707075
   290c8:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   290cc:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   290d0:	2f686372 	svccs	0x00686372
   290d4:	2f6d7261 	svccs	0x006d7261
   290d8:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   290dc:	632e6563 			; <UNDEFINED> instruction: 0x632e6563
   290e0:	00000000 	andeq	r0, r0, r0
   290e4:	6e6b6e75 	mcrvs	14, 3, r6, cr11, cr5, {3}
   290e8:	206e776f 	rsbcs	r7, lr, pc, ror #14
   290ec:	20717269 	rsbscs	r7, r1, r9, ror #4
   290f0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
   290f4:	00000000 	andeq	r0, r0, r0

000290f8 <__func__.11008>:
   290f8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   290fc:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
   29100:	70707573 	rsbsvc	r7, r0, r3, ror r5
   29104:	5f74726f 	svcpl	0x0074726f
   29108:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
   2910c:	706f635f 	rsbvc	r6, pc, pc, asr r3	; <UNPREDICTABLE>
   29110:	72695f79 	rsbvc	r5, r9, #484	; 0x1e4
   29114:	61635f71 	smcvs	13809	; 0x35f1
   29118:	00000070 	andeq	r0, r0, r0, ror r0

0002911c <__func__.8705>:
   2911c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
   29120:	6d69735f 	stclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
   29124:	5f656c70 	svcpl	0x00656c70
   29128:	5f746567 	svcpl	0x00746567
   2912c:	5f515249 	svcpl	0x00515249
   29130:	67697274 			; <UNDEFINED> instruction: 0x67697274
   29134:	00726567 	rsbseq	r6, r2, r7, ror #10

00029138 <__func__.8713>:
   29138:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
   2913c:	6d69735f 	stclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
   29140:	5f656c70 	svcpl	0x00656c70
   29144:	5f746567 	svcpl	0x00746567
   29148:	5f515249 	svcpl	0x00515249
   2914c:	67697274 			; <UNDEFINED> instruction: 0x67697274
   29150:	5f726567 	svcpl	0x00726567
   29154:	00757063 	rsbseq	r7, r5, r3, rrx

00029158 <uart0_irqs>:
static const int uart0_irqs[] = {UART0_IRQ, -1};
   29158:	0000003b 	andeq	r0, r0, fp, lsr r0
   2915c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00029160 <uart1_irqs>:
static const int uart1_irqs[] = {UART1_IRQ, -1};
   29160:	00000052 	andeq	r0, r0, r2, asr r0
   29164:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00029168 <dev_defn>:
static const struct dev_defn dev_defn[] = {
   29168:	00000000 	andeq	r0, r0, r0
   2916c:	e0000000 	and	r0, r0, r0
   29170:	00001000 	andeq	r1, r0, r0
   29174:	00029158 	andeq	r9, r2, r8, asr r1
   29178:	000195a8 	andeq	r9, r1, r8, lsr #11
   2917c:	00000001 	andeq	r0, r0, r1
   29180:	e0001000 	and	r1, r0, r0
   29184:	00001000 	andeq	r1, r0, r0
   29188:	00029160 	andeq	r9, r2, r0, ror #2
   2918c:	000195a8 	andeq	r9, r1, r8, lsr #11
   29190:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 290dc <sel4_page_sizes+0x74>
   29194:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   29198:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   2919c:	2f676e6f 	svccs	0x00676e6f
   291a0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   291a4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   291a8:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   291ac:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   291b0:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   291b4:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   291b8:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   291bc:	6f72702f 	svcvs	0x0072702f
   291c0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   291c4:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   291c8:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   291cc:	2f736269 	svccs	0x00736269
   291d0:	7062696c 	rsbvc	r6, r2, ip, ror #18
   291d4:	7374616c 	cmnvc	r4, #108, 2
   291d8:	6f707075 	svcvs	0x00707075
   291dc:	692f7472 	stmdbvs	pc!, {r1, r4, r5, r6, sl, ip, sp, lr}	; <UNPREDICTABLE>
   291e0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
   291e4:	702f6564 	eorvc	r6, pc, r4, ror #10
   291e8:	7374616c 	cmnvc	r4, #108, 2
   291ec:	6f707075 	svcvs	0x00707075
   291f0:	692f7472 	stmdbvs	pc!, {r1, r4, r5, r6, sl, ip, sp, lr}	; <UNPREDICTABLE>
   291f4:	00682e6f 	rsbeq	r2, r8, pc, ror #28
   291f8:	6d5f6f69 	ldclvs	15, cr6, [pc, #-420]	; 2905c <seL4_AsyncEndpointObject+0x94>
   291fc:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
   29200:	00000072 	andeq	r0, r0, r2, ror r0
   29204:	6d5f6f69 	ldclvs	15, cr6, [pc, #-420]	; 29068 <sel4_page_sizes>
   29208:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
   2920c:	693e2d72 	ldmdbvs	lr!, {r1, r4, r5, r6, r8, sl, fp, sp}
   29210:	616d5f6f 	cmnvs	sp, pc, ror #30
   29214:	6e665f70 	mcrvs	15, 3, r5, cr6, cr0, {3}
   29218:	00000000 	andeq	r0, r0, r0
   2921c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 29168 <dev_defn>
   29220:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   29224:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   29228:	2f676e6f 	svccs	0x00676e6f
   2922c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   29230:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   29234:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   29238:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   2923c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   29240:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   29244:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   29248:	6f72702f 	svcvs	0x0072702f
   2924c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29250:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   29254:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   29258:	2f736269 	svccs	0x00736269
   2925c:	7062696c 	rsbvc	r6, r2, ip, ror #18
   29260:	7374616c 	cmnvc	r4, #108, 2
   29264:	6f707075 	svcvs	0x00707075
   29268:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   2926c:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 290ac <sel4_page_sizes+0x44>
   29270:	2f686361 	svccs	0x00686361
   29274:	716e797a 	smcvc	59290	; 0xe79a
   29278:	7265732f 	rsbvc	r7, r5, #-1140850688	; 0xbc000000
   2927c:	2e6c6169 	powcsez	f6, f4, #1.0
   29280:	00000063 	andeq	r0, r0, r3, rrx
   29284:	76696472 			; <UNDEFINED> instruction: 0x76696472
   29288:	3d212038 	stccc	0, cr2, [r1, #-224]!	; 0xffffff20
   2928c:	4c554e20 	mrrcmi	14, 2, r4, r5, cr0
   29290:	0000004c 	andeq	r0, r0, ip, asr #32
   29294:	20646372 	rsbcs	r6, r4, r2, ror r3
   29298:	4e203d21 	cdpmi	13, 2, cr3, cr0, cr1, {1}
   2929c:	004c4c55 	subeq	r4, ip, r5, asr ip
   292a0:	69646272 	stmdbvs	r4!, {r1, r4, r5, r6, r9, sp, lr}^
   292a4:	3d212076 	stccc	0, cr2, [r1, #-472]!	; 0xfffffe28
   292a8:	4c554e20 	mrrcmi	14, 2, r4, r5, cr0
   292ac:	0000004c 	andeq	r0, r0, ip, asr #32
   292b0:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
   292b4:	203d2120 	eorscs	r2, sp, r0, lsr #2
   292b8:	00766564 	rsbseq	r6, r6, r4, ror #10
   292bc:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
   292c0:	203d2120 	eorscs	r2, sp, r0, lsr #2
   292c4:	64646176 	strbtvs	r6, [r4], #-374	; 0xfffffe8a
   292c8:	00000072 	andeq	r0, r0, r2, ror r0
   292cc:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
   292d0:	203d2120 	eorscs	r2, sp, r0, lsr #2
   292d4:	0073706f 	rsbseq	r7, r3, pc, rrx
   292d8:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
   292dc:	203d2120 	eorscs	r2, sp, r0, lsr #2
   292e0:	6e666564 	cdpvs	5, 6, cr6, cr6, cr4, {3}
   292e4:	00000000 	andeq	r0, r0, r0

000292e8 <__func__.7665>:
   292e8:	716e797a 	smcvc	59290	; 0xe79a
   292ec:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
   292f0:	61635f74 	smcvs	13812	; 0x35f4
   292f4:	625f636c 	subsvs	r6, pc, #108, 6	; 0xb0000001
   292f8:	5f647561 	svcpl	0x00647561
   292fc:	73766964 	cmnvc	r6, #100, 18	; 0x190000
   29300:	00000000 	andeq	r0, r0, r0

00029304 <__func__.7703>:
   29304:	716e797a 	smcvc	59290	; 0xe79a
   29308:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
   2930c:	65645f74 	strbvs	r5, [r4, #-3956]!	; 0xfffff08c
   29310:	6e695f76 	mcrvs	15, 3, r5, cr9, cr6, {3}
   29314:	00007469 	andeq	r7, r0, r9, ror #8

00029318 <__func__.7713>:
   29318:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
   2931c:	6174735f 	cmnvs	r4, pc, asr r3
   29320:	5f636974 	svcpl	0x00636974
   29324:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
   29328:	00000000 	andeq	r0, r0, r0

0002932c <__func__.7719>:
   2932c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
   29330:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
   29334:	00000074 	andeq	r0, r0, r4, ror r0

00029338 <__func__.7083>:
   29338:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
   2933c:	616d5f6f 	cmnvs	sp, pc, ror #30
   29340:	00000070 	andeq	r0, r0, r0, ror r0
   29344:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 29290 <dev_defn+0x128>
   29348:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   2934c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   29350:	2f676e6f 	svccs	0x00676e6f
   29354:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   29358:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   2935c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   29360:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29364:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   29368:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2936c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   29370:	6f72702f 	svcvs	0x0072702f
   29374:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29378:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   2937c:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   29380:	2f736269 	svccs	0x00736269
   29384:	7062696c 	rsbvc	r6, r2, ip, ror #18
   29388:	7374616c 	cmnvc	r4, #108, 2
   2938c:	6f707075 	svcvs	0x00707075
   29390:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   29394:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   29398:	2f686372 	svccs	0x00686372
   2939c:	2f6d7261 	svccs	0x006d7261
   293a0:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
   293a4:	2f706968 	svccs	0x00706968
   293a8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
   293ac:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
   293b0:	7172692f 	cmnvc	r2, pc, lsr #18
   293b4:	70696863 	rsbvc	r6, r9, r3, ror #16
   293b8:	0000682e 	andeq	r6, r0, lr, lsr #16
   293bc:	5f736921 	svcpl	0x00736921
   293c0:	65747865 	ldrbvs	r7, [r4, #-2149]!	; 0xfffff79b
   293c4:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
   293c8:	207c7c20 	rsbscs	r7, ip, r0, lsr #24
   293cc:	6f727021 	svcvs	0x00727021
   293d0:	656c5f70 	strbvs	r5, [ip, #-3952]!	; 0xfffff090
   293d4:	0000006e 	andeq	r0, r0, lr, rrx
   293d8:	6e6f435b 	mcrvs	3, 3, r4, cr15, cr11, {2}
   293dc:	61662064 	cmnvs	r6, r4, rrx
   293e0:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   293e4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
   293e8:	52090a5d 	andpl	r0, r9, #380928	; 0x5d000
   293ec:	61207465 			; <UNDEFINED> instruction: 0x61207465
   293f0:	20736772 	rsbscs	r6, r3, r2, ror r7
   293f4:	20657261 	rsbcs	r7, r5, r1, ror #4
   293f8:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
   293fc:	00000021 	andeq	r0, r0, r1, lsr #32
   29400:	6e752221 	cdpvs	2, 7, cr2, cr5, cr1, {1}
   29404:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
   29408:	6c626168 	stfvse	f6, [r2], #-416	; 0xfffffe60
   2940c:	00002265 	andeq	r2, r0, r5, ror #4
   29410:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29414:	70757272 	rsbsvc	r7, r5, r2, ror r2
   29418:	652d7374 	strvs	r7, [sp, #-884]!	; 0xfffffc8c
   2941c:	6e657478 	mcrvs	4, 3, r7, cr5, cr8, {3}
   29420:	00646564 	rsbeq	r6, r4, r4, ror #10
   29424:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29428:	70757272 	rsbsvc	r7, r5, r2, ror r2
   2942c:	00007374 	andeq	r7, r0, r4, ror r3
   29430:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2937c <__func__.7083+0x44>
   29434:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   29438:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   2943c:	2f676e6f 	svccs	0x00676e6f
   29440:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   29444:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   29448:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   2944c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29450:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   29454:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   29458:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   2945c:	6f72702f 	svcvs	0x0072702f
   29460:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29464:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   29468:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   2946c:	2f736269 	svccs	0x00736269
   29470:	7062696c 	rsbvc	r6, r2, ip, ror #18
   29474:	7374616c 	cmnvc	r4, #108, 2
   29478:	6f707075 	svcvs	0x00707075
   2947c:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   29480:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   29484:	2f686372 	svccs	0x00686372
   29488:	2f6d7261 	svccs	0x006d7261
   2948c:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
   29490:	2f706968 	svccs	0x00706968
   29494:	2e636967 	vnmulcs.f16	s13, s6, s15	; <UNPREDICTABLE>
   29498:	00000063 	andeq	r0, r0, r3, rrx
   2949c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   294a0:	70757272 	rsbsvc	r7, r5, r2, ror r2
   294a4:	705f7374 	subsvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
   294a8:	20706f72 	rsbscs	r6, r0, r2, ror pc
   294ac:	4e203d21 	cdpmi	13, 2, cr3, cr0, cr1, {1}
   294b0:	004c4c55 	subeq	r4, ip, r5, asr ip
   294b4:	61746f74 	cmnvs	r4, r4, ror pc
   294b8:	65635f6c 	strbvs	r5, [r3, #-3948]!	; 0xfffff094
   294bc:	20736c6c 	rsbscs	r6, r3, ip, ror #24
   294c0:	74732025 	ldrbtvc	r2, [r3], #-37	; 0xffffffdb
   294c4:	65646972 	strbvs	r6, [r4, #-2418]!	; 0xfffff68e
   294c8:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   294cc:	00000030 	andeq	r0, r0, r0, lsr r0
   294d0:	2c6d7261 	sfmcs	f7, 2, [sp], #-388	; 0xfffffe7c
   294d4:	2d636967 			; <UNDEFINED> instruction: 0x2d636967
   294d8:	00303034 	eorseq	r3, r0, r4, lsr r0
   294dc:	2c6d7261 	sfmcs	f7, 2, [sp], #-388	; 0xfffffe7c
   294e0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
   294e4:	612d7865 			; <UNDEFINED> instruction: 0x612d7865
   294e8:	69672d39 	stmdbvs	r7!, {r0, r3, r4, r5, r8, sl, fp, sp}^
   294ec:	00000063 	andeq	r0, r0, r3, rrx
   294f0:	2c6d7261 	sfmcs	f7, 2, [sp], #-388	; 0xfffffe7c
   294f4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
   294f8:	612d7865 			; <UNDEFINED> instruction: 0x612d7865
   294fc:	672d3531 			; <UNDEFINED> instruction: 0x672d3531
   29500:	00006369 	andeq	r6, r0, r9, ror #6

00029504 <__func__.8069>:
   29504:	73726170 	cmnvc	r2, #112, 2
   29508:	72615f65 	rsbvc	r5, r1, #404	; 0x194
   2950c:	69675f6d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
   29510:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
   29514:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
   29518:	73747075 	cmnvc	r4, #117	; 0x75
   2951c:	00000000 	andeq	r0, r0, r0

00029520 <__func__.8048>:
   29520:	5f746567 	svcpl	0x00746567
   29524:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29528:	70757272 	rsbsvc	r7, r5, r2, ror r2
   2952c:	705f7374 	subsvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
   29530:	00706f72 	rsbseq	r6, r0, r2, ror pc
   29534:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 29480 <__func__.7083+0x148>
   29538:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   2953c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   29540:	2f676e6f 	svccs	0x00676e6f
   29544:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   29548:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   2954c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   29550:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29554:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   29558:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2955c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   29560:	6f72702f 	svcvs	0x0072702f
   29564:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29568:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   2956c:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   29570:	2f736269 	svccs	0x00736269
   29574:	7062696c 	rsbvc	r6, r2, ip, ror #18
   29578:	7374616c 	cmnvc	r4, #108, 2
   2957c:	6f707075 	svcvs	0x00707075
   29580:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   29584:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   29588:	2f686372 	svccs	0x00686372
   2958c:	2f6d7261 	svccs	0x006d7261
   29590:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
   29594:	2f706968 	svccs	0x00706968
   29598:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
   2959c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
   295a0:	7172692f 	cmnvc	r2, pc, lsr #18
   295a4:	70696863 	rsbvc	r6, r9, r3, ror #16
   295a8:	0000682e 	andeq	r6, r0, lr, lsr #16
   295ac:	5f736921 	svcpl	0x00736921
   295b0:	65747865 	ldrbvs	r7, [r4, #-2149]!	; 0xfffff79b
   295b4:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
   295b8:	207c7c20 	rsbscs	r7, ip, r0, lsr #24
   295bc:	6f727021 	svcvs	0x00727021
   295c0:	656c5f70 	strbvs	r5, [ip, #-3952]!	; 0xfffff090
   295c4:	0000006e 	andeq	r0, r0, lr, rrx
   295c8:	6e6f435b 	mcrvs	3, 3, r4, cr15, cr11, {2}
   295cc:	61662064 	cmnvs	r6, r4, rrx
   295d0:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   295d4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
   295d8:	52090a5d 	andpl	r0, r9, #380928	; 0x5d000
   295dc:	61207465 			; <UNDEFINED> instruction: 0x61207465
   295e0:	20736772 	rsbscs	r6, r3, r2, ror r7
   295e4:	20657261 	rsbcs	r7, r5, r1, ror #4
   295e8:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
   295ec:	00000021 	andeq	r0, r0, r1, lsr #32
   295f0:	6e752221 	cdpvs	2, 7, cr2, cr5, cr1, {1}
   295f4:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
   295f8:	6c626168 	stfvse	f6, [r2], #-416	; 0xfffffe60
   295fc:	00002265 	andeq	r2, r0, r5, ror #4
   29600:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29604:	70757272 	rsbsvc	r7, r5, r2, ror r2
   29608:	652d7374 	strvs	r7, [sp, #-884]!	; 0xfffffc8c
   2960c:	6e657478 	mcrvs	4, 3, r7, cr5, cr8, {3}
   29610:	00646564 	rsbeq	r6, r4, r4, ror #10
   29614:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29618:	70757272 	rsbsvc	r7, r5, r2, ror r2
   2961c:	00007374 	andeq	r7, r0, r4, ror r3
   29620:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2956c <__func__.8048+0x4c>
   29624:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   29628:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   2962c:	2f676e6f 	svccs	0x00676e6f
   29630:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   29634:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   29638:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   2963c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29640:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   29644:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   29648:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   2964c:	6f72702f 	svcvs	0x0072702f
   29650:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29654:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   29658:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   2965c:	2f736269 	svccs	0x00736269
   29660:	7062696c 	rsbvc	r6, r2, ip, ror #18
   29664:	7374616c 	cmnvc	r4, #108, 2
   29668:	6f707075 	svcvs	0x00707075
   2966c:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   29670:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   29674:	2f686372 	svccs	0x00686372
   29678:	2f6d7261 	svccs	0x006d7261
   2967c:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
   29680:	2f706968 	svccs	0x00706968
   29684:	76636967 	strbtvc	r6, [r3], -r7, ror #18
   29688:	00632e33 	rsbeq	r2, r3, r3, lsr lr
   2968c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29690:	70757272 	rsbsvc	r7, r5, r2, ror r2
   29694:	705f7374 	subsvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
   29698:	20706f72 	rsbscs	r6, r0, r2, ror pc
   2969c:	4e203d21 	cdpmi	13, 2, cr3, cr0, cr1, {1}
   296a0:	004c4c55 	subeq	r4, ip, r5, asr ip
   296a4:	276e6143 	strbcs	r6, [lr, -r3, asr #2]!
   296a8:	69662074 	stmdbvs	r6!, {r2, r4, r5, r6, sp}^
   296ac:	7420646e 	strtvc	r6, [r0], #-1134	; 0xfffffb92
   296b0:	69206568 	stmdbvs	r0!, {r3, r5, r6, r8, sl, sp, lr}
   296b4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
   296b8:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
   296bc:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
   296c0:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 294f8 <__func__.7083+0x1c0>
   296c4:	2772656c 	ldrbcs	r6, [r2, -ip, ror #10]!
   296c8:	6f6e2073 	svcvs	0x006e2073
   296cc:	6f206564 	svcvs	0x00206564
   296d0:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
   296d4:	00000074 	andeq	r0, r0, r4, ror r0
   296d8:	746e6923 	strbtvc	r6, [lr], #-2339	; 0xfffff6dd
   296dc:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
   296e0:	632d7470 			; <UNDEFINED> instruction: 0x632d7470
   296e4:	736c6c65 	cmnvc	ip, #25856	; 0x6500
   296e8:	00000000 	andeq	r0, r0, r0
   296ec:	27206f4e 	strcs	r6, [r0, -lr, asr #30]!
   296f0:	746e6923 	strbtvc	r6, [lr], #-2339	; 0xfffff6dd
   296f4:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
   296f8:	632d7470 			; <UNDEFINED> instruction: 0x632d7470
   296fc:	736c6c65 	cmnvc	ip, #25856	; 0x6500
   29700:	72702027 	rsbsvc	r2, r0, #39	; 0x27
   29704:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
   29708:	00217974 	eoreq	r7, r1, r4, ror r9
   2970c:	73696854 	cmnvc	r9, #84, 16	; 0x540000
   29710:	43494720 	movtmi	r4, #38688	; 0x9720
   29714:	69203376 	stmdbvs	r0!, {r1, r2, r4, r5, r6, r8, r9, ip, sp}
   29718:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
   2971c:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
   29720:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
   29724:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 2955c <__func__.8048+0x3c>
   29728:	2072656c 	rsbscs	r6, r2, ip, ror #10
   2972c:	20736168 	rsbscs	r6, r3, r8, ror #2
   29730:	69206e61 	stmdbvs	r0!, {r0, r5, r6, r9, sl, fp, sp, lr}
   29734:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
   29738:	69206469 	stmdbvs	r0!, {r0, r3, r5, r6, sl, sp, lr}
   2973c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
   29740:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
   29744:	6c656320 	stclvs	3, cr6, [r5], #-128	; 0xffffff80
   29748:	6f63206c 	svcvs	0x0063206c
   2974c:	21746e75 	cmncs	r4, r5, ror lr
   29750:	00000000 	andeq	r0, r0, r0
   29754:	61746f74 	cmnvs	r4, r4, ror pc
   29758:	65635f6c 	strbvs	r5, [r3, #-3948]!	; 0xfffff094
   2975c:	20736c6c 	rsbscs	r6, r3, ip, ror #24
   29760:	74732025 	ldrbtvc	r2, [r3], #-37	; 0xffffffdb
   29764:	65646972 	strbvs	r6, [r4, #-2418]!	; 0xfffff68e
   29768:	203d3d20 	eorscs	r3, sp, r0, lsr #26
   2976c:	00000030 	andeq	r0, r0, r0, lsr r0
   29770:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
   29774:	6e612064 	cdpvs	0, 6, cr2, cr1, cr4, {3}
   29778:	49505020 	ldmdbmi	r0, {r5, ip, lr}^
   2977c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
   29780:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
   29784:	69207470 	stmdbvs	r0!, {r4, r5, r6, sl, ip, sp, lr}
   29788:	6874206e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, sp}^
   2978c:	49472065 	stmdbmi	r7, {r0, r2, r5, r6, sp}^
   29790:	20337643 	eorscs	r7, r3, r3, asr #12
   29794:	73726170 	cmnvc	r2, #112, 2
   29798:	202c7265 	eorcs	r7, ip, r5, ror #4
   2979c:	70696b73 	rsbvc	r6, r9, r3, ror fp
   297a0:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
   297a4:	00000000 	andeq	r0, r0, r0
   297a8:	61766e49 	cmnvs	r6, r9, asr #28
   297ac:	2064696c 	rsbcs	r6, r4, ip, ror #18
   297b0:	20515249 	subscs	r5, r1, r9, asr #4
   297b4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
   297b8:	00000000 	andeq	r0, r0, r0
   297bc:	2c6d7261 	sfmcs	f7, 2, [sp], #-388	; 0xfffffe7c
   297c0:	2d636967 			; <UNDEFINED> instruction: 0x2d636967
   297c4:	00003376 	andeq	r3, r0, r6, ror r3

000297c8 <__func__.8073>:
   297c8:	73726170 	cmnvc	r2, #112, 2
   297cc:	72615f65 	rsbvc	r5, r1, #404	; 0x194
   297d0:	69675f6d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
   297d4:	5f337663 	svcpl	0x00337663
   297d8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   297dc:	70757272 	rsbsvc	r7, r5, r2, ror r2
   297e0:	00007374 	andeq	r7, r0, r4, ror r3

000297e4 <__func__.8048>:
   297e4:	5f746567 	svcpl	0x00746567
   297e8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   297ec:	70757272 	rsbsvc	r7, r5, r2, ror r2
   297f0:	705f7374 	subsvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
   297f4:	00706f72 	rsbseq	r6, r0, r2, ror pc
   297f8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 29744 <__func__.8048+0x224>
   297fc:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   29800:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   29804:	2f676e6f 	svccs	0x00676e6f
   29808:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   2980c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   29810:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   29814:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29818:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   2981c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   29820:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   29824:	6f72702f 	svcvs	0x0072702f
   29828:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   2982c:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   29830:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   29834:	2f736269 	svccs	0x00736269
   29838:	7062696c 	rsbvc	r6, r2, ip, ror #18
   2983c:	7374616c 	cmnvc	r4, #108, 2
   29840:	6f707075 	svcvs	0x00707075
   29844:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   29848:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   2984c:	2f686372 	svccs	0x00686372
   29850:	2f6d7261 	svccs	0x006d7261
   29854:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
   29858:	2f706968 	svccs	0x00706968
   2985c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
   29860:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
   29864:	7172692f 	cmnvc	r2, pc, lsr #18
   29868:	70696863 	rsbvc	r6, r9, r3, ror #16
   2986c:	0000682e 	andeq	r6, r0, lr, lsr #16
   29870:	5f736921 	svcpl	0x00736921
   29874:	65747865 	ldrbvs	r7, [r4, #-2149]!	; 0xfffff79b
   29878:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
   2987c:	207c7c20 	rsbscs	r7, ip, r0, lsr #24
   29880:	6f727021 	svcvs	0x00727021
   29884:	656c5f70 	strbvs	r5, [ip, #-3952]!	; 0xfffff090
   29888:	0000006e 	andeq	r0, r0, lr, rrx
   2988c:	6e6f435b 	mcrvs	3, 3, r4, cr15, cr11, {2}
   29890:	61662064 	cmnvs	r6, r4, rrx
   29894:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   29898:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
   2989c:	52090a5d 	andpl	r0, r9, #380928	; 0x5d000
   298a0:	61207465 			; <UNDEFINED> instruction: 0x61207465
   298a4:	20736772 	rsbscs	r6, r3, r2, ror r7
   298a8:	20657261 	rsbcs	r7, r5, r1, ror #4
   298ac:	4c4c554e 	cfstr64mi	mvdx5, [ip], {78}	; 0x4e
   298b0:	00000021 	andeq	r0, r0, r1, lsr #32
   298b4:	6e752221 	cdpvs	2, 7, cr2, cr5, cr1, {1}
   298b8:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
   298bc:	6c626168 	stfvse	f6, [r2], #-416	; 0xfffffe60
   298c0:	00002265 	andeq	r2, r0, r5, ror #4
   298c4:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   298c8:	70757272 	rsbsvc	r7, r5, r2, ror r2
   298cc:	652d7374 	strvs	r7, [sp, #-884]!	; 0xfffffc8c
   298d0:	6e657478 	mcrvs	4, 3, r7, cr5, cr8, {3}
   298d4:	00646564 	rsbeq	r6, r4, r4, ror #10
   298d8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   298dc:	70757272 	rsbsvc	r7, r5, r2, ror r2
   298e0:	00007374 	andeq	r7, r0, r4, ror r3
   298e4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 29830 <__func__.8048+0x4c>
   298e8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   298ec:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   298f0:	2f676e6f 	svccs	0x00676e6f
   298f4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   298f8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   298fc:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   29900:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29904:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   29908:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2990c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   29910:	6f72702f 	svcvs	0x0072702f
   29914:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29918:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   2991c:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   29920:	2f736269 	svccs	0x00736269
   29924:	7062696c 	rsbvc	r6, r2, ip, ror #18
   29928:	7374616c 	cmnvc	r4, #108, 2
   2992c:	6f707075 	svcvs	0x00707075
   29930:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   29934:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   29938:	2f686372 	svccs	0x00686372
   2993c:	2f6d7261 	svccs	0x006d7261
   29940:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
   29944:	2f706968 	svccs	0x00706968
   29948:	70616d6f 	rsbvc	r6, r1, pc, ror #26
   2994c:	00632e33 	rsbeq	r2, r3, r3, lsr lr
   29950:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29954:	70757272 	rsbsvc	r7, r5, r2, ror r2
   29958:	705f7374 	subsvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
   2995c:	20706f72 	rsbscs	r6, r0, r2, ror pc
   29960:	4e203d21 	cdpmi	13, 2, cr3, cr0, cr1, {1}
   29964:	004c4c55 	subeq	r4, ip, r5, asr ip
   29968:	6f206974 	svcvs	0x00206974
   2996c:	3370616d 	cmncc	r0, #1073741851	; 0x4000001b
   29970:	74786520 	ldrbtvc	r6, [r8], #-1312	; 0xfffffae0
   29974:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
   29978:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
   2997c:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
   29980:	73747075 	cmnvc	r4, #117	; 0x75
   29984:	6f727020 	svcvs	0x00727020
   29988:	74726570 	ldrbtvc	r6, [r2], #-1392	; 0xfffffa90
   2998c:	6f6e2079 	svcvs	0x006e2079
   29990:	75732074 	ldrbvc	r2, [r3, #-116]!	; 0xffffff8c
   29994:	726f7070 	rsbvc	r7, pc, #112	; 0x70
   29998:	00646574 	rsbeq	r6, r4, r4, ror r5
   2999c:	61746f74 	cmnvs	r4, r4, ror pc
   299a0:	65635f6c 	strbvs	r5, [r3, #-3948]!	; 0xfffff094
   299a4:	20736c6c 	rsbscs	r6, r3, ip, ror #24
   299a8:	54203d3d 	strtpl	r3, [r0], #-3389	; 0xfffff2c3
   299ac:	4d4f5f49 	stclmi	15, cr5, [pc, #-292]	; 29890 <__func__.8048+0xac>
   299b0:	5f335041 	svcpl	0x00335041
   299b4:	5f544e49 	svcpl	0x00544e49
   299b8:	4c4c4543 	cfstr64mi	mvdx4, [ip], {67}	; 0x43
   299bc:	554f435f 	strbpl	r4, [pc, #-863]	; 29665 <__func__.8048+0x145>
   299c0:	0000544e 	andeq	r5, r0, lr, asr #8
   299c4:	6f2c6974 	svcvs	0x002c6974
   299c8:	3370616d 	cmncc	r0, #1073741851	; 0x4000001b
   299cc:	746e692d 	strbtvc	r6, [lr], #-2349	; 0xfffff6d3
   299d0:	00000063 	andeq	r0, r0, r3, rrx
   299d4:	612c6974 			; <UNDEFINED> instruction: 0x612c6974
   299d8:	7833336d 	ldmdavc	r3!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
   299dc:	6e692d78 	mcrvs	13, 3, r2, cr9, cr8, {3}
   299e0:	00006374 	andeq	r6, r0, r4, ror r3

000299e4 <__func__.8060>:
   299e4:	73726170 	cmnvc	r2, #112, 2
   299e8:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
   299ec:	616d6f5f 	cmnvs	sp, pc, asr pc
   299f0:	695f3370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
   299f4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
   299f8:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
   299fc:	00000073 	andeq	r0, r0, r3, ror r0

00029a00 <__func__.8048>:
   29a00:	5f746567 	svcpl	0x00746567
   29a04:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
   29a08:	70757272 	rsbsvc	r7, r5, r2, ror r2
   29a0c:	705f7374 	subsvc	r7, pc, r4, ror r3	; <UNPREDICTABLE>
   29a10:	00706f72 	rsbseq	r6, r0, r2, ror pc
   29a14:	2c6d7261 	sfmcs	f7, 2, [sp], #-388	; 0xfffffe7c
   29a18:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
   29a1c:	612d7865 			; <UNDEFINED> instruction: 0x612d7865
   29a20:	69672d39 	stmdbvs	r7!, {r0, r3, r4, r5, r8, sl, fp, sp}^
   29a24:	00000063 	andeq	r0, r0, r3, rrx
   29a28:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 29974 <__func__.8048+0x190>
   29a2c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
   29a30:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
   29a34:	2f676e6f 	svccs	0x00676e6f
   29a38:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
   29a3c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
   29a40:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
   29a44:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
   29a48:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
   29a4c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   29a50:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
   29a54:	6f72702f 	svcvs	0x0072702f
   29a58:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
   29a5c:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
   29a60:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
   29a64:	2f736269 	svccs	0x00736269
   29a68:	7062696c 	rsbvc	r6, r2, ip, ror #18
   29a6c:	7374616c 	cmnvc	r4, #108, 2
   29a70:	6f707075 	svcvs	0x00707075
   29a74:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
   29a78:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
   29a7c:	2f686372 	svccs	0x00686372
   29a80:	2f6d7261 	svccs	0x006d7261
   29a84:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
   29a88:	2f706968 	svccs	0x00706968
   29a8c:	72676574 	rsbvc	r6, r7, #116, 10	; 0x1d000000
   29a90:	00632e61 	rsbeq	r2, r3, r1, ror #28
   29a94:	6c756f43 	ldclvs	15, cr6, [r5], #-268	; 0xfffffef4
   29a98:	74276e64 	strtvc	r6, [r7], #-3684	; 0xfffff19c
   29a9c:	6e696620 	cdpvs	6, 6, cr6, cr9, cr0, {1}
   29aa0:	68742064 	ldmdavs	r4!, {r2, r5, r6, sp}^
   29aa4:	52412065 	subpl	r2, r1, #101	; 0x65
   29aa8:	4947204d 	stmdbmi	r7, {r0, r2, r3, r6, sp}^
   29aac:	61702043 	cmnvs	r0, r3, asr #32
   29ab0:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
   29ab4:	646f6d20 	strbtvs	r6, [pc], #-3360	; 29abc <__func__.8048+0xbc>
   29ab8:	21656c75 	smccs	22213	; 0x56c5
   29abc:	00000000 	andeq	r0, r0, r0
   29ac0:	6469766e 	strbtvs	r7, [r9], #-1646	; 0xfffff992
   29ac4:	742c6169 	strtvc	r6, [ip], #-361	; 0xfffffe97
   29ac8:	61726765 	cmnvs	r2, r5, ror #14
   29acc:	2d303132 	ldfcss	f3, [r0, #-200]!	; 0xffffff38
   29ad0:	6c746369 	ldclvs	3, cr6, [r4], #-420	; 0xfffffe5c
   29ad4:	00000072 	andeq	r0, r0, r2, ror r0
   29ad8:	6469766e 	strbtvs	r7, [r9], #-1646	; 0xfffff992
   29adc:	742c6169 	strtvc	r6, [ip], #-361	; 0xfffffe97
   29ae0:	61726765 	cmnvs	r2, r5, ror #14
   29ae4:	2d343231 	lfmcs	f3, 4, [r4, #-196]!	; 0xffffff3c
   29ae8:	6c746369 	ldclvs	3, cr6, [r4], #-420	; 0xfffffe5c
   29aec:	00000072 	andeq	r0, r0, r2, ror r0
   29af0:	6469766e 	strbtvs	r7, [r9], #-1646	; 0xfffff992
   29af4:	742c6169 	strtvc	r6, [ip], #-361	; 0xfffffe97
   29af8:	61726765 	cmnvs	r2, r5, ror #14
   29afc:	692d3033 	pushvs	{r0, r1, r4, r5, ip, sp}
   29b00:	726c7463 	rsbvc	r7, ip, #1660944384	; 0x63000000
   29b04:	00000000 	andeq	r0, r0, r0

00029b08 <__func__.8071>:
   29b08:	73726170 	cmnvc	r2, #112, 2
   29b0c:	65745f65 	ldrbvs	r5, [r4, #-3941]!	; 0xfffff09b
   29b10:	5f617267 	svcpl	0x00617267
   29b14:	6c746369 	ldclvs	3, cr6, [r4], #-420	; 0xfffffe5c
   29b18:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
   29b1c:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
   29b20:	73747075 	cmnvc	r4, #117	; 0x75
   29b24:	00000000 	andeq	r0, r0, r0
   29b28:	6e616870 	mcrvs	8, 3, r6, cr1, cr0, {3}
   29b2c:	00656c64 	rsbeq	r6, r5, r4, ror #24
   29b30:	756e696c 	strbvc	r6, [lr, #-2412]!	; 0xfffff694
   29b34:	68702c78 	ldmdavs	r0!, {r3, r4, r5, r6, sl, fp, sp}^
   29b38:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
   29b3c:	00000065 	andeq	r0, r0, r5, rrx
   29b40:	696c612f 	stmdbvs	ip!, {r0, r1, r2, r3, r5, r8, sp, lr}^
   29b44:	73657361 	cmnvc	r5, #-2080374783	; 0x84000001
   29b48:	00000000 	andeq	r0, r0, r0
   29b4c:	706d6f63 	rsbvc	r6, sp, r3, ror #30
   29b50:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
   29b54:	0000656c 	andeq	r6, r0, ip, ror #10

00029b58 <c_hex>:
static const char c_hex[] = "0123456789abcdef";
   29b58:	33323130 	teqcc	r2, #48, 2
   29b5c:	37363534 			; <UNDEFINED> instruction: 0x37363534
   29b60:	62613938 	rsbvs	r3, r1, #56, 18	; 0xe0000
   29b64:	66656463 	strbtvs	r6, [r5], -r3, ror #8
   29b68:	00000000 	andeq	r0, r0, r0

00029b6c <g_buf_sz>:
static INSTRUMENTED_CONST unsigned g_buf_sz = ZF_LOG_BUF_SZ - ZF_LOG_EOL_SZ;
   29b6c:	000000fe 	strdeq	r0, [r0], -lr

00029b70 <g_buffer_cb>:
static INSTRUMENTED_CONST buffer_cb g_buffer_cb = buffer_callback;
   29b70:	0001d7e4 	andeq	sp, r1, r4, ror #15
   29b74:	0000000a 	andeq	r0, r0, sl
   29b78:	25407325 	strbcs	r7, [r0, #-805]	; 0xfffffcdb
   29b7c:	75253a73 	strvc	r3, [r5, #-2675]!	; 0xfffff58d
   29b80:	642f0020 	strtvs	r0, [pc], #-32	; 29b88 <g_buffer_cb+0x18>
   29b84:	6e2f7665 	cfmadda32vs	mvax3, mvax7, mvfx15, mvfx5
   29b88:	006c6c75 	rsbeq	r6, ip, r5, ror ip
   29b8c:	65737341 	ldrbvs	r7, [r3, #-833]!	; 0xfffffcbf
   29b90:	6f697472 	svcvs	0x00697472
   29b94:	6166206e 	cmnvs	r6, lr, rrx
   29b98:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
   29b9c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
   29ba0:	73252820 			; <UNDEFINED> instruction: 0x73252820
   29ba4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
   29ba8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
   29bac:	 	andcs	r0, r0, r9, lsr #20

00029baf <bin_tab>:
   29baf:	23222120 			; <UNDEFINED> instruction: 0x23222120
   29bb3:	25252424 	strcs	r2, [r5, #-1060]!	; 0xfffffbdc
   29bb7:	27272626 	strcs	r2, [r7, -r6, lsr #12]!
   29bbb:	28282828 	stmdacs	r8!, {r3, r5, fp, sp}
   29bbf:	29292929 	stmdbcs	r9!, {r0, r3, r5, r8, fp, sp}
   29bc3:	2a2a2a2a 	bcs	ab4473 <__bss_end__+0x96b42b>
   29bc7:	2b2b2b2b 	blcs	af487b <__bss_end__+0x9ab833>
   29bcb:	2c2c2c2c 	stccs	12, cr2, [ip], #-176	; 0xffffff50
   29bcf:	2c2c2c2c 	stccs	12, cr2, [ip], #-176	; 0xffffff50
   29bd3:	2d2d2d2d 	stccs	13, cr2, [sp, #-180]!	; 0xffffff4c
   29bd7:	2d2d2d2d 	stccs	13, cr2, [sp, #-180]!	; 0xffffff4c
   29bdb:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
   29bdf:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
   29be3:	2f2f2f2f 	svccs	0x002f2f2f
   29be7:	2f2f2f2f 	svccs	0x002f2f2f

00029beb <debruijn32.6042>:
   29beb:	02170100 	andseq	r0, r7, #0, 2
   29bef:	0313181d 	tsteq	r3, #1900544	; 0x1d0000
   29bf3:	0b191b1e 	bleq	670873 <__bss_end__+0x52782b>
   29bf7:	0d040814 	stceq	8, cr0, [r4, #-80]	; 0xffffffb0
   29bfb:	121c161f 	andsne	r1, ip, #32505856	; 0x1f00000
   29bff:	0c070a1a 			; <UNDEFINED> instruction: 0x0c070a1a
   29c03:	06091115 			; <UNDEFINED> instruction: 0x06091115
   29c07:	0e0f0510 	cfmv64lreq	mvdx15, r0
	...

00029c0c <all_mask>:
   29c0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   29c10:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

00029c14 <app_mask>:
   29c14:	7fffffff 	svcvc	0x00ffffff
   29c18:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc

00029c1c <stderr>:
   29c1c:	0002c7b0 			; <UNDEFINED> instruction: 0x0002c7b0

00029c20 <stdout>:
   29c20:	0002c848 	andeq	ip, r2, r8, asr #16
   29c24:	20202b2d 	eorcs	r2, r0, sp, lsr #22
   29c28:	30583020 	subscc	r3, r8, r0, lsr #32
   29c2c:	6e280078 	mcrvs	0, 1, r0, cr8, cr8, {3}
   29c30:	296c6c75 	stmdbcs	ip!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
   29c34:	58302d00 	ldmdapl	r0!, {r8, sl, fp, sp}
   29c38:	2058302b 	subscs	r3, r8, fp, lsr #32
   29c3c:	302d5830 	eorcc	r5, sp, r0, lsr r8
   29c40:	78302b78 	ldmdavc	r0!, {r3, r4, r5, r6, r8, r9, fp, sp}
   29c44:	00783020 	rsbseq	r3, r8, r0, lsr #32
   29c48:	00666e69 	rsbeq	r6, r6, r9, ror #28
   29c4c:	00464e49 	subeq	r4, r6, r9, asr #28
   29c50:	006e616e 	rsbeq	r6, lr, lr, ror #2
   29c54:	004e414e 	subeq	r4, lr, lr, asr #2
   29c58:	 	andseq	r0, r1, lr, lsr #32

00029c5a <states>:
   29c5a:	000a0011 	andeq	r0, sl, r1, lsl r0
   29c5e:	00111111 	andseq	r1, r1, r1, lsl r1
   29c62:	05000000 	streq	r0, [r0, #-0]
   29c66:	00000000 	andeq	r0, r0, r0
   29c6a:	00090000 	andeq	r0, r9, r0
   29c6e:	0b000000 	bleq	29c76 <states+0x1c>
	...
   29c7a:	0a0f0011 	beq	3e9cc6 <__bss_end__+0x2a0c7e>
   29c7e:	03111111 	tsteq	r1, #1073741828	; 0x40000004
   29c82:	0100070a 	tsteq	r0, sl, lsl #14
   29c86:	0b0b0913 	bleq	2ec0da <__bss_end__+0x1a3092>
   29c8a:	06090000 	streq	r0, [r9], -r0
   29c8e:	0b00000b 	bleq	29cc2 <states+0x68>
   29c92:	00110600 	andseq	r0, r1, r0, lsl #12
   29c96:	11110000 	tstne	r1, r0
   29c9a:	00000011 	andeq	r0, r0, r1, lsl r0
	...
   29caa:	00000b00 	andeq	r0, r0, r0, lsl #22
   29cae:	00000000 	andeq	r0, r0, r0
   29cb2:	00110000 	andseq	r0, r1, r0
   29cb6:	11110a0a 	tstne	r1, sl, lsl #20
   29cba:	000a0011 	andeq	r0, sl, r1, lsl r0
   29cbe:	09000200 	stmdbeq	r0, {r9}
   29cc2:	0000000b 	andeq	r0, r0, fp
   29cc6:	000b0009 	andeq	r0, fp, r9
   29cca:	00000b00 	andeq	r0, r0, r0, lsl #22
	...
   29ce2:	0c000000 	stceq	0, cr0, [r0], {-0}
	...
   29cee:	0c000000 	stceq	0, cr0, [r0], {-0}
   29cf2:	00000000 	andeq	r0, r0, r0
   29cf6:	0000000c 	andeq	r0, r0, ip
   29cfa:	000c0900 	andeq	r0, ip, r0, lsl #18
   29cfe:	00000000 	andeq	r0, r0, r0
   29d02:	0c00000c 	stceq	0, cr0, [r0], {12}
	...
   29d1e:	00000e00 	andeq	r0, r0, r0, lsl #28
	...
   29d2a:	00000d00 	andeq	r0, r0, r0, lsl #26
   29d2e:	000d0400 	andeq	r0, sp, r0, lsl #8
   29d32:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   29d36:	0000000e 	andeq	r0, r0, lr
   29d3a:	000e0000 	andeq	r0, lr, r0
   29d3e:	00000e00 	andeq	r0, r0, r0, lsl #28
	...
   29d56:	10000000 	andne	r0, r0, r0
	...
   29d62:	0f000000 	svceq	0x00000000
   29d66:	00000000 	andeq	r0, r0, r0
   29d6a:	0000000f 	andeq	r0, r0, pc
   29d6e:	00100900 	andseq	r0, r0, r0, lsl #18
   29d72:	00000000 	andeq	r0, r0, r0
   29d76:	10000010 	andne	r0, r0, r0, lsl r0
   29d7a:	00120000 	andseq	r0, r2, r0
   29d7e:	12120000 	andsne	r0, r2, #0
   29d82:	00000012 	andeq	r0, r0, r2, lsl r0
	...
   29d9a:	00120000 	andseq	r0, r2, r0
   29d9e:	12120000 	andsne	r0, r2, #0
   29da2:	00000012 	andeq	r0, r0, r2, lsl r0
   29da6:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
	...
   29dca:	0b000000 	bleq	29dd2 <states+0x178>
	...
   29dd6:	0a000000 	beq	29dde <states+0x184>
   29dda:	00000000 	andeq	r0, r0, r0
   29dde:	0000000a 	andeq	r0, r0, sl
   29de2:	000b0900 	andeq	r0, fp, r0, lsl #18
   29de6:	00000000 	andeq	r0, r0, r0
   29dea:	0b00000b 	bleq	29e1e <states+0x1c4>
	...
   29e06:	00000c00 	andeq	r0, r0, r0, lsl #24
	...
   29e12:	00000c00 	andeq	r0, r0, r0, lsl #24
   29e16:	000c0000 	andeq	r0, ip, r0
   29e1a:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   29e1e:	0000000c 	andeq	r0, r0, ip
   29e22:	000c0000 	andeq	r0, ip, r0
   29e26:	00000c00 	andeq	r0, r0, r0, lsl #24

00029e2a <xdigits>:
   29e2a:	33323130 	teqcc	r2, #48, 2
   29e2e:	37363534 			; <UNDEFINED> instruction: 0x37363534
   29e32:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
   29e36:	46454443 	strbmi	r4, [r5], -r3, asr #8

00029e3a <errid>:
   29e3a:	19222154 	stmdbne	r2!, {r2, r4, r6, r8, sp}
   29e3e:	0302010d 	movweq	r0, #8461	; 0x210d
   29e42:	0c1c4b11 			; <UNDEFINED> instruction: 0x0c1c4b11
   29e46:	1d0b0410 	cfstrsne	mvf0, [fp, #-64]	; 0xffffffc0
   29e4a:	68271e12 	stmdavs	r7!, {r1, r4, r9, sl, fp, ip}
   29e4e:	71706f6e 	cmnvc	r0, lr, ror #30
   29e52:	06052062 	streq	r2, [r5], -r2, rrx
   29e56:	1514130f 	ldrne	r1, [r4, #-783]	; 0xfffffcf1
   29e5a:	0716081a 			; <UNDEFINED> instruction: 0x0716081a
   29e5e:	18172428 	ldmdane	r7, {r3, r5, sl, sp}
   29e62:	1b0e0a09 	blne	3ac68e <__bss_end__+0x263646>
   29e66:	8323251f 			; <UNDEFINED> instruction: 0x8323251f
   29e6a:	2a267d82 	bcs	9c947a <__bss_end__+0x880432>
   29e6e:	3e3d3c2b 	cdpcc	12, 3, cr3, cr13, cr11, {1}
   29e72:	4a47433f 	bmi	11fab76 <__bss_end__+0x10b1b2e>
   29e76:	5a59584d 	bpl	167ffb2 <__bss_end__+0x1536f6a>
   29e7a:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
   29e7e:	6361605f 	cmnvs	r1, #95	; 0x5f
   29e82:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
   29e86:	6c6b6a69 			; <UNDEFINED> instruction: 0x6c6b6a69
   29e8a:	79747372 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
   29e8e:	007c7b7a 	rsbseq	r7, ip, sl, ror fp

00029e92 <errmsg>:
   29e92:	656c6c49 	strbvs	r6, [ip, #-3145]!	; 0xfffff3b7
   29e96:	206c6167 	rsbcs	r6, ip, r7, ror #2
   29e9a:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
   29e9e:	71657320 	cmnvc	r5, r0, lsr #6
   29ea2:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
   29ea6:	6f440065 	svcvs	0x00440065
   29eaa:	6e69616d 	powvsez	f6, f1, #5.0
   29eae:	72726520 	rsbsvc	r6, r2, #32, 10	; 0x8000000
   29eb2:	5200726f 	andpl	r7, r0, #-268435450	; 0xf0000006
   29eb6:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
   29eba:	6f6e2074 	svcvs	0x006e2074
   29ebe:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
   29ec2:	73657270 	cmnvc	r5, #112, 4
   29ec6:	61746e65 	cmnvs	r4, r5, ror #28
   29eca:	00656c62 	rsbeq	r6, r5, r2, ror #24
   29ece:	20746f4e 	rsbscs	r6, r4, lr, asr #30
   29ed2:	74742061 	ldrbtvc	r2, [r4], #-97	; 0xffffff9f
   29ed6:	65500079 	ldrbvs	r0, [r0, #-121]	; 0xffffff87
   29eda:	73696d72 	cmnvc	r9, #7296	; 0x1c80
   29ede:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
   29ee2:	6e656420 	cdpvs	4, 6, cr6, cr5, cr0, {1}
   29ee6:	00646569 	rsbeq	r6, r4, r9, ror #10
   29eea:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
   29eee:	6f697461 	svcvs	0x00697461
   29ef2:	6f6e206e 	svcvs	0x006e206e
   29ef6:	65702074 	ldrbvs	r2, [r0, #-116]!	; 0xffffff8c
   29efa:	74696d72 	strbtvc	r6, [r9], #-3442	; 0xfffff28e
   29efe:	00646574 	rsbeq	r6, r4, r4, ror r5
   29f02:	73206f4e 			; <UNDEFINED> instruction: 0x73206f4e
   29f06:	20686375 	rsbcs	r6, r8, r5, ror r3
   29f0a:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
   29f0e:	20726f20 	rsbscs	r6, r2, r0, lsr #30
   29f12:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
   29f16:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
   29f1a:	6f4e0079 	svcvs	0x004e0079
   29f1e:	63757320 	cmnvs	r5, #32, 6	; 0x80000000
   29f22:	72702068 	rsbsvc	r2, r0, #104	; 0x68
   29f26:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
   29f2a:	69460073 	stmdbvs	r6, {r0, r1, r4, r5, r6}^
   29f2e:	6520656c 	strvs	r6, [r0, #-1388]!	; 0xfffffa94
   29f32:	74736978 	ldrbtvc	r6, [r3], #-2424	; 0xfffff688
   29f36:	61560073 	cmpvs	r6, r3, ror r0
   29f3a:	2065756c 	rsbcs	r7, r5, ip, ror #10
   29f3e:	206f6f74 	rsbcs	r6, pc, r4, ror pc	; <UNPREDICTABLE>
   29f42:	6772616c 	ldrbvs	r6, [r2, -ip, ror #2]!
   29f46:	6f662065 	svcvs	0x00662065
   29f4a:	61642072 	smcvs	16898	; 0x4202
   29f4e:	74206174 	strtvc	r6, [r0], #-372	; 0xfffffe8c
   29f52:	00657079 	rsbeq	r7, r5, r9, ror r0
   29f56:	73206f4e 			; <UNDEFINED> instruction: 0x73206f4e
   29f5a:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
   29f5e:	66656c20 	strbtvs	r6, [r5], -r0, lsr #24
   29f62:	6e6f2074 	mcrvs	0, 3, r2, cr15, cr4, {3}
   29f66:	76656420 	strbtvc	r6, [r5], -r0, lsr #8
   29f6a:	00656369 	rsbeq	r6, r5, r9, ror #6
   29f6e:	2074754f 	rsbscs	r7, r4, pc, asr #10
   29f72:	6d20666f 	stcvs	6, cr6, [r0, #-444]!	; 0xfffffe44
   29f76:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
   29f7a:	65520079 	ldrbvs	r0, [r2, #-121]	; 0xffffff87
   29f7e:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
   29f82:	62206563 	eorvs	r6, r0, #415236096	; 0x18c00000
   29f86:	00797375 	rsbseq	r7, r9, r5, ror r3
   29f8a:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
   29f8e:	70757272 	rsbsvc	r7, r5, r2, ror r2
   29f92:	20646574 	rsbcs	r6, r4, r4, ror r5
   29f96:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
   29f9a:	63206d65 			; <UNDEFINED> instruction: 0x63206d65
   29f9e:	006c6c61 	rsbeq	r6, ip, r1, ror #24
   29fa2:	6f736552 	svcvs	0x00736552
   29fa6:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
   29faa:	6d657420 	cfstrdvs	mvd7, [r5, #-128]!	; 0xffffff80
   29fae:	61726f70 	cmnvs	r2, r0, ror pc
   29fb2:	796c6972 	stmdbvc	ip!, {r1, r4, r5, r6, r8, fp, sp, lr}^
   29fb6:	616e7520 	cmnvs	lr, r0, lsr #10
   29fba:	6c696176 	stfvse	f6, [r9], #-472	; 0xfffffe28
   29fbe:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
   29fc2:	766e4900 	strbtvc	r4, [lr], -r0, lsl #18
   29fc6:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
   29fca:	65657320 	strbvs	r7, [r5, #-800]!	; 0xfffffce0
   29fce:	7243006b 	subvc	r0, r3, #107	; 0x6b
   29fd2:	2d73736f 	ldclcs	3, cr7, [r3, #-444]!	; 0xfffffe44
   29fd6:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   29fda:	6c206563 	cfstr32vs	mvfx6, [r0], #-396	; 0xfffffe74
   29fde:	006b6e69 	rsbeq	r6, fp, r9, ror #28
   29fe2:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
   29fe6:	6c6e6f2d 	stclvs	15, cr6, [lr], #-180	; 0xffffff4c
   29fea:	69662079 	stmdbvs	r6!, {r0, r3, r4, r5, r6, sp}^
   29fee:	7320656c 			; <UNDEFINED> instruction: 0x7320656c
   29ff2:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
   29ff6:	6944006d 	stmdbvs	r4, {r0, r2, r3, r5, r6}^
   29ffa:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
   29ffe:	2079726f 	rsbscs	r7, r9, pc, ror #4
   2a002:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2a006:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
   2a00a:	6f430079 	svcvs	0x00430079
   2a00e:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
   2a012:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a016:	73657220 	cmnvc	r5, #32, 4
   2a01a:	62207465 	eorvs	r7, r0, #1694498816	; 0x65000000
   2a01e:	65702079 	ldrbvs	r2, [r0, #-121]!	; 0xffffff87
   2a022:	4f007265 	svcmi	0x00007265
   2a026:	61726570 	cmnvs	r2, r0, ror r5
   2a02a:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a02e:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
   2a032:	6f206465 	svcvs	0x00206465
   2a036:	43007475 	movwmi	r7, #1141	; 0x475
   2a03a:	656e6e6f 	strbvs	r6, [lr, #-3695]!	; 0xfffff191
   2a03e:	6f697463 	svcvs	0x00697463
   2a042:	6572206e 	ldrbvs	r2, [r2, #-110]!	; 0xffffff92
   2a046:	65737566 	ldrbvs	r7, [r3, #-1382]!	; 0xfffffa9a
   2a04a:	6f480064 	svcvs	0x00480064
   2a04e:	69207473 	stmdbvs	r0!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
   2a052:	6f642073 	svcvs	0x00642073
   2a056:	48006e77 	stmdami	r0, {r0, r1, r2, r4, r5, r6, r9, sl, fp, sp, lr}
   2a05a:	2074736f 	rsbscs	r7, r4, pc, ror #6
   2a05e:	75207369 	strvc	r7, [r0, #-873]!	; 0xfffffc97
   2a062:	6165726e 	cmnvs	r5, lr, ror #4
   2a066:	62616863 	rsbvs	r6, r1, #6488064	; 0x630000
   2a06a:	4100656c 	tstmi	r0, ip, ror #10
   2a06e:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
   2a072:	69207373 	stmdbvs	r0!, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}
   2a076:	7375206e 	cmnvc	r5, #110	; 0x6e
   2a07a:	72420065 	subvc	r0, r2, #101	; 0x65
   2a07e:	6e656b6f 	vnmulvs.f64	d22, d5, d31
   2a082:	70697020 	rsbvc	r7, r9, r0, lsr #32
   2a086:	2f490065 	svccs	0x00490065
   2a08a:	7265204f 	rsbvc	r2, r5, #79	; 0x4f
   2a08e:	00726f72 	rsbseq	r6, r2, r2, ror pc
   2a092:	73206f4e 			; <UNDEFINED> instruction: 0x73206f4e
   2a096:	20686375 	rsbcs	r6, r8, r5, ror r3
   2a09a:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   2a09e:	6f206563 	svcvs	0x00206563
   2a0a2:	64612072 	strbtvs	r2, [r1], #-114	; 0xffffff8e
   2a0a6:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
   2a0aa:	6c420073 	mcrrvs	0, 7, r0, r2, cr3
   2a0ae:	206b636f 	rsbcs	r6, fp, pc, ror #6
   2a0b2:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   2a0b6:	72206563 	eorvc	r6, r0, #415236096	; 0x18c00000
   2a0ba:	69757165 	ldmdbvs	r5!, {r0, r2, r5, r6, r8, ip, sp, lr}^
   2a0be:	00646572 	rsbeq	r6, r4, r2, ror r5
   2a0c2:	73206f4e 			; <UNDEFINED> instruction: 0x73206f4e
   2a0c6:	20686375 	rsbcs	r6, r8, r5, ror r3
   2a0ca:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
   2a0ce:	4e006563 	cfsh32mi	mvfx6, mvfx0, #51
   2a0d2:	6120746f 			; <UNDEFINED> instruction: 0x6120746f
   2a0d6:	72696420 	rsbvc	r6, r9, #32, 8	; 0x20000000
   2a0da:	6f746365 	svcvs	0x00746365
   2a0de:	49007972 	stmdbmi	r0, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
   2a0e2:	20612073 	rsbcs	r2, r1, r3, ror r0
   2a0e6:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
   2a0ea:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
   2a0ee:	65540079 	ldrbvs	r0, [r4, #-121]	; 0xffffff87
   2a0f2:	66207478 			; <UNDEFINED> instruction: 0x66207478
   2a0f6:	20656c69 	rsbcs	r6, r5, r9, ror #24
   2a0fa:	79737562 	ldmdbvc	r3!, {r1, r5, r6, r8, sl, ip, sp, lr}^
   2a0fe:	65784500 	ldrbvs	r4, [r8, #-1280]!	; 0xfffffb00
   2a102:	6f662063 	svcvs	0x00662063
   2a106:	74616d72 	strbtvc	r6, [r1], #-3442	; 0xfffff28e
   2a10a:	72726520 	rsbsvc	r6, r2, #32, 10	; 0x8000000
   2a10e:	4900726f 	stmdbmi	r0, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
   2a112:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
   2a116:	61206469 			; <UNDEFINED> instruction: 0x61206469
   2a11a:	6d756772 	ldclvs	7, cr6, [r5, #-456]!	; 0xfffffe38
   2a11e:	00746e65 	rsbseq	r6, r4, r5, ror #28
   2a122:	75677241 	strbvc	r7, [r7, #-577]!	; 0xfffffdbf
   2a126:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
   2a12a:	73696c20 	cmnvc	r9, #32, 24	; 0x2000
   2a12e:	6f742074 	svcvs	0x00742074
   2a132:	6f6c206f 	svcvs	0x006c206f
   2a136:	5300676e 	movwpl	r6, #1902	; 0x76e
   2a13a:	6f626d79 	svcvs	0x00626d79
   2a13e:	2063696c 	rsbcs	r6, r3, ip, ror #18
   2a142:	6b6e696c 	blvs	1bc46fa <__bss_end__+0x1a7b6b2>
   2a146:	6f6f6c20 	svcvs	0x006f6c20
   2a14a:	69460070 	stmdbvs	r6, {r4, r5, r6}^
   2a14e:	616e656c 	cmnvs	lr, ip, ror #10
   2a152:	7420656d 	strtvc	r6, [r0], #-1389	; 0xfffffa93
   2a156:	6c206f6f 	stcvs	15, cr6, [r0], #-444	; 0xfffffe44
   2a15a:	00676e6f 	rsbeq	r6, r7, pc, ror #28
   2a15e:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
   2a162:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2a166:	65706f20 	ldrbvs	r6, [r0, #-3872]!	; 0xfffff0e0
   2a16a:	6966206e 	stmdbvs	r6!, {r1, r2, r3, r5, r6, sp}^
   2a16e:	2073656c 	rsbscs	r6, r3, ip, ror #10
   2a172:	73206e69 			; <UNDEFINED> instruction: 0x73206e69
   2a176:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
   2a17a:	6f4e006d 	svcvs	0x004e006d
   2a17e:	6c696620 	stclvs	6, cr6, [r9], #-128	; 0xffffff80
   2a182:	65642065 	strbvs	r2, [r4, #-101]!	; 0xffffff9b
   2a186:	69726373 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
   2a18a:	726f7470 	rsbvc	r7, pc, #112, 8	; 0x70000000
   2a18e:	76612073 			; <UNDEFINED> instruction: 0x76612073
   2a192:	616c6961 	cmnvs	ip, r1, ror #18
   2a196:	00656c62 	rsbeq	r6, r5, r2, ror #24
   2a19a:	20646142 	rsbcs	r6, r4, r2, asr #2
   2a19e:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
   2a1a2:	73656420 	cmnvc	r5, #32, 8	; 0x20000000
   2a1a6:	70697263 	rsbvc	r7, r9, r3, ror #4
   2a1aa:	00726f74 	rsbseq	r6, r2, r4, ror pc
   2a1ae:	63206f4e 			; <UNDEFINED> instruction: 0x63206f4e
   2a1b2:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
   2a1b6:	6f727020 	svcvs	0x00727020
   2a1ba:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
   2a1be:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
   2a1c2:	64646120 	strbtvs	r6, [r4], #-288	; 0xfffffee0
   2a1c6:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
   2a1ca:	6c694600 	stclvs	6, cr4, [r9], #-0
   2a1ce:	6f742065 	svcvs	0x00742065
   2a1d2:	616c206f 	cmnvs	ip, pc, rrx
   2a1d6:	00656772 	rsbeq	r6, r5, r2, ror r7
   2a1da:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
   2a1de:	796e616d 	stmdbvc	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2a1e2:	6e696c20 	cdpvs	12, 6, cr6, cr9, cr0, {1}
   2a1e6:	4e00736b 	cdpmi	3, 0, cr7, cr0, cr11, {3}
   2a1ea:	6f6c206f 	svcvs	0x006c206f
   2a1ee:	20736b63 	rsbscs	r6, r3, r3, ror #22
   2a1f2:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
   2a1f6:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
   2a1fa:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
   2a1fe:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
   2a202:	64206563 	strtvs	r6, [r0], #-1379	; 0xfffffa9d
   2a206:	6c646165 	stfvse	f6, [r4], #-404	; 0xfffffe6c
   2a20a:	206b636f 	rsbcs	r6, fp, pc, ror #6
   2a20e:	6c756f77 	ldclvs	15, cr6, [r5], #-476	; 0xfffffe24
   2a212:	636f2064 	cmnvs	pc, #100	; 0x64
   2a216:	00727563 	rsbseq	r7, r2, r3, ror #10
   2a21a:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
   2a21e:	6f6e2065 	svcvs	0x006e2065
   2a222:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
   2a226:	65766f63 	ldrbvs	r6, [r6, #-3939]!	; 0xfffff09d
   2a22a:	6c626172 	stfvse	f6, [r2], #-456	; 0xfffffe38
   2a22e:	72500065 	subsvc	r0, r0, #101	; 0x65
   2a232:	6f697665 	svcvs	0x00697665
   2a236:	6f207375 	svcvs	0x00207375
   2a23a:	72656e77 	rsbvc	r6, r5, #1904	; 0x770
   2a23e:	65696420 	strbvs	r6, [r9, #-1056]!	; 0xfffffbe0
   2a242:	704f0064 	subvc	r0, pc, r4, rrx
   2a246:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
   2a24a:	206e6f69 	rsbcs	r6, lr, r9, ror #30
   2a24e:	636e6163 	cmnvs	lr, #-1073741800	; 0xc0000018
   2a252:	64656c65 	strbtvs	r6, [r5], #-3173	; 0xfffff39b
   2a256:	6e754600 	cdpvs	6, 7, cr4, cr5, cr0, {0}
   2a25a:	6f697463 	svcvs	0x00697463
   2a25e:	6f6e206e 	svcvs	0x006e206e
   2a262:	6d692074 	stclvs	0, cr2, [r9, #-464]!	; 0xfffffe30
   2a266:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
   2a26a:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
   2a26e:	6f4e0064 	svcvs	0x004e0064
   2a272:	73656d20 	cmnvc	r5, #32, 26	; 0x800
   2a276:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
   2a27a:	20666f20 	rsbcs	r6, r6, r0, lsr #30
   2a27e:	69736564 	ldmdbvs	r3!, {r2, r5, r6, r8, sl, sp, lr}^
   2a282:	20646572 	rsbcs	r6, r4, r2, ror r5
   2a286:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
   2a28a:	65644900 	strbvs	r4, [r4, #-2304]!	; 0xfffff700
   2a28e:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
   2a292:	20726569 	rsbscs	r6, r2, r9, ror #10
   2a296:	6f6d6572 	svcvs	0x006d6572
   2a29a:	00646576 	rsbeq	r6, r4, r6, ror r5
   2a29e:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
   2a2a2:	6e206563 	cfsh64vs	mvdx6, mvdx0, #51
   2a2a6:	6120746f 			; <UNDEFINED> instruction: 0x6120746f
   2a2aa:	72747320 	rsbsvc	r7, r4, #32, 6	; 0x80000000
   2a2ae:	006d6165 	rsbeq	r6, sp, r5, ror #2
   2a2b2:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
   2a2b6:	20617461 	rsbcs	r7, r1, r1, ror #8
   2a2ba:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
   2a2be:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
   2a2c2:	65440065 	strbvs	r0, [r4, #-101]	; 0xffffff9b
   2a2c6:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
   2a2ca:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
   2a2ce:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
   2a2d2:	74754f00 	ldrbtvc	r4, [r5], #-3840	; 0xfffff100
   2a2d6:	20666f20 	rsbcs	r6, r6, r0, lsr #30
   2a2da:	65727473 	ldrbvs	r7, [r2, #-1139]!	; 0xfffffb8d
   2a2de:	20736d61 	rsbscs	r6, r3, r1, ror #26
   2a2e2:	6f736572 	svcvs	0x00736572
   2a2e6:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
   2a2ea:	694c0073 	stmdbvs	ip, {r0, r1, r4, r5, r6}^
   2a2ee:	68206b6e 	stmdavs	r0!, {r1, r2, r3, r5, r6, r8, r9, fp, sp, lr}
   2a2f2:	62207361 	eorvs	r7, r0, #-2080374783	; 0x84000001
   2a2f6:	206e6565 	rsbcs	r6, lr, r5, ror #10
   2a2fa:	65766573 	ldrbvs	r6, [r6, #-1395]!	; 0xfffffa8d
   2a2fe:	00646572 	rsbeq	r6, r4, r2, ror r5
   2a302:	746f7250 	strbtvc	r7, [pc], #-592	; 2a30a <errmsg+0x478>
   2a306:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 2a150 <errmsg+0x2be>
   2a30a:	72726520 	rsbsvc	r6, r2, #32, 10	; 0x8000000
   2a30e:	4200726f 	andmi	r7, r0, #-268435450	; 0xf0000006
   2a312:	6d206461 	cfstrsvs	mvf6, [r0, #-388]!	; 0xfffffe7c
   2a316:	61737365 	cmnvs	r3, r5, ror #6
   2a31a:	46006567 	strmi	r6, [r0], -r7, ror #10
   2a31e:	20656c69 	rsbcs	r6, r5, r9, ror #24
   2a322:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
   2a326:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
   2a32a:	6920726f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
   2a32e:	6162206e 	cmnvs	r2, lr, rrx
   2a332:	74732064 	ldrbtvc	r2, [r3], #-100	; 0xffffff9c
   2a336:	00657461 	rsbeq	r7, r5, r1, ror #8
   2a33a:	20746f4e 	rsbscs	r6, r4, lr, asr #30
   2a33e:	6f732061 	svcvs	0x00732061
   2a342:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
   2a346:	73654400 	cmnvc	r5, #0, 8
   2a34a:	616e6974 	smcvs	59028	; 0xe694
   2a34e:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a352:	64646120 	strbtvs	r6, [r4], #-288	; 0xfffffee0
   2a356:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
   2a35a:	71657220 	cmnvc	r5, r0, lsr #4
   2a35e:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
   2a362:	654d0064 	strbvs	r0, [sp, #-100]	; 0xffffff9c
   2a366:	67617373 			; <UNDEFINED> instruction: 0x67617373
   2a36a:	6f742065 	svcvs	0x00742065
   2a36e:	616c206f 	cmnvs	ip, pc, rrx
   2a372:	00656772 	rsbeq	r6, r5, r2, ror r7
   2a376:	746f7250 	strbtvc	r7, [pc], #-592	; 2a37e <errmsg+0x4ec>
   2a37a:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 2a1c4 <errmsg+0x332>
   2a37e:	6f727720 	svcvs	0x00727720
   2a382:	7420676e 	strtvc	r6, [r0], #-1902	; 0xfffff892
   2a386:	20657079 	rsbcs	r7, r5, r9, ror r0
   2a38a:	20726f66 	rsbscs	r6, r2, r6, ror #30
   2a38e:	6b636f73 	blvs	1906162 <__bss_end__+0x17bd11a>
   2a392:	50007465 	andpl	r7, r0, r5, ror #8
   2a396:	6f746f72 	svcvs	0x00746f72
   2a39a:	206c6f63 	rsbcs	r6, ip, r3, ror #30
   2a39e:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2a3a2:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
   2a3a6:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
   2a3aa:	72500065 	subsvc	r0, r0, #101	; 0x65
   2a3ae:	636f746f 	cmnvs	pc, #1862270976	; 0x6f000000
   2a3b2:	6e206c6f 	cdpvs	12, 2, cr6, cr0, cr15, {3}
   2a3b6:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2a3ba:	6f707075 	svcvs	0x00707075
   2a3be:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
   2a3c2:	636f5300 	cmnvs	pc, #0, 6
   2a3c6:	2074656b 	rsbscs	r6, r4, fp, ror #10
   2a3ca:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
   2a3ce:	746f6e20 	strbtvc	r6, [pc], #-3616	; 2a3d6 <errmsg+0x544>
   2a3d2:	70757320 	rsbsvc	r7, r5, r0, lsr #6
   2a3d6:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
   2a3da:	4e006465 	cdpmi	4, 0, cr6, cr0, cr5, {3}
   2a3de:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2a3e2:	6f707075 	svcvs	0x00707075
   2a3e6:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
   2a3ea:	6f725000 	svcvs	0x00725000
   2a3ee:	6f636f74 	svcvs	0x00636f74
   2a3f2:	6166206c 	cmnvs	r6, ip, rrx
   2a3f6:	796c696d 	stmdbvc	ip!, {r0, r2, r3, r5, r6, r8, fp, sp, lr}^
   2a3fa:	746f6e20 	strbtvc	r6, [pc], #-3616	; 2a402 <errmsg+0x570>
   2a3fe:	70757320 	rsbsvc	r7, r5, r0, lsr #6
   2a402:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
   2a406:	41006465 	tstmi	r0, r5, ror #8
   2a40a:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
   2a40e:	66207373 			; <UNDEFINED> instruction: 0x66207373
   2a412:	6c696d61 	stclvs	13, cr6, [r9], #-388	; 0xfffffe7c
   2a416:	6f6e2079 	svcvs	0x006e2079
   2a41a:	75732074 	ldrbvc	r2, [r3, #-116]!	; 0xffffff8c
   2a41e:	726f7070 	rsbvc	r7, pc, #112	; 0x70
   2a422:	20646574 	rsbcs	r6, r4, r4, ror r5
   2a426:	70207962 	eorvc	r7, r0, r2, ror #18
   2a42a:	6f746f72 	svcvs	0x00746f72
   2a42e:	006c6f63 	rsbeq	r6, ip, r3, ror #30
   2a432:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
   2a436:	20737365 	rsbscs	r7, r3, r5, ror #6
   2a43a:	20746f6e 	rsbscs	r6, r4, lr, ror #30
   2a43e:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
   2a442:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
   2a446:	654e0065 	strbvs	r0, [lr, #-101]	; 0xffffff9b
   2a44a:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
   2a44e:	7369206b 	cmnvc	r9, #107	; 0x6b
   2a452:	776f6420 	strbvc	r6, [pc, -r0, lsr #8]!
   2a456:	654e006e 	strbvs	r0, [lr, #-110]	; 0xffffff92
   2a45a:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
   2a45e:	6e75206b 	cdpvs	0, 7, cr2, cr5, cr11, {3}
   2a462:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
   2a466:	6c626168 	stfvse	f6, [r2], #-416	; 0xfffffe60
   2a46a:	6f430065 	svcvs	0x00430065
   2a46e:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
   2a472:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a476:	73657220 	cmnvc	r5, #32, 4
   2a47a:	62207465 	eorvs	r7, r0, #1694498816	; 0x65000000
   2a47e:	656e2079 	strbvs	r2, [lr, #-121]!	; 0xffffff87
   2a482:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
   2a486:	6f43006b 	svcvs	0x0043006b
   2a48a:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
   2a48e:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
   2a492:	6f626120 	svcvs	0x00626120
   2a496:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
   2a49a:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
   2a49e:	66667562 	strbtvs	r7, [r6], -r2, ror #10
   2a4a2:	73207265 			; <UNDEFINED> instruction: 0x73207265
   2a4a6:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
   2a4aa:	61766120 	cmnvs	r6, r0, lsr #2
   2a4ae:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
   2a4b2:	5300656c 	movwpl	r6, #1388	; 0x56c
   2a4b6:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
   2a4ba:	73692074 	cmnvc	r9, #116	; 0x74
   2a4be:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
   2a4c2:	7463656e 	strbtvc	r6, [r3], #-1390	; 0xfffffa92
   2a4c6:	53006465 	movwpl	r6, #1125	; 0x465
   2a4ca:	656b636f 	strbvs	r6, [fp, #-879]!	; 0xfffffc91
   2a4ce:	6f6e2074 	svcvs	0x006e2074
   2a4d2:	6f632074 	svcvs	0x00632074
   2a4d6:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
   2a4da:	00646574 	rsbeq	r6, r4, r4, ror r5
   2a4de:	6e6e6143 	powvsem	f6, f6, f3
   2a4e2:	7320746f 			; <UNDEFINED> instruction: 0x7320746f
   2a4e6:	20646e65 	rsbcs	r6, r4, r5, ror #28
   2a4ea:	65746661 	ldrbvs	r6, [r4, #-1633]!	; 0xfffff99f
   2a4ee:	6f732072 	svcvs	0x00732072
   2a4f2:	74656b63 	strbtvc	r6, [r5], #-2915	; 0xfffff49d
   2a4f6:	75687320 	strbvc	r7, [r8, #-800]!	; 0xfffffce0
   2a4fa:	776f6474 			; <UNDEFINED> instruction: 0x776f6474
   2a4fe:	704f006e 	subvc	r0, pc, lr, rrx
   2a502:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
   2a506:	206e6f69 	rsbcs	r6, lr, r9, ror #30
   2a50a:	65726c61 	ldrbvs	r6, [r2, #-3169]!	; 0xfffff39f
   2a50e:	20796461 	rsbscs	r6, r9, r1, ror #8
   2a512:	70206e69 	eorvc	r6, r0, r9, ror #28
   2a516:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
   2a51a:	00737365 	rsbseq	r7, r3, r5, ror #6
   2a51e:	7265704f 	rsbvc	r7, r5, #79	; 0x4f
   2a522:	6f697461 	svcvs	0x00697461
   2a526:	6e69206e 	cdpvs	0, 6, cr2, cr9, cr14, {3}
   2a52a:	6f727020 	svcvs	0x00727020
   2a52e:	73657267 	cmnvc	r5, #1879048198	; 0x70000006
   2a532:	74530073 	ldrbvc	r0, [r3], #-115	; 0xffffff8d
   2a536:	20656c61 	rsbcs	r6, r5, r1, ror #24
   2a53a:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
   2a53e:	6e616820 	cdpvs	8, 6, cr6, cr1, cr0, {1}
   2a542:	00656c64 	rsbeq	r6, r5, r4, ror #24
   2a546:	6f6d6552 	svcvs	0x006d6552
   2a54a:	49206574 	stmdbmi	r0!, {r2, r4, r5, r6, r8, sl, sp, lr}
   2a54e:	65204f2f 	strvs	r4, [r0, #-3887]!	; 0xfffff0d1
   2a552:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
   2a556:	6f755100 	svcvs	0x00755100
   2a55a:	65206174 	strvs	r6, [r0, #-372]!	; 0xfffffe8c
   2a55e:	65656378 	strbvs	r6, [r5, #-888]!	; 0xfffffc88
   2a562:	00646564 	rsbeq	r6, r4, r4, ror #10
   2a566:	6d206f4e 	stcvs	15, cr6, [r0, #-312]!	; 0xfffffec8
   2a56a:	75696465 	strbvc	r6, [r9, #-1125]!	; 0xfffffb9b
   2a56e:	6f66206d 	svcvs	0x0066206d
   2a572:	00646e75 	rsbeq	r6, r4, r5, ror lr
   2a576:	6e6f7257 	mcrvs	2, 3, r7, cr15, cr7, {2}
   2a57a:	656d2067 	strbvs	r2, [sp, #-103]!	; 0xffffff99
   2a57e:	6d756964 			; <UNDEFINED> instruction: 0x6d756964
   2a582:	70797420 	rsbsvc	r7, r9, r0, lsr #8
   2a586:	6f4e0065 	svcvs	0x004e0065
   2a58a:	72726520 	rsbsvc	r6, r2, #32, 10	; 0x8000000
   2a58e:	6920726f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
   2a592:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
   2a596:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
   2a59a:	00006e6f 	andeq	r6, r0, pc, ror #28
	...

0002a5a0 <__c_dot_utf8>:
   2a5a0:	0002a5ec 	andeq	sl, r2, ip, ror #11
   2a5a4:	00000014 	andeq	r0, r0, r4, lsl r0
   2a5a8:	54552e43 	ldrbpl	r2, [r5], #-3651	; 0xfffff1bd
   2a5ac:	00382d46 	eorseq	r2, r8, r6, asr #26
	...

0002a5bc <__c_dot_utf8_locale>:
   2a5bc:	0002a5a0 	andeq	sl, r2, r0, lsr #11
	...

0002a5d4 <__c_locale>:
	...

0002a5ec <empty_mo>:
   2a5ec:	950412de 	strls	r1, [r4, #-734]	; 0xfffffd22
   2a5f0:	00000000 	andeq	r0, r0, r0
   2a5f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a5f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a5fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a600:	69666e69 	stmdbvs	r6!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
   2a604:	7974696e 	ldmdbvc	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
	...

0002a609 <CSWTCH.38>:
   2a609:	 	blvs	d77a71 <__bss_end__+0xc2ea29>

0002a60c <CSWTCH.39>:
   2a60c:	fbceff6b 	blx	ff3ea3c2 <__bss_end__+0xff2a137a>
   2a610:	0000fbce 	andeq	pc, r0, lr, asr #23

0002a614 <p10s.6385>:
   2a614:	0000000a 	andeq	r0, r0, sl
   2a618:	00000064 	andeq	r0, r0, r4, rrx
   2a61c:	000003e8 	andeq	r0, r0, r8, ror #7
   2a620:	00002710 	andeq	r2, r0, r0, lsl r7
   2a624:	000186a0 	andeq	r8, r1, r0, lsr #13
   2a628:	000f4240 	andeq	r4, pc, r0, asr #4
   2a62c:	00989680 	addseq	r9, r8, r0, lsl #13
   2a630:	05f5e100 	ldrbeq	lr, [r5, #256]!	; 0x100
   2a634:	04020100 	streq	r0, [r2], #-256	; 0xffffff00
   2a638:	05060307 	streq	r0, [r6, #-775]	; 0xfffffcf9
	...

0002a63d <table>:
   2a63d:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a641:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a645:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a649:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a64d:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a651:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a655:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a659:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a65d:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a661:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a665:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a669:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a66d:	020100ff 	andeq	r0, r1, #255	; 0xff
   2a671:	06050403 	streq	r0, [r5], -r3, lsl #8
   2a675:	ff090807 			; <UNDEFINED> instruction: 0xff090807
   2a679:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a67d:	0b0affff 	bleq	2ea681 <__bss_end__+0x1a1639>
   2a681:	0f0e0d0c 	svceq	0x000e0d0c
   2a685:	13121110 	tstne	r2, #16, 2
   2a689:	17161514 			; <UNDEFINED> instruction: 0x17161514
   2a68d:	1b1a1918 	blne	6b0af5 <__bss_end__+0x567aad>
   2a691:	1f1e1d1c 	svcne	0x001e1d1c
   2a695:	23222120 			; <UNDEFINED> instruction: 0x23222120
   2a699:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a69d:	0b0affff 	bleq	2ea6a1 <__bss_end__+0x1a1659>
   2a6a1:	0f0e0d0c 	svceq	0x000e0d0c
   2a6a5:	13121110 	tstne	r2, #16, 2
   2a6a9:	17161514 			; <UNDEFINED> instruction: 0x17161514
   2a6ad:	1b1a1918 	blne	6b0b15 <__bss_end__+0x567acd>
   2a6b1:	1f1e1d1c 	svcne	0x001e1d1c
   2a6b5:	23222120 			; <UNDEFINED> instruction: 0x23222120
   2a6b9:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6bd:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6c1:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6c5:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6c9:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6cd:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6d1:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6d5:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6d9:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6dd:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6e1:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6e5:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6e9:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6ed:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6f1:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6f5:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6f9:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a6fd:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a701:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a705:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a709:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a70d:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a711:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a715:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a719:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a71d:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a721:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a725:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a729:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a72d:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a731:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a735:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a739:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   2a73d:	 	andeq	r0, r0, #255	; 0xff

0002a740 <__fsmu8>:
   2a740:	c0000002 	andgt	r0, r0, r2
   2a744:	c0000003 	andgt	r0, r0, r3
   2a748:	c0000004 	andgt	r0, r0, r4
   2a74c:	c0000005 	andgt	r0, r0, r5
   2a750:	c0000006 	andgt	r0, r0, r6
   2a754:	c0000007 	andgt	r0, r0, r7
   2a758:	c0000008 	andgt	r0, r0, r8
   2a75c:	c0000009 	andgt	r0, r0, r9
   2a760:	c000000a 	andgt	r0, r0, sl
   2a764:	c000000b 	andgt	r0, r0, fp
   2a768:	c000000c 	andgt	r0, r0, ip
   2a76c:	c000000d 	andgt	r0, r0, sp
   2a770:	c000000e 	andgt	r0, r0, lr
   2a774:	c000000f 	andgt	r0, r0, pc
   2a778:	c0000010 	andgt	r0, r0, r0, lsl r0
   2a77c:	c0000011 	andgt	r0, r0, r1, lsl r0
   2a780:	c0000012 	andgt	r0, r0, r2, lsl r0
   2a784:	c0000013 	andgt	r0, r0, r3, lsl r0
   2a788:	c0000014 	andgt	r0, r0, r4, lsl r0
   2a78c:	c0000015 	andgt	r0, r0, r5, lsl r0
   2a790:	c0000016 	andgt	r0, r0, r6, lsl r0
   2a794:	c0000017 	andgt	r0, r0, r7, lsl r0
   2a798:	c0000018 	andgt	r0, r0, r8, lsl r0
   2a79c:	c0000019 	andgt	r0, r0, r9, lsl r0
   2a7a0:	c000001a 	andgt	r0, r0, sl, lsl r0
   2a7a4:	c000001b 	andgt	r0, r0, fp, lsl r0
   2a7a8:	c000001c 	andgt	r0, r0, ip, lsl r0
   2a7ac:	c000001d 	andgt	r0, r0, sp, lsl r0
   2a7b0:	c000001e 	andgt	r0, r0, lr, lsl r0
   2a7b4:	c000001f 	andgt	r0, r0, pc, lsl r0
   2a7b8:	b3000000 	movwlt	r0, #0
   2a7bc:	c3000001 	movwgt	r0, #1
   2a7c0:	c3000002 	movwgt	r0, #2
   2a7c4:	c3000003 	movwgt	r0, #3
   2a7c8:	c3000004 	movwgt	r0, #4
   2a7cc:	c3000005 	movwgt	r0, #5
   2a7d0:	c3000006 	movwgt	r0, #6
   2a7d4:	c3000007 	movwgt	r0, #7
   2a7d8:	c3000008 	movwgt	r0, #8
   2a7dc:	c3000009 	movwgt	r0, #9
   2a7e0:	c300000a 	movwgt	r0, #10
   2a7e4:	c300000b 	movwgt	r0, #11
   2a7e8:	c300000c 	movwgt	r0, #12
   2a7ec:	d300000d 	movwle	r0, #13
   2a7f0:	c300000e 	movwgt	r0, #14
   2a7f4:	c300000f 	movwgt	r0, #15
   2a7f8:	bb0c0000 	bllt	32a800 <__bss_end__+0x1e17b8>
   2a7fc:	c30c0001 	movwgt	r0, #49153	; 0xc001
   2a800:	c30c0002 	movwgt	r0, #49154	; 0xc002
   2a804:	c30c0003 	movwgt	r0, #49155	; 0xc003
   2a808:	d30c0004 	movwle	r0, #49156	; 0xc004

Disassembly of section .tbss:

0002a80c <_tbss_start>:
	...

Disassembly of section .ARM.exidx:

0002a80c <.ARM.exidx>:
   2a80c:	7fffcd08 	svcvc	0x00ffcd08
   2a810:	00000001 	andeq	r0, r0, r1

Disassembly of section .eh_frame:

0002a814 <__FRAME_END__>:
   2a814:	00000000 	andeq	r0, r0, r0

Disassembly of section .init_array:

0002bfe8 <__init_array_start>:
   2bfe8:	00014664 	andeq	r4, r1, r4, ror #12
   2bfec:	000148a4 	andeq	r4, r1, r4, lsr #17
   2bff0:	00014904 	andeq	r4, r1, r4, lsl #18
   2bff4:	00012564 	andeq	r2, r1, r4, ror #10

0002bff8 <__frame_dummy_init_array_entry>:
   2bff8:	000101e4 	andeq	r0, r1, r4, ror #3

Disassembly of section .fini_array:

0002bffc <__do_global_dtors_aux_fini_array_entry>:
   2bffc:	000101bc 			; <UNDEFINED> instruction: 0x000101bc

Disassembly of section .data:

0002c000 <__dso_handle>:
   2c000:	00000000 	andeq	r0, r0, r0

0002c004 <num_fds>:
static int num_fds = 256;
   2c004:	00000100 	andeq	r0, r0, r0, lsl #2

0002c008 <stdio_write>:
static write_buf_fn stdio_write = sys_platform_write;
   2c008:	00012b20 	andeq	r2, r1, r0, lsr #22

0002c00c <syscall_table>:
static muslcsys_syscall_t syscall_table[MUSLC_NUM_SYSCALLS] = {
   2c00c:	00000000 	andeq	r0, r0, r0
   2c010:	00014968 	andeq	r4, r1, r8, ror #18
   2c014:	00000000 	andeq	r0, r0, r0
   2c018:	00013518 	andeq	r3, r1, r8, lsl r5
   2c01c:	000132a8 	andeq	r3, r1, r8, lsr #5
   2c020:	00012e70 	andeq	r2, r1, r0, ror lr
   2c024:	00012fb4 			; <UNDEFINED> instruction: 0x00012fb4
	...
   2c058:	000137d8 	ldrdeq	r3, [r1], -r8
   2c05c:	000149c4 	andeq	r4, r1, r4, asr #19
	...
   2c090:	00013aa8 	andeq	r3, r1, r8, lsr #21
	...
   2c0c0:	00014a54 	andeq	r4, r1, r4, asr sl
	...
   2c0e4:	00013598 	muleq	r1, r8, r5
	...
   2c178:	00014dac 	andeq	r4, r1, ip, lsr #27
	...
   2c23c:	000139bc 			; <UNDEFINED> instruction: 0x000139bc
	...
   2c250:	00013328 	andeq	r3, r1, r8, lsr #6
   2c254:	000143d8 	ldrdeq	r4, [r1], -r8
	...
   2c284:	00014ea4 	andeq	r4, r1, r4, lsr #29
	...
   2c298:	00014bbc 			; <UNDEFINED> instruction: 0x00014bbc
	...
   2c2c8:	0001497c 	andeq	r4, r1, ip, ror r9
	...
   2c30c:	00014cd4 	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
	...
   2c37c:	00014bec 	andeq	r4, r1, ip, ror #23
	...
   2c38c:	000149a0 	andeq	r4, r1, r0, lsr #19
	...
   2c3c4:	00014a0c 	andeq	r4, r1, ip, lsl #20
	...
   2c3ec:	00014a30 	andeq	r4, r1, r0, lsr sl
	...
   2c40c:	000142e4 	andeq	r4, r1, r4, ror #5
	...
   2c43c:	000149e8 	andeq	r4, r1, r8, ror #19
	...
   2c514:	00012edc 	ldrdeq	r2, [r1], -ip
	...
   2c5d0:	00013610 	andeq	r3, r1, r0, lsl r6
	...

0002c650 <sparse_syscall_table>:
static sparse_syscall_t sparse_syscall_table[] = {
   2c650:	000f0001 	andeq	r0, pc, r1
   2c654:	00000000 	andeq	r0, r0, r0
   2c658:	000f0002 	andeq	r0, pc, r2
   2c65c:	00000000 	andeq	r0, r0, r0
   2c660:	000f0003 	andeq	r0, pc, r3
   2c664:	00000000 	andeq	r0, r0, r0
   2c668:	000f0004 	andeq	r0, pc, r4
   2c66c:	00000000 	andeq	r0, r0, r0
   2c670:	000f0005 	andeq	r0, pc, r5
   2c674:	0001419c 	muleq	r1, ip, r1

0002c678 <morecore_size>:
size_t morecore_size = CONFIG_LIB_SEL4_MUSLC_SYS_MORECORE_BYTES;
   2c678:	00100000 	andseq	r0, r0, r0

0002c67c <morecore_base>:
static uintptr_t morecore_base = (uintptr_t) &morecore_area;
   2c67c:	00049000 	andeq	r9, r4, r0

0002c680 <morecore_top>:
uintptr_t morecore_top = (uintptr_t) &morecore_area[CONFIG_LIB_SEL4_MUSLC_SYS_MORECORE_BYTES];
   2c680:	00149000 	andseq	r9, r4, r0

0002c684 <console_device>:
	...
   2c690:	000183fc 	strdeq	r8, [r1], -ip
	...

0002c74c <console>:
static struct ps_chardevice *console = &console_device;
   2c74c:	0002c684 	andeq	ip, r2, r4, lsl #13

0002c750 <arm_gic_compatible_list>:

char *arm_gic_compatible_list[] = {
   2c750:	000294d0 	ldrdeq	r9, [r2], -r0
   2c754:	000294dc 	ldrdeq	r9, [r2], -ip
   2c758:	000294f0 	strdeq	r9, [r2], -r0
   2c75c:	00000000 	andeq	r0, r0, r0

0002c760 <arm_gic>:
    "arm,gic-400",
    "arm,cortex-a9-gic",
    "arm,cortex-a15-gic",
    NULL
};
DEFINE_IRQCHIP_PARSER(arm_gic, arm_gic_compatible_list, parse_arm_gic_interrupts);
   2c760:	0002c750 	andeq	ip, r2, r0, asr r7
   2c764:	00019994 	muleq	r1, r4, r9

0002c768 <arm_gicv3_compatible_list>:

char *arm_gicv3_compatible_list[] = {
   2c768:	000297bc 			; <UNDEFINED> instruction: 0x000297bc
   2c76c:	00000000 	andeq	r0, r0, r0

0002c770 <arm_gicv3>:
    "arm,gic-v3",
    NULL
};
DEFINE_IRQCHIP_PARSER(arm_gicv3, arm_gicv3_compatible_list, parse_arm_gicv3_interrupts);
   2c770:	0002c768 	andeq	ip, r2, r8, ror #14
   2c774:	00019dd8 	ldrdeq	r9, [r1], -r8

0002c778 <ti_omap3_compatible_list>:

char *ti_omap3_compatible_list[] = {
   2c778:	000299c4 	andeq	r9, r2, r4, asr #19
   2c77c:	000299d4 	ldrdeq	r9, [r2], -r4
   2c780:	00000000 	andeq	r0, r0, r0

0002c784 <ti_omap3>:
    "ti,omap3-intc",
    /* in the kernel's hardware.yml, these are equivalent */
    "ti,am33xx-intc",
    NULL
};
DEFINE_IRQCHIP_PARSER(ti_omap3, ti_omap3_compatible_list, parse_ti_omap3_interrupts);
   2c784:	0002c778 	andeq	ip, r2, r8, ror r7
   2c788:	0001a48c 	andeq	sl, r1, ip, lsl #9

0002c78c <tegra_ictlr_compatible_list>:

char *tegra_ictlr_compatible_list[] = {
   2c78c:	00029ac0 	andeq	r9, r2, r0, asr #21
   2c790:	00029ad8 	ldrdeq	r9, [r2], -r8
   2c794:	00029af0 	strdeq	r9, [r2], -r0
   2c798:	00000000 	andeq	r0, r0, r0

0002c79c <tegra_ictlr>:
    "nvidia,tegra210-ictlr",
    "nvidia,tegra124-ictlr",
    "nvidia,tegra30-ictlr",
    NULL
};
DEFINE_IRQCHIP_PARSER(tegra_ictlr, tegra_ictlr_compatible_list, parse_tegra_ictlr_interrupts);
   2c79c:	0002c78c 	andeq	ip, r2, ip, lsl #15
   2c7a0:	0001a624 	andeq	sl, r1, r4, lsr #12

0002c7a4 <g_mem_width>:
static size_t g_mem_width = ZF_LOG_MEM_WIDTH;
   2c7a4:	00000020 	andeq	r0, r0, r0, lsr #32

0002c7a8 <g_output_cb>:
static zf_log_output_cb g_output_cb = output_callback;
   2c7a8:	0001d83c 	andeq	sp, r1, ip, lsr r8

0002c7ac <__stderr_used>:
   2c7ac:	0002c7b0 			; <UNDEFINED> instruction: 0x0002c7b0

0002c7b0 <f>:
   2c7b0:	00000005 	andeq	r0, r0, r5
	...
   2c7bc:	00022908 	andeq	r2, r2, r8, lsl #18
	...
   2c7d4:	0002298c 	andeq	r2, r2, ip, lsl #19
   2c7d8:	00022934 	andeq	r2, r2, r4, lsr r9
   2c7dc:	00048558 	andeq	r8, r4, r8, asr r5
	...
   2c7ec:	00000002 	andeq	r0, r0, r2
	...
   2c7f8:	ff000000 			; <UNDEFINED> instruction: 0xff000000
   2c7fc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...

0002c840 <__stdout_used>:
   2c840:	0002c848 	andeq	ip, r2, r8, asr #16
   2c844:	00000000 	andeq	r0, r0, r0

0002c848 <f>:
   2c848:	00000005 	andeq	r0, r0, r5
	...
   2c854:	00022908 	andeq	r2, r2, r8, lsl #18
	...
   2c86c:	00022a7c 	andeq	r2, r2, ip, ror sl
   2c870:	00022934 	andeq	r2, r2, r4, lsr r9
   2c874:	00048560 	andeq	r8, r4, r0, ror #10
   2c878:	00000400 	andeq	r0, r0, r0, lsl #8
	...
   2c884:	00000001 	andeq	r0, r0, r1
	...
   2c890:	0a000000 	beq	2c898 <f+0x50>
   2c894:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
	...

Disassembly of section __vsyscall:

0002c8d8 <__vsyscall_ptr>:
   2c8d8:	000147d4 	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>

Disassembly of section _ps_irqchips:

0002c8dc <arm_gic_ptr>:
   2c8dc:	0002c760 	andeq	ip, r2, r0, ror #14

0002c8e0 <arm_gicv3_ptr>:
   2c8e0:	0002c770 	andeq	ip, r2, r0, ror r7

0002c8e4 <ti_omap3_ptr>:
   2c8e4:	0002c784 	andeq	ip, r2, r4, lsl #15

0002c8e8 <tegra_ictlr_ptr>:
   2c8e8:	0002c79c 	muleq	r2, ip, r7

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__bss_end__+0xf87cdc>
   4:	62552820 	subsvs	r2, r5, #32, 16	; 0x200000
   8:	75746e75 	ldrbvc	r6, [r4, #-3701]!	; 0xfffff18b
   c:	342e3920 	strtcc	r3, [lr], #-2336	; 0xfffff6e0
  10:	312d302e 			; <UNDEFINED> instruction: 0x312d302e
  14:	6e756275 	mrcvs	2, 3, r6, cr5, cr5, {3}
  18:	7e317574 	mrcvc	5, 1, r7, cr1, cr4, {3}
  1c:	302e3032 	eorcc	r3, lr, r2, lsr r0
  20:	29322e34 	ldmdbcs	r2!, {r2, r4, r5, r9, sl, fp, sp}
  24:	342e3920 	strtcc	r3, [lr], #-2336	; 0xfffff6e0
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	13041202 	movwne	r1, #16898	; 0x4202
  20:	15011401 	strne	r1, [r1, #-1025]	; 0xfffffbff
  24:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	00010144 	andeq	r0, r1, r4, asr #2
  14:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  20:	00000024 	andeq	r0, r0, r4, lsr #32
  24:	00260002 	eoreq	r0, r6, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	00010118 	andeq	r0, r1, r8, lsl r1
  34:	00000008 	andeq	r0, r0, r8
  38:	00027648 	andeq	r7, r2, r8, asr #12
  3c:	00000008 	andeq	r0, r0, r8
	...
  48:	0000001c 	andeq	r0, r0, ip, lsl r0
  4c:	00480002 	subeq	r0, r8, r2
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	000101e8 	andeq	r0, r1, r8, ror #3
  5c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
  68:	0000001c 	andeq	r0, r0, ip, lsl r0
  6c:	01170002 	tsteq	r7, r2
  70:	00040000 	andeq	r0, r4, r0
  74:	00000000 	andeq	r0, r0, r0
  78:	00010218 	andeq	r0, r1, r8, lsl r2
  7c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
  88:	0000001c 	andeq	r0, r0, ip, lsl r0
  8c:	013d0002 	teqeq	sp, r2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	00010228 	andeq	r0, r1, r8, lsr #4
  9c:	000000b8 	strheq	r0, [r0], -r8
	...
  a8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ac:	04170002 	ldreq	r0, [r7], #-2
  b0:	00040000 	andeq	r0, r4, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	000102e0 	andeq	r0, r1, r0, ror #5
  bc:	0000005c 	andeq	r0, r0, ip, asr r0
	...
  c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  cc:	06ec0002 	strbteq	r0, [ip], r2
  d0:	00040000 	andeq	r0, r4, r0
  d4:	00000000 	andeq	r0, r0, r0
  d8:	0001033c 	andeq	r0, r1, ip, lsr r3
  dc:	0000017c 	andeq	r0, r0, ip, ror r1
	...
  e8:	0000001c 	andeq	r0, r0, ip, lsl r0
  ec:	0d4d0002 	stcleq	0, cr0, [sp, #-8]
  f0:	00040000 	andeq	r0, r4, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	000104b8 			; <UNDEFINED> instruction: 0x000104b8
  fc:	00000eec 	andeq	r0, r0, ip, ror #29
	...
 108:	0000001c 	andeq	r0, r0, ip, lsl r0
 10c:	1ea00002 	cdpne	0, 10, cr0, cr0, cr2, {0}
 110:	00040000 	andeq	r0, r4, r0
 114:	00000000 	andeq	r0, r0, r0
 118:	000113a4 	andeq	r1, r1, r4, lsr #7
 11c:	00000144 	andeq	r0, r0, r4, asr #2
	...
 128:	0000001c 	andeq	r0, r0, ip, lsl r0
 12c:	1fd30002 	svcne	0x00d30002
 130:	00040000 	andeq	r0, r4, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	000114e8 	andeq	r1, r1, r8, ror #9
 13c:	0000038c 	andeq	r0, r0, ip, lsl #7
	...
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	20f30002 	rscscs	r0, r3, r2
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	00011874 	andeq	r1, r1, r4, ror r8
 15c:	00000a64 	andeq	r0, r0, r4, ror #20
	...
 168:	0000001c 	andeq	r0, r0, ip, lsl r0
 16c:	222d0002 	eorcs	r0, sp, #2
 170:	00040000 	andeq	r0, r4, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	000122d8 	ldrdeq	r2, [r1], -r8
 17c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 188:	0000001c 	andeq	r0, r0, ip, lsl r0
 18c:	22850002 	addcs	r0, r5, #2
 190:	00040000 	andeq	r0, r4, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	000122fc 	strdeq	r2, [r1], -ip
 19c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	22ab0002 	adccs	r0, fp, #2
 1b0:	00040000 	andeq	r0, r4, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	0001230c 	andeq	r2, r1, ip, lsl #6
 1bc:	00000058 	andeq	r0, r0, r8, asr r0
	...
 1c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1cc:	24de0002 	ldrbcs	r0, [lr], #2
 1d0:	00040000 	andeq	r0, r4, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	00012364 	andeq	r2, r1, r4, ror #6
 1dc:	00000054 	andeq	r0, r0, r4, asr r0
	...
 1e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ec:	29fa0002 	ldmibcs	sl!, {r1}^
 1f0:	00040000 	andeq	r0, r4, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	000123b8 			; <UNDEFINED> instruction: 0x000123b8
 1fc:	000001ec 	andeq	r0, r0, ip, ror #3
	...
 208:	0000001c 	andeq	r0, r0, ip, lsl r0
 20c:	2e950002 	cdpcs	0, 9, cr0, cr5, cr2, {0}
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	000125a4 	andeq	r2, r1, r4, lsr #11
 21c:	00001644 	andeq	r1, r0, r4, asr #12
	...
 228:	0000001c 	andeq	r0, r0, ip, lsl r0
 22c:	3e940002 	cdpcc	0, 9, cr0, cr4, cr2, {0}
 230:	00040000 	andeq	r0, r4, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	00013be8 	andeq	r3, r1, r8, ror #23
 23c:	00000d74 	andeq	r0, r0, r4, ror sp
	...
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	4cd10002 	ldclmi	0, cr0, [r1], {2}
 250:	00040000 	andeq	r0, r4, r0
 254:	00000000 	andeq	r0, r0, r0
 258:	0001495c 	andeq	r4, r1, ip, asr r9
 25c:	000000f8 	strdeq	r0, [r0], -r8
	...
 268:	0000001c 	andeq	r0, r0, ip, lsl r0
 26c:	50e40002 	rscpl	r0, r4, r2
 270:	00040000 	andeq	r0, r4, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	00014a54 	andeq	r4, r1, r4, asr sl
 27c:	000003c8 	andeq	r0, r0, r8, asr #7
	...
 288:	0000001c 	andeq	r0, r0, ip, lsl r0
 28c:	58e90002 	stmiapl	r9!, {r1}^
 290:	00040000 	andeq	r0, r4, r0
 294:	00000000 	andeq	r0, r0, r0
 298:	00014e1c 	andeq	r4, r1, ip, lsl lr
 29c:	00000048 	andeq	r0, r0, r8, asr #32
	...
 2a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ac:	59ed0002 	stmibpl	sp!, {r1}^
 2b0:	00040000 	andeq	r0, r4, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	00014e64 	andeq	r4, r1, r4, ror #28
 2bc:	00000064 	andeq	r0, r0, r4, rrx
	...
 2c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2cc:	5d0c0002 	stcpl	0, cr0, [ip, #-8]
 2d0:	00040000 	andeq	r0, r4, r0
 2d4:	00000000 	andeq	r0, r0, r0
 2d8:	00014ec8 	andeq	r4, r1, r8, asr #29
 2dc:	0000169c 	muleq	r0, ip, r6
	...
 2e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ec:	897a0002 	ldmdbhi	sl!, {r1}^
 2f0:	00040000 	andeq	r0, r4, r0
 2f4:	00000000 	andeq	r0, r0, r0
 2f8:	00016564 	andeq	r6, r1, r4, ror #10
 2fc:	00001c98 	muleq	r0, r8, ip
	...
 308:	0000001c 	andeq	r0, r0, ip, lsl r0
 30c:	aa4b0002 	bge	12c031c <__bss_end__+0x11772d4>
 310:	00040000 	andeq	r0, r4, r0
 314:	00000000 	andeq	r0, r0, r0
 318:	000181fc 	strdeq	r8, [r1], -ip
 31c:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
	...
 328:	0000001c 	andeq	r0, r0, ip, lsl r0
 32c:	c1810002 	orrgt	r0, r1, r2
 330:	00040000 	andeq	r0, r4, r0
 334:	00000000 	andeq	r0, r0, r0
 338:	000185b8 			; <UNDEFINED> instruction: 0x000185b8
 33c:	00000364 	andeq	r0, r0, r4, ror #6
	...
 348:	0000001c 	andeq	r0, r0, ip, lsl r0
 34c:	cb300002 	blgt	c0035c <__bss_end__+0xab7314>
 350:	00040000 	andeq	r0, r4, r0
 354:	00000000 	andeq	r0, r0, r0
 358:	0001891c 	andeq	r8, r1, ip, lsl r9
 35c:	00000140 	andeq	r0, r0, r0, asr #2
	...
 368:	0000001c 	andeq	r0, r0, ip, lsl r0
 36c:	dc8c0002 	stcle	0, cr0, [ip], {2}
 370:	00040000 	andeq	r0, r4, r0
 374:	00000000 	andeq	r0, r0, r0
 378:	00018a5c 	andeq	r8, r1, ip, asr sl
 37c:	00000c48 	andeq	r0, r0, r8, asr #24
	...
 388:	0000001c 	andeq	r0, r0, ip, lsl r0
 38c:	f3dc0002 	vaddl.u16	q8, d12, d2
 390:	00040000 	andeq	r0, r4, r0
 394:	00000000 	andeq	r0, r0, r0
 398:	000196a4 	andeq	r9, r1, r4, lsr #13
 39c:	00000120 	andeq	r0, r0, r0, lsr #2
	...
 3a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ac:	04e80002 	strbteq	r0, [r8], #2
 3b0:	00040001 	andeq	r0, r4, r1
 3b4:	00000000 	andeq	r0, r0, r0
 3b8:	000197c4 	andeq	r9, r1, r4, asr #15
 3bc:	00000444 	andeq	r0, r0, r4, asr #8
	...
 3c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3cc:	0b790002 	bleq	1e403dc <__bss_end__+0x1cf7394>
 3d0:	00040001 	andeq	r0, r4, r1
 3d4:	00000000 	andeq	r0, r0, r0
 3d8:	00019c08 	andeq	r9, r1, r8, lsl #24
 3dc:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
	...
 3e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3ec:	12710002 	rsbsne	r0, r1, #2
 3f0:	00040001 	andeq	r0, r4, r1
 3f4:	00000000 	andeq	r0, r0, r0
 3f8:	0001a2bc 			; <UNDEFINED> instruction: 0x0001a2bc
 3fc:	00000368 	andeq	r0, r0, r8, ror #6
	...
 408:	0000001c 	andeq	r0, r0, ip, lsl r0
 40c:	18590002 	ldmdane	r9, {r1}^
 410:	00040001 	andeq	r0, r4, r1
 414:	00000000 	andeq	r0, r0, r0
 418:	0001a624 	andeq	sl, r1, r4, lsr #12
 41c:	00000158 	andeq	r0, r0, r8, asr r1
	...
 428:	0000001c 	andeq	r0, r0, ip, lsl r0
 42c:	1d510002 	ldclne	0, cr0, [r1, #-8]
 430:	00040001 	andeq	r0, r4, r1
 434:	00000000 	andeq	r0, r0, r0
 438:	0001a77c 	andeq	sl, r1, ip, ror r7
 43c:	000022fc 	strdeq	r2, [r0], -ip
	...
 448:	0000001c 	andeq	r0, r0, ip, lsl r0
 44c:	33170002 	tstcc	r7, #2
 450:	00040001 	andeq	r0, r4, r1
 454:	00000000 	andeq	r0, r0, r0
 458:	0001ca78 	andeq	ip, r1, r8, ror sl
 45c:	00000d6c 	andeq	r0, r0, ip, ror #26
	...
 468:	0000001c 	andeq	r0, r0, ip, lsl r0
 46c:	398f0002 	stmibcc	pc, {r1}	; <UNPREDICTABLE>
 470:	00040001 	andeq	r0, r4, r1
 474:	00000000 	andeq	r0, r0, r0
 478:	0001d7e4 	andeq	sp, r1, r4, ror #15
 47c:	00000a78 	andeq	r0, r0, r8, ror sl
	...
 488:	00000024 	andeq	r0, r0, r4, lsr #32
 48c:	43020002 	movwmi	r0, #8194	; 0x2002
 490:	00040001 	andeq	r0, r4, r1
 494:	00000000 	andeq	r0, r0, r0
 498:	00010120 	andeq	r0, r1, r0, lsr #2
 49c:	00000008 	andeq	r0, r0, r8
 4a0:	00027650 	andeq	r7, r2, r0, asr r6
 4a4:	00000008 	andeq	r0, r0, r8
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000022 	andeq	r0, r0, r2, lsr #32
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000000 	andeq	r0, r0, r0
      10:	00010144 	andeq	r0, r1, r4, asr #2
      14:	00010158 	andeq	r0, r1, r8, asr r1
      18:	00000000 	andeq	r0, r0, r0
      1c:	0000005f 	andeq	r0, r0, pc, asr r0
      20:	0000009e 	muleq	r0, lr, r0
      24:	001e8001 	andseq	r8, lr, r1
      28:	00020000 	andeq	r0, r2, r0
      2c:	00000014 	andeq	r0, r0, r4, lsl r0
      30:	00920104 	addseq	r0, r2, r4, lsl #2
      34:	00000000 	andeq	r0, r0, r0
      38:	00aa0000 	adceq	r0, sl, r0
      3c:	005f0000 	subseq	r0, pc, r0
      40:	009e0000 	addseq	r0, lr, r0
      44:	80010000 	andhi	r0, r1, r0
      48:	000000cb 	andeq	r0, r0, fp, asr #1
      4c:	00260004 	eoreq	r0, r6, r4
      50:	01040000 	mrseq	r0, (UNDEF: 4)
      54:	00000117 	andeq	r0, r0, r7, lsl r1
      58:	0001e20c 	andeq	lr, r1, ip, lsl #4
      5c:	00005f00 	andeq	r5, r0, r0, lsl #30
      60:	0101e800 	tsteq	r1, r0, lsl #16
      64:	00003000 	andeq	r3, r0, r0
      68:	00013100 	andeq	r3, r1, r0, lsl #2
      6c:	07040200 	streq	r0, [r4, -r0, lsl #4]
      70:	000003c5 	andeq	r0, r0, r5, asr #7
      74:	69050403 	stmdbvs	r5, {r0, r1, sl}
      78:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
      7c:	01090508 	tsteq	r9, r8, lsl #10
      80:	2a040000 	bcs	100088 <morecore_area+0xb7088>
      84:	03000002 	movweq	r0, #2
      88:	4719016d 	ldrmi	r0, [r9, -sp, ror #2]
      8c:	05000000 	streq	r0, [r0, #-0]
      90:	00000226 	andeq	r0, r0, r6, lsr #4
      94:	35080102 	strcc	r0, [r8, #-258]	; 0xfffffefe
      98:	02000003 	andeq	r0, r0, #3
      9c:	15f80408 	ldrbne	r0, [r8, #1032]!	; 0x408
      a0:	2f060000 	svccs	0x00060000
      a4:	02000002 	andeq	r0, r0, #2
      a8:	006c1437 	rsbeq	r1, ip, r7, lsr r4
      ac:	04070000 	streq	r0, [r7], #-0
      b0:	0000003a 	andeq	r0, r0, sl, lsr r0
      b4:	00006608 	andeq	r6, r0, r8, lsl #12
      b8:	023c0600 	eorseq	r0, ip, #0, 12
      bc:	38020000 	stmdacc	r2, {}	; <UNPREDICTABLE>
      c0:	00006c14 	andeq	r6, r0, r4, lsl ip
      c4:	02350600 	eorseq	r0, r5, #0, 12
      c8:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
      cc:	00006c14 	andeq	r6, r0, r4, lsl ip
      d0:	04f50900 	ldrbteq	r0, [r5], #2304	; 0x900
      d4:	05010000 	streq	r0, [r1, #-0]
      d8:	00002c05 	andeq	r2, r0, r5, lsl #24
      dc:	0101e800 	tsteq	r1, r0, lsl #16
      e0:	00003000 	andeq	r3, r0, r0
      e4:	c29c0100 	addsgt	r0, ip, #0, 2
      e8:	0a000000 	beq	f0 <errno+0xec>
      ec:	00000dbe 			; <UNDEFINED> instruction: 0x00000dbe
      f0:	2c0e0501 	cfstr32cs	mvfx0, [lr], {1}
      f4:	02000000 	andeq	r0, r0, #0
      f8:	e10a7491 			; <UNDEFINED> instruction: 0xe10a7491
      fc:	0100000d 	tsteq	r0, sp
     100:	00c21a05 	sbceq	r1, r2, r5, lsl #20
     104:	91020000 	mrsls	r0, (UNDEF: 2)
     108:	04070070 	streq	r0, [r7], #-112	; 0xffffff90
     10c:	000000c8 	andeq	r0, r0, r8, asr #1
     110:	004c0407 	subeq	r0, ip, r7, lsl #8
     114:	22000000 	andcs	r0, r0, #0
     118:	02000000 	andeq	r0, r0, #0
     11c:	0000ba00 	andeq	fp, r0, r0, lsl #20
     120:	0f010400 	svceq	0x00010400
     124:	18000002 	stmdane	r0, {r1}
     128:	28000102 	stmdacs	r0, {r1, r8}
     12c:	43000102 	movwmi	r0, #258	; 0x102
     130:	5f000002 	svcpl	0x00000002
     134:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
     138:	01000000 	mrseq	r0, (UNDEF: 0)
     13c:	0002d680 	andeq	sp, r2, r0, lsl #13
     140:	ce000400 	cfcpysgt	mvf0, mvf0
     144:	04000000 	streq	r0, [r0], #-0
     148:	00011701 	andeq	r1, r1, r1, lsl #14
     14c:	04190c00 	ldreq	r0, [r9], #-3072	; 0xfffff400
     150:	005f0000 	subseq	r0, pc, r0
     154:	02280000 	eoreq	r0, r8, #0
     158:	00b80001 	adcseq	r0, r8, r1
     15c:	02a50000 	adceq	r0, r5, #0
     160:	01020000 	mrseq	r0, (UNDEF: 2)
     164:	00032e06 	andeq	r2, r3, r6, lsl #28
     168:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     16c:	00000466 	andeq	r0, r0, r6, ror #8
     170:	69050403 	stmdbvs	r5, {r0, r1, sl}
     174:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     178:	01090508 	tsteq	r9, r8, lsl #10
     17c:	01020000 	mrseq	r0, (UNDEF: 2)
     180:	00032c08 	andeq	r2, r3, r8, lsl #24
     184:	07020200 	streq	r0, [r2, -r0, lsl #4]
     188:	00000352 	andeq	r0, r0, r2, asr r3
     18c:	c5070402 	strgt	r0, [r7, #-1026]	; 0xfffffbfe
     190:	02000003 	andeq	r0, r0, #3
     194:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
     198:	04020000 	streq	r0, [r2], #-0
     19c:	00010e05 	andeq	r0, r1, r5, lsl #28
     1a0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     1a4:	000003c0 	andeq	r0, r0, r0, asr #7
     1a8:	00030d04 	andeq	r0, r3, r4, lsl #26
     1ac:	253d0200 	ldrcs	r0, [sp, #-512]!	; 0xfffffe00
     1b0:	0000004f 	andeq	r0, r0, pc, asr #32
     1b4:	00037204 	andeq	r7, r3, r4, lsl #4
     1b8:	15710200 	ldrbne	r0, [r1, #-512]!	; 0xfffffe00
     1bc:	0000006b 	andeq	r0, r0, fp, rrx
     1c0:	0003d204 	andeq	sp, r3, r4, lsl #4
     1c4:	13800200 	orrne	r0, r0, #0, 4
     1c8:	00000077 	andeq	r0, r0, r7, ror r0
     1cc:	00039205 	andeq	r9, r3, r5, lsl #4
     1d0:	4f040700 	svcmi	0x00040700
     1d4:	03000000 	movweq	r0, #0
     1d8:	00c60e08 	sbceq	r0, r6, r8, lsl #28
     1dc:	19060000 	stmdbne	r6, {}	; <UNPREDICTABLE>
     1e0:	00000003 	andeq	r0, r0, r3
     1e4:	00048006 	andeq	r8, r4, r6
     1e8:	f8060100 			; <UNDEFINED> instruction: 0xf8060100
     1ec:	02000003 	andeq	r0, r0, #3
     1f0:	00048f06 	andeq	r8, r4, r6, lsl #30
     1f4:	cd060300 	stcgt	3, cr0, [r6, #-0]
     1f8:	04000004 	streq	r0, [r0], #-4
     1fc:	0002bd06 	andeq	fp, r2, r6, lsl #26
     200:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
     204:	000003dc 	ldrdeq	r0, [r0], -ip
     208:	8f031303 	svchi	0x00031303
     20c:	07000000 	streq	r0, [r0, -r0]
     210:	000000c6 	andeq	r0, r0, r6, asr #1
     214:	0004b408 	andeq	fp, r4, r8, lsl #8
     218:	59150300 	ldmdbpl	r5, {r8, r9}
     21c:	000000d2 	ldrdeq	r0, [r0], -r2
     220:	76680305 	strbtvc	r0, [r8], -r5, lsl #6
     224:	6b090002 	blvs	240234 <__bss_end__+0xf71ec>
     228:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
     22c:	0a000000 	beq	234 <errno+0x230>
     230:	0000004f 	andeq	r0, r0, pc, asr #32
     234:	a70b0000 	strge	r0, [fp, -r0]
     238:	04000002 	streq	r0, [r0], #-2
     23c:	08013804 	stmdaeq	r1, {r2, fp, ip, sp}
     240:	00000116 	andeq	r0, r0, r6, lsl r1
     244:	0003b00c 	andeq	fp, r3, ip
     248:	01390400 	teqeq	r9, r0, lsl #8
     24c:	0000e911 	andeq	lr, r0, r1, lsl r9
     250:	0d000000 	stceq	0, cr0, [r0, #-0]
     254:	0000039d 	muleq	r0, sp, r3
     258:	21013b04 	tstcs	r1, r4, lsl #22
     25c:	000000f9 	strdeq	r0, [r0], -r9
     260:	0004700e 	andeq	r7, r4, lr
     264:	05020000 	streq	r0, [r2, #-0]
     268:	0192100b 	orrseq	r1, r2, fp
     26c:	740f0000 	strvc	r0, [pc], #-0	; 274 <errno+0x270>
     270:	05006761 	streq	r6, [r0, #-1889]	; 0xfffff89f
     274:	0116180c 	tsteq	r6, ip, lsl #16
     278:	0f000000 	svceq	0x00000000
     27c:	0067736d 	rsbeq	r7, r7, sp, ror #6
     280:	920f0d05 	andls	r0, pc, #320	; 0x140
     284:	04000001 	streq	r0, [r0], #-1
     288:	00033a10 	andeq	r3, r3, r0, lsl sl
     28c:	0f0e0500 	svceq	0x000e0500
     290:	00000077 	andeq	r0, r0, r7, ror r0
     294:	7c1001e4 	ldfvcs	f0, [r0], {228}	; 0xe4
     298:	05000003 	streq	r0, [r0, #-3]
     29c:	01a20f0f 			; <UNDEFINED> instruction: 0x01a20f0f
     2a0:	01e80000 	mvneq	r0, r0
     2a4:	00036510 	andeq	r6, r3, r0, lsl r5
     2a8:	0f100500 	svceq	0x00100500
     2ac:	00000083 	andeq	r0, r0, r3, lsl #1
     2b0:	001001f4 			; <UNDEFINED> instruction: 0x001001f4
     2b4:	05000003 	streq	r0, [r0, #-3]
     2b8:	00830f11 	addeq	r0, r3, r1, lsl pc
     2bc:	01f80000 	mvnseq	r0, r0
     2c0:	00040c10 	andeq	r0, r4, r0, lsl ip
     2c4:	0f120500 	svceq	0x00120500
     2c8:	00000077 	andeq	r0, r0, r7, ror r0
     2cc:	090001fc 	stmdbeq	r0, {r2, r3, r4, r5, r6, r7, r8}
     2d0:	00000077 	andeq	r0, r0, r7, ror r0
     2d4:	000001a2 	andeq	r0, r0, r2, lsr #3
     2d8:	00004f0a 	andeq	r4, r0, sl, lsl #30
     2dc:	09007700 	stmdbeq	r0, {r8, r9, sl, ip, sp, lr}
     2e0:	00000077 	andeq	r0, r0, r7, ror r0
     2e4:	000001b2 			; <UNDEFINED> instruction: 0x000001b2
     2e8:	00004f0a 	andeq	r4, r0, sl, lsl #30
     2ec:	11000200 	mrsne	r0, R8_usr
     2f0:	00000343 	andeq	r0, r0, r3, asr #6
     2f4:	23031305 	movwcs	r1, #13061	; 0x3305
     2f8:	00000001 	andeq	r0, r0, r1
     2fc:	02e81202 	rsceq	r1, r8, #536870912	; 0x20000000
     300:	0d070000 	stceq	0, cr0, [r7, #-0]
     304:	0001cc21 	andeq	ip, r1, r1, lsr #24
     308:	b2041300 	andlt	r1, r4, #0, 6
     30c:	14000001 	strne	r0, [r0], #-1
     310:	05200604 	streq	r0, [r0, #-1540]!	; 0xfffff9fc
     314:	00000200 	andeq	r0, r0, r0, lsl #4
     318:	0003f215 	andeq	pc, r3, r5, lsl r2	; <UNPREDICTABLE>
     31c:	0e210600 	cfmadda32eq	mvax0, mvax0, mvfx1, mvfx0
     320:	0000005d 	andeq	r0, r0, sp, asr r0
     324:	0003ec15 	andeq	lr, r3, r5, lsl ip
     328:	0f220600 	svceq	0x00220600
     32c:	00000200 	andeq	r0, r0, r0, lsl #4
     330:	0004ae15 	andeq	sl, r4, r5, lsl lr
     334:	10230600 	eorne	r0, r3, r0, lsl #12
     338:	00000203 	andeq	r0, r0, r3, lsl #4
     33c:	17041600 	strne	r1, [r4, -r0, lsl #12]
     340:	02020413 	andeq	r0, r2, #318767104	; 0x13000000
     344:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
     348:	2d091e06 	stccs	14, cr1, [r9, #-24]	; 0xffffffe8
     34c:	19000002 	stmdbne	r0, {r1}
     350:	0000038b 	andeq	r0, r0, fp, lsl #7
     354:	33091f06 	movwcc	r1, #40710	; 0x9f06
     358:	00000000 	andeq	r0, r0, r0
     35c:	0003b619 	andeq	fp, r3, r9, lsl r6
     360:	07240600 	streq	r0, [r4, -r0, lsl #12]!
     364:	000001d2 	ldrdeq	r0, [r0], -r2
     368:	a7040004 	strge	r0, [r4, -r4]
     36c:	06000004 	streq	r0, [r0], -r4
     370:	02090325 	andeq	r0, r9, #-1811939328	; 0x94000000
     374:	2d070000 	stccs	0, cr0, [r7, #-0]
     378:	1a000002 	bne	388 <errno+0x384>
     37c:	000002d9 	ldrdeq	r0, [r0], -r9
     380:	28061801 	stmdacs	r6, {r0, fp, ip}
     384:	b8000102 	stmdalt	r0, {r1, r8}
     388:	01000000 	mrseq	r0, (UNDEF: 0)
     38c:	0002af9c 	muleq	r2, ip, pc	; <UNPREDICTABLE>
     390:	02fa1b00 	rscseq	r1, sl, #0, 22
     394:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
     398:	0002af21 	andeq	sl, r2, r1, lsr #30
     39c:	5c910200 	lfmpl	f0, 4, [r1], {0}
     3a0:	000dbe08 	andeq	fp, sp, r8, lsl #28
     3a4:	131b0100 	tstne	fp, #0, 2
     3a8:	00000064 	andeq	r0, r0, r4, rrx
     3ac:	08709102 	ldmdaeq	r0!, {r1, r8, ip, pc}^
     3b0:	00000de1 	andeq	r0, r0, r1, ror #27
     3b4:	b6181e01 	ldrlt	r1, [r8], -r1, lsl #28
     3b8:	02000002 	andeq	r0, r0, #2
     3bc:	f0086c91 			; <UNDEFINED> instruction: 0xf0086c91
     3c0:	0100000a 	tsteq	r0, sl
     3c4:	02b61821 	adcseq	r1, r6, #2162688	; 0x210000
     3c8:	91020000 	mrsls	r0, (UNDEF: 2)
     3cc:	02b80868 	adcseq	r0, r8, #104, 16	; 0x680000
     3d0:	22010000 	andcs	r0, r1, #0
     3d4:	00003309 	andeq	r3, r0, r9, lsl #6
     3d8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     3dc:	000d0408 	andeq	r0, sp, r8, lsl #8
     3e0:	13290100 			; <UNDEFINED> instruction: 0x13290100
     3e4:	000002d3 	ldrdeq	r0, [r0], -r3
     3e8:	00649102 	rsbeq	r9, r4, r2, lsl #2
     3ec:	02b50413 	adcseq	r0, r5, #318767104	; 0x13000000
     3f0:	131c0000 	tstne	ip, #0
     3f4:	0002c204 	andeq	ip, r2, r4, lsl #4
     3f8:	ce041300 	cdpgt	3, 0, cr1, cr4, cr0, {0}
     3fc:	07000002 	streq	r0, [r0, -r2]
     400:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     404:	35080102 	strcc	r0, [r8, #-258]	; 0xfffffefe
     408:	07000003 	streq	r0, [r0, -r3]
     40c:	000002c7 	andeq	r0, r0, r7, asr #5
     410:	02390413 	eorseq	r0, r9, #318767104	; 0x13000000
     414:	d1000000 	mrsle	r0, (UNDEF: 0)
     418:	04000002 	streq	r0, [r0], #-2
     41c:	00025f00 	andeq	r5, r2, r0, lsl #30
     420:	17010400 	strne	r0, [r1, -r0, lsl #8]
     424:	0c000001 	stceq	0, cr0, [r0], {1}
     428:	000004fa 	strdeq	r0, [r0], -sl
     42c:	0000005f 	andeq	r0, r0, pc, asr r0
     430:	000102e0 	andeq	r0, r1, r0, ror #5
     434:	0000005c 	andeq	r0, r0, ip, asr r0
     438:	00000461 	andeq	r0, r0, r1, ror #8
     43c:	2e060102 	adfcss	f0, f6, f2
     440:	02000003 	andeq	r0, r0, #3
     444:	032c0801 			; <UNDEFINED> instruction: 0x032c0801
     448:	02020000 	andeq	r0, r2, #0
     44c:	00046605 	andeq	r6, r4, r5, lsl #12
     450:	07020200 	streq	r0, [r2, -r0, lsl #4]
     454:	00000352 	andeq	r0, r0, r2, asr r3
     458:	69050403 	stmdbvs	r5, {r0, r1, sl}
     45c:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
     460:	0000030d 	andeq	r0, r0, sp, lsl #6
     464:	54253d02 	strtpl	r3, [r5], #-3330	; 0xfffff2fe
     468:	02000000 	andeq	r0, r0, #0
     46c:	03c50704 	biceq	r0, r5, #4, 14	; 0x100000
     470:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     474:	00010905 	andeq	r0, r1, r5, lsl #18
     478:	07080200 	streq	r0, [r8, -r0, lsl #4]
     47c:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
     480:	00037204 	andeq	r7, r3, r4, lsl #4
     484:	15710200 	ldrbne	r0, [r1, #-512]!	; 0xfffffe00
     488:	00000048 	andeq	r0, r0, r8, asr #32
     48c:	0003d204 	andeq	sp, r3, r4, lsl #4
     490:	13800200 	orrne	r0, r0, #0, 4
     494:	00000069 	andeq	r0, r0, r9, rrx
     498:	00039205 	andeq	r9, r3, r5, lsl #4
     49c:	54040700 	strpl	r0, [r4], #-1792	; 0xfffff900
     4a0:	03000000 	movweq	r0, #0
     4a4:	00b80e08 	adcseq	r0, r8, r8, lsl #28
     4a8:	19060000 	stmdbne	r6, {}	; <UNPREDICTABLE>
     4ac:	00000003 	andeq	r0, r0, r3
     4b0:	00048006 	andeq	r8, r4, r6
     4b4:	f8060100 			; <UNDEFINED> instruction: 0xf8060100
     4b8:	02000003 	andeq	r0, r0, #3
     4bc:	00048f06 	andeq	r8, r4, r6, lsl #30
     4c0:	cd060300 	stcgt	3, cr0, [r6, #-0]
     4c4:	04000004 	streq	r0, [r0], #-4
     4c8:	0002bd06 	andeq	fp, r2, r6, lsl #26
     4cc:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
     4d0:	000003dc 	ldrdeq	r0, [r0], -ip
     4d4:	81031303 	tsthi	r3, r3, lsl #6
     4d8:	07000000 	streq	r0, [r0, -r0]
     4dc:	000000b8 	strheq	r0, [r0], -r8
     4e0:	0004b408 	andeq	fp, r4, r8, lsl #8
     4e4:	59150300 	ldmdbpl	r5, {r8, r9}
     4e8:	000000c4 	andeq	r0, r0, r4, asr #1
     4ec:	766c0305 	strbtvc	r0, [ip], -r5, lsl #6
     4f0:	48090002 	stmdami	r9, {r1}
     4f4:	eb000000 	bl	4fc <errno+0x4f8>
     4f8:	0a000000 	beq	500 <errno+0x4fc>
     4fc:	00000054 	andeq	r0, r0, r4, asr r0
     500:	a70b0000 	strge	r0, [fp, -r0]
     504:	04000002 	streq	r0, [r0], #-2
     508:	08013804 	stmdaeq	r1, {r2, fp, ip, sp}
     50c:	00000108 	andeq	r0, r0, r8, lsl #2
     510:	0003b00c 	andeq	fp, r3, ip
     514:	01390400 	teqeq	r9, r0, lsl #8
     518:	0000db11 	andeq	sp, r0, r1, lsl fp
     51c:	0d000000 	stceq	0, cr0, [r0, #-0]
     520:	0000039d 	muleq	r0, sp, r3
     524:	21013b04 	tstcs	r1, r4, lsl #22
     528:	000000eb 	andeq	r0, r0, fp, ror #1
     52c:	0004700e 	andeq	r7, r4, lr
     530:	05020000 	streq	r0, [r2, #-0]
     534:	0184100b 	orreq	r1, r4, fp
     538:	740f0000 	strvc	r0, [pc], #-0	; 540 <errno+0x53c>
     53c:	05006761 	streq	r6, [r0, #-1889]	; 0xfffff89f
     540:	0108180c 	tsteq	r8, ip, lsl #16
     544:	0f000000 	svceq	0x00000000
     548:	0067736d 	rsbeq	r7, r7, sp, ror #6
     54c:	840f0d05 	strhi	r0, [pc], #-3333	; 554 <errno+0x550>
     550:	04000001 	streq	r0, [r0], #-1
     554:	00033a10 	andeq	r3, r3, r0, lsl sl
     558:	0f0e0500 	svceq	0x000e0500
     55c:	00000069 	andeq	r0, r0, r9, rrx
     560:	7c1001e4 	ldfvcs	f0, [r0], {228}	; 0xe4
     564:	05000003 	streq	r0, [r0, #-3]
     568:	01940f0f 	orrseq	r0, r4, pc, lsl #30
     56c:	01e80000 	mvneq	r0, r0
     570:	00036510 	andeq	r6, r3, r0, lsl r5
     574:	0f100500 	svceq	0x00100500
     578:	00000075 	andeq	r0, r0, r5, ror r0
     57c:	001001f4 			; <UNDEFINED> instruction: 0x001001f4
     580:	05000003 	streq	r0, [r0, #-3]
     584:	00750f11 	rsbseq	r0, r5, r1, lsl pc
     588:	01f80000 	mvnseq	r0, r0
     58c:	00040c10 	andeq	r0, r4, r0, lsl ip
     590:	0f120500 	svceq	0x00120500
     594:	00000069 	andeq	r0, r0, r9, rrx
     598:	090001fc 	stmdbeq	r0, {r2, r3, r4, r5, r6, r7, r8}
     59c:	00000069 	andeq	r0, r0, r9, rrx
     5a0:	00000194 	muleq	r0, r4, r1
     5a4:	0000540a 	andeq	r5, r0, sl, lsl #8
     5a8:	09007700 	stmdbeq	r0, {r8, r9, sl, ip, sp, lr}
     5ac:	00000069 	andeq	r0, r0, r9, rrx
     5b0:	000001a4 	andeq	r0, r0, r4, lsr #3
     5b4:	0000540a 	andeq	r5, r0, sl, lsl #8
     5b8:	11000200 	mrsne	r0, R8_usr
     5bc:	00000343 	andeq	r0, r0, r3, asr #6
     5c0:	15031305 	strne	r1, [r3, #-773]	; 0xfffffcfb
     5c4:	00000001 	andeq	r0, r0, r1
     5c8:	02e81202 	rsceq	r1, r8, #536870912	; 0x20000000
     5cc:	0d070000 	stceq	0, cr0, [r7, #-0]
     5d0:	0001be21 	andeq	fp, r1, r1, lsr #28
     5d4:	a4041300 	strge	r1, [r4], #-768	; 0xfffffd00
     5d8:	02000001 	andeq	r0, r0, #1
     5dc:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
     5e0:	04020000 	streq	r0, [r2], #-0
     5e4:	00010e05 	andeq	r0, r1, r5, lsl #28
     5e8:	06041400 	streq	r1, [r4], -r0, lsl #8
     5ec:	02000520 	andeq	r0, r0, #32, 10	; 0x8000000
     5f0:	f2150000 	vhadd.s16	d0, d5, d0
     5f4:	06000003 	streq	r0, [r0], -r3
     5f8:	01cb0e21 	biceq	r0, fp, r1, lsr #28
     5fc:	ec150000 	ldc	0, cr0, [r5], {-0}
     600:	06000003 	streq	r0, [r0], -r3
     604:	02000f22 	andeq	r0, r0, #34, 30	; 0x88
     608:	ae150000 	cdpge	0, 1, cr0, cr5, cr0, {0}
     60c:	06000004 	streq	r0, [r0], -r4
     610:	02031023 	andeq	r1, r3, #35	; 0x23
     614:	16000000 	strne	r0, [r0], -r0
     618:	04131704 	ldreq	r1, [r3], #-1796	; 0xfffff8fc
     61c:	00000202 	andeq	r0, r0, r2, lsl #4
     620:	1e060818 	mcrne	8, 0, r0, cr6, cr8, {0}
     624:	00022d09 	andeq	r2, r2, r9, lsl #26
     628:	038b1900 	orreq	r1, fp, #0, 18
     62c:	1f060000 	svcne	0x00060000
     630:	00004109 	andeq	r4, r0, r9, lsl #2
     634:	b6190000 	ldrlt	r0, [r9], -r0
     638:	06000003 	streq	r0, [r0], -r3
     63c:	01d20724 	bicseq	r0, r2, r4, lsr #14
     640:	00040000 	andeq	r0, r4, r0
     644:	0004a704 	andeq	sl, r4, r4, lsl #14
     648:	03250600 			; <UNDEFINED> instruction: 0x03250600
     64c:	00000209 	andeq	r0, r0, r9, lsl #4
     650:	00022d07 	andeq	r2, r2, r7, lsl #26
     654:	04e11a00 	strbteq	r1, [r1], #2560	; 0xa00
     658:	0a010000 	beq	40660 <__stack_base+0x660>
     65c:	0102e006 	tsteq	r2, r6
     660:	00005c00 	andeq	r5, r0, r0, lsl #24
     664:	a09c0100 	addsge	r0, ip, r0, lsl #2
     668:	1b000002 	blne	678 <errno+0x674>
     66c:	000004f5 	strdeq	r0, [r0], -r5
     670:	ab0b0b01 	blge	2c327c <__bss_end__+0x17a234>
     674:	02000002 	andeq	r0, r0, #2
     678:	be1b7491 	cfcmpslt	r7, mvf11, mvf1
     67c:	0100000d 	tsteq	r0, sp
     680:	01c4130c 	biceq	r1, r4, ip, lsl #6
     684:	91020000 	mrsls	r0, (UNDEF: 2)
     688:	0de11b70 			; <UNDEFINED> instruction: 0x0de11b70
     68c:	0d010000 	stceq	0, cr0, [r1, #-0]
     690:	0002b118 	andeq	fp, r2, r8, lsl r1
     694:	6c910200 	lfmvs	f0, 4, [r1], {0}
     698:	000af01b 	andeq	pc, sl, fp, lsl r0	; <UNPREDICTABLE>
     69c:	180e0100 	stmdane	lr, {r8}
     6a0:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
     6a4:	1b689102 	blne	1a24ab4 <__bss_end__+0x18dba6c>
     6a8:	00000d04 	andeq	r0, r0, r4, lsl #26
     6ac:	ce120f01 	cdpgt	15, 1, cr0, cr2, cr1, {0}
     6b0:	02000002 	andeq	r0, r0, #2
     6b4:	1c000091 	stcne	0, cr0, [r0], {145}	; 0x91
     6b8:	00000041 	andeq	r0, r0, r1, asr #32
     6bc:	000002ab 	andeq	r0, r0, fp, lsr #5
     6c0:	0413001d 	ldreq	r0, [r3], #-29	; 0xffffffe3
     6c4:	000002a0 	andeq	r0, r0, r0, lsr #5
     6c8:	02bd0413 	adcseq	r0, sp, #318767104	; 0x13000000
     6cc:	04130000 	ldreq	r0, [r3], #-0
     6d0:	000002c9 	andeq	r0, r0, r9, asr #5
     6d4:	0002b707 	andeq	fp, r2, r7, lsl #14
     6d8:	08010200 	stmdaeq	r1, {r9}
     6dc:	00000335 	andeq	r0, r0, r5, lsr r3
     6e0:	0002c207 	andeq	ip, r2, r7, lsl #4
     6e4:	39041300 	stmdbcc	r4, {r8, r9, ip}
     6e8:	00000002 	andeq	r0, r0, r2
     6ec:	0000065d 	andeq	r0, r0, sp, asr r6
     6f0:	03f90004 	mvnseq	r0, #4
     6f4:	01040000 	mrseq	r0, (UNDEF: 4)
     6f8:	00000117 	andeq	r0, r0, r7, lsl r1
     6fc:	0007800c 	andeq	r8, r7, ip
     700:	00005f00 	andeq	r5, r0, r0, lsl #30
     704:	01033c00 	tsteq	r3, r0, lsl #24
     708:	00017c00 	andeq	r7, r1, r0, lsl #24
     70c:	0005fe00 	andeq	pc, r5, r0, lsl #28
     710:	06010200 	streq	r0, [r1], -r0, lsl #4
     714:	0000032e 	andeq	r0, r0, lr, lsr #6
     718:	00064d03 	andeq	r4, r6, r3, lsl #26
     71c:	25260200 	strcs	r0, [r6, #-512]!	; 0xfffffe00
     720:	00000038 	andeq	r0, r0, r8, lsr r0
     724:	2c080102 	stfcss	f0, [r8], {2}
     728:	02000003 	andeq	r0, r0, #3
     72c:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
     730:	02020000 	andeq	r0, r2, #0
     734:	00035207 	andeq	r5, r3, r7, lsl #4
     738:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
     73c:	00746e69 	rsbseq	r6, r4, r9, ror #28
     740:	00030d03 	andeq	r0, r3, r3, lsl #26
     744:	253d0200 	ldrcs	r0, [sp, #-512]!	; 0xfffffe00
     748:	00000060 	andeq	r0, r0, r0, rrx
     74c:	c5070402 	strgt	r0, [r7, #-1026]	; 0xfffffbfe
     750:	02000003 	andeq	r0, r0, #3
     754:	01090508 	tsteq	r9, r8, lsl #10
     758:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     75c:	0003bb07 	andeq	fp, r3, r7, lsl #22
     760:	03720300 	cmneq	r2, #0, 6
     764:	71020000 	mrsvc	r0, (UNDEF: 2)
     768:	00005415 	andeq	r5, r0, r5, lsl r4
     76c:	03d20300 	bicseq	r0, r2, #0, 6
     770:	80020000 	andhi	r0, r2, r0
     774:	00007513 	andeq	r7, r0, r3, lsl r5
     778:	03920500 	orrseq	r0, r2, #0, 10
     77c:	04070000 	streq	r0, [r7], #-0
     780:	00000060 	andeq	r0, r0, r0, rrx
     784:	c40e0803 	strgt	r0, [lr], #-2051	; 0xfffff7fd
     788:	06000000 	streq	r0, [r0], -r0
     78c:	00000319 	andeq	r0, r0, r9, lsl r3
     790:	04800600 	streq	r0, [r0], #1536	; 0x600
     794:	06010000 	streq	r0, [r1], -r0
     798:	000003f8 	strdeq	r0, [r0], -r8
     79c:	048f0602 	streq	r0, [pc], #1538	; 7a4 <errno+0x7a0>
     7a0:	06030000 	streq	r0, [r3], -r0
     7a4:	000004cd 	andeq	r0, r0, sp, asr #9
     7a8:	02bd0604 	adcseq	r0, sp, #4, 12	; 0x400000
     7ac:	00050000 	andeq	r0, r5, r0
     7b0:	0003dc03 	andeq	sp, r3, r3, lsl #24
     7b4:	03130300 	tsteq	r3, #0, 6
     7b8:	0000008d 	andeq	r0, r0, sp, lsl #1
     7bc:	0000c407 	andeq	ip, r0, r7, lsl #8
     7c0:	04b40800 	ldrteq	r0, [r4], #2048	; 0x800
     7c4:	15030000 	strne	r0, [r3, #-0]
     7c8:	0000d059 	andeq	sp, r0, r9, asr r0
     7cc:	70030500 	andvc	r0, r3, r0, lsl #10
     7d0:	09000276 	stmdbeq	r0, {r1, r2, r4, r5, r6, r9}
     7d4:	00000054 	andeq	r0, r0, r4, asr r0
     7d8:	000000f7 	strdeq	r0, [r0], -r7
     7dc:	0000600a 	andeq	r6, r0, sl
     7e0:	0b000000 	bleq	7e8 <errno+0x7e4>
     7e4:	000002a7 	andeq	r0, r0, r7, lsr #5
     7e8:	01380404 	teqeq	r8, r4, lsl #8
     7ec:	00011408 	andeq	r1, r1, r8, lsl #8
     7f0:	03b00c00 	movseq	r0, #0, 24
     7f4:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
     7f8:	00e71101 	rsceq	r1, r7, r1, lsl #2
     7fc:	00000000 	andeq	r0, r0, r0
     800:	00039d0d 	andeq	r9, r3, sp, lsl #26
     804:	013b0400 	teqeq	fp, r0, lsl #8
     808:	0000f721 	andeq	pc, r0, r1, lsr #14
     80c:	04700e00 	ldrbteq	r0, [r0], #-3584	; 0xfffff200
     810:	02000000 	andeq	r0, r0, #0
     814:	90100b05 	andsls	r0, r0, r5, lsl #22
     818:	0f000001 	svceq	0x00000001
     81c:	00676174 	rsbeq	r6, r7, r4, ror r1
     820:	14180c05 	ldrne	r0, [r8], #-3077	; 0xfffff3fb
     824:	00000001 	andeq	r0, r0, r1
     828:	67736d0f 	ldrbvs	r6, [r3, -pc, lsl #26]!
     82c:	0f0d0500 	svceq	0x000d0500
     830:	00000190 	muleq	r0, r0, r1
     834:	033a1004 	teqeq	sl, #4
     838:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
     83c:	0000750f 	andeq	r7, r0, pc, lsl #10
     840:	1001e400 	andne	lr, r1, r0, lsl #8
     844:	0000037c 	andeq	r0, r0, ip, ror r3
     848:	a00f0f05 	andge	r0, pc, r5, lsl #30
     84c:	e8000001 	stmda	r0, {r0}
     850:	03651001 	cmneq	r5, #1
     854:	10050000 	andne	r0, r5, r0
     858:	0000810f 	andeq	r8, r0, pc, lsl #2
     85c:	1001f400 	andne	pc, r1, r0, lsl #8
     860:	00000300 	andeq	r0, r0, r0, lsl #6
     864:	810f1105 	tsthi	pc, r5, lsl #2
     868:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
     86c:	040c1001 	streq	r1, [ip], #-1
     870:	12050000 	andne	r0, r5, #0
     874:	0000750f 	andeq	r7, r0, pc, lsl #10
     878:	0001fc00 	andeq	pc, r1, r0, lsl #24
     87c:	00007509 	andeq	r7, r0, r9, lsl #10
     880:	0001a000 	andeq	sl, r1, r0
     884:	00600a00 	rsbeq	r0, r0, r0, lsl #20
     888:	00770000 	rsbseq	r0, r7, r0
     88c:	00007509 	andeq	r7, r0, r9, lsl #10
     890:	0001b000 	andeq	fp, r1, r0
     894:	00600a00 	rsbeq	r0, r0, r0, lsl #20
     898:	00020000 	andeq	r0, r2, r0
     89c:	00034311 	andeq	r4, r3, r1, lsl r3
     8a0:	03130500 	tsteq	r3, #0, 10
     8a4:	00000121 	andeq	r0, r0, r1, lsr #2
     8a8:	7f030200 	svcvc	0x00030200
     8ac:	06000006 	streq	r0, [r0], -r6
     8b0:	0075131f 	rsbseq	r1, r5, pc, lsl r3
     8b4:	41030000 	mrsmi	r0, (UNDEF: 3)
     8b8:	06000006 	streq	r0, [r0], -r6
     8bc:	00751321 	rsbseq	r1, r5, r1, lsr #6
     8c0:	e8120000 	ldmda	r2, {}	; <UNPREDICTABLE>
     8c4:	0c000002 	stceq	0, cr0, [r0], {2}
     8c8:	01e2210d 	mvneq	r2, sp, lsl #2
     8cc:	04130000 	ldreq	r0, [r3], #-0
     8d0:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     8d4:	c0070402 	andgt	r0, r7, r2, lsl #8
     8d8:	05000003 	streq	r0, [r0, #-3]
     8dc:	00000731 	andeq	r0, r0, r1, lsr r7
     8e0:	00600407 	rsbeq	r0, r0, r7, lsl #8
     8e4:	0e070000 	cdpeq	0, 0, cr0, cr7, cr0, {0}
     8e8:	00026806 	andeq	r6, r2, r6, lsl #16
     8ec:	06de0600 	ldrbeq	r0, [lr], r0, lsl #12
     8f0:	06000000 	streq	r0, [r0], -r0
     8f4:	0000076a 	andeq	r0, r0, sl, ror #14
     8f8:	07480601 	strbeq	r0, [r8, -r1, lsl #12]
     8fc:	06020000 	streq	r0, [r2], -r0
     900:	00000628 	andeq	r0, r0, r8, lsr #12
     904:	08980603 	ldmeq	r8, {r0, r1, r9, sl}
     908:	06040000 	streq	r0, [r4], -r0
     90c:	000006a6 	andeq	r0, r0, r6, lsr #13
     910:	07000605 	streq	r0, [r0, -r5, lsl #12]
     914:	06060000 	streq	r0, [r6], -r0
     918:	00000601 	andeq	r0, r0, r1, lsl #12
     91c:	092a0607 	stmdbeq	sl!, {r0, r1, r2, r9, sl}
     920:	06080000 	streq	r0, [r8], -r0
     924:	000005c4 	andeq	r0, r0, r4, asr #11
     928:	087c0609 	ldmdaeq	ip!, {r0, r3, r9, sl}^
     92c:	060a0000 	streq	r0, [sl], -r0
     930:	00000722 	andeq	r0, r0, r2, lsr #14
     934:	05da060b 	ldrbeq	r0, [sl, #1547]	; 0x60b
     938:	060c0000 	streq	r0, [ip], -r0
     93c:	00000669 	andeq	r0, r0, r9, ror #12
     940:	08ab060d 	stmiaeq	fp!, {r0, r2, r3, r9, sl}
     944:	060e0000 	streq	r0, [lr], -r0
     948:	0000080c 	andeq	r0, r0, ip, lsl #16
     94c:	07e3060f 	strbeq	r0, [r3, pc, lsl #12]!
     950:	00100000 	andseq	r0, r0, r0
     954:	00057503 	andeq	r7, r5, r3, lsl #10
     958:	13270700 			; <UNDEFINED> instruction: 0x13270700
     95c:	00000075 	andeq	r0, r0, r5, ror r0
     960:	0007d314 	andeq	sp, r7, r4, lsl r3
     964:	29070800 	stmdbcs	r7, {fp}
     968:	00029c10 	andeq	r9, r2, r0, lsl ip
     96c:	06a01500 	strteq	r1, [r0], r0, lsl #10
     970:	2a070000 	bcs	1c0978 <__bss_end__+0x77930>
     974:	00026812 	andeq	r6, r2, r2, lsl r8
     978:	650f0000 	strvs	r0, [pc, #-0]	; 980 <errno+0x97c>
     97c:	0700646e 	streq	r6, [r0, -lr, ror #8]
     980:	0268122b 	rsbeq	r1, r8, #-1342177278	; 0xb0000002
     984:	00040000 	andeq	r0, r4, r0
     988:	0007d303 	andeq	sp, r7, r3, lsl #6
     98c:	032c0700 			; <UNDEFINED> instruction: 0x032c0700
     990:	00000274 	andeq	r0, r0, r4, ror r2
     994:	00061714 	andeq	r1, r6, r4, lsl r7
     998:	2e070800 	cdpcs	8, 0, cr0, cr7, cr0, {0}
     99c:	0002ea10 	andeq	lr, r2, r0, lsl sl
     9a0:	33c61500 	biccc	r1, r6, #0, 10
     9a4:	2f070000 	svccs	0x00070000
     9a8:	00007510 	andeq	r7, r0, r0, lsl r5
     9ac:	ab150000 	blge	5409b4 <__bss_end__+0x3f796c>
     9b0:	07000005 	streq	r0, [r0, -r5]
     9b4:	002c1030 	eoreq	r1, ip, r0, lsr r0
     9b8:	15040000 	strne	r0, [r4, #-0]
     9bc:	000006ca 	andeq	r0, r0, sl, asr #13
     9c0:	2c103107 	ldfcss	f3, [r0], {7}
     9c4:	05000000 	streq	r0, [r0, #-0]
     9c8:	00084615 	andeq	r4, r8, r5, lsl r6
     9cc:	10320700 	eorsne	r0, r2, r0, lsl #14
     9d0:	000002ea 	andeq	r0, r0, sl, ror #5
     9d4:	2c090006 	stccs	0, cr0, [r9], {6}
     9d8:	fa000000 	blx	9e0 <errno+0x9dc>
     9dc:	0a000002 	beq	9ec <errno+0x9e8>
     9e0:	00000060 	andeq	r0, r0, r0, rrx
     9e4:	17030001 	strne	r0, [r3, -r1]
     9e8:	07000006 	streq	r0, [r0, -r6]
     9ec:	02a80333 	adceq	r0, r8, #-872415232	; 0xcc000000
     9f0:	c80e0000 	stmdagt	lr, {}	; <UNPREDICTABLE>
     9f4:	84000008 	strhi	r0, [r0], #-8
     9f8:	10390707 	eorsne	r0, r9, r7, lsl #14
     9fc:	000003d8 	ldrdeq	r0, [r0], -r8
     a00:	0008e215 	andeq	lr, r8, r5, lsl r2
     a04:	173a0700 	ldrne	r0, [sl, -r0, lsl #14]!
     a08:	00000075 	andeq	r0, r0, r5, ror r0
     a0c:	071b1500 	ldreq	r1, [fp, -r0, lsl #10]
     a10:	3b070000 	blcc	1c0a18 <__bss_end__+0x779d0>
     a14:	0001be17 	andeq	fp, r1, r7, lsl lr
     a18:	25150400 	ldrcs	r0, [r5, #-1024]	; 0xfffffc00
     a1c:	07000008 	streq	r0, [r0, -r8]
     a20:	0075173c 	rsbseq	r1, r5, ip, lsr r7
     a24:	15080000 	strne	r0, [r8, #-0]
     a28:	0000068b 	andeq	r0, r0, fp, lsl #13
     a2c:	75173d07 	ldrvc	r3, [r7, #-3335]	; 0xfffff2f9
     a30:	0c000000 	stceq	0, cr0, [r0], {-0}
     a34:	00065815 	andeq	r5, r6, r5, lsl r8
     a38:	173e0700 	ldrne	r0, [lr, -r0, lsl #14]!
     a3c:	000001e2 	andeq	r0, r0, r2, ror #3
     a40:	06ba1510 	ssateq	r1, #27, r0, lsl #10
     a44:	3f070000 	svccc	0x00070000
     a48:	00029c17 	andeq	r9, r2, r7, lsl ip
     a4c:	ff151400 			; <UNDEFINED> instruction: 0xff151400
     a50:	07000007 	streq	r0, [r0, -r7]
     a54:	029c1740 	addseq	r1, ip, #64, 14	; 0x1000000
     a58:	151c0000 	ldrne	r0, [ip, #-0]
     a5c:	000005f1 	strdeq	r0, [r0], -r1
     a60:	9c174107 	ldflss	f4, [r7], {7}
     a64:	24000002 	strcs	r0, [r0], #-2
     a68:	0005b415 	andeq	fp, r5, r5, lsl r4
     a6c:	17420700 	strbne	r0, [r2, -r0, lsl #14]
     a70:	0000029c 	muleq	r0, ip, r2
     a74:	06eb152c 	strbteq	r1, [fp], ip, lsr #10
     a78:	43070000 	movwmi	r0, #28672	; 0x7000
     a7c:	00029c17 	andeq	r9, r2, r7, lsl ip
     a80:	18153400 	ldmdane	r5, {sl, ip, sp}
     a84:	07000008 	streq	r0, [r0, -r8]
     a88:	029c1744 	addseq	r1, ip, #68, 14	; 0x1100000
     a8c:	153c0000 	ldrne	r0, [ip, #-0]!
     a90:	0000082e 	andeq	r0, r0, lr, lsr #16
     a94:	75174507 	ldrvc	r4, [r7, #-1287]	; 0xfffffaf9
     a98:	44000000 	strmi	r0, [r0], #-0
     a9c:	00055115 	andeq	r5, r5, r5, lsl r1
     aa0:	17460700 	strbne	r0, [r6, -r0, lsl #14]
     aa4:	000001ca 	andeq	r0, r0, sl, asr #3
     aa8:	34c31548 	strbcc	r1, [r3], #1352	; 0x548
     aac:	4a070000 	bmi	1c0ab4 <__bss_end__+0x77a6c>
     ab0:	00029c17 	andeq	r9, r2, r7, lsl ip
     ab4:	9f154c00 	svcls	0x00154c00
     ab8:	07000005 	streq	r0, [r0, -r5]
     abc:	03d8174b 	bicseq	r1, r8, #19660800	; 0x12c0000
     ac0:	00540000 	subseq	r0, r4, r0
     ac4:	0002fa09 	andeq	pc, r2, r9, lsl #20
     ac8:	0003e800 	andeq	lr, r3, r0, lsl #16
     acc:	00600a00 	rsbeq	r0, r0, r0, lsl #20
     ad0:	00e50000 	rsceq	r0, r5, r0
     ad4:	0008c803 	andeq	ip, r8, r3, lsl #16
     ad8:	034e0700 	movteq	r0, #59136	; 0xe700
     adc:	00000306 	andeq	r0, r0, r6, lsl #6
     ae0:	20080416 	andcs	r0, r8, r6, lsl r4
     ae4:	00042205 	andeq	r2, r4, r5, lsl #4
     ae8:	03f21700 	mvnseq	r1, #0, 14
     aec:	21080000 	mrscs	r0, (UNDEF: 8)
     af0:	0004220e 	andeq	r2, r4, lr, lsl #4
     af4:	03ec1700 	mvneq	r1, #0, 14
     af8:	22080000 	andcs	r0, r8, #0
     afc:	0004290f 	andeq	r2, r4, pc, lsl #18
     b00:	04ae1700 	strteq	r1, [lr], #1792	; 0x700
     b04:	23080000 	movwcs	r0, #32768	; 0x8000
     b08:	00042c10 	andeq	r2, r4, r0, lsl ip
     b0c:	04020000 	streq	r0, [r2], #-0
     b10:	00010e05 	andeq	r0, r1, r5, lsl #28
     b14:	19041800 	stmdbne	r4, {fp, ip}
     b18:	042b0413 	strteq	r0, [fp], #-1043	; 0xfffffbed
     b1c:	081a0000 	ldmdaeq	sl, {}	; <UNPREDICTABLE>
     b20:	56091e08 	strpl	r1, [r9], -r8, lsl #28
     b24:	15000004 	strne	r0, [r0, #-4]
     b28:	0000038b 	andeq	r0, r0, fp, lsl #7
     b2c:	4d091f08 	stcmi	15, cr1, [r9, #-32]	; 0xffffffe0
     b30:	00000000 	andeq	r0, r0, r0
     b34:	0003b615 	andeq	fp, r3, r5, lsl r6
     b38:	07240800 	streq	r0, [r4, -r0, lsl #16]!
     b3c:	000003f4 	strdeq	r0, [r0], -r4
     b40:	a7030004 	strge	r0, [r3, -r4]
     b44:	08000004 	stmdaeq	r0, {r2}
     b48:	04320325 	ldrteq	r0, [r2], #-805	; 0xfffffcdb
     b4c:	82030000 	andhi	r0, r3, #0
     b50:	09000005 	stmdbeq	r0, {r0, r2}
     b54:	00601c1d 	rsbeq	r1, r0, sp, lsl ip
     b58:	14030000 	strne	r0, [r3], #-0
     b5c:	09000009 	stmdbeq	r0, {r0, r3}
     b60:	01e81722 	mvneq	r1, r2, lsr #14
     b64:	62030000 	andvs	r0, r3, #0
     b68:	0a000005 	beq	b84 <errno+0xb80>
     b6c:	04621e25 	strbteq	r1, [r2], #-3621	; 0xfffff1db
     b70:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
     b74:	0a000008 	beq	b9c <errno+0xb98>
     b78:	04621e2f 	strbteq	r1, [r2], #-3631	; 0xfffff1d1
     b7c:	c0030000 	andgt	r0, r3, r0
     b80:	0a000006 	beq	ba0 <errno+0xb9c>
     b84:	04621e32 	strbteq	r1, [r2], #-3634	; 0xfffff1ce
     b88:	201a0000 	andscs	r0, sl, r0
     b8c:	1009380a 	andne	r3, r9, sl, lsl #16
     b90:	15000005 	strne	r0, [r0, #-5]
     b94:	00000662 	andeq	r0, r0, r2, ror #12
     b98:	7a11390a 	bvc	44efc8 <__bss_end__+0x305f80>
     b9c:	00000004 	andeq	r0, r0, r4
     ba0:	00086015 	andeq	r6, r8, r5, lsl r0
     ba4:	113a0a00 	teqne	sl, r0, lsl #20
     ba8:	00000492 	muleq	r0, r2, r4
     bac:	08c01504 	stmiaeq	r0, {r2, r8, sl, ip}^
     bb0:	3b0a0000 	blcc	280bb8 <__bss_end__+0x137b70>
     bb4:	00048611 	andeq	r8, r4, r1, lsl r6
     bb8:	97150800 	ldrls	r0, [r5, -r0, lsl #16]
     bbc:	0a000005 	beq	bd8 <errno+0xbd4>
     bc0:	0486113c 	streq	r1, [r6], #316	; 0x13c
     bc4:	150c0000 	strne	r0, [ip, #-0]
     bc8:	00000873 	andeq	r0, r0, r3, ror r8
     bcc:	7a113d0a 	bvc	44fffc <__bss_end__+0x306fb4>
     bd0:	10000004 	andne	r0, r0, r4
     bd4:	00056d15 	andeq	r6, r5, r5, lsl sp
     bd8:	113e0a00 	teqne	lr, r0, lsl #20
     bdc:	0000047a 	andeq	r0, r0, sl, ror r4
     be0:	07f71514 			; <UNDEFINED> instruction: 0x07f71514
     be4:	3f0a0000 	svccc	0x000a0000
     be8:	00047a11 	andeq	r7, r4, r1, lsl sl
     bec:	eb151800 	bl	546bf4 <__bss_end__+0x3fdbac>
     bf0:	0a000008 	beq	c18 <errno+0xc14>
     bf4:	047a1140 	ldrbteq	r1, [sl], #-320	; 0xfffffec0
     bf8:	001c0000 	andseq	r0, ip, r0
     bfc:	0006d303 	andeq	sp, r6, r3, lsl #6
     c00:	03410a00 	movteq	r0, #6656	; 0x1a00
     c04:	0000049e 	muleq	r0, lr, r4
     c08:	0006f703 	andeq	pc, r6, r3, lsl #14
     c0c:	140b0b00 	strne	r0, [fp], #-2816	; 0xfffff500
     c10:	00000510 	andeq	r0, r0, r0, lsl r5
     c14:	00054803 	andeq	r4, r5, r3, lsl #16
     c18:	140c0b00 	strne	r0, [ip], #-2816	; 0xfffff500
     c1c:	00000486 	andeq	r0, r0, r6, lsl #9
     c20:	00006009 	andeq	r6, r0, r9
     c24:	00053f00 	andeq	r3, r5, r0, lsl #30
     c28:	12001b00 	andne	r1, r0, #0, 22
     c2c:	00000699 	muleq	r0, r9, r6
     c30:	34151401 	ldrcc	r1, [r5], #-1025	; 0xfffffbff
     c34:	12000005 	andne	r0, r0, #5
     c38:	00000909 	andeq	r0, r0, r9, lsl #18
     c3c:	34151501 	ldrcc	r1, [r5], #-1281	; 0xfffffaff
     c40:	12000005 	andne	r0, r0, #5
     c44:	000008d6 	ldrdeq	r0, [r0], -r6
     c48:	34151601 	ldrcc	r1, [r5], #-1537	; 0xfffff9ff
     c4c:	12000005 	andne	r0, r0, #5
     c50:	00000869 	andeq	r0, r0, r9, ror #16
     c54:	34151701 	ldrcc	r1, [r5], #-1793	; 0xfffff8ff
     c58:	1c000005 	stcne	0, cr0, [r0], {5}
     c5c:	0000084e 	andeq	r0, r0, lr, asr #16
     c60:	3c062501 	cfstr32cc	mvfx2, [r6], {1}
     c64:	7c000103 	stfvcs	f0, [r0], {3}
     c68:	01000001 	tsteq	r0, r1
     c6c:	0006229c 	muleq	r6, ip, r2
     c70:	07601d00 	strbeq	r1, [r0, -r0, lsl #26]!
     c74:	25010000 	strcs	r0, [r1, #-0]
     c78:	00062227 	andeq	r2, r6, r7, lsr #4
     c7c:	fc910300 	ldc2	3, cr0, [r1], {0}
     c80:	069a087e 			; <UNDEFINED> instruction: 0x069a087e
     c84:	27010000 	strcs	r0, [r1, -r0]
     c88:	00046e1b 	andeq	r6, r4, fp, lsl lr
     c8c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     c90:	00090a08 	andeq	r0, r9, r8, lsl #20
     c94:	1b280100 	blne	a0109c <__bss_end__+0x8b8054>
     c98:	0000046e 	andeq	r0, r0, lr, ror #8
     c9c:	08709102 	ldmdaeq	r0!, {r1, r8, ip, pc}^
     ca0:	000008d7 	ldrdeq	r0, [r0], -r7
     ca4:	6e1b2901 	vnmlsvs.f16	s4, s22, s2	; <UNPREDICTABLE>
     ca8:	02000004 	andeq	r0, r0, #4
     cac:	6a086c91 	bvs	21bef8 <__bss_end__+0xd2eb0>
     cb0:	01000008 	tsteq	r0, r8
     cb4:	046e1b2a 	strbteq	r1, [lr], #-2858	; 0xfffff4d6
     cb8:	91020000 	mrsls	r0, (UNDEF: 2)
     cbc:	08f30868 	ldmeq	r3!, {r3, r5, r6, fp}^
     cc0:	3b010000 	blcc	40cc8 <__stack_base+0xcc8>
     cc4:	00051c0e 	andeq	r1, r5, lr, lsl #24
     cc8:	48910200 	ldmmi	r1, {r9}
     ccc:	4501481a 	strmi	r4, [r1, #-2074]	; 0xfffff7e6
     cd0:	00061105 	andeq	r1, r6, r5, lsl #2
     cd4:	0de11500 	cfstr64eq	mvdx1, [r1]
     cd8:	46010000 	strmi	r0, [r1], -r0
     cdc:	0006381b 	andeq	r3, r6, fp, lsl r8
     ce0:	f0150000 			; <UNDEFINED> instruction: 0xf0150000
     ce4:	0100000a 	tsteq	r0, sl
     ce8:	06381b47 	ldrteq	r1, [r8], -r7, asr #22
     cec:	15080000 	strne	r0, [r8, #-0]
     cf0:	00000d04 	andeq	r0, r0, r4, lsl #26
     cf4:	54104801 	ldrpl	r4, [r0], #-2049	; 0xfffff7ff
     cf8:	10000006 	andne	r0, r0, r6
     cfc:	28a90800 	stmiacs	r9!, {fp}
     d00:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
     d04:	0005e007 	andeq	lr, r5, r7
     d08:	80910300 	addshi	r0, r1, r0, lsl #6
     d0c:	0413007f 	ldreq	r0, [r3], #-127	; 0xffffff81
     d10:	000003e8 	andeq	r0, r0, r8, ror #7
     d14:	00064309 	andeq	r4, r6, r9, lsl #6
     d18:	00063800 	andeq	r3, r6, r0, lsl #16
     d1c:	00600a00 	rsbeq	r0, r0, r0, lsl #20
     d20:	00010000 	andeq	r0, r1, r0
     d24:	00062807 	andeq	r2, r6, r7, lsl #16
     d28:	4f041300 	svcmi	0x00041300
     d2c:	07000006 	streq	r0, [r0, -r6]
     d30:	0000063d 	andeq	r0, r0, sp, lsr r6
     d34:	35080102 	strcc	r0, [r8, #-258]	; 0xfffffefe
     d38:	07000003 	streq	r0, [r0, -r3]
     d3c:	00000648 	andeq	r0, r0, r8, asr #12
     d40:	0004561e 	andeq	r5, r4, lr, lsl r6
     d44:	00600a00 	rsbeq	r0, r0, r0, lsl #20
     d48:	00060000 	andeq	r0, r6, r0
     d4c:	00114f00 	andseq	r4, r1, r0, lsl #30
     d50:	a2000400 	andge	r0, r0, #0, 8
     d54:	04000005 	streq	r0, [r0], #-5
     d58:	00011701 	andeq	r1, r1, r1, lsl #14
     d5c:	0c3a0c00 	ldceq	12, cr0, [sl], #-0
     d60:	005f0000 	subseq	r0, pc, r0
     d64:	04b80000 	ldrteq	r0, [r8], #0
     d68:	0eec0001 	cdpeq	0, 14, cr0, cr12, cr1, {0}
     d6c:	086c0000 	stmdaeq	ip!, {}^	; <UNPREDICTABLE>
     d70:	01020000 	mrseq	r0, (UNDEF: 2)
     d74:	00032e06 	andeq	r2, r3, r6, lsl #28
     d78:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     d7c:	00000466 	andeq	r0, r0, r6, ror #8
     d80:	69050403 	stmdbvs	r5, {r0, r1, sl}
     d84:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     d88:	01090508 	tsteq	r9, r8, lsl #10
     d8c:	01020000 	mrseq	r0, (UNDEF: 2)
     d90:	00032c08 	andeq	r2, r3, r8, lsl #24
     d94:	07020200 	streq	r0, [r2, -r0, lsl #4]
     d98:	00000352 	andeq	r0, r0, r2, asr r3
     d9c:	00058204 	andeq	r8, r5, r4, lsl #4
     da0:	1c1d0600 	ldcne	6, cr0, [sp], {-0}
     da4:	0000005b 	andeq	r0, r0, fp, asr r0
     da8:	c5070402 	strgt	r0, [r7, #-1026]	; 0xfffffbfe
     dac:	02000003 	andeq	r0, r0, #3
     db0:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
     db4:	04020000 	streq	r0, [r2], #-0
     db8:	00010e05 	andeq	r0, r1, r5, lsl #28
     dbc:	09140400 	ldmdbeq	r4, {sl}
     dc0:	22060000 	andcs	r0, r6, #0
     dc4:	00007c17 	andeq	r7, r0, r7, lsl ip
     dc8:	07040200 	streq	r0, [r4, -r0, lsl #4]
     dcc:	000003c0 	andeq	r0, r0, r0, asr #7
     dd0:	000a2304 	andeq	r2, sl, r4, lsl #6
     dd4:	1f110700 	svcne	0x00110700
     dd8:	00000070 	andeq	r0, r0, r0, ror r0
     ddc:	00064d04 	andeq	r4, r6, r4, lsl #26
     de0:	25260800 	strcs	r0, [r6, #-2048]!	; 0xfffff800
     de4:	00000041 	andeq	r0, r0, r1, asr #32
     de8:	00030d04 	andeq	r0, r3, r4, lsl #26
     dec:	253d0800 	ldrcs	r0, [sp, #-2048]!	; 0xfffff800
     df0:	0000005b 	andeq	r0, r0, fp, asr r0
     df4:	00037204 	andeq	r7, r3, r4, lsl #4
     df8:	15710800 	ldrbne	r0, [r1, #-2048]!	; 0xfffff800
     dfc:	0000009b 	muleq	r0, fp, r0
     e00:	0003d204 	andeq	sp, r3, r4, lsl #4
     e04:	13800800 	orrne	r0, r0, #0, 16
     e08:	000000a7 	andeq	r0, r0, r7, lsr #1
     e0c:	33040505 	movwcc	r0, #17669	; 0x4505
     e10:	16000000 	strne	r0, [r0], -r0
     e14:	012b0e11 			; <UNDEFINED> instruction: 0x012b0e11
     e18:	e0060000 	and	r0, r6, r0
     e1c:	7f00000b 	svcvc	0x0000000b
     e20:	000a8306 	andeq	r8, sl, r6, lsl #6
     e24:	26067e00 	strcs	r7, [r6], -r0, lsl #28
     e28:	7d00000b 	stcvc	0, cr0, [r0, #-44]	; 0xffffffd4
     e2c:	0010e306 	andseq	lr, r0, r6, lsl #6
     e30:	a1067c00 	tstge	r6, r0, lsl #24
     e34:	7b000011 	blvc	e80 <errno+0xe7c>
     e38:	000f5906 	andeq	r5, pc, r6, lsl #18
     e3c:	6b067a00 	blvs	19f644 <__bss_end__+0x565fc>
     e40:	7900000a 	stmdbvc	r0, {r1, r3}
     e44:	000e5406 	andeq	r5, lr, r6, lsl #8
     e48:	ce067800 	cdpgt	8, 0, cr7, cr6, cr0, {0}
     e4c:	7700000f 	strvc	r0, [r0, -pc]
     e50:	0011d506 	andseq	sp, r1, r6, lsl #10
     e54:	db067600 	blle	19e65c <__bss_end__+0x55614>
     e58:	7500000c 	strvc	r0, [r0, #-12]
     e5c:	000fa006 	andeq	sl, pc, r6
     e60:	b4067400 	strlt	r7, [r6], #-1024	; 0xfffffc00
     e64:	73000009 	movwvc	r0, #9
     e68:	000a5306 	andeq	r5, sl, r6, lsl #6
     e6c:	63077200 	movwvs	r7, #29184	; 0x7200
     e70:	ff00000e 			; <UNDEFINED> instruction: 0xff00000e
     e74:	007fffff 	ldrshteq	pc, [pc], #-255	; <UNPREDICTABLE>
     e78:	00039208 	andeq	r9, r3, r8, lsl #4
     e7c:	5b040700 	blpl	102a84 <morecore_area+0xb9a84>
     e80:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
     e84:	01620e08 	cmneq	r2, r8, lsl #28
     e88:	19090000 	stmdbne	r9, {}	; <UNPREDICTABLE>
     e8c:	00000003 	andeq	r0, r0, r3
     e90:	00048009 	andeq	r8, r4, r9
     e94:	f8090100 			; <UNDEFINED> instruction: 0xf8090100
     e98:	02000003 	andeq	r0, r0, #3
     e9c:	00048f09 	andeq	r8, r4, r9, lsl #30
     ea0:	cd090300 	stcgt	3, cr0, [r9, #-0]
     ea4:	04000004 	streq	r0, [r0], #-4
     ea8:	0002bd09 	andeq	fp, r2, r9, lsl #26
     eac:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
     eb0:	000003dc 	ldrdeq	r0, [r0], -ip
     eb4:	2b031309 	blcs	c5ae0 <morecore_area+0x7cae0>
     eb8:	0a000001 	beq	ec4 <errno+0xec0>
     ebc:	00000162 	andeq	r0, r0, r2, ror #2
     ec0:	0004b40b 	andeq	fp, r4, fp, lsl #8
     ec4:	59150900 	ldmdbpl	r5, {r8, fp}
     ec8:	0000016e 	andeq	r0, r0, lr, ror #2
     ecc:	76880305 	strvc	r0, [r8], r5, lsl #6
     ed0:	e8080002 	stmda	r8, {r1}
     ed4:	0700000e 	streq	r0, [r0, -lr]
     ed8:	00005b04 	andeq	r5, r0, r4, lsl #22
     edc:	0e090a00 	vmlaeq.f32	s0, s18, s0
     ee0:	000001a4 	andeq	r0, r0, r4, lsr #3
     ee4:	000a3609 	andeq	r3, sl, r9, lsl #12
     ee8:	bb090500 	bllt	2422f0 <__bss_end__+0xf92a8>
     eec:	0600000b 	streq	r0, [r0], -fp
     ef0:	0d290800 	stceq	8, cr0, [r9, #-0]
     ef4:	04070000 	streq	r0, [r7], #-0
     ef8:	0000005b 	andeq	r0, r0, fp, asr r0
     efc:	c906340b 	stmdbgt	r6, {r0, r1, r3, sl, ip, sp}
     f00:	09000001 	stmdbeq	r0, {r0}
     f04:	000009ca 	andeq	r0, r0, sl, asr #19
     f08:	0ef50907 	vmoveq.f16	s1, #87	; 0x3eb80000  0.3593750	; <UNPREDICTABLE>
     f0c:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
     f10:	00000df6 	strdeq	r0, [r0], -r6
     f14:	9b0c0078 	blls	3010fc <__bss_end__+0x1b80b4>
     f18:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
     f1c:	0d000001 	stceq	0, cr0, [r0, #-4]
     f20:	0000005b 	andeq	r0, r0, fp, asr r0
     f24:	a70e0000 	strge	r0, [lr, -r0]
     f28:	04000002 	streq	r0, [r0], #-2
     f2c:	0801380c 	stmdaeq	r1, {r2, r3, fp, ip, sp}
     f30:	000001f6 	strdeq	r0, [r0], -r6
     f34:	0003b00f 	andeq	fp, r3, pc
     f38:	01390c00 	teqeq	r9, r0, lsl #24
     f3c:	0001c911 	andeq	ip, r1, r1, lsl r9
     f40:	10000000 	andne	r0, r0, r0
     f44:	0000039d 	muleq	r0, sp, r3
     f48:	21013b0c 	tstcs	r1, ip, lsl #22
     f4c:	000001d9 	ldrdeq	r0, [r0], -r9
     f50:	00047011 	andeq	r7, r4, r1, lsl r0
     f54:	0d020000 	stceq	0, cr0, [r2, #-0]
     f58:	0272100b 	rsbseq	r1, r2, #11
     f5c:	74120000 	ldrvc	r0, [r2], #-0
     f60:	0d006761 	stceq	7, cr6, [r0, #-388]	; 0xfffffe7c
     f64:	01f6180c 	mvnseq	r1, ip, lsl #16
     f68:	12000000 	andne	r0, r0, #0
     f6c:	0067736d 	rsbeq	r7, r7, sp, ror #6
     f70:	720f0d0d 	andvc	r0, pc, #832	; 0x340
     f74:	04000002 	streq	r0, [r0], #-2
     f78:	00033a13 	andeq	r3, r3, r3, lsl sl
     f7c:	0f0e0d00 	svceq	0x000e0d00
     f80:	000000a7 	andeq	r0, r0, r7, lsr #1
     f84:	7c1301e4 	ldfvcs	f0, [r3], {228}	; 0xe4
     f88:	0d000003 	stceq	0, cr0, [r0, #-12]
     f8c:	02820f0f 	addeq	r0, r2, #15, 30	; 0x3c
     f90:	01e80000 	mvneq	r0, r0
     f94:	00036513 	andeq	r6, r3, r3, lsl r5
     f98:	0f100d00 	svceq	0x00100d00
     f9c:	000000b3 	strheq	r0, [r0], -r3
     fa0:	001301f4 			; <UNDEFINED> instruction: 0x001301f4
     fa4:	0d000003 	stceq	0, cr0, [r0, #-12]
     fa8:	00b30f11 	adcseq	r0, r3, r1, lsl pc
     fac:	01f80000 	mvnseq	r0, r0
     fb0:	00040c13 	andeq	r0, r4, r3, lsl ip
     fb4:	0f120d00 	svceq	0x00120d00
     fb8:	000000a7 	andeq	r0, r0, r7, lsr #1
     fbc:	0c0001fc 	stfeqs	f0, [r0], {252}	; 0xfc
     fc0:	000000a7 	andeq	r0, r0, r7, lsr #1
     fc4:	00000282 	andeq	r0, r0, r2, lsl #5
     fc8:	00005b0d 	andeq	r5, r0, sp, lsl #22
     fcc:	0c007700 	stceq	7, cr7, [r0], {-0}
     fd0:	000000a7 	andeq	r0, r0, r7, lsr #1
     fd4:	00000292 	muleq	r0, r2, r2
     fd8:	00005b0d 	andeq	r5, r0, sp, lsl #22
     fdc:	14000200 	strne	r0, [r0], #-512	; 0xfffffe00
     fe0:	00000343 	andeq	r0, r0, r3, asr #6
     fe4:	0303130d 	movweq	r1, #13069	; 0x330d
     fe8:	00000002 	andeq	r0, r0, r2
     fec:	067f0402 	ldrbteq	r0, [pc], -r2, lsl #8
     ff0:	1f0e0000 	svcne	0x000e0000
     ff4:	0000a713 	andeq	sl, r0, r3, lsl r7
     ff8:	06410400 	strbeq	r0, [r1], -r0, lsl #8
     ffc:	210e0000 	mrscs	r0, (UNDEF: 14)
    1000:	0000a713 	andeq	sl, r0, r3, lsl r7
    1004:	02e81500 	rsceq	r1, r8, #0, 10
    1008:	0d010000 	stceq	0, cr0, [r1, #-0]
    100c:	0002c421 	andeq	ip, r2, r1, lsr #8
    1010:	92041600 	andls	r1, r4, #0, 12
    1014:	08000002 	stmdaeq	r0, {r1}
    1018:	0000100d 	andeq	r1, r0, sp
    101c:	005b0407 	subseq	r0, fp, r7, lsl #8
    1020:	0e0f0000 	cdpeq	0, 0, cr0, cr15, cr0, {0}
    1024:	00039706 	andeq	r9, r3, r6, lsl #14
    1028:	0ac10900 	beq	ff043430 <__bss_end__+0xfeefa3e8>
    102c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1030:	0000122e 	andeq	r1, r0, lr, lsr #4
    1034:	0b7f0901 	bleq	1fc3440 <__bss_end__+0x1e7a3f8>
    1038:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    103c:	00000f8e 	andeq	r0, r0, lr, lsl #31
    1040:	109a0903 	addsne	r0, sl, r3, lsl #18
    1044:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    1048:	00000b19 	andeq	r0, r0, r9, lsl fp
    104c:	0fb90905 	svceq	0x00b90905
    1050:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    1054:	00000b33 	andeq	r0, r0, r3, lsr fp
    1058:	0a950907 	beq	fe54347c <__bss_end__+0xfe3fa434>
    105c:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    1060:	00000a09 	andeq	r0, r0, r9, lsl #20
    1064:	0f2d0909 	svceq	0x002d0909
    1068:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    106c:	00000ced 	andeq	r0, r0, sp, ror #25
    1070:	1068090b 	rsbne	r0, r8, fp, lsl #18
    1074:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    1078:	00000fe3 	andeq	r0, r0, r3, ror #31
    107c:	10ab090d 	adcne	r0, fp, sp, lsl #18
    1080:	090e0000 	stmdbeq	lr, {}	; <UNPREDICTABLE>
    1084:	000011f0 	strdeq	r1, [r0], -r0
    1088:	0cc2090f 			; <UNDEFINED> instruction: 0x0cc2090f
    108c:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
    1090:	00000bd4 	ldrdeq	r0, [r0], -r4
    1094:	0ed10911 			; <UNDEFINED> instruction: 0x0ed10911
    1098:	09120000 	ldmdbeq	r2, {}	; <UNPREDICTABLE>
    109c:	0000120a 	andeq	r1, r0, sl, lsl #4
    10a0:	0b750913 	bleq	1d434f4 <__bss_end__+0x1bfa4ac>
    10a4:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
    10a8:	00000a79 	andeq	r0, r0, r9, ror sl
    10ac:	0ff70915 	svceq	0x00f70915
    10b0:	09160000 	ldmdbeq	r6, {}	; <UNPREDICTABLE>
    10b4:	00000c25 	andeq	r0, r0, r5, lsr #24
    10b8:	0b650917 	bleq	194351c <__bss_end__+0x17fa4d4>
    10bc:	09180000 	ldmdbeq	r8, {}	; <UNPREDICTABLE>
    10c0:	00000c97 	muleq	r0, r7, ip
    10c4:	117a0919 	cmnne	sl, r9, lsl r9
    10c8:	091a0000 	ldmdbeq	sl, {}	; <UNPREDICTABLE>
    10cc:	00000c86 	andeq	r0, r0, r6, lsl #25
    10d0:	0f67091b 	svceq	0x0067091b
    10d4:	091c0000 	ldmdbeq	ip, {}	; <UNPREDICTABLE>
    10d8:	00000ec4 	andeq	r0, r0, r4, asr #29
    10dc:	0969091d 	stmdbeq	r9!, {r0, r2, r3, r4, r8, fp}^
    10e0:	001e0000 	andseq	r0, lr, r0
    10e4:	00100308 	andseq	r0, r0, r8, lsl #6
    10e8:	5b040700 	blpl	102cf0 <morecore_area+0xb9cf0>
    10ec:	10000000 	andne	r0, r0, r0
    10f0:	03c8060e 	biceq	r0, r8, #14680064	; 0xe00000
    10f4:	e6090000 	str	r0, [r9], -r0
    10f8:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    10fc:	000f0a09 	andeq	r0, pc, r9, lsl #20
    1100:	8b091f00 	blhi	248d08 <__bss_end__+0xffcc0>
    1104:	2000000e 	andcs	r0, r0, lr
    1108:	00116309 	andseq	r6, r1, r9, lsl #6
    110c:	14092100 	strne	r2, [r9], #-256	; 0xffffff00
    1110:	22000012 	andcs	r0, r0, #18
    1114:	07310800 	ldreq	r0, [r1, -r0, lsl #16]!
    1118:	04070000 	streq	r0, [r7], #-0
    111c:	0000005b 	andeq	r0, r0, fp, asr r0
    1120:	41060e11 	tstmi	r6, r1, lsl lr
    1124:	09000004 	stmdbeq	r0, {r2}
    1128:	000006de 	ldrdeq	r0, [r0], -lr
    112c:	076a0900 	strbeq	r0, [sl, -r0, lsl #18]!
    1130:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    1134:	00000748 	andeq	r0, r0, r8, asr #14
    1138:	06280902 	strteq	r0, [r8], -r2, lsl #18
    113c:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
    1140:	00000898 	muleq	r0, r8, r8
    1144:	06a60904 	strteq	r0, [r6], r4, lsl #18
    1148:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    114c:	00000700 	andeq	r0, r0, r0, lsl #14
    1150:	06010906 	streq	r0, [r1], -r6, lsl #18
    1154:	09070000 	stmdbeq	r7, {}	; <UNPREDICTABLE>
    1158:	0000092a 	andeq	r0, r0, sl, lsr #18
    115c:	05c40908 	strbeq	r0, [r4, #2312]	; 0x908
    1160:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
    1164:	0000087c 	andeq	r0, r0, ip, ror r8
    1168:	0722090a 	streq	r0, [r2, -sl, lsl #18]!
    116c:	090b0000 	stmdbeq	fp, {}	; <UNPREDICTABLE>
    1170:	000005da 	ldrdeq	r0, [r0], -sl
    1174:	0669090c 	strbteq	r0, [r9], -ip, lsl #18
    1178:	090d0000 	stmdbeq	sp, {}	; <UNPREDICTABLE>
    117c:	000008ab 	andeq	r0, r0, fp, lsr #17
    1180:	080c090e 	stmdaeq	ip, {r1, r2, r3, r8, fp}
    1184:	090f0000 	stmdbeq	pc, {}	; <UNPREDICTABLE>
    1188:	000007e3 	andeq	r0, r0, r3, ror #15
    118c:	75040010 	strvc	r0, [r4, #-16]
    1190:	11000005 	tstne	r0, r5
    1194:	00a71327 	adceq	r1, r7, r7, lsr #6
    1198:	d3170000 	tstle	r7, #0
    119c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    11a0:	75102911 	ldrvc	r2, [r0, #-2321]	; 0xfffff6ef
    11a4:	18000004 	stmdane	r0, {r2}
    11a8:	000006a0 	andeq	r0, r0, r0, lsr #13
    11ac:	41122a11 	tstmi	r2, r1, lsl sl
    11b0:	00000004 	andeq	r0, r0, r4
    11b4:	646e6512 	strbtvs	r6, [lr], #-1298	; 0xfffffaee
    11b8:	122b1100 	eorne	r1, fp, #0, 2
    11bc:	00000441 	andeq	r0, r0, r1, asr #8
    11c0:	d3040004 	movwle	r0, #16388	; 0x4004
    11c4:	11000007 	tstne	r0, r7
    11c8:	044d032c 	strbeq	r0, [sp], #-812	; 0xfffffcd4
    11cc:	17170000 	ldrne	r0, [r7, -r0]
    11d0:	08000006 	stmdaeq	r0, {r1, r2}
    11d4:	c3102e11 	tstgt	r0, #272	; 0x110
    11d8:	18000004 	stmdane	r0, {r2}
    11dc:	000033c6 	andeq	r3, r0, r6, asr #7
    11e0:	a7102f11 			; <UNDEFINED> instruction: 0xa7102f11
    11e4:	00000000 	andeq	r0, r0, r0
    11e8:	0005ab18 	andeq	sl, r5, r8, lsl fp
    11ec:	10301100 	eorsne	r1, r0, r0, lsl #2
    11f0:	0000008f 	andeq	r0, r0, pc, lsl #1
    11f4:	06ca1804 	strbeq	r1, [sl], r4, lsl #16
    11f8:	31110000 	tstcc	r1, r0
    11fc:	00008f10 	andeq	r8, r0, r0, lsl pc
    1200:	46180500 	ldrmi	r0, [r8], -r0, lsl #10
    1204:	11000008 	tstne	r0, r8
    1208:	04c31032 	strbeq	r1, [r3], #50	; 0x32
    120c:	00060000 	andeq	r0, r6, r0
    1210:	00008f0c 	andeq	r8, r0, ip, lsl #30
    1214:	0004d300 	andeq	sp, r4, r0, lsl #6
    1218:	005b0d00 	subseq	r0, fp, r0, lsl #26
    121c:	00010000 	andeq	r0, r1, r0
    1220:	00061704 	andeq	r1, r6, r4, lsl #14
    1224:	03331100 	teqeq	r3, #0, 2
    1228:	00000481 	andeq	r0, r0, r1, lsl #9
    122c:	0008c811 	andeq	ip, r8, r1, lsl r8
    1230:	11078400 	tstne	r7, r0, lsl #8
    1234:	05b11039 	ldreq	r1, [r1, #57]!	; 0x39
    1238:	e2180000 	ands	r0, r8, #0
    123c:	11000008 	tstne	r0, r8
    1240:	00a7173a 	adceq	r1, r7, sl, lsr r7
    1244:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1248:	0000071b 	andeq	r0, r0, fp, lsl r7
    124c:	a0173b11 	andsge	r3, r7, r1, lsl fp
    1250:	04000002 	streq	r0, [r0], #-2
    1254:	00082518 	andeq	r2, r8, r8, lsl r5
    1258:	173c1100 	ldrne	r1, [ip, -r0, lsl #2]!
    125c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1260:	068b1808 	streq	r1, [fp], r8, lsl #16
    1264:	3d110000 	ldccc	0, cr0, [r1, #-0]
    1268:	0000a717 	andeq	sl, r0, r7, lsl r7
    126c:	58180c00 	ldmdapl	r8, {sl, fp}
    1270:	11000006 	tstne	r0, r6
    1274:	02c4173e 	sbceq	r1, r4, #16252928	; 0xf80000
    1278:	18100000 	ldmdane	r0, {}	; <UNPREDICTABLE>
    127c:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    1280:	75173f11 	ldrvc	r3, [r7, #-3857]	; 0xfffff0ef
    1284:	14000004 	strne	r0, [r0], #-4
    1288:	0007ff18 	andeq	pc, r7, r8, lsl pc	; <UNPREDICTABLE>
    128c:	17401100 	strbne	r1, [r0, -r0, lsl #2]
    1290:	00000475 	andeq	r0, r0, r5, ror r4
    1294:	05f1181c 	ldrbeq	r1, [r1, #2076]!	; 0x81c
    1298:	41110000 	tstmi	r1, r0
    129c:	00047517 	andeq	r7, r4, r7, lsl r5
    12a0:	b4182400 	ldrlt	r2, [r8], #-1024	; 0xfffffc00
    12a4:	11000005 	tstne	r0, r5
    12a8:	04751742 	ldrbteq	r1, [r5], #-1858	; 0xfffff8be
    12ac:	182c0000 	stmdane	ip!, {}	; <UNPREDICTABLE>
    12b0:	000006eb 	andeq	r0, r0, fp, ror #13
    12b4:	75174311 	ldrvc	r4, [r7, #-785]	; 0xfffffcef
    12b8:	34000004 	strcc	r0, [r0], #-4
    12bc:	00081818 	andeq	r1, r8, r8, lsl r8
    12c0:	17441100 	strbne	r1, [r4, -r0, lsl #2]
    12c4:	00000475 	andeq	r0, r0, r5, ror r4
    12c8:	082e183c 	stmdaeq	lr!, {r2, r3, r4, r5, fp, ip}
    12cc:	45110000 	ldrmi	r0, [r1, #-0]
    12d0:	0000a717 	andeq	sl, r0, r7, lsl r7
    12d4:	51184400 	tstpl	r8, r0, lsl #8
    12d8:	11000005 	tstne	r0, r5
    12dc:	02ac1746 	adceq	r1, ip, #18350080	; 0x1180000
    12e0:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
    12e4:	000034c3 	andeq	r3, r0, r3, asr #9
    12e8:	75174a11 	ldrvc	r4, [r7, #-2577]	; 0xfffff5ef
    12ec:	4c000004 	stcmi	0, cr0, [r0], {4}
    12f0:	00059f18 	andeq	r9, r5, r8, lsl pc
    12f4:	174b1100 	strbne	r1, [fp, -r0, lsl #2]
    12f8:	000005b1 			; <UNDEFINED> instruction: 0x000005b1
    12fc:	d30c0054 	movwle	r0, #49236	; 0xc054
    1300:	c1000004 	tstgt	r0, r4
    1304:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    1308:	0000005b 	andeq	r0, r0, fp, asr r0
    130c:	c80400e5 	stmdagt	r4, {r0, r2, r5, r6, r7}
    1310:	11000008 	tstne	r0, r8
    1314:	04df034e 	ldrbeq	r0, [pc], #846	; 131c <errno+0x1318>
    1318:	04190000 	ldreq	r0, [r9], #-0
    131c:	fb052012 	blx	14936e <__bss_end__+0x326>
    1320:	1a000005 	bne	133c <errno+0x1338>
    1324:	000003f2 	strdeq	r0, [r0], -r2
    1328:	690e2112 	stmdbvs	lr, {r1, r4, r8, sp}
    132c:	1a000000 	bne	1334 <errno+0x1330>
    1330:	000003ec 	andeq	r0, r0, ip, ror #7
    1334:	fb0f2212 	blx	3c9b86 <__bss_end__+0x280b3e>
    1338:	1a000005 	bne	1354 <errno+0x1350>
    133c:	000004ae 	andeq	r0, r0, lr, lsr #9
    1340:	fe102312 	mrc2	3, 0, r2, cr0, cr2, {0}
    1344:	00000005 	andeq	r0, r0, r5
    1348:	161c041b 			; <UNDEFINED> instruction: 0x161c041b
    134c:	0005fd04 	andeq	pc, r5, r4, lsl #26
    1350:	12081d00 	andne	r1, r8, #0, 26
    1354:	0628091e 			; <UNDEFINED> instruction: 0x0628091e
    1358:	8b180000 	blhi	601360 <__bss_end__+0x4b8318>
    135c:	12000003 	andne	r0, r0, #3
    1360:	0033091f 	eorseq	r0, r3, pc, lsl r9
    1364:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1368:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    136c:	cd072412 	cfstrsgt	mvf2, [r7, #-72]	; 0xffffffb8
    1370:	04000005 	streq	r0, [r0], #-5
    1374:	04a70400 	strteq	r0, [r7], #1024	; 0x400
    1378:	25120000 	ldrcs	r0, [r2, #-0]
    137c:	00060403 	andeq	r0, r6, r3, lsl #8
    1380:	06280a00 	strteq	r0, [r8], -r0, lsl #20
    1384:	40040000 	andmi	r0, r4, r0
    1388:	13000009 	movwne	r0, #9
    138c:	06450e8e 	strbeq	r0, [r5], -lr, lsl #29
    1390:	501e0000 	andspl	r0, lr, r0
    1394:	1f000006 	svcne	0x00000006
    1398:	00000033 	andeq	r0, r0, r3, lsr r0
    139c:	11840400 	orrne	r0, r4, r0, lsl #8
    13a0:	9c130000 	ldcls	0, cr0, [r3], {-0}
    13a4:	00065c0d 	andeq	r5, r6, sp, lsl #24
    13a8:	00332000 	eorseq	r2, r3, r0
    13ac:	066b0000 	strbteq	r0, [fp], -r0
    13b0:	331f0000 	tstcc	pc, #0
    13b4:	00000000 	andeq	r0, r0, r0
    13b8:	00056204 	andeq	r6, r5, r4, lsl #4
    13bc:	1e251400 	cdpne	4, 2, cr1, cr5, cr0, {0}
    13c0:	0000004f 	andeq	r0, r0, pc, asr #32
    13c4:	0008fe04 	andeq	pc, r8, r4, lsl #28
    13c8:	1e2f1400 	cdpne	4, 2, cr1, cr15, cr0, {0}
    13cc:	0000004f 	andeq	r0, r0, pc, asr #32
    13d0:	0006c004 	andeq	ip, r6, r4
    13d4:	1e321400 	cfabssne	mvf1, mvf2
    13d8:	0000004f 	andeq	r0, r0, pc, asr #32
    13dc:	3814201d 	ldmdacc	r4, {r0, r2, r3, r4, sp}
    13e0:	00070109 	andeq	r0, r7, r9, lsl #2
    13e4:	06621800 	strbteq	r1, [r2], -r0, lsl #16
    13e8:	39140000 	ldmdbcc	r4, {}	; <UNPREDICTABLE>
    13ec:	00066b11 	andeq	r6, r6, r1, lsl fp
    13f0:	60180000 	andsvs	r0, r8, r0
    13f4:	14000008 	strne	r0, [r0], #-8
    13f8:	0683113a 			; <UNDEFINED> instruction: 0x0683113a
    13fc:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    1400:	000008c0 	andeq	r0, r0, r0, asr #17
    1404:	77113b14 			; <UNDEFINED> instruction: 0x77113b14
    1408:	08000006 	stmdaeq	r0, {r1, r2}
    140c:	00059718 	andeq	r9, r5, r8, lsl r7
    1410:	113c1400 	teqne	ip, r0, lsl #8
    1414:	00000677 	andeq	r0, r0, r7, ror r6
    1418:	0873180c 	ldmdaeq	r3!, {r2, r3, fp, ip}^
    141c:	3d140000 	ldccc	0, cr0, [r4, #-0]
    1420:	00066b11 	andeq	r6, r6, r1, lsl fp
    1424:	6d181000 	ldcvs	0, cr1, [r8, #-0]
    1428:	14000005 	strne	r0, [r0], #-5
    142c:	066b113e 			; <UNDEFINED> instruction: 0x066b113e
    1430:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    1434:	000007f7 	strdeq	r0, [r0], -r7
    1438:	6b113f14 	blvs	451090 <__bss_end__+0x308048>
    143c:	18000006 	stmdane	r0, {r1, r2}
    1440:	0008eb18 	andeq	lr, r8, r8, lsl fp
    1444:	11401400 	cmpne	r0, r0, lsl #8
    1448:	0000066b 	andeq	r0, r0, fp, ror #12
    144c:	d304001c 	movwle	r0, #16412	; 0x401c
    1450:	14000006 	strne	r0, [r0], #-6
    1454:	068f0341 	streq	r0, [pc], r1, asr #6
    1458:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    145c:	15000006 	strne	r0, [r0, #-6]
    1460:	0701140b 	streq	r1, [r1, -fp, lsl #8]
    1464:	2a0c0000 	bcs	30146c <__bss_end__+0x1b8424>
    1468:	2a000007 	bcs	148c <errno+0x1488>
    146c:	21000007 	tstcs	r0, r7
    1470:	0000005b 	andeq	r0, r0, fp, asr r0
    1474:	02003fff 	andeq	r3, r0, #1020	; 0x3fc
    1478:	03350801 	teqeq	r5, #65536	; 0x10000
    147c:	2a0a0000 	bcs	281484 <__bss_end__+0x13843c>
    1480:	22000007 	andcs	r0, r0, #7
    1484:	00000f83 	andeq	r0, r0, r3, lsl #31
    1488:	190d1605 	stmdbne	sp, {r0, r2, r9, sl, ip}
    148c:	10000007 	andne	r0, r0, r7
    1490:	40000305 	andmi	r0, r0, r5, lsl #6
    1494:	041d0004 	ldreq	r0, [sp], #-4
    1498:	60091905 	andvs	r1, r9, r5, lsl #18
    149c:	18000007 	stmdane	r0, {r0, r1, r2}
    14a0:	00000cb9 			; <UNDEFINED> instruction: 0x00000cb9
    14a4:	701b1a05 	andsvc	r1, fp, r5, lsl #20
    14a8:	00000000 	andeq	r0, r0, r0
    14ac:	0eb40400 	cdpeq	4, 11, cr0, cr4, cr0, {0}
    14b0:	1b050000 	blne	1414b8 <morecore_area+0xf84b8>
    14b4:	00074903 	andeq	r4, r7, r3, lsl #18
    14b8:	050c1d00 	streq	r1, [ip, #-3328]	; 0xfffff300
    14bc:	079d0531 			; <UNDEFINED> instruction: 0x079d0531
    14c0:	82180000 	andshi	r0, r8, #0
    14c4:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    14c8:	00831c32 	addeq	r1, r3, r2, lsr ip
    14cc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    14d0:	0000381f 	andeq	r3, r0, pc, lsl r8
    14d4:	831c3305 	tsthi	ip, #335544320	; 0x14000000
    14d8:	04000000 	streq	r0, [r0], #-0
    14dc:	000adc18 	andeq	sp, sl, r8, lsl ip
    14e0:	13340500 	teqne	r4, #0, 10
    14e4:	0000079d 	muleq	r0, sp, r7
    14e8:	04160008 	ldreq	r0, [r6], #-8
    14ec:	0000070d 	andeq	r0, r0, sp, lsl #14
    14f0:	3805181d 	stmdacc	r5, {r0, r2, r3, r4, fp, ip}
    14f4:	0007fb05 	andeq	pc, r7, r5, lsl #22
    14f8:	0d931800 	ldceq	8, cr1, [r3]
    14fc:	3a050000 	bcc	141504 <morecore_area+0xf8504>
    1500:	0005fb0f 	andeq	pc, r5, pc, lsl #22
    1504:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    1508:	0500000b 	streq	r0, [r0, #-11]
    150c:	00831c3c 	addeq	r1, r3, ip, lsr ip
    1510:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    1514:	00000b59 	andeq	r0, r0, r9, asr fp
    1518:	831c3e05 	tsthi	ip, #5, 28	; 0x50
    151c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1520:	0010c518 	andseq	ip, r0, r8, lsl r5
    1524:	1c400500 	cfstr64ne	mvdx0, [r0], {-0}
    1528:	00000083 	andeq	r0, r0, r3, lsl #1
    152c:	08ed180c 	stmiaeq	sp!, {r2, r3, fp, ip}^
    1530:	42050000 	andmi	r0, r5, #0
    1534:	0000831c 	andeq	r8, r0, ip, lsl r3
    1538:	7e181000 	cdpvc	0, 1, cr1, cr8, cr0, {0}
    153c:	05000048 	streq	r0, [r0, #-72]	; 0xffffffb8
    1540:	00831c44 	addeq	r1, r3, r4, asr #24
    1544:	00140000 	andseq	r0, r4, r0
    1548:	1e05501d 	mcrne	0, 0, r5, cr5, cr13, {0}
    154c:	0008ae08 	andeq	sl, r8, r8, lsl #28
    1550:	11561800 	cmpne	r6, r0, lsl #16
    1554:	1f050000 	svcne	0x00050000
    1558:	0008ae11 	andeq	sl, r8, r1, lsl lr
    155c:	22180000 	andscs	r0, r8, #0
    1560:	0500002e 	streq	r0, [r0, #-46]	; 0xffffffd2
    1564:	08b91422 	ldmeq	r9!, {r1, r5, sl, ip}
    1568:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    156c:	00000caa 	andeq	r0, r0, sl, lsr #25
    1570:	701b2c05 	andsvc	r2, fp, r5, lsl #24
    1574:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1578:	0011c218 	andseq	ip, r1, r8, lsl r2
    157c:	0f2d0500 	svceq	0x002d0500
    1580:	000000b3 	strheq	r0, [r0], -r3
    1584:	0aa7180c 	beq	fe9c75bc <__bss_end__+0xfe87e574>
    1588:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    158c:	0002c415 	andeq	ip, r2, r5, lsl r4
    1590:	07181000 	ldreq	r1, [r8, -r0]
    1594:	0500000c 	streq	r0, [r0, #-12]
    1598:	076c0735 			; <UNDEFINED> instruction: 0x076c0735
    159c:	12140000 	andsne	r0, r4, #0
    15a0:	00736c74 	rsbseq	r6, r3, r4, ror ip
    15a4:	a3074505 	movwge	r4, #29957	; 0x7505
    15a8:	20000007 	andcs	r0, r0, r7
    15ac:	000de118 	andeq	lr, sp, r8, lsl r1
    15b0:	18480500 	stmdane	r8, {r8, sl}^
    15b4:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    15b8:	0dbe1838 	ldceq	8, cr1, [lr, #224]!	; 0xe0
    15bc:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
    15c0:	00003309 	andeq	r3, r0, r9, lsl #6
    15c4:	04183c00 	ldreq	r3, [r8], #-3072	; 0xfffff400
    15c8:	0500000d 	streq	r0, [r0, #-13]
    15cc:	08c5134c 	stmiaeq	r5, {r2, r3, r6, r8, r9, ip}^
    15d0:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
    15d4:	00000af0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    15d8:	bf184f05 	svclt	0x00184f05
    15dc:	44000008 	strmi	r0, [r0], #-8
    15e0:	00094c18 	andeq	r4, r9, r8, lsl ip
    15e4:	1a520500 	bne	14829ec <__bss_end__+0x13399a4>
    15e8:	000008cb 	andeq	r0, r0, fp, asr #17
    15ec:	11901848 	orrsne	r1, r0, r8, asr #16
    15f0:	53050000 	movwpl	r0, #20480	; 0x5000
    15f4:	0008d11e 	andeq	sp, r8, lr, lsl r1
    15f8:	16004c00 	strne	r4, [r0], -r0, lsl #24
    15fc:	00073104 	andeq	r3, r7, r4, lsl #2
    1600:	08ae0a00 	stmiaeq	lr!, {r9, fp}
    1604:	04160000 	ldreq	r0, [r6], #-0
    1608:	000005c1 	andeq	r0, r0, r1, asr #11
    160c:	08b40416 	ldmeq	r4!, {r1, r2, r4, sl}
    1610:	04160000 	ldreq	r0, [r6], #-0
    1614:	00000634 	andeq	r0, r0, r4, lsr r6
    1618:	06390416 			; <UNDEFINED> instruction: 0x06390416
    161c:	04160000 	ldreq	r0, [r6], #-0
    1620:	00000650 	andeq	r0, r0, r0, asr r6
    1624:	766e6523 	strbtvc	r6, [lr], -r3, lsr #10
    1628:	03540500 	cmpeq	r4, #0, 10
    162c:	000007fb 	strdeq	r0, [r0], -fp
    1630:	80000305 	andhi	r0, r0, r5, lsl #6
    1634:	90240004 	eorls	r0, r4, r4
    1638:	0500000b 	streq	r0, [r0, #-11]
    163c:	330c01b5 	movwcc	r0, #49589	; 0xc1b5
    1640:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    1644:	4c000113 	stfmis	f0, [r0], {19}
    1648:	01000000 	mrseq	r0, (UNDEF: 0)
    164c:	0a19259c 	beq	64acc4 <__bss_end__+0x501c7c>
    1650:	a3050000 	movwge	r0, #20480	; 0x5000
    1654:	12d40d01 	sbcsne	r0, r4, #1, 26	; 0x40
    1658:	00840001 	addeq	r0, r4, r1
    165c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1660:	0010c126 	andseq	ip, r0, r6, lsr #2
    1664:	01990500 	orrseq	r0, r9, r0, lsl #10
    1668:	00008321 	andeq	r8, r0, r1, lsr #6
    166c:	01119000 	tsteq	r1, r0
    1670:	00014400 	andeq	r4, r1, r0, lsl #8
    1674:	cf9c0100 	svcgt	0x009c0100
    1678:	27000009 	strcs	r0, [r0, -r9]
    167c:	00000c31 	andeq	r0, r0, r1, lsr ip
    1680:	44019905 	strmi	r9, [r1], #-2309	; 0xfffff6fb
    1684:	00000083 	andeq	r0, r0, r3, lsl #1
    1688:	27549102 	ldrbcs	r9, [r4, -r2, lsl #2]
    168c:	000008ed 	andeq	r0, r0, sp, ror #17
    1690:	61019905 	tstvs	r1, r5, lsl #18
    1694:	00000083 	andeq	r0, r0, r3, lsl #1
    1698:	28509102 	ldmdacs	r0, {r1, r8, ip, pc}^
    169c:	000111a4 	andeq	r1, r1, r4, lsr #3
    16a0:	0000005c 	andeq	r0, r0, ip, asr r0
    16a4:	0000097a 	andeq	r0, r0, sl, ror r9
    16a8:	006e5f29 	rsbeq	r5, lr, r9, lsr #30
    16ac:	0e019c05 	cdpeq	12, 0, cr9, cr1, cr5, {0}
    16b0:	0000005b 	andeq	r0, r0, fp, asr r0
    16b4:	296c9102 	stmdbcs	ip!, {r1, r8, ip, pc}^
    16b8:	0500625f 	streq	r6, [r0, #-607]	; 0xfffffda1
    16bc:	830e019c 	movwhi	r0, #57756	; 0xe19c
    16c0:	02000000 	andeq	r0, r0, #0
    16c4:	28006891 	stmdacs	r0, {r0, r4, r7, fp, sp, lr}
    16c8:	00011208 	andeq	r1, r1, r8, lsl #4
    16cc:	0000005c 	andeq	r0, r0, ip, asr r0
    16d0:	000009a6 	andeq	r0, r0, r6, lsr #19
    16d4:	006e5f29 	rsbeq	r5, lr, r9, lsr #30
    16d8:	0e019e05 	cdpeq	14, 0, cr9, cr1, cr5, {0}
    16dc:	00000033 	andeq	r0, r0, r3, lsr r0
    16e0:	29649102 	stmdbcs	r4!, {r1, r8, ip, pc}^
    16e4:	0500625f 	streq	r6, [r0, #-607]	; 0xfffffda1
    16e8:	830e019e 	movwhi	r0, #57758	; 0xe19e
    16ec:	02000000 	andeq	r0, r0, #0
    16f0:	2a006091 	bcs	1993c <get_interrupts_prop+0xd4>
    16f4:	00011268 	andeq	r1, r1, r8, ror #4
    16f8:	0000005c 	andeq	r0, r0, ip, asr r0
    16fc:	006e5f29 	rsbeq	r5, lr, r9, lsr #30
    1700:	0e01a005 	cdpeq	0, 0, cr10, cr1, cr5, {0}
    1704:	00000083 	andeq	r0, r0, r3, lsl #1
    1708:	295c9102 	ldmdbcs	ip, {r1, r8, ip, pc}^
    170c:	0500625f 	streq	r6, [r0, #-607]	; 0xfffffda1
    1710:	830e01a0 	movwhi	r0, #57760	; 0xe1a0
    1714:	02000000 	andeq	r0, r0, #0
    1718:	00005891 	muleq	r0, r1, r8
    171c:	000d382b 	andeq	r3, sp, fp, lsr #16
    1720:	018e0500 	orreq	r0, lr, r0, lsl #10
    1724:	0009fb19 	andeq	pc, r9, r9, lsl fp	; <UNPREDICTABLE>
    1728:	01116c00 	tsteq	r1, r0, lsl #24
    172c:	00002400 	andeq	r2, r0, r0, lsl #8
    1730:	fb9c0100 	blx	fe701b3a <__bss_end__+0xfe5b8af2>
    1734:	27000009 	strcs	r0, [r0, -r9]
    1738:	00000e49 	andeq	r0, r0, r9, asr #28
    173c:	14018f05 	strne	r8, [r1], #-3845	; 0xfffff0fb
    1740:	00000a01 	andeq	r0, r0, r1, lsl #20
    1744:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1748:	07600416 			; <UNDEFINED> instruction: 0x07600416
    174c:	04160000 	ldreq	r0, [r6], #-0
    1750:	00000041 	andeq	r0, r0, r1, asr #32
    1754:	00101e26 	andseq	r1, r0, r6, lsr #28
    1758:	01890500 	orreq	r0, r9, r0, lsl #10
    175c:	000a0117 	andeq	r0, sl, r7, lsl r1
    1760:	01113800 	tsteq	r1, r0, lsl #16
    1764:	00003400 	andeq	r3, r0, r0, lsl #8
    1768:	339c0100 	orrscc	r0, ip, #0, 2
    176c:	2700000a 	strcs	r0, [r0, -sl]
    1770:	00000e49 	andeq	r0, r0, r9, asr #28
    1774:	3a018905 	bcc	63b90 <morecore_area+0x1ab90>
    1778:	00000a01 	andeq	r0, r0, r1, lsl #20
    177c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1780:	0010d12b 	andseq	sp, r0, fp, lsr #2
    1784:	017d0500 	cmneq	sp, r0, lsl #10
    1788:	000a0117 	andeq	r0, sl, r7, lsl r1
    178c:	01110000 	tsteq	r1, r0
    1790:	00003800 	andeq	r3, r0, r0, lsl #16
    1794:	6f9c0100 	svcvs	0x009c0100
    1798:	2700000a 	strcs	r0, [r0, -sl]
    179c:	00000cb9 			; <UNDEFINED> instruction: 0x00000cb9
    17a0:	3f017d05 	svccc	0x00017d05
    17a4:	00000070 	andeq	r0, r0, r0, ror r0
    17a8:	2c6c9102 	stfcsp	f1, [ip], #-8
    17ac:	00000f39 	andeq	r0, r0, r9, lsr pc
    17b0:	1b017f05 	blne	613cc <morecore_area+0x183cc>
    17b4:	00000070 	andeq	r0, r0, r0, ror r0
    17b8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    17bc:	000e3b26 	andeq	r3, lr, r6, lsr #22
    17c0:	01740500 	cmneq	r4, r0, lsl #10
    17c4:	0000701e 	andeq	r7, r0, lr, lsl r0
    17c8:	01107800 	tsteq	r0, r0, lsl #16
    17cc:	00008800 	andeq	r8, r0, r0, lsl #16
    17d0:	d39c0100 	orrsle	r0, ip, #0, 2
    17d4:	2700000a 	strcs	r0, [r0, -sl]
    17d8:	00000e49 	andeq	r0, r0, r9, asr #28
    17dc:	46017405 	strmi	r7, [r1], -r5, lsl #8
    17e0:	00000a01 	andeq	r0, r0, r1, lsl #20
    17e4:	2c649102 	stfcsp	f1, [r4], #-8
    17e8:	00000cb9 			; <UNDEFINED> instruction: 0x00000cb9
    17ec:	1b017605 	blne	5f008 <morecore_area+0x16008>
    17f0:	00000070 	andeq	r0, r0, r0, ror r0
    17f4:	2a749102 	bcs	1d25c04 <__bss_end__+0x1bdcbbc>
    17f8:	00011090 	muleq	r1, r0, r0
    17fc:	00000064 	andeq	r0, r0, r4, rrx
    1800:	006e5f29 	rsbeq	r5, lr, r9, lsr #30
    1804:	0c017a05 			; <UNDEFINED> instruction: 0x0c017a05
    1808:	00000070 	andeq	r0, r0, r0, ror r0
    180c:	29709102 	ldmdbcs	r0!, {r1, r8, ip, pc}^
    1810:	0500625f 	streq	r6, [r0, #-607]	; 0xfffffda1
    1814:	830c017a 	movwhi	r0, #49530	; 0xc17a
    1818:	02000000 	andeq	r0, r0, #0
    181c:	00006c91 	muleq	r0, r1, ip
    1820:	000d6f2d 	andeq	r6, sp, sp, lsr #30
    1824:	01670500 	cmneq	r7, r0, lsl #10
    1828:	010fbc0d 	tsteq	pc, sp, lsl #24
    182c:	0000bc00 	andeq	fp, r0, r0, lsl #24
    1830:	2b9c0100 	blcs	fe701c38 <__bss_end__+0xfe5b8bf0>
    1834:	2700000b 	strcs	r0, [r0, -fp]
    1838:	00000e49 	andeq	r0, r0, r9, asr #28
    183c:	2a016705 	bcs	5b458 <morecore_area+0x12458>
    1840:	00000a01 	andeq	r0, r0, r1, lsl #20
    1844:	29649102 	stmdbcs	r4!, {r1, r8, ip, pc}^
    1848:	00736c74 	rsbseq	r6, r3, r4, ror ip
    184c:	14016905 	strne	r6, [r1], #-2309	; 0xfffff6fb
    1850:	00000a01 	andeq	r0, r0, r1, lsl #20
    1854:	2c749102 	ldfcsp	f1, [r4], #-8
    1858:	0000119c 	muleq	r0, ip, r1
    185c:	14016b05 	strne	r6, [r1], #-2821	; 0xfffff4fb
    1860:	00000a01 	andeq	r0, r0, r1, lsl #20
    1864:	2c709102 	ldfcsp	f1, [r0], #-8
    1868:	00000dab 	andeq	r0, r0, fp, lsr #27
    186c:	16016e05 	strne	r6, [r1], -r5, lsl #28
    1870:	000009fb 	strdeq	r0, [r0], -fp
    1874:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    1878:	000f7a25 	andeq	r7, pc, r5, lsr #20
    187c:	01600500 	cmneq	r0, r0, lsl #10
    1880:	010f8c0d 	tsteq	pc, sp, lsl #24
    1884:	00003000 	andeq	r3, r0, r0
    1888:	2d9c0100 	ldfcss	f0, [ip]
    188c:	00000e7d 	andeq	r0, r0, sp, ror lr
    1890:	0d015005 	stceq	0, cr5, [r1, #-20]	; 0xffffffec
    1894:	00010e68 	andeq	r0, r1, r8, ror #28
    1898:	00000124 	andeq	r0, r0, r4, lsr #2
    189c:	0b8e9c01 	bleq	fe3a88a8 <__bss_end__+0xfe25f860>
    18a0:	cc270000 	stcgt	0, cr0, [r7], #-0
    18a4:	05000048 	streq	r0, [r0, #-72]	; 0xffffffb8
    18a8:	9d250150 	stflss	f0, [r5, #-320]!	; 0xfffffec0
    18ac:	02000007 	andeq	r0, r0, #7
    18b0:	dc2a6c91 	stcle	12, cr6, [sl], #-580	; 0xfffffdbc
    18b4:	6400010e 	strvs	r0, [r0], #-270	; 0xfffffef2
    18b8:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    18bc:	05006e5f 	streq	r6, [r0, #-3679]	; 0xfffff1a1
    18c0:	6b1b0159 	blvs	6c1e2c <__bss_end__+0x578de4>
    18c4:	02000006 	andeq	r0, r0, #6
    18c8:	5f297491 	svcpl	0x00297491
    18cc:	59050062 	stmdbpl	r5, {r1, r5, r6}
    18d0:	066b1b01 	strbteq	r1, [fp], -r1, lsl #22
    18d4:	91020000 	mrsls	r0, (UNDEF: 2)
    18d8:	2d000070 	stccs	0, cr0, [r0, #-448]	; 0xfffffe40
    18dc:	000011fe 	strdeq	r1, [r0], -lr
    18e0:	0d014205 	sfmeq	f4, 4, [r1, #-20]	; 0xffffffec
    18e4:	00010de0 	andeq	r0, r1, r0, ror #27
    18e8:	00000088 	andeq	r0, r0, r8, lsl #1
    18ec:	0bd89c01 	bleq	ff6288f8 <__bss_end__+0xff4df8b0>
    18f0:	ec2a0000 	stc	0, cr0, [sl], #-0
    18f4:	6c00010d 	stfvss	f0, [r0], {13}
    18f8:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
    18fc:	44050068 	strmi	r0, [r5], #-104	; 0xffffff98
    1900:	00831d01 	addeq	r1, r3, r1, lsl #26
    1904:	91020000 	mrsls	r0, (UNDEF: 2)
    1908:	0df82a74 			; <UNDEFINED> instruction: 0x0df82a74
    190c:	003c0001 	eorseq	r0, ip, r1
    1910:	cc2c0000 	stcgt	0, cr0, [ip], #-0
    1914:	05000048 	streq	r0, [r0, #-72]	; 0xffffffb8
    1918:	9d130145 	ldflss	f0, [r3, #-276]	; 0xfffffeec
    191c:	02000007 	andeq	r0, r0, #7
    1920:	00007091 	muleq	r0, r1, r0
    1924:	0e302e00 	cdpeq	14, 3, cr2, cr0, cr0, {0}
    1928:	1a050000 	bne	141930 <morecore_area+0xf8930>
    192c:	0bfc0d01 	bleq	fff04d38 <__bss_end__+0xffdbbcf0>
    1930:	01e40001 	mvneq	r0, r1
    1934:	9c010000 	stcls	0, cr0, [r1], {-0}
    1938:	00000c2e 	andeq	r0, r0, lr, lsr #24
    193c:	000d0427 	andeq	r0, sp, r7, lsr #8
    1940:	011a0500 	tsteq	sl, r0, lsl #10
    1944:	0008c525 	andeq	ip, r8, r5, lsr #10
    1948:	6c910200 	lfmvs	f0, 4, [r1], {0}
    194c:	010c0c2a 	tsteq	ip, sl, lsr #24
    1950:	0001c000 	andeq	ip, r1, r0
    1954:	00692900 	rsbeq	r2, r9, r0, lsl #18
    1958:	0e011c05 	cdpeq	12, 0, cr1, cr1, cr5, {0}
    195c:	00000033 	andeq	r0, r0, r3, lsr r0
    1960:	2f749102 	svccs	0x00749102
    1964:	00000020 	andeq	r0, r0, r0, lsr #32
    1968:	002e222c 	eoreq	r2, lr, ip, lsr #4
    196c:	012b0500 			; <UNDEFINED> instruction: 0x012b0500
    1970:	0008b91c 	andeq	fp, r8, ip, lsl r9
    1974:	70910200 	addsvc	r0, r1, r0, lsl #4
    1978:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    197c:	0000112e 	andeq	r1, r0, lr, lsr #2
    1980:	0d010d05 	stceq	13, cr0, [r1, #-20]	; 0xffffffec
    1984:	00010b7c 	andeq	r0, r1, ip, ror fp
    1988:	00000080 	andeq	r0, r0, r0, lsl #1
    198c:	0c569c01 	mrrceq	12, 0, r9, r6, cr1
    1990:	29270000 	stmdbcs	r7!, {}	; <UNPREDICTABLE>
    1994:	05000020 	streq	r0, [r0, #-32]	; 0xffffffe0
    1998:	ae26010d 	sufges	f0, f6, #5.0
    199c:	02000008 	andeq	r0, r0, #8
    19a0:	30007491 	mulcc	r0, r1, r4
    19a4:	00000f42 	andeq	r0, r0, r2, asr #30
    19a8:	e006f605 	and	pc, r6, r5, lsl #12
    19ac:	9c00010a 	stflss	f0, [r0], {10}
    19b0:	01000000 	mrseq	r0, (UNDEF: 0)
    19b4:	000ca99c 	muleq	ip, ip, r9
    19b8:	0dbe3100 	ldfeqs	f3, [lr]
    19bc:	f7050000 			; <UNDEFINED> instruction: 0xf7050000
    19c0:	00003309 	andeq	r3, r0, r9, lsl #6
    19c4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    19c8:	000de131 	andeq	lr, sp, r1, lsr r1
    19cc:	18f80500 	ldmne	r8!, {r8, sl}^
    19d0:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    19d4:	31709102 	cmncc	r0, r2, lsl #2
    19d8:	00000af0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    19dc:	bf18f905 	svclt	0x0018f905
    19e0:	02000008 	andeq	r0, r0, #8
    19e4:	04316c91 	ldrteq	r6, [r1], #-3217	; 0xfffff36f
    19e8:	0500000d 	streq	r0, [r0, #-13]
    19ec:	08c512fa 	stmiaeq	r5, {r1, r3, r4, r5, r6, r7, r9, ip}^
    19f0:	91020000 	mrsls	r0, (UNDEF: 2)
    19f4:	32320068 	eorscc	r0, r2, #104	; 0x68
    19f8:	05000010 	streq	r0, [r0, #-16]
    19fc:	003305dd 	ldrsbteq	r0, [r3], -sp
    1a00:	0a240000 	beq	901a08 <__bss_end__+0x7b89c0>
    1a04:	00bc0001 	adcseq	r0, ip, r1
    1a08:	9c010000 	stcls	0, cr0, [r1], {-0}
    1a0c:	00000d5a 	andeq	r0, r0, sl, asr sp
    1a10:	000f1f31 	andeq	r1, pc, r1, lsr pc	; <UNPREDICTABLE>
    1a14:	1bde0500 	blne	ff782e1c <__bss_end__+0xff639dd4>
    1a18:	00000070 	andeq	r0, r0, r0, ror r0
    1a1c:	315c9102 	cmpcc	ip, r2, lsl #2
    1a20:	00000c16 	andeq	r0, r0, r6, lsl ip
    1a24:	0114df05 	tsteq	r4, r5, lsl #30
    1a28:	0200000a 	andeq	r0, r0, #10
    1a2c:	73335891 	teqvc	r3, #9502720	; 0x910000
    1a30:	05006372 	streq	r6, [r0, #-882]	; 0xfffffc8e
    1a34:	0a0114e0 	beq	46dbc <static_tls+0x2dbc>
    1a38:	91020000 	mrsls	r0, (UNDEF: 2)
    1a3c:	0fc83154 	svceq	0x00c83154
    1a40:	e1050000 	mrs	r0, (UNDEF: 5)
    1a44:	00008318 	andeq	r8, r0, r8, lsl r3
    1a48:	50910200 	addspl	r0, r1, r0, lsl #4
    1a4c:	000ea50b 	andeq	sl, lr, fp, lsl #10
    1a50:	1be40500 	blne	ff902e58 <__bss_end__+0xff7b9e10>
    1a54:	00000070 	andeq	r0, r0, r0, ror r0
    1a58:	0b749102 	bleq	1d25e68 <__bss_end__+0x1bdce20>
    1a5c:	0000105e 	andeq	r1, r0, lr, asr r0
    1a60:	0114e505 	tsteq	r4, r5, lsl #10
    1a64:	0200000a 	andeq	r0, r0, #10
    1a68:	7e0b7091 	mcrvc	0, 0, r7, cr11, cr1, {4}
    1a6c:	05000048 	streq	r0, [r0, #-72]	; 0xffffffb8
    1a70:	008318e6 	addeq	r1, r3, r6, ror #17
    1a74:	91020000 	mrsls	r0, (UNDEF: 2)
    1a78:	0d660b6c 	vstmdbeq	r6!, {d16-<overflow reg d69>}
    1a7c:	e7050000 	str	r0, [r5, -r0]
    1a80:	00008318 	andeq	r8, r0, r8, lsl r3
    1a84:	68910200 	ldmvs	r1, {r9}
    1a88:	000bed0b 	andeq	lr, fp, fp, lsl #26
    1a8c:	14ee0500 	strbtne	r0, [lr], #1280	; 0x500
    1a90:	00000a01 	andeq	r0, r0, r1, lsl #20
    1a94:	0b649102 	bleq	1925ea4 <__bss_end__+0x17dce5c>
    1a98:	000011b8 			; <UNDEFINED> instruction: 0x000011b8
    1a9c:	0114ef05 	tsteq	r4, r5, lsl #30
    1aa0:	0200000a 	andeq	r0, r0, #10
    1aa4:	30006091 	mulcc	r0, r1, r0
    1aa8:	00000bf6 	strdeq	r0, [r0], -r6
    1aac:	c406ce05 	strgt	ip, [r6], #-3589	; 0xfffff1fb
    1ab0:	60000109 	andvs	r0, r0, r9, lsl #2
    1ab4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ab8:	000d809c 	muleq	sp, ip, r0
    1abc:	0cd63100 	ldfeqe	f3, [r6], {0}
    1ac0:	ce050000 	cdpgt	0, 0, cr0, cr5, cr0, {0}
    1ac4:	0000331b 	andeq	r3, r0, fp, lsl r3
    1ac8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1acc:	10fb3400 	rscsne	r3, fp, r0, lsl #8
    1ad0:	c7050000 	strgt	r0, [r5, -r0]
    1ad4:	0008d11a 	andeq	sp, r8, sl, lsl r1
    1ad8:	01098000 	mrseq	r8, (UNDEF: 9)
    1adc:	00004400 	andeq	r4, r0, r0, lsl #8
    1ae0:	b89c0100 	ldmlt	ip, {r8}
    1ae4:	3300000d 	movwcc	r0, #13
    1ae8:	05006263 	streq	r6, [r0, #-611]	; 0xfffffd9d
    1aec:	08d14cc7 	ldmeq	r1, {r0, r1, r2, r6, r7, sl, fp, lr}^
    1af0:	91020000 	mrsls	r0, (UNDEF: 2)
    1af4:	6c6f236c 	stclvs	3, cr2, [pc], #-432	; 194c <errno+0x1948>
    1af8:	c9050064 	stmdbgt	r5, {r2, r5, r6}
    1afc:	0008d11e 	andeq	sp, r8, lr, lsl r1
    1b00:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1b04:	09543400 	ldmdbeq	r4, {sl, ip, sp}^
    1b08:	c0050000 	andgt	r0, r5, r0
    1b0c:	0008cb16 	andeq	ip, r8, r6, lsl fp
    1b10:	01093c00 	tsteq	r9, r0, lsl #24
    1b14:	00004400 	andeq	r4, r0, r0, lsl #8
    1b18:	f09c0100 			; <UNDEFINED> instruction: 0xf09c0100
    1b1c:	3300000d 	movwcc	r0, #13
    1b20:	05006263 	streq	r6, [r0, #-611]	; 0xfffffd9d
    1b24:	08cb40c0 	stmiaeq	fp, {r6, r7, lr}^
    1b28:	91020000 	mrsls	r0, (UNDEF: 2)
    1b2c:	6c6f236c 	stclvs	3, cr2, [pc], #-432	; 1984 <errno+0x1980>
    1b30:	c2050064 	andgt	r0, r5, #100	; 0x64
    1b34:	0008cb1a 	andeq	ip, r8, sl, lsl fp
    1b38:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1b3c:	09973200 	ldmibeq	r7, {r9, ip, sp}
    1b40:	a2050000 	andge	r0, r5, #0
    1b44:	00007017 	andeq	r7, r0, r7, lsl r0
    1b48:	01083400 	tsteq	r8, r0, lsl #8
    1b4c:	00010800 	andeq	r0, r1, r0, lsl #16
    1b50:	299c0100 	ldmibcs	ip, {r8}
    1b54:	3100000e 	tstcc	r0, lr
    1b58:	00001053 	andeq	r1, r0, r3, asr r0
    1b5c:	fb3aa205 	blx	eaa37a <__bss_end__+0xd61332>
    1b60:	02000005 	andeq	r0, r0, #5
    1b64:	b90b6c91 	stmdblt	fp, {r0, r4, r7, sl, fp, sp, lr}
    1b68:	0500000c 	streq	r0, [r0, #-12]
    1b6c:	00701ba8 	rsbseq	r1, r0, r8, lsr #23
    1b70:	91020000 	mrsls	r0, (UNDEF: 2)
    1b74:	7d320074 	ldcvc	0, cr0, [r2, #-464]!	; 0xfffffe30
    1b78:	0500000d 	streq	r0, [r0, #-13]
    1b7c:	00701797 			; <UNDEFINED> instruction: 0x00701797
    1b80:	07f00000 	ldrbeq	r0, [r0, r0]!
    1b84:	00440001 	subeq	r0, r4, r1
    1b88:	9c010000 	stcls	0, cr0, [r1], {-0}
    1b8c:	00000e53 	andeq	r0, r0, r3, asr lr
    1b90:	00105331 	andseq	r5, r0, r1, lsr r3
    1b94:	39970500 	ldmibcc	r7, {r8, sl}
    1b98:	000005fb 	strdeq	r0, [r0], -fp
    1b9c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1ba0:	00107a35 	andseq	r7, r0, r5, lsr sl
    1ba4:	058d0500 	streq	r0, [sp, #1280]	; 0x500
    1ba8:	00000033 	andeq	r0, r0, r3, lsr r0
    1bac:	000107bc 			; <UNDEFINED> instruction: 0x000107bc
    1bb0:	00000034 	andeq	r0, r0, r4, lsr r0
    1bb4:	56359c01 	ldrtpl	r9, [r5], -r1, lsl #24
    1bb8:	0500000d 	streq	r0, [r0, #-13]
    1bbc:	00831488 	addeq	r1, r3, r8, lsl #9
    1bc0:	07980000 	ldreq	r0, [r8, r0]
    1bc4:	00240001 	eoreq	r0, r4, r1
    1bc8:	9c010000 	stcls	0, cr0, [r1], {-0}
    1bcc:	000b4435 	andeq	r4, fp, r5, lsr r4
    1bd0:	10830500 	addne	r0, r3, r0, lsl #10
    1bd4:	000008b9 			; <UNDEFINED> instruction: 0x000008b9
    1bd8:	00010774 	andeq	r0, r1, r4, ror r7
    1bdc:	00000024 	andeq	r0, r0, r4, lsr #32
    1be0:	f8359c01 			; <UNDEFINED> instruction: 0xf8359c01
    1be4:	0500000c 	streq	r0, [r0, #-12]
    1be8:	08c50f7e 	stmiaeq	r5, {r1, r2, r3, r4, r5, r6, r8, r9, sl, fp}^
    1bec:	07500000 	ldrbeq	r0, [r0, -r0]
    1bf0:	00240001 	eoreq	r0, r4, r1
    1bf4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1bf8:	000ae435 	andeq	lr, sl, r5, lsr r4
    1bfc:	14790500 	ldrbtne	r0, [r9], #-1280	; 0xfffffb00
    1c00:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    1c04:	0001072c 	andeq	r0, r1, ip, lsr #14
    1c08:	00000024 	andeq	r0, r0, r4, lsr #32
    1c0c:	b2359c01 	eorslt	r9, r5, #256	; 0x100
    1c10:	0500000d 	streq	r0, [r0, #-13]
    1c14:	00330574 	eorseq	r0, r3, r4, ror r5
    1c18:	07080000 	streq	r0, [r8, -r0]
    1c1c:	00240001 	eoreq	r0, r4, r1
    1c20:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c24:	000dd535 	andeq	sp, sp, r5, lsr r5
    1c28:	146f0500 	strbtne	r0, [pc], #-1280	; 1c30 <errno+0x1c2c>
    1c2c:	000008bf 			; <UNDEFINED> instruction: 0x000008bf
    1c30:	000106e4 	andeq	r0, r1, r4, ror #13
    1c34:	00000024 	andeq	r0, r0, r4, lsr #32
    1c38:	4a359c01 	bmi	d68c44 <__bss_end__+0xc1fbfc>
    1c3c:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    1c40:	08ae0d6a 	stmiaeq	lr!, {r1, r3, r5, r6, r8, sl, fp}
    1c44:	06c00000 	strbeq	r0, [r0], r0
    1c48:	00240001 	eoreq	r0, r4, r1
    1c4c:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c50:	000af536 	andeq	pc, sl, r6, lsr r5	; <UNPREDICTABLE>
    1c54:	25300400 	ldrcs	r0, [r0, #-1024]!	; 0xfffffc00
    1c58:	00000070 	andeq	r0, r0, r0, ror r0
    1c5c:	000106a8 	andeq	r0, r1, r8, lsr #13
    1c60:	00000018 	andeq	r0, r0, r8, lsl r0
    1c64:	a2379c01 	eorsge	r9, r7, #256	; 0x100
    1c68:	0400000b 	streq	r0, [r0], #-11
    1c6c:	06841424 	streq	r1, [r4], r4, lsr #8
    1c70:	00240001 	eoreq	r0, r4, r1
    1c74:	9c010000 	stcls	0, cr0, [r1], {-0}
    1c78:	00000f3f 	andeq	r0, r0, pc, lsr pc
    1c7c:	000cb931 	andeq	fp, ip, r1, lsr r9
    1c80:	43240400 			; <UNDEFINED> instruction: 0x43240400
    1c84:	00000070 	andeq	r0, r0, r0, ror r0
    1c88:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1c8c:	00097b38 	andeq	r7, r9, r8, lsr fp
    1c90:	14150400 	ldrne	r0, [r5], #-1024	; 0xfffffc00
    1c94:	0001065c 	andeq	r0, r1, ip, asr r6
    1c98:	00000028 	andeq	r0, r0, r8, lsr #32
    1c9c:	0f659c01 	svceq	0x00659c01
    1ca0:	72330000 	eorsvc	r0, r3, #0
    1ca4:	04006765 	streq	r6, [r0], #-1893	; 0xfffff89b
    1ca8:	00704615 	rsbseq	r4, r0, r5, lsl r6
    1cac:	91020000 	mrsls	r0, (UNDEF: 2)
    1cb0:	0e390074 	mrceq	0, 1, r0, cr9, cr4, {3}
    1cb4:	0400000d 	streq	r0, [r0], #-13
    1cb8:	0070250e 	rsbseq	r2, r0, lr, lsl #10
    1cbc:	06340000 	ldrteq	r0, [r4], -r0
    1cc0:	00280001 	eoreq	r0, r8, r1
    1cc4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1cc8:	00000f8f 	andeq	r0, r0, pc, lsl #31
    1ccc:	67657223 	strbvs	r7, [r5, -r3, lsr #4]!
    1cd0:	1b100400 	blne	402cd8 <__bss_end__+0x2b9c90>
    1cd4:	00000070 	andeq	r0, r0, r0, ror r0
    1cd8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1cdc:	0011192d 	andseq	r1, r1, sp, lsr #18
    1ce0:	02790300 	rsbseq	r0, r9, #0, 6
    1ce4:	0105881a 	tsteq	r5, sl, lsl r8
    1ce8:	0000ac00 	andeq	sl, r0, r0, lsl #24
    1cec:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
    1cf0:	3a000010 	bcc	1d38 <errno+0x1d34>
    1cf4:	00626374 	rsbeq	r6, r2, r4, ror r3
    1cf8:	39027903 	stmdbcc	r2, {r0, r1, r8, fp, ip, sp, lr}
    1cfc:	000000b3 	strheq	r0, [r0], -r3
    1d00:	275c9102 	ldrbcs	r9, [ip, -r2, lsl #2]
    1d04:	00002029 	andeq	r2, r0, r9, lsr #32
    1d08:	4a027903 	bmi	a011c <morecore_area+0x5711c>
    1d0c:	000008ae 	andeq	r0, r0, lr, lsr #17
    1d10:	2c589102 	ldfcsp	f1, [r8], {2}
    1d14:	00000e08 	andeq	r0, r0, r8, lsl #28
    1d18:	0f027d03 	svceq	0x00027d03
    1d1c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1d20:	2c749102 	ldfcsp	f1, [r4], #-8
    1d24:	00000e10 	andeq	r0, r0, r0, lsl lr
    1d28:	0f027e03 	svceq	0x00027e03
    1d2c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1d30:	2c709102 	ldfcsp	f1, [r0], #-8
    1d34:	00001072 	andeq	r1, r0, r2, ror r0
    1d38:	0f027f03 	svceq	0x00027f03
    1d3c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1d40:	2c6c9102 	stfcsp	f1, [ip], #-8
    1d44:	00000e18 	andeq	r0, r0, r8, lsl lr
    1d48:	0f028003 	svceq	0x00028003
    1d4c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1d50:	2c689102 	stfcsp	f1, [r8], #-8
    1d54:	00000e20 	andeq	r0, r0, r0, lsr #28
    1d58:	0f028103 	svceq	0x00028103
    1d5c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1d60:	2c649102 	stfcsp	f1, [r4], #-8
    1d64:	00000e28 	andeq	r0, r0, r8, lsr #28
    1d68:	0f028203 	svceq	0x00028203
    1d6c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1d70:	00609102 	rsbeq	r9, r0, r2, lsl #2
    1d74:	000d9938 	andeq	r9, sp, r8, lsr r9
    1d78:	14920200 	ldrne	r0, [r2], #512	; 0x200
    1d7c:	000104dc 	ldrdeq	r0, [r1], -ip
    1d80:	000000ac 	andeq	r0, r0, ip, lsr #1
    1d84:	11369c01 	teqne	r6, r1, lsl #24
    1d88:	73330000 	teqvc	r3, #0
    1d8c:	02007379 	andeq	r7, r0, #-469762047	; 0xe4000001
    1d90:	00a73092 	umlaleq	r3, r7, r2, r0
    1d94:	91020000 	mrsls	r0, (UNDEF: 2)
    1d98:	0c20316c 	stfeqs	f3, [r0], #-432	; 0xfffffe50
    1d9c:	92020000 	andls	r0, r2, #0
    1da0:	0000a73f 	andeq	sl, r0, pc, lsr r7
    1da4:	68910200 	ldmvs	r1, {r9}
    1da8:	0011ae31 	andseq	sl, r1, r1, lsr lr
    1dac:	50920200 	addspl	r0, r2, r0, lsl #4
    1db0:	00001136 	andeq	r1, r0, r6, lsr r1
    1db4:	31649102 	cmncc	r4, r2, lsl #2
    1db8:	000010f2 	strdeq	r1, [r0], -r2
    1dbc:	a7659202 	strbge	r9, [r5, -r2, lsl #4]!
    1dc0:	02000000 	andeq	r0, r0, #0
    1dc4:	d3316091 	teqle	r1, #145	; 0x91
    1dc8:	0200000a 	andeq	r0, r0, #10
    1dcc:	11363193 	teqne	r6, r3	; <illegal shifter operand>
    1dd0:	91020000 	mrsls	r0, (UNDEF: 2)
    1dd4:	09dd3100 	ldmibeq	sp, {r8, ip, sp}^
    1dd8:	93020000 	movwls	r0, #8192	; 0x2000
    1ddc:	00113646 	andseq	r3, r1, r6, asr #12
    1de0:	04910200 	ldreq	r0, [r1], #512	; 0x200
    1de4:	0009e831 	andeq	lr, r9, r1, lsr r8
    1de8:	5d930200 	lfmpl	f0, 4, [r3]
    1dec:	00001136 	andeq	r1, r0, r6, lsr r1
    1df0:	31089102 	tstcc	r8, r2, lsl #2
    1df4:	000009f3 	strdeq	r0, [r0], -r3
    1df8:	36749302 	ldrbtcc	r9, [r4], -r2, lsl #6
    1dfc:	02000011 	andeq	r0, r0, #17
    1e00:	fe310c91 	mrc2	12, 1, r0, cr1, cr1, {4}
    1e04:	02000009 	andeq	r0, r0, #9
    1e08:	11368b93 	teqne	r6, r3	; <illegal shifter operand>
    1e0c:	91020000 	mrsls	r0, (UNDEF: 2)
    1e10:	093a3110 	ldmdbeq	sl!, {r4, r8, ip, sp}
    1e14:	94020000 	strls	r0, [r2], #-0
    1e18:	0000a73f 	andeq	sl, r0, pc, lsr r7
    1e1c:	14910200 	ldrne	r0, [r1], #512	; 0x200
    1e20:	000cce0b 	andeq	ip, ip, fp, lsl #28
    1e24:	18960200 	ldmne	r6, {r9}
    1e28:	000000a7 	andeq	r0, r0, r7, lsr #1
    1e2c:	a90b5001 	stmdbge	fp, {r0, ip, lr}
    1e30:	02000028 	andeq	r0, r0, #40	; 0x28
    1e34:	00a71897 	umlaleq	r1, r7, r7, r8
    1e38:	51010000 	mrspl	r0, (UNDEF: 1)
    1e3c:	00113b0b 	andseq	r3, r1, fp, lsl #22
    1e40:	189a0200 	ldmne	sl, {r9}
    1e44:	000000a7 	andeq	r0, r0, r7, lsr #1
    1e48:	400b5201 	andmi	r5, fp, r1, lsl #4
    1e4c:	02000011 	andeq	r0, r0, #17
    1e50:	00a7189b 	umlaleq	r1, r7, fp, r8
    1e54:	53010000 	movwpl	r0, #4096	; 0x1000
    1e58:	0011450b 	andseq	r4, r1, fp, lsl #10
    1e5c:	189c0200 	ldmne	ip, {r9}
    1e60:	000000a7 	andeq	r0, r0, r7, lsr #1
    1e64:	140b5401 	strne	r5, [fp], #-1025	; 0xfffffbff
    1e68:	02000011 	andeq	r0, r0, #17
    1e6c:	00a7189d 	umlaleq	r1, r7, sp, r8
    1e70:	55010000 	strpl	r0, [r1, #-0]
    1e74:	000d090b 	andeq	r0, sp, fp, lsl #18
    1e78:	18a10200 	stmiane	r1!, {r9}
    1e7c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1e80:	16005701 	strne	r5, [r0], -r1, lsl #14
    1e84:	0000a704 	andeq	sl, r0, r4, lsl #14
    1e88:	0dc33b00 	vstreq	d19, [r3]
    1e8c:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    1e90:	0002c425 	andeq	ip, r2, r5, lsr #8
    1e94:	0104b800 	tsteq	r4, r0, lsl #16
    1e98:	00002400 	andeq	r2, r0, r0, lsl #8
    1e9c:	009c0100 	addseq	r0, ip, r0, lsl #2
    1ea0:	0000012f 	andeq	r0, r0, pc, lsr #2
    1ea4:	09970004 	ldmibeq	r7, {r2}
    1ea8:	01040000 	mrseq	r0, (UNDEF: 4)
    1eac:	00000117 	andeq	r0, r0, r7, lsl r1
    1eb0:	0012a60c 	andseq	sl, r2, ip, lsl #12
    1eb4:	00005f00 	andeq	r5, r0, r0, lsl #30
    1eb8:	0113a400 	tsteq	r3, r0, lsl #8
    1ebc:	00014400 	andeq	r4, r1, r0, lsl #8
    1ec0:	0010c900 	andseq	ip, r0, r0, lsl #18
    1ec4:	124f0200 	subne	r0, pc, #0, 4
    1ec8:	0a010000 	beq	41ed0 <__stack_base+0x1ed0>
    1ecc:	00003110 	andeq	r3, r0, r0, lsl r1
    1ed0:	37040300 	strcc	r0, [r4, -r0, lsl #6]
    1ed4:	04000000 	streq	r0, [r0], #-0
    1ed8:	00002505 	andeq	r2, r0, r5, lsl #10
    1edc:	00004300 	andeq	r4, r0, r0, lsl #6
    1ee0:	07000600 	streq	r0, [r0, -r0, lsl #12]
    1ee4:	00001317 	andeq	r1, r0, r7, lsl r3
    1ee8:	38101001 	ldmdacc	r0, {r0, ip}
    1eec:	07000000 	streq	r0, [r0, -r0]
    1ef0:	0000132d 	andeq	r1, r0, sp, lsr #6
    1ef4:	38101101 	ldmdacc	r0, {r0, r8, ip}
    1ef8:	07000000 	streq	r0, [r0, -r0]
    1efc:	000012f3 	strdeq	r1, [r0], -r3
    1f00:	38101201 	ldmdacc	r0, {r0, r9, ip}
    1f04:	07000000 	streq	r0, [r0, -r0]
    1f08:	00001306 	andeq	r1, r0, r6, lsl #6
    1f0c:	38101301 	ldmdacc	r0, {r0, r8, r9, ip}
    1f10:	07000000 	streq	r0, [r0, -r0]
    1f14:	0000123c 	andeq	r1, r0, ip, lsr r2
    1f18:	38101901 	ldmdacc	r0, {r0, r8, fp, ip}
    1f1c:	07000000 	streq	r0, [r0, -r0]
    1f20:	00001350 	andeq	r1, r0, r0, asr r3
    1f24:	38101a01 	ldmdacc	r0, {r0, r9, fp, ip}
    1f28:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1f2c:	00001257 	andeq	r1, r0, r7, asr r2
    1f30:	74062d01 	strvc	r2, [r6], #-3329	; 0xfffff2ff
    1f34:	74000114 	strvc	r0, [r0], #-276	; 0xfffffeec
    1f38:	01000000 	mrseq	r0, (UNDEF: 0)
    1f3c:	0000c89c 	muleq	r0, ip, r8
    1f40:	13410900 	movtne	r0, #6400	; 0x1900
    1f44:	2f010000 	svccs	0x00010000
    1f48:	0000c809 	andeq	ip, r0, r9, lsl #16
    1f4c:	70910200 	addsvc	r0, r1, r0, lsl #4
    1f50:	01149c0a 	tsteq	r4, sl, lsl #24
    1f54:	00003c00 	andeq	r3, r0, r0, lsl #24
    1f58:	00660b00 	rsbeq	r0, r6, r0, lsl #22
    1f5c:	c80e3201 	stmdagt	lr, {r0, r9, ip, sp}
    1f60:	02000000 	andeq	r0, r0, #0
    1f64:	00007491 	muleq	r0, r1, r4
    1f68:	6905040c 	stmdbvs	r5, {r2, r3, sl}
    1f6c:	0d00746e 	cfstrseq	mvf7, [r0, #-440]	; 0xfffffe48
    1f70:	00001275 	andeq	r1, r0, r5, ror r2
    1f74:	a4061c01 	strge	r1, [r6], #-3073	; 0xfffff3ff
    1f78:	d0000113 	andle	r0, r0, r3, lsl r1
    1f7c:	01000000 	mrseq	r0, (UNDEF: 0)
    1f80:	1294099c 	addsne	r0, r4, #156, 18	; 0x270000
    1f84:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    1f88:	0000c809 	andeq	ip, r0, r9, lsl #16
    1f8c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1f90:	00129709 	andseq	r9, r2, r9, lsl #14
    1f94:	09250100 	stmdbeq	r5!, {r8}
    1f98:	000000c8 	andeq	r0, r0, r8, asr #1
    1f9c:	0e689102 	lgneqe	f1, f2
    1fa0:	000113cc 	andeq	r1, r1, ip, asr #7
    1fa4:	0000003c 	andeq	r0, r0, ip, lsr r0
    1fa8:	0000011a 	andeq	r0, r0, sl, lsl r1
    1fac:	0100660b 	tsteq	r0, fp, lsl #12
    1fb0:	00c80e21 	sbceq	r0, r8, r1, lsr #28
    1fb4:	91020000 	mrsls	r0, (UNDEF: 2)
    1fb8:	280a0074 	stmdacs	sl, {r2, r4, r5, r6}
    1fbc:	3c000114 	stfccs	f0, [r0], {20}
    1fc0:	0b000000 	bleq	1fc8 <errno+0x1fc4>
    1fc4:	28010066 	stmdacs	r1, {r1, r2, r5, r6}
    1fc8:	0000c80e 	andeq	ip, r0, lr, lsl #16
    1fcc:	70910200 	addsvc	r0, r1, r0, lsl #4
    1fd0:	1c000000 	stcne	0, cr0, [r0], {-0}
    1fd4:	04000001 	streq	r0, [r0], #-1
    1fd8:	000a6200 	andeq	r6, sl, r0, lsl #4
    1fdc:	17010400 	strne	r0, [r1, -r0, lsl #8]
    1fe0:	0c000001 	stceq	0, cr0, [r0], {1}
    1fe4:	00001376 	andeq	r1, r0, r6, ror r3
    1fe8:	0000005f 	andeq	r0, r0, pc, asr r0
    1fec:	000114e8 	andeq	r1, r1, r8, ror #9
    1ff0:	0000038c 	andeq	r0, r0, ip, lsl #7
    1ff4:	000011c8 	andeq	r1, r0, r8, asr #3
    1ff8:	2e060102 	adfcss	f0, f6, f2
    1ffc:	02000003 	andeq	r0, r0, #3
    2000:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
    2004:	04030000 	streq	r0, [r3], #-0
    2008:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    200c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2010:	00000109 	andeq	r0, r0, r9, lsl #2
    2014:	2c080102 	stfcss	f0, [r8], {2}
    2018:	02000003 	andeq	r0, r0, #3
    201c:	03520702 	cmpeq	r2, #524288	; 0x80000
    2020:	04020000 	streq	r0, [r2], #-0
    2024:	0003c507 	andeq	ip, r3, r7, lsl #10
    2028:	07080200 	streq	r0, [r8, -r0, lsl #4]
    202c:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
    2030:	0e050402 	cdpeq	4, 0, cr0, cr5, cr2, {0}
    2034:	04000001 	streq	r0, [r0], #-1
    2038:	00000914 	andeq	r0, r0, r4, lsl r9
    203c:	70172202 	andsvc	r2, r7, r2, lsl #4
    2040:	02000000 	andeq	r0, r0, #0
    2044:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
    2048:	23040000 	movwcs	r0, #16384	; 0x4000
    204c:	0300000a 	movweq	r0, #10
    2050:	00641f11 	rsbeq	r1, r4, r1, lsl pc
    2054:	61050000 	mrsvs	r0, (UNDEF: 5)
    2058:	01000013 	tsteq	r0, r3, lsl r0
    205c:	0117071b 	tsteq	r7, fp, lsl r7
    2060:	14e80000 	strbtne	r0, [r8], #0
    2064:	038c0001 	orreq	r0, ip, #1
    2068:	9c010000 	stcls	0, cr0, [r1], {-0}
    206c:	00000117 	andeq	r0, r0, r7, lsl r1
    2070:	000c2006 	andeq	r2, ip, r6
    2074:	221b0100 	andscs	r0, fp, #0, 2
    2078:	00000117 	andeq	r0, r0, r7, lsl r1
    207c:	074c9102 	strbeq	r9, [ip, -r2, lsl #2]
    2080:	1b010063 	blne	42214 <__stack_base+0x2214>
    2084:	0000332c 	andeq	r3, r0, ip, lsr #6
    2088:	48910200 	ldmmi	r1, {r9}
    208c:	01006e07 	tsteq	r0, r7, lsl #28
    2090:	0077421b 	rsbseq	r4, r7, fp, lsl r2
    2094:	91020000 	mrsls	r0, (UNDEF: 2)
    2098:	00730844 	rsbseq	r0, r3, r4, asr #16
    209c:	19141d01 	ldmdbne	r4, {r0, r8, sl, fp, ip}
    20a0:	02000001 	andeq	r0, r0, #1
    20a4:	6b086491 	blvs	21b2f0 <__bss_end__+0xd22a8>
    20a8:	181e0100 	ldmdane	lr, {r8}
    20ac:	00000077 	andeq	r0, r0, r7, ror r0
    20b0:	09609102 	stmdbeq	r0!, {r1, r8, ip, pc}^
    20b4:	00323375 	eorseq	r3, r2, r5, ror r3
    20b8:	4f414001 	svcmi	0x00414001
    20bc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    20c0:	00343675 	eorseq	r3, r4, r5, ror r6
    20c4:	56414101 	strbpl	r4, [r1], -r1, lsl #2
    20c8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    20cc:	00323363 	eorseq	r3, r2, r3, ror #6
    20d0:	e0094301 	and	r4, r9, r1, lsl #6
    20d4:	02000000 	andeq	r0, r0, #0
    20d8:	63085c91 	movwvs	r5, #35985	; 0x8c91
    20dc:	01003436 	tsteq	r0, r6, lsr r4
    20e0:	00ec096c 	rsceq	r0, ip, ip, ror #18
    20e4:	91020000 	mrsls	r0, (UNDEF: 2)
    20e8:	040a0050 	streq	r0, [sl], #-80	; 0xffffffb0
    20ec:	0041040b 	subeq	r0, r1, fp, lsl #8
    20f0:	36000000 	strcc	r0, [r0], -r0
    20f4:	04000001 	streq	r0, [r0], #-1
    20f8:	000b0b00 	andeq	r0, fp, r0, lsl #22
    20fc:	17010400 	strne	r0, [r1, -r0, lsl #8]
    2100:	0c000001 	stceq	0, cr0, [r0], {1}
    2104:	000013c5 	andeq	r1, r0, r5, asr #7
    2108:	0000005f 	andeq	r0, r0, pc, asr r0
    210c:	00011874 	andeq	r1, r1, r4, ror r8
    2110:	00000a64 	andeq	r0, r0, r4, ror #20
    2114:	000013dd 	ldrdeq	r1, [r0], -sp
    2118:	2e060102 	adfcss	f0, f6, f2
    211c:	02000003 	andeq	r0, r0, #3
    2120:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
    2124:	04030000 	streq	r0, [r3], #-0
    2128:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    212c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2130:	00000109 	andeq	r0, r0, r9, lsl #2
    2134:	2c080102 	stfcss	f0, [r8], {2}
    2138:	04000003 	streq	r0, [r0], #-3
    213c:	00000041 	andeq	r0, r0, r1, asr #32
    2140:	52070202 	andpl	r0, r7, #536870912	; 0x20000000
    2144:	05000003 	streq	r0, [r0, #-3]
    2148:	00000582 	andeq	r0, r0, r2, lsl #11
    214c:	601c1d02 	andsvs	r1, ip, r2, lsl #26
    2150:	02000000 	andeq	r0, r0, #0
    2154:	03c50704 	biceq	r0, r5, #4, 14	; 0x100000
    2158:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    215c:	0003bb07 	andeq	fp, r3, r7, lsl #22
    2160:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2164:	0000010e 	andeq	r0, r0, lr, lsl #2
    2168:	00091405 	andeq	r1, r9, r5, lsl #8
    216c:	17220200 	strne	r0, [r2, -r0, lsl #4]!
    2170:	00000081 	andeq	r0, r0, r1, lsl #1
    2174:	c0070402 	andgt	r0, r7, r2, lsl #8
    2178:	05000003 	streq	r0, [r0, #-3]
    217c:	00000a23 	andeq	r0, r0, r3, lsr #20
    2180:	751f1103 	ldrvc	r1, [pc, #-259]	; 2085 <errno+0x2081>
    2184:	06000000 	streq	r0, [r0], -r0
    2188:	00001414 	andeq	r1, r0, r4, lsl r4
    218c:	1a071b01 	bne	1c8d98 <__bss_end__+0x7fd50>
    2190:	74000001 	strvc	r0, [r0], #-1
    2194:	64000118 	strvs	r0, [r0], #-280	; 0xfffffee8
    2198:	0100000a 	tsteq	r0, sl
    219c:	00011a9c 	muleq	r1, ip, sl
    21a0:	0c200700 	stceq	7, cr0, [r0], #-0
    21a4:	1b010000 	blne	421ac <__stack_base+0x21ac>
    21a8:	00011c2b 	andeq	r1, r1, fp, lsr #24
    21ac:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    21b0:	63727308 	cmnvs	r2, #8, 6	; 0x20000000
    21b4:	461b0100 	ldrmi	r0, [fp], -r0, lsl #2
    21b8:	00000127 	andeq	r0, r0, r7, lsr #2
    21bc:	08609102 	stmdaeq	r0!, {r1, r8, ip, pc}^
    21c0:	1b01006e 	blne	42380 <__stack_base+0x2380>
    21c4:	0000885e 	andeq	r8, r0, lr, asr r8
    21c8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    21cc:	01006409 	tsteq	r0, r9, lsl #8
    21d0:	012d141d 			; <UNDEFINED> instruction: 0x012d141d
    21d4:	91020000 	mrsls	r0, (UNDEF: 2)
    21d8:	00730974 	rsbseq	r0, r3, r4, ror r9
    21dc:	331a1e01 	tstcc	sl, #1, 28
    21e0:	02000001 	andeq	r0, r0, #1
    21e4:	750a7091 	strvc	r7, [sl, #-145]	; 0xffffff6f
    21e8:	01003233 	tsteq	r0, r3, lsr r2
    21ec:	0060412a 	rsbeq	r4, r0, sl, lsr #2
    21f0:	77090000 	strvc	r0, [r9, -r0]
    21f4:	1a2b0100 	bne	ac25fc <__bss_end__+0x9795b4>
    21f8:	00000054 	andeq	r0, r0, r4, asr r0
    21fc:	096c9102 	stmdbeq	ip!, {r1, r8, ip, pc}^
    2200:	2b010078 	blcs	423e8 <__stack_base+0x23e8>
    2204:	0000541d 	andeq	r5, r0, sp, lsl r4
    2208:	68910200 	ldmvs	r1, {r9}
    220c:	0c040b00 			; <UNDEFINED> instruction: 0x0c040b00
    2210:	0000011a 	andeq	r0, r0, sl, lsl r1
    2214:	012c040d 			; <UNDEFINED> instruction: 0x012c040d
    2218:	210c0000 	mrscs	r0, (UNDEF: 12)
    221c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    2220:	0041040d 	subeq	r0, r1, sp, lsl #8
    2224:	040d0000 	streq	r0, [sp], #-0
    2228:	00000048 	andeq	r0, r0, r8, asr #32
    222c:	00005400 	andeq	r5, r0, r0, lsl #8
    2230:	c7000400 	strgt	r0, [r0, -r0, lsl #8]
    2234:	0400000b 	streq	r0, [r0], #-11
    2238:	00011701 	andeq	r1, r1, r1, lsl #14
    223c:	14470c00 	strbne	r0, [r7], #-3072	; 0xfffff400
    2240:	005f0000 	subseq	r0, pc, r0
    2244:	22d80000 	sbcscs	r0, r8, #0
    2248:	00240001 	eoreq	r0, r4, r1
    224c:	1a9d0000 	bne	fe742254 <__bss_end__+0xfe5f920c>
    2250:	30020000 	andcc	r0, r2, r0
    2254:	01000014 	tsteq	r0, r4, lsl r0
    2258:	00500608 	subseq	r0, r0, r8, lsl #12
    225c:	22d80000 	sbcscs	r0, r8, #0
    2260:	00240001 	eoreq	r0, r4, r1
    2264:	9c010000 	stcls	0, cr0, [r1], {-0}
    2268:	00000050 	andeq	r0, r0, r0, asr r0
    226c:	00142903 	andseq	r2, r4, r3, lsl #18
    2270:	22080100 	andcs	r0, r8, #0, 2
    2274:	00000050 	andeq	r0, r0, r0, asr r0
    2278:	04709102 	ldrbteq	r9, [r0], #-258	; 0xfffffefe
    227c:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    2280:	0000010e 	andeq	r0, r0, lr, lsl #2
    2284:	00002200 	andeq	r2, r0, r0, lsl #4
    2288:	1a000200 	bne	2a90 <errno+0x2a8c>
    228c:	0400000c 	streq	r0, [r0], #-12
    2290:	001b2301 	andseq	r2, fp, r1, lsl #6
    2294:	0122fc00 	msreq	CPSR_x, r0, lsl #24
    2298:	01230c00 			; <UNDEFINED> instruction: 0x01230c00
    229c:	00149800 	andseq	r9, r4, r0, lsl #16
    22a0:	00005f00 	andeq	r5, r0, r0, lsl #30
    22a4:	00009e00 	andeq	r9, r0, r0, lsl #28
    22a8:	2f800100 	svccs	0x00800100
    22ac:	04000002 	streq	r0, [r0], #-2
    22b0:	000c2e00 	andeq	r2, ip, r0, lsl #28
    22b4:	17010400 	strne	r0, [r1, -r0, lsl #8]
    22b8:	0c000001 	stceq	0, cr0, [r0], {1}
    22bc:	00001514 	andeq	r1, r0, r4, lsl r5
    22c0:	0000005f 	andeq	r0, r0, pc, asr r0
    22c4:	0001230c 	andeq	r2, r1, ip, lsl #6
    22c8:	00000058 	andeq	r0, r0, r8, asr r0
    22cc:	00001bbf 			; <UNDEFINED> instruction: 0x00001bbf
    22d0:	2e060102 	adfcss	f0, f6, f2
    22d4:	02000003 	andeq	r0, r0, #3
    22d8:	032c0801 			; <UNDEFINED> instruction: 0x032c0801
    22dc:	02020000 	andeq	r0, r2, #0
    22e0:	00046605 	andeq	r6, r4, r5, lsl #12
    22e4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    22e8:	00000352 	andeq	r0, r0, r2, asr r3
    22ec:	69050403 	stmdbvs	r5, {r0, r1, sl}
    22f0:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    22f4:	0000030d 	andeq	r0, r0, sp, lsl #6
    22f8:	54253d03 	strtpl	r3, [r5], #-3331	; 0xfffff2fd
    22fc:	02000000 	andeq	r0, r0, #0
    2300:	03c50704 	biceq	r0, r5, #4, 14	; 0x100000
    2304:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2308:	00010905 	andeq	r0, r1, r5, lsl #18
    230c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    2310:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
    2314:	00037204 	andeq	r7, r3, r4, lsl #4
    2318:	15710300 	ldrbne	r0, [r1, #-768]!	; 0xfffffd00
    231c:	00000048 	andeq	r0, r0, r8, asr #32
    2320:	0003d204 	andeq	sp, r3, r4, lsl #4
    2324:	13800300 	orrne	r0, r0, #0, 6
    2328:	00000069 	andeq	r0, r0, r9, rrx
    232c:	00039205 	andeq	r9, r3, r5, lsl #4
    2330:	54040700 	strpl	r0, [r4], #-1792	; 0xfffff900
    2334:	04000000 	streq	r0, [r0], #-0
    2338:	00b80e08 	adcseq	r0, r8, r8, lsl #28
    233c:	19060000 	stmdbne	r6, {}	; <UNPREDICTABLE>
    2340:	00000003 	andeq	r0, r0, r3
    2344:	00048006 	andeq	r8, r4, r6
    2348:	f8060100 			; <UNDEFINED> instruction: 0xf8060100
    234c:	02000003 	andeq	r0, r0, #3
    2350:	00048f06 	andeq	r8, r4, r6, lsl #30
    2354:	cd060300 	stcgt	3, cr0, [r6, #-0]
    2358:	04000004 	streq	r0, [r0], #-4
    235c:	0002bd06 	andeq	fp, r2, r6, lsl #26
    2360:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
    2364:	000003dc 	ldrdeq	r0, [r0], -ip
    2368:	81031304 	tsthi	r3, r4, lsl #6
    236c:	07000000 	streq	r0, [r0, -r0]
    2370:	000000b8 	strheq	r0, [r0], -r8
    2374:	0004b408 	andeq	fp, r4, r8, lsl #8
    2378:	59150400 	ldmdbpl	r5, {sl}
    237c:	000000c4 	andeq	r0, r0, r4, asr #1
    2380:	768c0305 	strvc	r0, [ip], r5, lsl #6
    2384:	48090002 	stmdami	r9, {r1}
    2388:	eb000000 	bl	2390 <errno+0x238c>
    238c:	0a000000 	beq	2394 <errno+0x2390>
    2390:	00000054 	andeq	r0, r0, r4, asr r0
    2394:	a70b0000 	strge	r0, [fp, -r0]
    2398:	04000002 	streq	r0, [r0], #-2
    239c:	08013805 	stmdaeq	r1, {r0, r2, fp, ip, sp}
    23a0:	00000108 	andeq	r0, r0, r8, lsl #2
    23a4:	0003b00c 	andeq	fp, r3, ip
    23a8:	01390500 	teqeq	r9, r0, lsl #10
    23ac:	0000db11 	andeq	sp, r0, r1, lsl fp
    23b0:	0d000000 	stceq	0, cr0, [r0, #-0]
    23b4:	0000039d 	muleq	r0, sp, r3
    23b8:	21013b05 	tstcs	r1, r5, lsl #22
    23bc:	000000eb 	andeq	r0, r0, fp, ror #1
    23c0:	0004700e 	andeq	r7, r4, lr
    23c4:	06020000 	streq	r0, [r2], -r0
    23c8:	0184100b 	orreq	r1, r4, fp
    23cc:	740f0000 	strvc	r0, [pc], #-0	; 23d4 <errno+0x23d0>
    23d0:	06006761 	streq	r6, [r0], -r1, ror #14
    23d4:	0108180c 	tsteq	r8, ip, lsl #16
    23d8:	0f000000 	svceq	0x00000000
    23dc:	0067736d 	rsbeq	r7, r7, sp, ror #6
    23e0:	840f0d06 	strhi	r0, [pc], #-3334	; 23e8 <errno+0x23e4>
    23e4:	04000001 	streq	r0, [r0], #-1
    23e8:	00033a10 	andeq	r3, r3, r0, lsl sl
    23ec:	0f0e0600 	svceq	0x000e0600
    23f0:	00000069 	andeq	r0, r0, r9, rrx
    23f4:	7c1001e4 	ldfvcs	f0, [r0], {228}	; 0xe4
    23f8:	06000003 	streq	r0, [r0], -r3
    23fc:	01940f0f 	orrseq	r0, r4, pc, lsl #30
    2400:	01e80000 	mvneq	r0, r0
    2404:	00036510 	andeq	r6, r3, r0, lsl r5
    2408:	0f100600 	svceq	0x00100600
    240c:	00000075 	andeq	r0, r0, r5, ror r0
    2410:	001001f4 			; <UNDEFINED> instruction: 0x001001f4
    2414:	06000003 	streq	r0, [r0], -r3
    2418:	00750f11 	rsbseq	r0, r5, r1, lsl pc
    241c:	01f80000 	mvnseq	r0, r0
    2420:	00040c10 	andeq	r0, r4, r0, lsl ip
    2424:	0f120600 	svceq	0x00120600
    2428:	00000069 	andeq	r0, r0, r9, rrx
    242c:	090001fc 	stmdbeq	r0, {r2, r3, r4, r5, r6, r7, r8}
    2430:	00000069 	andeq	r0, r0, r9, rrx
    2434:	00000194 	muleq	r0, r4, r1
    2438:	0000540a 	andeq	r5, r0, sl, lsl #8
    243c:	09007700 	stmdbeq	r0, {r8, r9, sl, ip, sp, lr}
    2440:	00000069 	andeq	r0, r0, r9, rrx
    2444:	000001a4 	andeq	r0, r0, r4, lsr #3
    2448:	0000540a 	andeq	r5, r0, sl, lsl #8
    244c:	11000200 	mrsne	r0, R8_usr
    2450:	00000343 	andeq	r0, r0, r3, asr #6
    2454:	15031306 	strne	r1, [r3, #-774]	; 0xfffffcfa
    2458:	00000001 	andeq	r0, r0, r1
    245c:	02e81202 	rsceq	r1, r8, #536870912	; 0x20000000
    2460:	0d080000 	stceq	0, cr0, [r8, #-0]
    2464:	0001be21 	andeq	fp, r1, r1, lsr #28
    2468:	a4041300 	strge	r1, [r4], #-768	; 0xfffffd00
    246c:	02000001 	andeq	r0, r0, #1
    2470:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
    2474:	04020000 	streq	r0, [r2], #-0
    2478:	00010e05 	andeq	r0, r1, r5, lsl #28
    247c:	09140400 	ldmdbeq	r4, {sl}
    2480:	22070000 	andcs	r0, r7, #0
    2484:	0001c417 	andeq	ip, r1, r7, lsl r4
    2488:	15021400 	strne	r1, [r2, #-1024]	; 0xfffffc00
    248c:	0a020000 	beq	82494 <morecore_area+0x39494>
    2490:	0001f407 	andeq	pc, r1, r7, lsl #8
    2494:	01234c00 			; <UNDEFINED> instruction: 0x01234c00
    2498:	00001800 	andeq	r1, r0, r0, lsl #16
    249c:	159c0100 	ldrne	r0, [ip, #256]	; 0x100
    24a0:	0af51604 	beq	ffd47cb8 <__bss_end__+0xffbfec70>
    24a4:	30010000 	andcc	r0, r1, r0
    24a8:	0001d225 	andeq	sp, r1, r5, lsr #4
    24ac:	01233400 			; <UNDEFINED> instruction: 0x01233400
    24b0:	00001800 	andeq	r1, r0, r0, lsl #16
    24b4:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    24b8:	00000d0e 	andeq	r0, r0, lr, lsl #26
    24bc:	d2250e01 	eorle	r0, r5, #1, 28
    24c0:	0c000001 	stceq	0, cr0, [r0], {1}
    24c4:	28000123 	stmdacs	r0, {r0, r1, r5, r8}
    24c8:	01000000 	mrseq	r0, (UNDEF: 0)
    24cc:	6572189c 	ldrbvs	r1, [r2, #-2204]!	; 0xfffff764
    24d0:	10010067 	andne	r0, r1, r7, rrx
    24d4:	0001d21b 	andeq	sp, r1, fp, lsl r2
    24d8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    24dc:	05180000 	ldreq	r0, [r8, #-0]
    24e0:	00040000 	andeq	r0, r4, r0
    24e4:	00000da9 	andeq	r0, r0, r9, lsr #27
    24e8:	01170104 	tsteq	r7, r4, lsl #2
    24ec:	a30c0000 	movwge	r0, #49152	; 0xc000
    24f0:	5f000015 	svcpl	0x00000015
    24f4:	64000000 	strvs	r0, [r0], #-0
    24f8:	54000123 	strpl	r0, [r0], #-291	; 0xfffffedd
    24fc:	0b000000 	bleq	2504 <errno+0x2500>
    2500:	0200001e 	andeq	r0, r0, #30
    2504:	032e0601 			; <UNDEFINED> instruction: 0x032e0601
    2508:	4d030000 	stcmi	0, cr0, [r3, #-0]
    250c:	02000006 	andeq	r0, r0, #6
    2510:	00382526 	eorseq	r2, r8, r6, lsr #10
    2514:	01020000 	mrseq	r0, (UNDEF: 2)
    2518:	00032c08 	andeq	r2, r3, r8, lsl #24
    251c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2520:	00000466 	andeq	r0, r0, r6, ror #8
    2524:	52070202 	andpl	r0, r7, #536870912	; 0x20000000
    2528:	04000003 	streq	r0, [r0], #-3
    252c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2530:	0d030074 	stceq	0, cr0, [r3, #-464]	; 0xfffffe30
    2534:	02000003 	andeq	r0, r0, #3
    2538:	0060253d 	rsbeq	r2, r0, sp, lsr r5
    253c:	04020000 	streq	r0, [r2], #-0
    2540:	0003c507 	andeq	ip, r3, r7, lsl #10
    2544:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2548:	00000109 	andeq	r0, r0, r9, lsl #2
    254c:	bb070802 	bllt	1c455c <__bss_end__+0x7b514>
    2550:	03000003 	movweq	r0, #3
    2554:	00000372 	andeq	r0, r0, r2, ror r3
    2558:	54157102 	ldrpl	r7, [r5], #-258	; 0xfffffefe
    255c:	03000000 	movweq	r0, #0
    2560:	000003d2 	ldrdeq	r0, [r0], -r2
    2564:	75138002 	ldrvc	r8, [r3, #-2]
    2568:	05000000 	streq	r0, [r0, #-0]
    256c:	00000392 	muleq	r0, r2, r3
    2570:	00600407 	rsbeq	r0, r0, r7, lsl #8
    2574:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    2578:	0000c40e 	andeq	ip, r0, lr, lsl #8
    257c:	03190600 	tsteq	r9, #0, 12
    2580:	06000000 	streq	r0, [r0], -r0
    2584:	00000480 	andeq	r0, r0, r0, lsl #9
    2588:	03f80601 	mvnseq	r0, #1048576	; 0x100000
    258c:	06020000 	streq	r0, [r2], -r0
    2590:	0000048f 	andeq	r0, r0, pc, lsl #9
    2594:	04cd0603 	strbeq	r0, [sp], #1539	; 0x603
    2598:	06040000 	streq	r0, [r4], -r0
    259c:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    25a0:	dc030005 	stcle	0, cr0, [r3], {5}
    25a4:	03000003 	movweq	r0, #3
    25a8:	008d0313 	addeq	r0, sp, r3, lsl r3
    25ac:	c4070000 	strgt	r0, [r7], #-0
    25b0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    25b4:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    25b8:	d0591503 	subsle	r1, r9, r3, lsl #10
    25bc:	05000000 	streq	r0, [r0, #-0]
    25c0:	02769003 	rsbseq	r9, r6, #3
    25c4:	0ee80500 	cdpeq	5, 14, cr0, cr8, cr0, {0}
    25c8:	04070000 	streq	r0, [r7], #-0
    25cc:	00000060 	andeq	r0, r0, r0, rrx
    25d0:	060e0904 	streq	r0, [lr], -r4, lsl #18
    25d4:	06000001 	streq	r0, [r0], -r1
    25d8:	00000a36 	andeq	r0, r0, r6, lsr sl
    25dc:	0bbb0605 	bleq	feec3df8 <__bss_end__+0xfed7adb0>
    25e0:	00060000 	andeq	r0, r6, r0
    25e4:	000d2905 	andeq	r2, sp, r5, lsl #18
    25e8:	60040700 	andvs	r0, r4, r0, lsl #14
    25ec:	05000000 	streq	r0, [r0, #-0]
    25f0:	012b0634 			; <UNDEFINED> instruction: 0x012b0634
    25f4:	ca060000 	bgt	1825fc <__bss_end__+0x395b4>
    25f8:	07000009 	streq	r0, [r0, -r9]
    25fc:	000ef506 	andeq	pc, lr, r6, lsl #10
    2600:	f6060200 			; <UNDEFINED> instruction: 0xf6060200
    2604:	7800000d 	stmdavc	r0, {r0, r2, r3}
    2608:	00540900 	subseq	r0, r4, r0, lsl #18
    260c:	013b0000 	teqeq	fp, r0
    2610:	600a0000 	andvs	r0, sl, r0
    2614:	00000000 	andeq	r0, r0, r0
    2618:	02a70b00 	adceq	r0, r7, #0, 22
    261c:	06040000 	streq	r0, [r4], -r0
    2620:	58080138 	stmdapl	r8, {r3, r4, r5, r8}
    2624:	0c000001 	stceq	0, cr0, [r0], {1}
    2628:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    262c:	11013906 	tstne	r1, r6, lsl #18
    2630:	0000012b 	andeq	r0, r0, fp, lsr #2
    2634:	9d0d0000 	stcls	0, cr0, [sp, #-0]
    2638:	06000003 	streq	r0, [r0], -r3
    263c:	3b21013b 	blcc	842b30 <__bss_end__+0x6f9ae8>
    2640:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    2644:	00000470 	andeq	r0, r0, r0, ror r4
    2648:	0b070200 	bleq	1c2e50 <__bss_end__+0x79e08>
    264c:	0001d410 	andeq	sp, r1, r0, lsl r4
    2650:	61740f00 	cmnvs	r4, r0, lsl #30
    2654:	0c070067 	stceq	0, cr0, [r7], {103}	; 0x67
    2658:	00015818 	andeq	r5, r1, r8, lsl r8
    265c:	6d0f0000 	stcvs	0, cr0, [pc, #-0]	; 2664 <errno+0x2660>
    2660:	07006773 	smlsdxeq	r0, r3, r7, r6
    2664:	01d40f0d 	bicseq	r0, r4, sp, lsl #30
    2668:	10040000 	andne	r0, r4, r0
    266c:	0000033a 	andeq	r0, r0, sl, lsr r3
    2670:	750f0e07 	strvc	r0, [pc, #-3591]	; 1871 <errno+0x186d>
    2674:	e4000000 	str	r0, [r0], #-0
    2678:	037c1001 	cmneq	ip, #1
    267c:	0f070000 	svceq	0x00070000
    2680:	0001e40f 	andeq	lr, r1, pc, lsl #8
    2684:	1001e800 	andne	lr, r1, r0, lsl #16
    2688:	00000365 	andeq	r0, r0, r5, ror #6
    268c:	810f1007 	tsthi	pc, r7
    2690:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2694:	03001001 	movweq	r1, #1
    2698:	11070000 	mrsne	r0, (UNDEF: 7)
    269c:	0000810f 	andeq	r8, r0, pc, lsl #2
    26a0:	1001f800 	andne	pc, r1, r0, lsl #16
    26a4:	0000040c 	andeq	r0, r0, ip, lsl #8
    26a8:	750f1207 	strvc	r1, [pc, #-519]	; 24a9 <errno+0x24a5>
    26ac:	fc000000 	stc2	0, cr0, [r0], {-0}
    26b0:	75090001 	strvc	r0, [r9, #-1]
    26b4:	e4000000 	str	r0, [r0], #-0
    26b8:	0a000001 	beq	26c4 <errno+0x26c0>
    26bc:	00000060 	andeq	r0, r0, r0, rrx
    26c0:	75090077 	strvc	r0, [r9, #-119]	; 0xffffff89
    26c4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    26c8:	0a000001 	beq	26d4 <errno+0x26d0>
    26cc:	00000060 	andeq	r0, r0, r0, rrx
    26d0:	43110002 	tstmi	r1, #2
    26d4:	07000003 	streq	r0, [r0, -r3]
    26d8:	01650313 	cmneq	r5, r3, lsl r3
    26dc:	02000000 	andeq	r0, r0, #0
    26e0:	00067f03 	andeq	r7, r6, r3, lsl #30
    26e4:	131f0800 	tstne	pc, #0, 16
    26e8:	00000075 	andeq	r0, r0, r5, ror r0
    26ec:	00064103 	andeq	r4, r6, r3, lsl #2
    26f0:	13210800 			; <UNDEFINED> instruction: 0x13210800
    26f4:	00000075 	andeq	r0, r0, r5, ror r0
    26f8:	0002e812 	andeq	lr, r2, r2, lsl r8
    26fc:	210d0c00 	tstcs	sp, r0, lsl #24
    2700:	00000226 	andeq	r0, r0, r6, lsr #4
    2704:	01f40413 	mvnseq	r0, r3, lsl r4
    2708:	0d050000 	stceq	0, cr0, [r5, #-0]
    270c:	07000010 	smladeq	r0, r0, r0, r0
    2710:	00006004 	andeq	r6, r0, r4
    2714:	060e0900 	streq	r0, [lr], -r0, lsl #18
    2718:	000002f9 	strdeq	r0, [r0], -r9
    271c:	000ac106 	andeq	ip, sl, r6, lsl #2
    2720:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    2724:	01000012 	tsteq	r0, r2, lsl r0
    2728:	000b7f06 	andeq	r7, fp, r6, lsl #30
    272c:	8e060200 	cdphi	2, 0, cr0, cr6, cr0, {0}
    2730:	0300000f 	movweq	r0, #15
    2734:	00109a06 	andseq	r9, r0, r6, lsl #20
    2738:	19060400 	stmdbne	r6, {sl}
    273c:	0500000b 	streq	r0, [r0, #-11]
    2740:	000fb906 	andeq	fp, pc, r6, lsl #18
    2744:	33060600 	movwcc	r0, #26112	; 0x6600
    2748:	0700000b 	streq	r0, [r0, -fp]
    274c:	000a9506 	andeq	r9, sl, r6, lsl #10
    2750:	09060800 	stmdbeq	r6, {fp}
    2754:	0900000a 	stmdbeq	r0, {r1, r3}
    2758:	000f2d06 	andeq	r2, pc, r6, lsl #26
    275c:	ed060a00 	vstr	s0, [r6, #-0]
    2760:	0b00000c 	bleq	2798 <errno+0x2794>
    2764:	00106806 	andseq	r6, r0, r6, lsl #16
    2768:	e3060c00 	movw	r0, #27648	; 0x6c00
    276c:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    2770:	0010ab06 	andseq	sl, r0, r6, lsl #22
    2774:	f0060e00 			; <UNDEFINED> instruction: 0xf0060e00
    2778:	0f000011 	svceq	0x00000011
    277c:	000cc206 	andeq	ip, ip, r6, lsl #4
    2780:	d4061000 	strle	r1, [r6], #-0
    2784:	1100000b 	tstne	r0, fp
    2788:	000ed106 	andeq	sp, lr, r6, lsl #2
    278c:	0a061200 	beq	186f94 <__bss_end__+0x3df4c>
    2790:	13000012 	movwne	r0, #18
    2794:	000b7506 	andeq	r7, fp, r6, lsl #10
    2798:	79061400 	stmdbvc	r6, {sl, ip}
    279c:	1500000a 	strne	r0, [r0, #-10]
    27a0:	000ff706 	andeq	pc, pc, r6, lsl #14
    27a4:	25061600 	strcs	r1, [r6, #-1536]	; 0xfffffa00
    27a8:	1700000c 	strne	r0, [r0, -ip]
    27ac:	000b6506 	andeq	r6, fp, r6, lsl #10
    27b0:	97061800 	strls	r1, [r6, -r0, lsl #16]
    27b4:	1900000c 	stmdbne	r0, {r2, r3}
    27b8:	00117a06 	andseq	r7, r1, r6, lsl #20
    27bc:	86061a00 	strhi	r1, [r6], -r0, lsl #20
    27c0:	1b00000c 	blne	27f8 <errno+0x27f4>
    27c4:	000f6706 	andeq	r6, pc, r6, lsl #14
    27c8:	c4061c00 	strgt	r1, [r6], #-3072	; 0xfffff400
    27cc:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    27d0:	00096906 	andeq	r6, r9, r6, lsl #18
    27d4:	05001e00 	streq	r1, [r0, #-3584]	; 0xfffff200
    27d8:	00001003 	andeq	r1, r0, r3
    27dc:	00600407 	rsbeq	r0, r0, r7, lsl #8
    27e0:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    27e4:	00032a06 	andeq	r2, r3, r6, lsl #20
    27e8:	0de60600 	stcleq	6, cr0, [r6]
    27ec:	061e0000 	ldreq	r0, [lr], -r0
    27f0:	00000f0a 	andeq	r0, r0, sl, lsl #30
    27f4:	0e8b061f 	mcreq	6, 4, r0, cr11, cr15, {0}
    27f8:	06200000 	strteq	r0, [r0], -r0
    27fc:	00001163 	andeq	r1, r0, r3, ror #2
    2800:	12140621 	andsne	r0, r4, #34603008	; 0x2100000
    2804:	00220000 	eoreq	r0, r2, r0
    2808:	c0070402 	andgt	r0, r7, r2, lsl #8
    280c:	03000003 	movweq	r0, #3
    2810:	00000575 	andeq	r0, r0, r5, ror r5
    2814:	7513270b 	ldrvc	r2, [r3, #-1803]	; 0xfffff8f5
    2818:	14000000 	strne	r0, [r0], #-0
    281c:	000007d3 	ldrdeq	r0, [r0], -r3
    2820:	10290b08 	eorne	r0, r9, r8, lsl #22
    2824:	00000365 	andeq	r0, r0, r5, ror #6
    2828:	0006a015 	andeq	sl, r6, r5, lsl r0
    282c:	122a0b00 	eorne	r0, sl, #0, 22
    2830:	00000331 	andeq	r0, r0, r1, lsr r3
    2834:	6e650f00 	cdpvs	15, 6, cr0, cr5, cr0, {0}
    2838:	2b0b0064 	blcs	2c29d0 <__bss_end__+0x179988>
    283c:	00033112 	andeq	r3, r3, r2, lsl r1
    2840:	03000400 	movweq	r0, #1024	; 0x400
    2844:	000007d3 	ldrdeq	r0, [r0], -r3
    2848:	3d032c0b 	stccc	12, cr2, [r3, #-44]	; 0xffffffd4
    284c:	14000003 	strne	r0, [r0], #-3
    2850:	00000617 	andeq	r0, r0, r7, lsl r6
    2854:	102e0b08 	eorne	r0, lr, r8, lsl #22
    2858:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    285c:	0033c615 	eorseq	ip, r3, r5, lsl r6
    2860:	102f0b00 	eorne	r0, pc, r0, lsl #22
    2864:	00000075 	andeq	r0, r0, r5, ror r0
    2868:	05ab1500 	streq	r1, [fp, #1280]!	; 0x500
    286c:	300b0000 	andcc	r0, fp, r0
    2870:	00002c10 	andeq	r2, r0, r0, lsl ip
    2874:	ca150400 	bgt	54387c <__bss_end__+0x3fa834>
    2878:	0b000006 	bleq	2898 <errno+0x2894>
    287c:	002c1031 	eoreq	r1, ip, r1, lsr r0
    2880:	15050000 	strne	r0, [r5, #-0]
    2884:	00000846 	andeq	r0, r0, r6, asr #16
    2888:	b310320b 	tstlt	r0, #-1342177280	; 0xb0000000
    288c:	06000003 	streq	r0, [r0], -r3
    2890:	002c0900 	eoreq	r0, ip, r0, lsl #18
    2894:	03c30000 	biceq	r0, r3, #0
    2898:	600a0000 	andvs	r0, sl, r0
    289c:	01000000 	mrseq	r0, (UNDEF: 0)
    28a0:	06170300 	ldreq	r0, [r7], -r0, lsl #6
    28a4:	330b0000 	movwcc	r0, #45056	; 0xb000
    28a8:	00037103 	andeq	r7, r3, r3, lsl #2
    28ac:	08c80e00 	stmiaeq	r8, {r9, sl, fp}^
    28b0:	07840000 	streq	r0, [r4, r0]
    28b4:	a110390b 	tstge	r0, fp, lsl #18
    28b8:	15000004 	strne	r0, [r0, #-4]
    28bc:	000008e2 	andeq	r0, r0, r2, ror #17
    28c0:	75173a0b 	ldrvc	r3, [r7, #-2571]	; 0xfffff5f5
    28c4:	00000000 	andeq	r0, r0, r0
    28c8:	00071b15 	andeq	r1, r7, r5, lsl fp
    28cc:	173b0b00 	ldrne	r0, [fp, -r0, lsl #22]!
    28d0:	00000202 	andeq	r0, r0, r2, lsl #4
    28d4:	08251504 	stmdaeq	r5!, {r2, r8, sl, ip}
    28d8:	3c0b0000 	stccc	0, cr0, [fp], {-0}
    28dc:	00007517 	andeq	r7, r0, r7, lsl r5
    28e0:	8b150800 	blhi	5448e8 <__bss_end__+0x3fb8a0>
    28e4:	0b000006 	bleq	2904 <errno+0x2900>
    28e8:	0075173d 	rsbseq	r1, r5, sp, lsr r7
    28ec:	150c0000 	strne	r0, [ip, #-0]
    28f0:	00000658 	andeq	r0, r0, r8, asr r6
    28f4:	26173e0b 	ldrcs	r3, [r7], -fp, lsl #28
    28f8:	10000002 	andne	r0, r0, r2
    28fc:	0006ba15 	andeq	fp, r6, r5, lsl sl
    2900:	173f0b00 	ldrne	r0, [pc, -r0, lsl #22]!
    2904:	00000365 	andeq	r0, r0, r5, ror #6
    2908:	07ff1514 			; <UNDEFINED> instruction: 0x07ff1514
    290c:	400b0000 	andmi	r0, fp, r0
    2910:	00036517 	andeq	r6, r3, r7, lsl r5
    2914:	f1151c00 			; <UNDEFINED> instruction: 0xf1151c00
    2918:	0b000005 	bleq	2934 <errno+0x2930>
    291c:	03651741 	cmneq	r5, #17039360	; 0x1040000
    2920:	15240000 	strne	r0, [r4, #-0]!
    2924:	000005b4 			; <UNDEFINED> instruction: 0x000005b4
    2928:	6517420b 	ldrvs	r4, [r7, #-523]	; 0xfffffdf5
    292c:	2c000003 	stccs	0, cr0, [r0], {3}
    2930:	0006eb15 	andeq	lr, r6, r5, lsl fp
    2934:	17430b00 	strbne	r0, [r3, -r0, lsl #22]
    2938:	00000365 	andeq	r0, r0, r5, ror #6
    293c:	08181534 	ldmdaeq	r8, {r2, r4, r5, r8, sl, ip}
    2940:	440b0000 	strmi	r0, [fp], #-0
    2944:	00036517 	andeq	r6, r3, r7, lsl r5
    2948:	2e153c00 	cdpcs	12, 1, cr3, cr5, cr0, {0}
    294c:	0b000008 	bleq	2974 <errno+0x2970>
    2950:	00751745 	rsbseq	r1, r5, r5, asr #14
    2954:	15440000 	strbne	r0, [r4, #-0]
    2958:	00000551 	andeq	r0, r0, r1, asr r5
    295c:	0e17460b 	cfmsub32eq	mvax0, mvfx4, mvfx7, mvfx11
    2960:	48000002 	stmdami	r0, {r1}
    2964:	0034c315 	eorseq	ip, r4, r5, lsl r3
    2968:	174a0b00 	strbne	r0, [sl, -r0, lsl #22]
    296c:	00000365 	andeq	r0, r0, r5, ror #6
    2970:	059f154c 	ldreq	r1, [pc, #1356]	; 2ec4 <errno+0x2ec0>
    2974:	4b0b0000 	blmi	2c297c <__bss_end__+0x179934>
    2978:	0004a117 	andeq	sl, r4, r7, lsl r1
    297c:	09005400 	stmdbeq	r0, {sl, ip, lr}
    2980:	000003c3 	andeq	r0, r0, r3, asr #7
    2984:	000004b1 			; <UNDEFINED> instruction: 0x000004b1
    2988:	0000600a 	andeq	r6, r0, sl
    298c:	0300e500 	movweq	lr, #1280	; 0x500
    2990:	000008c8 	andeq	r0, r0, r8, asr #17
    2994:	cf034e0b 	svcgt	0x00034e0b
    2998:	16000003 	strne	r0, [r0], -r3
    299c:	0000021a 	andeq	r0, r0, sl, lsl r2
    29a0:	061a0e01 	ldreq	r0, [sl], -r1, lsl #28
    29a4:	0000000c 	andeq	r0, r0, ip
    29a8:	2217e000 	andscs	lr, r7, #0
    29ac:	0100002e 	tsteq	r0, lr, lsr #32
    29b0:	04de1011 	ldrbeq	r1, [lr], #17
    29b4:	03050000 	movweq	r0, #20480	; 0x5000
    29b8:	00048a80 	andeq	r8, r4, r0, lsl #21
    29bc:	04b10413 	ldrteq	r0, [r1], #1043	; 0x413
    29c0:	80180000 	andshi	r0, r8, r0
    29c4:	01000015 	tsteq	r0, r5, lsl r0
    29c8:	04de1019 	ldrbeq	r1, [lr], #25
    29cc:	23940000 	orrscs	r0, r4, #0
    29d0:	00240001 	eoreq	r0, r4, r1
    29d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    29d8:	00159119 	andseq	r9, r5, r9, lsl r1
    29dc:	06140100 	ldreq	r0, [r4], -r0, lsl #2
    29e0:	00012364 	andeq	r2, r1, r4, ror #6
    29e4:	00000030 	andeq	r0, r0, r0, lsr r0
    29e8:	621a9c01 	andsvs	r9, sl, #256	; 0x100
    29ec:	14010069 	strne	r0, [r1], #-105	; 0xffffff97
    29f0:	0004de27 	andeq	sp, r4, r7, lsr #28
    29f4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    29f8:	04970000 	ldreq	r0, [r7], #0
    29fc:	00040000 	andeq	r0, r4, r0
    2a00:	00000f47 	andeq	r0, r0, r7, asr #30
    2a04:	01170104 	tsteq	r7, r4, lsl #2
    2a08:	3a0c0000 	bcc	302a10 <__bss_end__+0x1b99c8>
    2a0c:	5f000016 	svcpl	0x00000016
    2a10:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    2a14:	ec000123 	stfs	f0, [r0], {35}	; 0x23
    2a18:	44000001 	strmi	r0, [r0], #-1
    2a1c:	02000020 	andeq	r0, r0, #32
    2a20:	032e0601 			; <UNDEFINED> instruction: 0x032e0601
    2a24:	01020000 	mrseq	r0, (UNDEF: 2)
    2a28:	00032c08 	andeq	r2, r3, r8, lsl #24
    2a2c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2a30:	00000466 	andeq	r0, r0, r6, ror #8
    2a34:	52070202 	andpl	r0, r7, #536870912	; 0x20000000
    2a38:	03000003 	movweq	r0, #3
    2a3c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2a40:	0d040074 	stceq	0, cr0, [r4, #-464]	; 0xfffffe30
    2a44:	04000003 	streq	r0, [r0], #-3
    2a48:	0054253d 	subseq	r2, r4, sp, lsr r5
    2a4c:	04020000 	streq	r0, [r2], #-0
    2a50:	0003c507 	andeq	ip, r3, r7, lsl #10
    2a54:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2a58:	00000109 	andeq	r0, r0, r9, lsl #2
    2a5c:	bb070802 	bllt	1c4a6c <__bss_end__+0x7ba24>
    2a60:	04000003 	streq	r0, [r0], #-3
    2a64:	00000372 	andeq	r0, r0, r2, ror r3
    2a68:	48157104 	ldmdami	r5, {r2, r8, ip, sp, lr}
    2a6c:	04000000 	streq	r0, [r0], #-0
    2a70:	000003d2 	ldrdeq	r0, [r0], -r2
    2a74:	69138004 	ldmdbvs	r3, {r2, pc}
    2a78:	05000000 	streq	r0, [r0, #-0]
    2a7c:	00410405 	subeq	r0, r1, r5, lsl #8
    2a80:	11090000 	mrsne	r0, (UNDEF: 9)
    2a84:	0000ed0e 	andeq	lr, r0, lr, lsl #26
    2a88:	0be00600 	bleq	ff804290 <__bss_end__+0xff6bb248>
    2a8c:	067f0000 	ldrbteq	r0, [pc], -r0
    2a90:	00000a83 	andeq	r0, r0, r3, lsl #21
    2a94:	0b26067e 	bleq	984494 <__bss_end__+0x83b44c>
    2a98:	067d0000 	ldrbteq	r0, [sp], -r0
    2a9c:	000010e3 	andeq	r1, r0, r3, ror #1
    2aa0:	11a1067c 			; <UNDEFINED> instruction: 0x11a1067c
    2aa4:	067b0000 	ldrbteq	r0, [fp], -r0
    2aa8:	00000f59 	andeq	r0, r0, r9, asr pc
    2aac:	0a6b067a 	beq	1ac449c <__bss_end__+0x197b454>
    2ab0:	06790000 	ldrbteq	r0, [r9], -r0
    2ab4:	00000e54 	andeq	r0, r0, r4, asr lr
    2ab8:	0fce0678 	svceq	0x00ce0678
    2abc:	06770000 	ldrbteq	r0, [r7], -r0
    2ac0:	000011d5 	ldrdeq	r1, [r0], -r5
    2ac4:	0cdb0676 	ldcleq	6, cr0, [fp], {118}	; 0x76
    2ac8:	06750000 	ldrbteq	r0, [r5], -r0
    2acc:	00000fa0 	andeq	r0, r0, r0, lsr #31
    2ad0:	09b40674 	ldmibeq	r4!, {r2, r4, r5, r6, r9, sl}
    2ad4:	06730000 	ldrbteq	r0, [r3], -r0
    2ad8:	00000a53 	andeq	r0, r0, r3, asr sl
    2adc:	0e630772 	mcreq	7, 3, r0, cr3, cr2, {3}
    2ae0:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
    2ae4:	08007fff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
    2ae8:	00000392 	muleq	r0, r2, r3
    2aec:	00540407 	subseq	r0, r4, r7, lsl #8
    2af0:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    2af4:	0001240e 	andeq	r2, r1, lr, lsl #8
    2af8:	03190900 	tsteq	r9, #0, 18
    2afc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2b00:	00000480 	andeq	r0, r0, r0, lsl #9
    2b04:	03f80901 	mvnseq	r0, #16384	; 0x4000
    2b08:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    2b0c:	0000048f 	andeq	r0, r0, pc, lsl #9
    2b10:	04cd0903 	strbeq	r0, [sp], #2307	; 0x903
    2b14:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    2b18:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    2b1c:	dc040005 	stcle	0, cr0, [r4], {5}
    2b20:	05000003 	streq	r0, [r0, #-3]
    2b24:	00ed0313 	rsceq	r0, sp, r3, lsl r3
    2b28:	240a0000 	strcs	r0, [sl], #-0
    2b2c:	0b000001 	bleq	2b38 <errno+0x2b34>
    2b30:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    2b34:	30591505 	subscc	r1, r9, r5, lsl #10
    2b38:	05000001 	streq	r0, [r0, #-1]
    2b3c:	02769403 	rsbseq	r9, r6, #50331648	; 0x3000000
    2b40:	00480c00 	subeq	r0, r8, r0, lsl #24
    2b44:	01570000 	cmpeq	r7, r0
    2b48:	540d0000 	strpl	r0, [sp], #-0
    2b4c:	00000000 	andeq	r0, r0, r0
    2b50:	02a70e00 	adceq	r0, r7, #0, 28
    2b54:	06040000 	streq	r0, [r4], -r0
    2b58:	74080138 	strvc	r0, [r8], #-312	; 0xfffffec8
    2b5c:	0f000001 	svceq	0x00000001
    2b60:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    2b64:	11013906 	tstne	r1, r6, lsl #18
    2b68:	00000147 	andeq	r0, r0, r7, asr #2
    2b6c:	9d100000 	ldcls	0, cr0, [r0, #-0]
    2b70:	06000003 	streq	r0, [r0], -r3
    2b74:	5721013b 			; <UNDEFINED> instruction: 0x5721013b
    2b78:	11000001 	tstne	r0, r1
    2b7c:	00000470 	andeq	r0, r0, r0, ror r4
    2b80:	0b070200 	bleq	1c3388 <__bss_end__+0x7a340>
    2b84:	0001f010 	andeq	pc, r1, r0, lsl r0	; <UNPREDICTABLE>
    2b88:	61741200 	cmnvs	r4, r0, lsl #4
    2b8c:	0c070067 	stceq	0, cr0, [r7], {103}	; 0x67
    2b90:	00017418 	andeq	r7, r1, r8, lsl r4
    2b94:	6d120000 	ldcvs	0, cr0, [r2, #-0]
    2b98:	07006773 	smlsdxeq	r0, r3, r7, r6
    2b9c:	01f00f0d 	mvnseq	r0, sp, lsl #30
    2ba0:	13040000 	movwne	r0, #16384	; 0x4000
    2ba4:	0000033a 	andeq	r0, r0, sl, lsr r3
    2ba8:	690f0e07 	stmdbvs	pc, {r0, r1, r2, r9, sl, fp}	; <UNPREDICTABLE>
    2bac:	e4000000 	str	r0, [r0], #-0
    2bb0:	037c1301 	cmneq	ip, #67108864	; 0x4000000
    2bb4:	0f070000 	svceq	0x00070000
    2bb8:	0002000f 	andeq	r0, r2, pc
    2bbc:	1301e800 	movwne	lr, #6144	; 0x1800
    2bc0:	00000365 	andeq	r0, r0, r5, ror #6
    2bc4:	750f1007 	strvc	r1, [pc, #-7]	; 2bc5 <errno+0x2bc1>
    2bc8:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2bcc:	03001301 	movweq	r1, #769	; 0x301
    2bd0:	11070000 	mrsne	r0, (UNDEF: 7)
    2bd4:	0000750f 	andeq	r7, r0, pc, lsl #10
    2bd8:	1301f800 	movwne	pc, #6144	; 0x1800	; <UNPREDICTABLE>
    2bdc:	0000040c 	andeq	r0, r0, ip, lsl #8
    2be0:	690f1207 	stmdbvs	pc, {r0, r1, r2, r9, ip}	; <UNPREDICTABLE>
    2be4:	fc000000 	stc2	0, cr0, [r0], {-0}
    2be8:	690c0001 	stmdbvs	ip, {r0}
    2bec:	00000000 	andeq	r0, r0, r0
    2bf0:	0d000002 	stceq	0, cr0, [r0, #-8]
    2bf4:	00000054 	andeq	r0, r0, r4, asr r0
    2bf8:	690c0077 	stmdbvs	ip, {r0, r1, r2, r4, r5, r6}
    2bfc:	10000000 	andne	r0, r0, r0
    2c00:	0d000002 	stceq	0, cr0, [r0, #-8]
    2c04:	00000054 	andeq	r0, r0, r4, asr r0
    2c08:	43140002 	tstmi	r4, #2
    2c0c:	07000003 	streq	r0, [r0, -r3]
    2c10:	01810313 	orreq	r0, r1, r3, lsl r3
    2c14:	02000000 	andeq	r0, r0, #0
    2c18:	0002e815 	andeq	lr, r2, r5, lsl r8
    2c1c:	210d0a00 	tstcs	sp, r0, lsl #20
    2c20:	0000022a 	andeq	r0, r0, sl, lsr #4
    2c24:	02100416 	andseq	r0, r0, #369098752	; 0x16000000
    2c28:	04020000 	streq	r0, [r2], #-0
    2c2c:	0003c007 	andeq	ip, r3, r7
    2c30:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    2c34:	000015f3 	strdeq	r1, [r0], -r3
    2c38:	000a2f04 	andeq	r2, sl, r4, lsl #30
    2c3c:	186e0800 	stmdane	lr!, {fp}^
    2c40:	00000054 	andeq	r0, r0, r4, asr r0
    2c44:	ff180417 			; <UNDEFINED> instruction: 0xff180417
    2c48:	03000015 	movweq	r0, #21
    2c4c:	25800620 	strcs	r0, [r0, #1568]	; 0x620
    2c50:	00240001 	eoreq	r0, r4, r1
    2c54:	9c010000 	stcls	0, cr0, [r1], {-0}
    2c58:	00000281 	andeq	r0, r0, r1, lsl #5
    2c5c:	62637419 	rsbvs	r7, r3, #419430400	; 0x19000000
    2c60:	1c200300 	stcne	3, cr0, [r0], #-0
    2c64:	00000075 	andeq	r0, r0, r5, ror r0
    2c68:	1a749102 	bne	1d27078 <__bss_end__+0x1bde030>
    2c6c:	00002029 	andeq	r2, r0, r9, lsr #32
    2c70:	81272003 			; <UNDEFINED> instruction: 0x81272003
    2c74:	02000002 	andeq	r0, r0, #2
    2c78:	16007091 			; <UNDEFINED> instruction: 0x16007091
    2c7c:	00028704 	andeq	r8, r2, r4, lsl #14
    2c80:	08010200 	stmdaeq	r1, {r9}
    2c84:	00000335 	andeq	r0, r0, r5, lsr r3
    2c88:	00160b1b 	andseq	r0, r6, fp, lsl fp
    2c8c:	171a0300 	ldrne	r0, [sl, -r0, lsl #6]
    2c90:	00012564 	andeq	r2, r1, r4, ror #10
    2c94:	0000001c 	andeq	r0, r0, ip, lsl r0
    2c98:	a31c9c01 	tstge	ip, #256	; 0x100
    2c9c:	03000016 	movweq	r0, #22
    2ca0:	023e080f 	eorseq	r0, lr, #983040	; 0xf0000
    2ca4:	24f80000 	ldrbtcs	r0, [r8], #0
    2ca8:	006c0001 	rsbeq	r0, ip, r1
    2cac:	9c010000 	stcls	0, cr0, [r1], {-0}
    2cb0:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    2cb4:	0019a11a 	andseq	sl, r9, sl, lsl r1
    2cb8:	230f0300 	movwcs	r0, #62208	; 0xf300
    2cbc:	0000024a 	andeq	r0, r0, sl, asr #4
    2cc0:	1a6c9102 	bne	1b270d0 <__bss_end__+0x19de088>
    2cc4:	00002782 	andeq	r2, r0, r2, lsl #15
    2cc8:	3e300f03 	cdpcc	15, 3, cr0, cr0, cr3, {0}
    2ccc:	02000002 	andeq	r0, r0, #2
    2cd0:	340b6891 	strcc	r6, [fp], #-2193	; 0xfffff76f
    2cd4:	03000016 	movweq	r0, #22
    2cd8:	02810b12 	addeq	r0, r1, #18432	; 0x4800
    2cdc:	91020000 	mrsls	r0, (UNDEF: 2)
    2ce0:	25141d70 	ldrcs	r1, [r4, #-3440]	; 0xfffff290
    2ce4:	00400001 	subeq	r0, r0, r1
    2ce8:	691e0000 	ldmdbvs	lr, {}	; <UNPREDICTABLE>
    2cec:	11130300 	tstne	r3, r0, lsl #6
    2cf0:	0000023e 	andeq	r0, r0, lr, lsr r2
    2cf4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    2cf8:	16221f00 	strtne	r1, [r2], -r0, lsl #30
    2cfc:	3f020000 	svccc	0x00020000
    2d00:	24641a02 	strbtcs	r1, [r4], #-2562	; 0xfffff5fe
    2d04:	00940001 	addseq	r0, r4, r1
    2d08:	9c010000 	stcls	0, cr0, [r1], {-0}
    2d0c:	00000385 	andeq	r0, r0, r5, lsl #7
    2d10:	02006320 	andeq	r6, r0, #32, 6	; 0x80000000
    2d14:	8731023f 			; <UNDEFINED> instruction: 0x8731023f
    2d18:	02000002 	andeq	r0, r0, #2
    2d1c:	08215f91 	stmdaeq	r1!, {r0, r4, r7, r8, r9, sl, fp, ip, lr}
    2d20:	0200000e 	andeq	r0, r0, #14
    2d24:	690f0241 	stmdbvs	pc, {r0, r6, r9}	; <UNPREDICTABLE>
    2d28:	02000000 	andeq	r0, r0, #0
    2d2c:	10217491 	mlane	r1, r1, r4, r7
    2d30:	0200000e 	andeq	r0, r0, #14
    2d34:	690f0242 	stmdbvs	pc, {r1, r6, r9}	; <UNPREDICTABLE>
    2d38:	02000000 	andeq	r0, r0, #0
    2d3c:	72217091 	eorvc	r7, r1, #145	; 0x91
    2d40:	02000010 	andeq	r0, r0, #16
    2d44:	690f0243 	stmdbvs	pc, {r0, r1, r6, r9}	; <UNPREDICTABLE>
    2d48:	02000000 	andeq	r0, r0, #0
    2d4c:	18216c91 	stmdane	r1!, {r0, r4, r7, sl, fp, sp, lr}
    2d50:	0200000e 	andeq	r0, r0, #14
    2d54:	690f0244 	stmdbvs	pc, {r2, r6, r9}	; <UNPREDICTABLE>
    2d58:	02000000 	andeq	r0, r0, #0
    2d5c:	20216891 	mlacs	r1, r1, r8, r6
    2d60:	0200000e 	andeq	r0, r0, #14
    2d64:	690f0245 	stmdbvs	pc, {r0, r2, r6, r9}	; <UNPREDICTABLE>
    2d68:	02000000 	andeq	r0, r0, #0
    2d6c:	28216491 	stmdacs	r1!, {r0, r4, r7, sl, sp, lr}
    2d70:	0200000e 	andeq	r0, r0, #14
    2d74:	690f0246 	stmdbvs	pc, {r1, r2, r6, r9}	; <UNPREDICTABLE>
    2d78:	02000000 	andeq	r0, r0, #0
    2d7c:	22006091 	andcs	r6, r0, #145	; 0x91
    2d80:	00000d99 	muleq	r0, r9, sp
    2d84:	b8149201 	ldmdalt	r4, {r0, r9, ip, pc}
    2d88:	ac000123 	stfges	f0, [r0], {35}	; 0x23
    2d8c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d90:	0004949c 	muleq	r4, ip, r4
    2d94:	79731900 	ldmdbvc	r3!, {r8, fp, ip}^
    2d98:	92010073 	andls	r0, r1, #115	; 0x73
    2d9c:	00006930 	andeq	r6, r0, r0, lsr r9
    2da0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2da4:	000c201a 	andeq	r2, ip, sl, lsl r0
    2da8:	3f920100 	svccc	0x00920100
    2dac:	00000069 	andeq	r0, r0, r9, rrx
    2db0:	1a689102 	bne	1a271c0 <__bss_end__+0x18de178>
    2db4:	000011ae 	andeq	r1, r0, lr, lsr #3
    2db8:	94509201 	ldrbls	r9, [r0], #-513	; 0xfffffdff
    2dbc:	02000004 	andeq	r0, r0, #4
    2dc0:	f21a6491 	vqshl.s16	d6, d1, d26
    2dc4:	01000010 	tsteq	r0, r0, lsl r0
    2dc8:	00696592 	mlseq	r9, r2, r5, r6
    2dcc:	91020000 	mrsls	r0, (UNDEF: 2)
    2dd0:	0ad31a60 	beq	ff4c9758 <__bss_end__+0xff380710>
    2dd4:	93010000 	movwls	r0, #4096	; 0x1000
    2dd8:	00049431 	andeq	r9, r4, r1, lsr r4
    2ddc:	00910200 	addseq	r0, r1, r0, lsl #4
    2de0:	0009dd1a 	andeq	sp, r9, sl, lsl sp
    2de4:	46930100 	ldrmi	r0, [r3], r0, lsl #2
    2de8:	00000494 	muleq	r0, r4, r4
    2dec:	1a049102 	bne	1271fc <morecore_area+0xde1fc>
    2df0:	000009e8 	andeq	r0, r0, r8, ror #19
    2df4:	945d9301 	ldrbls	r9, [sp], #-769	; 0xfffffcff
    2df8:	02000004 	andeq	r0, r0, #4
    2dfc:	f31a0891 	vceq.i16	d0, d26, d1
    2e00:	01000009 	tsteq	r0, r9
    2e04:	04947493 	ldreq	r7, [r4], #1171	; 0x493
    2e08:	91020000 	mrsls	r0, (UNDEF: 2)
    2e0c:	09fe1a0c 	ldmibeq	lr!, {r2, r3, r9, fp, ip}^
    2e10:	93010000 	movwls	r0, #4096	; 0x1000
    2e14:	0004948b 	andeq	r9, r4, fp, lsl #9
    2e18:	10910200 	addsne	r0, r1, r0, lsl #4
    2e1c:	00093a1a 	andeq	r3, r9, sl, lsl sl
    2e20:	3f940100 	svccc	0x00940100
    2e24:	00000069 	andeq	r0, r0, r9, rrx
    2e28:	0b149102 	bleq	527238 <__bss_end__+0x3de1f0>
    2e2c:	00000cce 	andeq	r0, r0, lr, asr #25
    2e30:	69189601 	ldmdbvs	r8, {r0, r9, sl, ip, pc}
    2e34:	01000000 	mrseq	r0, (UNDEF: 0)
    2e38:	28a90b50 	stmiacs	r9!, {r4, r6, r8, r9, fp}
    2e3c:	97010000 	strls	r0, [r1, -r0]
    2e40:	00006918 	andeq	r6, r0, r8, lsl r9
    2e44:	0b510100 	bleq	144324c <__bss_end__+0x12fa204>
    2e48:	0000113b 	andeq	r1, r0, fp, lsr r1
    2e4c:	69189a01 	ldmdbvs	r8, {r0, r9, fp, ip, pc}
    2e50:	01000000 	mrseq	r0, (UNDEF: 0)
    2e54:	11400b52 	cmpne	r0, r2, asr fp
    2e58:	9b010000 	blls	42e60 <__stack_base+0x2e60>
    2e5c:	00006918 	andeq	r6, r0, r8, lsl r9
    2e60:	0b530100 	bleq	14c3268 <__bss_end__+0x137a220>
    2e64:	00001145 	andeq	r1, r0, r5, asr #2
    2e68:	69189c01 	ldmdbvs	r8, {r0, sl, fp, ip, pc}
    2e6c:	01000000 	mrseq	r0, (UNDEF: 0)
    2e70:	11140b54 	tstne	r4, r4, asr fp
    2e74:	9d010000 	stcls	0, cr0, [r1, #-0]
    2e78:	00006918 	andeq	r6, r0, r8, lsl r9
    2e7c:	0b550100 	bleq	1543284 <__bss_end__+0x13fa23c>
    2e80:	00000d09 	andeq	r0, r0, r9, lsl #26
    2e84:	6918a101 	ldmdbvs	r8, {r0, r8, sp, pc}
    2e88:	01000000 	mrseq	r0, (UNDEF: 0)
    2e8c:	04160057 	ldreq	r0, [r6], #-87	; 0xffffffa9
    2e90:	00000069 	andeq	r0, r0, r9, rrx
    2e94:	000ffb00 	andeq	pc, pc, r0, lsl #22
    2e98:	6c000400 	cfstrsvs	mvf0, [r0], {-0}
    2e9c:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    2ea0:	00011701 	andeq	r1, r1, r1, lsl #14
    2ea4:	19410c00 	stmdbne	r1, {sl, fp}^
    2ea8:	005f0000 	subseq	r0, pc, r0
    2eac:	25a40000 	strcs	r0, [r4, #0]!
    2eb0:	16440001 	strbne	r0, [r4], -r1
    2eb4:	232a0000 			; <UNDEFINED> instruction: 0x232a0000
    2eb8:	32020000 	andcc	r0, r2, #0
    2ebc:	03000017 	movweq	r0, #23
    2ec0:	00311a10 	eorseq	r1, r1, r0, lsl sl
    2ec4:	04030000 	streq	r0, [r3], #-0
    2ec8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2ecc:	1aa10400 	bne	fe843ed4 <__bss_end__+0xfe6fae8c>
    2ed0:	ca020000 	bgt	82ed8 <morecore_area+0x39ed8>
    2ed4:	00004412 	andeq	r4, r0, r2, lsl r4
    2ed8:	07040500 	streq	r0, [r4, -r0, lsl #10]
    2edc:	000003c5 	andeq	r0, r0, r5, asr #7
    2ee0:	001a9b04 	andseq	r9, sl, r4, lsl #22
    2ee4:	10d40200 	sbcsne	r0, r4, r0, lsl #4
    2ee8:	00000057 	andeq	r0, r0, r7, asr r0
    2eec:	09050805 	stmdbeq	r5, {r0, r2, fp}
    2ef0:	06000001 	streq	r0, [r0], -r1
    2ef4:	000018e5 	andeq	r1, r0, r5, ror #17
    2ef8:	0d011d02 	stceq	13, cr1, [r1, #-8]
    2efc:	00000031 	andeq	r0, r0, r1, lsr r0
    2f00:	66050205 	strvs	r0, [r5], -r5, lsl #4
    2f04:	04000004 	streq	r0, [r0], #-4
    2f08:	00001a1e 	andeq	r1, r0, lr, lsl sl
    2f0c:	7e1b1202 	cdpvc	2, 1, cr1, cr11, cr2, {0}
    2f10:	07000000 	streq	r0, [r0, -r0]
    2f14:	00001a1c 	andeq	r1, r0, ip, lsl sl
    2f18:	95001504 	strls	r1, [r0, #-1284]	; 0xfffffafc
    2f1c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2f20:	00001907 	andeq	r1, r0, r7, lsl #18
    2f24:	00000095 	muleq	r0, r5, r0
    2f28:	04090000 	streq	r0, [r9], #-0
    2f2c:	000a2f04 	andeq	r2, sl, r4, lsl #30
    2f30:	186e0200 	stmdane	lr!, {r9}^
    2f34:	00000044 	andeq	r0, r0, r4, asr #32
    2f38:	0000970a 	andeq	r9, r0, sl, lsl #14
    2f3c:	18b70400 	ldmne	r7!, {sl}
    2f40:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2f44:	0000310f 	andeq	r3, r0, pc, lsl #2
    2f48:	022a0600 	eoreq	r0, sl, #0, 12
    2f4c:	6d020000 	stcvs	0, cr0, [r2, #-0]
    2f50:	00c11901 	sbceq	r1, r1, r1, lsl #18
    2f54:	260b0000 	strcs	r0, [fp], -r0
    2f58:	05000002 	streq	r0, [r0, #-2]
    2f5c:	03350801 	teqeq	r5, #65536	; 0x10000
    2f60:	c60a0000 	strgt	r0, [sl], -r0
    2f64:	05000000 	streq	r0, [r0, #-0]
    2f68:	15f80408 	ldrbne	r0, [r8, #1032]!	; 0x408
    2f6c:	2f020000 	svccs	0x00020000
    2f70:	04000002 	streq	r0, [r0], #-2
    2f74:	00eb1437 	rsceq	r1, fp, r7, lsr r4
    2f78:	040c0000 	streq	r0, [ip], #-0
    2f7c:	000000b4 	strheq	r0, [r0], -r4
    2f80:	0000e50a 	andeq	lr, r0, sl, lsl #10
    2f84:	023c0200 	eorseq	r0, ip, #0, 4
    2f88:	38040000 	stmdacc	r4, {}	; <UNPREDICTABLE>
    2f8c:	0000eb14 	andeq	lr, r0, r4, lsl fp
    2f90:	02350200 	eorseq	r0, r5, #0, 4
    2f94:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    2f98:	0000eb14 	andeq	lr, r0, r4, lsl fp
    2f9c:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    2fa0:	0000010e 	andeq	r0, r0, lr, lsl #2
    2fa4:	00192b02 	andseq	r2, r9, r2, lsl #22
    2fa8:	0e7b0500 	cdpeq	5, 7, cr0, cr11, cr0, {0}
    2fac:	0000011b 	andeq	r0, r0, fp, lsl r1
    2fb0:	00c6040c 	sbceq	r0, r6, ip, lsl #8
    2fb4:	00020000 	andeq	r0, r2, r0
    2fb8:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    2fbc:	00310c7c 	eorseq	r0, r1, ip, ror ip
    2fc0:	8e020000 	cdphi	0, 0, cr0, cr2, cr0, {0}
    2fc4:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    2fc8:	0031147c 	eorseq	r1, r1, ip, ror r4
    2fcc:	18020000 	stmdane	r2, {}	; <UNPREDICTABLE>
    2fd0:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    2fd4:	00311c7c 	eorseq	r1, r1, ip, ror ip
    2fd8:	01050000 	mrseq	r0, (UNDEF: 5)
    2fdc:	00032e06 	andeq	r2, r3, r6, lsl #28
    2fe0:	08010500 	stmdaeq	r1, {r8, sl}
    2fe4:	0000032c 	andeq	r0, r0, ip, lsr #6
    2fe8:	52070205 	andpl	r0, r7, #1342177280	; 0x50000000
    2fec:	04000003 	streq	r0, [r0], #-3
    2ff0:	0000030d 	andeq	r0, r0, sp, lsl #6
    2ff4:	44253d06 	strtmi	r3, [r5], #-3334	; 0xfffff2fa
    2ff8:	05000000 	streq	r0, [r0, #-0]
    2ffc:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
    3000:	72040000 	andvc	r0, r4, #0
    3004:	06000003 	streq	r0, [r0], -r3
    3008:	015a1571 	cmpeq	sl, r1, ror r5
    300c:	d2040000 	andle	r0, r4, #0
    3010:	06000003 	streq	r0, [r0], -r3
    3014:	016d1380 	cmneq	sp, r0, lsl #7
    3018:	920d0000 	andls	r0, sp, #0
    301c:	07000003 	streq	r0, [r0, -r3]
    3020:	00004404 	andeq	r4, r0, r4, lsl #8
    3024:	0e080700 	cdpeq	7, 0, cr0, cr8, cr0, {0}
    3028:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    302c:	0003190e 	andeq	r1, r3, lr, lsl #18
    3030:	800e0000 	andhi	r0, lr, r0
    3034:	01000004 	tsteq	r0, r4
    3038:	0003f80e 	andeq	pc, r3, lr, lsl #16
    303c:	8f0e0200 	svchi	0x000e0200
    3040:	03000004 	movweq	r0, #4
    3044:	0004cd0e 	andeq	ip, r4, lr, lsl #26
    3048:	bd0e0400 	cfstrslt	mvf0, [lr, #-0]
    304c:	05000002 	streq	r0, [r0, #-2]
    3050:	03dc0400 	bicseq	r0, ip, #0, 8
    3054:	13070000 	movwne	r0, #28672	; 0x7000
    3058:	00018503 	andeq	r8, r1, r3, lsl #10
    305c:	01bc0a00 			; <UNDEFINED> instruction: 0x01bc0a00
    3060:	b40f0000 	strlt	r0, [pc], #-0	; 3068 <errno+0x3064>
    3064:	07000004 	streq	r0, [r0, -r4]
    3068:	01c85915 	biceq	r5, r8, r5, lsl r9
    306c:	03050000 	movweq	r0, #20480	; 0x5000
    3070:	00027698 	muleq	r2, r8, r6
    3074:	000ee80d 	andeq	lr, lr, sp, lsl #16
    3078:	44040700 	strmi	r0, [r4], #-1792	; 0xfffff900
    307c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3080:	01fe0e09 	mvnseq	r0, r9, lsl #28
    3084:	360e0000 	strcc	r0, [lr], -r0
    3088:	0500000a 	streq	r0, [r0, #-10]
    308c:	000bbb0e 	andeq	fp, fp, lr, lsl #22
    3090:	0d000600 	stceq	6, cr0, [r0, #-0]
    3094:	00000d29 	andeq	r0, r0, r9, lsr #26
    3098:	00440407 	subeq	r0, r4, r7, lsl #8
    309c:	34090000 	strcc	r0, [r9], #-0
    30a0:	00022306 	andeq	r2, r2, r6, lsl #6
    30a4:	09ca0e00 	stmibeq	sl, {r9, sl, fp}^
    30a8:	0e070000 	cdpeq	0, 0, cr0, cr7, cr0, {0}
    30ac:	00000ef5 	strdeq	r0, [r0], -r5
    30b0:	0df60e02 	ldcleq	14, cr0, [r6, #8]!
    30b4:	00780000 	rsbseq	r0, r8, r0
    30b8:	00015a10 	andeq	r5, r1, r0, lsl sl
    30bc:	00023300 	andeq	r3, r2, r0, lsl #6
    30c0:	00441100 	subeq	r1, r4, r0, lsl #2
    30c4:	00000000 	andeq	r0, r0, r0
    30c8:	0002a712 	andeq	sl, r2, r2, lsl r7
    30cc:	380a0400 	stmdacc	sl, {sl}
    30d0:	02500801 	subseq	r0, r0, #65536	; 0x10000
    30d4:	b0130000 	andslt	r0, r3, r0
    30d8:	0a000003 	beq	30ec <errno+0x30e8>
    30dc:	23110139 	tstcs	r1, #1073741838	; 0x4000000e
    30e0:	00000002 	andeq	r0, r0, r2
    30e4:	039d0600 	orrseq	r0, sp, #0, 12
    30e8:	3b0a0000 	blcc	2830f0 <__bss_end__+0x13a0a8>
    30ec:	02332101 	eorseq	r2, r3, #1073741824	; 0x40000000
    30f0:	70140000 	andsvc	r0, r4, r0
    30f4:	00000004 	andeq	r0, r0, r4
    30f8:	100b0b02 	andne	r0, fp, r2, lsl #22
    30fc:	000002cc 	andeq	r0, r0, ip, asr #5
    3100:	67617415 			; <UNDEFINED> instruction: 0x67617415
    3104:	180c0b00 	stmdane	ip, {r8, r9, fp}
    3108:	00000250 	andeq	r0, r0, r0, asr r2
    310c:	736d1500 	cmnvc	sp, #0, 10
    3110:	0d0b0067 	stceq	0, cr0, [fp, #-412]	; 0xfffffe64
    3114:	0002cc0f 	andeq	ip, r2, pc, lsl #24
    3118:	3a160400 	bcc	584120 <__bss_end__+0x43b0d8>
    311c:	0b000003 	bleq	3130 <errno+0x312c>
    3120:	016d0f0e 	cmneq	sp, lr, lsl #30
    3124:	01e40000 	mvneq	r0, r0
    3128:	00037c16 	andeq	r7, r3, r6, lsl ip
    312c:	0f0f0b00 	svceq	0x000f0b00
    3130:	000002dc 	ldrdeq	r0, [r0], -ip
    3134:	651601e8 	ldrvs	r0, [r6, #-488]	; 0xfffffe18
    3138:	0b000003 	bleq	314c <errno+0x3148>
    313c:	01790f10 	cmneq	r9, r0, lsl pc
    3140:	01f40000 	mvnseq	r0, r0
    3144:	00030016 	andeq	r0, r3, r6, lsl r0
    3148:	0f110b00 	svceq	0x00110b00
    314c:	00000179 	andeq	r0, r0, r9, ror r1
    3150:	0c1601f8 	ldfeqs	f0, [r6], {248}	; 0xf8
    3154:	0b000004 	bleq	316c <errno+0x3168>
    3158:	016d0f12 	cmneq	sp, r2, lsl pc
    315c:	01fc0000 	mvnseq	r0, r0
    3160:	016d1000 	cmneq	sp, r0
    3164:	02dc0000 	sbcseq	r0, ip, #0
    3168:	44110000 	ldrmi	r0, [r1], #-0
    316c:	77000000 	strvc	r0, [r0, -r0]
    3170:	016d1000 	cmneq	sp, r0
    3174:	02ec0000 	rsceq	r0, ip, #0
    3178:	44110000 	ldrmi	r0, [r1], #-0
    317c:	02000000 	andeq	r0, r0, #0
    3180:	03431700 	movteq	r1, #14080	; 0x3700
    3184:	130b0000 	movwne	r0, #45056	; 0xb000
    3188:	00025d03 	andeq	r5, r2, r3, lsl #26
    318c:	02020000 	andeq	r0, r2, #0
    3190:	000002e8 	andeq	r0, r0, r8, ror #5
    3194:	06210d0c 	strteq	r0, [r1], -ip, lsl #26
    3198:	0c000003 	stceq	0, cr0, [r0], {3}
    319c:	0002ec04 	andeq	lr, r2, r4, lsl #24
    31a0:	100d0d00 	andne	r0, sp, r0, lsl #26
    31a4:	04070000 	streq	r0, [r7], #-0
    31a8:	00000044 	andeq	r0, r0, r4, asr #32
    31ac:	d9060e0d 	stmdble	r6, {r0, r2, r3, r9, sl, fp}
    31b0:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    31b4:	00000ac1 	andeq	r0, r0, r1, asr #21
    31b8:	122e0e00 	eorne	r0, lr, #0, 28
    31bc:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
    31c0:	00000b7f 	andeq	r0, r0, pc, ror fp
    31c4:	0f8e0e02 	svceq	0x008e0e02
    31c8:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    31cc:	0000109a 	muleq	r0, sl, r0
    31d0:	0b190e04 	bleq	6469e8 <__bss_end__+0x4fd9a0>
    31d4:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    31d8:	00000fb9 			; <UNDEFINED> instruction: 0x00000fb9
    31dc:	0b330e06 	bleq	cc69fc <__bss_end__+0xb7d9b4>
    31e0:	0e070000 	cdpeq	0, 0, cr0, cr7, cr0, {0}
    31e4:	00000a95 	muleq	r0, r5, sl
    31e8:	0a090e08 	beq	246a10 <__bss_end__+0xfd9c8>
    31ec:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
    31f0:	00000f2d 	andeq	r0, r0, sp, lsr #30
    31f4:	0ced0e0a 	stcleq	14, cr0, [sp], #40	; 0x28
    31f8:	0e0b0000 	cdpeq	0, 0, cr0, cr11, cr0, {0}
    31fc:	00001068 	andeq	r1, r0, r8, rrx
    3200:	0fe30e0c 	svceq	0x00e30e0c
    3204:	0e0d0000 	cdpeq	0, 0, cr0, cr13, cr0, {0}
    3208:	000010ab 	andeq	r1, r0, fp, lsr #1
    320c:	11f00e0e 	mvnsne	r0, lr, lsl #28
    3210:	0e0f0000 	cdpeq	0, 0, cr0, cr15, cr0, {0}
    3214:	00000cc2 	andeq	r0, r0, r2, asr #25
    3218:	0bd40e10 	bleq	ff506a60 <__bss_end__+0xff3bda18>
    321c:	0e110000 	cdpeq	0, 1, cr0, cr1, cr0, {0}
    3220:	00000ed1 	ldrdeq	r0, [r0], -r1
    3224:	120a0e12 	andne	r0, sl, #288	; 0x120
    3228:	0e130000 	cdpeq	0, 1, cr0, cr3, cr0, {0}
    322c:	00000b75 	andeq	r0, r0, r5, ror fp
    3230:	0a790e14 	beq	1e46a88 <__bss_end__+0x1cfda40>
    3234:	0e150000 	cdpeq	0, 1, cr0, cr5, cr0, {0}
    3238:	00000ff7 	strdeq	r0, [r0], -r7
    323c:	0c250e16 	stceq	14, cr0, [r5], #-88	; 0xffffffa8
    3240:	0e170000 	cdpeq	0, 1, cr0, cr7, cr0, {0}
    3244:	00000b65 	andeq	r0, r0, r5, ror #22
    3248:	0c970e18 	ldceq	14, cr0, [r7], {24}
    324c:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
    3250:	0000117a 	andeq	r1, r0, sl, ror r1
    3254:	0c860e1a 	stceq	14, cr0, [r6], {26}
    3258:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    325c:	00000f67 	andeq	r0, r0, r7, ror #30
    3260:	0ec40e1c 	mcreq	14, 6, r0, cr4, cr12, {0}
    3264:	0e1d0000 	cdpeq	0, 1, cr0, cr13, cr0, {0}
    3268:	00000969 	andeq	r0, r0, r9, ror #18
    326c:	030d001e 	movweq	r0, #53278	; 0xd01e
    3270:	07000010 	smladeq	r0, r0, r0, r0
    3274:	00004404 	andeq	r4, r0, r4, lsl #8
    3278:	060e0e00 	streq	r0, [lr], -r0, lsl #28
    327c:	0000040a 	andeq	r0, r0, sl, lsl #8
    3280:	000de60e 	andeq	lr, sp, lr, lsl #12
    3284:	0a0e1e00 	beq	38aa8c <__bss_end__+0x241a44>
    3288:	1f00000f 	svcne	0x0000000f
    328c:	000e8b0e 	andeq	r8, lr, lr, lsl #22
    3290:	630e2000 	movwvs	r2, #57344	; 0xe000
    3294:	21000011 	tstcs	r0, r1, lsl r0
    3298:	0012140e 	andseq	r1, r2, lr, lsl #8
    329c:	05002200 	streq	r2, [r0, #-512]	; 0xfffffe00
    32a0:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
    32a4:	b8040000 	stmdalt	r4, {}	; <UNPREDICTABLE>
    32a8:	0f000016 	svceq	0x00000016
    32ac:	01661c14 	cmneq	r6, r4, lsl ip
    32b0:	cd180000 	ldcgt	0, cr0, [r8, #-0]
    32b4:	10000019 	andne	r0, r0, r9, lsl r0
    32b8:	4508160f 	strmi	r1, [r8, #-1551]	; 0xfffff9f1
    32bc:	19000004 	stmdbne	r0, {r2}
    32c0:	000018dc 	ldrdeq	r1, [r0], -ip
    32c4:	1109170f 	tstne	r9, pc, lsl #14
    32c8:	00000004 	andeq	r0, r0, r4
    32cc:	0019a619 	andseq	sl, r9, r9, lsl r6
    32d0:	09180f00 	ldmdbeq	r8, {r8, r9, sl, fp}
    32d4:	00000411 	andeq	r0, r0, r1, lsl r4
    32d8:	1d0a0008 	stcne	0, cr0, [sl, #-32]	; 0xffffffe0
    32dc:	12000004 	andne	r0, r0, #4
    32e0:	00001aa8 	andeq	r1, r0, r8, lsr #21
    32e4:	01850208 	orreq	r0, r5, r8, lsl #4
    32e8:	00047508 	andeq	r7, r4, r8, lsl #10
    32ec:	18bf1300 	ldmne	pc!, {r8, r9, ip}	; <UNPREDICTABLE>
    32f0:	85020000 	strhi	r0, [r2, #-0]
    32f4:	00951601 	addseq	r1, r5, r1, lsl #12
    32f8:	13000000 	movwne	r0, #0
    32fc:	000018f8 	strdeq	r1, [r0], -r8
    3300:	27018502 	strcs	r8, [r1, -r2, lsl #10]
    3304:	00000097 	muleq	r0, r7, r0
    3308:	040c0004 	streq	r0, [ip], #-4
    330c:	0000044a 	andeq	r0, r0, sl, asr #8
    3310:	00058e04 	andeq	r8, r5, r4, lsl #28
    3314:	19b50200 	ldmibne	r5!, {r9}
    3318:	00000044 	andeq	r0, r0, r4, asr #32
    331c:	00cd040c 	sbceq	r0, sp, ip, lsl #8
    3320:	9c020000 	stcls	0, cr0, [r2], {-0}
    3324:	10000018 	andne	r0, r0, r8, lsl r0
    3328:	00310cf8 	ldrshteq	r0, [r1], -r8
    332c:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    3330:	0015f304 	andseq	pc, r5, r4, lsl #6
    3334:	00a31000 	adceq	r1, r3, r0
    3338:	04b00000 	ldrteq	r0, [r0], #0
    333c:	44110000 	ldrmi	r0, [r1], #-0
    3340:	03000000 	movweq	r0, #0
    3344:	04a00a00 	strteq	r0, [r0], #2560	; 0xa00
    3348:	620f0000 	andvs	r0, pc, #0
    334c:	1100001a 	tstne	r0, sl, lsl r0
    3350:	04b01c0e 	ldrteq	r1, [r0], #3086	; 0xc0e
    3354:	03050000 	movweq	r0, #20480	; 0x5000
    3358:	0002769c 	muleq	r2, ip, r6
    335c:	00011b10 	andeq	r1, r1, r0, lsl fp
    3360:	0004d200 	andeq	sp, r4, r0, lsl #4
    3364:	02001a00 	andeq	r1, r0, #0, 20
    3368:	000017e8 	andeq	r1, r0, r8, ror #15
    336c:	c70e0e12 	smladgt	lr, r2, lr, r0
    3370:	02000004 	andeq	r0, r0, #4
    3374:	000016e4 	andeq	r1, r0, r4, ror #13
    3378:	c70e0f12 	smladgt	lr, r2, pc, r0	; <UNPREDICTABLE>
    337c:	18000004 	stmdane	r0, {r2}
    3380:	00001932 	andeq	r1, r0, r2, lsr r9
    3384:	10161310 	andsne	r1, r6, r0, lsl r3
    3388:	0000051f 	andeq	r0, r0, pc, lsl r5
    338c:	0006a019 	andeq	sl, r6, r9, lsl r0
    3390:	11171300 	tstne	r7, r0, lsl #6
    3394:	00000487 	andeq	r0, r0, r7, lsl #9
    3398:	381f1900 	ldmdacc	pc, {r8, fp, ip}	; <UNPREDICTABLE>
    339c:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
    33a0:	00047b0e 	andeq	r7, r4, lr, lsl #22
    33a4:	ae190400 	cfmulsge	mvf0, mvf9, mvf0
    33a8:	1300001a 	movwne	r0, #26
    33ac:	004b0b19 	subeq	r0, fp, r9, lsl fp
    33b0:	00080000 	andeq	r0, r8, r0
    33b4:	0019af04 	andseq	sl, r9, r4, lsl #30
    33b8:	031a1300 	tsteq	sl, #0, 6
    33bc:	000004ea 	andeq	r0, r0, sl, ror #9
    33c0:	00180918 	andseq	r0, r8, r8, lsl r9
    33c4:	1c130800 	ldcne	8, cr0, [r3], {-0}
    33c8:	00055310 	andeq	r5, r5, r0, lsl r3
    33cc:	19221900 	stmdbne	r2!, {r8, fp, ip}
    33d0:	1d130000 	ldcne	0, cr0, [r3, #-0]
    33d4:	00003109 	andeq	r3, r0, r9, lsl #2
    33d8:	a1190000 	tstge	r9, r0
    33dc:	13000019 	movwne	r0, #25
    33e0:	00950b1e 	addseq	r0, r5, lr, lsl fp
    33e4:	00040000 	andeq	r0, r4, r0
    33e8:	001a8d04 	andseq	r8, sl, r4, lsl #26
    33ec:	031f1300 	tsteq	pc, #0, 6
    33f0:	0000052b 	andeq	r0, r0, fp, lsr #10
    33f4:	00185704 	andseq	r5, r8, r4, lsl #14
    33f8:	17341300 	ldrne	r1, [r4, -r0, lsl #6]!
    33fc:	0000056b 	andeq	r0, r0, fp, ror #10
    3400:	0571040c 	ldrbeq	r0, [r1, #-1036]!	; 0xfffffbf4
    3404:	8f1b0000 	svchi	0x001b0000
    3408:	8f000005 	svchi	0x00000005
    340c:	1c000005 	stcne	0, cr0, [r0], {5}
    3410:	0000058f 	andeq	r0, r0, pc, lsl #11
    3414:	00040a1c 	andeq	r0, r4, ip, lsl sl
    3418:	04871c00 	streq	r1, [r7], #3072	; 0xc00
    341c:	961c0000 	ldrls	r0, [ip], -r0
    3420:	00000005 	andeq	r0, r0, r5
    3424:	0595040c 	ldreq	r0, [r5, #1036]	; 0x40c
    3428:	0c1d0000 	ldceq	0, cr0, [sp], {-0}
    342c:	00040a04 	andeq	r0, r4, r4, lsl #20
    3430:	1a800400 	bne	fe004438 <__bss_end__+0xfdebb3f0>
    3434:	1b140000 	blne	50343c <__bss_end__+0x3ba3f4>
    3438:	0005a812 	andeq	sl, r5, r2, lsl r8
    343c:	ae040c00 	cdpge	12, 0, cr0, cr4, cr0, {0}
    3440:	1b000005 	blne	345c <errno+0x3458>
    3444:	00000097 	muleq	r0, r7, r0
    3448:	000005c2 	andeq	r0, r0, r2, asr #11
    344c:	0000951c 	andeq	r9, r0, ip, lsl r5
    3450:	00971c00 	addseq	r1, r7, r0, lsl #24
    3454:	0f000000 	svceq	0x00000000
    3458:	00001843 	andeq	r1, r0, r3, asr #16
    345c:	8f142601 	svchi	0x00142601
    3460:	05000005 	streq	r0, [r0, #-5]
    3464:	04805003 	streq	r5, [r0], #3
    3468:	19ff0f00 	ldmibne	pc!, {r8, r9, sl, fp}^	; <UNPREDICTABLE>
    346c:	27010000 	strcs	r0, [r1, -r0]
    3470:	00040a16 	andeq	r0, r4, r6, lsl sl
    3474:	54030500 	strpl	r0, [r3], #-1280	; 0xfffffb00
    3478:	0f000480 	svceq	0x00000480
    347c:	000016bf 			; <UNDEFINED> instruction: 0x000016bf
    3480:	5f242801 	svcpl	0x00242801
    3484:	05000005 	streq	r0, [r0, #-5]
    3488:	04805803 	streq	r5, [r0], #2051	; 0x803
    348c:	183a0f00 	ldmdane	sl!, {r8, r9, sl, fp}
    3490:	30010000 	andcc	r0, r1, r0
    3494:	00060a17 	andeq	r0, r6, r7, lsl sl
    3498:	5c030500 	cfstr32pl	mvfx0, [r3], {-0}
    349c:	0c000480 	cfstrseq	mvf0, [r0], {128}	; 0x80
    34a0:	00055304 	andeq	r5, r5, r4, lsl #6
    34a4:	18350f00 	ldmdane	r5!, {r8, r9, sl, fp}
    34a8:	32010000 	andcc	r0, r1, #0
    34ac:	0006220d 	andeq	r2, r6, sp, lsl #4
    34b0:	60030500 	andvs	r0, r3, r0, lsl #10
    34b4:	0c000480 	cfstrseq	mvf0, [r0], {128}	; 0x80
    34b8:	00003104 	andeq	r3, r0, r4, lsl #2
    34bc:	17410f00 	strbne	r0, [r1, -r0, lsl #30]
    34c0:	34010000 	strcc	r0, [r1], #-0
    34c4:	0000310c 	andeq	r3, r0, ip, lsl #2
    34c8:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    34cc:	0f000480 	svceq	0x00000480
    34d0:	00001910 	andeq	r1, r0, r0, lsl r9
    34d4:	310c3601 	tstcc	ip, r1, lsl #12
    34d8:	05000000 	streq	r0, [r0, #-0]
    34dc:	02c00403 	sbceq	r0, r0, #50331648	; 0x3000000
    34e0:	17c91e00 	strbne	r1, [r9, r0, lsl #28]
    34e4:	06010000 	streq	r0, [r1], -r0
    34e8:	059c1501 	ldreq	r1, [ip, #1281]	; 0x501
    34ec:	03050000 	movweq	r0, #20480	; 0x5000
    34f0:	0002c008 	andeq	ip, r2, r8
    34f4:	0018731f 	andseq	r7, r8, pc, lsl r3
    34f8:	02150100 	andseq	r0, r5, #0, 2
    34fc:	013b9006 	teqeq	fp, r6
    3500:	00005800 	andeq	r5, r0, r0, lsl #16
    3504:	a69c0100 	ldrge	r0, [ip], r0, lsl #2
    3508:	20000006 	andcs	r0, r0, r6
    350c:	00001774 	andeq	r1, r0, r4, ror r7
    3510:	32021501 	andcc	r1, r2, #4194304	; 0x400000
    3514:	0000058f 	andeq	r0, r0, pc, lsl #11
    3518:	20749102 	rsbscs	r9, r4, r2, lsl #2
    351c:	00001abf 			; <UNDEFINED> instruction: 0x00001abf
    3520:	4d021501 	cfstr32mi	mvfx1, [r2, #-4]
    3524:	0000040a 	andeq	r0, r0, sl, lsl #8
    3528:	21709102 	cmncs	r0, r2, lsl #2
    352c:	01006e66 	tsteq	r0, r6, ror #28
    3530:	5f420216 	svcpl	0x00420216
    3534:	02000005 	andeq	r0, r0, #5
    3538:	22006c91 	andcs	r6, r0, #37120	; 0x9100
    353c:	00001706 	andeq	r1, r0, r6, lsl #14
    3540:	06020401 	streq	r0, [r2], -r1, lsl #8
    3544:	00000108 	andeq	r0, r0, r8, lsl #2
    3548:	00013aa8 	andeq	r3, r1, r8, lsr #21
    354c:	000000e8 	andeq	r0, r0, r8, ror #1
    3550:	07289c01 	streq	r9, [r8, -r1, lsl #24]!
    3554:	61210000 			; <UNDEFINED> instruction: 0x61210000
    3558:	04010070 	streq	r0, [r1], #-112	; 0xffffff90
    355c:	00721902 	rsbseq	r1, r2, r2, lsl #18
    3560:	91020000 	mrsls	r0, (UNDEF: 2)
    3564:	18931e64 	ldmne	r3, {r2, r5, r6, r9, sl, fp, ip}
    3568:	06010000 	streq	r0, [r1], -r0
    356c:	04871102 	streq	r1, [r7], #258	; 0x102
    3570:	91020000 	mrsls	r0, (UNDEF: 2)
    3574:	2a801e74 	bcs	fe00af4c <__bss_end__+0xfdec1f04>
    3578:	07010000 	streq	r0, [r1, -r0]
    357c:	00310902 	eorseq	r0, r1, r2, lsl #18
    3580:	91020000 	mrsls	r0, (UNDEF: 2)
    3584:	1ab62370 	bne	fed8c34c <__bss_end__+0xfec43304>
    3588:	07380000 	ldreq	r0, [r8, -r0]!
    358c:	03050000 	movweq	r0, #20480	; 0x5000
    3590:	00027990 	muleq	r2, r0, r9
    3594:	0018eb23 	andseq	lr, r8, r3, lsr #22
    3598:	00073800 	andeq	r3, r7, r0, lsl #16
    359c:	9c030500 	cfstr32ls	mvfx0, [r3], {-0}
    35a0:	24000279 	strcs	r0, [r0], #-633	; 0xfffffd87
    35a4:	00013af8 	strdeq	r3, [r1], -r8
    35a8:	00000038 	andeq	r0, r0, r8, lsr r0
    35ac:	00646625 	rsbeq	r6, r4, r5, lsr #12
    35b0:	0d020a01 	vstreq	s0, [r2, #-4]
    35b4:	00000031 	andeq	r0, r0, r1, lsr r0
    35b8:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    35bc:	00cd1000 	sbceq	r1, sp, r0
    35c0:	07380000 	ldreq	r0, [r8, -r0]!
    35c4:	44110000 	ldrmi	r0, [r1], #-0
    35c8:	0a000000 	beq	35d0 <errno+0x35cc>
    35cc:	07280a00 	streq	r0, [r8, -r0, lsl #20]!
    35d0:	f3220000 	vhadd.u32	d0, d2, d0
    35d4:	01000016 	tsteq	r0, r6, lsl r0
    35d8:	080601eb 	stmdaeq	r6, {r0, r1, r3, r5, r6, r7, r8}
    35dc:	bc000001 	stclt	0, cr0, [r0], {1}
    35e0:	ec000139 	stfs	f0, [r0], {57}	; 0x39
    35e4:	01000000 	mrseq	r0, (UNDEF: 0)
    35e8:	0007c79c 	muleq	r7, ip, r7
    35ec:	70612100 	rsbvc	r2, r1, r0, lsl #2
    35f0:	01eb0100 	mvneq	r0, r0, lsl #2
    35f4:	0000721a 	andeq	r7, r0, sl, lsl r2
    35f8:	5c910200 	lfmpl	f0, 4, [r1], {0}
    35fc:	00646625 	rsbeq	r6, r4, r5, lsr #12
    3600:	0901ed01 	stmdbeq	r1, {r0, r8, sl, fp, sp, lr, pc}
    3604:	00000031 	andeq	r0, r0, r1, lsr r0
    3608:	1e749102 	expnes	f1, f2
    360c:	00001a10 	andeq	r1, r0, r0, lsl sl
    3610:	0e01ee01 	cdpeq	14, 0, cr14, cr1, cr1, {0}
    3614:	0000047b 	andeq	r0, r0, fp, ror r4
    3618:	1e709102 	expnes	f1, f2
    361c:	000019e6 	andeq	r1, r0, r6, ror #19
    3620:	0e01ef01 	cdpeq	15, 0, cr14, cr1, cr1, {0}
    3624:	0000047b 	andeq	r0, r0, fp, ror r4
    3628:	1e6c9102 	lgnnee	f1, f2
    362c:	000017b3 			; <UNDEFINED> instruction: 0x000017b3
    3630:	0c01f001 	stceq	0, cr15, [r1], {1}
    3634:	000007c7 	andeq	r0, r0, r7, asr #15
    3638:	1e689102 	lgnnee	f1, f2
    363c:	00001711 	andeq	r1, r0, r1, lsl r7
    3640:	0901f101 	stmdbeq	r1, {r0, r8, ip, sp, lr, pc}
    3644:	00000031 	andeq	r0, r0, r1, lsr r0
    3648:	25649102 	strbcs	r9, [r4, #-258]!	; 0xfffffefe
    364c:	00746572 	rsbseq	r6, r4, r2, ror r5
    3650:	0a01f901 	beq	81a5c <morecore_area+0x38a5c>
    3654:	00000108 	andeq	r0, r0, r8, lsl #2
    3658:	00609102 	rsbeq	r9, r0, r2, lsl #2
    365c:	004b040c 	subeq	r0, fp, ip, lsl #8
    3660:	d1220000 			; <UNDEFINED> instruction: 0xd1220000
    3664:	0100001a 	tsteq	r0, sl, lsl r0
    3668:	080601af 	stmdaeq	r6, {r0, r1, r2, r3, r5, r7, r8}
    366c:	d8000001 	stmdale	r0, {r0}
    3670:	e4000137 	str	r0, [r0], #-311	; 0xfffffec9
    3674:	01000001 	tsteq	r0, r1
    3678:	0008669c 	muleq	r8, ip, r6
    367c:	70612100 	rsbvc	r2, r1, r0, lsl #2
    3680:	01af0100 			; <UNDEFINED> instruction: 0x01af0100
    3684:	00007218 	andeq	r7, r0, r8, lsl r2
    3688:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    368c:	00646625 	rsbeq	r6, r4, r5, lsr #12
    3690:	0901b101 	stmdbeq	r1, {r0, r8, ip, sp, pc}
    3694:	00000031 	andeq	r0, r0, r1, lsr r0
    3698:	1e709102 	expnes	f1, f2
    369c:	0000487e 	andeq	r4, r0, lr, ror r8
    36a0:	0b01b201 	bleq	6feac <morecore_area+0x26eac>
    36a4:	0000004b 	andeq	r0, r0, fp, asr #32
    36a8:	1e689102 	lgnnee	f1, f2
    36ac:	00001711 	andeq	r1, r0, r1, lsl r7
    36b0:	0901b301 	stmdbeq	r1, {r0, r8, r9, ip, sp, pc}
    36b4:	00000031 	andeq	r0, r0, r1, lsr r0
    36b8:	1e649102 	lgnnes	f1, f2
    36bc:	00001a34 	andeq	r1, r0, r4, lsr sl
    36c0:	1401b901 	strne	fp, [r1], #-2305	; 0xfffff6ff
    36c4:	0000060a 	andeq	r0, r0, sl, lsl #12
    36c8:	23609102 	cmncs	r0, #-2147483648	; 0x80000000
    36cc:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    36d0:	00000876 	andeq	r0, r0, r6, ror r8
    36d4:	79840305 	stmibvc	r4, {r0, r2, r8, r9}
    36d8:	af1e0002 	svcge	0x001e0002
    36dc:	01000018 	tsteq	r0, r8, lsl r0
    36e0:	7b1701c5 	blvc	5c3dfc <__bss_end__+0x47adb4>
    36e4:	02000008 	andeq	r0, r0, #8
    36e8:	f51e5c91 			; <UNDEFINED> instruction: 0xf51e5c91
    36ec:	01000017 	tsteq	r0, r7, lsl r0
    36f0:	310901c7 	smlabtcc	r9, r7, r1, r0
    36f4:	02000000 	andeq	r0, r0, #0
    36f8:	10007491 	mulne	r0, r1, r4
    36fc:	000000cd 	andeq	r0, r0, sp, asr #1
    3700:	00000876 	andeq	r0, r0, r6, ror r8
    3704:	00004411 	andeq	r4, r0, r1, lsl r4
    3708:	0a000900 	beq	5b10 <errno+0x5b0c>
    370c:	00000866 	andeq	r0, r0, r6, ror #16
    3710:	051f040c 	ldreq	r0, [pc, #-1036]	; 330c <errno+0x3308>
    3714:	80260000 	eorhi	r0, r6, r0
    3718:	01000017 	tsteq	r0, r7, lsl r0
    371c:	310c01a9 	smlatbcc	ip, r9, r1, r0
    3720:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    3724:	80000137 	andhi	r0, r0, r7, lsr r1
    3728:	01000000 	mrseq	r0, (UNDEF: 0)
    372c:	0008b99c 	muleq	r8, ip, r9
    3730:	00612100 	rsbeq	r2, r1, r0, lsl #2
    3734:	1e01a901 	vmlane.f16	s20, s2, s2	; <UNPREDICTABLE>
    3738:	00000031 	andeq	r0, r0, r1, lsr r0
    373c:	21749102 	cmncs	r4, r2, lsl #2
    3740:	a9010062 	stmdbge	r1, {r1, r5, r6}
    3744:	00312501 	eorseq	r2, r1, r1, lsl #10
    3748:	91020000 	mrsls	r0, (UNDEF: 2)
    374c:	f1220070 			; <UNDEFINED> instruction: 0xf1220070
    3750:	01000019 	tsteq	r0, r9, lsl r0
    3754:	08060188 	stmdaeq	r6, {r3, r7, r8}
    3758:	10000001 	andne	r0, r0, r1
    375c:	48000136 	stmdami	r0, {r1, r2, r4, r5, r8}
    3760:	01000001 	tsteq	r0, r1
    3764:	0009439c 	muleq	r9, ip, r3
    3768:	70612100 	rsbvc	r2, r1, r0, lsl #2
    376c:	01880100 	orreq	r0, r8, r0, lsl #2
    3770:	0000721c 	andeq	r7, r0, ip, lsl r2
    3774:	5c910200 	lfmpl	f0, 4, [r1], {0}
    3778:	64697025 	strbtvs	r7, [r9], #-37	; 0xffffffdb
    377c:	018a0100 	orreq	r0, sl, r0, lsl #2
    3780:	00005e0b 	andeq	r5, r0, fp, lsl #28
    3784:	70910200 	addsvc	r0, r1, r0, lsl #4
    3788:	0018001e 	andseq	r0, r8, lr, lsl r0
    378c:	018b0100 	orreq	r0, fp, r0, lsl #2
    3790:	00003109 	andeq	r3, r0, r9, lsl #2
    3794:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3798:	0017de1e 	andseq	sp, r7, lr, lsl lr
    379c:	018c0100 	orreq	r0, ip, r0, lsl #2
    37a0:	0009431a 	andeq	r4, r9, sl, lsl r3
    37a4:	68910200 	ldmvs	r1, {r9}
    37a8:	0019181e 	andseq	r1, r9, lr, lsl r8
    37ac:	018d0100 	orreq	r0, sp, r0, lsl #2
    37b0:	00094914 	andeq	r4, r9, r4, lsl r9
    37b4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    37b8:	0017b31e 	andseq	fp, r7, lr, lsl r3
    37bc:	018e0100 	orreq	r0, lr, r0, lsl #2
    37c0:	00003109 	andeq	r3, r0, r9, lsl #2
    37c4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    37c8:	001ab623 	andseq	fp, sl, r3, lsr #12
    37cc:	00095f00 	andeq	r5, r9, r0, lsl #30
    37d0:	74030500 	strvc	r0, [r3], #-1280	; 0xfffffb00
    37d4:	00000279 	andeq	r0, r0, r9, ror r2
    37d8:	0445040c 	strbeq	r0, [r5], #-1036	; 0xfffffbf4
    37dc:	040c0000 	streq	r0, [ip], #-0
    37e0:	0000041d 	andeq	r0, r0, sp, lsl r4
    37e4:	0000cd10 	andeq	ip, r0, r0, lsl sp
    37e8:	00095f00 	andeq	r5, r9, r0, lsl #30
    37ec:	00441100 	subeq	r1, r4, r0, lsl #2
    37f0:	000d0000 	andeq	r0, sp, r0
    37f4:	00094f0a 	andeq	r4, r9, sl, lsl #30
    37f8:	16da2200 	ldrbne	r2, [sl], r0, lsl #4
    37fc:	7a010000 	bvc	43804 <__stack_base+0x3804>
    3800:	01080601 	tsteq	r8, r1, lsl #12
    3804:	35980000 	ldrcc	r0, [r8]
    3808:	00780001 	rsbseq	r0, r8, r1
    380c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3810:	000009bd 			; <UNDEFINED> instruction: 0x000009bd
    3814:	00706121 	rsbseq	r6, r0, r1, lsr #2
    3818:	18017a01 	stmdane	r1, {r0, r9, fp, ip, sp, lr}
    381c:	00000072 	andeq	r0, r0, r2, ror r0
    3820:	256c9102 	strbcs	r9, [ip, #-258]!	; 0xfffffefe
    3824:	01006466 	tsteq	r0, r6, ror #8
    3828:	3109017c 	tstcc	r9, ip, ror r1
    382c:	02000000 	andeq	r0, r0, #0
    3830:	d21e7491 	andsle	r7, lr, #-1862270976	; 0x91000000
    3834:	01000016 	tsteq	r0, r6, lsl r0
    3838:	3109017d 	tstcc	r9, sp, ror r1
    383c:	02000000 	andeq	r0, r0, #0
    3840:	b6237091 			; <UNDEFINED> instruction: 0xb6237091
    3844:	7600001a 			; <UNDEFINED> instruction: 0x7600001a
    3848:	05000008 	streq	r0, [r0, #-8]
    384c:	02796803 	rsbseq	r6, r9, #196608	; 0x30000
    3850:	c8220000 	stmdagt	r2!, {}	; <UNPREDICTABLE>
    3854:	01000018 	tsteq	r0, r8, lsl r0
    3858:	08060170 	stmdaeq	r6, {r4, r5, r6, r8}
    385c:	18000001 	stmdane	r0, {r0}
    3860:	80000135 	andhi	r0, r0, r5, lsr r1
    3864:	01000000 	mrseq	r0, (UNDEF: 0)
    3868:	000a279c 	muleq	sl, ip, r7
    386c:	70612100 	rsbvc	r2, r1, r0, lsl #2
    3870:	01700100 	cmneq	r0, r0, lsl #2
    3874:	00007217 	andeq	r7, r0, r7, lsl r2
    3878:	5c910200 	lfmpl	f0, 4, [r1], {0}
    387c:	00646625 	rsbeq	r6, r4, r5, lsr #12
    3880:	09017201 	stmdbeq	r1, {r0, r9, ip, sp, lr}
    3884:	00000031 	andeq	r0, r0, r1, lsr r0
    3888:	25749102 	ldrbcs	r9, [r4, #-258]!	; 0xfffffefe
    388c:	00667562 	rsbeq	r7, r6, r2, ror #10
    3890:	0b017301 	bleq	6049c <morecore_area+0x1749c>
    3894:	00000095 	muleq	r0, r5, r0
    3898:	1e709102 	expnes	f1, f2
    389c:	00002782 	andeq	r2, r0, r2, lsl #15
    38a0:	0c017401 	cfstrseq	mvf7, [r1], {1}
    38a4:	00000097 	muleq	r0, r7, r0
    38a8:	256c9102 	strbcs	r9, [ip, #-258]!	; 0xfffffefe
    38ac:	00766f69 	rsbseq	r6, r6, r9, ror #30
    38b0:	12017601 	andne	r7, r1, #1048576	; 0x100000
    38b4:	0000044a 	andeq	r0, r0, sl, asr #8
    38b8:	00649102 	rsbeq	r9, r4, r2, lsl #2
    38bc:	0017bf22 	andseq	fp, r7, r2, lsr #30
    38c0:	014c0100 	mrseq	r0, (UNDEF: 92)
    38c4:	00010806 	andeq	r0, r1, r6, lsl #16
    38c8:	01332800 	teqeq	r3, r0, lsl #16
    38cc:	0001f000 	andeq	pc, r1, r0
    38d0:	f89c0100 			; <UNDEFINED> instruction: 0xf89c0100
    38d4:	2100000a 	tstcs	r0, sl
    38d8:	01007061 	tsteq	r0, r1, rrx
    38dc:	7218014c 	andsvc	r0, r8, #76, 2
    38e0:	02000000 	andeq	r0, r0, #0
    38e4:	66254491 			; <UNDEFINED> instruction: 0x66254491
    38e8:	4e010064 	cdpmi	0, 0, cr0, cr1, cr4, {3}
    38ec:	00310901 	eorseq	r0, r1, r1, lsl #18
    38f0:	91020000 	mrsls	r0, (UNDEF: 2)
    38f4:	6f692564 	svcvs	0x00692564
    38f8:	4f010076 	svcmi	0x00010076
    38fc:	04751301 	ldrbteq	r1, [r5], #-769	; 0xfffffcff
    3900:	91020000 	mrsls	r0, (UNDEF: 2)
    3904:	16ff1e60 	ldrbtne	r1, [pc], r0, ror #28
    3908:	50010000 	andpl	r0, r1, r0
    390c:	00310901 	eorseq	r0, r1, r1, lsl #18
    3910:	91020000 	mrsls	r0, (UNDEF: 2)
    3914:	0069255c 	rsbeq	r2, r9, ip, asr r5
    3918:	09015101 	stmdbeq	r1, {r0, r8, ip, lr}
    391c:	00000031 	andeq	r0, r0, r1, lsr r0
    3920:	1e6c9102 	lgnnee	f1, f2
    3924:	000018cc 	andeq	r1, r0, ip, asr #17
    3928:	0a015201 	beq	58134 <morecore_area+0xf134>
    392c:	00000108 	andeq	r0, r0, r8, lsl #2
    3930:	23689102 	cmncs	r8, #-2147483648	; 0x80000000
    3934:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    3938:	00000876 	andeq	r0, r0, r6, ror r8
    393c:	795c0305 	ldmdbvc	ip, {r0, r2, r8, r9}^
    3940:	341e0002 	ldrcc	r0, [lr], #-2
    3944:	0100001a 	tsteq	r0, sl, lsl r0
    3948:	0a14015f 	beq	503ecc <__bss_end__+0x3bae84>
    394c:	02000006 	andeq	r0, r0, #6
    3950:	af1e5891 	svcge	0x001e5891
    3954:	01000018 	tsteq	r0, r8, lsl r0
    3958:	7b170164 	blvc	5c3ef0 <__bss_end__+0x47aea8>
    395c:	02000008 	andeq	r0, r0, #8
    3960:	18245491 	stmdane	r4!, {r0, r4, r7, sl, ip, lr}
    3964:	b0000134 	andlt	r0, r0, r4, lsr r1
    3968:	25000000 	strcs	r0, [r0, #-0]
    396c:	0078616d 	rsbseq	r6, r8, sp, ror #2
    3970:	0e016701 	cdpeq	7, 0, cr6, cr1, cr1, {0}
    3974:	00000108 	andeq	r0, r0, r8, lsl #2
    3978:	25509102 	ldrbcs	r9, [r0, #-258]	; 0xfffffefe
    397c:	006e656c 	rsbeq	r6, lr, ip, ror #10
    3980:	0e016801 	cdpeq	8, 0, cr6, cr1, cr1, {0}
    3984:	00000108 	andeq	r0, r0, r8, lsl #2
    3988:	004c9102 	subeq	r9, ip, r2, lsl #2
    398c:	17a92200 	strne	r2, [r9, r0, lsl #4]!
    3990:	41010000 	mrsmi	r0, (UNDEF: 1)
    3994:	01080601 	tsteq	r8, r1, lsl #12
    3998:	32a80000 	adccc	r0, r8, #0
    399c:	00800001 	addeq	r0, r0, r1
    39a0:	9c010000 	stcls	0, cr0, [r1], {-0}
    39a4:	00000b62 	andeq	r0, r0, r2, ror #22
    39a8:	00706121 	rsbseq	r6, r0, r1, lsr #2
    39ac:	18014101 	stmdane	r1, {r0, r8, lr}
    39b0:	00000072 	andeq	r0, r0, r2, ror r0
    39b4:	255c9102 	ldrbcs	r9, [ip, #-258]	; 0xfffffefe
    39b8:	01006466 	tsteq	r0, r6, ror #8
    39bc:	31090144 	tstcc	r9, r4, asr #2
    39c0:	02000000 	andeq	r0, r0, #0
    39c4:	62257491 	eorvs	r7, r5, #-1862270976	; 0x91000000
    39c8:	01006675 	tsteq	r0, r5, ror r6
    39cc:	950b0145 	strls	r0, [fp, #-325]	; 0xfffffebb
    39d0:	02000000 	andeq	r0, r0, #0
    39d4:	821e7091 	andshi	r7, lr, #145	; 0x91
    39d8:	01000027 	tsteq	r0, r7, lsr #32
    39dc:	970c0146 	strls	r0, [ip, -r6, asr #2]
    39e0:	02000000 	andeq	r0, r0, #0
    39e4:	69256c91 	stmdbvs	r5!, {r0, r4, r7, sl, fp, sp, lr}
    39e8:	0100766f 	tsteq	r0, pc, ror #12
    39ec:	4a120148 	bmi	483f14 <__bss_end__+0x33aecc>
    39f0:	02000004 	andeq	r0, r0, #4
    39f4:	22006491 	andcs	r6, r0, #-1862270976	; 0x91000000
    39f8:	00001d36 	andeq	r1, r0, r6, lsr sp
    39fc:	06011101 	streq	r1, [r1], -r1, lsl #2
    3a00:	00000108 	andeq	r0, r0, r8, lsl #2
    3a04:	000130a8 	andeq	r3, r1, r8, lsr #1
    3a08:	00000200 	andeq	r0, r0, r0, lsl #4
    3a0c:	0c209c01 	stceq	12, cr9, [r0], #-4
    3a10:	61210000 			; <UNDEFINED> instruction: 0x61210000
    3a14:	11010070 	tstne	r1, r0, ror r0
    3a18:	00721901 	rsbseq	r1, r2, r1, lsl #18
    3a1c:	91020000 	mrsls	r0, (UNDEF: 2)
    3a20:	18151e4c 	ldmdane	r5, {r2, r3, r6, r9, sl, fp, ip}
    3a24:	13010000 	movwne	r0, #4096	; 0x1000
    3a28:	00310901 	eorseq	r0, r1, r1, lsl #18
    3a2c:	91020000 	mrsls	r0, (UNDEF: 2)
    3a30:	6f692558 	svcvs	0x00692558
    3a34:	14010076 	strne	r0, [r1], #-118	; 0xffffff8a
    3a38:	04751301 	ldrbteq	r1, [r5], #-769	; 0xfffffcff
    3a3c:	91020000 	mrsls	r0, (UNDEF: 2)
    3a40:	16ff1e54 	usatne	r1, #31, r4, asr #28
    3a44:	15010000 	strne	r0, [r1, #-0]
    3a48:	00310901 	eorseq	r0, r1, r1, lsl #18
    3a4c:	91020000 	mrsls	r0, (UNDEF: 2)
    3a50:	75732550 	ldrbvc	r2, [r3, #-1360]!	; 0xfffffab0
    3a54:	1701006d 	strne	r0, [r1, -sp, rrx]
    3a58:	00570f01 	subseq	r0, r7, r1, lsl #30
    3a5c:	91020000 	mrsls	r0, (UNDEF: 2)
    3a60:	65722568 	ldrbvs	r2, [r2, #-1384]!	; 0xfffffa98
    3a64:	18010074 	stmdane	r1, {r2, r4, r5, r6}
    3a68:	00a80d01 	adceq	r0, r8, r1, lsl #26
    3a6c:	91020000 	mrsls	r0, (UNDEF: 2)
    3a70:	1ab62364 	bne	fed8c808 <__bss_end__+0xfec437c0>
    3a74:	07380000 	ldreq	r0, [r8, -r0]!
    3a78:	03050000 	movweq	r0, #20480	; 0x5000
    3a7c:	00027950 	andeq	r7, r2, r0, asr r9
    3a80:	01312827 	teqeq	r1, r7, lsr #16
    3a84:	00007400 	andeq	r7, r0, r0, lsl #8
    3a88:	000c0700 	andeq	r0, ip, r0, lsl #14
    3a8c:	00692500 	rsbeq	r2, r9, r0, lsl #10
    3a90:	0e012101 	adfeqs	f2, f1, f1
    3a94:	00000031 	andeq	r0, r0, r1, lsr r0
    3a98:	00609102 	rsbeq	r9, r0, r2, lsl #2
    3a9c:	0131c824 	teqeq	r1, r4, lsr #16
    3aa0:	0000ac00 	andeq	sl, r0, r0, lsl #24
    3aa4:	00692500 	rsbeq	r2, r9, r0, lsl #10
    3aa8:	12013201 	andne	r3, r1, #268435456	; 0x10000000
    3aac:	00000031 	andeq	r0, r0, r1, lsr r0
    3ab0:	005c9102 	subseq	r9, ip, r2, lsl #2
    3ab4:	1a3d2800 	bne	f4dabc <__bss_end__+0xe04a74>
    3ab8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    3abc:	059c0e01 	ldreq	r0, [ip, #3585]	; 0xe01
    3ac0:	30640000 	rsbcc	r0, r4, r0
    3ac4:	00440001 	subeq	r0, r4, r1
    3ac8:	9c010000 	stcls	0, cr0, [r1], {-0}
    3acc:	00000c5c 	andeq	r0, r0, ip, asr ip
    3ad0:	001a5920 	andseq	r5, sl, r0, lsr #18
    3ad4:	01080100 	mrseq	r0, (UNDEF: 24)
    3ad8:	00059c40 	andeq	r9, r5, r0, asr #24
    3adc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3ae0:	646c6f25 	strbtvs	r6, [ip], #-3877	; 0xfffff0db
    3ae4:	010a0100 	mrseq	r0, (UNDEF: 26)
    3ae8:	00059c12 	andeq	r9, r5, r2, lsl ip
    3aec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3af0:	17282900 	strne	r2, [r8, -r0, lsl #18]!
    3af4:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    3af8:	00010806 	andeq	r0, r1, r6, lsl #16
    3afc:	012fb400 			; <UNDEFINED> instruction: 0x012fb400
    3b00:	0000b000 	andeq	fp, r0, r0
    3b04:	b19c0100 	orrslt	r0, ip, r0, lsl #2
    3b08:	2a00000c 	bcs	3b40 <errno+0x3b3c>
    3b0c:	01007061 	tsteq	r0, r1, rrx
    3b10:	007218f0 	ldrshteq	r1, [r2], #-128	; 0xffffff80
    3b14:	91020000 	mrsls	r0, (UNDEF: 2)
    3b18:	64662b6c 	strbtvs	r2, [r6], #-2924	; 0xfffff494
    3b1c:	09f20100 	ldmibeq	r2!, {r8}^
    3b20:	00000031 	andeq	r0, r0, r1, lsr r0
    3b24:	23749102 	cmncs	r4, #-2147483648	; 0x80000000
    3b28:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    3b2c:	00000876 	andeq	r0, r0, r6, ror r8
    3b30:	79440305 	stmdbvc	r4, {r0, r2, r8, r9}^
    3b34:	662b0002 	strtvs	r0, [fp], -r2
    3b38:	01007364 	tsteq	r0, r4, ror #6
    3b3c:	060a14fc 			; <UNDEFINED> instruction: 0x060a14fc
    3b40:	91020000 	mrsls	r0, (UNDEF: 2)
    3b44:	d1290070 			; <UNDEFINED> instruction: 0xd1290070
    3b48:	01000018 	tsteq	r0, r8, lsl r0
    3b4c:	010806e1 	smlatteq	r8, r1, r6, r0
    3b50:	2edc0000 	cdpcs	0, 13, cr0, cr12, cr0, {0}
    3b54:	00d80001 	sbcseq	r0, r8, r1
    3b58:	9c010000 	stcls	0, cr0, [r1], {-0}
    3b5c:	00000d25 	andeq	r0, r0, r5, lsr #26
    3b60:	0070612a 	rsbseq	r6, r0, sl, lsr #2
    3b64:	7219e101 	andsvc	lr, r9, #1073741824	; 0x40000000
    3b68:	02000000 	andeq	r0, r0, #0
    3b6c:	d40f6491 	strle	r6, [pc], #-1169	; 3b74 <errno+0x3b70>
    3b70:	01000019 	tsteq	r0, r9, lsl r0
    3b74:	003109e3 	eorseq	r0, r1, r3, ror #19
    3b78:	91020000 	mrsls	r0, (UNDEF: 2)
    3b7c:	18930f74 	ldmne	r3, {r2, r4, r5, r6, r8, r9, sl, fp}
    3b80:	e4010000 	str	r0, [r1], #-0
    3b84:	00048711 	andeq	r8, r4, r1, lsl r7
    3b88:	70910200 	addsvc	r0, r1, r0, lsl #4
    3b8c:	0031d70f 	eorseq	sp, r1, pc, lsl #14
    3b90:	09e50100 	stmibeq	r5!, {r8}^
    3b94:	00000031 	andeq	r0, r0, r1, lsr r0
    3b98:	0f6c9102 	svceq	0x006c9102
    3b9c:	00002a80 	andeq	r2, r0, r0, lsl #21
    3ba0:	380ce601 	stmdacc	ip, {r0, r9, sl, sp, lr, pc}
    3ba4:	02000000 	andeq	r0, r0, #0
    3ba8:	b6236891 			; <UNDEFINED> instruction: 0xb6236891
    3bac:	3800001a 	stmdacc	r0, {r1, r3, r4}
    3bb0:	05000007 	streq	r0, [r0, #-7]
    3bb4:	02793803 	rsbseq	r3, r9, #196608	; 0x30000
    3bb8:	1c290000 	stcne	0, cr0, [r9], #-0
    3bbc:	01000018 	tsteq	r0, r8, lsl r0
    3bc0:	010806d8 	ldrdeq	r0, [r8, -r8]
    3bc4:	2e700000 	cdpcs	0, 7, cr0, cr0, cr0, {0}
    3bc8:	006c0001 	rsbeq	r0, ip, r1
    3bcc:	9c010000 	stcls	0, cr0, [r1], {-0}
    3bd0:	00000d7b 	andeq	r0, r0, fp, ror sp
    3bd4:	0070612a 	rsbseq	r6, r0, sl, lsr #2
    3bd8:	7217d801 	andsvc	sp, r7, #65536	; 0x10000
    3bdc:	02000000 	andeq	r0, r0, #0
    3be0:	930f6491 	movwls	r6, #62609	; 0xf491
    3be4:	01000018 	tsteq	r0, r8, lsl r0
    3be8:	048711da 	streq	r1, [r7], #474	; 0x1da
    3bec:	91020000 	mrsls	r0, (UNDEF: 2)
    3bf0:	31d70f74 	bicscc	r0, r7, r4, ror pc
    3bf4:	db010000 	blle	43bfc <__stack_base+0x3bfc>
    3bf8:	00003109 	andeq	r3, r0, r9, lsl #2
    3bfc:	70910200 	addsvc	r0, r1, r0, lsl #4
    3c00:	002a800f 	eoreq	r8, sl, pc
    3c04:	0cdc0100 	ldfeqe	f0, [ip], {0}
    3c08:	00000038 	andeq	r0, r0, r8, lsr r0
    3c0c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    3c10:	001a262c 	andseq	r2, sl, ip, lsr #12
    3c14:	0dac0100 	stfeqs	f0, [ip]
    3c18:	00000108 	andeq	r0, r0, r8, lsl #2
    3c1c:	00012b58 	andeq	r2, r1, r8, asr fp
    3c20:	00000318 	andeq	r0, r0, r8, lsl r3
    3c24:	0e1c9c01 	cdpeq	12, 1, cr9, cr12, cr1, {0}
    3c28:	932d0000 			; <UNDEFINED> instruction: 0x932d0000
    3c2c:	01000018 	tsteq	r0, r8, lsl r0
    3c30:	048727ac 	streq	r2, [r7], #1964	; 0x7ac
    3c34:	91020000 	mrsls	r0, (UNDEF: 2)
    3c38:	31d72d54 	bicscc	r2, r7, r4, asr sp
    3c3c:	ac010000 	stcge	0, cr0, [r1], {-0}
    3c40:	00003135 	andeq	r3, r0, r5, lsr r1
    3c44:	50910200 	addspl	r0, r1, r0, lsl #4
    3c48:	002a802d 	eoreq	r8, sl, sp, lsr #32
    3c4c:	43ac0100 			; <UNDEFINED> instruction: 0x43ac0100
    3c50:	00000038 	andeq	r0, r0, r8, lsr r0
    3c54:	234c9102 	movtcs	r9, #49410	; 0xc102
    3c58:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    3c5c:	0000095f 	andeq	r0, r0, pc, asr r9
    3c60:	79280305 	stmdbvc	r8!, {r0, r2, r8, r9}
    3c64:	1f0f0002 	svcne	0x000f0002
    3c68:	01000038 	tsteq	r0, r8, lsr r0
    3c6c:	040a17b7 	streq	r1, [sl], #-1975	; 0xfffff849
    3c70:	91020000 	mrsls	r0, (UNDEF: 2)
    3c74:	17ba0f5c 	sbfxne	r0, ip, #30, #27
    3c78:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    3c7c:	00048711 	andeq	r8, r4, r1, lsl r7
    3c80:	6c910200 	lfmvs	f0, 4, [r1], {0}
    3c84:	0064662b 	rsbeq	r6, r4, fp, lsr #12
    3c88:	3109c301 	tstcc	r9, r1, lsl #6
    3c8c:	02000000 	andeq	r0, r0, #0
    3c90:	662b6891 			; <UNDEFINED> instruction: 0x662b6891
    3c94:	01007364 	tsteq	r0, r4, ror #6
    3c98:	060a14c9 	streq	r1, [sl], -r9, asr #9
    3c9c:	91020000 	mrsls	r0, (UNDEF: 2)
    3ca0:	199e0f64 	ldmibne	lr, {r2, r5, r6, r8, r9, sl, fp}
    3ca4:	d1010000 	mrsle	r0, (UNDEF: 1)
    3ca8:	00087b17 	andeq	r7, r8, r7, lsl fp
    3cac:	60910200 	addsvs	r0, r1, r0, lsl #4
    3cb0:	17552c00 	ldrbne	r2, [r5, -r0, lsl #24]
    3cb4:	a6010000 	strge	r0, [r1], -r0
    3cb8:	0000970f 	andeq	r9, r0, pc, lsl #14
    3cbc:	012b2000 			; <UNDEFINED> instruction: 0x012b2000
    3cc0:	00003800 	andeq	r3, r0, r0, lsl #16
    3cc4:	649c0100 	ldrvs	r0, [ip], #256	; 0x100
    3cc8:	2d00000e 	stccs	0, cr0, [r0, #-56]	; 0xffffffc8
    3ccc:	000019a1 	andeq	r1, r0, r1, lsr #19
    3cd0:	9528a601 	strls	sl, [r8, #-1537]!	; 0xfffff9ff
    3cd4:	02000000 	andeq	r0, r0, #0
    3cd8:	822d6c91 	eorhi	r6, sp, #37120	; 0x9100
    3cdc:	01000027 	tsteq	r0, r7, lsr #32
    3ce0:	009735a6 	addseq	r3, r7, r6, lsr #11
    3ce4:	91020000 	mrsls	r0, (UNDEF: 2)
    3ce8:	17380f68 	ldrne	r0, [r8, -r8, ror #30]!
    3cec:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    3cf0:	00011b0b 	andeq	r1, r1, fp, lsl #22
    3cf4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    3cf8:	1a722900 	bne	1c8e100 <__bss_end__+0x1b450b8>
    3cfc:	a0010000 	andge	r0, r1, r0
    3d00:	00060a10 	andeq	r0, r6, r0, lsl sl
    3d04:	012aa400 			; <UNDEFINED> instruction: 0x012aa400
    3d08:	00007c00 	andeq	r7, r0, r0, lsl #24
    3d0c:	9c9c0100 	ldflss	f0, [ip], {0}
    3d10:	2a00000e 	bcs	3d50 <errno+0x3d4c>
    3d14:	01006466 	tsteq	r0, r6, ror #8
    3d18:	003122a0 	eorseq	r2, r1, r0, lsr #5
    3d1c:	91020000 	mrsls	r0, (UNDEF: 2)
    3d20:	1ab62374 	bne	fed8caf8 <__bss_end__+0xfec43ab0>
    3d24:	095f0000 	ldmdbeq	pc, {}^	; <UNPREDICTABLE>
    3d28:	03050000 	movweq	r0, #20480	; 0x5000
    3d2c:	00027918 	andeq	r7, r2, r8, lsl r9
    3d30:	19da2e00 	ldmibne	sl, {r9, sl, fp, sp}^
    3d34:	95010000 	strls	r0, [r1, #-0]
    3d38:	00003105 	andeq	r3, r0, r5, lsl #2
    3d3c:	012a6000 			; <UNDEFINED> instruction: 0x012a6000
    3d40:	00004400 	andeq	r4, r0, r0, lsl #8
    3d44:	299c0100 	ldmibcs	ip, {r8}
    3d48:	0000171f 	andeq	r1, r0, pc, lsl r7
    3d4c:	31056601 	tstcc	r5, r1, lsl #12
    3d50:	2c000000 	stccs	0, cr0, [r0], {-0}
    3d54:	34000128 	strcc	r0, [r0], #-296	; 0xfffffed8
    3d58:	01000002 	tsteq	r0, r2
    3d5c:	000f2f9c 	muleq	pc, ip, pc	; <UNPREDICTABLE>
    3d60:	1ac82d00 	bne	ff20f168 <__bss_end__+0xff0c6120>
    3d64:	66010000 	strvs	r0, [r1], -r0
    3d68:	00003112 	andeq	r3, r0, r2, lsl r1
    3d6c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    3d70:	00190c0f 	andseq	r0, r9, pc, lsl #24
    3d74:	09680100 	stmdbeq	r8!, {r8}^
    3d78:	00000031 	andeq	r0, r0, r1, lsr r0
    3d7c:	0f709102 	svceq	0x00709102
    3d80:	000019c0 	andeq	r1, r0, r0, asr #19
    3d84:	0a147201 	beq	520590 <__bss_end__+0x3d7548>
    3d88:	02000006 	andeq	r0, r0, #6
    3d8c:	b6236c91 			; <UNDEFINED> instruction: 0xb6236c91
    3d90:	3f00001a 	svccc	0x0000001a
    3d94:	0500000f 	streq	r0, [r0, #-15]
    3d98:	02790c03 	rsbseq	r0, r9, #768	; 0x300
    3d9c:	18310f00 	ldmdane	r1!, {r8, r9, sl, fp}
    3da0:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    3da4:	0006220a 	andeq	r2, r6, sl, lsl #4
    3da8:	68910200 	ldmvs	r1, {r9}
    3dac:	012a1824 			; <UNDEFINED> instruction: 0x012a1824
    3db0:	00003800 	andeq	r3, r0, r0, lsl #16
    3db4:	00692b00 	rsbeq	r2, r9, r0, lsl #22
    3db8:	310e8f01 	tstcc	lr, r1, lsl #30
    3dbc:	02000000 	andeq	r0, r0, #0
    3dc0:	00007491 	muleq	r0, r1, r4
    3dc4:	0000cd10 	andeq	ip, r0, r0, lsl sp
    3dc8:	000f3f00 	andeq	r3, pc, r0, lsl #30
    3dcc:	00441100 	subeq	r1, r4, r0, lsl #2
    3dd0:	00080000 	andeq	r0, r8, r0
    3dd4:	000f2f0a 	andeq	r2, pc, sl, lsl #30
    3dd8:	17952c00 	ldrne	r2, [r5, r0, lsl #24]
    3ddc:	4f010000 	svcmi	0x00010000
    3de0:	0000310c 	andeq	r3, r0, ip, lsl #2
    3de4:	01272000 			; <UNDEFINED> instruction: 0x01272000
    3de8:	00010c00 	andeq	r0, r1, r0, lsl #24
    3dec:	769c0100 	ldrvc	r0, [ip], r0, lsl #2
    3df0:	2400000f 	strcs	r0, [r0], #-15
    3df4:	000127e4 	andeq	r2, r1, r4, ror #15
    3df8:	00000038 	andeq	r0, r0, r8, lsr r0
    3dfc:	0100692b 	tsteq	r0, fp, lsr #18
    3e00:	00310e5f 	eorseq	r0, r1, pc, asr lr
    3e04:	91020000 	mrsls	r0, (UNDEF: 2)
    3e08:	2f000074 	svccs	0x00000074
    3e0c:	000017d5 	ldrdeq	r1, [r0], -r5
    3e10:	31054a01 	tstcc	r5, r1, lsl #20
    3e14:	d0000000 	andle	r0, r0, r0
    3e18:	50000126 	andpl	r0, r0, r6, lsr #2
    3e1c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e20:	000f9f9c 	muleq	pc, ip, pc	; <UNPREDICTABLE>
    3e24:	64662a00 	strbtvs	r2, [r6], #-2560	; 0xfffff600
    3e28:	124a0100 	subne	r0, sl, #0, 2
    3e2c:	00000031 	andeq	r0, r0, r1, lsr r0
    3e30:	00749102 	rsbseq	r9, r4, r2, lsl #2
    3e34:	00176830 	andseq	r6, r7, r0, lsr r8
    3e38:	05400100 	strbeq	r0, [r0, #-256]	; 0xffffff00
    3e3c:	00000031 	andeq	r0, r0, r1, lsr r0
    3e40:	00012658 	andeq	r2, r1, r8, asr r6
    3e44:	00000078 	andeq	r0, r0, r8, ror r0
    3e48:	25319c01 	ldrcs	r9, [r1, #-3073]!	; 0xfffff3ff
    3e4c:	01000018 	tsteq	r0, r8, lsl r0
    3e50:	25a40638 	strcs	r0, [r4, #1592]!	; 0x638
    3e54:	00b40001 	adcseq	r0, r4, r1
    3e58:	9c010000 	stcls	0, cr0, [r1], {-0}
    3e5c:	00000fe9 	andeq	r0, r0, r9, ror #31
    3e60:	0064662a 	rsbeq	r6, r4, sl, lsr #12
    3e64:	31163801 	tstcc	r6, r1, lsl #16
    3e68:	02000000 	andeq	r0, r0, #0
    3e6c:	b6237491 			; <UNDEFINED> instruction: 0xb6237491
    3e70:	f900001a 			; <UNDEFINED> instruction: 0xf900001a
    3e74:	0500000f 	streq	r0, [r0, #-15]
    3e78:	02790003 	rsbseq	r0, r9, #3
    3e7c:	cd100000 	ldcgt	0, cr0, [r0, #-0]
    3e80:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    3e84:	1100000f 	tstne	r0, pc
    3e88:	00000044 	andeq	r0, r0, r4, asr #32
    3e8c:	e90a000b 	stmdb	sl, {r0, r1, r3}
    3e90:	0000000f 	andeq	r0, r0, pc
    3e94:	00000e39 	andeq	r0, r0, r9, lsr lr
    3e98:	149f0004 	ldrne	r0, [pc], #4	; 3ea0 <errno+0x3e9c>
    3e9c:	01040000 	mrseq	r0, (UNDEF: 4)
    3ea0:	00000117 	andeq	r0, r0, r7, lsl r1
    3ea4:	001e230c 	andseq	r2, lr, ip, lsl #6
    3ea8:	00005f00 	andeq	r5, r0, r0, lsl #30
    3eac:	013be800 	teqeq	fp, r0, lsl #16
    3eb0:	000d7400 	andeq	r7, sp, r0, lsl #8
    3eb4:	002d8400 	eoreq	r8, sp, r0, lsl #8
    3eb8:	1a1e0200 	bne	7846c0 <__bss_end__+0x63b678>
    3ebc:	12070000 	andne	r0, r7, #0
    3ec0:	0000311b 	andeq	r3, r0, fp, lsl r1
    3ec4:	1a1c0300 	bne	704acc <__bss_end__+0x5bba84>
    3ec8:	15040000 	strne	r0, [r4, #-0]
    3ecc:	00004800 	andeq	r4, r0, r0, lsl #16
    3ed0:	19070400 	stmdbne	r7, {sl}
    3ed4:	00480000 	subeq	r0, r8, r0
    3ed8:	00000000 	andeq	r0, r0, r0
    3edc:	2f020405 	svccs	0x00020405
    3ee0:	0700000a 	streq	r0, [r0, -sl]
    3ee4:	0056186e 	subseq	r1, r6, lr, ror #16
    3ee8:	04060000 	streq	r0, [r6], #-0
    3eec:	0003c507 	andeq	ip, r3, r7, lsl #10
    3ef0:	18b70200 	ldmne	r7!, {r9}
    3ef4:	7d070000 	stcvc	0, cr0, [r7, #-0]
    3ef8:	0000690f 	andeq	r6, r0, pc, lsl #18
    3efc:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    3f00:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3f04:	09050806 	stmdbeq	r5, {r1, r2, fp}
    3f08:	08000001 	stmdaeq	r0, {r0}
    3f0c:	0000022a 	andeq	r0, r0, sl, lsr #4
    3f10:	19016d07 	stmdbne	r1, {r0, r1, r2, r8, sl, fp, sp, lr}
    3f14:	00000084 	andeq	r0, r0, r4, lsl #1
    3f18:	00022609 	andeq	r2, r2, r9, lsl #12
    3f1c:	08010600 	stmdaeq	r1, {r9, sl}
    3f20:	00000335 	andeq	r0, r0, r5, lsr r3
    3f24:	0000890a 	andeq	r8, r0, sl, lsl #18
    3f28:	04080600 	streq	r0, [r8], #-1536	; 0xfffffa00
    3f2c:	000015f8 	strdeq	r1, [r0], -r8
    3f30:	00022f0b 	andeq	r2, r2, fp, lsl #30
    3f34:	14370800 	ldrtne	r0, [r7], #-2048	; 0xfffff800
    3f38:	000000ae 	andeq	r0, r0, lr, lsr #1
    3f3c:	0077040c 	rsbseq	r0, r7, ip, lsl #8
    3f40:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
    3f44:	0b000000 	bleq	3f4c <errno+0x3f48>
    3f48:	0000023c 	andeq	r0, r0, ip, lsr r2
    3f4c:	ae143808 	cdpge	8, 1, cr3, cr4, cr8, {0}
    3f50:	0b000000 	bleq	3f58 <errno+0x3f54>
    3f54:	00000235 	andeq	r0, r0, r5, lsr r2
    3f58:	ae143908 	vnmlsge.f16	s6, s8, s16	; <UNPREDICTABLE>
    3f5c:	02000000 	andeq	r0, r0, #0
    3f60:	00000920 	andeq	r0, r0, r0, lsr #18
    3f64:	56187307 	ldrpl	r7, [r8], -r7, lsl #6
    3f68:	06000000 	streq	r0, [r0], -r0
    3f6c:	032e0601 			; <UNDEFINED> instruction: 0x032e0601
    3f70:	02060000 	andeq	r0, r6, #0
    3f74:	00046605 	andeq	r6, r4, r5, lsl #12
    3f78:	08010600 	stmdaeq	r1, {r9, sl}
    3f7c:	0000032c 	andeq	r0, r0, ip, lsr #6
    3f80:	52070206 	andpl	r0, r7, #1610612736	; 0x60000000
    3f84:	06000003 	streq	r0, [r0], -r3
    3f88:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
    3f8c:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    3f90:	0015f304 	andseq	pc, r5, r4, lsl #6
    3f94:	030d0200 	movweq	r0, #53760	; 0xd200
    3f98:	3d090000 	stccc	0, cr0, [r9, #-0]
    3f9c:	00005625 	andeq	r5, r0, r5, lsr #12
    3fa0:	03720200 	cmneq	r2, #0, 4
    3fa4:	71090000 	mrsvc	r0, (UNDEF: 9)
    3fa8:	00010115 	andeq	r0, r1, r5, lsl r1
    3fac:	03d20200 	bicseq	r0, r2, #0, 4
    3fb0:	80090000 	andhi	r0, r9, r0
    3fb4:	00010d13 	andeq	r0, r1, r3, lsl sp
    3fb8:	04050d00 	streq	r0, [r5], #-3328	; 0xfffff300
    3fbc:	00000069 	andeq	r0, r0, r9, rrx
    3fc0:	910e110c 	tstls	lr, ip, lsl #2
    3fc4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    3fc8:	00000be0 	andeq	r0, r0, r0, ror #23
    3fcc:	0a830e7f 	beq	fe0c79d0 <__bss_end__+0xfdf7e988>
    3fd0:	0e7e0000 	cdpeq	0, 7, cr0, cr14, cr0, {0}
    3fd4:	00000b26 	andeq	r0, r0, r6, lsr #22
    3fd8:	10e30e7d 	rscne	r0, r3, sp, ror lr
    3fdc:	0e7c0000 	cdpeq	0, 7, cr0, cr12, cr0, {0}
    3fe0:	000011a1 	andeq	r1, r0, r1, lsr #3
    3fe4:	0f590e7b 	svceq	0x00590e7b
    3fe8:	0e7a0000 	cdpeq	0, 7, cr0, cr10, cr0, {0}
    3fec:	00000a6b 	andeq	r0, r0, fp, ror #20
    3ff0:	0e540e79 	mrceq	14, 2, r0, cr4, cr9, {3}
    3ff4:	0e780000 	cdpeq	0, 7, cr0, cr8, cr0, {0}
    3ff8:	00000fce 	andeq	r0, r0, lr, asr #31
    3ffc:	11d50e77 	bicsne	r0, r5, r7, ror lr
    4000:	0e760000 	cdpeq	0, 7, cr0, cr6, cr0, {0}
    4004:	00000cdb 	ldrdeq	r0, [r0], -fp
    4008:	0fa00e75 	svceq	0x00a00e75
    400c:	0e740000 	cdpeq	0, 7, cr0, cr4, cr0, {0}
    4010:	000009b4 			; <UNDEFINED> instruction: 0x000009b4
    4014:	0a530e73 	beq	14c79e8 <__bss_end__+0x137e9a0>
    4018:	0f720000 	svceq	0x00720000
    401c:	00000e63 	andeq	r0, r0, r3, ror #28
    4020:	7fffffff 	svcvc	0x00ffffff
    4024:	03921000 	orrseq	r1, r2, #0
    4028:	04070000 	streq	r0, [r7], #-0
    402c:	00000056 	andeq	r0, r0, r6, asr r0
    4030:	c80e080a 	stmdagt	lr, {r1, r3, fp}
    4034:	11000001 	tstne	r0, r1
    4038:	00000319 	andeq	r0, r0, r9, lsl r3
    403c:	04801100 	streq	r1, [r0], #256	; 0x100
    4040:	11010000 	mrsne	r0, (UNDEF: 1)
    4044:	000003f8 	strdeq	r0, [r0], -r8
    4048:	048f1102 	streq	r1, [pc], #258	; 4050 <errno+0x404c>
    404c:	11030000 	mrsne	r0, (UNDEF: 3)
    4050:	000004cd 	andeq	r0, r0, sp, asr #9
    4054:	02bd1104 	adcseq	r1, sp, #4, 2
    4058:	00050000 	andeq	r0, r5, r0
    405c:	0003dc02 	andeq	sp, r3, r2, lsl #24
    4060:	03130a00 	tsteq	r3, #0, 20
    4064:	00000191 	muleq	r0, r1, r1
    4068:	0001c80a 	andeq	ip, r1, sl, lsl #16
    406c:	04b41200 	ldrteq	r1, [r4], #512	; 0x200
    4070:	150a0000 	strne	r0, [sl, #-0]
    4074:	0001d459 	andeq	sp, r1, r9, asr r4
    4078:	a8030500 	stmdage	r3, {r8, sl}
    407c:	10000279 	andne	r0, r0, r9, ror r2
    4080:	00000ee8 	andeq	r0, r0, r8, ror #29
    4084:	00560407 	subseq	r0, r6, r7, lsl #8
    4088:	090b0000 	stmdbeq	fp, {}	; <UNPREDICTABLE>
    408c:	00020a0e 	andeq	r0, r2, lr, lsl #20
    4090:	0a361100 	beq	d88498 <__bss_end__+0xc3f450>
    4094:	11050000 	mrsne	r0, (UNDEF: 5)
    4098:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
    409c:	070d0006 	streq	r0, [sp, -r6]
    40a0:	00005604 	andeq	r5, r0, r4, lsl #12
    40a4:	0e090d00 	cdpeq	13, 0, cr0, cr9, cr0, {0}
    40a8:	00000261 	andeq	r0, r0, r1, ror #4
    40ac:	001ce211 	andseq	lr, ip, r1, lsl r2
    40b0:	ec110000 	ldc	0, cr0, [r1], {-0}
    40b4:	0100001d 	tsteq	r0, sp, lsl r0
    40b8:	001da811 	andseq	sl, sp, r1, lsl r8
    40bc:	53110200 	tstpl	r1, #0, 4
    40c0:	0300001c 	movweq	r0, #28
    40c4:	001b0011 	andseq	r0, fp, r1, lsl r0
    40c8:	cf110400 	svcgt	0x00110400
    40cc:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    40d0:	001cef11 	andseq	lr, ip, r1, lsl pc
    40d4:	78110600 	ldmdavc	r1, {r9, sl}
    40d8:	0700001d 	smladeq	r0, sp, r0, r0
    40dc:	001e8211 	andseq	r8, lr, r1, lsl r2
    40e0:	db110800 	blle	4460e8 <__bss_end__+0x2fd0a0>
    40e4:	0900001a 	stmdbeq	r0, {r1, r3, r4}
    40e8:	001b2311 	andseq	r2, fp, r1, lsl r3
    40ec:	d3110a00 	tstle	r1, #0, 20
    40f0:	0b00001c 	bleq	4168 <errno+0x4164>
    40f4:	1e930200 	cdpne	2, 9, cr0, cr3, cr0, {0}
    40f8:	1b0d0000 	blne	344100 <__bss_end__+0x1fb0b8>
    40fc:	00020a03 	andeq	r0, r2, r3, lsl #20
    4100:	0d291000 	stceq	0, cr1, [r9, #-0]
    4104:	04070000 	streq	r0, [r7], #-0
    4108:	00000056 	andeq	r0, r0, r6, asr r0
    410c:	9206340e 	andls	r3, r6, #234881024	; 0xe000000
    4110:	11000002 	tstne	r0, r2
    4114:	000009ca 	andeq	r0, r0, sl, asr #19
    4118:	0ef51107 	cdpeq	1, 15, cr1, cr5, cr7, {0}
    411c:	11020000 	mrsne	r0, (UNDEF: 2)
    4120:	00000df6 	strdeq	r0, [r0], -r6
    4124:	01130078 	tsteq	r3, r8, ror r0
    4128:	a2000001 	andge	r0, r0, #1
    412c:	14000002 	strne	r0, [r0], #-2
    4130:	00000056 	andeq	r0, r0, r6, asr r0
    4134:	a7150000 	ldrge	r0, [r5, -r0]
    4138:	04000002 	streq	r0, [r0], #-2
    413c:	08013801 	stmdaeq	r1, {r0, fp, ip, sp}
    4140:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
    4144:	0003b016 	andeq	fp, r3, r6, lsl r0
    4148:	01390100 	teqeq	r9, r0, lsl #2
    414c:	00029211 	andeq	r9, r2, r1, lsl r2
    4150:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4154:	0000039d 	muleq	r0, sp, r3
    4158:	21013b01 	tstcs	r1, r1, lsl #22
    415c:	000002a2 	andeq	r0, r0, r2, lsr #5
    4160:	00047017 	andeq	r7, r4, r7, lsl r0
    4164:	0f020000 	svceq	0x00020000
    4168:	033b100b 	teqeq	fp, #11
    416c:	74180000 	ldrvc	r0, [r8], #-0
    4170:	0f006761 	svceq	0x00006761
    4174:	02bf180c 	adcseq	r1, pc, #12, 16	; 0xc0000
    4178:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    417c:	0067736d 	rsbeq	r7, r7, sp, ror #6
    4180:	3b0f0d0f 	blcc	3c75c4 <__bss_end__+0x27e57c>
    4184:	04000003 	streq	r0, [r0], #-3
    4188:	00033a19 	andeq	r3, r3, r9, lsl sl
    418c:	0f0e0f00 	svceq	0x000e0f00
    4190:	0000010d 	andeq	r0, r0, sp, lsl #2
    4194:	7c1901e4 	ldfvcs	f0, [r9], {228}	; 0xe4
    4198:	0f000003 	svceq	0x00000003
    419c:	034b0f0f 	movteq	r0, #48911	; 0xbf0f
    41a0:	01e80000 	mvneq	r0, r0
    41a4:	00036519 	andeq	r6, r3, r9, lsl r5
    41a8:	0f100f00 	svceq	0x00100f00
    41ac:	00000119 	andeq	r0, r0, r9, lsl r1
    41b0:	001901f4 			; <UNDEFINED> instruction: 0x001901f4
    41b4:	0f000003 	svceq	0x00000003
    41b8:	01190f11 	tsteq	r9, r1, lsl pc
    41bc:	01f80000 	mvnseq	r0, r0
    41c0:	00040c19 	andeq	r0, r4, r9, lsl ip
    41c4:	0f120f00 	svceq	0x00120f00
    41c8:	0000010d 	andeq	r0, r0, sp, lsl #2
    41cc:	130001fc 	movwne	r0, #508	; 0x1fc
    41d0:	0000010d 	andeq	r0, r0, sp, lsl #2
    41d4:	0000034b 	andeq	r0, r0, fp, asr #6
    41d8:	00005614 	andeq	r5, r0, r4, lsl r6
    41dc:	13007700 	movwne	r7, #1792	; 0x700
    41e0:	0000010d 	andeq	r0, r0, sp, lsl #2
    41e4:	0000035b 	andeq	r0, r0, fp, asr r3
    41e8:	00005614 	andeq	r5, r0, r4, lsl r6
    41ec:	1a000200 	bne	49f4 <errno+0x49f0>
    41f0:	00000343 	andeq	r0, r0, r3, asr #6
    41f4:	cc03130f 	stcgt	3, cr1, [r3], {15}
    41f8:	00000002 	andeq	r0, r0, r2
    41fc:	1b1a0202 	blne	684a0c <__bss_end__+0x53b9c4>
    4200:	26100000 	ldrcs	r0, [r0], -r0
    4204:	00011913 	andeq	r1, r1, r3, lsl r9
    4208:	02e80b00 	rsceq	r0, r8, #0, 22
    420c:	0d020000 	stceq	0, cr0, [r2, #-0]
    4210:	00038121 	andeq	r8, r3, r1, lsr #2
    4214:	5b040c00 	blpl	10721c <morecore_area+0xbe21c>
    4218:	10000003 	andne	r0, r0, r3
    421c:	0000100d 	andeq	r1, r0, sp
    4220:	00560407 	subseq	r0, r6, r7, lsl #8
    4224:	0e110000 	cdpeq	0, 1, cr0, cr1, cr0, {0}
    4228:	00045406 	andeq	r5, r4, r6, lsl #8
    422c:	0ac11100 	beq	ff048634 <__bss_end__+0xfeeff5ec>
    4230:	11000000 	mrsne	r0, (UNDEF: 0)
    4234:	0000122e 	andeq	r1, r0, lr, lsr #4
    4238:	0b7f1101 	bleq	1fc8644 <__bss_end__+0x1e7f5fc>
    423c:	11020000 	mrsne	r0, (UNDEF: 2)
    4240:	00000f8e 	andeq	r0, r0, lr, lsl #31
    4244:	109a1103 	addsne	r1, sl, r3, lsl #2
    4248:	11040000 	mrsne	r0, (UNDEF: 4)
    424c:	00000b19 	andeq	r0, r0, r9, lsl fp
    4250:	0fb91105 	svceq	0x00b91105
    4254:	11060000 	mrsne	r0, (UNDEF: 6)
    4258:	00000b33 	andeq	r0, r0, r3, lsr fp
    425c:	0a951107 	beq	fe548680 <__bss_end__+0xfe3ff638>
    4260:	11080000 	mrsne	r0, (UNDEF: 8)
    4264:	00000a09 	andeq	r0, r0, r9, lsl #20
    4268:	0f2d1109 	svceq	0x002d1109
    426c:	110a0000 	mrsne	r0, (UNDEF: 10)
    4270:	00000ced 	andeq	r0, r0, sp, ror #25
    4274:	1068110b 	rsbne	r1, r8, fp, lsl #2
    4278:	110c0000 	mrsne	r0, (UNDEF: 12)
    427c:	00000fe3 	andeq	r0, r0, r3, ror #31
    4280:	10ab110d 	adcne	r1, fp, sp, lsl #2
    4284:	110e0000 	mrsne	r0, (UNDEF: 14)
    4288:	000011f0 	strdeq	r1, [r0], -r0
    428c:	0cc2110f 	stfeqe	f1, [r2], {15}
    4290:	11100000 	tstne	r0, r0
    4294:	00000bd4 	ldrdeq	r0, [r0], -r4
    4298:	0ed11111 	mrceq	1, 6, r1, cr1, cr1, {0}
    429c:	11120000 	tstne	r2, r0
    42a0:	0000120a 	andeq	r1, r0, sl, lsl #4
    42a4:	0b751113 	bleq	1d486f8 <__bss_end__+0x1bff6b0>
    42a8:	11140000 	tstne	r4, r0
    42ac:	00000a79 	andeq	r0, r0, r9, ror sl
    42b0:	0ff71115 	svceq	0x00f71115
    42b4:	11160000 	tstne	r6, r0
    42b8:	00000c25 	andeq	r0, r0, r5, lsr #24
    42bc:	0b651117 	bleq	1948720 <__bss_end__+0x17ff6d8>
    42c0:	11180000 	tstne	r8, r0
    42c4:	00000c97 	muleq	r0, r7, ip
    42c8:	117a1119 	cmnne	sl, r9, lsl r1
    42cc:	111a0000 	tstne	sl, r0
    42d0:	00000c86 	andeq	r0, r0, r6, lsl #25
    42d4:	0f67111b 	svceq	0x0067111b
    42d8:	111c0000 	tstne	ip, r0
    42dc:	00000ec4 	andeq	r0, r0, r4, asr #29
    42e0:	0969111d 	stmdbeq	r9!, {r0, r2, r3, r4, r8, ip}^
    42e4:	001e0000 	andseq	r0, lr, r0
    42e8:	00100310 	andseq	r0, r0, r0, lsl r3
    42ec:	56040700 	strpl	r0, [r4], -r0, lsl #14
    42f0:	12000000 	andne	r0, r0, #0
    42f4:	0485060e 	streq	r0, [r5], #1550	; 0x60e
    42f8:	e6110000 	ldr	r0, [r1], -r0
    42fc:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    4300:	000f0a11 	andeq	r0, pc, r1, lsl sl	; <UNPREDICTABLE>
    4304:	8b111f00 	blhi	44bf0c <__bss_end__+0x302ec4>
    4308:	2000000e 	andcs	r0, r0, lr
    430c:	00116311 	andseq	r6, r1, r1, lsl r3
    4310:	14112100 	ldrne	r2, [r1], #-256	; 0xffffff00
    4314:	22000012 	andcs	r0, r0, #18
    4318:	07040600 	streq	r0, [r4, -r0, lsl #12]
    431c:	000003c0 	andeq	r0, r0, r0, asr #7
    4320:	0e050406 	cdpeq	4, 0, cr0, cr5, cr6, {0}
    4324:	0c000001 	stceq	0, cr0, [r0], {1}
    4328:	00008904 	andeq	r8, r0, r4, lsl #18
    432c:	189c0b00 	ldmne	ip, {r8, r9, fp}
    4330:	f8130000 			; <UNDEFINED> instruction: 0xf8130000
    4334:	0000690c 	andeq	r6, r0, ip, lsl #18
    4338:	1aa81500 	bne	fea09740 <__bss_end__+0xfe8c06f8>
    433c:	07080000 	streq	r0, [r8, -r0]
    4340:	d0080185 	andle	r0, r8, r5, lsl #3
    4344:	16000004 	strne	r0, [r0], -r4
    4348:	000018bf 			; <UNDEFINED> instruction: 0x000018bf
    434c:	16018507 	strne	r8, [r1], -r7, lsl #10
    4350:	00000048 	andeq	r0, r0, r8, asr #32
    4354:	18f81600 	ldmne	r8!, {r9, sl, ip}^
    4358:	85070000 	strhi	r0, [r7, #-0]
    435c:	004a2701 	subeq	r2, sl, r1, lsl #14
    4360:	00040000 	andeq	r0, r4, r0
    4364:	001d4c02 	andseq	r4, sp, r2, lsl #24
    4368:	10121400 	andsne	r1, r2, r0, lsl #8
    436c:	000004dc 	ldrdeq	r0, [r0], -ip
    4370:	04e2040c 	strbteq	r0, [r2], #1036	; 0x40c
    4374:	8c1b0000 	ldchi	0, cr0, [fp], {-0}
    4378:	f1000004 	cps	#4
    437c:	1c000004 	stcne	0, cr0, [r0], {4}
    4380:	00000025 	andeq	r0, r0, r5, lsr #32
    4384:	1b421200 	blne	1088b8c <__bss_end__+0xf3fb44>
    4388:	1d060000 	stcne	0, cr0, [r6, #-0]
    438c:	0005030d 	andeq	r0, r5, sp, lsl #6
    4390:	68030500 	stmdavs	r3, {r8, sl}
    4394:	06000480 	streq	r0, [r0], -r0, lsl #9
    4398:	1bc90201 	blne	ff244ba4 <__bss_end__+0xff0fbb5c>
    439c:	80120000 	andshi	r0, r2, r0
    43a0:	0600001b 			; <UNDEFINED> instruction: 0x0600001b
    43a4:	051c0d1e 	ldreq	r0, [ip, #-3358]	; 0xfffff2e2
    43a8:	03050000 	movweq	r0, #20480	; 0x5000
    43ac:	0004806c 	andeq	r8, r4, ip, rrx
    43b0:	0069040c 	rsbeq	r0, r9, ip, lsl #8
    43b4:	a4120000 	ldrge	r0, [r2], #-0
    43b8:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    43bc:	05030d21 	streq	r0, [r3, #-3361]	; 0xfffff2df
    43c0:	03050000 	movweq	r0, #20480	; 0x5000
    43c4:	00048070 	andeq	r8, r4, r0, ror r0
    43c8:	001d5f12 	andseq	r5, sp, r2, lsl pc
    43cc:	0e220600 	cfmadda32eq	mvax0, mvax0, mvfx2, mvfx0
    43d0:	00000048 	andeq	r0, r0, r8, asr #32
    43d4:	80740305 	rsbshi	r0, r4, r5, lsl #6
    43d8:	d0130004 	andsle	r0, r3, r4
    43dc:	57000004 	strpl	r0, [r0, -r4]
    43e0:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    43e4:	00000056 	andeq	r0, r0, r6, asr r0
    43e8:	12000190 	andne	r0, r0, #144, 2	; 0x24
    43ec:	00001b72 	andeq	r1, r0, r2, ror fp
    43f0:	461b7106 	ldrmi	r7, [fp], -r6, lsl #2
    43f4:	05000005 	streq	r0, [r0, #-5]
    43f8:	02c00c03 	sbceq	r0, r0, #768	; 0x300
    43fc:	1af11e00 	bne	ffc4bc04 <__bss_end__+0xffb02bbc>
    4400:	06080000 	streq	r0, [r8], -r0
    4404:	059110a5 	ldreq	r1, [r1, #165]	; 0xa5
    4408:	291f0000 	ldmdbcs	pc, {}	; <UNPREDICTABLE>
    440c:	06000014 			; <UNDEFINED> instruction: 0x06000014
    4410:	006909a6 	rsbeq	r0, r9, r6, lsr #19
    4414:	1f000000 	svcne	0x00000000
    4418:	00001af8 	strdeq	r1, [r0], -r8
    441c:	d018a706 	andsle	sl, r8, r6, lsl #14
    4420:	04000004 	streq	r0, [r0], #-4
    4424:	1c310200 	lfmne	f0, 4, [r1], #-0
    4428:	a8060000 	stmdage	r6, {}	; <UNPREDICTABLE>
    442c:	00056903 	andeq	r6, r5, r3, lsl #18
    4430:	05911300 	ldreq	r1, [r1, #768]	; 0x300
    4434:	05ad0000 	streq	r0, [sp, #0]!
    4438:	56140000 	ldrpl	r0, [r4], -r0
    443c:	04000000 	streq	r0, [r0], #-0
    4440:	1b6b1200 	blne	1ac8c48 <__bss_end__+0x197fc00>
    4444:	aa060000 	bge	18444c <__bss_end__+0x3b404>
    4448:	00059d19 	andeq	r9, r5, r9, lsl sp
    444c:	50030500 	andpl	r0, r3, r0, lsl #10
    4450:	200002c6 	andcs	r0, r0, r6, asr #5
    4454:	00001b38 	andeq	r1, r0, r8, lsr fp
    4458:	0e012506 	cfsh32eq	mvfx2, mvfx1, #6
    445c:	00000048 	andeq	r0, r0, r8, asr #32
    4460:	001c7c21 	andseq	r7, ip, r1, lsr #24
    4464:	01350600 	teqeq	r5, r0, lsl #12
    4468:	0000cb29 	andeq	ip, r0, r9, lsr #22
    446c:	d8030500 	stmdale	r3, {r8, sl}
    4470:	220002c8 	andcs	r0, r0, #200, 4	; 0x8000000c
    4474:	00001e01 	andeq	r1, r0, r1, lsl #28
    4478:	42014906 	andmi	r4, r1, #98304	; 0x18000
    447c:	00014904 	andeq	r4, r1, r4, lsl #18
    4480:	00000058 	andeq	r0, r0, r8, asr r0
    4484:	06079c01 	streq	r9, [r7], -r1, lsl #24
    4488:	74230000 	strtvc	r0, [r3], #-0
    448c:	0600706d 	streq	r7, [r0], -sp, rrx
    4490:	8115014b 	tsthi	r5, fp, asr #2
    4494:	02000003 	andeq	r0, r0, #3
    4498:	24006c91 	strcs	r6, [r0], #-3217	; 0xfffff36f
    449c:	00001dda 	ldrdeq	r1, [r0], -sl
    44a0:	17014306 	strne	r4, [r1, -r6, lsl #6]
    44a4:	000148d0 	ldrdeq	r4, [r1], -r0
    44a8:	00000034 	andeq	r0, r0, r4, lsr r0
    44ac:	062f9c01 	strteq	r9, [pc], -r1, lsl #24
    44b0:	74250000 	strtvc	r0, [r5], #-0
    44b4:	0600706d 	streq	r7, [r0], -sp, rrx
    44b8:	81390143 	teqhi	r9, r3, asr #2
    44bc:	02000003 	andeq	r0, r0, #3
    44c0:	26007491 			; <UNDEFINED> instruction: 0x26007491
    44c4:	00001b99 	muleq	r0, r9, fp
    44c8:	3e012e06 	cdpcc	14, 0, cr2, cr1, cr6, {0}
    44cc:	000148a4 	andeq	r4, r1, r4, lsr #17
    44d0:	0000002c 	andeq	r0, r0, ip, lsr #32
    44d4:	15279c01 	strne	r9, [r7, #-3073]!	; 0xfffff3ff
    44d8:	0600001e 			; <UNDEFINED> instruction: 0x0600001e
    44dc:	8c060109 	stfhis	f0, [r6], {9}
    44e0:	d4000004 	strle	r0, [r0], #-4
    44e4:	d0000147 	andle	r0, r0, r7, asr #2
    44e8:	01000000 	mrseq	r0, (UNDEF: 0)
    44ec:	0006b89c 	muleq	r6, ip, r8
    44f0:	14292800 	strtne	r2, [r9], #-2048	; 0xfffff800
    44f4:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    44f8:	048c1901 	streq	r1, [ip], #2305	; 0x901
    44fc:	91020000 	mrsls	r0, (UNDEF: 2)
    4500:	61232970 			; <UNDEFINED> instruction: 0x61232970
    4504:	0b06006c 	bleq	1846bc <__bss_end__+0x3b674>
    4508:	00250d01 	eoreq	r0, r5, r1, lsl #26
    450c:	91020000 	mrsls	r0, (UNDEF: 2)
    4510:	1af82a58 	bne	ffe0ee78 <__bss_end__+0xffcc5e30>
    4514:	0d060000 	stceq	0, cr0, [r6, #-0]
    4518:	04d01801 	ldrbeq	r1, [r0], #2049	; 0x801
    451c:	91020000 	mrsls	r0, (UNDEF: 2)
    4520:	65722364 	ldrbvs	r2, [r2, #-868]!	; 0xfffffc9c
    4524:	20060074 	andcs	r0, r6, r4, ror r0
    4528:	048c0a01 	streq	r0, [ip], #2561	; 0xa01
    452c:	91020000 	mrsls	r0, (UNDEF: 2)
    4530:	48042b5c 	stmdami	r4, {r2, r3, r4, r6, r8, r9, fp, sp}
    4534:	00440001 	subeq	r0, r4, r1
    4538:	4f2a0000 	svcmi	0x002a0000
    453c:	06000017 			; <UNDEFINED> instruction: 0x06000017
    4540:	690d010f 	stmdbvs	sp, {r0, r1, r2, r3, r8}
    4544:	02000000 	andeq	r0, r0, #0
    4548:	00006091 	muleq	r0, r1, r0
    454c:	001d9c2c 	andseq	r9, sp, ip, lsr #24
    4550:	0dfa0600 	ldcleq	6, cr0, [sl]
    4554:	00014754 	andeq	r4, r1, r4, asr r7
    4558:	00000080 	andeq	r0, r0, r0, lsl #1
    455c:	06fc9c01 	ldrbteq	r9, [ip], r1, lsl #24
    4560:	292d0000 	pushcs	{}	; <UNPREDICTABLE>
    4564:	06000014 			; <UNDEFINED> instruction: 0x06000014
    4568:	00691dfa 	strdeq	r1, [r9], #-218	; 0xffffff26	; <UNPREDICTABLE>
    456c:	91030000 	mrsls	r0, (UNDEF: 3)
    4570:	622e7f8c 	eorvs	r7, lr, #140, 30	; 0x230
    4574:	06006675 			; <UNDEFINED> instruction: 0x06006675
    4578:	06fc0afc 			; <UNDEFINED> instruction: 0x06fc0afc
    457c:	91030000 	mrsls	r0, (UNDEF: 3)
    4580:	692e7f90 	stmdbvs	lr!, {r4, r7, r8, r9, sl, fp, ip, sp, lr}
    4584:	09fd0600 	ldmibeq	sp!, {r9, sl}^
    4588:	00000069 	andeq	r0, r0, r9, rrx
    458c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    4590:	00008913 	andeq	r8, r0, r3, lsl r9
    4594:	00070c00 	andeq	r0, r7, r0, lsl #24
    4598:	00561400 	subseq	r1, r6, r0, lsl #8
    459c:	00630000 	rsbeq	r0, r3, r0
    45a0:	001c692c 	andseq	r6, ip, ip, lsr #18
    45a4:	33dd0600 	bicscc	r0, sp, #0, 12
    45a8:	00014664 	andeq	r4, r1, r4, ror #12
    45ac:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    45b0:	07419c01 	strbeq	r9, [r1, -r1, lsl #24]
    45b4:	722e0000 	eorvc	r0, lr, #0
    45b8:	06007465 	streq	r7, [r0], -r5, ror #8
    45bc:	04d018df 	ldrbeq	r1, [r0], #2271	; 0x8df
    45c0:	91020000 	mrsls	r0, (UNDEF: 2)
    45c4:	1ab62f74 	bne	fed9039c <__bss_end__+0xfec47354>
    45c8:	07510000 	ldrbeq	r0, [r1, -r0]
    45cc:	03050000 	movweq	r0, #20480	; 0x5000
    45d0:	00027d10 	andeq	r7, r2, r0, lsl sp
    45d4:	00901300 	addseq	r1, r0, r0, lsl #6
    45d8:	07510000 	ldrbeq	r0, [r1, -r0]
    45dc:	56140000 	ldrpl	r0, [r4], -r0
    45e0:	12000000 	andne	r0, r0, #0
    45e4:	07410a00 	strbeq	r0, [r1, -r0, lsl #20]
    45e8:	8b300000 	blhi	c045f0 <__bss_end__+0xabb5a8>
    45ec:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    45f0:	04d014c6 	ldrbeq	r1, [r0], #1222	; 0x4c6
    45f4:	45440000 	strbmi	r0, [r4, #-0]
    45f8:	01200001 			; <UNDEFINED> instruction: 0x01200001
    45fc:	9c010000 	stcls	0, cr0, [r1], {-0}
    4600:	000007c6 	andeq	r0, r0, r6, asr #15
    4604:	001af82d 	andseq	pc, sl, sp, lsr #16
    4608:	31c60600 	biccc	r0, r6, r0, lsl #12
    460c:	00000069 	andeq	r0, r0, r9, rrx
    4610:	2d6c9102 	stfcsp	f1, [ip, #-8]!
    4614:	00001c25 	andeq	r1, r0, r5, lsr #24
    4618:	d04dc606 	suble	ip, sp, r6, lsl #12
    461c:	02000004 	andeq	r0, r0, #4
    4620:	722e6891 	eorvc	r6, lr, #9502720	; 0x910000
    4624:	06007465 	streq	r7, [r0], -r5, ror #8
    4628:	04d018c8 	ldrbeq	r1, [r0], #2248	; 0x8c8
    462c:	91020000 	mrsls	r0, (UNDEF: 2)
    4630:	1ab62f74 	bne	fed90408 <__bss_end__+0xfec473c0>
    4634:	07d60000 	ldrbeq	r0, [r6, r0]
    4638:	03050000 	movweq	r0, #20480	; 0x5000
    463c:	00027cf4 	strdeq	r7, [r2], -r4
    4640:	0145642b 	cmpeq	r5, fp, lsr #8
    4644:	0000c400 	andeq	ip, r0, r0, lsl #8
    4648:	174f1200 	strbne	r1, [pc, -r0, lsl #4]
    464c:	ca060000 	bgt	184654 <__bss_end__+0x3b60c>
    4650:	0000690d 	andeq	r6, r0, sp, lsl #18
    4654:	70910200 	addsvc	r0, r1, r0, lsl #4
    4658:	90130000 	andsls	r0, r3, r0
    465c:	d6000000 	strle	r0, [r0], -r0
    4660:	14000007 	strne	r0, [r0], #-7
    4664:	00000056 	andeq	r0, r0, r6, asr r0
    4668:	c60a0018 			; <UNDEFINED> instruction: 0xc60a0018
    466c:	31000007 	tstcc	r0, r7
    4670:	00001aec 	andeq	r1, r0, ip, ror #21
    4674:	690cbc06 	stmdbvs	ip, {r1, r2, sl, fp, ip, sp, pc}
    4678:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    467c:	6c000144 	stfvss	f0, [r0], {68}	; 0x44
    4680:	01000000 	mrseq	r0, (UNDEF: 0)
    4684:	00081c9c 	muleq	r8, ip, ip
    4688:	1af82d00 	bne	ffe0fa90 <__bss_end__+0xffcc6a48>
    468c:	bc060000 	stclt	0, cr0, [r6], {-0}
    4690:	00006924 	andeq	r6, r0, r4, lsr #18
    4694:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4698:	0144e82b 	cmpeq	r4, fp, lsr #16
    469c:	00004800 	andeq	r4, r0, r0, lsl #16
    46a0:	00692e00 	rsbeq	r2, r9, r0, lsl #28
    46a4:	690ebe06 	stmdbvs	lr, {r1, r2, r9, sl, fp, ip, sp, pc}
    46a8:	02000000 	andeq	r0, r0, #0
    46ac:	00007491 	muleq	r0, r1, r4
    46b0:	001d3130 	andseq	r3, sp, r0, lsr r1
    46b4:	065c0600 	ldrbeq	r0, [ip], -r0, lsl #12
    46b8:	0000048c 	andeq	r0, r0, ip, lsl #9
    46bc:	000143d8 	ldrdeq	r4, [r1], -r8
    46c0:	00000100 	andeq	r0, r0, r0, lsl #2
    46c4:	08c89c01 	stmiaeq	r8, {r0, sl, fp, ip, pc}^
    46c8:	61320000 	teqvs	r2, r0
    46cc:	5c060070 	stcpl	0, cr0, [r6], {112}	; 0x70
    46d0:	0000251e 	andeq	r2, r0, lr, lsl r5
    46d4:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    46d8:	00181512 	andseq	r1, r8, r2, lsl r5
    46dc:	105e0600 	subsne	r0, lr, r0, lsl #12
    46e0:	00000069 	andeq	r0, r0, r9, rrx
    46e4:	2e689102 	lgncse	f1, f2
    46e8:	00766f69 	rsbseq	r6, r6, r9, ror #30
    46ec:	c8135f06 	ldmdagt	r3, {r1, r2, r8, r9, sl, fp, ip, lr}
    46f0:	02000008 	andeq	r0, r0, #8
    46f4:	ff126491 			; <UNDEFINED> instruction: 0xff126491
    46f8:	06000016 			; <UNDEFINED> instruction: 0x06000016
    46fc:	00690960 	rsbeq	r0, r9, r0, ror #18
    4700:	91020000 	mrsls	r0, (UNDEF: 2)
    4704:	65722e60 	ldrbvs	r2, [r2, #-3680]!	; 0xfffff1a0
    4708:	62060074 	andvs	r0, r6, #116	; 0x74
    470c:	00005d0d 	andeq	r5, r0, sp, lsl #26
    4710:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4714:	01442c2b 	cmpeq	r4, fp, lsr #24
    4718:	00009c00 	andeq	r9, r0, r0, lsl #24
    471c:	00692e00 	rsbeq	r2, r9, r0, lsl #28
    4720:	690e6406 	stmdbvs	lr, {r1, r2, sl, sp, lr}
    4724:	02000000 	andeq	r0, r0, #0
    4728:	382b7091 	stmdacc	fp!, {r0, r4, r7, ip, sp, lr}
    472c:	74000144 	strvc	r0, [r0], #-324	; 0xfffffebc
    4730:	12000000 	andne	r0, r0, #0
    4734:	00002049 	andeq	r2, r0, r9, asr #32
    4738:	ce166506 	cfmul32gt	mvfx6, mvfx6, mvfx6
    473c:	02000008 	andeq	r0, r0, #8
    4740:	502b5c91 	mlapl	fp, r1, ip, r5
    4744:	5c000144 	stfpls	f0, [r0], {68}	; 0x44
    4748:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    474c:	6606006a 	strvs	r0, [r6], -sl, rrx
    4750:	00006912 	andeq	r6, r0, r2, lsl r9
    4754:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4758:	00000000 	andeq	r0, r0, r0
    475c:	04a5040c 	strteq	r0, [r5], #1036	; 0x40c
    4760:	040c0000 	streq	r0, [ip], #-0
    4764:	00000089 	andeq	r0, r0, r9, lsl #1
    4768:	001ba733 	andseq	sl, fp, r3, lsr r7
    476c:	06550600 	ldrbeq	r0, [r5], -r0, lsl #12
    4770:	00000503 	andeq	r0, r0, r3, lsl #10
    4774:	00014398 	muleq	r1, r8, r3
    4778:	00000040 	andeq	r0, r0, r0, asr #32
    477c:	08fe9c01 	ldmeq	lr!, {r0, sl, fp, ip, pc}^
    4780:	61320000 	teqvs	r2, r0
    4784:	06006772 			; <UNDEFINED> instruction: 0x06006772
    4788:	08fe2e55 	ldmeq	lr!, {r0, r2, r4, r6, r9, sl, fp, sp}^
    478c:	91020000 	mrsls	r0, (UNDEF: 2)
    4790:	040c0074 	streq	r0, [ip], #-116	; 0xffffff8c
    4794:	0000051c 	andeq	r0, r0, ip, lsl r5
    4798:	001bb434 	andseq	fp, fp, r4, lsr r4
    479c:	0d490600 	stcleq	6, cr0, [r9, #-0]
    47a0:	0000048c 	andeq	r0, r0, ip, lsl #9
    47a4:	000142e4 	andeq	r4, r1, r4, ror #5
    47a8:	000000b4 	strheq	r0, [r0], -r4
    47ac:	094b9c01 	stmdbeq	fp, {r0, sl, fp, ip, pc}^
    47b0:	61320000 	teqvs	r2, r0
    47b4:	49060070 	stmdbmi	r6, {r4, r5, r6}
    47b8:	0000252a 	andeq	r2, r0, sl, lsr #10
    47bc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    47c0:	6469742e 	strbtvs	r7, [r9], #-1070	; 0xfffffbd2
    47c4:	0a4b0600 	beq	12c5fcc <__bss_end__+0x117cf84>
    47c8:	0000051c 	andeq	r0, r0, ip, lsl r5
    47cc:	2f749102 	svccs	0x00749102
    47d0:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    47d4:	0000095b 	andeq	r0, r0, fp, asr r9
    47d8:	7cdc0305 	ldclvc	3, cr0, [ip], {5}
    47dc:	13000002 	movwne	r0, #2
    47e0:	00000090 	muleq	r0, r0, r0
    47e4:	0000095b 	andeq	r0, r0, fp, asr r9
    47e8:	00005614 	andeq	r5, r0, r4, lsl r6
    47ec:	0a001400 	beq	97f4 <errno+0x97f0>
    47f0:	0000094b 	andeq	r0, r0, fp, asr #18
    47f4:	001bee33 	andseq	lr, fp, r3, lsr lr
    47f8:	06420600 	strbeq	r0, [r2], -r0, lsl #12
    47fc:	00000503 	andeq	r0, r0, r3, lsl #10
    4800:	000142a4 	andeq	r4, r1, r4, lsr #5
    4804:	00000040 	andeq	r0, r0, r0, asr #32
    4808:	098a9c01 	stmibeq	sl, {r0, sl, fp, ip, pc}
    480c:	61320000 	teqvs	r2, r0
    4810:	06006772 			; <UNDEFINED> instruction: 0x06006772
    4814:	098a2f42 	stmibeq	sl, {r1, r6, r8, r9, sl, fp, sp}
    4818:	91020000 	mrsls	r0, (UNDEF: 2)
    481c:	040c0074 	streq	r0, [ip], #-116	; 0xffffff8c
    4820:	00000048 	andeq	r0, r0, r8, asr #32
    4824:	001bfb34 	andseq	pc, fp, r4, lsr fp	; <UNPREDICTABLE>
    4828:	0d240600 	stceq	6, cr0, [r4, #-0]
    482c:	0000048c 	andeq	r0, r0, ip, lsl #9
    4830:	0001419c 	muleq	r1, ip, r1
    4834:	00000108 	andeq	r0, r0, r8, lsl #2
    4838:	09fe9c01 	ldmibeq	lr!, {r0, sl, fp, ip, pc}^
    483c:	61320000 	teqvs	r2, r0
    4840:	24060070 	strcs	r0, [r6], #-112	; 0xffffff90
    4844:	0000252a 	andeq	r2, r0, sl, lsr #10
    4848:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    484c:	0070742e 	rsbseq	r7, r0, lr, lsr #8
    4850:	480b2606 	stmdami	fp, {r1, r2, r9, sl, sp}
    4854:	02000000 	andeq	r0, r0, #0
    4858:	b62f7491 			; <UNDEFINED> instruction: 0xb62f7491
    485c:	5b00001a 	blpl	48cc <errno+0x48c8>
    4860:	05000009 	streq	r0, [r0, #-9]
    4864:	027cac03 	rsbseq	sl, ip, #768	; 0x300
    4868:	1d411200 	sfmne	f1, 2, [r1, #-0]
    486c:	35060000 	strcc	r0, [r6, #-0]
    4870:	0004930b 	andeq	r9, r4, fp, lsl #6
    4874:	70910200 	addsvc	r0, r1, r0, lsl #4
    4878:	01423c2b 	cmpeq	r2, fp, lsr #24
    487c:	00003800 	andeq	r3, r0, r0, lsl #16
    4880:	63742e00 	cmnvs	r4, #0, 28
    4884:	37060062 	strcc	r0, [r6, -r2, rrx]
    4888:	00011913 	andeq	r1, r1, r3, lsl r9
    488c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4890:	01350000 	teqeq	r5, r0
    4894:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    4898:	61010edd 	ldrdvs	r0, [r1, -sp]
    489c:	b4000002 	strlt	r0, [r0], #-2
    48a0:	e8000140 	stmda	r0, {r6, r8}
    48a4:	01000000 	mrseq	r0, (UNDEF: 0)
    48a8:	000aaa9c 	muleq	sl, ip, sl
    48ac:	1c422800 	mcrrne	8, 0, r2, r2, cr0
    48b0:	dd050000 	stcle	0, cr0, [r5, #-0]
    48b4:	03691e0e 	cmneq	r9, #14, 28	; 0xe0
    48b8:	91020000 	mrsls	r0, (UNDEF: 2)
    48bc:	0cb92854 	ldceq	8, cr2, [r9], #336	; 0x150
    48c0:	dd050000 	stcle	0, cr0, [r5, #-0]
    48c4:	010d320e 	tsteq	sp, lr, lsl #4
    48c8:	91020000 	mrsls	r0, (UNDEF: 2)
    48cc:	17b32a50 	sbfxne	r2, r0, #20, #20
    48d0:	df050000 	svcle	0x00050000
    48d4:	02610d0e 	rsbeq	r0, r1, #896	; 0x380
    48d8:	91020000 	mrsls	r0, (UNDEF: 2)
    48dc:	61742374 	cmnvs	r4, r4, ror r3
    48e0:	e0050067 	and	r0, r5, r7, rrx
    48e4:	02bf150e 	adcseq	r1, pc, #58720256	; 0x3800000
    48e8:	91020000 	mrsls	r0, (UNDEF: 2)
    48ec:	1be32a70 	blne	ff8cf2b4 <__bss_end__+0xff78626c>
    48f0:	e1050000 	mrs	r0, (UNDEF: 5)
    48f4:	02bf150e 	adcseq	r1, pc, #58720256	; 0x3800000
    48f8:	91020000 	mrsls	r0, (UNDEF: 2)
    48fc:	726d236c 	rsbvc	r2, sp, #108, 6	; 0xb0000001
    4900:	e2050030 	and	r0, r5, #48	; 0x30
    4904:	010d0c0e 	tsteq	sp, lr, lsl #24
    4908:	91020000 	mrsls	r0, (UNDEF: 2)
    490c:	726d2368 	rsbvc	r2, sp, #104, 6	; 0xa0000001
    4910:	e3050031 	movw	r0, #20529	; 0x5031
    4914:	010d0c0e 	tsteq	sp, lr, lsl #24
    4918:	91020000 	mrsls	r0, (UNDEF: 2)
    491c:	726d2364 	rsbvc	r2, sp, #100, 6	; 0x90000001
    4920:	e4050032 	str	r0, [r5], #-50	; 0xffffffce
    4924:	010d0c0e 	tsteq	sp, lr, lsl #24
    4928:	91020000 	mrsls	r0, (UNDEF: 2)
    492c:	726d2360 	rsbvc	r2, sp, #96, 6	; 0x80000001
    4930:	e5050033 	str	r0, [r5, #-51]	; 0xffffffcd
    4934:	010d0c0e 	tsteq	sp, lr, lsl #24
    4938:	91020000 	mrsls	r0, (UNDEF: 2)
    493c:	2236005c 	eorscs	r0, r6, #92	; 0x5c
    4940:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    4944:	201a023f 	andscs	r0, sl, pc, lsr r2
    4948:	94000140 	strls	r0, [r0], #-320	; 0xfffffec0
    494c:	01000000 	mrseq	r0, (UNDEF: 0)
    4950:	000b309c 	muleq	fp, ip, r0
    4954:	00632500 	rsbeq	r2, r3, r0, lsl #10
    4958:	31023f04 	tstcc	r2, r4, lsl #30
    495c:	00000089 	andeq	r0, r0, r9, lsl #1
    4960:	2a5f9102 	bcs	17e8d70 <__bss_end__+0x169fd28>
    4964:	00000e08 	andeq	r0, r0, r8, lsl #28
    4968:	0f024104 	svceq	0x00024104
    496c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4970:	2a749102 	bcs	1d28d80 <__bss_end__+0x1bdfd38>
    4974:	00000e10 	andeq	r0, r0, r0, lsl lr
    4978:	0f024204 	svceq	0x00024204
    497c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4980:	2a709102 	bcs	1c28d90 <__bss_end__+0x1adfd48>
    4984:	00001072 	andeq	r1, r0, r2, ror r0
    4988:	0f024304 	svceq	0x00024304
    498c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4990:	2a6c9102 	bcs	1b28da0 <__bss_end__+0x19dfd58>
    4994:	00000e18 	andeq	r0, r0, r8, lsl lr
    4998:	0f024404 	svceq	0x00024404
    499c:	0000010d 	andeq	r0, r0, sp, lsl #2
    49a0:	2a689102 	bcs	1a28db0 <__bss_end__+0x18dfd68>
    49a4:	00000e20 	andeq	r0, r0, r0, lsr #28
    49a8:	0f024504 	svceq	0x00024504
    49ac:	0000010d 	andeq	r0, r0, sp, lsl #2
    49b0:	2a649102 	bcs	1928dc0 <__bss_end__+0x17dfd78>
    49b4:	00000e28 	andeq	r0, r0, r8, lsr #28
    49b8:	0f024604 	svceq	0x00024604
    49bc:	0000010d 	andeq	r0, r0, sp, lsl #2
    49c0:	00609102 	rsbeq	r9, r0, r2, lsl #2
    49c4:	001cc234 	andseq	ip, ip, r4, lsr r2
    49c8:	28bb0400 	ldmcs	fp!, {sl}
    49cc:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
    49d0:	00013e7c 	andeq	r3, r1, ip, ror lr
    49d4:	000001a4 	andeq	r0, r0, r4, lsr #3
    49d8:	0bf09c01 	bleq	ffc2b9e4 <__bss_end__+0xffae299c>
    49dc:	202d0000 	eorcs	r0, sp, r0
    49e0:	0400000c 	streq	r0, [r0], #-12
    49e4:	011943bb 			; <UNDEFINED> instruction: 0x011943bb
    49e8:	91020000 	mrsls	r0, (UNDEF: 2)
    49ec:	1c4b2d5c 	mcrrne	13, 5, r2, fp, cr12
    49f0:	bb040000 	bllt	1049f8 <morecore_area+0xbb9f8>
    49f4:	0002bf5c 	andeq	fp, r2, ip, asr pc
    49f8:	58910200 	ldmpl	r1, {r9}
    49fc:	30726d32 	rsbscc	r6, r2, r2, lsr sp
    4a00:	44bc0400 	ldrtmi	r0, [ip], #1024	; 0x400
    4a04:	00000bf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4a08:	32549102 	subscc	r9, r4, #-2147483648	; 0x80000000
    4a0c:	0031726d 	eorseq	r7, r1, sp, ror #4
    4a10:	f054bc04 			; <UNDEFINED> instruction: 0xf054bc04
    4a14:	0200000b 	andeq	r0, r0, #11
    4a18:	6d325091 	ldcvs	0, cr5, [r2, #-580]!	; 0xfffffdbc
    4a1c:	04003272 	streq	r3, [r0], #-626	; 0xfffffd8e
    4a20:	0bf064bc 	bleq	ffc1dd18 <__bss_end__+0xffad4cd0>
    4a24:	91020000 	mrsls	r0, (UNDEF: 2)
    4a28:	726d3200 	rsbvc	r3, sp, #0, 4
    4a2c:	bc040033 	stclt	0, cr0, [r4], {51}	; 0x33
    4a30:	000bf074 	andeq	pc, fp, r4, ror r0	; <UNPREDICTABLE>
    4a34:	04910200 	ldreq	r0, [r1], #512	; 0x200
    4a38:	0028a912 	eoreq	sl, r8, r2, lsl r9
    4a3c:	18be0400 	ldmne	lr!, {sl}
    4a40:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
    4a44:	12749102 	rsbsne	r9, r4, #-2147483648	; 0x80000000
    4a48:	0000113b 	andeq	r1, r0, fp, lsr r1
    4a4c:	0d0fbf04 	stceq	15, cr11, [pc, #-16]	; 4a44 <errno+0x4a40>
    4a50:	02000001 	andeq	r0, r0, #1
    4a54:	40127091 	mulsmi	r2, r1, r0
    4a58:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    4a5c:	010d0fc0 	smlabteq	sp, r0, pc, r0	; <UNPREDICTABLE>
    4a60:	91020000 	mrsls	r0, (UNDEF: 2)
    4a64:	1145126c 	cmpne	r5, ip, ror #4
    4a68:	c1040000 	mrsgt	r0, (UNDEF: 4)
    4a6c:	00010d0f 	andeq	r0, r1, pc, lsl #26
    4a70:	68910200 	ldmvs	r1, {r9}
    4a74:	00111412 	andseq	r1, r1, r2, lsl r4
    4a78:	0fc20400 	svceq	0x00c20400
    4a7c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4a80:	00649102 	rsbeq	r9, r4, r2, lsl #2
    4a84:	010d040c 	tsteq	sp, ip, lsl #8
    4a88:	99370000 	ldmdbls	r7!, {}	; <UNPREDICTABLE>
    4a8c:	0300000d 	movweq	r0, #13
    4a90:	3dd01492 	cfldrdcc	mvd1, [r0, #584]	; 0x248
    4a94:	00ac0001 	adceq	r0, ip, r1
    4a98:	9c010000 	stcls	0, cr0, [r1], {-0}
    4a9c:	00000d05 	andeq	r0, r0, r5, lsl #26
    4aa0:	73797332 	cmnvc	r9, #-939524096	; 0xc8000000
    4aa4:	30920300 	addscc	r0, r2, r0, lsl #6
    4aa8:	0000010d 	andeq	r0, r0, sp, lsl #2
    4aac:	2d6c9102 	stfcsp	f1, [ip, #-8]!
    4ab0:	00000c20 	andeq	r0, r0, r0, lsr #24
    4ab4:	0d3f9203 	lfmeq	f1, 1, [pc, #-12]!	; 4ab0 <errno+0x4aac>
    4ab8:	02000001 	andeq	r0, r0, #1
    4abc:	ae2d6891 	mcrge	8, 1, r6, cr13, cr1, {4}
    4ac0:	03000011 	movweq	r0, #17
    4ac4:	0bf05092 	bleq	ffc18d14 <__bss_end__+0xffacfccc>
    4ac8:	91020000 	mrsls	r0, (UNDEF: 2)
    4acc:	10f22d64 	rscsne	r2, r2, r4, ror #26
    4ad0:	92030000 	andls	r0, r3, #0
    4ad4:	00010d65 	andeq	r0, r1, r5, ror #26
    4ad8:	60910200 	addsvs	r0, r1, r0, lsl #4
    4adc:	000ad32d 	andeq	sp, sl, sp, lsr #6
    4ae0:	31930300 	orrscc	r0, r3, r0, lsl #6
    4ae4:	00000bf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4ae8:	2d009102 	stfcsd	f1, [r0, #-8]
    4aec:	000009dd 	ldrdeq	r0, [r0], -sp
    4af0:	f0469303 			; <UNDEFINED> instruction: 0xf0469303
    4af4:	0200000b 	andeq	r0, r0, #11
    4af8:	e82d0491 	stmda	sp!, {r0, r4, r7, sl}
    4afc:	03000009 	movweq	r0, #9
    4b00:	0bf05d93 	bleq	ffc1c154 <__bss_end__+0xffad310c>
    4b04:	91020000 	mrsls	r0, (UNDEF: 2)
    4b08:	09f32d08 	ldmibeq	r3!, {r3, r8, sl, fp, sp}^
    4b0c:	93030000 	movwls	r0, #12288	; 0x3000
    4b10:	000bf074 	andeq	pc, fp, r4, ror r0	; <UNPREDICTABLE>
    4b14:	0c910200 	lfmeq	f0, 4, [r1], {0}
    4b18:	0009fe2d 	andeq	pc, r9, sp, lsr #28
    4b1c:	8b930300 	blhi	fe4c5724 <__bss_end__+0xfe37c6dc>
    4b20:	00000bf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4b24:	2d109102 	ldfcsd	f1, [r0, #-8]
    4b28:	0000093a 	andeq	r0, r0, sl, lsr r9
    4b2c:	0d3f9403 	cfldrseq	mvf9, [pc, #-12]!	; 4b28 <errno+0x4b24>
    4b30:	02000001 	andeq	r0, r0, #1
    4b34:	ce121491 	cfcmpsgt	r1, mvf2, mvf1
    4b38:	0300000c 	movweq	r0, #12
    4b3c:	010d1896 			; <UNDEFINED> instruction: 0x010d1896
    4b40:	50010000 	andpl	r0, r1, r0
    4b44:	0028a912 	eoreq	sl, r8, r2, lsl r9
    4b48:	18970300 	ldmne	r7, {r8, r9}
    4b4c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4b50:	3b125101 	blcc	498f5c <__bss_end__+0x34ff14>
    4b54:	03000011 	movweq	r0, #17
    4b58:	010d189a 			; <UNDEFINED> instruction: 0x010d189a
    4b5c:	52010000 	andpl	r0, r1, #0
    4b60:	00114012 	andseq	r4, r1, r2, lsl r0
    4b64:	189b0300 	ldmne	fp, {r8, r9}
    4b68:	0000010d 	andeq	r0, r0, sp, lsl #2
    4b6c:	45125301 	ldrmi	r5, [r2, #-769]	; 0xfffffcff
    4b70:	03000011 	movweq	r0, #17
    4b74:	010d189c 			; <UNDEFINED> instruction: 0x010d189c
    4b78:	54010000 	strpl	r0, [r1], #-0
    4b7c:	00111412 	andseq	r1, r1, r2, lsl r4
    4b80:	189d0300 	ldmne	sp, {r8, r9}
    4b84:	0000010d 	andeq	r0, r0, sp, lsl #2
    4b88:	09125501 	ldmdbeq	r2, {r0, r8, sl, ip, lr}
    4b8c:	0300000d 	movweq	r0, #13
    4b90:	010d18a1 	smlatbeq	sp, r1, r8, r1
    4b94:	57010000 	strpl	r0, [r1, -r0]
    4b98:	1b602c00 	blne	180fba0 <__bss_end__+0x16c6b58>
    4b9c:	33020000 	movwcc	r0, #8192	; 0x2000
    4ba0:	013d941a 	teqeq	sp, sl, lsl r4
    4ba4:	00003c00 	andeq	r3, r0, r0, lsl #24
    4ba8:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    4bac:	3200000d 	andcc	r0, r0, #13
    4bb0:	33020069 	movwcc	r0, #8297	; 0x2069
    4bb4:	00006929 	andeq	r6, r0, r9, lsr #18
    4bb8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4bbc:	00726d32 	rsbseq	r6, r2, r2, lsr sp
    4bc0:	0d363302 	ldceq	3, cr3, [r6, #-8]!
    4bc4:	02000001 	andeq	r0, r0, #1
    4bc8:	38007091 	stmdacc	r0, {r0, r4, r7, ip, sp, lr}
    4bcc:	00000dc3 	andeq	r0, r0, r3, asr #27
    4bd0:	81252902 			; <UNDEFINED> instruction: 0x81252902
    4bd4:	70000003 	andvc	r0, r0, r3
    4bd8:	2400013d 	strcs	r0, [r0], #-317	; 0xfffffec3
    4bdc:	01000000 	mrseq	r0, (UNDEF: 0)
    4be0:	1d15399c 	vldrne.16	s6, [r5, #-312]	; 0xfffffec8	; <UNPREDICTABLE>
    4be4:	d5010000 	strle	r0, [r1, #-0]
    4be8:	01010101 	tsteq	r1, r1, lsl #2
    4bec:	3d400000 	stclcc	0, cr0, [r0, #-0]
    4bf0:	00300001 	eorseq	r0, r0, r1
    4bf4:	9c010000 	stcls	0, cr0, [r1], {-0}
    4bf8:	00000d89 	andeq	r0, r0, r9, lsl #27
    4bfc:	0002a728 	andeq	sl, r2, r8, lsr #14
    4c00:	01d50100 	bicseq	r0, r5, r0, lsl #2
    4c04:	0002bf30 	andeq	fp, r2, r0, lsr pc
    4c08:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4c0c:	74657223 	strbtvc	r7, [r5], #-547	; 0xfffffddd
    4c10:	01d60100 	bicseq	r0, r6, r0, lsl #2
    4c14:	00010111 	andeq	r0, r1, r1, lsl r1
    4c18:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4c1c:	1dbf3900 			; <UNDEFINED> instruction: 0x1dbf3900
    4c20:	60010000 	andvs	r0, r1, r0
    4c24:	01010101 	tsteq	r1, r1, lsl #2
    4c28:	3d100000 	ldccc	0, cr0, [r0, #-0]
    4c2c:	00300001 	eorseq	r0, r0, r1
    4c30:	9c010000 	stcls	0, cr0, [r1], {-0}
    4c34:	00000dc5 	andeq	r0, r0, r5, asr #27
    4c38:	0002a728 	andeq	sl, r2, r8, lsr #14
    4c3c:	01600100 	cmneq	r0, r0, lsl #2
    4c40:	0002bf2f 	andeq	fp, r2, pc, lsr #30
    4c44:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4c48:	74657223 	strbtvc	r7, [r5], #-547	; 0xfffffddd
    4c4c:	01610100 	cmneq	r1, r0, lsl #2
    4c50:	00010111 	andeq	r0, r1, r1, lsl r1
    4c54:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4c58:	1c103a00 			; <UNDEFINED> instruction: 0x1c103a00
    4c5c:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    4c60:	02bf0101 	adcseq	r0, pc, #1073741824	; 0x40000000
    4c64:	3be80000 	blcc	ffa04c6c <__bss_end__+0xff8bbc24>
    4c68:	01280001 			; <UNDEFINED> instruction: 0x01280001
    4c6c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4c70:	00101828 	andseq	r1, r0, r8, lsr #16
    4c74:	013e0100 	teqeq	lr, r0, lsl #2
    4c78:	00010122 	andeq	r0, r1, r2, lsr #2
    4c7c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    4c80:	001d8e28 	andseq	r8, sp, r8, lsr #28
    4c84:	013e0100 	teqeq	lr, r0, lsl #2
    4c88:	00010135 	andeq	r0, r1, r5, lsr r1
    4c8c:	68910200 	ldmvs	r1, {r9}
    4c90:	001b1028 	andseq	r1, fp, r8, lsr #32
    4c94:	013e0100 	teqeq	lr, r0, lsl #2
    4c98:	00010150 	andeq	r0, r1, r0, asr r1
    4c9c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    4ca0:	00452f28 	subeq	r2, r5, r8, lsr #30
    4ca4:	013e0100 	teqeq	lr, r0, lsl #2
    4ca8:	00010167 	andeq	r0, r1, r7, ror #2
    4cac:	60910200 	addsvs	r0, r1, r0, lsl #4
    4cb0:	0002a72a 	andeq	sl, r2, sl, lsr #14
    4cb4:	013f0100 	teqeq	pc, r0, lsl #2
    4cb8:	0002bf18 	andeq	fp, r2, r8, lsl pc
    4cbc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4cc0:	001ab62f 	andseq	fp, sl, pc, lsr #12
    4cc4:	00095b00 	andeq	r5, r9, r0, lsl #22
    4cc8:	c4030500 	strgt	r0, [r3], #-1280	; 0xfffffb00
    4ccc:	0000027c 	andeq	r0, r0, ip, ror r2
    4cd0:	00040f00 	andeq	r0, r4, r0, lsl #30
    4cd4:	92000400 	andls	r0, r0, #0, 8
    4cd8:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    4cdc:	00011701 	andeq	r1, r1, r1, lsl #14
    4ce0:	1ec50c00 	cdpne	12, 12, cr0, cr5, cr0, {0}
    4ce4:	005f0000 	subseq	r0, pc, r0
    4ce8:	495c0000 	ldmdbmi	ip, {}^	; <UNPREDICTABLE>
    4cec:	00f80001 	rscseq	r0, r8, r1
    4cf0:	35170000 	ldrcc	r0, [r7, #-0]
    4cf4:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
    4cf8:	0200001a 	andeq	r0, r0, #26
    4cfc:	00311b12 	eorseq	r1, r1, r2, lsl fp
    4d00:	1c030000 	stcne	0, cr0, [r3], {-0}
    4d04:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    4d08:	0048000a 	subeq	r0, r8, sl
    4d0c:	07040000 	streq	r0, [r4, -r0]
    4d10:	48000019 	stmdami	r0, {r0, r3, r4}
    4d14:	00000000 	andeq	r0, r0, r0
    4d18:	06040500 	streq	r0, [r4], -r0, lsl #10
    4d1c:	03c50704 	biceq	r0, r5, #4, 14	; 0x100000
    4d20:	04070000 	streq	r0, [r7], #-0
    4d24:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    4d28:	05080600 	streq	r0, [r8, #-1536]	; 0xfffffa00
    4d2c:	00000109 	andeq	r0, r0, r9, lsl #2
    4d30:	00022a08 	andeq	r2, r2, r8, lsl #20
    4d34:	016d0200 	cmneq	sp, r0, lsl #4
    4d38:	00006c19 	andeq	r6, r0, r9, lsl ip
    4d3c:	02260900 	eoreq	r0, r6, #0, 18
    4d40:	01060000 	mrseq	r0, (UNDEF: 6)
    4d44:	00033508 	andeq	r3, r3, r8, lsl #10
    4d48:	00710a00 	rsbseq	r0, r1, r0, lsl #20
    4d4c:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    4d50:	0015f804 	andseq	pc, r5, r4, lsl #16
    4d54:	022f0b00 	eoreq	r0, pc, #0, 22
    4d58:	37030000 	strcc	r0, [r3, -r0]
    4d5c:	00009614 	andeq	r9, r0, r4, lsl r6
    4d60:	5f040c00 	svcpl	0x00040c00
    4d64:	0a000000 	beq	4d6c <errno+0x4d68>
    4d68:	00000090 	muleq	r0, r0, r0
    4d6c:	00023c0b 	andeq	r3, r2, fp, lsl #24
    4d70:	14380300 	ldrtne	r0, [r8], #-768	; 0xfffffd00
    4d74:	00000096 	muleq	r0, r6, r0
    4d78:	0002350b 	andeq	r3, r2, fp, lsl #10
    4d7c:	14390300 	ldrtne	r0, [r9], #-768	; 0xfffffd00
    4d80:	00000096 	muleq	r0, r6, r0
    4d84:	2e060106 	adfcss	f0, f6, f6
    4d88:	06000003 	streq	r0, [r0], -r3
    4d8c:	032c0801 			; <UNDEFINED> instruction: 0x032c0801
    4d90:	02060000 	andeq	r0, r6, #0
    4d94:	00046605 	andeq	r6, r4, r5, lsl #12
    4d98:	07020600 	streq	r0, [r2, -r0, lsl #12]
    4d9c:	00000352 	andeq	r0, r0, r2, asr r3
    4da0:	00030d02 	andeq	r0, r3, r2, lsl #26
    4da4:	253d0400 	ldrcs	r0, [sp, #-1024]!	; 0xfffffc00
    4da8:	0000004a 	andeq	r0, r0, sl, asr #32
    4dac:	bb070806 	bllt	1c6dcc <__bss_end__+0x7dd84>
    4db0:	02000003 	andeq	r0, r0, #3
    4db4:	00000372 	andeq	r0, r0, r2, ror r3
    4db8:	cf157104 	svcgt	0x00157104
    4dbc:	02000000 	andeq	r0, r0, #0
    4dc0:	000003d2 	ldrdeq	r0, [r0], -r2
    4dc4:	e2138004 	ands	r8, r3, #4
    4dc8:	0d000000 	stceq	0, cr0, [r0, #-0]
    4dcc:	00000392 	muleq	r0, r2, r3
    4dd0:	004a0407 	subeq	r0, sl, r7, lsl #8
    4dd4:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    4dd8:	0001310e 	andeq	r3, r1, lr, lsl #2
    4ddc:	03190e00 	tsteq	r9, #0, 28
    4de0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    4de4:	00000480 	andeq	r0, r0, r0, lsl #9
    4de8:	03f80e01 	mvnseq	r0, #1, 28
    4dec:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    4df0:	0000048f 	andeq	r0, r0, pc, lsl #9
    4df4:	04cd0e03 	strbeq	r0, [sp], #3587	; 0xe03
    4df8:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    4dfc:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    4e00:	dc020005 	stcle	0, cr0, [r2], {5}
    4e04:	05000003 	streq	r0, [r0, #-3]
    4e08:	00fa0313 	rscseq	r0, sl, r3, lsl r3
    4e0c:	310a0000 	mrscc	r0, (UNDEF: 10)
    4e10:	0f000001 	svceq	0x00000001
    4e14:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    4e18:	3d591505 	cfldr64cc	mvdx1, [r9, #-20]	; 0xffffffec
    4e1c:	05000001 	streq	r0, [r0, #-1]
    4e20:	027d2403 	rsbseq	r2, sp, #50331648	; 0x3000000
    4e24:	00cf1000 	sbceq	r1, pc, r0
    4e28:	01640000 	cmneq	r4, r0
    4e2c:	4a110000 	bmi	444e34 <__bss_end__+0x2fbdec>
    4e30:	00000000 	andeq	r0, r0, r0
    4e34:	02a71200 	adceq	r1, r7, #0, 4
    4e38:	06040000 	streq	r0, [r4], -r0
    4e3c:	81080138 	tsthi	r8, r8, lsr r1
    4e40:	13000001 	movwne	r0, #1
    4e44:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    4e48:	11013906 	tstne	r1, r6, lsl #18
    4e4c:	00000154 	andeq	r0, r0, r4, asr r1
    4e50:	9d080000 	stcls	0, cr0, [r8, #-0]
    4e54:	06000003 	streq	r0, [r0], -r3
    4e58:	6421013b 	strtvs	r0, [r1], #-315	; 0xfffffec5
    4e5c:	14000001 	strne	r0, [r0], #-1
    4e60:	00000470 	andeq	r0, r0, r0, ror r4
    4e64:	0b070200 	bleq	1c566c <__bss_end__+0x7c624>
    4e68:	0001fd10 	andeq	pc, r1, r0, lsl sp	; <UNPREDICTABLE>
    4e6c:	61741500 	cmnvs	r4, r0, lsl #10
    4e70:	0c070067 	stceq	0, cr0, [r7], {103}	; 0x67
    4e74:	00018118 	andeq	r8, r1, r8, lsl r1
    4e78:	6d150000 	ldcvs	0, cr0, [r5, #-0]
    4e7c:	07006773 	smlsdxeq	r0, r3, r7, r6
    4e80:	01fd0f0d 	mvnseq	r0, sp, lsl #30
    4e84:	16040000 	strne	r0, [r4], -r0
    4e88:	0000033a 	andeq	r0, r0, sl, lsr r3
    4e8c:	e20f0e07 	and	r0, pc, #7, 28	; 0x70
    4e90:	e4000000 	str	r0, [r0], #-0
    4e94:	037c1601 	cmneq	ip, #1048576	; 0x100000
    4e98:	0f070000 	svceq	0x00070000
    4e9c:	00020d0f 	andeq	r0, r2, pc, lsl #26
    4ea0:	1601e800 	strne	lr, [r1], -r0, lsl #16
    4ea4:	00000365 	andeq	r0, r0, r5, ror #6
    4ea8:	ee0f1007 	cdp	0, 0, cr1, cr15, cr7, {0}
    4eac:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    4eb0:	03001601 	movweq	r1, #1537	; 0x601
    4eb4:	11070000 	mrsne	r0, (UNDEF: 7)
    4eb8:	0000ee0f 	andeq	lr, r0, pc, lsl #28
    4ebc:	1601f800 	strne	pc, [r1], -r0, lsl #16
    4ec0:	0000040c 	andeq	r0, r0, ip, lsl #8
    4ec4:	e20f1207 	and	r1, pc, #1879048192	; 0x70000000
    4ec8:	fc000000 	stc2	0, cr0, [r0], {-0}
    4ecc:	e2100001 	ands	r0, r0, #1
    4ed0:	0d000000 	stceq	0, cr0, [r0, #-0]
    4ed4:	11000002 	tstne	r0, r2
    4ed8:	0000004a 	andeq	r0, r0, sl, asr #32
    4edc:	e2100077 	ands	r0, r0, #119	; 0x77
    4ee0:	1d000000 	stcne	0, cr0, [r0, #-0]
    4ee4:	11000002 	tstne	r0, r2
    4ee8:	0000004a 	andeq	r0, r0, sl, asr #32
    4eec:	43170002 	tstmi	r7, #2
    4ef0:	07000003 	streq	r0, [r0, -r3]
    4ef4:	018e0313 	orreq	r0, lr, r3, lsl r3
    4ef8:	02000000 	andeq	r0, r0, #0
    4efc:	0002e80b 	andeq	lr, r2, fp, lsl #16
    4f00:	210d0800 	tstcs	sp, r0, lsl #16
    4f04:	00000237 	andeq	r0, r0, r7, lsr r2
    4f08:	021d040c 	andseq	r0, sp, #12, 8	; 0xc000000
    4f0c:	04060000 	streq	r0, [r6], #-0
    4f10:	0003c007 	andeq	ip, r3, r7
    4f14:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    4f18:	0000010e 	andeq	r0, r0, lr, lsl #2
    4f1c:	00189c0b 	andseq	r9, r8, fp, lsl #24
    4f20:	0cf80900 			; <UNDEFINED> instruction: 0x0cf80900
    4f24:	00000051 	andeq	r0, r0, r1, asr r0
    4f28:	001f2418 	andseq	r2, pc, r8, lsl r4	; <UNPREDICTABLE>
    4f2c:	063e0100 	ldrteq	r0, [lr], -r0, lsl #2
    4f30:	00000244 	andeq	r0, r0, r4, asr #4
    4f34:	00014a30 	andeq	r4, r1, r0, lsr sl
    4f38:	00000024 	andeq	r0, r0, r4, lsr #32
    4f3c:	02899c01 	addeq	r9, r9, #256	; 0x100
    4f40:	61190000 	tstvs	r9, r0
    4f44:	3e010070 	mcrcc	0, 0, r0, cr1, cr0, {3}
    4f48:	0000251d 	andeq	r2, r0, sp, lsl r5
    4f4c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    4f50:	0018eb1a 	andseq	lr, r8, sl, lsl fp
    4f54:	00029900 	andeq	r9, r2, r0, lsl #18
    4f58:	78100000 	ldmdavc	r0, {}	; <UNPREDICTABLE>
    4f5c:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    4f60:	11000002 	tstne	r0, r2
    4f64:	0000004a 	andeq	r0, r0, sl, asr #32
    4f68:	890a000e 	stmdbhi	sl, {r1, r2, r3}
    4f6c:	1b000002 	blne	4f7c <errno+0x4f78>
    4f70:	00001f3e 	andeq	r1, r0, lr, lsr pc
    4f74:	44063701 	strmi	r3, [r6], #-1793	; 0xfffff8ff
    4f78:	0c000002 	stceq	0, cr0, [r0], {2}
    4f7c:	2400014a 	strcs	r0, [r0], #-330	; 0xfffffeb6
    4f80:	01000000 	mrseq	r0, (UNDEF: 0)
    4f84:	0002d09c 	muleq	r2, ip, r0
    4f88:	70611900 	rsbvc	r1, r1, r0, lsl #18
    4f8c:	18370100 	ldmdane	r7!, {r8}
    4f90:	00000025 	andeq	r0, r0, r5, lsr #32
    4f94:	1a749102 	bne	1d293a4 <__bss_end__+0x1be035c>
    4f98:	000018eb 	andeq	r1, r0, fp, ror #17
    4f9c:	000002e0 	andeq	r0, r0, r0, ror #5
    4fa0:	00781000 	rsbseq	r1, r8, r0
    4fa4:	02e00000 	rsceq	r0, r0, #0
    4fa8:	4a110000 	bmi	444fb0 <__bss_end__+0x2fbf68>
    4fac:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    4fb0:	02d00a00 	sbcseq	r0, r0, #0, 20
    4fb4:	331b0000 	tstcc	fp, #0
    4fb8:	0100001f 	tsteq	r0, pc, lsl r0
    4fbc:	02440630 	subeq	r0, r4, #48, 12	; 0x3000000
    4fc0:	49e80000 	stmibmi	r8!, {}^	; <UNPREDICTABLE>
    4fc4:	00240001 	eoreq	r0, r4, r1
    4fc8:	9c010000 	stcls	0, cr0, [r1], {-0}
    4fcc:	00000317 	andeq	r0, r0, r7, lsl r3
    4fd0:	00706119 	rsbseq	r6, r0, r9, lsl r1
    4fd4:	25193001 	ldrcs	r3, [r9, #-1]
    4fd8:	02000000 	andeq	r0, r0, #0
    4fdc:	eb1a7491 	bl	6a2228 <__bss_end__+0x5591e0>
    4fe0:	27000018 	smladcs	r0, r8, r0, r0
    4fe4:	00000003 	andeq	r0, r0, r3
    4fe8:	00007810 	andeq	r7, r0, r0, lsl r8
    4fec:	00032700 	andeq	r2, r3, r0, lsl #14
    4ff0:	004a1100 	subeq	r1, sl, r0, lsl #2
    4ff4:	000a0000 	andeq	r0, sl, r0
    4ff8:	0003170a 	andeq	r1, r3, sl, lsl #14
    4ffc:	1f481800 	svcne	0x00481800
    5000:	2a010000 	bcs	45008 <static_tls+0x1008>
    5004:	00024406 	andeq	r4, r2, r6, lsl #8
    5008:	0149c400 	cmpeq	r9, r0, lsl #8
    500c:	00002400 	andeq	r2, r0, r0, lsl #8
    5010:	5e9c0100 	fmlple	f0, f4, f0
    5014:	19000003 	stmdbne	r0, {r0, r1}
    5018:	01007061 	tsteq	r0, r1, rrx
    501c:	0025192a 	eoreq	r1, r5, sl, lsr #18
    5020:	91020000 	mrsls	r0, (UNDEF: 2)
    5024:	18eb1a74 	stmiane	fp!, {r2, r4, r5, r6, r9, fp, ip}^
    5028:	03270000 			; <UNDEFINED> instruction: 0x03270000
    502c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5030:	00001e9e 	muleq	r0, lr, lr
    5034:	44062401 	strmi	r2, [r6], #-1025	; 0xfffffbff
    5038:	a0000002 	andge	r0, r0, r2
    503c:	24000149 	strcs	r0, [r0], #-329	; 0xfffffeb7
    5040:	01000000 	mrseq	r0, (UNDEF: 0)
    5044:	0003909c 	muleq	r3, ip, r0
    5048:	70611900 	rsbvc	r1, r1, r0, lsl #18
    504c:	19240100 	stmdbne	r4!, {r8}
    5050:	00000025 	andeq	r0, r0, r5, lsr #32
    5054:	1a749102 	bne	1d29464 <__bss_end__+0x1be041c>
    5058:	000018eb 	andeq	r1, r0, fp, ror #17
    505c:	00000327 	andeq	r0, r0, r7, lsr #6
    5060:	1eb21800 	cdpne	8, 11, cr1, cr2, cr0, {0}
    5064:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    5068:	00024406 	andeq	r4, r2, r6, lsl #8
    506c:	01497c00 	cmpeq	r9, r0, lsl #24
    5070:	00002400 	andeq	r2, r0, r0, lsl #8
    5074:	c29c0100 	addsgt	r0, ip, #0, 2
    5078:	19000003 	stmdbne	r0, {r0, r1}
    507c:	01007061 	tsteq	r0, r1, rrx
    5080:	0025211e 	eoreq	r2, r5, lr, lsl r1
    5084:	91020000 	mrsls	r0, (UNDEF: 2)
    5088:	18eb1a74 	stmiane	fp!, {r2, r4, r5, r6, r9, fp, ip}^
    508c:	03d20000 	bicseq	r0, r2, #0
    5090:	10000000 	andne	r0, r0, r0
    5094:	00000078 	andeq	r0, r0, r8, ror r0
    5098:	000003d2 	ldrdeq	r0, [r0], -r2
    509c:	00004a11 	andeq	r4, r0, r1, lsl sl
    50a0:	0a001200 	beq	98a8 <errno+0x98a4>
    50a4:	000003c2 	andeq	r0, r0, r2, asr #7
    50a8:	001ea91b 	andseq	sl, lr, fp, lsl r9
    50ac:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    50b0:	00000244 	andeq	r0, r0, r4, asr #4
    50b4:	00014968 	andeq	r4, r1, r8, ror #18
    50b8:	00000014 	andeq	r0, r0, r4, lsl r0
    50bc:	04009c01 	streq	r9, [r0], #-3073	; 0xfffff3ff
    50c0:	61190000 	tstvs	r9, r0
    50c4:	18010070 	stmdane	r1, {r4, r5, r6}
    50c8:	00002517 	andeq	r2, r0, r7, lsl r5
    50cc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    50d0:	1f531c00 	svcne	0x00531c00
    50d4:	0f010000 	svceq	0x00010000
    50d8:	01495c0d 	cmpeq	r9, sp, lsl #24
    50dc:	00000c00 	andeq	r0, r0, r0, lsl #24
    50e0:	009c0100 	addseq	r0, ip, r0, lsl #2
    50e4:	00000801 	andeq	r0, r0, r1, lsl #16
    50e8:	1a410004 	bne	1045100 <__bss_end__+0xefc0b8>
    50ec:	01040000 	mrseq	r0, (UNDEF: 4)
    50f0:	00000117 	andeq	r0, r0, r7, lsl r1
    50f4:	0020980c 	eoreq	r9, r0, ip, lsl #16
    50f8:	00005f00 	andeq	r5, r0, r0, lsl #30
    50fc:	014a5400 	cmpeq	sl, r0, lsl #8
    5100:	0003c800 	andeq	ip, r3, r0, lsl #16
    5104:	00377000 	eorseq	r7, r7, r0
    5108:	1a1e0200 	bne	785910 <__bss_end__+0x63c8c8>
    510c:	12020000 	andne	r0, r2, #0
    5110:	0000311b 	andeq	r3, r0, fp, lsl r1
    5114:	1a1c0300 	bne	705d1c <__bss_end__+0x5bccd4>
    5118:	14040000 	strne	r0, [r4], #-0
    511c:	00004800 	andeq	r4, r0, r0, lsl #16
    5120:	19070400 	stmdbne	r7, {sl}
    5124:	00480000 	subeq	r0, r8, r0
    5128:	00000000 	andeq	r0, r0, r0
    512c:	2f020405 	svccs	0x00020405
    5130:	0200000a 	andeq	r0, r0, #10
    5134:	005b186e 	subseq	r1, fp, lr, ror #16
    5138:	4a060000 	bmi	185140 <__bss_end__+0x3c0f8>
    513c:	07000000 	streq	r0, [r0, -r0]
    5140:	03c50704 	biceq	r0, r5, #4, 14	; 0x100000
    5144:	04080000 	streq	r0, [r8], #-0
    5148:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    514c:	1a9b0200 	bne	fe6c5954 <__bss_end__+0xfe57c90c>
    5150:	d4020000 	strle	r0, [r2], #-0
    5154:	00007510 	andeq	r7, r0, r0, lsl r5
    5158:	05080700 	streq	r0, [r8, #-1792]	; 0xfffff900
    515c:	00000109 	andeq	r0, r0, r9, lsl #2
    5160:	00022a09 	andeq	r2, r2, r9, lsl #20
    5164:	016d0200 	cmneq	sp, r0, lsl #4
    5168:	00008919 	andeq	r8, r0, r9, lsl r9
    516c:	02260a00 	eoreq	r0, r6, #0, 20
    5170:	01070000 	mrseq	r0, (UNDEF: 7)
    5174:	00033508 	andeq	r3, r3, r8, lsl #10
    5178:	008e0600 	addeq	r0, lr, r0, lsl #12
    517c:	08070000 	stmdaeq	r7, {}	; <UNPREDICTABLE>
    5180:	0015f804 	andseq	pc, r5, r4, lsl #16
    5184:	022f0b00 	eoreq	r0, pc, #0, 22
    5188:	37030000 	strcc	r0, [r3, -r0]
    518c:	0000b314 	andeq	fp, r0, r4, lsl r3
    5190:	7c040c00 	stcvc	12, cr0, [r4], {-0}
    5194:	06000000 	streq	r0, [r0], -r0
    5198:	000000ad 	andeq	r0, r0, sp, lsr #1
    519c:	00023c0b 	andeq	r3, r2, fp, lsl #24
    51a0:	14380300 	ldrtne	r0, [r8], #-768	; 0xfffffd00
    51a4:	000000b3 	strheq	r0, [r0], -r3
    51a8:	0002350b 	andeq	r3, r2, fp, lsl #10
    51ac:	14390300 	ldrtne	r0, [r9], #-768	; 0xfffffd00
    51b0:	000000b3 	strheq	r0, [r0], -r3
    51b4:	00092002 	andeq	r2, r9, r2
    51b8:	18730200 	ldmdane	r3!, {r9}^
    51bc:	0000005b 	andeq	r0, r0, fp, asr r0
    51c0:	2e060107 	adfcss	f0, f6, f7
    51c4:	07000003 	streq	r0, [r0, -r3]
    51c8:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
    51cc:	01070000 	mrseq	r0, (UNDEF: 7)
    51d0:	00032c08 	andeq	r2, r3, r8, lsl #24
    51d4:	07020700 	streq	r0, [r2, -r0, lsl #14]
    51d8:	00000352 	andeq	r0, r0, r2, asr r3
    51dc:	bb070807 	bllt	1c7200 <__bss_end__+0x7e1b8>
    51e0:	0b000003 	bleq	51f4 <errno+0x51f0>
    51e4:	00001732 	andeq	r1, r0, r2, lsr r7
    51e8:	621a1004 	andsvs	r1, sl, #4
    51ec:	0b000000 	bleq	51f4 <errno+0x51f0>
    51f0:	00001f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
    51f4:	170e1404 	strne	r1, [lr, -r4, lsl #8]
    51f8:	0c000001 	stceq	0, cr0, [r0], {1}
    51fc:	00008e04 	andeq	r8, r0, r4, lsl #28
    5200:	20160b00 	andscs	r0, r6, r0, lsl #22
    5204:	14040000 	strne	r0, [r4], #-0
    5208:	0001172e 	andeq	r1, r1, lr, lsr #14
    520c:	04080700 	streq	r0, [r8], #-1792	; 0xfffff900
    5210:	000015f3 	strdeq	r1, [r0], -r3
    5214:	00030d02 	andeq	r0, r3, r2, lsl #26
    5218:	253d0500 	ldrcs	r0, [sp, #-1280]!	; 0xfffffb00
    521c:	0000005b 	andeq	r0, r0, fp, asr r0
    5220:	00037202 	andeq	r7, r3, r2, lsl #4
    5224:	15710500 	ldrbne	r0, [r1, #-1280]!	; 0xfffffb00
    5228:	00000130 	andeq	r0, r0, r0, lsr r1
    522c:	0003d202 	andeq	sp, r3, r2, lsl #4
    5230:	13800500 	orrne	r0, r0, #0, 10
    5234:	0000013c 	andeq	r0, r0, ip, lsr r1
    5238:	0003920d 	andeq	r9, r3, sp, lsl #4
    523c:	5b040700 	blpl	106e44 <morecore_area+0xbde44>
    5240:	06000000 	streq	r0, [r0], -r0
    5244:	018b0e08 	orreq	r0, fp, r8, lsl #28
    5248:	190e0000 	stmdbne	lr, {}	; <UNPREDICTABLE>
    524c:	00000003 	andeq	r0, r0, r3
    5250:	0004800e 	andeq	r8, r4, lr
    5254:	f80e0100 			; <UNDEFINED> instruction: 0xf80e0100
    5258:	02000003 	andeq	r0, r0, #3
    525c:	00048f0e 	andeq	r8, r4, lr, lsl #30
    5260:	cd0e0300 	stcgt	3, cr0, [lr, #-0]
    5264:	04000004 	streq	r0, [r0], #-4
    5268:	0002bd0e 	andeq	fp, r2, lr, lsl #26
    526c:	02000500 	andeq	r0, r0, #0, 10
    5270:	000003dc 	ldrdeq	r0, [r0], -ip
    5274:	54031306 	strpl	r1, [r3], #-774	; 0xfffffcfa
    5278:	06000001 	streq	r0, [r0], -r1
    527c:	0000018b 	andeq	r0, r0, fp, lsl #3
    5280:	0004b40f 	andeq	fp, r4, pc, lsl #8
    5284:	59150600 	ldmdbpl	r5, {r9, sl}
    5288:	00000197 	muleq	r0, r7, r1
    528c:	7d280305 	stcvc	3, cr0, [r8, #-20]!	; 0xffffffec
    5290:	e80d0002 	stmda	sp, {r1}
    5294:	0700000e 	streq	r0, [r0, -lr]
    5298:	00005b04 	andeq	r5, r0, r4, lsl #22
    529c:	0e090700 	cdpeq	7, 0, cr0, cr9, cr0, {0}
    52a0:	000001cd 	andeq	r0, r0, sp, asr #3
    52a4:	000a360e 	andeq	r3, sl, lr, lsl #12
    52a8:	bb0e0500 	bllt	3866b0 <__bss_end__+0x23d668>
    52ac:	0600000b 	streq	r0, [r0], -fp
    52b0:	0d290d00 	stceq	13, cr0, [r9, #-0]
    52b4:	04070000 	streq	r0, [r7], #-0
    52b8:	0000005b 	andeq	r0, r0, fp, asr r0
    52bc:	f2063408 	vshl.s8	d3, d8, d6
    52c0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    52c4:	000009ca 	andeq	r0, r0, sl, asr #19
    52c8:	0ef50e07 	cdpeq	14, 15, cr0, cr5, cr7, {0}
    52cc:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    52d0:	00000df6 	strdeq	r0, [r0], -r6
    52d4:	30100078 	andscc	r0, r0, r8, ror r0
    52d8:	02000001 	andeq	r0, r0, #1
    52dc:	11000002 	tstne	r0, r2
    52e0:	0000005b 	andeq	r0, r0, fp, asr r0
    52e4:	a7120000 	ldrge	r0, [r2, -r0]
    52e8:	04000002 	streq	r0, [r0], #-2
    52ec:	08013809 	stmdaeq	r1, {r0, r3, fp, ip, sp}
    52f0:	0000021f 	andeq	r0, r0, pc, lsl r2
    52f4:	0003b013 	andeq	fp, r3, r3, lsl r0
    52f8:	01390900 	teqeq	r9, r0, lsl #18
    52fc:	0001f211 	andeq	pc, r1, r1, lsl r2	; <UNPREDICTABLE>
    5300:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    5304:	0000039d 	muleq	r0, sp, r3
    5308:	21013b09 	tstcs	r1, r9, lsl #22
    530c:	00000202 	andeq	r0, r0, r2, lsl #4
    5310:	00047014 	andeq	r7, r4, r4, lsl r0
    5314:	0a020000 	beq	8531c <morecore_area+0x3c31c>
    5318:	029b100b 	addseq	r1, fp, #11
    531c:	74150000 	ldrvc	r0, [r5], #-0
    5320:	0a006761 	beq	1f0ac <realloc+0x54>
    5324:	021f180c 	andseq	r1, pc, #12, 16	; 0xc0000
    5328:	15000000 	strne	r0, [r0, #-0]
    532c:	0067736d 	rsbeq	r7, r7, sp, ror #6
    5330:	9b0f0d0a 	blls	3c8760 <__bss_end__+0x27f718>
    5334:	04000002 	streq	r0, [r0], #-2
    5338:	00033a16 	andeq	r3, r3, r6, lsl sl
    533c:	0f0e0a00 	svceq	0x000e0a00
    5340:	0000013c 	andeq	r0, r0, ip, lsr r1
    5344:	7c1601e4 	ldfvcs	f0, [r6], {228}	; 0xe4
    5348:	0a000003 	beq	535c <errno+0x5358>
    534c:	02ab0f0f 	adceq	r0, fp, #15, 30	; 0x3c
    5350:	01e80000 	mvneq	r0, r0
    5354:	00036516 	andeq	r6, r3, r6, lsl r5
    5358:	0f100a00 	svceq	0x00100a00
    535c:	00000148 	andeq	r0, r0, r8, asr #2
    5360:	001601f4 			; <UNDEFINED> instruction: 0x001601f4
    5364:	0a000003 	beq	5378 <errno+0x5374>
    5368:	01480f11 	cmpeq	r8, r1, lsl pc
    536c:	01f80000 	mvnseq	r0, r0
    5370:	00040c16 	andeq	r0, r4, r6, lsl ip
    5374:	0f120a00 	svceq	0x00120a00
    5378:	0000013c 	andeq	r0, r0, ip, lsr r1
    537c:	100001fc 	strdne	r0, [r0], -ip
    5380:	0000013c 	andeq	r0, r0, ip, lsr r1
    5384:	000002ab 	andeq	r0, r0, fp, lsr #5
    5388:	00005b11 	andeq	r5, r0, r1, lsl fp
    538c:	10007700 	andne	r7, r0, r0, lsl #14
    5390:	0000013c 	andeq	r0, r0, ip, lsr r1
    5394:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    5398:	00005b11 	andeq	r5, r0, r1, lsl fp
    539c:	17000200 	strne	r0, [r0, -r0, lsl #4]
    53a0:	00000343 	andeq	r0, r0, r3, asr #6
    53a4:	2c03130a 	stccs	3, cr1, [r3], {10}
    53a8:	00000002 	andeq	r0, r0, r2
    53ac:	02e80b02 	rsceq	r0, r8, #2048	; 0x800
    53b0:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    53b4:	0002d521 	andeq	sp, r2, r1, lsr #10
    53b8:	bb040c00 	bllt	1083c0 <morecore_area+0xbf3c0>
    53bc:	0d000002 	stceq	0, cr0, [r0, #-8]
    53c0:	0000100d 	andeq	r1, r0, sp
    53c4:	005b0407 	subseq	r0, fp, r7, lsl #8
    53c8:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    53cc:	0003a806 	andeq	sl, r3, r6, lsl #16
    53d0:	0ac10e00 	beq	ff048bd8 <__bss_end__+0xfeeffb90>
    53d4:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    53d8:	0000122e 	andeq	r1, r0, lr, lsr #4
    53dc:	0b7f0e01 	bleq	1fc8be8 <__bss_end__+0x1e7fba0>
    53e0:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    53e4:	00000f8e 	andeq	r0, r0, lr, lsl #31
    53e8:	109a0e03 	addsne	r0, sl, r3, lsl #28
    53ec:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    53f0:	00000b19 	andeq	r0, r0, r9, lsl fp
    53f4:	0fb90e05 	svceq	0x00b90e05
    53f8:	0e060000 	cdpeq	0, 0, cr0, cr6, cr0, {0}
    53fc:	00000b33 	andeq	r0, r0, r3, lsr fp
    5400:	0a950e07 	beq	fe548c24 <__bss_end__+0xfe3ffbdc>
    5404:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    5408:	00000a09 	andeq	r0, r0, r9, lsl #20
    540c:	0f2d0e09 	svceq	0x002d0e09
    5410:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    5414:	00000ced 	andeq	r0, r0, sp, ror #25
    5418:	10680e0b 	rsbne	r0, r8, fp, lsl #28
    541c:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
    5420:	00000fe3 	andeq	r0, r0, r3, ror #31
    5424:	10ab0e0d 	adcne	r0, fp, sp, lsl #28
    5428:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    542c:	000011f0 	strdeq	r1, [r0], -r0
    5430:	0cc20e0f 	stcleq	14, cr0, [r2], {15}
    5434:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    5438:	00000bd4 	ldrdeq	r0, [r0], -r4
    543c:	0ed10e11 	mrceq	14, 6, r0, cr1, cr1, {0}
    5440:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
    5444:	0000120a 	andeq	r1, r0, sl, lsl #4
    5448:	0b750e13 	bleq	1d48c9c <__bss_end__+0x1bffc54>
    544c:	0e140000 	cdpeq	0, 1, cr0, cr4, cr0, {0}
    5450:	00000a79 	andeq	r0, r0, r9, ror sl
    5454:	0ff70e15 	svceq	0x00f70e15
    5458:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
    545c:	00000c25 	andeq	r0, r0, r5, lsr #24
    5460:	0b650e17 	bleq	1948cc4 <__bss_end__+0x17ffc7c>
    5464:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    5468:	00000c97 	muleq	r0, r7, ip
    546c:	117a0e19 	cmnne	sl, r9, lsl lr
    5470:	0e1a0000 	cdpeq	0, 1, cr0, cr10, cr0, {0}
    5474:	00000c86 	andeq	r0, r0, r6, lsl #25
    5478:	0f670e1b 	svceq	0x00670e1b
    547c:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
    5480:	00000ec4 	andeq	r0, r0, r4, asr #29
    5484:	09690e1d 	stmdbeq	r9!, {r0, r2, r3, r4, r9, sl, fp}^
    5488:	001e0000 	andseq	r0, lr, r0
    548c:	0010030d 	andseq	r0, r0, sp, lsl #6
    5490:	5b040700 	blpl	107098 <morecore_area+0xbe098>
    5494:	0d000000 	stceq	0, cr0, [r0, #-0]
    5498:	03d9060e 	bicseq	r0, r9, #14680064	; 0xe00000
    549c:	e60e0000 	str	r0, [lr], -r0
    54a0:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    54a4:	000f0a0e 	andeq	r0, pc, lr, lsl #20
    54a8:	8b0e1f00 	blhi	38d0b0 <__bss_end__+0x244068>
    54ac:	2000000e 	andcs	r0, r0, lr
    54b0:	0011630e 	andseq	r6, r1, lr, lsl #6
    54b4:	140e2100 	strne	r2, [lr], #-256	; 0xffffff00
    54b8:	22000012 	andcs	r0, r0, #18
    54bc:	07040700 	streq	r0, [r4, -r0, lsl #14]
    54c0:	000003c0 	andeq	r0, r0, r0, asr #7
    54c4:	0e050407 	cdpeq	4, 0, cr0, cr5, cr7, {0}
    54c8:	0b000001 	bleq	54d4 <errno+0x54d0>
    54cc:	0000189c 	muleq	r0, ip, r8
    54d0:	620cf80e 	andvs	pc, ip, #917504	; 0xe0000
    54d4:	07000000 	streq	r0, [r0, -r0]
    54d8:	1bc90201 	blne	ff245ce4 <__bss_end__+0xff0fcc9c>
    54dc:	4e0d0000 	cdpmi	0, 0, cr0, cr13, cr0, {0}
    54e0:	07000020 	streq	r0, [r0, -r0, lsr #32]
    54e4:	00005b04 	andeq	r5, r0, r4, lsl #22
    54e8:	060f0f00 	streq	r0, [pc], -r0, lsl #30
    54ec:	00000419 	andeq	r0, r0, r9, lsl r4
    54f0:	0021420e 	eoreq	r4, r1, lr, lsl #4
    54f4:	b30e0000 	movwlt	r0, #57344	; 0xe000
    54f8:	01000021 	tsteq	r0, r1, lsr #32
    54fc:	20010200 	andcs	r0, r1, r0, lsl #4
    5500:	140f0000 	strne	r0, [pc], #-0	; 5508 <errno+0x5504>
    5504:	0000620d 	andeq	r6, r0, sp, lsl #4
    5508:	04190600 	ldreq	r0, [r9], #-1536	; 0xfffffa00
    550c:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    5510:	07000020 	streq	r0, [r0, -r0, lsr #32]
    5514:	00005b04 	andeq	r5, r0, r4, lsl #22
    5518:	06101000 	ldreq	r1, [r0], -r0
    551c:	0000044f 	andeq	r0, r0, pc, asr #8
    5520:	0021000e 	eoreq	r0, r1, lr
    5524:	a00e0100 	andge	r0, lr, r0, lsl #2
    5528:	02000021 	andeq	r0, r0, #33	; 0x21
    552c:	001f5e0e 	andseq	r5, pc, lr, lsl #28
    5530:	0d000300 	stceq	3, cr0, [r0, #-0]
    5534:	00002057 	andeq	r2, r0, r7, asr r0
    5538:	005b0407 	subseq	r0, fp, r7, lsl #8
    553c:	12110000 	andsne	r0, r1, #0
    5540:	00049806 	andeq	r9, r4, r6, lsl #16
    5544:	215e0e00 	cmpcs	lr, r0, lsl #28
    5548:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    554c:	00002080 	andeq	r2, r0, r0, lsl #1
    5550:	21730e04 	cmncs	r3, r4, lsl #28
    5554:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    5558:	00002065 	andeq	r2, r0, r5, rrx
    555c:	218f0e06 	orrcs	r0, pc, r6, lsl #28
    5560:	0e070000 	cdpeq	0, 0, cr0, cr7, cr0, {0}
    5564:	000021ca 	andeq	r2, r0, sl, asr #3
    5568:	21810e08 	orrcs	r0, r1, r8, lsl #28
    556c:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
    5570:	00001f87 	andeq	r1, r0, r7, lsl #31
    5574:	1f750e0a 	svcne	0x00750e0a
    5578:	000b0000 	andeq	r0, fp, r0
    557c:	001fc30f 	andseq	ip, pc, pc, lsl #6
    5580:	3f221100 	svccc	0x00221100
    5584:	00000425 	andeq	r0, r0, r5, lsr #8
    5588:	7d2c0305 	stcvc	3, cr0, [ip, #-20]!	; 0xffffffec
    558c:	170f0002 	strne	r0, [pc, -r2]
    5590:	11000021 	tstne	r0, r1, lsr #32
    5594:	04253b23 	strteq	r3, [r5], #-2851	; 0xfffff4dd
    5598:	03050000 	movweq	r0, #20480	; 0x5000
    559c:	00027d30 	andeq	r7, r2, r0, lsr sp
    55a0:	00005610 	andeq	r5, r0, r0, lsl r6
    55a4:	0004cc00 	andeq	ip, r4, r0, lsl #24
    55a8:	005b1100 	subseq	r1, fp, r0, lsl #2
    55ac:	00030000 	andeq	r0, r3, r0
    55b0:	0004bc06 	andeq	fp, r4, r6, lsl #24
    55b4:	1a620f00 	bne	18891bc <__bss_end__+0x1740174>
    55b8:	0e120000 	cdpeq	0, 1, cr0, cr2, cr0, {0}
    55bc:	0004cc1c 	andeq	ip, r4, ip, lsl ip
    55c0:	34030500 	strcc	r0, [r3], #-1280	; 0xfffffb00
    55c4:	1000027d 	andne	r0, r0, sp, ror r2
    55c8:	00000117 	andeq	r0, r0, r7, lsl r1
    55cc:	000004ee 	andeq	r0, r0, lr, ror #9
    55d0:	e80b0018 	stmda	fp, {r3, r4}
    55d4:	13000017 	movwne	r0, #23
    55d8:	04e30e0e 	strbteq	r0, [r3], #3598	; 0xe0e
    55dc:	e40b0000 	str	r0, [fp], #-0
    55e0:	13000016 	movwne	r0, #22
    55e4:	04e30e0f 	strbteq	r0, [r3], #3599	; 0xe0f
    55e8:	8e100000 	cdphi	0, 1, cr0, cr0, cr0, {0}
    55ec:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    55f0:	19000005 	stmdbne	r0, {r0, r2}
    55f4:	0000005b 	andeq	r0, r0, fp, asr r0
    55f8:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
    55fc:	212d1a00 			; <UNDEFINED> instruction: 0x212d1a00
    5600:	21010000 	mrscs	r0, (UNDEF: 1)
    5604:	0005062d 	andeq	r0, r5, sp, lsr #12
    5608:	05100000 	ldreq	r0, [r0, #-0]
    560c:	04900003 	ldreq	r0, [r0], #3
    5610:	21501b00 	cmpcs	r0, r0, lsl #22
    5614:	23010000 	movwcs	r0, #4096	; 0x1000
    5618:	00004a08 	andeq	r4, r0, r8, lsl #20
    561c:	78030500 	stmdavc	r3, {r8, sl}
    5620:	0f0002c6 	svceq	0x000002c6
    5624:	00002040 	andeq	r2, r0, r0, asr #32
    5628:	d0122501 	andsle	r2, r2, r1, lsl #10
    562c:	05000000 	streq	r0, [r0, #-0]
    5630:	02c67c03 	sbceq	r7, r6, #768	; 0x300
    5634:	1fda1b00 	svcne	0x00da1b00
    5638:	26010000 	strcs	r0, [r1], -r0
    563c:	0000d00b 	andeq	sp, r0, fp
    5640:	80030500 	andhi	r0, r3, r0, lsl #10
    5644:	1c0002c6 	sfmne	f0, 4, [r0], {198}	; 0xc6
    5648:	00002075 	andeq	r2, r0, r5, ror r0
    564c:	06016d01 	streq	r6, [r1], -r1, lsl #26
    5650:	000003e0 	andeq	r0, r0, r0, ror #7
    5654:	00014dac 	andeq	r4, r1, ip, lsr #27
    5658:	00000070 	andeq	r0, r0, r0, ror r0
    565c:	059d9c01 	ldreq	r9, [sp, #3073]	; 0xc01
    5660:	611d0000 	tstvs	sp, r0
    5664:	6d010070 	stcvs	0, cr0, [r1, #-448]	; 0xfffffe40
    5668:	00251901 	eoreq	r1, r5, r1, lsl #18
    566c:	91020000 	mrsls	r0, (UNDEF: 2)
    5670:	1ab61e74 	bne	fed8d048 <__bss_end__+0xfec44000>
    5674:	05ad0000 	streq	r0, [sp, #0]!
    5678:	03050000 	movweq	r0, #20480	; 0x5000
    567c:	00027e34 	andeq	r7, r2, r4, lsr lr
    5680:	00951000 	addseq	r1, r5, r0
    5684:	05ad0000 	streq	r0, [sp, #0]!
    5688:	5b110000 	blpl	445690 <__bss_end__+0x2fc648>
    568c:	0a000000 	beq	5694 <errno+0x5690>
    5690:	059d0600 	ldreq	r0, [sp, #1536]	; 0x600
    5694:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    5698:	01000020 	tsteq	r0, r0, lsr #32
    569c:	e0060160 	and	r0, r6, r0, ror #2
    56a0:	d4000003 	strle	r0, [r0], #-3
    56a4:	d800014c 	stmdale	r0, {r2, r3, r6, r8}
    56a8:	01000000 	mrseq	r0, (UNDEF: 0)
    56ac:	00063c9c 	muleq	r6, ip, ip
    56b0:	70611d00 	rsbvc	r1, r1, r0, lsl #26
    56b4:	01600100 	cmneq	r0, r0, lsl #2
    56b8:	00002518 	andeq	r2, r0, r8, lsl r5
    56bc:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    56c0:	000f3d1f 	andeq	r3, pc, pc, lsl sp	; <UNPREDICTABLE>
    56c4:	01620100 	cmneq	r2, r0, lsl #2
    56c8:	0000480b 	andeq	r4, r0, fp, lsl #16
    56cc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    56d0:	00452f1f 	subeq	r2, r5, pc, lsl pc
    56d4:	01630100 	cmneq	r3, r0, lsl #2
    56d8:	00004a0c 	andeq	r4, r0, ip, lsl #20
    56dc:	70910200 	addsvc	r0, r1, r0, lsl #4
    56e0:	0020fb1f 	eoreq	pc, r0, pc, lsl fp	; <UNPREDICTABLE>
    56e4:	01640100 	cmneq	r4, r0, lsl #2
    56e8:	00006209 	andeq	r6, r0, r9, lsl #4
    56ec:	6c910200 	lfmvs	f0, 4, [r1], {0}
    56f0:	0031d71f 	eorseq	sp, r1, pc, lsl r7
    56f4:	01650100 	cmneq	r5, r0, lsl #2
    56f8:	00006209 	andeq	r6, r0, r9, lsl #4
    56fc:	68910200 	ldmvs	r1, {r9}
    5700:	00646620 	rsbeq	r6, r4, r0, lsr #12
    5704:	09016601 	stmdbeq	r1, {r0, r9, sl, sp, lr}
    5708:	00000062 	andeq	r0, r0, r2, rrx
    570c:	1f649102 	svcne	0x00649102
    5710:	0000487e 	andeq	r4, r0, lr, ror r8
    5714:	0b016701 	bleq	5f320 <morecore_area+0x16320>
    5718:	00000069 	andeq	r0, r0, r9, rrx
    571c:	00589102 	subseq	r9, r8, r2, lsl #2
    5720:	00216a1c 	eoreq	r6, r1, ip, lsl sl
    5724:	01550100 	cmpeq	r5, r0, lsl #2
    5728:	0003e006 	andeq	lr, r3, r6
    572c:	014c1000 	mrseq	r1, (UNDEF: 76)
    5730:	0000c400 	andeq	ip, r0, r0, lsl #8
    5734:	c69c0100 	ldrgt	r0, [ip], r0, lsl #2
    5738:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    573c:	01007061 	tsteq	r0, r1, rrx
    5740:	25170155 	ldrcs	r0, [r7, #-341]	; 0xfffffeab
    5744:	02000000 	andeq	r0, r0, #0
    5748:	3d1f5491 	cfldrscc	mvf5, [pc, #-580]	; 550c <errno+0x5508>
    574c:	0100000f 	tsteq	r0, pc
    5750:	480b0157 	stmdami	fp, {r0, r1, r2, r4, r6, r8}
    5754:	02000000 	andeq	r0, r0, #0
    5758:	2f1f7491 	svccs	0x001f7491
    575c:	01000045 	tsteq	r0, r5, asr #32
    5760:	4a0c0158 	bmi	305cc8 <__bss_end__+0x1bcc80>
    5764:	02000000 	andeq	r0, r0, #0
    5768:	fb1f7091 	blx	7e19b6 <__bss_end__+0x69896e>
    576c:	01000020 	tsteq	r0, r0, lsr #32
    5770:	62090159 	andvs	r0, r9, #1073741846	; 0x40000016
    5774:	02000000 	andeq	r0, r0, #0
    5778:	d71f6c91 			; <UNDEFINED> instruction: 0xd71f6c91
    577c:	01000031 	tsteq	r0, r1, lsr r0
    5780:	6209015a 	andvs	r0, r9, #-2147483626	; 0x80000016
    5784:	02000000 	andeq	r0, r0, #0
    5788:	66206891 			; <UNDEFINED> instruction: 0x66206891
    578c:	5b010064 	blpl	45924 <static_tls+0x1924>
    5790:	00620901 	rsbeq	r0, r2, r1, lsl #18
    5794:	91020000 	mrsls	r0, (UNDEF: 2)
    5798:	487e1f64 	ldmdami	lr!, {r2, r5, r6, r8, r9, sl, fp, ip}^
    579c:	5c010000 	stcpl	0, cr0, [r1], {-0}
    57a0:	00690b01 	rsbeq	r0, r9, r1, lsl #22
    57a4:	91020000 	mrsls	r0, (UNDEF: 2)
    57a8:	e7210058 			; <UNDEFINED> instruction: 0xe7210058
    57ac:	0100001f 	tsteq	r0, pc, lsl r0
    57b0:	e006014f 	and	r0, r6, pc, asr #2
    57b4:	ec000003 	stc	0, cr0, [r0], {3}
    57b8:	2400014b 	strcs	r0, [r0], #-331	; 0xfffffeb5
    57bc:	01000000 	mrseq	r0, (UNDEF: 0)
    57c0:	0006f19c 	muleq	r6, ip, r1
    57c4:	70611d00 	rsbvc	r1, r1, r0, lsl #26
    57c8:	014f0100 	mrseq	r0, (UNDEF: 95)
    57cc:	0000251a 	andeq	r2, r0, sl, lsl r5
    57d0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    57d4:	200b2200 	andcs	r2, fp, r0, lsl #4
    57d8:	4f010000 	svcmi	0x00010000
    57dc:	0003e006 	andeq	lr, r3, r6
    57e0:	014bbc00 	cmpeq	fp, r0, lsl #24
    57e4:	00003000 	andeq	r3, r0, r0
    57e8:	299c0100 	ldmibcs	ip, {r8}
    57ec:	23000007 	movwcs	r0, #7
    57f0:	01007061 	tsteq	r0, r1, rrx
    57f4:	0025194f 	eoreq	r1, r5, pc, asr #18
    57f8:	91020000 	mrsls	r0, (UNDEF: 2)
    57fc:	1ab61e74 	bne	fed8d1d4 <__bss_end__+0xfec4418c>
    5800:	05ad0000 	streq	r0, [sp, #0]!
    5804:	03050000 	movweq	r0, #20480	; 0x5000
    5808:	00027e28 	andeq	r7, r2, r8, lsr #28
    580c:	1ff32200 	svcne	0x00f32200
    5810:	40010000 	andmi	r0, r1, r0
    5814:	0003e006 	andeq	lr, r3, r6
    5818:	014b0400 	cmpeq	fp, r0, lsl #8
    581c:	0000b800 	andeq	fp, r0, r0, lsl #16
    5820:	ac9c0100 	ldfges	f0, [ip], {0}
    5824:	24000007 	strcs	r0, [r0], #-7
    5828:	00000f3d 	andeq	r0, r0, sp, lsr pc
    582c:	481a4001 	ldmdami	sl, {r0, lr}
    5830:	02000000 	andeq	r0, r0, #0
    5834:	2f247491 	svccs	0x00247491
    5838:	01000045 	tsteq	r0, r5, asr #32
    583c:	004a2740 	subeq	r2, sl, r0, asr #14
    5840:	91020000 	mrsls	r0, (UNDEF: 2)
    5844:	20fb2470 	rscscs	r2, fp, r0, ror r4
    5848:	40010000 	andmi	r0, r1, r0
    584c:	00006233 	andeq	r6, r0, r3, lsr r2
    5850:	6c910200 	lfmvs	f0, 4, [r1], {0}
    5854:	0031d724 	eorseq	sp, r1, r4, lsr #14
    5858:	3d400100 	stfcce	f0, [r0, #-0]
    585c:	00000062 	andeq	r0, r0, r2, rrx
    5860:	23689102 	cmncs	r8, #-2147483648	; 0x80000000
    5864:	01006466 	tsteq	r0, r6, ror #8
    5868:	00624840 	rsbeq	r4, r2, r0, asr #16
    586c:	91020000 	mrsls	r0, (UNDEF: 2)
    5870:	487e2400 	ldmdami	lr!, {sl, sp}^
    5874:	40010000 	andmi	r0, r1, r0
    5878:	00006952 	andeq	r6, r0, r2, asr r9
    587c:	08910200 	ldmeq	r1, {r9}
    5880:	001ab61e 	andseq	fp, sl, lr, lsl r6
    5884:	0007bc00 	andeq	fp, r7, r0, lsl #24
    5888:	18030500 	stmdane	r3, {r8, sl}
    588c:	0000027e 	andeq	r0, r0, lr, ror r2
    5890:	00009510 	andeq	r9, r0, r0, lsl r5
    5894:	0007bc00 	andeq	fp, r7, r0, lsl #24
    5898:	005b1100 	subseq	r1, fp, r0, lsl #2
    589c:	000d0000 	andeq	r0, sp, r0
    58a0:	0007ac06 	andeq	sl, r7, r6, lsl #24
    58a4:	1fbb2500 	svcne	0x00bb2500
    58a8:	2c010000 	stccs	0, cr0, [r1], {-0}
    58ac:	0003e006 	andeq	lr, r3, r6
    58b0:	014a5400 	cmpeq	sl, r0, lsl #8
    58b4:	0000b000 	andeq	fp, r0, r0
    58b8:	239c0100 	orrscs	r0, ip, #0, 2
    58bc:	01007061 	tsteq	r0, r1, rrx
    58c0:	0025162c 	eoreq	r1, r5, ip, lsr #12
    58c4:	91020000 	mrsls	r0, (UNDEF: 2)
    58c8:	6572266c 	ldrbvs	r2, [r2, #-1644]!	; 0xfffff994
    58cc:	2f010074 	svccs	0x00010074
    58d0:	0000d00f 	andeq	sp, r0, pc
    58d4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    58d8:	00213b0f 	eoreq	r3, r1, pc, lsl #22
    58dc:	0f300100 	svceq	0x00300100
    58e0:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    58e4:	00709102 	rsbseq	r9, r0, r2, lsl #2
    58e8:	00010000 	andeq	r0, r1, r0
    58ec:	a0000400 	andge	r0, r0, r0, lsl #8
    58f0:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    58f4:	00011701 	andeq	r1, r1, r1, lsl #14
    58f8:	21f30c00 	mvnscs	r0, r0, lsl #24
    58fc:	005f0000 	subseq	r0, pc, r0
    5900:	4e1c0000 	cdpmi	0, 1, cr0, cr12, cr0, {0}
    5904:	00480001 	subeq	r0, r8, r1
    5908:	3d400000 	stclcc	0, cr0, [r0, #-0]
    590c:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
    5910:	0200001a 	andeq	r0, r0, #26
    5914:	00311b12 	eorseq	r1, r1, r2, lsl fp
    5918:	1c030000 	stcne	0, cr0, [r3], {-0}
    591c:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    5920:	00480004 	subeq	r0, r8, r4
    5924:	07040000 	streq	r0, [r4, -r0]
    5928:	48000019 	stmdami	r0, {r0, r3, r4}
    592c:	00000000 	andeq	r0, r0, r0
    5930:	06040500 	streq	r0, [r4], -r0, lsl #10
    5934:	03c50704 	biceq	r0, r5, #4, 14	; 0x100000
    5938:	04070000 	streq	r0, [r7], #-0
    593c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    5940:	05080600 	streq	r0, [r8, #-1536]	; 0xfffffa00
    5944:	00000109 	andeq	r0, r0, r9, lsl #2
    5948:	00022a08 	andeq	r2, r2, r8, lsl #20
    594c:	016d0200 	cmneq	sp, r0, lsl #4
    5950:	00006c19 	andeq	r6, r0, r9, lsl ip
    5954:	02260900 	eoreq	r0, r6, #0, 18
    5958:	01060000 	mrseq	r0, (UNDEF: 6)
    595c:	00033508 	andeq	r3, r3, r8, lsl #10
    5960:	04080600 	streq	r0, [r8], #-1536	; 0xfffffa00
    5964:	000015f8 	strdeq	r1, [r0], -r8
    5968:	00022f0a 	andeq	r2, r2, sl, lsl #30
    596c:	14370300 	ldrtne	r0, [r7], #-768	; 0xfffffd00
    5970:	00000091 	muleq	r0, r1, r0
    5974:	005f040b 	subseq	r0, pc, fp, lsl #8
    5978:	8b0c0000 	blhi	305980 <__bss_end__+0x1bc938>
    597c:	0a000000 	beq	5984 <errno+0x5980>
    5980:	0000023c 	andeq	r0, r0, ip, lsr r2
    5984:	91143803 	tstls	r4, r3, lsl #16
    5988:	0a000000 	beq	5990 <errno+0x598c>
    598c:	00000235 	andeq	r0, r0, r5, lsr r2
    5990:	91143903 	tstls	r4, r3, lsl #18
    5994:	0d000000 	stceq	0, cr0, [r0, #-0]
    5998:	000021df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    599c:	d7061301 	strle	r1, [r6, -r1, lsl #6]
    59a0:	40000000 	andmi	r0, r0, r0
    59a4:	2400014e 	strcs	r0, [r0], #-334	; 0xfffffeb2
    59a8:	01000000 	mrseq	r0, (UNDEF: 0)
    59ac:	0000d79c 	muleq	r0, ip, r7
    59b0:	70610e00 	rsbvc	r0, r1, r0, lsl #28
    59b4:	22130100 	andscs	r0, r3, #0, 2
    59b8:	00000025 	andeq	r0, r0, r5, lsr #32
    59bc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    59c0:	0e050406 	cdpeq	4, 0, cr0, cr5, cr6, {0}
    59c4:	0f000001 	svceq	0x00000001
    59c8:	00002254 	andeq	r2, r0, r4, asr r2
    59cc:	d7060a01 	strle	r0, [r6, -r1, lsl #20]
    59d0:	1c000000 	stcne	0, cr0, [r0], {-0}
    59d4:	2400014e 	strcs	r0, [r0], #-334	; 0xfffffeb2
    59d8:	01000000 	mrseq	r0, (UNDEF: 0)
    59dc:	70610e9c 	mlsvc	r1, ip, lr, r0
    59e0:	220a0100 	andcs	r0, sl, #0, 2
    59e4:	00000025 	andeq	r0, r0, r5, lsr #32
    59e8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    59ec:	00031b00 	andeq	r1, r3, r0, lsl #22
    59f0:	82000400 	andhi	r0, r0, #0, 8
    59f4:	0400001d 	streq	r0, [r0], #-29	; 0xffffffe3
    59f8:	00011701 	andeq	r1, r1, r1, lsl #14
    59fc:	22900c00 	addscs	r0, r0, #0, 24
    5a00:	005f0000 	subseq	r0, pc, r0
    5a04:	4e640000 	cdpmi	0, 6, cr0, cr4, cr0, {0}
    5a08:	00640001 	rsbeq	r0, r4, r1
    5a0c:	3e510000 	cdpcc	0, 5, cr0, cr1, cr0, {0}
    5a10:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
    5a14:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    5a18:	00311b12 	eorseq	r1, r1, r2, lsl fp
    5a1c:	1c030000 	stcne	0, cr0, [r3], {-0}
    5a20:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    5a24:	0048000b 	subeq	r0, r8, fp
    5a28:	07040000 	streq	r0, [r4, -r0]
    5a2c:	48000019 	stmdami	r0, {r0, r3, r4}
    5a30:	00000000 	andeq	r0, r0, r0
    5a34:	06040500 	streq	r0, [r4], -r0, lsl #10
    5a38:	03c50704 	biceq	r0, r5, #4, 14	; 0x100000
    5a3c:	04070000 	streq	r0, [r7], #-0
    5a40:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    5a44:	05080600 	streq	r0, [r8, #-1536]	; 0xfffffa00
    5a48:	00000109 	andeq	r0, r0, r9, lsl #2
    5a4c:	00022a08 	andeq	r2, r2, r8, lsl #20
    5a50:	016d0400 	cmneq	sp, r0, lsl #8
    5a54:	00006c19 	andeq	r6, r0, r9, lsl ip
    5a58:	02260900 	eoreq	r0, r6, #0, 18
    5a5c:	01060000 	mrseq	r0, (UNDEF: 6)
    5a60:	00033508 	andeq	r3, r3, r8, lsl #10
    5a64:	04080600 	streq	r0, [r8], #-1536	; 0xfffffa00
    5a68:	000015f8 	strdeq	r1, [r0], -r8
    5a6c:	00022f0a 	andeq	r2, r2, sl, lsl #30
    5a70:	14370500 	ldrtne	r0, [r7], #-1280	; 0xfffffb00
    5a74:	00000091 	muleq	r0, r1, r0
    5a78:	005f040b 	subseq	r0, pc, fp, lsl #8
    5a7c:	8b0c0000 	blhi	305a84 <__bss_end__+0x1bca3c>
    5a80:	0a000000 	beq	5a88 <errno+0x5a84>
    5a84:	0000023c 	andeq	r0, r0, ip, lsr r2
    5a88:	91143805 	tstls	r4, r5, lsl #16
    5a8c:	0a000000 	beq	5a94 <errno+0x5a90>
    5a90:	00000235 	andeq	r0, r0, r5, lsr r2
    5a94:	91143905 	tstls	r4, r5, lsl #18
    5a98:	06000000 	streq	r0, [r0], -r0
    5a9c:	010e0504 	tsteq	lr, r4, lsl #10
    5aa0:	01060000 	mrseq	r0, (UNDEF: 6)
    5aa4:	00032e06 	andeq	r2, r3, r6, lsl #28
    5aa8:	08010600 	stmdaeq	r1, {r9, sl}
    5aac:	0000032c 	andeq	r0, r0, ip, lsr #6
    5ab0:	66050206 	strvs	r0, [r5], -r6, lsl #4
    5ab4:	06000004 	streq	r0, [r0], -r4
    5ab8:	03520702 	cmpeq	r2, #524288	; 0x80000
    5abc:	0d020000 	stceq	0, cr0, [r2, #-0]
    5ac0:	06000003 	streq	r0, [r0], -r3
    5ac4:	004a253d 	subeq	r2, sl, sp, lsr r5
    5ac8:	08060000 	stmdaeq	r6, {}	; <UNPREDICTABLE>
    5acc:	0003bb07 	andeq	fp, r3, r7, lsl #22
    5ad0:	03720200 	cmneq	r2, #0, 4
    5ad4:	71060000 	mrsvc	r0, (UNDEF: 6)
    5ad8:	0000d115 	andeq	sp, r0, r5, lsl r1
    5adc:	03d20200 	bicseq	r0, r2, #0, 4
    5ae0:	80060000 	andhi	r0, r6, r0
    5ae4:	0000e413 	andeq	lr, r0, r3, lsl r4
    5ae8:	04050d00 	streq	r0, [r5], #-3328	; 0xfffff300
    5aec:	00000051 	andeq	r0, r0, r1, asr r0
    5af0:	680e110c 	stmdavs	lr, {r2, r3, r8, ip}
    5af4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    5af8:	00000be0 	andeq	r0, r0, r0, ror #23
    5afc:	0a830e7f 	beq	fe0c9500 <__bss_end__+0xfdf804b8>
    5b00:	0e7e0000 	cdpeq	0, 7, cr0, cr14, cr0, {0}
    5b04:	00000b26 	andeq	r0, r0, r6, lsr #22
    5b08:	10e30e7d 	rscne	r0, r3, sp, ror lr
    5b0c:	0e7c0000 	cdpeq	0, 7, cr0, cr12, cr0, {0}
    5b10:	000011a1 	andeq	r1, r0, r1, lsr #3
    5b14:	0f590e7b 	svceq	0x00590e7b
    5b18:	0e7a0000 	cdpeq	0, 7, cr0, cr10, cr0, {0}
    5b1c:	00000a6b 	andeq	r0, r0, fp, ror #20
    5b20:	0e540e79 	mrceq	14, 2, r0, cr4, cr9, {3}
    5b24:	0e780000 	cdpeq	0, 7, cr0, cr8, cr0, {0}
    5b28:	00000fce 	andeq	r0, r0, lr, asr #31
    5b2c:	11d50e77 	bicsne	r0, r5, r7, ror lr
    5b30:	0e760000 	cdpeq	0, 7, cr0, cr6, cr0, {0}
    5b34:	00000cdb 	ldrdeq	r0, [r0], -fp
    5b38:	0fa00e75 	svceq	0x00a00e75
    5b3c:	0e740000 	cdpeq	0, 7, cr0, cr4, cr0, {0}
    5b40:	000009b4 			; <UNDEFINED> instruction: 0x000009b4
    5b44:	0a530e73 	beq	14c9518 <__bss_end__+0x13804d0>
    5b48:	0f720000 	svceq	0x00720000
    5b4c:	00000e63 	andeq	r0, r0, r3, ror #28
    5b50:	7fffffff 	svcvc	0x00ffffff
    5b54:	03921000 	orrseq	r1, r2, #0
    5b58:	04070000 	streq	r0, [r7], #-0
    5b5c:	0000004a 	andeq	r0, r0, sl, asr #32
    5b60:	9f0e0807 	svcls	0x000e0807
    5b64:	11000001 	tstne	r0, r1
    5b68:	00000319 	andeq	r0, r0, r9, lsl r3
    5b6c:	04801100 	streq	r1, [r0], #256	; 0x100
    5b70:	11010000 	mrsne	r0, (UNDEF: 1)
    5b74:	000003f8 	strdeq	r0, [r0], -r8
    5b78:	048f1102 	streq	r1, [pc], #258	; 5b80 <errno+0x5b7c>
    5b7c:	11030000 	mrsne	r0, (UNDEF: 3)
    5b80:	000004cd 	andeq	r0, r0, sp, asr #9
    5b84:	02bd1104 	adcseq	r1, sp, #4, 2
    5b88:	00050000 	andeq	r0, r5, r0
    5b8c:	0003dc02 	andeq	sp, r3, r2, lsl #24
    5b90:	03130700 	tsteq	r3, #0, 14
    5b94:	00000168 	andeq	r0, r0, r8, ror #2
    5b98:	00019f0c 	andeq	r9, r1, ip, lsl #30
    5b9c:	04b41200 	ldrteq	r1, [r4], #512	; 0x200
    5ba0:	15070000 	strne	r0, [r7, #-0]
    5ba4:	0001ab59 	andeq	sl, r1, r9, asr fp
    5ba8:	40030500 	andmi	r0, r3, r0, lsl #10
    5bac:	1300027e 	movwne	r0, #638	; 0x27e
    5bb0:	000000d1 	ldrdeq	r0, [r0], -r1
    5bb4:	000001d2 	ldrdeq	r0, [r0], -r2
    5bb8:	00004a14 	andeq	r4, r0, r4, lsl sl
    5bbc:	15000000 	strne	r0, [r0, #-0]
    5bc0:	000002a7 	andeq	r0, r0, r7, lsr #5
    5bc4:	01380804 	teqeq	r8, r4, lsl #16
    5bc8:	0001ef08 	andeq	lr, r1, r8, lsl #30
    5bcc:	03b01600 	movseq	r1, #0, 12
    5bd0:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    5bd4:	01c21101 	biceq	r1, r2, r1, lsl #2
    5bd8:	00000000 	andeq	r0, r0, r0
    5bdc:	00039d08 	andeq	r9, r3, r8, lsl #26
    5be0:	013b0800 	teqeq	fp, r0, lsl #16
    5be4:	0001d221 	andeq	sp, r1, r1, lsr #4
    5be8:	04701700 	ldrbteq	r1, [r0], #-1792	; 0xfffff900
    5bec:	02000000 	andeq	r0, r0, #0
    5bf0:	6b100b09 	blvs	40881c <__bss_end__+0x2bf7d4>
    5bf4:	18000002 	stmdane	r0, {r1}
    5bf8:	00676174 	rsbeq	r6, r7, r4, ror r1
    5bfc:	ef180c09 	svc	0x00180c09
    5c00:	00000001 	andeq	r0, r0, r1
    5c04:	67736d18 			; <UNDEFINED> instruction: 0x67736d18
    5c08:	0f0d0900 	svceq	0x000d0900
    5c0c:	0000026b 	andeq	r0, r0, fp, ror #4
    5c10:	033a1904 	teqeq	sl, #4, 18	; 0x10000
    5c14:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
    5c18:	0000e40f 	andeq	lr, r0, pc, lsl #8
    5c1c:	1901e400 	stmdbne	r1, {sl, sp, lr, pc}
    5c20:	0000037c 	andeq	r0, r0, ip, ror r3
    5c24:	7b0f0f09 	blvc	3c9850 <__bss_end__+0x280808>
    5c28:	e8000002 	stmda	r0, {r1}
    5c2c:	03651901 	cmneq	r5, #16384	; 0x4000
    5c30:	10090000 	andne	r0, r9, r0
    5c34:	0000f00f 	andeq	pc, r0, pc
    5c38:	1901f400 	stmdbne	r1, {sl, ip, sp, lr, pc}
    5c3c:	00000300 	andeq	r0, r0, r0, lsl #6
    5c40:	f00f1109 			; <UNDEFINED> instruction: 0xf00f1109
    5c44:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    5c48:	040c1901 	streq	r1, [ip], #-2305	; 0xfffff6ff
    5c4c:	12090000 	andne	r0, r9, #0
    5c50:	0000e40f 	andeq	lr, r0, pc, lsl #8
    5c54:	0001fc00 	andeq	pc, r1, r0, lsl #24
    5c58:	0000e413 	andeq	lr, r0, r3, lsl r4
    5c5c:	00027b00 	andeq	r7, r2, r0, lsl #22
    5c60:	004a1400 	subeq	r1, sl, r0, lsl #8
    5c64:	00770000 	rsbseq	r0, r7, r0
    5c68:	0000e413 	andeq	lr, r0, r3, lsl r4
    5c6c:	00028b00 	andeq	r8, r2, r0, lsl #22
    5c70:	004a1400 	subeq	r1, sl, r0, lsl #8
    5c74:	00020000 	andeq	r0, r2, r0
    5c78:	0003431a 	andeq	r4, r3, sl, lsl r3
    5c7c:	03130900 	tsteq	r3, #0, 18
    5c80:	000001fc 	strdeq	r0, [r0], -ip
    5c84:	e80a0200 	stmda	sl, {r9}
    5c88:	0a000002 	beq	5c98 <errno+0x5c94>
    5c8c:	02a5210d 	adceq	r2, r5, #1073741827	; 0x40000003
    5c90:	040b0000 	streq	r0, [fp], #-0
    5c94:	0000028b 	andeq	r0, r0, fp, lsl #5
    5c98:	c0070406 	andgt	r0, r7, r6, lsl #8
    5c9c:	1b000003 	blne	5cb0 <errno+0x5cac>
    5ca0:	00002268 	andeq	r2, r0, r8, ror #4
    5ca4:	ae060c03 	cdpge	12, 0, cr0, cr6, cr3, {0}
    5ca8:	a4000000 	strge	r0, [r0], #-0
    5cac:	2400014e 	strcs	r0, [r0], #-334	; 0xfffffeb2
    5cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    5cb4:	0002db9c 	muleq	r2, ip, fp
    5cb8:	70611c00 	rsbvc	r1, r1, r0, lsl #24
    5cbc:	1e0c0300 	cdpne	3, 0, cr0, cr12, cr0, {0}
    5cc0:	00000025 	andeq	r0, r0, r5, lsr #32
    5cc4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    5cc8:	0022781d 	eoreq	r7, r2, sp, lsl r8
    5ccc:	01e70200 	mvneq	r0, r0, lsl #4
    5cd0:	014e8c1a 	cmpeq	lr, sl, lsl ip
    5cd4:	00001800 	andeq	r1, r0, r0, lsl #16
    5cd8:	1e9c0100 	fmlnee	f0, f4, f0
    5cdc:	00002283 	andeq	r2, r0, r3, lsl #5
    5ce0:	6414d601 	ldrvs	sp, [r4], #-1537	; 0xfffff9ff
    5ce4:	2800014e 	stmdacs	r0, {r1, r2, r3, r6, r8}
    5ce8:	01000000 	mrseq	r0, (UNDEF: 0)
    5cec:	79731c9c 	ldmdbvc	r3!, {r2, r3, r4, r7, sl, fp, ip}^
    5cf0:	d6010073 			; <UNDEFINED> instruction: 0xd6010073
    5cf4:	0000e42b 	andeq	lr, r0, fp, lsr #8
    5cf8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    5cfc:	000d0912 	andeq	r0, sp, r2, lsl r9
    5d00:	18d80100 	ldmne	r8, {r8}^
    5d04:	000000e4 	andeq	r0, r0, r4, ror #1
    5d08:	00005701 	andeq	r5, r0, r1, lsl #14
    5d0c:	00002c6a 	andeq	r2, r0, sl, ror #24
    5d10:	1f450004 	svcne	0x00450004
    5d14:	01040000 	mrseq	r0, (UNDEF: 4)
    5d18:	00000117 	andeq	r0, r0, r7, lsl r1
    5d1c:	002e8c0c 	eoreq	r8, lr, ip, lsl #24
    5d20:	00005f00 	andeq	r5, r0, r0, lsl #30
    5d24:	014ec800 	cmpeq	lr, r0, lsl #16
    5d28:	00169c00 	andseq	r9, r6, r0, lsl #24
    5d2c:	00411400 	subeq	r1, r1, r0, lsl #8
    5d30:	06010200 	streq	r0, [r1], -r0, lsl #4
    5d34:	0000032e 	andeq	r0, r0, lr, lsr #6
    5d38:	00064d03 	andeq	r4, r6, r3, lsl #26
    5d3c:	25260c00 	strcs	r0, [r6, #-3072]!	; 0xfffff400
    5d40:	00000038 	andeq	r0, r0, r8, lsr r0
    5d44:	2c080102 	stfcss	f0, [r8], {2}
    5d48:	02000003 	andeq	r0, r0, #3
    5d4c:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
    5d50:	02020000 	andeq	r0, r2, #0
    5d54:	00035207 	andeq	r5, r3, r7, lsl #4
    5d58:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    5d5c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    5d60:	00030d03 	andeq	r0, r3, r3, lsl #26
    5d64:	253d0c00 	ldrcs	r0, [sp, #-3072]!	; 0xfffff400
    5d68:	00000060 	andeq	r0, r0, r0, rrx
    5d6c:	c5070402 	strgt	r0, [r7, #-1026]	; 0xfffffbfe
    5d70:	02000003 	andeq	r0, r0, #3
    5d74:	01090508 	tsteq	r9, r8, lsl #10
    5d78:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    5d7c:	0003bb07 	andeq	fp, r3, r7, lsl #22
    5d80:	03720300 	cmneq	r2, #0, 6
    5d84:	710c0000 	mrsvc	r0, (UNDEF: 12)
    5d88:	00005415 	andeq	r5, r0, r5, lsl r4
    5d8c:	03d20300 	bicseq	r0, r2, #0, 6
    5d90:	800c0000 	andhi	r0, ip, r0
    5d94:	00007513 	andeq	r7, r0, r3, lsl r5
    5d98:	28da0300 	ldmcs	sl, {r8, r9}^
    5d9c:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    5da0:	00008113 	andeq	r8, r0, r3, lsl r1
    5da4:	04070500 	streq	r0, [r7], #-1280	; 0xfffffb00
    5da8:	00000060 	andeq	r0, r0, r0, rrx
    5dac:	c90e1b0d 	stmdbgt	lr, {r0, r2, r3, r8, r9, fp, ip}
    5db0:	06000000 	streq	r0, [r0], -r0
    5db4:	00002556 	andeq	r2, r0, r6, asr r5
    5db8:	29970601 	ldmibcs	r7, {r0, r9, sl}
    5dbc:	06020000 	streq	r0, [r2], -r0
    5dc0:	00002cd0 	ldrdeq	r2, [r0], -r0
    5dc4:	37340603 	ldrcc	r0, [r4, -r3, lsl #12]!
    5dc8:	07040000 	streq	r0, [r4, -r0]
    5dcc:	00002bba 			; <UNDEFINED> instruction: 0x00002bba
    5dd0:	7fffffff 	svcvc	0x00ffffff
    5dd4:	2bc40300 	blcs	ff1069dc <__bss_end__+0xfefbd994>
    5dd8:	220d0000 	andcs	r0, sp, #0
    5ddc:	00009903 	andeq	r9, r0, r3, lsl #18
    5de0:	04050500 	streq	r0, [r5], #-1280	; 0xfffffb00
    5de4:	0000004d 	andeq	r0, r0, sp, asr #32
    5de8:	410e110e 	tstmi	lr, lr, lsl #2
    5dec:	08000001 	stmdaeq	r0, {r0}
    5df0:	00000be0 	andeq	r0, r0, r0, ror #23
    5df4:	0a83087f 	beq	fe0c7ff8 <__bss_end__+0xfdf7efb0>
    5df8:	087e0000 	ldmdaeq	lr!, {}^	; <UNPREDICTABLE>
    5dfc:	00000b26 	andeq	r0, r0, r6, lsr #22
    5e00:	10e3087d 	rscne	r0, r3, sp, ror r8
    5e04:	087c0000 	ldmdaeq	ip!, {}^	; <UNPREDICTABLE>
    5e08:	000011a1 	andeq	r1, r0, r1, lsr #3
    5e0c:	0f59087b 	svceq	0x0059087b
    5e10:	087a0000 	ldmdaeq	sl!, {}^	; <UNPREDICTABLE>
    5e14:	00000a6b 	andeq	r0, r0, fp, ror #20
    5e18:	0e540879 	mrceq	8, 2, r0, cr4, cr9, {3}
    5e1c:	08780000 	ldmdaeq	r8!, {}^	; <UNPREDICTABLE>
    5e20:	00000fce 	andeq	r0, r0, lr, asr #31
    5e24:	11d50877 	bicsne	r0, r5, r7, ror r8
    5e28:	08760000 	ldmdaeq	r6!, {}^	; <UNPREDICTABLE>
    5e2c:	00000cdb 	ldrdeq	r0, [r0], -fp
    5e30:	0fa00875 	svceq	0x00a00875
    5e34:	08740000 	ldmdaeq	r4!, {}^	; <UNPREDICTABLE>
    5e38:	000009b4 			; <UNDEFINED> instruction: 0x000009b4
    5e3c:	0a530873 	beq	14c8010 <__bss_end__+0x137efc8>
    5e40:	07720000 	ldrbeq	r0, [r2, -r0]!
    5e44:	00000e63 	andeq	r0, r0, r3, ror #28
    5e48:	7fffffff 	svcvc	0x00ffffff
    5e4c:	03920900 	orrseq	r0, r2, #0, 18
    5e50:	04070000 	streq	r0, [r7], #-0
    5e54:	00000060 	andeq	r0, r0, r0, rrx
    5e58:	780e080f 	stmdavc	lr, {r0, r1, r2, r3, fp}
    5e5c:	06000001 	streq	r0, [r0], -r1
    5e60:	00000319 	andeq	r0, r0, r9, lsl r3
    5e64:	04800600 	streq	r0, [r0], #1536	; 0x600
    5e68:	06010000 	streq	r0, [r1], -r0
    5e6c:	000003f8 	strdeq	r0, [r0], -r8
    5e70:	048f0602 	streq	r0, [pc], #1538	; 5e78 <errno+0x5e74>
    5e74:	06030000 	streq	r0, [r3], -r0
    5e78:	000004cd 	andeq	r0, r0, sp, asr #9
    5e7c:	02bd0604 	adcseq	r0, sp, #4, 12	; 0x400000
    5e80:	00050000 	andeq	r0, r5, r0
    5e84:	0003dc03 	andeq	sp, r3, r3, lsl #24
    5e88:	03130f00 	tsteq	r3, #0, 30
    5e8c:	00000141 	andeq	r0, r0, r1, asr #2
    5e90:	0001780a 	andeq	r7, r1, sl, lsl #16
    5e94:	04b40b00 	ldrteq	r0, [r4], #2816	; 0xb00
    5e98:	150f0000 	strne	r0, [pc, #-0]	; 5ea0 <errno+0x5e9c>
    5e9c:	00018459 	andeq	r8, r1, r9, asr r4
    5ea0:	44030500 	strmi	r0, [r3], #-1280	; 0xfffffb00
    5ea4:	0900027e 	stmdbeq	r0, {r1, r2, r3, r4, r5, r6, r9}
    5ea8:	00000ee8 	andeq	r0, r0, r8, ror #29
    5eac:	00600407 	rsbeq	r0, r0, r7, lsl #8
    5eb0:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
    5eb4:	0001ba0e 	andeq	fp, r1, lr, lsl #20
    5eb8:	0a360600 	beq	d876c0 <__bss_end__+0xc3e678>
    5ebc:	06050000 	streq	r0, [r5], -r0
    5ec0:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
    5ec4:	07050006 	streq	r0, [r5, -r6]
    5ec8:	00006004 	andeq	r6, r0, r4
    5ecc:	0e091100 	adfeqe	f1, f1, f0
    5ed0:	00000211 	andeq	r0, r0, r1, lsl r2
    5ed4:	001ce206 	andseq	lr, ip, r6, lsl #4
    5ed8:	ec060000 	stc	0, cr0, [r6], {-0}
    5edc:	0100001d 	tsteq	r0, sp, lsl r0
    5ee0:	001da806 	andseq	sl, sp, r6, lsl #16
    5ee4:	53060200 	movwpl	r0, #25088	; 0x6200
    5ee8:	0300001c 	movweq	r0, #28
    5eec:	001b0006 	andseq	r0, fp, r6
    5ef0:	cf060400 	svcgt	0x00060400
    5ef4:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    5ef8:	001cef06 	andseq	lr, ip, r6, lsl #30
    5efc:	78060600 	stmdavc	r6, {r9, sl}
    5f00:	0700001d 	smladeq	r0, sp, r0, r0
    5f04:	001e8206 	andseq	r8, lr, r6, lsl #4
    5f08:	db060800 	blle	187f10 <__bss_end__+0x3eec8>
    5f0c:	0900001a 	stmdbeq	r0, {r1, r3, r4}
    5f10:	001b2306 	andseq	r2, fp, r6, lsl #6
    5f14:	d3060a00 	movwle	r0, #27136	; 0x6a00
    5f18:	0b00001c 	bleq	5f90 <errno+0x5f8c>
    5f1c:	1e930300 	cdpne	3, 9, cr0, cr3, cr0, {0}
    5f20:	1b110000 	blne	445f28 <__bss_end__+0x2fcee0>
    5f24:	0001ba03 	andeq	fp, r1, r3, lsl #20
    5f28:	0d290900 			; <UNDEFINED> instruction: 0x0d290900
    5f2c:	04070000 	streq	r0, [r7], #-0
    5f30:	00000060 	andeq	r0, r0, r0, rrx
    5f34:	42063412 	andmi	r3, r6, #301989888	; 0x12000000
    5f38:	06000002 	streq	r0, [r0], -r2
    5f3c:	000009ca 	andeq	r0, r0, sl, asr #19
    5f40:	0ef50607 	cdpeq	6, 15, cr0, cr5, cr7, {0}
    5f44:	06020000 	streq	r0, [r2], -r0
    5f48:	00000df6 	strdeq	r0, [r0], -r6
    5f4c:	540c0078 	strpl	r0, [ip], #-120	; 0xffffff88
    5f50:	52000000 	andpl	r0, r0, #0
    5f54:	0d000002 	stceq	0, cr0, [r0, #-8]
    5f58:	00000060 	andeq	r0, r0, r0, rrx
    5f5c:	940e0000 	strls	r0, [lr], #-0
    5f60:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    5f64:	6d087501 	cfstr32vs	mvfx7, [r8, #-4]
    5f68:	0f000002 	svceq	0x00000002
    5f6c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    5f70:	42117601 	andsmi	r7, r1, #1048576	; 0x100000
    5f74:	00000002 	andeq	r0, r0, r2
    5f78:	2cb70300 	ldccs	3, cr0, [r7]
    5f7c:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
    5f80:	0002521f 	andeq	r5, r2, pc, lsl r2
    5f84:	02a71000 	adceq	r1, r7, #0
    5f88:	01040000 	mrseq	r0, (UNDEF: 4)
    5f8c:	96080138 			; <UNDEFINED> instruction: 0x96080138
    5f90:	11000002 	tstne	r0, r2
    5f94:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    5f98:	11013901 	tstne	r1, r1, lsl #18
    5f9c:	00000242 	andeq	r0, r0, r2, asr #4
    5fa0:	9d120000 	ldcls	0, cr0, [r2, #-0]
    5fa4:	01000003 	tsteq	r0, r3
    5fa8:	7921013b 	stmdbvc	r1!, {r0, r1, r3, r4, r5, r8}
    5fac:	13000002 	movwne	r0, #2
    5fb0:	00000470 	andeq	r0, r0, r0, ror r4
    5fb4:	0b130200 	bleq	4c67bc <__bss_end__+0x37d774>
    5fb8:	00031210 	andeq	r1, r3, r0, lsl r2
    5fbc:	61741400 	cmnvs	r4, r0, lsl #8
    5fc0:	0c130067 	ldceq	0, cr0, [r3], {103}	; 0x67
    5fc4:	00029618 	andeq	r9, r2, r8, lsl r6
    5fc8:	6d140000 	ldcvs	0, cr0, [r4, #-0]
    5fcc:	13006773 	movwne	r6, #1907	; 0x773
    5fd0:	03120f0d 	tsteq	r2, #13, 30	; 0x34
    5fd4:	15040000 	strne	r0, [r4, #-0]
    5fd8:	0000033a 	andeq	r0, r0, sl, lsr r3
    5fdc:	750f0e13 	strvc	r0, [pc, #-3603]	; 51d1 <errno+0x51cd>
    5fe0:	e4000000 	str	r0, [r0], #-0
    5fe4:	037c1501 	cmneq	ip, #4194304	; 0x400000
    5fe8:	0f130000 	svceq	0x00130000
    5fec:	0003220f 	andeq	r2, r3, pc, lsl #4
    5ff0:	1501e800 	strne	lr, [r1, #-2048]	; 0xfffff800
    5ff4:	00000365 	andeq	r0, r0, r5, ror #6
    5ff8:	810f1013 	tsthi	pc, r3, lsl r0	; <UNPREDICTABLE>
    5ffc:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    6000:	03001501 	movweq	r1, #1281	; 0x501
    6004:	11130000 	tstne	r3, r0
    6008:	0000810f 	andeq	r8, r0, pc, lsl #2
    600c:	1501f800 	strne	pc, [r1, #-2048]	; 0xfffff800
    6010:	0000040c 	andeq	r0, r0, ip, lsl #8
    6014:	750f1213 	strvc	r1, [pc, #-531]	; 5e09 <errno+0x5e05>
    6018:	fc000000 	stc2	0, cr0, [r0], {-0}
    601c:	750c0001 	strvc	r0, [ip, #-1]
    6020:	22000000 	andcs	r0, r0, #0
    6024:	0d000003 	stceq	0, cr0, [r0, #-12]
    6028:	00000060 	andeq	r0, r0, r0, rrx
    602c:	750c0077 	strvc	r0, [ip, #-119]	; 0xffffff89
    6030:	32000000 	andcc	r0, r0, #0
    6034:	0d000003 	stceq	0, cr0, [r0, #-12]
    6038:	00000060 	andeq	r0, r0, r0, rrx
    603c:	43160002 	tstmi	r6, #2
    6040:	13000003 	movwne	r0, #3
    6044:	02a30313 	adceq	r0, r3, #1275068416	; 0x4c000000
    6048:	02000000 	andeq	r0, r0, #0
    604c:	00248f03 	eoreq	r8, r4, r3, lsl #30
    6050:	13231400 			; <UNDEFINED> instruction: 0x13231400
    6054:	00000081 	andeq	r0, r0, r1, lsl #1
    6058:	0002e817 	andeq	lr, r2, r7, lsl r8
    605c:	210d0200 	mrscs	r0, SP_fiq
    6060:	00000358 	andeq	r0, r0, r8, asr r3
    6064:	03320418 	teqeq	r2, #24, 8	; 0x18000000
    6068:	0d090000 	stceq	0, cr0, [r9, #-0]
    606c:	07000010 	smladeq	r0, r0, r0, r0
    6070:	00006004 	andeq	r6, r0, r4
    6074:	060e1500 	streq	r1, [lr], -r0, lsl #10
    6078:	0000042b 	andeq	r0, r0, fp, lsr #8
    607c:	000ac106 	andeq	ip, sl, r6, lsl #2
    6080:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
    6084:	01000012 	tsteq	r0, r2, lsl r0
    6088:	000b7f06 	andeq	r7, fp, r6, lsl #30
    608c:	8e060200 	cdphi	2, 0, cr0, cr6, cr0, {0}
    6090:	0300000f 	movweq	r0, #15
    6094:	00109a06 	andseq	r9, r0, r6, lsl #20
    6098:	19060400 	stmdbne	r6, {sl}
    609c:	0500000b 	streq	r0, [r0, #-11]
    60a0:	000fb906 	andeq	fp, pc, r6, lsl #18
    60a4:	33060600 	movwcc	r0, #26112	; 0x6600
    60a8:	0700000b 	streq	r0, [r0, -fp]
    60ac:	000a9506 	andeq	r9, sl, r6, lsl #10
    60b0:	09060800 	stmdbeq	r6, {fp}
    60b4:	0900000a 	stmdbeq	r0, {r1, r3}
    60b8:	000f2d06 	andeq	r2, pc, r6, lsl #26
    60bc:	ed060a00 	vstr	s0, [r6, #-0]
    60c0:	0b00000c 	bleq	60f8 <errno+0x60f4>
    60c4:	00106806 	andseq	r6, r0, r6, lsl #16
    60c8:	e3060c00 	movw	r0, #27648	; 0x6c00
    60cc:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
    60d0:	0010ab06 	andseq	sl, r0, r6, lsl #22
    60d4:	f0060e00 			; <UNDEFINED> instruction: 0xf0060e00
    60d8:	0f000011 	svceq	0x00000011
    60dc:	000cc206 	andeq	ip, ip, r6, lsl #4
    60e0:	d4061000 	strle	r1, [r6], #-0
    60e4:	1100000b 	tstne	r0, fp
    60e8:	000ed106 	andeq	sp, lr, r6, lsl #2
    60ec:	0a061200 	beq	18a8f4 <__bss_end__+0x418ac>
    60f0:	13000012 	movwne	r0, #18
    60f4:	000b7506 	andeq	r7, fp, r6, lsl #10
    60f8:	79061400 	stmdbvc	r6, {sl, ip}
    60fc:	1500000a 	strne	r0, [r0, #-10]
    6100:	000ff706 	andeq	pc, pc, r6, lsl #14
    6104:	25061600 	strcs	r1, [r6, #-1536]	; 0xfffffa00
    6108:	1700000c 	strne	r0, [r0, -ip]
    610c:	000b6506 	andeq	r6, fp, r6, lsl #10
    6110:	97061800 	strls	r1, [r6, -r0, lsl #16]
    6114:	1900000c 	stmdbne	r0, {r2, r3}
    6118:	00117a06 	andseq	r7, r1, r6, lsl #20
    611c:	86061a00 	strhi	r1, [r6], -r0, lsl #20
    6120:	1b00000c 	blne	6158 <errno+0x6154>
    6124:	000f6706 	andeq	r6, pc, r6, lsl #14
    6128:	c4061c00 	strgt	r1, [r6], #-3072	; 0xfffff400
    612c:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    6130:	00096906 	andeq	r6, r9, r6, lsl #18
    6134:	09001e00 	stmdbeq	r0, {r9, sl, fp, ip}
    6138:	00001003 	andeq	r1, r0, r3
    613c:	00600407 	rsbeq	r0, r0, r7, lsl #8
    6140:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
    6144:	00045c06 	andeq	r5, r4, r6, lsl #24
    6148:	0de60600 	stcleq	6, cr0, [r6]
    614c:	061e0000 	ldreq	r0, [lr], -r0
    6150:	00000f0a 	andeq	r0, r0, sl, lsl #30
    6154:	0e8b061f 	mcreq	6, 4, r0, cr11, cr15, {0}
    6158:	06200000 	strteq	r0, [r0], -r0
    615c:	00001163 	andeq	r1, r0, r3, ror #2
    6160:	12140621 	andsne	r0, r4, #34603008	; 0x2100000
    6164:	00220000 	eoreq	r0, r2, r0
    6168:	00100809 	andseq	r0, r0, r9, lsl #16
    616c:	60040700 	andvs	r0, r4, r0, lsl #14
    6170:	17000000 	strne	r0, [r0, -r0]
    6174:	04bd060e 	ldrteq	r0, [sp], #1550	; 0x60e
    6178:	df060000 	svcle	0x00060000
    617c:	22000036 	andcs	r0, r0, #54	; 0x36
    6180:	002b7806 	eoreq	r7, fp, r6, lsl #16
    6184:	3d062300 	stccc	3, cr2, [r6, #-0]
    6188:	2400002e 	strcs	r0, [r0], #-46	; 0xffffffd2
    618c:	00279806 	eoreq	r9, r7, r6, lsl #16
    6190:	ed062500 	cfstr32	mvfx2, [r6, #-0]
    6194:	26000035 			; <UNDEFINED> instruction: 0x26000035
    6198:	0032f806 	eorseq	pc, r2, r6, lsl #16
    619c:	dc062700 	stcle	7, cr2, [r6], {-0}
    61a0:	28000027 	stmdacs	r0, {r0, r1, r2, r5}
    61a4:	00251a06 	eoreq	r1, r5, r6, lsl #20
    61a8:	5d062900 	vstrpl.16	s4, [r6, #-0]	; <UNPREDICTABLE>
    61ac:	2a000038 	bcs	6294 <errno+0x6290>
    61b0:	00360706 	eorseq	r0, r6, r6, lsl #14
    61b4:	9b062b00 	blls	190dbc <__bss_end__+0x47d74>
    61b8:	2c000032 	stccs	0, cr0, [r0], {50}	; 0x32
    61bc:	00335606 	eorseq	r5, r3, r6, lsl #12
    61c0:	02062d00 	andeq	r2, r6, #0, 26
    61c4:	2e00002c 	cdpcs	0, 0, cr0, cr0, cr12, {1}
    61c8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    61cc:	000003c0 	andeq	r0, r0, r0, asr #7
    61d0:	00073109 	andeq	r3, r7, r9, lsl #2
    61d4:	60040700 	andvs	r0, r4, r0, lsl #14
    61d8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    61dc:	053d060e 	ldreq	r0, [sp, #-1550]!	; 0xfffff9f2
    61e0:	de060000 	cdple	0, 0, cr0, cr6, cr0, {0}
    61e4:	00000006 	andeq	r0, r0, r6
    61e8:	00076a06 	andeq	r6, r7, r6, lsl #20
    61ec:	48060100 	stmdami	r6, {r8}
    61f0:	02000007 	andeq	r0, r0, #7
    61f4:	00062806 	andeq	r2, r6, r6, lsl #16
    61f8:	98060300 	stmdals	r6, {r8, r9}
    61fc:	04000008 	streq	r0, [r0], #-8
    6200:	0006a606 	andeq	sl, r6, r6, lsl #12
    6204:	00060500 	andeq	r0, r6, r0, lsl #10
    6208:	06000007 	streq	r0, [r0], -r7
    620c:	00060106 	andeq	r0, r6, r6, lsl #2
    6210:	2a060700 	bcs	187e18 <__bss_end__+0x3edd0>
    6214:	08000009 	stmdaeq	r0, {r0, r3}
    6218:	0005c406 	andeq	ip, r5, r6, lsl #8
    621c:	7c060900 			; <UNDEFINED> instruction: 0x7c060900
    6220:	0a000008 	beq	6248 <errno+0x6244>
    6224:	00072206 	andeq	r2, r7, r6, lsl #4
    6228:	da060b00 	ble	188e30 <__bss_end__+0x3fde8>
    622c:	0c000005 	stceq	0, cr0, [r0], {5}
    6230:	00066906 	andeq	r6, r6, r6, lsl #18
    6234:	ab060d00 	blge	18963c <__bss_end__+0x405f4>
    6238:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    623c:	00080c06 	andeq	r0, r8, r6, lsl #24
    6240:	e3060f00 	movw	r0, #28416	; 0x6f00
    6244:	10000007 	andne	r0, r0, r7
    6248:	0a2f0300 	beq	bc6e50 <__bss_end__+0xa7de08>
    624c:	6e190000 	cdpvs	0, 1, cr0, cr9, cr0, {0}
    6250:	00006018 	andeq	r6, r0, r8, lsl r0
    6254:	053d0a00 	ldreq	r0, [sp, #-2560]!	; 0xfffff600
    6258:	04020000 	streq	r0, [r2], #-0
    625c:	00010e05 	andeq	r0, r1, r5, lsl #28
    6260:	09200300 	stmdbeq	r0!, {r8, r9}
    6264:	73190000 	tstvc	r9, #0
    6268:	00006018 	andeq	r6, r0, r8, lsl r0
    626c:	27570300 	ldrbcs	r0, [r7, -r0, lsl #6]
    6270:	ab190000 	blge	646278 <__bss_end__+0x4fd230>
    6274:	00003819 	andeq	r3, r0, r9, lsl r8
    6278:	058e0300 	streq	r0, [lr, #768]	; 0x300
    627c:	b5190000 	ldrlt	r0, [r9, #-0]
    6280:	00006019 	andeq	r6, r0, r9, lsl r0
    6284:	35690300 	strbcc	r0, [r9, #-768]!	; 0xfffffd00
    6288:	ba190000 	blt	646290 <__bss_end__+0x4fd248>
    628c:	00006e19 	andeq	r6, r0, r9, lsl lr
    6290:	03041900 	movweq	r1, #18688	; 0x4900
    6294:	000018b7 			; <UNDEFINED> instruction: 0x000018b7
    6298:	4d0f7d19 	stcmi	13, cr7, [pc, #-100]	; 623c <errno+0x6238>
    629c:	12000000 	andne	r0, r0, #0
    62a0:	0000022a 	andeq	r0, r0, sl, lsr #4
    62a4:	19016d19 	stmdbne	r1, {r0, r3, r4, r8, sl, fp, sp, lr}
    62a8:	000005a0 	andeq	r0, r0, r0, lsr #11
    62ac:	0002261a 	andeq	r2, r2, sl, lsl r6
    62b0:	08010200 	stmdaeq	r1, {r9}
    62b4:	00000335 	andeq	r0, r0, r5, lsr r3
    62b8:	0005a50a 	andeq	sl, r5, sl, lsl #10
    62bc:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    62c0:	000015f8 	strdeq	r1, [r0], -r8
    62c4:	00022f17 	andeq	r2, r2, r7, lsl pc
    62c8:	14371a00 	ldrtne	r1, [r7], #-2560	; 0xfffff600
    62cc:	000005ca 	andeq	r0, r0, sl, asr #11
    62d0:	05930418 	ldreq	r0, [r3, #1048]	; 0x418
    62d4:	c40a0000 	strgt	r0, [sl], #-0
    62d8:	17000005 	strne	r0, [r0, -r5]
    62dc:	0000023c 	andeq	r0, r0, ip, lsr r2
    62e0:	ca14381a 	bgt	514350 <__bss_end__+0x3cb308>
    62e4:	17000005 	strne	r0, [r0, -r5]
    62e8:	00000235 	andeq	r0, r0, r5, lsr r2
    62ec:	ca14391a 	bgt	51475c <__bss_end__+0x3cb714>
    62f0:	03000005 	movweq	r0, #5
    62f4:	00002593 	muleq	r0, r3, r5
    62f8:	7912101b 	ldmdbvc	r2, {r0, r1, r3, r4, ip}
    62fc:	18000005 	stmdane	r0, {r0, r2}
    6300:	0005ac04 	andeq	sl, r5, r4, lsl #24
    6304:	a5041800 	strge	r1, [r4, #-2048]	; 0xfffff800
    6308:	17000005 	strne	r0, [r0, -r5]
    630c:	0000189c 	muleq	r0, ip, r8
    6310:	4d0cf81c 	stcmi	8, cr15, [ip, #-112]	; 0xffffff90
    6314:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    6318:	00002ffb 	strdeq	r2, [r0], -fp
    631c:	104e1d1c 	subne	r1, lr, ip, lsl sp
    6320:	00000674 	andeq	r0, r0, r4, ror r6
    6324:	0026d90f 	eoreq	sp, r6, pc, lsl #18
    6328:	114f1d00 	cmpne	pc, r0, lsl #26
    632c:	00000081 	andeq	r0, r0, r1, lsl #1
    6330:	270b0f00 	strcs	r0, [fp, -r0, lsl #30]
    6334:	501d0000 	andspl	r0, sp, r0
    6338:	00007511 	andeq	r7, r0, r1, lsl r5
    633c:	e10f0400 	tst	pc, r0, lsl #8
    6340:	1d000031 	stcne	0, cr0, [r0, #-196]	; 0xffffff3c
    6344:	03401151 	movteq	r1, #337	; 0x151
    6348:	0f080000 	svceq	0x00080000
    634c:	00000c20 	andeq	r0, r0, r0, lsr #24
    6350:	7511521d 	ldrvc	r5, [r1, #-541]	; 0xfffffde3
    6354:	0c000000 	stceq	0, cr0, [r0], {-0}
    6358:	0036ef0f 	eorseq	lr, r6, pc, lsl #30
    635c:	11531d00 	cmpne	r3, r0, lsl #26
    6360:	00000075 	andeq	r0, r0, r5, ror r0
    6364:	487e0f10 	ldmdami	lr!, {r4, r8, r9, sl, fp}^
    6368:	541d0000 	ldrpl	r0, [sp], #-0
    636c:	00007511 	andeq	r7, r0, r1, lsl r5
    6370:	5e0f1400 	cfcpyspl	mvf1, mvf15
    6374:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    6378:	00751155 	rsbseq	r1, r5, r5, asr r1
    637c:	00180000 	andseq	r0, r8, r0
    6380:	002ffc03 	eoreq	pc, pc, r3, lsl #24
    6384:	03561d00 	cmpeq	r6, #0, 26
    6388:	0000060b 	andeq	r0, r0, fp, lsl #12
    638c:	0006740a 	andeq	r7, r6, sl, lsl #8
    6390:	30c70300 	sbccc	r0, r7, r0, lsl #6
    6394:	2f1e0000 	svccs	0x001e0000
    6398:	00069115 	andeq	r9, r6, r5, lsl r1
    639c:	97041800 	strls	r1, [r4, -r0, lsl #16]
    63a0:	1b000006 	blne	63c0 <errno+0x63bc>
    63a4:	00000211 	andeq	r0, r0, r1, lsl r2
    63a8:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    63ac:	0005851c 	andeq	r8, r5, ip, lsl r5
    63b0:	004d1c00 	subeq	r1, sp, r0, lsl #24
    63b4:	401c0000 	andsmi	r0, ip, r0
    63b8:	1c000003 	stcne	0, cr0, [r0], {3}
    63bc:	00000075 	andeq	r0, r0, r5, ror r0
    63c0:	0005611c 	andeq	r6, r5, ip, lsl r1
    63c4:	a5030000 	strge	r0, [r3, #-0]
    63c8:	1e000027 	cdpne	0, 0, cr0, cr0, cr7, {1}
    63cc:	06c61531 			; <UNDEFINED> instruction: 0x06c61531
    63d0:	04180000 	ldreq	r0, [r8], #-0
    63d4:	000006cc 	andeq	r0, r0, ip, asr #13
    63d8:	0002111b 	andeq	r1, r2, fp, lsl r1
    63dc:	0006f900 	andeq	pc, r6, r0, lsl #18
    63e0:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    63e4:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    63e8:	1c000000 	stcne	0, cr0, [r0], {-0}
    63ec:	0000004d 	andeq	r0, r0, sp, asr #32
    63f0:	00004d1c 	andeq	r4, r0, ip, lsl sp
    63f4:	03401c00 	movteq	r1, #3072	; 0xc00
    63f8:	751c0000 	ldrvc	r0, [ip, #-0]
    63fc:	1c000000 	stcne	0, cr0, [r0], {-0}
    6400:	00000561 	andeq	r0, r0, r1, ror #10
    6404:	ff041800 			; <UNDEFINED> instruction: 0xff041800
    6408:	1b000006 	blne	6428 <errno+0x6424>
    640c:	00000081 	andeq	r0, r0, r1, lsl #1
    6410:	00000713 	andeq	r0, r0, r3, lsl r7
    6414:	0005851c 	andeq	r8, r5, ip, lsl r5
    6418:	004d1c00 	subeq	r1, sp, r0, lsl #24
    641c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    6420:	0000281a 	andeq	r2, r0, sl, lsl r8
    6424:	10371e0c 	eorsne	r1, r7, ip, lsl #28
    6428:	00000748 	andeq	r0, r0, r8, asr #14
    642c:	71726914 	cmnvc	r2, r4, lsl r9
    6430:	1f381e00 	svcne	0x00381e00
    6434:	00000685 	andeq	r0, r0, r5, lsl #13
    6438:	2cee0f00 	stclcs	15, cr0, [lr]
    643c:	391e0000 	ldmdbcc	lr, {}	; <UNPREDICTABLE>
    6440:	0006ba1f 	andeq	fp, r6, pc, lsl sl
    6444:	a10f0400 	tstge	pc, r0, lsl #8
    6448:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
    644c:	05850b3e 	streq	r0, [r5, #2878]	; 0xb3e
    6450:	00080000 	andeq	r0, r8, r0
    6454:	00260003 	eoreq	r0, r6, r3
    6458:	033f1e00 	teqeq	pc, #0, 28
    645c:	00000713 	andeq	r0, r0, r3, lsl r7
    6460:	00296d03 	eoreq	r6, r9, r3, lsl #26
    6464:	15221f00 	strne	r1, [r2, #-3840]!	; 0xfffff100
    6468:	00000760 	andeq	r0, r0, r0, ror #14
    646c:	07660418 			; <UNDEFINED> instruction: 0x07660418
    6470:	111b0000 	tstne	fp, r0
    6474:	84000002 	strhi	r0, [r0], #-2
    6478:	1c000007 	stcne	0, cr0, [r0], {7}
    647c:	00000585 	andeq	r0, r0, r5, lsl #11
    6480:	0005851c 	andeq	r8, r5, ip, lsl r5
    6484:	004d1c00 	subeq	r1, sp, r0, lsl #24
    6488:	841c0000 	ldrhi	r0, [ip], #-0
    648c:	00000007 	andeq	r0, r0, r7
    6490:	06740418 			; <UNDEFINED> instruction: 0x06740418
    6494:	58030000 	stmdapl	r3, {}	; <UNPREDICTABLE>
    6498:	1f000034 	svcne	0x00000034
    649c:	07961132 			; <UNDEFINED> instruction: 0x07961132
    64a0:	04180000 	ldreq	r0, [r8], #-0
    64a4:	0000079c 	muleq	r0, ip, r7
    64a8:	0005851b 	andeq	r8, r5, fp, lsl r5
    64ac:	0007b500 	andeq	fp, r7, r0, lsl #10
    64b0:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    64b4:	851c0000 	ldrhi	r0, [ip, #-0]
    64b8:	1c000005 	stcne	0, cr0, [r0], {5}
    64bc:	0000004d 	andeq	r0, r0, sp, asr #32
    64c0:	30120300 	andscc	r0, r2, r0, lsl #6
    64c4:	441f0000 	ldrmi	r0, [pc], #-0	; 64cc <errno+0x64c8>
    64c8:	0007c111 	andeq	ip, r7, r1, lsl r1
    64cc:	c7041800 	strgt	r1, [r4, -r0, lsl #16]
    64d0:	1b000007 	blne	64f4 <errno+0x64f0>
    64d4:	00000585 	andeq	r0, r0, r5, lsl #11
    64d8:	000007ea 	andeq	r0, r0, sl, ror #15
    64dc:	0005851c 	andeq	r8, r5, ip, lsl r5
    64e0:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    64e4:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    64e8:	1c000000 	stcne	0, cr0, [r0], {-0}
    64ec:	000007ea 	andeq	r0, r0, sl, ror #15
    64f0:	0007f01c 	andeq	pc, r7, ip, lsl r0	; <UNPREDICTABLE>
    64f4:	04180000 	ldreq	r0, [r8], #-0
    64f8:	00000081 	andeq	r0, r0, r1, lsl #1
    64fc:	00750418 	rsbseq	r0, r5, r8, lsl r4
    6500:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    6504:	1f000026 	svcne	0x00000026
    6508:	0802154d 	stmdaeq	r2, {r0, r2, r3, r6, r8, sl, ip}
    650c:	04180000 	ldreq	r0, [r8], #-0
    6510:	00000808 	andeq	r0, r0, r8, lsl #16
    6514:	0002111b 	andeq	r1, r2, fp, lsl r1
    6518:	00081c00 	andeq	r1, r8, r0, lsl #24
    651c:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    6520:	811c0000 	tsthi	ip, r0
    6524:	00000000 	andeq	r0, r0, r0
    6528:	0026e003 	eoreq	lr, r6, r3
    652c:	0f541f00 	svceq	0x00541f00
    6530:	00000828 	andeq	r0, r0, r8, lsr #16
    6534:	082e0418 	stmdaeq	lr!, {r3, r4, sl}
    6538:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    653c:	3d000000 	stccc	0, cr0, [r0, #-0]
    6540:	1c000008 	stcne	0, cr0, [r0], {8}
    6544:	00000585 	andeq	r0, r0, r5, lsl #11
    6548:	33e60300 	mvncc	r0, #0, 6
    654c:	621f0000 	andsvs	r0, pc, #0
    6550:	0006f914 	andeq	pc, r6, r4, lsl r9	; <UNPREDICTABLE>
    6554:	25e90300 	strbcs	r0, [r9, #768]!	; 0x300
    6558:	6c1f0000 	ldcvs	0, cr0, [pc], {-0}
    655c:	00085514 	andeq	r5, r8, r4, lsl r5
    6560:	5b041800 	blpl	10c568 <morecore_area+0xc3568>
    6564:	1b000008 	blne	658c <errno+0x6588>
    6568:	00000081 	andeq	r0, r0, r1, lsl #1
    656c:	0000086f 	andeq	r0, r0, pc, ror #16
    6570:	0005851c 	andeq	r8, r5, ip, lsl r5
    6574:	00811c00 	addeq	r1, r1, r0, lsl #24
    6578:	03000000 	movweq	r0, #0
    657c:	00002d9c 	muleq	r0, ip, sp
    6580:	7b13741f 	blvc	4e3604 <__bss_end__+0x39a5bc>
    6584:	18000008 	stmdane	r0, {r3}
    6588:	00088104 	andeq	r8, r8, r4, lsl #2
    658c:	05611b00 	strbeq	r1, [r1, #-2816]!	; 0xfffff500
    6590:	08900000 	ldmeq	r0, {}	; <UNPREDICTABLE>
    6594:	851c0000 	ldrhi	r0, [ip, #-0]
    6598:	00000005 	andeq	r0, r0, r5
    659c:	00241503 	eoreq	r1, r4, r3, lsl #10
    65a0:	0f7d1f00 	svceq	0x007d1f00
    65a4:	00000828 	andeq	r0, r0, r8, lsr #16
    65a8:	0033cc03 	eorseq	ip, r3, r3, lsl #24
    65ac:	148a1f00 	strne	r1, [sl], #3840	; 0xf00
    65b0:	000008a8 	andeq	r0, r0, r8, lsr #17
    65b4:	08ae0418 	stmiaeq	lr!, {r3, r4, sl}
    65b8:	811b0000 	tsthi	fp, r0
    65bc:	d1000000 	mrsle	r0, (UNDEF: 0)
    65c0:	1c000008 	stcne	0, cr0, [r0], {8}
    65c4:	00000585 	andeq	r0, r0, r5, lsl #11
    65c8:	00004d1c 	andeq	r4, r0, ip, lsl sp
    65cc:	08d11c00 	ldmeq	r1, {sl, fp, ip}^
    65d0:	d71c0000 	ldrle	r0, [ip, -r0]
    65d4:	1c000008 	stcne	0, cr0, [r0], {8}
    65d8:	000008dd 	ldrdeq	r0, [r0], -sp
    65dc:	3d041800 	stccc	8, cr1, [r4, #-0]
    65e0:	18000005 	stmdane	r0, {r0, r2}
    65e4:	00055504 	andeq	r5, r5, r4, lsl #10
    65e8:	e3041800 	movw	r1, #18432	; 0x4800
    65ec:	02000008 	andeq	r0, r0, #8
    65f0:	1bc90201 	blne	ff246dfc <__bss_end__+0xff0fddb4>
    65f4:	37030000 	strcc	r0, [r3, -r0]
    65f8:	1f000028 	svcne	0x00000028
    65fc:	08280f93 	stmdaeq	r8!, {r0, r1, r4, r7, r8, r9, sl, fp}
    6600:	62030000 	andvs	r0, r3, #0
    6604:	1f000032 	svcne	0x00000032
    6608:	06f9149e 	usateq	r1, #25, lr, lsl #9
    660c:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    6610:	1f000035 	svcne	0x00000035
    6614:	08280fa7 	stmdaeq	r8!, {r0, r1, r2, r5, r7, r8, r9, sl, fp}
    6618:	e2030000 	and	r0, r3, #0
    661c:	1f00002d 	svcne	0x0000002d
    6620:	06f914ba 			; <UNDEFINED> instruction: 0x06f914ba
    6624:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    6628:	1f000027 	svcne	0x00000027
    662c:	092610c1 	stmdbeq	r6!, {r0, r6, r7, ip}
    6630:	04180000 	ldreq	r0, [r8], #-0
    6634:	0000092c 	andeq	r0, r0, ip, lsr #18
    6638:	0009371d 	andeq	r3, r9, sp, lsl r7
    663c:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    6640:	03000000 	movweq	r0, #0
    6644:	00002c53 	andeq	r2, r0, r3, asr ip
    6648:	4313cd1f 	tstmi	r3, #1984	; 0x7c0
    664c:	18000009 	stmdane	r0, {r0, r3}
    6650:	00094904 	andeq	r4, r9, r4, lsl #18
    6654:	05871b00 	streq	r1, [r7, #2816]	; 0xb00
    6658:	095d0000 	ldmdbeq	sp, {}^	; <UNPREDICTABLE>
    665c:	851c0000 	ldrhi	r0, [ip, #-0]
    6660:	1c000005 	stcne	0, cr0, [r0], {5}
    6664:	00000075 	andeq	r0, r0, r5, ror r0
    6668:	332c0300 			; <UNDEFINED> instruction: 0x332c0300
    666c:	db1f0000 	blle	7c6674 <__bss_end__+0x67d62c>
    6670:	00096913 	andeq	r6, r9, r3, lsl r9
    6674:	6f041800 	svcvs	0x00041800
    6678:	1b000009 	blne	66a4 <errno+0x66a0>
    667c:	00000587 	andeq	r0, r0, r7, lsl #11
    6680:	0000098d 	andeq	r0, r0, sp, lsl #19
    6684:	0005851c 	andeq	r8, r5, ip, lsl r5
    6688:	00751c00 	rsbseq	r1, r5, r0, lsl #24
    668c:	851c0000 	ldrhi	r0, [ip, #-0]
    6690:	1c000005 	stcne	0, cr0, [r0], {5}
    6694:	00000587 	andeq	r0, r0, r7, lsl #11
    6698:	26050e00 	strcs	r0, [r5], -r0, lsl #28
    669c:	1f540000 	svcne	0x00540000
    66a0:	0a9210dd 	beq	fe48aa1c <__bss_end__+0xfe3419d4>
    66a4:	a10f0000 	mrsge	r0, CPSR
    66a8:	1f000019 	svcne	0x00000019
    66ac:	05850bde 	streq	r0, [r5, #3038]	; 0xbde
    66b0:	0f000000 	svceq	0x00000000
    66b4:	000036c2 	andeq	r3, r0, r2, asr #13
    66b8:	541ddf1f 	ldrpl	sp, [sp], #-3871	; 0xfffff0e1
    66bc:	04000007 	streq	r0, [r0], #-7
    66c0:	00266a0f 	eoreq	r6, r6, pc, lsl #20
    66c4:	21e01f00 	mvncs	r1, r0, lsl #30
    66c8:	0000078a 	andeq	r0, r0, sl, lsl #15
    66cc:	28a30f08 	stmiacs	r3!, {r3, r8, r9, sl, fp}
    66d0:	e11f0000 	tst	pc, r0
    66d4:	0007b51e 	andeq	fp, r7, lr, lsl r5
    66d8:	7b0f0c00 	blvc	3c96e0 <__bss_end__+0x280698>
    66dc:	1f000024 	svcne	0x00000024
    66e0:	07f61fe2 	ldrbeq	r1, [r6, r2, ror #31]!
    66e4:	0f100000 	svceq	0x00100000
    66e8:	0000368c 	andeq	r3, r0, ip, lsl #13
    66ec:	1c1de31f 	ldcne	3, cr14, [sp], {31}
    66f0:	14000008 	strne	r0, [r0], #-8
    66f4:	0031c80f 	eorseq	ip, r1, pc, lsl #16
    66f8:	1be41f00 	blne	ff90e300 <__bss_end__+0xff7c52b8>
    66fc:	0000083d 	andeq	r0, r0, sp, lsr r8
    6700:	31730f18 	cmncc	r3, r8, lsl pc
    6704:	e51f0000 	ldr	r0, [pc, #-0]	; 670c <errno+0x6708>
    6708:	0008491c 	andeq	r4, r8, ip, lsl r9
    670c:	190f1c00 	stmdbne	pc, {sl, fp, ip}	; <UNPREDICTABLE>
    6710:	1f000038 	svcne	0x00000038
    6714:	086f1ee6 	stmdaeq	pc!, {r1, r2, r5, r6, r7, r9, sl, fp, ip}^	; <UNPREDICTABLE>
    6718:	0f200000 	svceq	0x00200000
    671c:	0000277a 	andeq	r2, r0, sl, ror r7
    6720:	9021e71f 	eorls	lr, r1, pc, lsl r7
    6724:	24000008 	strcs	r0, [r0], #-8
    6728:	0034bf0f 	eorseq	fp, r4, pc, lsl #30
    672c:	1fe81f00 	svcne	0x00e81f00
    6730:	0000089c 	muleq	r0, ip, r8
    6734:	2a650f28 	bcs	194a3dc <__bss_end__+0x1801394>
    6738:	e91f0000 	ldmdb	pc, {}	; <UNPREDICTABLE>
    673c:	0008ea23 	andeq	lr, r8, r3, lsr #20
    6740:	590f2c00 	stmdbpl	pc, {sl, fp, sp}	; <UNPREDICTABLE>
    6744:	1f000023 	svcne	0x00000023
    6748:	08f621ea 	ldmeq	r6!, {r1, r3, r5, r6, r7, r8, sp}^
    674c:	0f300000 	svceq	0x00300000
    6750:	000037b8 			; <UNDEFINED> instruction: 0x000037b8
    6754:	021eeb1f 	andseq	lr, lr, #31744	; 0x7c00
    6758:	34000009 	strcc	r0, [r0], #-9
    675c:	0031380f 	eorseq	r3, r1, pc, lsl #16
    6760:	15ec1f00 	strbne	r1, [ip, #3840]!	; 0xf00
    6764:	0000091a 	andeq	r0, r0, sl, lsl r9
    6768:	34cb0f38 	strbcc	r0, [fp], #3896	; 0xf38
    676c:	ed1f0000 	ldc	0, cr0, [pc, #-0]	; 6774 <errno+0x6770>
    6770:	00090e1e 	andeq	r0, r9, lr, lsl lr
    6774:	350f3c00 	strcc	r3, [pc, #-3072]	; 5b7c <errno+0x5b78>
    6778:	1f000030 	svcne	0x00000030
    677c:	093729ee 	ldmdbeq	r7!, {r1, r2, r3, r5, r6, r7, r8, fp, sp}
    6780:	0f400000 	svceq	0x00400000
    6784:	00002e19 	andeq	r2, r0, r9, lsl lr
    6788:	5d25ef1f 	stcpl	15, cr14, [r5, #-124]!	; 0xffffff84
    678c:	44000009 	strmi	r0, [r0], #-9
    6790:	00281a0f 	eoreq	r1, r8, pc, lsl #20
    6794:	13f01f00 	mvnsne	r1, #0, 30
    6798:	00000748 	andeq	r0, r0, r8, asr #14
    679c:	05030048 	streq	r0, [r3, #-72]	; 0xffffffb8
    67a0:	1f000026 	svcne	0x00000026
    67a4:	098d03f1 	stmibeq	sp, {r0, r4, r5, r6, r7, r8, r9}
    67a8:	e1030000 	mrs	r0, (UNDEF: 3)
    67ac:	07000030 	smladxeq	r0, r0, r0, r0
    67b0:	0aaa0f1d 	beq	fea8a42c <__bss_end__+0xfe9413e4>
    67b4:	04180000 	ldreq	r0, [r8], #-0
    67b8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    67bc:	00004d1b 	andeq	r4, r0, fp, lsl sp
    67c0:	000ac400 	andeq	ip, sl, r0, lsl #8
    67c4:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    67c8:	ea1c0000 	b	7067d0 <__bss_end__+0x5bd788>
    67cc:	00000007 	andeq	r0, r0, r7
    67d0:	002ac103 	eoreq	ip, sl, r3, lsl #2
    67d4:	10270700 	eorne	r0, r7, r0, lsl #14
    67d8:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    67dc:	0ad60418 	beq	ff587844 <__bss_end__+0xff43e7fc>
    67e0:	eb1d0000 	bl	7467e8 <__bss_end__+0x5fd7a0>
    67e4:	1c00000a 	stcne	0, cr0, [r0], {10}
    67e8:	00000585 	andeq	r0, r0, r5, lsl #11
    67ec:	0000811c 	andeq	r8, r0, ip, lsl r1
    67f0:	07841c00 	streq	r1, [r4, r0, lsl #24]
    67f4:	03000000 	movweq	r0, #0
    67f8:	000026bf 			; <UNDEFINED> instruction: 0x000026bf
    67fc:	f7102f07 			; <UNDEFINED> instruction: 0xf7102f07
    6800:	1800000a 	stmdane	r0, {r1, r3}
    6804:	000afd04 	andeq	pc, sl, r4, lsl #26
    6808:	0b0d1d00 	bleq	34dc10 <__bss_end__+0x204bc8>
    680c:	851c0000 	ldrhi	r0, [ip, #-0]
    6810:	1c000005 	stcne	0, cr0, [r0], {5}
    6814:	00000081 	andeq	r0, r0, r1, lsl #1
    6818:	29d20300 	ldmibcs	r2, {r8, r9}^
    681c:	3b070000 	blcc	1c6824 <__bss_end__+0x7d7dc>
    6820:	000b190f 	andeq	r1, fp, pc, lsl #18
    6824:	1f041800 	svcne	0x00041800
    6828:	1b00000b 	blne	685c <errno+0x6858>
    682c:	0000004d 	andeq	r0, r0, sp, asr #32
    6830:	00000b42 	andeq	r0, r0, r2, asr #22
    6834:	0005851c 	andeq	r8, r5, ip, lsl r5
    6838:	0b421c00 	bleq	108d840 <__bss_end__+0xf447f8>
    683c:	751c0000 	ldrvc	r0, [ip, #-0]
    6840:	1c000000 	stcne	0, cr0, [r0], {-0}
    6844:	00000075 	andeq	r0, r0, r5, ror r0
    6848:	0007f01c 	andeq	pc, r7, ip, lsl r0	; <UNPREDICTABLE>
    684c:	04180000 	ldreq	r0, [r8], #-0
    6850:	00000680 	andeq	r0, r0, r0, lsl #13
    6854:	0034ff03 	eorseq	pc, r4, r3, lsl #30
    6858:	0f490700 	svceq	0x00490700
    685c:	00000b54 	andeq	r0, r0, r4, asr fp
    6860:	0b5a0418 	bleq	16878c8 <__bss_end__+0x153e880>
    6864:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    6868:	82000000 	andhi	r0, r0, #0
    686c:	1c00000b 	stcne	0, cr0, [r0], {11}
    6870:	00000585 	andeq	r0, r0, r5, lsl #11
    6874:	000b421c 	andeq	r4, fp, ip, lsl r2
    6878:	00751c00 	rsbseq	r1, r5, r0, lsl #24
    687c:	751c0000 	ldrvc	r0, [ip, #-0]
    6880:	1c000000 	stcne	0, cr0, [r0], {-0}
    6884:	00000555 	andeq	r0, r0, r5, asr r5
    6888:	0007f01c 	andeq	pc, r7, ip, lsl r0	; <UNPREDICTABLE>
    688c:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    6890:	07000026 	streq	r0, [r0, -r6, lsr #32]
    6894:	0b8e0f57 	bleq	fe38a5f8 <__bss_end__+0xfe2415b0>
    6898:	04180000 	ldreq	r0, [r8], #-0
    689c:	00000b94 	muleq	r0, r4, fp
    68a0:	00004d1b 	andeq	r4, r0, fp, lsl sp
    68a4:	000bbc00 	andeq	fp, fp, r0, lsl #24
    68a8:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    68ac:	421c0000 	andsmi	r0, ip, #0
    68b0:	1c00000b 	stcne	0, cr0, [r0], {11}
    68b4:	00000075 	andeq	r0, r0, r5, ror r0
    68b8:	0000751c 	andeq	r7, r0, ip, lsl r5
    68bc:	08e31c00 	stmiaeq	r3!, {sl, fp, ip}^
    68c0:	f01c0000 			; <UNDEFINED> instruction: 0xf01c0000
    68c4:	00000007 	andeq	r0, r0, r7
    68c8:	002fba03 	eoreq	fp, pc, r3, lsl #20
    68cc:	10630700 	rsbne	r0, r3, r0, lsl #14
    68d0:	00000bc8 	andeq	r0, r0, r8, asr #23
    68d4:	0bce0418 	bleq	ff38793c <__bss_end__+0xff23e8f4>
    68d8:	e81d0000 	ldmda	sp, {}	; <UNPREDICTABLE>
    68dc:	1c00000b 	stcne	0, cr0, [r0], {11}
    68e0:	00000585 	andeq	r0, r0, r5, lsl #11
    68e4:	0000751c 	andeq	r7, r0, ip, lsl r5
    68e8:	00751c00 	rsbseq	r1, r5, r0, lsl #24
    68ec:	751c0000 	ldrvc	r0, [ip, #-0]
    68f0:	00000000 	andeq	r0, r0, r0
    68f4:	002a8503 	eoreq	r8, sl, r3, lsl #10
    68f8:	156e0700 	strbne	r0, [lr, #-1792]!	; 0xfffff900
    68fc:	00000bf4 	strdeq	r0, [r0], -r4
    6900:	0bfa0418 	bleq	ffe87968 <__bss_end__+0xffd3e920>
    6904:	551b0000 	ldrpl	r0, [fp, #-0]
    6908:	18000005 	stmdane	r0, {r0, r2}
    690c:	1c00000c 	stcne	0, cr0, [r0], {12}
    6910:	00000585 	andeq	r0, r0, r5, lsl #11
    6914:	0000751c 	andeq	r7, r0, ip, lsl r5
    6918:	00751c00 	rsbseq	r1, r5, r0, lsl #24
    691c:	751c0000 	ldrvc	r0, [ip, #-0]
    6920:	00000000 	andeq	r0, r0, r0
    6924:	616b761e 	cmnvs	fp, lr, lsl r6
    6928:	7c072400 	cfstrsvc	mvf2, [r7], {-0}
    692c:	000c9b10 	andeq	r9, ip, r0, lsl fp
    6930:	19a10f00 	stmibne	r1!, {r8, r9, sl, fp}
    6934:	7d070000 	stcvc	0, cr0, [r7, #-0]
    6938:	0005850b 	andeq	r8, r5, fp, lsl #10
    693c:	360f0000 	strcc	r0, [pc], -r0
    6940:	07000039 	smladxeq	r0, r9, r0, r0
    6944:	0a9e197e 	beq	fe78cf44 <__bss_end__+0xfe643efc>
    6948:	0f040000 	svceq	0x00040000
    694c:	000031f6 	strdeq	r3, [r0], -r6
    6950:	c41d7f07 	ldrgt	r7, [sp], #-3847	; 0xfffff0f9
    6954:	0800000a 	stmdaeq	r0, {r1, r3}
    6958:	0030810f 	eorseq	r8, r0, pc, lsl #2
    695c:	1a800700 	bne	fe008564 <__bss_end__+0xfdebf51c>
    6960:	00000b0d 	andeq	r0, r0, sp, lsl #22
    6964:	3a800f0c 	bcc	fe00a59c <__bss_end__+0xfdec1554>
    6968:	81070000 	mrshi	r0, (UNDEF: 7)
    696c:	000b8227 	andeq	r8, fp, r7, lsr #4
    6970:	b90f1000 	stmdblt	pc, {ip}	; <UNPREDICTABLE>
    6974:	07000038 	smladxeq	r0, r8, r0, r0
    6978:	0b481d82 	bleq	120df88 <__bss_end__+0x10c4f40>
    697c:	0f140000 	svceq	0x00140000
    6980:	000024cd 	andeq	r2, r0, sp, asr #9
    6984:	eb188307 	bl	6275a8 <__bss_end__+0x4de560>
    6988:	1800000a 	stmdane	r0, {r1, r3}
    698c:	003a6f0f 	eorseq	r6, sl, pc, lsl #30
    6990:	19840700 	stmibne	r4, {r8, r9, sl}
    6994:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    6998:	33be0f1c 			; <UNDEFINED> instruction: 0x33be0f1c
    699c:	85070000 	strhi	r0, [r7, #-0]
    69a0:	000be81a 	andeq	lr, fp, sl, lsl r8
    69a4:	03002000 	movweq	r2, #0
    69a8:	00002b2f 	andeq	r2, r0, pc, lsr #22
    69ac:	18038607 	stmdane	r3, {r0, r1, r2, r9, sl, pc}
    69b0:	1700000c 	strne	r0, [r0, -ip]
    69b4:	00001732 	andeq	r1, r0, r2, lsr r7
    69b8:	4d1a1020 	ldcmi	0, cr1, [sl, #-128]	; 0xffffff80
    69bc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    69c0:	00002e5a 	andeq	r2, r0, sl, asr lr
    69c4:	00600407 	rsbeq	r0, r0, r7, lsl #8
    69c8:	15210000 	strne	r0, [r1, #-0]!
    69cc:	000cf00e 	andeq	pc, ip, lr
    69d0:	24d90600 	ldrbcs	r0, [r9], #1536	; 0x600
    69d4:	06000000 	streq	r0, [r0], -r0
    69d8:	00002bfb 	strdeq	r2, [r0], -fp
    69dc:	290f0601 	stmdbcs	pc, {r0, r9, sl}	; <UNPREDICTABLE>
    69e0:	06020000 	streq	r0, [r2], -r0
    69e4:	00002fce 	andeq	r2, r0, lr, asr #31
    69e8:	2e0e0603 	cfmadd32cs	mvax0, mvfx0, mvfx14, mvfx3
    69ec:	06040000 	streq	r0, [r4], -r0
    69f0:	000028fc 	strdeq	r2, [r0], -ip
    69f4:	2c840605 	stccs	6, cr0, [r4], {5}
    69f8:	00060000 	andeq	r0, r6, r0
    69fc:	00367a03 	eorseq	r7, r6, r3, lsl #20
    6a00:	031d2100 	tsteq	sp, #0, 2
    6a04:	00000cb3 			; <UNDEFINED> instruction: 0x00000cb3
    6a08:	2721141f 			; <UNDEFINED> instruction: 0x2721141f
    6a0c:	000d4709 	andeq	r4, sp, r9, lsl #14
    6a10:	36850f00 	strcc	r0, [r5], r0, lsl #30
    6a14:	28210000 	stmdacs	r1!, {}	; <UNPREDICTABLE>
    6a18:	00054e12 	andeq	r4, r5, r2, lsl lr
    6a1c:	70140000 	andsvc	r0, r4, r0
    6a20:	21006e69 	tstcs	r0, r9, ror #28
    6a24:	054e1229 	strbeq	r1, [lr, #-553]	; 0xfffffdd7
    6a28:	0f040000 	svceq	0x00040000
    6a2c:	00004e00 	andeq	r4, r0, r0, lsl #28
    6a30:	4e122a21 	vnmlsmi.f32	s4, s4, s3
    6a34:	08000005 	stmdaeq	r0, {r0, r2}
    6a38:	0023670f 	eoreq	r6, r3, pc, lsl #14
    6a3c:	122b2100 	eorne	r2, fp, #0, 2
    6a40:	0000054e 	andeq	r0, r0, lr, asr #10
    6a44:	33900f0c 	orrscc	r0, r0, #12, 30	; 0x30
    6a48:	2c210000 	stccs	0, cr0, [r1], #-0
    6a4c:	00054e12 	andeq	r4, r5, r2, lsl lr
    6a50:	1f001000 	svcne	0x00001000
    6a54:	092e2114 	stmdbeq	lr!, {r2, r4, r8, sp}
    6a58:	00000d92 	muleq	r0, r2, sp
    6a5c:	002f310f 	eoreq	r3, pc, pc, lsl #2
    6a60:	122f2100 	eorne	r2, pc, #0, 2
    6a64:	0000054e 	andeq	r0, r0, lr, asr #10
    6a68:	35ff0f00 	ldrbcc	r0, [pc, #3840]!	; 7970 <errno+0x796c>
    6a6c:	30210000 	eorcc	r0, r1, r0
    6a70:	00054e12 	andeq	r4, r5, r2, lsl lr
    6a74:	350f0400 	strcc	r0, [pc, #-1024]	; 667c <errno+0x6678>
    6a78:	2100002b 	tstcs	r0, fp, lsr #32
    6a7c:	054e1231 	strbeq	r1, [lr, #-561]	; 0xfffffdcf
    6a80:	0f080000 	svceq	0x00080000
    6a84:	000042cf 	andeq	r4, r0, pc, asr #5
    6a88:	4e123221 	cdpmi	2, 1, cr3, cr2, cr1, {1}
    6a8c:	0c000005 	stceq	0, cr0, [r0], {5}
    6a90:	0033900f 	eorseq	r9, r3, pc
    6a94:	12332100 	eorsne	r2, r3, #0, 2
    6a98:	0000054e 	andeq	r0, r0, lr, asr #10
    6a9c:	041f0010 	ldreq	r0, [pc], #-16	; 6aa4 <errno+0x6aa0>
    6aa0:	a9093521 	stmdbge	r9, {r0, r5, r8, sl, ip, sp}
    6aa4:	0f00000d 	svceq	0x0000000d
    6aa8:	00003497 	muleq	r0, r7, r4
    6aac:	4e123621 	cfmsub32mi	mvax1, mvfx3, mvfx2, mvfx1
    6ab0:	00000005 	andeq	r0, r0, r5
    6ab4:	21081f00 	tstcs	r8, r0, lsl #30
    6ab8:	0dcd0938 	vstreq.16	s1, [sp, #112]	; 0x70	; <UNPREDICTABLE>
    6abc:	970f0000 	strls	r0, [pc, -r0]
    6ac0:	21000034 	tstcs	r0, r4, lsr r0
    6ac4:	054e1239 	strbeq	r1, [lr, #-569]	; 0xfffffdc7
    6ac8:	0f000000 	svceq	0x00000000
    6acc:	00003e0e 	andeq	r3, r0, lr, lsl #28
    6ad0:	4e123a21 	vnmlsmi.f32	s6, s4, s3
    6ad4:	04000005 	streq	r0, [r0], #-5
    6ad8:	210c1f00 	tstcs	ip, r0, lsl #30
    6adc:	0dfe093c 			; <UNDEFINED> instruction: 0x0dfe093c
    6ae0:	970f0000 	strls	r0, [pc, -r0]
    6ae4:	21000034 	tstcs	r0, r4, lsr r0
    6ae8:	054e123d 	strbeq	r1, [lr, #-573]	; 0xfffffdc3
    6aec:	0f000000 	svceq	0x00000000
    6af0:	00003e0e 	andeq	r3, r0, lr, lsl #28
    6af4:	4e123e21 	cdpmi	14, 1, cr3, cr2, cr1, {1}
    6af8:	04000005 	streq	r0, [r0], #-5
    6afc:	0029070f 	eoreq	r0, r9, pc, lsl #14
    6b00:	123f2100 	eorsne	r2, pc, #0, 2
    6b04:	0000054e 	andeq	r0, r0, lr, asr #10
    6b08:	14200008 	strtne	r0, [r0], #-8
    6b0c:	50052621 	andpl	r2, r5, r1, lsr #12
    6b10:	2100000e 	tstcs	r0, lr
    6b14:	00003685 	andeq	r3, r0, r5, lsl #13
    6b18:	fc0b2d21 	vdot.bf16	d2, d11, d17
    6b1c:	2200000c 	andcs	r0, r0, #12
    6b20:	0069736d 	rsbeq	r7, r9, sp, ror #6
    6b24:	470b3421 	strmi	r3, [fp, -r1, lsr #8]
    6b28:	2200000d 	andcs	r0, r0, #13
    6b2c:	00717269 	rsbseq	r7, r1, r9, ror #4
    6b30:	920b3721 	andls	r3, fp, #8650752	; 0x840000
    6b34:	2100000d 	tstcs	r0, sp
    6b38:	00003e0e 	andeq	r3, r0, lr, lsl #28
    6b3c:	a90b3b21 	stmdbge	fp, {r0, r5, r8, r9, fp, ip, sp}
    6b40:	2200000d 	andcs	r0, r0, #13
    6b44:	00757063 	rsbseq	r7, r5, r3, rrx
    6b48:	cd0b4021 	stcgt	0, cr4, [fp, #-132]	; 0xffffff7c
    6b4c:	2100000d 	tstcs	r0, sp
    6b50:	00002919 	andeq	r2, r0, r9, lsl r9
    6b54:	850f4121 	strhi	r4, [pc, #-289]	; 6a3b <errno+0x6a37>
    6b58:	00000005 	andeq	r0, r0, r5
    6b5c:	2421181f 	strtcs	r1, [r1], #-2079	; 0xfffff7e1
    6b60:	000e6d09 	andeq	r6, lr, r9, lsl #26
    6b64:	038d0f00 	orreq	r0, sp, #0, 30
    6b68:	25210000 	strcs	r0, [r1, #-0]!
    6b6c:	000cf010 	andeq	pc, ip, r0, lsl r0	; <UNPREDICTABLE>
    6b70:	fe230000 	cdp2	0, 2, cr0, cr3, cr0, {0}
    6b74:	0400000d 	streq	r0, [r0], #-13
    6b78:	30be0300 	adcscc	r0, lr, r0, lsl #6
    6b7c:	43210000 			; <UNDEFINED> instruction: 0x43210000
    6b80:	000e5003 	andeq	r5, lr, r3
    6b84:	26b60300 	ldrtcs	r0, [r6], r0, lsl #6
    6b88:	45210000 	strmi	r0, [r1, #-0]!
    6b8c:	00004d0d 	andeq	r4, r0, sp, lsl #26
    6b90:	28730300 	ldmdacs	r3!, {r8, r9}^
    6b94:	4e210000 	cdpmi	0, 2, cr0, cr1, cr0, {0}
    6b98:	0008280f 	andeq	r2, r8, pc, lsl #16
    6b9c:	292e0300 	stmdbcs	lr!, {r8, r9}
    6ba0:	5f210000 	svcpl	0x00210000
    6ba4:	000e9d10 	andeq	r9, lr, r0, lsl sp
    6ba8:	a3041800 	movwge	r1, #18432	; 0x4800
    6bac:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    6bb0:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
    6bb4:	0005851c 	andeq	r8, r5, ip, lsl r5
    6bb8:	0e851c00 	cdpeq	12, 8, cr1, cr5, cr0, {0}
    6bbc:	851c0000 	ldrhi	r0, [ip, #-0]
    6bc0:	00000005 	andeq	r0, r0, r5
    6bc4:	0025b503 	eoreq	fp, r5, r3, lsl #10
    6bc8:	14702100 	ldrbtne	r2, [r0], #-256	; 0xffffff00
    6bcc:	00000ec4 	andeq	r0, r0, r4, asr #29
    6bd0:	0eca0418 	mcreq	4, 6, r0, cr10, cr8, {0}
    6bd4:	791b0000 	ldmdbvc	fp, {}	; <UNPREDICTABLE>
    6bd8:	e800000e 	stmda	r0, {r1, r2, r3}
    6bdc:	1c00000e 	stcne	0, cr0, [r0], {14}
    6be0:	00000585 	andeq	r0, r0, r5, lsl #11
    6be4:	000e6d1c 	andeq	r6, lr, ip, lsl sp
    6be8:	0e911c00 	cdpeq	12, 9, cr1, cr1, cr0, {0}
    6bec:	851c0000 	ldrhi	r0, [ip, #-0]
    6bf0:	00000005 	andeq	r0, r0, r5
    6bf4:	00318e03 	eorseq	r8, r1, r3, lsl #28
    6bf8:	0f7b2100 	svceq	0x007b2100
    6bfc:	00000ef4 	strdeq	r0, [r0], -r4
    6c00:	0efa0418 	mrceq	4, 7, r0, cr10, cr8, {0}
    6c04:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    6c08:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    6c0c:	1c00000f 	stcne	0, cr0, [r0], {15}
    6c10:	00000585 	andeq	r0, r0, r5, lsl #11
    6c14:	000e791c 	andeq	r7, lr, ip, lsl r9
    6c18:	0c1f0000 	ldceq	0, cr0, [pc], {-0}
    6c1c:	3f097d21 	svccc	0x00097d21
    6c20:	0f00000f 	svceq	0x0000000f
    6c24:	00002a2e 	andeq	r2, r0, lr, lsr #20
    6c28:	850b7e21 	strhi	r7, [fp, #-3617]	; 0xfffff1df
    6c2c:	00000005 	andeq	r0, r0, r5
    6c30:	0037c30f 	eorseq	ip, r7, pc, lsl #6
    6c34:	1a7f2100 	bne	1fcf03c <__bss_end__+0x1e85ff4>
    6c38:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
    6c3c:	23ca0f04 	biccs	r0, sl, #4, 30
    6c40:	80210000 	eorhi	r0, r1, r0
    6c44:	000ee81c 	andeq	lr, lr, ip, lsl r8
    6c48:	03000800 	movweq	r0, #2048	; 0x800
    6c4c:	000036a4 	andeq	r3, r0, r4, lsr #13
    6c50:	0e038121 	mvfeqsp	f0, f1
    6c54:	0200000f 	andeq	r0, r0, #15
    6c58:	15f30408 	ldrbne	r0, [r3, #1032]!	; 0x408
    6c5c:	8d030000 	stchi	0, cr0, [r3, #-0]
    6c60:	2200002c 	andcs	r0, r0, #44	; 0x2c
    6c64:	0f5e1a10 	svceq	0x005e1a10
    6c68:	4c100000 	ldcmi	0, cr0, [r0], {-0}
    6c6c:	80000033 	andhi	r0, r0, r3, lsr r0
    6c70:	0801ea22 	stmdaeq	r1, {r1, r5, r9, fp, sp, lr, pc}
    6c74:	00000feb 	andeq	r0, r0, fp, ror #31
    6c78:	002c1b11 	eoreq	r1, ip, r1, lsl fp
    6c7c:	01eb2200 	mvneq	r2, r0, lsl #4
    6c80:	00161114 	andseq	r1, r6, r4, lsl r1
    6c84:	9d110000 	ldcls	0, cr0, [r1, #-0]
    6c88:	2200002a 	andcs	r0, r0, #42	; 0x2a
    6c8c:	b81601ec 	ldmdalt	r6, {r2, r3, r5, r6, r7, r8}
    6c90:	0c000016 	stceq	0, cr0, [r0], {22}
    6c94:	0023eb11 	eoreq	lr, r3, r1, lsl fp
    6c98:	01ed2200 	mvneq	r2, r0, lsl #4
    6c9c:	0017f512 	andseq	pc, r7, r2, lsl r5	; <UNPREDICTABLE>
    6ca0:	94111800 	ldrls	r1, [r1], #-2048	; 0xfffff800
    6ca4:	22000032 	andcs	r0, r0, #50	; 0x32
    6ca8:	2d1101ee 	ldfcss	f0, [r1, #-952]	; 0xfffffc48
    6cac:	30000019 	andcc	r0, r0, r9, lsl r0
    6cb0:	00302b11 	eorseq	r2, r0, r1, lsl fp
    6cb4:	01f02200 	mvnseq	r2, r0, lsl #4
    6cb8:	0010a011 	andseq	sl, r0, r1, lsl r0
    6cbc:	87113800 	ldrhi	r3, [r1, -r0, lsl #16]
    6cc0:	22000024 	andcs	r0, r0, #36	; 0x24
    6cc4:	340f01f1 	strcc	r0, [pc], #-497	; 6ccc <errno+0x6cc8>
    6cc8:	44000013 	strmi	r0, [r0], #-19	; 0xffffffed
    6ccc:	0022f711 	eoreq	pc, r2, r1, lsl r7	; <UNPREDICTABLE>
    6cd0:	01f32200 	mvnseq	r2, r0, lsl #4
    6cd4:	00154325 	andseq	r4, r5, r5, lsr #6
    6cd8:	8c115400 	cfldrshi	mvf5, [r1], {-0}
    6cdc:	22000034 	andcs	r0, r0, #52	; 0x34
    6ce0:	d31501f4 	tstle	r5, #244, 2	; 0x3d
    6ce4:	64000018 	strvs	r0, [r0], #-24	; 0xffffffe8
    6ce8:	002ab911 	eoreq	fp, sl, r1, lsl r9
    6cec:	01f52200 	mvnseq	r2, r0, lsl #4
    6cf0:	000f3f12 	andeq	r3, pc, r2, lsl pc	; <UNPREDICTABLE>
    6cf4:	03007400 	movweq	r7, #1024	; 0x400
    6cf8:	0000311f 	andeq	r3, r0, pc, lsl r1
    6cfc:	f7161023 			; <UNDEFINED> instruction: 0xf7161023
    6d00:	0e00000f 	cdpeq	0, 0, cr0, cr0, cr15, {0}
    6d04:	0000339b 	muleq	r0, fp, r3
    6d08:	08272338 	stmdaeq	r7!, {r3, r4, r5, r8, r9, sp}
    6d0c:	000010a0 	andeq	r1, r0, r0, lsr #1
    6d10:	00646914 	rsbeq	r6, r4, r4, lsl r9
    6d14:	e1112823 	tst	r1, r3, lsr #16
    6d18:	00000010 	andeq	r0, r0, r0, lsl r0
    6d1c:	0020290f 	eoreq	r2, r0, pc, lsl #18
    6d20:	112a2300 			; <UNDEFINED> instruction: 0x112a2300
    6d24:	000005f3 	strdeq	r0, [r0], -r3
    6d28:	40380f04 	eorsmi	r0, r8, r4, lsl #30
    6d2c:	2c230000 	stccs	0, cr0, [r3], #-0
    6d30:	0005850b 	andeq	r8, r5, fp, lsl #10
    6d34:	1c0f0800 	stcne	8, cr0, [pc], {-0}
    6d38:	23000034 	movwcs	r0, #52	; 0x34
    6d3c:	05e70c2e 	strbeq	r0, [r7, #3118]!	; 0xc2e
    6d40:	0f100000 	svceq	0x00100000
    6d44:	00002f46 	andeq	r2, r0, r6, asr #30
    6d48:	720c3123 	andvc	r3, ip, #-1073741816	; 0xc0000008
    6d4c:	18000012 	stmdane	r0, {r1, r4}
    6d50:	0035610f 	eorseq	r6, r5, pc, lsl #2
    6d54:	0c332300 	ldceq	3, cr2, [r3], #-0
    6d58:	00001272 	andeq	r1, r0, r2, ror r2
    6d5c:	2e630f1c 	mcrcs	15, 3, r0, cr3, cr12, {0}
    6d60:	35230000 	strcc	r0, [r3, #-0]!
    6d64:	0012720c 	andseq	r7, r2, ip, lsl #4
    6d68:	500f2000 	andpl	r2, pc, r0
    6d6c:	23000034 	movwcs	r0, #52	; 0x34
    6d70:	12781238 	rsbsne	r1, r8, #56, 4	; 0x80000003
    6d74:	0f240000 	svceq	0x00240000
    6d78:	000040c8 	andeq	r4, r0, r8, asr #1
    6d7c:	b20e3a23 	andlt	r3, lr, #143360	; 0x23000
    6d80:	28000012 	stmdacs	r0, {r1, r4}
    6d84:	0028bb0f 	eoreq	fp, r8, pc, lsl #22
    6d88:	0e3b2300 	cdpeq	3, 3, cr2, cr11, cr0, {0}
    6d8c:	000012c7 	andeq	r1, r0, r7, asr #5
    6d90:	30090f2c 	andcc	r0, r9, ip, lsr #30
    6d94:	3c230000 	stccc	0, cr0, [r3], #-0
    6d98:	0012e10e 	andseq	lr, r2, lr, lsl #2
    6d9c:	840f3000 	strhi	r3, [pc], #-0	; 6da4 <errno+0x6da0>
    6da0:	23000026 	movwcs	r0, #38	; 0x26
    6da4:	12f20c3d 	rscsne	r0, r2, #15616	; 0x3d00
    6da8:	00340000 	eorseq	r0, r4, r0
    6dac:	00254a03 	eoreq	r4, r5, r3, lsl #20
    6db0:	1a112300 	bne	44f9b8 <__bss_end__+0x306970>
    6db4:	000010ac 	andeq	r1, r0, ip, lsr #1
    6db8:	00302b0e 	eorseq	r2, r0, lr, lsl #22
    6dbc:	1f230c00 	svcne	0x00230c00
    6dc0:	0010e108 	andseq	lr, r0, r8, lsl #2
    6dc4:	33970f00 	orrscc	r0, r7, #0, 30
    6dc8:	20230000 	eorcs	r0, r3, r0
    6dcc:	00127e0e 	andseq	r7, r2, lr, lsl #28
    6dd0:	330f0000 	movwcc	r0, #61440	; 0xf000
    6dd4:	23000025 	movwcs	r0, #37	; 0x25
    6dd8:	129d0b21 	addsne	r0, sp, #33792	; 0x8400
    6ddc:	0f040000 	svceq	0x00040000
    6de0:	00004038 	andeq	r4, r0, r8, lsr r0
    6de4:	850b2223 	strhi	r2, [fp, #-547]	; 0xfffffddd
    6de8:	08000005 	stmdaeq	r0, {r0, r2}
    6dec:	22f00900 	rscscs	r0, r0, #0, 18
    6df0:	04070000 	streq	r0, [r7], #-0
    6df4:	00000060 	andeq	r0, r0, r0, rrx
    6df8:	ae060924 	vmlage.f16	s0, s12, s9	; <UNPREDICTABLE>
    6dfc:	06000011 			; <UNDEFINED> instruction: 0x06000011
    6e00:	0000253f 	andeq	r2, r0, pc, lsr r5
    6e04:	25a90600 	strcs	r0, [r9, #1536]!	; 0x600
    6e08:	06010000 	streq	r0, [r1], -r0
    6e0c:	000030b2 	strheq	r3, [r0], -r2
    6e10:	38780602 	ldmdacc	r8!, {r1, r9, sl}^
    6e14:	06030000 	streq	r0, [r3], -r0
    6e18:	0000359a 	muleq	r0, sl, r5
    6e1c:	27bf0604 	ldrcs	r0, [pc, r4, lsl #12]!
    6e20:	06050000 	streq	r0, [r5], -r0
    6e24:	00002d24 	andeq	r2, r0, r4, lsr #26
    6e28:	239e0606 	orrscs	r0, lr, #6291456	; 0x600000
    6e2c:	06070000 	streq	r0, [r7], -r0
    6e30:	00002c32 	andeq	r2, r0, r2, lsr ip
    6e34:	2d190608 	ldccs	6, cr0, [r9, #-32]	; 0xffffffe0
    6e38:	06090000 	streq	r0, [r9], -r0
    6e3c:	0000286b 	andeq	r2, r0, fp, ror #16
    6e40:	2e2b060a 	cfmadda32cs	mvax0, mvax0, mvfx11, mvfx10
    6e44:	060b0000 	streq	r0, [fp], -r0
    6e48:	00002e34 	andeq	r2, r0, r4, lsr lr
    6e4c:	34eb060c 	strbtcc	r0, [fp], #1548	; 0x60c
    6e50:	060d0000 	streq	r0, [sp], -r0
    6e54:	000034f5 	strdeq	r3, [r0], -r5
    6e58:	31b6060e 			; <UNDEFINED> instruction: 0x31b6060e
    6e5c:	060f0000 	streq	r0, [pc], -r0
    6e60:	000031bf 			; <UNDEFINED> instruction: 0x000031bf
    6e64:	331a0610 	tstcc	sl, #16, 12	; 0x1000000
    6e68:	06110000 	ldreq	r0, [r1], -r0
    6e6c:	00003323 	andeq	r3, r0, r3, lsr #6
    6e70:	37730612 			; <UNDEFINED> instruction: 0x37730612
    6e74:	06130000 	ldreq	r0, [r3], -r0
    6e78:	0000377d 	andeq	r3, r0, sp, ror r7
    6e7c:	27140614 			; <UNDEFINED> instruction: 0x27140614
    6e80:	06150000 	ldreq	r0, [r5], -r0
    6e84:	00003125 	andeq	r3, r0, r5, lsr #2
    6e88:	36460616 			; <UNDEFINED> instruction: 0x36460616
    6e8c:	06170000 	ldreq	r0, [r7], -r0
    6e90:	00003653 	andeq	r3, r0, r3, asr r6
    6e94:	36600618 			; <UNDEFINED> instruction: 0x36600618
    6e98:	06190000 	ldreq	r0, [r9], -r0
    6e9c:	0000366d 	andeq	r3, r0, sp, ror #12
    6ea0:	2812061a 	ldmdacs	r2, {r1, r3, r4, r9, sl}
    6ea4:	061b0000 	ldreq	r0, [fp], -r0
    6ea8:	0000288b 	andeq	r2, r0, fp, lsl #17
    6eac:	2cc8061c 	stclcs	6, cr0, [r8], {28}
    6eb0:	061d0000 	ldreq	r0, [sp], -r0
    6eb4:	000024f8 	strdeq	r2, [r0], -r8
    6eb8:	0f090000 	svceq	0x00090000
    6ebc:	07000033 	smladxeq	r0, r3, r0, r0
    6ec0:	00006004 	andeq	r6, r0, r4
    6ec4:	06342400 	ldrteq	r2, [r4], -r0, lsl #8
    6ec8:	00001233 	andeq	r1, r0, r3, lsr r2
    6ecc:	002bda06 	eoreq	sp, fp, r6, lsl #20
    6ed0:	f5060000 			; <UNDEFINED> instruction: 0xf5060000
    6ed4:	02000030 	andeq	r0, r0, #48	; 0x30
    6ed8:	00357206 	eorseq	r7, r5, r6, lsl #4
    6edc:	6d060300 	stcvs	3, cr0, [r6, #-0]
    6ee0:	06000027 	streq	r0, [r0], -r7, lsr #32
    6ee4:	002c2506 	eoreq	r2, ip, r6, lsl #10
    6ee8:	90060700 	andls	r0, r6, r0, lsl #14
    6eec:	0a000023 	beq	6f80 <errno+0x6f7c>
    6ef0:	0034b106 	eorseq	fp, r4, r6, lsl #2
    6ef4:	8a060b00 	bhi	189afc <__bss_end__+0x40ab4>
    6ef8:	0e000026 	cdpeq	0, 0, cr0, cr0, cr6, {1}
    6efc:	002c7706 	eoreq	r7, ip, r6, lsl #14
    6f00:	44060f00 	strmi	r0, [r6], #-3840	; 0xfffff100
    6f04:	10000024 	andne	r0, r0, r4, lsr #32
    6f08:	0028ae06 	eoreq	sl, r8, r6, lsl #28
    6f0c:	56061100 	strpl	r1, [r6], -r0, lsl #2
    6f10:	12000029 	andne	r0, r0, #41	; 0x29
    6f14:	002f9906 	eoreq	r9, pc, r6, lsl #18
    6f18:	a9061300 	stmdbge	r6, {r8, r9, ip}
    6f1c:	1400002c 	strne	r0, [r0], #-44	; 0xffffffd4
    6f20:	00320706 	eorseq	r0, r2, r6, lsl #14
    6f24:	6d061500 	cfstr32vs	mvfx1, [r6, #-0]
    6f28:	1600002f 	strne	r0, [r0], -pc, lsr #32
    6f2c:	00275f06 	eoreq	r5, r7, r6, lsl #30
    6f30:	0d061700 	stceq	7, cr1, [r6, #-0]
    6f34:	18000038 	stmdane	r0, {r3, r4, r5}
    6f38:	002fb006 	eoreq	fp, pc, r6
    6f3c:	09001900 	stmdbeq	r0, {r8, fp, ip}
    6f40:	00002a75 	andeq	r2, r0, r5, ror sl
    6f44:	00600407 	rsbeq	r0, r0, r7, lsl #8
    6f48:	18230000 	stmdane	r3!, {}	; <UNPREDICTABLE>
    6f4c:	00125e0e 	andseq	r5, r2, lr, lsl #28
    6f50:	31830600 	orrcc	r0, r3, r0, lsl #12
    6f54:	06000000 	streq	r0, [r0], -r0
    6f58:	000035e0 	andeq	r3, r0, r0, ror #11
    6f5c:	327e0601 	rsbscc	r0, lr, #1048576	; 0x100000
    6f60:	06020000 	streq	r0, [r2], -r0
    6f64:	000028ce 	andeq	r2, r0, lr, asr #17
    6f68:	721b0003 	andsvc	r0, fp, #3
    6f6c:	72000012 	andvc	r0, r0, #18
    6f70:	1c000012 	stcne	0, cr0, [r0], {18}
    6f74:	00001278 	andeq	r1, r0, r8, ror r2
    6f78:	0010e11c 	andseq	lr, r0, ip, lsl r1
    6f7c:	04180000 	ldreq	r0, [r8], #-0
    6f80:	00000feb 	andeq	r0, r0, fp, ror #31
    6f84:	10a00418 	adcne	r0, r0, r8, lsl r4
    6f88:	04180000 	ldreq	r0, [r8], #-0
    6f8c:	0000125e 	andeq	r1, r0, lr, asr r2
    6f90:	00004d1b 	andeq	r4, r0, fp, lsl sp
    6f94:	00129d00 	andseq	r9, r2, r0, lsl #26
    6f98:	12781c00 	rsbsne	r1, r8, #0, 24
    6f9c:	ae1c0000 	cdpge	0, 1, cr0, cr12, cr0, {0}
    6fa0:	1c000011 	stcne	0, cr0, [r0], {17}
    6fa4:	00001233 	andeq	r1, r0, r3, lsr r2
    6fa8:	84041800 	strhi	r1, [r4], #-2048	; 0xfffff800
    6fac:	1b000012 	blne	6ffc <errno+0x6ff8>
    6fb0:	00001272 	andeq	r1, r0, r2, ror r2
    6fb4:	000012b2 			; <UNDEFINED> instruction: 0x000012b2
    6fb8:	0012721c 	andseq	r7, r2, ip, lsl r2
    6fbc:	04180000 	ldreq	r0, [r8], #-0
    6fc0:	000012a3 	andeq	r1, r0, r3, lsr #5
    6fc4:	0005e71b 	andeq	lr, r5, fp, lsl r7
    6fc8:	0012c700 	andseq	ip, r2, r0, lsl #14
    6fcc:	12721c00 	rsbsne	r1, r2, #0, 24
    6fd0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    6fd4:	0012b804 	andseq	fp, r2, r4, lsl #16
    6fd8:	05e71b00 	strbeq	r1, [r7, #2816]!	; 0xb00
    6fdc:	12e10000 	rscne	r0, r1, #0
    6fe0:	721c0000 	andsvc	r0, ip, #0
    6fe4:	1c000012 	stcne	0, cr0, [r0], {18}
    6fe8:	000005e7 	andeq	r0, r0, r7, ror #11
    6fec:	cd041800 	stcgt	8, cr1, [r4, #-0]
    6ff0:	1d000012 	stcne	0, cr0, [r0, #-72]	; 0xffffffb8
    6ff4:	000012f2 	strdeq	r1, [r0], -r2
    6ff8:	0012721c 	andseq	r7, r2, ip, lsl r2
    6ffc:	04180000 	ldreq	r0, [r8], #-0
    7000:	000012e7 	andeq	r1, r0, r7, ror #5
    7004:	00192b17 	andseq	r2, r9, r7, lsl fp
    7008:	0e7b2500 	cdpeq	5, 7, cr2, cr11, cr0, {0}
    700c:	000005f9 	strdeq	r0, [r0], -r9
    7010:	00190017 	andseq	r0, r9, r7, lsl r0
    7014:	0c7c2500 	cfldr64eq	mvdx2, [ip], #-0
    7018:	0000004d 	andeq	r0, r0, sp, asr #32
    701c:	00178e17 	andseq	r8, r7, r7, lsl lr
    7020:	147c2500 	ldrbtne	r2, [ip], #-1280	; 0xfffffb00
    7024:	0000004d 	andeq	r0, r0, sp, asr #32
    7028:	00171817 	andseq	r1, r7, r7, lsl r8
    702c:	1c7c2500 	cfldr64ne	mvdx2, [ip], #-0
    7030:	0000004d 	andeq	r0, r0, sp, asr #32
    7034:	00237003 	eoreq	r7, r3, r3
    7038:	110b2600 	tstne	fp, r0, lsl #12
    703c:	00000587 	andeq	r0, r0, r7, lsl #11
    7040:	00363c03 	eorseq	r3, r6, r3, lsl #24
    7044:	180c2600 	stmdane	ip, {r9, sl, sp}
    7048:	00001345 	andeq	r1, r0, r5, asr #6
    704c:	0013340a 	andseq	r3, r3, sl, lsl #8
    7050:	24870e00 	strcs	r0, [r7], #3584	; 0xe00
    7054:	26100000 	ldrcs	r0, [r0], -r0
    7058:	13870817 	orrne	r0, r7, #1507328	; 0x170000
    705c:	150f0000 	strne	r0, [pc, #-0]	; 7064 <errno+0x7060>
    7060:	26000032 			; <UNDEFINED> instruction: 0x26000032
    7064:	13d10b18 	bicsne	r0, r1, #24, 22	; 0x6000
    7068:	0f000000 	svceq	0x00000000
    706c:	00002f0f 	andeq	r2, r0, pc, lsl #30
    7070:	eb0b1926 	bl	2cd510 <__bss_end__+0x1844c8>
    7074:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    7078:	002fdb0f 	eoreq	sp, pc, pc, lsl #22
    707c:	0d1a2600 	ldceq	6, cr2, [sl, #-0]
    7080:	00001400 	andeq	r1, r0, r0, lsl #8
    7084:	40380f08 	eorsmi	r0, r8, r8, lsl #30
    7088:	1b260000 	blne	987090 <__bss_end__+0x83e048>
    708c:	0005850b 	andeq	r8, r5, fp, lsl #10
    7090:	09000c00 	stmdbeq	r0, {sl, fp}
    7094:	00003800 	andeq	r3, r0, r0, lsl #16
    7098:	00600407 	rsbeq	r0, r0, r7, lsl #8
    709c:	10260000 	eorne	r0, r6, r0
    70a0:	0013b20e 	andseq	fp, r3, lr, lsl #4
    70a4:	2ba70600 	blcs	fe9c88ac <__bss_end__+0xfe87f864>
    70a8:	06000000 	streq	r0, [r0], -r0
    70ac:	0000370d 	andeq	r3, r0, sp, lsl #14
    70b0:	36b10601 	ldrtcc	r0, [r1], r1, lsl #12
    70b4:	06020000 	streq	r0, [r2], -r0
    70b8:	00002e48 	andeq	r2, r0, r8, asr #28
    70bc:	4d1b0003 	ldcmi	0, cr0, [fp, #-12]
    70c0:	cb000000 	blgt	70c8 <errno+0x70c4>
    70c4:	1c000013 	stcne	0, cr0, [r0], {19}
    70c8:	000013cb 	andeq	r1, r0, fp, asr #7
    70cc:	0013281c 	andseq	r2, r3, ip, lsl r8
    70d0:	13871c00 	orrne	r1, r7, #0, 24
    70d4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    70d8:	00134004 	andseq	r4, r3, r4
    70dc:	b2041800 	andlt	r1, r4, #0, 16
    70e0:	1b000013 	blne	7134 <errno+0x7130>
    70e4:	0000004d 	andeq	r0, r0, sp, asr #32
    70e8:	000013eb 	andeq	r1, r0, fp, ror #7
    70ec:	0013cb1c 	andseq	ip, r3, ip, lsl fp
    70f0:	13281c00 			; <UNDEFINED> instruction: 0x13281c00
    70f4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    70f8:	0013d704 	andseq	sp, r3, r4, lsl #14
    70fc:	05851b00 	streq	r1, [r5, #2816]	; 0xb00
    7100:	14000000 	strne	r0, [r0], #-0
    7104:	cb1c0000 	blgt	70710c <__bss_end__+0x5be0c4>
    7108:	00000013 	andeq	r0, r0, r3, lsl r0
    710c:	13f10418 	mvnsne	r0, #24, 8	; 0x18000000
    7110:	07090000 	streq	r0, [r9, -r0]
    7114:	0700002d 	streq	r0, [r0, -sp, lsr #32]
    7118:	00006004 	andeq	r6, r0, r4
    711c:	0e092700 	cdpeq	7, 0, cr2, cr9, cr0, {0}
    7120:	0000143d 	andeq	r1, r0, sp, lsr r4
    7124:	00249a06 	eoreq	r9, r4, r6, lsl #20
    7128:	c4060000 	strgt	r0, [r6], #-0
    712c:	0100002d 	tsteq	r0, sp, lsr #32
    7130:	002fe906 	eoreq	lr, pc, r6, lsl #18
    7134:	24060200 	strcs	r0, [r6], #-512	; 0xfffffe00
    7138:	03000032 	movweq	r0, #50	; 0x32
    713c:	0029e706 	eoreq	lr, r9, r6, lsl #14
    7140:	3d060400 	cfstrscc	mvf0, [r6, #-0]
    7144:	0500002c 	streq	r0, [r0, #-44]	; 0xffffffd4
    7148:	304b0300 	subcc	r0, fp, r0, lsl #6
    714c:	15270000 	strne	r0, [r7, #-0]!
    7150:	00140603 	andseq	r0, r4, r3, lsl #12
    7154:	24ff0300 	ldrbtcs	r0, [pc], #768	; 715c <errno+0x7158>
    7158:	13280000 			; <UNDEFINED> instruction: 0x13280000
    715c:	0014550f 	andseq	r5, r4, pc, lsl #10
    7160:	5b041800 	blpl	10d168 <morecore_area+0xc4168>
    7164:	1b000014 	blne	71bc <errno+0x71b8>
    7168:	0000004d 	andeq	r0, r0, sp, asr #32
    716c:	00001479 	andeq	r1, r0, r9, ror r4
    7170:	0005851c 	andeq	r8, r5, ip, lsl r5
    7174:	143d1c00 	ldrtne	r1, [sp], #-3072	; 0xfffff400
    7178:	851c0000 	ldrhi	r0, [ip, #-0]
    717c:	1c000005 	stcne	0, cr0, [r0], {5}
    7180:	00001479 	andeq	r1, r0, r9, ror r4
    7184:	f9041800 			; <UNDEFINED> instruction: 0xf9041800
    7188:	03000005 	movweq	r0, #5
    718c:	00002b3e 	andeq	r2, r0, lr, lsr fp
    7190:	8b0f1628 	blhi	3cca38 <__bss_end__+0x2839f0>
    7194:	18000014 	stmdane	r0, {r2, r4}
    7198:	00149104 	andseq	r9, r4, r4, lsl #2
    719c:	004d1b00 	subeq	r1, sp, r0, lsl #22
    71a0:	14aa0000 	strtne	r0, [sl], #0
    71a4:	851c0000 	ldrhi	r0, [ip, #-0]
    71a8:	1c000005 	stcne	0, cr0, [r0], {5}
    71ac:	0000143d 	andeq	r1, r0, sp, lsr r4
    71b0:	0005851c 	andeq	r8, r5, ip, lsl r5
    71b4:	3e030000 	cdpcc	0, 0, cr0, cr3, cr0, {0}
    71b8:	28000031 	stmdacs	r0, {r0, r4, r5}
    71bc:	14b60f21 	ldrtne	r0, [r6], #3873	; 0xf21
    71c0:	04180000 	ldreq	r0, [r8], #-0
    71c4:	000014bc 			; <UNDEFINED> instruction: 0x000014bc
    71c8:	00004d1b 	andeq	r4, r0, fp, lsl sp
    71cc:	0014d500 	andseq	sp, r4, r0, lsl #10
    71d0:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    71d4:	851c0000 	ldrhi	r0, [ip, #-0]
    71d8:	1c000005 	stcne	0, cr0, [r0], {5}
    71dc:	00001479 	andeq	r1, r0, r9, ror r4
    71e0:	256d0300 	strbcs	r0, [sp, #-768]!	; 0xfffffd00
    71e4:	23280000 			; <UNDEFINED> instruction: 0x23280000
    71e8:	0014e10f 	andseq	lr, r4, pc, lsl #2
    71ec:	e7041800 	str	r1, [r4, -r0, lsl #16]
    71f0:	1b000014 	blne	7248 <errno+0x7244>
    71f4:	0000004d 	andeq	r0, r0, sp, asr #32
    71f8:	00001505 	andeq	r1, r0, r5, lsl #10
    71fc:	0005851c 	andeq	r8, r5, ip, lsl r5
    7200:	143d1c00 	ldrtne	r1, [sp], #-3072	; 0xfffff400
    7204:	aa1c0000 	bge	70720c <__bss_end__+0x5be1c4>
    7208:	1c000014 	stcne	0, cr0, [r0], {20}
    720c:	00000585 	andeq	r0, r0, r5, lsl #11
    7210:	28101f00 	ldmdacs	r0, {r8, r9, sl, fp, ip}
    7214:	15430926 	strbne	r0, [r3, #-2342]	; 0xfffff6da
    7218:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    721c:	2800002a 	stmdacs	r0, {r1, r3, r5}
    7220:	05850b27 	streq	r0, [r5, #2855]	; 0xb27
    7224:	0f000000 	svceq	0x00000000
    7228:	00002855 	andeq	r2, r0, r5, asr r8
    722c:	49202828 	stmdbmi	r0!, {r3, r5, fp, sp}
    7230:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    7234:	0034740f 	eorseq	r7, r4, pc, lsl #8
    7238:	22292800 	eorcs	r2, r9, #0, 16
    723c:	0000147f 	andeq	r1, r0, pc, ror r4
    7240:	37960f08 	ldrcc	r0, [r6, r8, lsl #30]
    7244:	2a280000 	bcs	a0724c <__bss_end__+0x8be204>
    7248:	0014d51c 	andseq	sp, r4, ip, lsl r5
    724c:	03000c00 	movweq	r0, #3072	; 0xc00
    7250:	00002f4d 	andeq	r2, r0, sp, asr #30
    7254:	05032b28 	streq	r2, [r3, #-2856]	; 0xfffff4d8
    7258:	09000015 	stmdbeq	r0, {r0, r2, r4}
    725c:	000031d0 	ldrdeq	r3, [r0], -r0
    7260:	00600407 	rsbeq	r0, r0, r7, lsl #8
    7264:	1f220000 	svcne	0x00220000
    7268:	0015740e 	andseq	r7, r5, lr, lsl #8
    726c:	33a10600 			; <UNDEFINED> instruction: 0x33a10600
    7270:	06000000 	streq	r0, [r0], -r0
    7274:	000032ad 	andeq	r3, r0, sp, lsr #5
    7278:	35a80601 	strcc	r0, [r8, #1537]!	; 0x601
    727c:	00020000 	andeq	r0, r2, r0
    7280:	002db503 	eoreq	fp, sp, r3, lsl #10
    7284:	03232200 			; <UNDEFINED> instruction: 0x03232200
    7288:	0000154f 	andeq	r1, r0, pc, asr #10
    728c:	00280303 	eoreq	r0, r8, r3, lsl #6
    7290:	112f2200 			; <UNDEFINED> instruction: 0x112f2200
    7294:	0000158c 	andeq	r1, r0, ip, lsl #11
    7298:	15920418 	ldrne	r0, [r2, #1048]	; 0x418
    729c:	851b0000 	ldrhi	r0, [fp, #-0]
    72a0:	b5000005 	strlt	r0, [r0, #-5]
    72a4:	1c000015 	stcne	0, cr0, [r0], {21}
    72a8:	00000585 	andeq	r0, r0, r5, lsl #11
    72ac:	0005551c 	andeq	r5, r5, ip, lsl r5
    72b0:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    72b4:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    72b8:	1c000000 	stcne	0, cr0, [r0], {-0}
    72bc:	00001574 	andeq	r1, r0, r4, ror r5
    72c0:	31a50300 			; <UNDEFINED> instruction: 0x31a50300
    72c4:	3d220000 	stccc	0, cr0, [r2, #-0]
    72c8:	0015c110 	andseq	ip, r5, r0, lsl r1
    72cc:	c7041800 	strgt	r1, [r4, -r0, lsl #16]
    72d0:	1d000015 	stcne	0, cr0, [r0, #-84]	; 0xffffffac
    72d4:	000015dc 	ldrdeq	r1, [r0], -ip
    72d8:	0005851c 	andeq	r8, r5, ip, lsl r5
    72dc:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    72e0:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    72e4:	00000005 	andeq	r0, r0, r5
    72e8:	002c180e 	eoreq	r1, ip, lr, lsl #16
    72ec:	42220c00 	eormi	r0, r2, #0, 24
    72f0:	00161110 	andseq	r1, r6, r0, lsl r1
    72f4:	2a2e0f00 	bcs	b8aefc <__bss_end__+0xa41eb4>
    72f8:	43220000 			; <UNDEFINED> instruction: 0x43220000
    72fc:	0005850b 	andeq	r8, r5, fp, lsl #10
    7300:	a60f0000 	strge	r0, [pc], -r0
    7304:	2200002f 	andcs	r0, r0, #47	; 0x2f
    7308:	15801444 	strne	r1, [r0, #1092]	; 0x444
    730c:	0f040000 	svceq	0x00040000
    7310:	00002678 	andeq	r2, r0, r8, ror r6
    7314:	b5164522 	ldrlt	r4, [r6, #-1314]	; 0xfffffade
    7318:	08000015 	stmdaeq	r0, {r0, r2, r4}
    731c:	305f0300 	subscc	r0, pc, r0, lsl #6
    7320:	46220000 	strtmi	r0, [r2], -r0
    7324:	0015dc03 	andseq	sp, r5, r3, lsl #24
    7328:	349e0300 	ldrcc	r0, [lr], #768	; 0x300
    732c:	68220000 	stmdavs	r2!, {}	; <UNPREDICTABLE>
    7330:	0016290f 	andseq	r2, r6, pc, lsl #18
    7334:	2f041800 	svccs	0x00041800
    7338:	1b000016 	blne	7398 <errno+0x7394>
    733c:	0000004d 	andeq	r0, r0, sp, asr #32
    7340:	0000164d 	andeq	r1, r0, sp, asr #12
    7344:	0005851c 	andeq	r8, r5, ip, lsl r5
    7348:	056d1c00 	strbeq	r1, [sp, #-3072]!	; 0xfffff400
    734c:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    7350:	1c000000 	stcne	0, cr0, [r0], {-0}
    7354:	0000164d 	andeq	r1, r0, sp, asr #12
    7358:	6d041800 	stcvs	8, cr1, [r4, #-0]
    735c:	03000005 	movweq	r0, #5
    7360:	000028e8 	andeq	r2, r0, r8, ror #17
    7364:	5f0f7822 	svcpl	0x000f7822
    7368:	18000016 	stmdane	r0, {r1, r2, r4}
    736c:	00166504 	andseq	r6, r6, r4, lsl #10
    7370:	004d1b00 	subeq	r1, sp, r0, lsl #22
    7374:	16830000 	strne	r0, [r3], r0
    7378:	851c0000 	ldrhi	r0, [ip, #-0]
    737c:	1c000005 	stcne	0, cr0, [r0], {5}
    7380:	0000056d 	andeq	r0, r0, sp, ror #10
    7384:	00004d1c 	andeq	r4, r0, ip, lsl sp
    7388:	056d1c00 	strbeq	r1, [sp, #-3072]!	; 0xfffff400
    738c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    7390:	00002a9a 	muleq	r0, sl, sl
    7394:	107e220c 	rsbsne	r2, lr, ip, lsl #4
    7398:	000016b8 			; <UNDEFINED> instruction: 0x000016b8
    739c:	002a2e0f 	eoreq	r2, sl, pc, lsl #28
    73a0:	0b7f2200 	bleq	1fcfba8 <__bss_end__+0x1e86b60>
    73a4:	00000585 	andeq	r0, r0, r5, lsl #11
    73a8:	2f010f00 	svccs	0x00010f00
    73ac:	80220000 	eorhi	r0, r2, r0
    73b0:	00161d18 	andseq	r1, r6, r8, lsl sp
    73b4:	2f0f0400 	svccs	0x000f0400
    73b8:	2200002d 	andcs	r0, r0, #45	; 0x2d
    73bc:	16531981 	ldrbne	r1, [r3], -r1, lsl #19
    73c0:	00080000 	andeq	r0, r8, r0
    73c4:	00240403 	eoreq	r0, r4, r3, lsl #8
    73c8:	03822200 	orreq	r2, r2, #0, 4
    73cc:	00001683 	andeq	r1, r0, r3, lsl #13
    73d0:	00246509 	eoreq	r6, r4, r9, lsl #10
    73d4:	60040700 	andvs	r0, r4, r0, lsl #14
    73d8:	22000000 	andcs	r0, r0, #0
    73dc:	16e90e9a 	usatne	r0, #9, sl, lsl #29
    73e0:	e5060000 	str	r0, [r6, #-0]
    73e4:	00000032 	andeq	r0, r0, r2, lsr r0
    73e8:	002b5b06 	eoreq	r5, fp, r6, lsl #22
    73ec:	1e060100 	adfnes	f0, f6, f0
    73f0:	02000036 	andeq	r0, r0, #54	; 0x36
    73f4:	23dc0300 	bicscs	r0, ip, #0, 6
    73f8:	9e220000 	cdpls	0, 2, cr0, cr2, cr0, {0}
    73fc:	0016c403 	andseq	ip, r6, r3, lsl #8
    7400:	371d0300 	ldrcc	r0, [sp, -r0, lsl #6]
    7404:	ad220000 	stcge	0, cr0, [r2, #-0]
    7408:	00170111 	andseq	r0, r7, r1, lsl r1
    740c:	07041800 	streq	r1, [r4, -r0, lsl #16]
    7410:	1b000017 	blne	7474 <errno+0x7470>
    7414:	00000585 	andeq	r0, r0, r5, lsl #11
    7418:	0000172a 	andeq	r1, r0, sl, lsr #14
    741c:	0005851c 	andeq	r8, r5, ip, lsl r5
    7420:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    7424:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    7428:	1c000000 	stcne	0, cr0, [r0], {-0}
    742c:	0000004d 	andeq	r0, r0, sp, asr #32
    7430:	0015741c 	andseq	r7, r5, ip, lsl r4
    7434:	ca030000 	bgt	c743c <morecore_area+0x7e43c>
    7438:	22000025 	andcs	r0, r0, #37	; 0x25
    743c:	15c110bb 	strbne	r1, [r1, #187]	; 0xbb
    7440:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    7444:	22000024 	andcs	r0, r0, #36	; 0x24
    7448:	174215cc 	strbne	r1, [r2, -ip, asr #11]
    744c:	04180000 	ldreq	r0, [r8], #-0
    7450:	00001748 	andeq	r1, r0, r8, asr #14
    7454:	0005551b 	andeq	r5, r5, fp, lsl r5
    7458:	00176100 	andseq	r6, r7, r0, lsl #2
    745c:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    7460:	851c0000 	ldrhi	r0, [ip, #-0]
    7464:	1c000005 	stcne	0, cr0, [r0], {5}
    7468:	0000053d 	andeq	r0, r0, sp, lsr r5
    746c:	29850300 	stmibcs	r5, {r8, r9}
    7470:	da220000 	ble	887478 <__bss_end__+0x73e430>
    7474:	0015c110 	andseq	ip, r5, r0, lsl r1
    7478:	34d60300 	ldrbcc	r0, [r6], #768	; 0x300
    747c:	e8220000 	stmda	r2!, {}	; <UNPREDICTABLE>
    7480:	00177910 	andseq	r7, r7, r0, lsl r9
    7484:	7f041800 	svcvc	0x00041800
    7488:	1d000017 	stcne	0, cr0, [r0, #-92]	; 0xffffffa4
    748c:	00001799 	muleq	r0, r9, r7
    7490:	0005851c 	andeq	r8, r5, ip, lsl r5
    7494:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    7498:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    749c:	1c000005 	stcne	0, cr0, [r0], {5}
    74a0:	000016e9 	andeq	r1, r0, r9, ror #13
    74a4:	2dd70e00 	ldclcs	14, cr0, [r7]
    74a8:	22180000 	andscs	r0, r8, #0
    74ac:	17f510ee 	ldrbne	r1, [r5, lr, ror #1]!
    74b0:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    74b4:	2200002a 	andcs	r0, r0, #42	; 0x2a
    74b8:	05850bef 	streq	r0, [r5, #3055]	; 0xbef
    74bc:	0f000000 	svceq	0x00000000
    74c0:	00002cfa 	strdeq	r2, [r0], -sl
    74c4:	f517f022 	pldw	[r7, #-34]	; 0xffffffde
    74c8:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    74cc:	0031020f 	eorseq	r0, r1, pc, lsl #4
    74d0:	16f12200 	ldrbtne	r2, [r1], r0, lsl #4
    74d4:	0000172a 	andeq	r1, r0, sl, lsr #14
    74d8:	312d0f08 			; <UNDEFINED> instruction: 0x312d0f08
    74dc:	f2220000 	vhadd.s32	d0, d2, d0
    74e0:	00173615 	andseq	r3, r7, r5, lsl r6
    74e4:	390f0c00 	stmdbcc	pc, {sl, fp}	; <UNPREDICTABLE>
    74e8:	2200002f 	andcs	r0, r0, #47	; 0x2f
    74ec:	176117f3 			; <UNDEFINED> instruction: 0x176117f3
    74f0:	0f100000 	svceq	0x00100000
    74f4:	00002c99 	muleq	r0, r9, ip
    74f8:	6d1af422 	cfldrsvs	mvf15, [sl, #-136]	; 0xffffff78
    74fc:	14000017 	strne	r0, [r0], #-23	; 0xffffffe9
    7500:	273c0300 	ldrcs	r0, [ip, -r0, lsl #6]!
    7504:	f5220000 			; <UNDEFINED> instruction: 0xf5220000
    7508:	00179903 	andseq	r9, r7, r3, lsl #18
    750c:	37871200 	strcc	r1, [r7, r0, lsl #4]
    7510:	4d220000 	stcmi	0, cr0, [r2, #-0]
    7514:	180e0f01 	stmdane	lr, {r0, r8, r9, sl, fp}
    7518:	04180000 	ldreq	r0, [r8], #-0
    751c:	00001814 	andeq	r1, r0, r4, lsl r8
    7520:	00004d1b 	andeq	r4, r0, fp, lsl sp
    7524:	00182d00 	andseq	r2, r8, r0, lsl #26
    7528:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    752c:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    7530:	1c000005 	stcne	0, cr0, [r0], {5}
    7534:	0000182d 	andeq	r1, r0, sp, lsr #16
    7538:	85041800 	strhi	r1, [r4, #-2048]	; 0xfffff800
    753c:	12000005 	andne	r0, r0, #5
    7540:	0000259a 	muleq	r0, sl, r5
    7544:	0f015c22 	svceq	0x00015c22
    7548:	00001840 	andeq	r1, r0, r0, asr #16
    754c:	18460418 	stmdane	r6, {r3, r4, sl}^
    7550:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    7554:	64000000 	strvs	r0, [r0], #-0
    7558:	1c000018 	stcne	0, cr0, [r0], {24}
    755c:	00000585 	andeq	r0, r0, r5, lsl #11
    7560:	00053d1c 	andeq	r3, r5, ip, lsl sp
    7564:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    7568:	2d1c0000 	ldccs	0, cr0, [ip, #-0]
    756c:	00000018 	andeq	r0, r0, r8, lsl r0
    7570:	00245112 	eoreq	r5, r4, r2, lsl r1
    7574:	016b2200 	cmneq	fp, r0, lsl #4
    7578:	0018710f 	andseq	r7, r8, pc, lsl #2
    757c:	77041800 	strvc	r1, [r4, -r0, lsl #16]
    7580:	1b000018 	blne	75e8 <errno+0x75e4>
    7584:	0000004d 	andeq	r0, r0, sp, asr #32
    7588:	00001890 	muleq	r0, r0, r8
    758c:	0005851c 	andeq	r8, r5, ip, lsl r5
    7590:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    7594:	851c0000 	ldrhi	r0, [ip, #-0]
    7598:	00000005 	andeq	r0, r0, r5
    759c:	70221024 	eorvc	r1, r2, r4, lsr #32
    75a0:	18d30901 	ldmne	r3, {r0, r8, fp}^
    75a4:	07110000 	ldreq	r0, [r1, -r0]
    75a8:	2200002a 	andcs	r0, r0, #42	; 0x2a
    75ac:	01140171 	tsteq	r4, r1, ror r1
    75b0:	00000018 	andeq	r0, r0, r8, lsl r0
    75b4:	00317c11 	eorseq	r7, r1, r1, lsl ip
    75b8:	01722200 	cmneq	r2, r0, lsl #4
    75bc:	00183314 	andseq	r3, r8, r4, lsl r3
    75c0:	d4110400 	ldrle	r0, [r1], #-1024	; 0xfffffc00
    75c4:	22000024 	andcs	r0, r0, #36	; 0x24
    75c8:	64120173 	ldrvs	r0, [r2], #-371	; 0xfffffe8d
    75cc:	08000018 	stmdaeq	r0, {r3, r4}
    75d0:	002a2e11 	eoreq	r2, sl, r1, lsl lr
    75d4:	01742200 	cmneq	r4, r0, lsl #4
    75d8:	0005850b 	andeq	r8, r5, fp, lsl #10
    75dc:	12000c00 	andne	r0, r0, #0, 24
    75e0:	000037a8 	andeq	r3, r0, r8, lsr #15
    75e4:	03017522 	movweq	r7, #5410	; 0x1522
    75e8:	00001890 	muleq	r0, r0, r8
    75ec:	00306e12 	eorseq	r6, r0, r2, lsl lr
    75f0:	01d02200 	bicseq	r2, r0, r0, lsl #4
    75f4:	0018ed11 	andseq	lr, r8, r1, lsl sp
    75f8:	f3041800 	vsub.i8	d1, d4, d0
    75fc:	1b000018 	blne	7664 <errno+0x7660>
    7600:	000005f9 	strdeq	r0, [r0], -r9
    7604:	00001902 	andeq	r1, r0, r2, lsl #18
    7608:	0005851c 	andeq	r8, r5, ip, lsl r5
    760c:	be100000 	cdplt	0, 1, cr0, cr0, cr0, {0}
    7610:	08000035 	stmdaeq	r0, {r0, r2, r4, r5}
    7614:	1001d322 	andne	sp, r1, r2, lsr #6
    7618:	0000192d 	andeq	r1, r0, sp, lsr #18
    761c:	002a2e11 	eoreq	r2, sl, r1, lsl lr
    7620:	01d42200 	bicseq	r2, r4, r0, lsl #4
    7624:	0005850b 	andeq	r8, r5, fp, lsl #10
    7628:	d2110000 	andsle	r0, r1, #0
    762c:	22000026 	andcs	r0, r0, #38	; 0x26
    7630:	e01801d5 			; <UNDEFINED> instruction: 0xe01801d5
    7634:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    7638:	37f41200 	ldrbcc	r1, [r4, r0, lsl #4]!
    763c:	d6220000 	strtle	r0, [r2], -r0
    7640:	19020301 	stmdbne	r2, {r0, r8, r9}
    7644:	4e090000 	cdpmi	0, 0, cr0, cr9, cr0, {0}
    7648:	07000020 	streq	r0, [r0, -r0, lsr #32]
    764c:	00006004 	andeq	r6, r0, r4
    7650:	060f2900 	streq	r2, [pc], -r0, lsl #18
    7654:	00001959 	andeq	r1, r0, r9, asr r9
    7658:	00214206 	eoreq	r4, r1, r6, lsl #4
    765c:	b3060000 	movwlt	r0, #24576	; 0x6000
    7660:	01000021 	tsteq	r0, r1, lsr #32
    7664:	20010300 	andcs	r0, r1, r0, lsl #6
    7668:	14290000 	strtne	r0, [r9], #-0
    766c:	00004d0d 	andeq	r4, r0, sp, lsl #26
    7670:	19590a00 	ldmdbne	r9, {r9, fp}^
    7674:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    7678:	07000020 	streq	r0, [r0, -r0, lsr #32]
    767c:	00006004 	andeq	r6, r0, r4
    7680:	06102a00 	ldreq	r2, [r0], -r0, lsl #20
    7684:	0000198f 	andeq	r1, r0, pc, lsl #19
    7688:	00210006 	eoreq	r0, r1, r6
    768c:	a0060100 	andge	r0, r6, r0, lsl #2
    7690:	02000021 	andeq	r0, r0, #33	; 0x21
    7694:	001f5e06 	andseq	r5, pc, r6, lsl #28
    7698:	09000300 	stmdbeq	r0, {r8, r9}
    769c:	00002057 	andeq	r2, r0, r7, asr r0
    76a0:	00600407 	rsbeq	r0, r0, r7, lsl #8
    76a4:	122b0000 	eorne	r0, fp, #0
    76a8:	0019d806 	andseq	sp, r9, r6, lsl #16
    76ac:	215e0600 	cmpcs	lr, r0, lsl #12
    76b0:	06030000 	streq	r0, [r3], -r0
    76b4:	00002080 	andeq	r2, r0, r0, lsl #1
    76b8:	21730604 	cmncs	r3, r4, lsl #12
    76bc:	06050000 	streq	r0, [r5], -r0
    76c0:	00002065 	andeq	r2, r0, r5, rrx
    76c4:	218f0606 	orrcs	r0, pc, r6, lsl #12
    76c8:	06070000 	streq	r0, [r7], -r0
    76cc:	000021ca 	andeq	r2, r0, sl, asr #3
    76d0:	21810608 	orrcs	r0, r1, r8, lsl #12
    76d4:	06090000 	streq	r0, [r9], -r0
    76d8:	00001f87 	andeq	r1, r0, r7, lsl #31
    76dc:	1f75060a 	svcne	0x0075060a
    76e0:	000b0000 	andeq	r0, fp, r0
    76e4:	001fc30b 	andseq	ip, pc, fp, lsl #6
    76e8:	3f222b00 	svccc	0x00222b00
    76ec:	00001965 	andeq	r1, r0, r5, ror #18
    76f0:	81940305 	orrshi	r0, r4, r5, lsl #6
    76f4:	170b0002 	strne	r0, [fp, -r2]
    76f8:	2b000021 	blcs	7784 <errno+0x7780>
    76fc:	19653b23 	stmdbne	r5!, {r0, r1, r5, r8, r9, fp, ip, sp}^
    7700:	03050000 	movweq	r0, #20480	; 0x5000
    7704:	00028198 	muleq	r2, r8, r1
    7708:	0034450e 	eorseq	r4, r4, lr, lsl #10
    770c:	182c1000 	stmdane	ip!, {ip}
    7710:	001a3d10 	andseq	r3, sl, r0, lsl sp
    7714:	258e0f00 	strcs	r0, [lr, #3840]	; 0xf00
    7718:	192c0000 	stmdbne	ip!, {}	; <UNPREDICTABLE>
    771c:	0000810f 	andeq	r8, r0, pc, lsl #2
    7720:	75140000 	ldrvc	r0, [r4, #-0]
    7724:	1a2c0074 	bne	b078fc <__bss_end__+0x9be8b4>
    7728:	0000750f 	andeq	r7, r0, pc, lsl #10
    772c:	8d0f0400 	cfstrshi	mvf0, [pc, #-0]	; 7734 <errno+0x7730>
    7730:	2c000003 	stccs	0, cr0, [r0], {3}
    7734:	00750f1b 	rsbseq	r0, r5, fp, lsl pc
    7738:	0f080000 	svceq	0x00080000
    773c:	000032c2 	andeq	r3, r0, r2, asr #5
    7740:	750f1c2c 	strvc	r1, [pc, #-3116]	; 6b1c <errno+0x6b18>
    7744:	0c000000 	stceq	0, cr0, [r0], {-0}
    7748:	37d30300 	ldrbcc	r0, [r3, r0, lsl #6]
    774c:	1d2c0000 	stcne	0, cr0, [ip, #-0]
    7750:	0019fc03 	andseq	pc, r9, r3, lsl #24
    7754:	05490c00 	strbeq	r0, [r9, #-3072]	; 0xfffff400
    7758:	1a590000 	bne	1647760 <__bss_end__+0x14fe718>
    775c:	600d0000 	andvs	r0, sp, r0
    7760:	03000000 	movweq	r0, #0
    7764:	1a490a00 	bne	1249f6c <__bss_end__+0x1100f24>
    7768:	620b0000 	andvs	r0, fp, #0
    776c:	2d00001a 	stccs	0, cr0, [r0, #-104]	; 0xffffff98
    7770:	1a591c0e 	bne	164e7b0 <__bss_end__+0x1505768>
    7774:	03050000 	movweq	r0, #20480	; 0x5000
    7778:	0002819c 	muleq	r2, ip, r1
    777c:	00247203 	eoreq	r7, r4, r3, lsl #4
    7780:	17100900 	ldrne	r0, [r0, -r0, lsl #18]
    7784:	00001a7c 	andeq	r1, r0, ip, ror sl
    7788:	00328d10 	eorseq	r8, r2, r0, lsl sp
    778c:	d3094c00 	movwle	r4, #39936	; 0x9c00
    7790:	1b950801 	blne	fe54979c <__bss_end__+0xfe400754>
    7794:	a1110000 	tstge	r1, r0
    7798:	09000019 	stmdbeq	r0, {r0, r3, r4}
    779c:	850b01d4 	strhi	r0, [fp, #-468]	; 0xfffffe2c
    77a0:	00000005 	andeq	r0, r0, r5
    77a4:	00292411 	eoreq	r2, r9, r1, lsl r4
    77a8:	01d60900 	bicseq	r0, r6, r0, lsl #18
    77ac:	001bbc19 	andseq	fp, fp, r9, lsl ip
    77b0:	db110400 	blle	4487b8 <__bss_end__+0x2ff770>
    77b4:	09000032 	stmdbeq	r0, {r1, r4, r5}
    77b8:	f21901d7 	vbic	q0, <illegal reg q12.5>, <illegal reg q3.5>
    77bc:	0800001b 	stmdaeq	r0, {r0, r1, r3, r4}
    77c0:	002dfb11 	eoreq	pc, sp, r1, lsl fp	; <UNPREDICTABLE>
    77c4:	01d90900 	bicseq	r0, r9, r0, lsl #18
    77c8:	001c3122 	andseq	r3, ip, r2, lsr #2
    77cc:	1c110c00 	ldcne	12, cr0, [r1], {-0}
    77d0:	0900002b 	stmdbeq	r0, {r0, r1, r3, r5}
    77d4:	6b2201db 	blvs	887f48 <__bss_end__+0x73ef00>
    77d8:	1000001c 	andne	r0, r0, ip, lsl r0
    77dc:	002b0c11 	eoreq	r0, fp, r1, lsl ip
    77e0:	01dc0900 	bicseq	r0, ip, r0, lsl #18
    77e4:	001cab32 	andseq	sl, ip, r2, lsr fp
    77e8:	e6111400 	ldr	r1, [r1], -r0, lsl #8
    77ec:	09000031 	stmdbeq	r0, {r0, r4, r5}
    77f0:	f01b01de 			; <UNDEFINED> instruction: 0xf01b01de
    77f4:	1800001c 	stmdane	r0, {r2, r3, r4}
    77f8:	0028c411 	eoreq	ip, r8, r1, lsl r4
    77fc:	01df0900 	bicseq	r0, pc, r0, lsl #18
    7800:	001d2819 	andseq	r2, sp, r9, lsl r8
    7804:	32111c00 	andscc	r1, r1, #0, 24
    7808:	09000035 	stmdbeq	r0, {r0, r2, r4, r5}
    780c:	4b2501e1 	blmi	947f98 <__bss_end__+0x7fef50>
    7810:	2000001d 	andcs	r0, r0, sp, lsl r0
    7814:	00310e11 	eorseq	r0, r1, r1, lsl lr
    7818:	01e20900 	mvneq	r0, r0, lsl #18
    781c:	001d8620 	andseq	r8, sp, r0, lsr #12
    7820:	a9112400 	ldmdbge	r1, {sl, sp}
    7824:	09000023 	stmdbeq	r0, {r0, r1, r5}
    7828:	bc3001e3 	ldflts	f0, [r0], #-908	; 0xfffffc74
    782c:	2800001d 	stmdacs	r0, {r0, r2, r3, r4}
    7830:	00282611 	eoreq	r2, r8, r1, lsl r6
    7834:	01e40900 	mvneq	r0, r0, lsl #18
    7838:	001ded20 	andseq	lr, sp, r0, lsr #26
    783c:	12112c00 	andsne	r2, r1, #0, 24
    7840:	09000023 	stmdbeq	r0, {r0, r1, r5}
    7844:	102901e5 	eorne	r0, r9, r5, ror #3
    7848:	3000001e 	andcc	r0, r0, lr, lsl r0
    784c:	0030aa11 	eorseq	sl, r0, r1, lsl sl
    7850:	01e70900 	mvneq	r0, r0, lsl #18
    7854:	001e3317 	andseq	r3, lr, r7, lsl r3
    7858:	dd113400 	cfldrsle	mvf3, [r1, #-0]
    785c:	09000031 	stmdbeq	r0, {r0, r4, r5}
    7860:	a41801e8 	ldrge	r0, [r8], #-488	; 0xfffffe18
    7864:	3800001e 	stmdacc	r0, {r1, r2, r3, r4}
    7868:	0033fc11 	eorseq	pc, r3, r1, lsl ip	; <UNPREDICTABLE>
    786c:	01e90900 	mvneq	r0, r0, lsl #18
    7870:	001e5a1a 	andseq	r5, lr, sl, lsl sl
    7874:	31113c00 	tstcc	r1, r0, lsl #24
    7878:	09000024 	stmdbeq	r0, {r2, r5}
    787c:	c62201eb 	strtgt	r0, [r2], -fp, ror #3
    7880:	4000001e 	andmi	r0, r0, lr, lsl r0
    7884:	002a3511 	eoreq	r3, sl, r1, lsl r5
    7888:	01ed0900 	mvneq	r0, r0, lsl #18
    788c:	001e8120 	andseq	r8, lr, r0, lsr #2
    7890:	1d114400 	cfldrsne	mvf4, [r1, #-0]
    7894:	0900002a 	stmdbeq	r0, {r1, r3, r5}
    7898:	850b01ee 	strhi	r0, [fp, #-494]	; 0xfffffe12
    789c:	48000005 	stmdami	r0, {r0, r2}
    78a0:	282b0e00 	stmdacs	fp!, {r9, sl, fp}
    78a4:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    78a8:	1bb01012 	blne	fec0b8f8 <__bss_end__+0xfeac28b0>
    78ac:	72140000 	andsvc	r0, r4, #0
    78b0:	09007365 	stmdbeq	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    78b4:	05850b13 	streq	r0, [r5, #2835]	; 0xb13
    78b8:	00000000 	andeq	r0, r0, r0
    78bc:	0025db03 	eoreq	sp, r5, r3, lsl #22
    78c0:	03140900 	tsteq	r4, #0, 18
    78c4:	00001b95 	muleq	r0, r5, fp
    78c8:	0036f903 	eorseq	pc, r6, r3, lsl #18
    78cc:	11e10900 	mvnne	r0, r0, lsl #18
    78d0:	00001bc8 	andeq	r1, r0, r8, asr #23
    78d4:	1bce0418 	blne	ff38893c <__bss_end__+0xff23f8f4>
    78d8:	851b0000 	ldrhi	r0, [fp, #-0]
    78dc:	ec000005 	stc	0, cr0, [r0], {5}
    78e0:	1c00001b 	stcne	0, cr0, [r0], {27}
    78e4:	00001bec 	andeq	r1, r0, ip, ror #23
    78e8:	00026d1c 	andeq	r6, r2, ip, lsl sp
    78ec:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    78f0:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    78f4:	00000005 	andeq	r0, r0, r5
    78f8:	1a700418 	bne	1c08960 <__bss_end__+0x1abf918>
    78fc:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
    7900:	0900002e 	stmdbeq	r0, {r1, r2, r3, r5}
    7904:	1bfe11e4 	blne	fff8c09c <__bss_end__+0xffe43054>
    7908:	04180000 	ldreq	r0, [r8], #-0
    790c:	00001c04 	andeq	r1, r0, r4, lsl #24
    7910:	0005851b 	andeq	r8, r5, fp, lsl r5
    7914:	001c3100 	andseq	r3, ip, r0, lsl #2
    7918:	1bec1c00 	blne	ffb0e920 <__bss_end__+0xff9c58d8>
    791c:	ea1c0000 	b	707924 <__bss_end__+0x5be8dc>
    7920:	1c000007 	stcne	0, cr0, [r0], {7}
    7924:	000008d7 	ldrdeq	r0, [r0], -r7
    7928:	00026d1c 	andeq	r6, r2, ip, lsl sp
    792c:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    7930:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    7934:	1c000005 	stcne	0, cr0, [r0], {5}
    7938:	0000004d 	andeq	r0, r0, sp, asr #32
    793c:	33730300 	cmncc	r3, #0, 6
    7940:	fa090000 	blx	247948 <__bss_end__+0xfe900>
    7944:	001c3d0f 	andseq	r3, ip, pc, lsl #26
    7948:	43041800 	movwmi	r1, #18432	; 0x4800
    794c:	1b00001c 	blne	79c4 <errno+0x79c0>
    7950:	0000004d 	andeq	r0, r0, sp, asr #32
    7954:	00001c6b 	andeq	r1, r0, fp, ror #24
    7958:	001bec1c 	andseq	lr, fp, ip, lsl ip
    795c:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    7960:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    7964:	1c000005 	stcne	0, cr0, [r0], {5}
    7968:	0000053d 	andeq	r0, r0, sp, lsr r5
    796c:	001bb01c 	andseq	fp, fp, ip, lsl r0
    7970:	08e31c00 	stmiaeq	r3!, {sl, fp, ip}^
    7974:	12000000 	andne	r0, r0, #0
    7978:	00002b8a 	andeq	r2, r0, sl, lsl #23
    797c:	0f010c09 	svceq	0x00010c09
    7980:	00001c78 	andeq	r1, r0, r8, ror ip
    7984:	1c7e0418 	cfldrdne	mvd0, [lr], #-96	; 0xffffffa0
    7988:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    798c:	ab000000 	blge	7994 <errno+0x7990>
    7990:	1c00001c 	stcne	0, cr0, [r0], {28}
    7994:	00001bec 	andeq	r1, r0, ip, ror #23
    7998:	0007ea1c 	andeq	lr, r7, ip, lsl sl
    799c:	08d71c00 	ldmeq	r7, {sl, fp, ip}^
    79a0:	851c0000 	ldrhi	r0, [ip, #-0]
    79a4:	1c000005 	stcne	0, cr0, [r0], {5}
    79a8:	0000053d 	andeq	r0, r0, sp, lsr r5
    79ac:	00053d1c 	andeq	r3, r5, ip, lsl sp
    79b0:	1bb01c00 	blne	fec0e9b8 <__bss_end__+0xfeac5970>
    79b4:	12000000 	andne	r0, r0, #0
    79b8:	0000232c 	andeq	r2, r0, ip, lsr #6
    79bc:	0f012209 	svceq	0x00012209
    79c0:	00001cb8 			; <UNDEFINED> instruction: 0x00001cb8
    79c4:	1cbe0418 	cfldrsne	mvf0, [lr], #96	; 0x60
    79c8:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    79cc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    79d0:	1c00001c 	stcne	0, cr0, [r0], {28}
    79d4:	00001bec 	andeq	r1, r0, ip, ror #23
    79d8:	0007ea1c 	andeq	lr, r7, ip, lsl sl
    79dc:	08d71c00 	ldmeq	r7, {sl, fp, ip}^
    79e0:	851c0000 	ldrhi	r0, [ip, #-0]
    79e4:	1c000005 	stcne	0, cr0, [r0], {5}
    79e8:	0000053d 	andeq	r0, r0, sp, lsr r5
    79ec:	00053d1c 	andeq	r3, r5, ip, lsl sp
    79f0:	026d1c00 	rsbeq	r1, sp, #0, 24
    79f4:	b01c0000 	andslt	r0, ip, r0
    79f8:	0000001b 	andeq	r0, r0, fp, lsl r0
    79fc:	00388312 	eorseq	r8, r8, r2, lsl r3
    7a00:	013d0900 	teqeq	sp, r0, lsl #18
    7a04:	001cfd10 	andseq	pc, ip, r0, lsl sp	; <UNPREDICTABLE>
    7a08:	03041800 	movweq	r1, #18432	; 0x4800
    7a0c:	1d00001d 	stcne	0, cr0, [r0, #-116]	; 0xffffff8c
    7a10:	00001d22 	andeq	r1, r0, r2, lsr #26
    7a14:	001bec1c 	andseq	lr, fp, ip, lsl ip
    7a18:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    7a1c:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    7a20:	1c000005 	stcne	0, cr0, [r0], {5}
    7a24:	0000053d 	andeq	r0, r0, sp, lsr r5
    7a28:	001d221c 	andseq	r2, sp, ip, lsl r2
    7a2c:	04180000 	ldreq	r0, [r8], #-0
    7a30:	00000c9b 	muleq	r0, fp, ip
    7a34:	0037e012 	eorseq	lr, r7, r2, lsl r0
    7a38:	01560900 	cmpeq	r6, r0, lsl #18
    7a3c:	001d3510 	andseq	r3, sp, r0, lsl r5
    7a40:	3b041800 	blcc	10da48 <morecore_area+0xc4a48>
    7a44:	1d00001d 	stcne	0, cr0, [r0, #-116]	; 0xffffff8c
    7a48:	00001d4b 	andeq	r1, r0, fp, asr #26
    7a4c:	001bec1c 	andseq	lr, fp, ip, lsl ip
    7a50:	1d221c00 	stcne	12, cr1, [r2, #-0]
    7a54:	12000000 	andne	r0, r0, #0
    7a58:	00002ad9 	ldrdeq	r2, [r0], -r9
    7a5c:	19016509 	stmdbne	r1, {r0, r3, r8, sl, sp, lr}
    7a60:	00001d58 	andeq	r1, r0, r8, asr sp
    7a64:	1d5e0418 	cfldrdne	mvd0, [lr, #-96]	; 0xffffffa0
    7a68:	b01b0000 	andslt	r0, fp, r0
    7a6c:	8600001b 			; <UNDEFINED> instruction: 0x8600001b
    7a70:	1c00001d 	stcne	0, cr0, [r0], {29}
    7a74:	00001bec 	andeq	r1, r0, ip, ror #23
    7a78:	00053d1c 	andeq	r3, r5, ip, lsl sp
    7a7c:	053d1c00 	ldreq	r1, [sp, #-3072]!	; 0xfffff400
    7a80:	6d1c0000 	ldcvs	0, cr0, [ip, #-0]
    7a84:	1c000002 	stcne	0, cr0, [r0], {2}
    7a88:	0000004d 	andeq	r0, r0, sp, asr #32
    7a8c:	00182d1c 	andseq	r2, r8, ip, lsl sp
    7a90:	8f120000 	svchi	0x00120000
    7a94:	09000030 	stmdbeq	r0, {r4, r5}
    7a98:	93190174 	tstls	r9, #116, 2
    7a9c:	1800001d 	stmdane	r0, {r0, r2, r3, r4}
    7aa0:	001d9904 	andseq	r9, sp, r4, lsl #18
    7aa4:	1bb01b00 	blne	fec0e6ac <__bss_end__+0xfeac5664>
    7aa8:	1dbc0000 	ldcne	0, cr0, [ip]
    7aac:	ec1c0000 	ldc	0, cr0, [ip], {-0}
    7ab0:	1c00001b 	stcne	0, cr0, [r0], {27}
    7ab4:	00000585 	andeq	r0, r0, r5, lsl #11
    7ab8:	00053d1c 	andeq	r3, r5, ip, lsl sp
    7abc:	026d1c00 	rsbeq	r1, sp, #0, 24
    7ac0:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    7ac4:	00000000 	andeq	r0, r0, r0
    7ac8:	002d5012 	eoreq	r5, sp, r2, lsl r0
    7acc:	01840900 	orreq	r0, r4, r0, lsl #18
    7ad0:	001dc919 	andseq	ip, sp, r9, lsl r9
    7ad4:	cf041800 	svcgt	0x00041800
    7ad8:	1b00001d 	blne	7b54 <errno+0x7b50>
    7adc:	00001bb0 			; <UNDEFINED> instruction: 0x00001bb0
    7ae0:	00001ded 	andeq	r1, r0, sp, ror #27
    7ae4:	001bec1c 	andseq	lr, fp, ip, lsl ip
    7ae8:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    7aec:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    7af0:	1c000005 	stcne	0, cr0, [r0], {5}
    7af4:	0000004d 	andeq	r0, r0, sp, asr #32
    7af8:	35c51200 	strbcc	r1, [r5, #512]	; 0x200
    7afc:	8f090000 	svchi	0x00090000
    7b00:	1dfa1001 	ldclne	0, cr1, [sl, #4]!
    7b04:	04180000 	ldreq	r0, [r8], #-0
    7b08:	00001e00 	andeq	r1, r0, r0, lsl #28
    7b0c:	001e101d 	andseq	r1, lr, sp, lsl r0
    7b10:	1bec1c00 	blne	ffb0eb18 <__bss_end__+0xff9c5ad0>
    7b14:	b01c0000 	andslt	r0, ip, r0
    7b18:	0000001b 	andeq	r0, r0, fp, lsl r0
    7b1c:	0029ae12 	eoreq	sl, r9, r2, lsl lr
    7b20:	01990900 	orrseq	r0, r9, r0, lsl #18
    7b24:	001e1d10 	andseq	r1, lr, r0, lsl sp
    7b28:	23041800 	movwcs	r1, #18432	; 0x4800
    7b2c:	1d00001e 	stcne	0, cr0, [r0, #-120]	; 0xffffff88
    7b30:	00001e33 	andeq	r1, r0, r3, lsr lr
    7b34:	001bec1c 	andseq	lr, fp, ip, lsl ip
    7b38:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    7b3c:	12000000 	andne	r0, r0, #0
    7b40:	0000237e 	andeq	r2, r0, lr, ror r3
    7b44:	1401a409 	strne	sl, [r1], #-1033	; 0xfffffbf7
    7b48:	00001e40 	andeq	r1, r0, r0, asr #28
    7b4c:	1e460418 	mcrne	4, 2, r0, cr6, cr8, {0}
    7b50:	811b0000 	tsthi	fp, r0
    7b54:	5a000000 	bpl	7b5c <errno+0x7b58>
    7b58:	1c00001e 	stcne	0, cr0, [r0], {30}
    7b5c:	00001bec 	andeq	r1, r0, ip, ror #23
    7b60:	0005851c 	andeq	r8, r5, ip, lsl r5
    7b64:	07120000 	ldreq	r0, [r2, -r0]
    7b68:	09000034 	stmdbeq	r0, {r2, r4, r5}
    7b6c:	671501ae 	ldrvs	r0, [r5, -lr, lsr #3]
    7b70:	1800001e 	stmdane	r0, {r1, r2, r3, r4}
    7b74:	001e6d04 	andseq	r6, lr, r4, lsl #26
    7b78:	05551b00 	ldrbeq	r1, [r5, #-2816]	; 0xfffff500
    7b7c:	1e810000 	cdpne	0, 8, cr0, cr1, cr0, {0}
    7b80:	ec1c0000 	ldc	0, cr0, [ip], {-0}
    7b84:	1c00001b 	stcne	0, cr0, [r0], {27}
    7b88:	00000585 	andeq	r0, r0, r5, lsl #11
    7b8c:	357f1200 	ldrbcc	r1, [pc, #-512]!	; 7994 <errno+0x7990>
    7b90:	bb090000 	bllt	247b98 <__bss_end__+0xfeb50>
    7b94:	1e8e1001 	cdpne	0, 8, cr1, cr14, cr1, {0}
    7b98:	04180000 	ldreq	r0, [r8], #-0
    7b9c:	00001e94 	muleq	r0, r4, lr
    7ba0:	001ea41d 	andseq	sl, lr, sp, lsl r4
    7ba4:	05851c00 	streq	r1, [r5, #3072]	; 0xc00
    7ba8:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    7bac:	0000001a 	andeq	r0, r0, sl, lsl r0
    7bb0:	0026f812 	eoreq	pc, r6, r2, lsl r8	; <UNPREDICTABLE>
    7bb4:	01bf0900 			; <UNDEFINED> instruction: 0x01bf0900
    7bb8:	001eb114 	andseq	fp, lr, r4, lsl r1
    7bbc:	b7041800 	strlt	r1, [r4, -r0, lsl #16]
    7bc0:	1b00001e 	blne	7c40 <errno+0x7c3c>
    7bc4:	00000081 	andeq	r0, r0, r1, lsl #1
    7bc8:	00001ec6 	andeq	r1, r0, r6, asr #29
    7bcc:	001bec1c 	andseq	lr, fp, ip, lsl ip
    7bd0:	ac120000 	ldcge	0, cr0, [r2], {-0}
    7bd4:	09000024 	stmdbeq	r0, {r2, r5}
    7bd8:	d30f01cf 	movwle	r0, #61903	; 0xf1cf
    7bdc:	1800001e 	stmdane	r0, {r1, r2, r3, r4}
    7be0:	001ed904 	andseq	sp, lr, r4, lsl #18
    7be4:	004d1b00 	subeq	r1, sp, r0, lsl #22
    7be8:	1f060000 	svcne	0x00060000
    7bec:	ec1c0000 	ldc	0, cr0, [ip], {-0}
    7bf0:	1c00001b 	stcne	0, cr0, [r0], {27}
    7bf4:	00001bec 	andeq	r1, r0, ip, ror #23
    7bf8:	0005851c 	andeq	r8, r5, ip, lsl r5
    7bfc:	004d1c00 	subeq	r1, sp, r0, lsl #24
    7c00:	3d1c0000 	ldccc	0, cr0, [ip, #-0]
    7c04:	1c000005 	stcne	0, cr0, [r0], {5}
    7c08:	00000585 	andeq	r0, r0, r5, lsl #11
    7c0c:	001bb01c 	andseq	fp, fp, ip, lsl r0
    7c10:	e7090000 	str	r0, [r9, -r0]
    7c14:	0700002b 	streq	r0, [r0, -fp, lsr #32]
    7c18:	00006004 	andeq	r6, r0, r4
    7c1c:	06230b00 	strteq	r0, [r3], -r0, lsl #22
    7c20:	00001f31 	andeq	r1, r0, r1, lsr pc
    7c24:	002aa906 	eoreq	sl, sl, r6, lsl #18
    7c28:	5f060000 	svcpl	0x00060000
    7c2c:	01000031 	tsteq	r0, r1, lsr r0
    7c30:	002eec06 	eoreq	lr, lr, r6, lsl #24
    7c34:	7d060200 	sfmvc	f0, 4, [r6, #-0]
    7c38:	0300002e 	movweq	r0, #46	; 0x2e
    7c3c:	2bee0b00 	blcs	ffb8a844 <__bss_end__+0xffa417fc>
    7c40:	290b0000 	stmdbcs	fp, {}	; <UNPREDICTABLE>
    7c44:	001f0621 	andseq	r0, pc, r1, lsr #12
    7c48:	78030500 	stmdavc	r3, {r8, sl}
    7c4c:	0b000480 	bleq	8e54 <errno+0x8e50>
    7c50:	0000328d 	andeq	r3, r0, sp, lsl #5
    7c54:	ec122e0b 	ldc	14, cr2, [r2], {11}
    7c58:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    7c5c:	04807c03 	streq	r7, [r0], #3075	; 0xc03
    7c60:	281f0b00 	ldmdacs	pc, {r8, r9, fp}	; <UNPREDICTABLE>
    7c64:	2f0b0000 	svccs	0x000b0000
    7c68:	001f6719 	andseq	r6, pc, r9, lsl r7	; <UNPREDICTABLE>
    7c6c:	80030500 	andhi	r0, r3, r0, lsl #10
    7c70:	18000480 	stmdane	r0, {r7, sl}
    7c74:	000a9204 	andeq	r9, sl, r4, lsl #4
    7c78:	6b762500 	blvs	1d91080 <__bss_end__+0x1c48038>
    7c7c:	300b0061 	andcc	r0, fp, r1, rrx
    7c80:	001d220f 	andseq	r2, sp, pc, lsl #4
    7c84:	84030500 	strhi	r0, [r3], #-1280	; 0xfffffb00
    7c88:	0b000480 	bleq	8e90 <errno+0x8e8c>
    7c8c:	00002f8d 	andeq	r2, r0, sp, lsl #31
    7c90:	9211330b 	andsls	r3, r1, #738197504	; 0x2c000000
    7c94:	0500000a 	streq	r0, [r0, #-10]
    7c98:	04808803 	streq	r8, [r0], #2051	; 0x803
    7c9c:	386f0b00 	stmdacc	pc!, {r8, r9, fp}^	; <UNPREDICTABLE>
    7ca0:	340b0000 	strcc	r0, [fp], #-0
    7ca4:	000c9b0e 	andeq	r9, ip, lr, lsl #22
    7ca8:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
    7cac:	0b000480 	bleq	8eb4 <errno+0x8eb0>
    7cb0:	000027f8 	strdeq	r2, [r0], -r8
    7cb4:	8112380b 	tsthi	r2, fp, lsl #16
    7cb8:	05000000 	streq	r0, [r0, #-0]
    7cbc:	04810003 	streq	r0, [r1], #3
    7cc0:	05a50c00 	streq	r0, [r5, #3072]!	; 0xc00
    7cc4:	1fc00000 	svcne	0x00c00000
    7cc8:	00260000 	eoreq	r0, r6, r0
    7ccc:	00383617 	eorseq	r3, r8, r7, lsl r6
    7cd0:	0d390b00 	vldmdbeq	r9!, {d0-d-1}
    7cd4:	00001fb5 			; <UNDEFINED> instruction: 0x00001fb5
    7cd8:	002a0e27 	eoreq	r0, sl, r7, lsr #28
    7cdc:	013c0b00 	teqeq	ip, r0, lsl #22
    7ce0:	00004d05 	andeq	r4, r0, r5, lsl #26
    7ce4:	01653400 	cmneq	r5, r0, lsl #8
    7ce8:	00003000 	andeq	r3, r0, r0
    7cec:	289c0100 	ldmcs	ip, {r8}
    7cf0:	000023f7 	strdeq	r2, [r0], -r7
    7cf4:	0101340b 	tsteq	r1, fp, lsl #8
    7cf8:	0000053d 	andeq	r0, r0, sp, lsr r5
    7cfc:	000164d0 	ldrdeq	r6, [r1], -r0
    7d00:	00000064 	andeq	r0, r0, r4, rrx
    7d04:	20379c01 	eorscs	r9, r7, r1, lsl #24
    7d08:	a1290000 			; <UNDEFINED> instruction: 0xa1290000
    7d0c:	0b000019 	bleq	7d78 <errno+0x7d74>
    7d10:	f9140134 			; <UNDEFINED> instruction: 0xf9140134
    7d14:	02000005 	andeq	r0, r0, #5
    7d18:	82296c91 	eorhi	r6, r9, #37120	; 0x9100
    7d1c:	0b000027 	bleq	7dc0 <errno+0x7dbc>
    7d20:	3d210134 	stfccs	f0, [r1, #-208]!	; 0xffffff30
    7d24:	02000005 	andeq	r0, r0, #5
    7d28:	e42a6891 	strt	r6, [sl], #-2193	; 0xfffff76f
    7d2c:	40000164 	andmi	r0, r0, r4, ror #2
    7d30:	2b000000 	blcs	7d38 <errno+0x7d34>
    7d34:	360b0069 	strcc	r0, [fp], -r9, rrx
    7d38:	053d1101 	ldreq	r1, [sp, #-257]!	; 0xfffffeff
    7d3c:	91020000 	mrsls	r0, (UNDEF: 2)
    7d40:	2c000074 	stccs	0, cr0, [r0], {116}	; 0x74
    7d44:	000027cd 	andeq	r2, r0, sp, asr #15
    7d48:	0101280b 	tsteq	r1, fp, lsl #16
    7d4c:	00016494 	muleq	r1, r4, r4
    7d50:	0000003c 	andeq	r0, r0, ip, lsr r0
    7d54:	205d9c01 	subscs	r9, sp, r1, lsl #24
    7d58:	632d0000 			; <UNDEFINED> instruction: 0x632d0000
    7d5c:	01280b00 			; <UNDEFINED> instruction: 0x01280b00
    7d60:	00004d14 	andeq	r4, r0, r4, lsl sp
    7d64:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7d68:	33af2e00 			; <UNDEFINED> instruction: 0x33af2e00
    7d6c:	000b0000 	andeq	r0, fp, r0
    7d70:	64080d01 	strvs	r0, [r8], #-3329	; 0xfffff2ff
    7d74:	008c0001 	addeq	r0, ip, r1
    7d78:	9c010000 	stcls	0, cr0, [r1], {-0}
    7d7c:	00002085 	andeq	r2, r0, r5, lsl #1
    7d80:	002d8c2f 	eoreq	r8, sp, pc, lsr #24
    7d84:	01020b00 	tsteq	r2, r0, lsl #22
    7d88:	00004d09 	andeq	r4, r0, r9, lsl #26
    7d8c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7d90:	34253000 	strtcc	r3, [r5], #-0
    7d94:	dd0b0000 	stcle	0, cr0, [fp, #-0]
    7d98:	00004d05 	andeq	r4, r0, r5, lsl #26
    7d9c:	01635c00 	cmneq	r3, r0, lsl #24
    7da0:	0000ac00 	andeq	sl, r0, r0, lsl #24
    7da4:	eb9c0100 	bl	fe7081ac <__bss_end__+0xfe5bf164>
    7da8:	31000020 	tstcc	r0, r0, lsr #32
    7dac:	0000328c 	andeq	r3, r0, ip, lsl #5
    7db0:	ec0fde0b 	stc	14, cr13, [pc], {11}
    7db4:	0200001b 	andeq	r0, r0, #27
    7db8:	1e316c91 	mrcne	12, 1, r6, cr1, cr1, {4}
    7dbc:	0b000028 	bleq	7e64 <errno+0x7e60>
    7dc0:	1f670fdf 	svcne	0x00670fdf
    7dc4:	91020000 	mrsls	r0, (UNDEF: 2)
    7dc8:	2b733168 	blcs	1cd4370 <__bss_end__+0x1b8b328>
    7dcc:	e00b0000 	and	r0, fp, r0
    7dd0:	001d220c 	andseq	r2, sp, ip, lsl #4
    7dd4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    7dd8:	72726525 	rsbsvc	r6, r2, #155189248	; 0x9400000
    7ddc:	09e20b00 	stmibeq	r2!, {r8, r9, fp}^
    7de0:	0000004d 	andeq	r0, r0, sp, asr #32
    7de4:	32749102 	rsbscc	r9, r4, #-2147483648	; 0x80000000
    7de8:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    7dec:	000020fb 	strdeq	r2, [r0], -fp
    7df0:	858c0305 	strhi	r0, [ip, #773]	; 0x305
    7df4:	0c000002 	stceq	0, cr0, [r0], {2}
    7df8:	000005ac 	andeq	r0, r0, ip, lsr #11
    7dfc:	000020fb 	strdeq	r2, [r0], -fp
    7e00:	0000600d 	andeq	r6, r0, sp
    7e04:	0a001f00 	beq	fa0c <errno+0xfa08>
    7e08:	000020eb 	andeq	r2, r0, fp, ror #1
    7e0c:	00323730 	eorseq	r3, r2, r0, lsr r7
    7e10:	05c40b00 	strbeq	r0, [r4, #2816]	; 0xb00
    7e14:	0000004d 	andeq	r0, r0, sp, asr #32
    7e18:	000162e4 	andeq	r6, r1, r4, ror #5
    7e1c:	00000078 	andeq	r0, r0, r8, ror r0
    7e20:	212a9c01 			; <UNDEFINED> instruction: 0x212a9c01
    7e24:	65250000 	strvs	r0, [r5, #-0]!
    7e28:	0b007272 	bleq	247f8 <__floatscan+0x26c>
    7e2c:	004d09c6 	subeq	r0, sp, r6, asr #19
    7e30:	91020000 	mrsls	r0, (UNDEF: 2)
    7e34:	28300074 	ldmdacs	r0!, {r2, r4, r5, r6}
    7e38:	0b000026 	bleq	7ed8 <errno+0x7ed4>
    7e3c:	004d05b7 	strheq	r0, [sp], #-87	; 0xffffffa9
    7e40:	62780000 	rsbsvs	r0, r8, #0
    7e44:	006c0001 	rsbeq	r0, ip, r1
    7e48:	9c010000 	stcls	0, cr0, [r1], {-0}
    7e4c:	00002163 	andeq	r2, r0, r3, ror #2
    7e50:	00264131 	eoreq	r4, r6, r1, lsr r1
    7e54:	32b70b00 	adcscc	r0, r7, #0, 22
    7e58:	00002163 	andeq	r2, r0, r3, ror #2
    7e5c:	256c9102 	strbcs	r9, [ip, #-258]!	; 0xfffffefe
    7e60:	00727265 	rsbseq	r7, r2, r5, ror #4
    7e64:	4d09b90b 	vstrmi.16	s22, [r9, #-22]	; 0xffffffea	; <UNPREDICTABLE>
    7e68:	02000000 	andeq	r0, r0, #0
    7e6c:	18007491 	stmdane	r0, {r0, r4, r7, sl, ip, sp, lr}
    7e70:	000f5204 	andeq	r5, pc, r4, lsl #4
    7e74:	374a3300 	strbcc	r3, [sl, -r0, lsl #6]
    7e78:	b30b0000 	movwlt	r0, #45056	; 0xb000
    7e7c:	01626006 	cmneq	r2, r6
    7e80:	00001800 	andeq	r1, r0, r0, lsl #16
    7e84:	349c0100 	ldrcc	r0, [ip], #256	; 0x100
    7e88:	0000271e 	andeq	r2, r0, lr, lsl r7
    7e8c:	9c06a30b 	stcls	3, cr10, [r6], {11}
    7e90:	c4000161 	strgt	r0, [r0], #-353	; 0xfffffe9f
    7e94:	01000000 	mrseq	r0, (UNDEF: 0)
    7e98:	0021ab9c 	mlaeq	r1, ip, fp, sl
    7e9c:	61cc2a00 	bicvs	r2, ip, r0, lsl #20
    7ea0:	00880001 	addeq	r0, r8, r1
    7ea4:	020b0000 	andeq	r0, fp, #0
    7ea8:	0b000032 	bleq	7f78 <errno+0x7f74>
    7eac:	067416a8 	ldrbteq	r1, [r4], -r8, lsr #13
    7eb0:	91020000 	mrsls	r0, (UNDEF: 2)
    7eb4:	3000005c 	andcc	r0, r0, ip, asr r0
    7eb8:	00002d3e 	andeq	r2, r0, lr, lsr sp
    7ebc:	8507930b 	strhi	r9, [r7, #-779]	; 0xfffffcf5
    7ec0:	cc000005 	stcgt	0, cr0, [r0], {5}
    7ec4:	d0000160 	andle	r0, r0, r0, ror #2
    7ec8:	01000000 	mrseq	r0, (UNDEF: 0)
    7ecc:	0022119c 	mlaeq	r2, ip, r1, r1
    7ed0:	2a2e3100 	bcs	b942d8 <__bss_end__+0xa4b290>
    7ed4:	930b0000 	movwls	r0, #45056	; 0xb000
    7ed8:	0005851f 	andeq	r8, r5, pc, lsl r5
    7edc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7ee0:	0033c631 	eorseq	ip, r3, r1, lsr r6
    7ee4:	31930b00 	orrscc	r0, r3, r0, lsl #22
    7ee8:	00000555 	andeq	r0, r0, r5, asr r5
    7eec:	31709102 	cmncc	r0, r2, lsl #2
    7ef0:	0000381f 	andeq	r3, r0, pc, lsl r8
    7ef4:	3d3f930b 	ldccc	3, cr9, [pc, #-44]!	; 7ed0 <errno+0x7ecc>
    7ef8:	02000005 	andeq	r0, r0, #5
    7efc:	6c316c91 	ldcvs	12, cr6, [r1], #-580	; 0xfffffdbc
    7f00:	0b000037 	bleq	7fe4 <errno+0x7fe0>
    7f04:	004d1d94 	umaaleq	r1, sp, r4, sp
    7f08:	91020000 	mrsls	r0, (UNDEF: 2)
    7f0c:	31d73168 	bicscc	r3, r7, r8, ror #2
    7f10:	940b0000 	strls	r0, [fp], #-0
    7f14:	00157434 	andseq	r7, r5, r4, lsr r4
    7f18:	00910200 	addseq	r0, r1, r0, lsl #4
    7f1c:	2a4b3500 	bcs	12d5324 <__bss_end__+0x118c2dc>
    7f20:	7c0b0000 	stcvc	0, cr0, [fp], {-0}
    7f24:	0005850e 	andeq	r8, r5, lr, lsl #10
    7f28:	015f2800 	cmpeq	pc, r0, lsl #16
    7f2c:	0001a400 	andeq	sl, r1, r0, lsl #8
    7f30:	c29c0100 	addsgt	r0, ip, #0, 2
    7f34:	31000022 	tstcc	r0, r2, lsr #32
    7f38:	00002a2e 	andeq	r2, r0, lr, lsr #20
    7f3c:	852e7c0b 	strhi	r7, [lr, #-3083]!	; 0xfffff3f5
    7f40:	02000005 	andeq	r0, r0, #5
    7f44:	c6314c91 			; <UNDEFINED> instruction: 0xc6314c91
    7f48:	0b000033 	bleq	801c <errno+0x8018>
    7f4c:	0555477c 	ldrbeq	r4, [r5, #-1916]	; 0xfffff884
    7f50:	91020000 	mrsls	r0, (UNDEF: 2)
    7f54:	381f3148 	ldmdacc	pc, {r3, r6, r8, ip, sp}	; <UNPREDICTABLE>
    7f58:	7c0b0000 	stcvc	0, cr0, [fp], {-0}
    7f5c:	00053d55 	andeq	r3, r5, r5, asr sp
    7f60:	44910200 	ldrmi	r0, [r1], #512	; 0x200
    7f64:	00376c31 	eorseq	r6, r7, r1, lsr ip
    7f68:	2c7d0b00 			; <UNDEFINED> instruction: 0x2c7d0b00
    7f6c:	0000004d 	andeq	r0, r0, sp, asr #32
    7f70:	31409102 	cmpcc	r0, r2, lsl #2
    7f74:	000031d7 	ldrdeq	r3, [r0], -r7
    7f78:	744a7d0b 	strbvc	r7, [sl], #-3339	; 0xfffff2f5
    7f7c:	02000015 	andeq	r0, r0, #21
    7f80:	c70b0091 			; <UNDEFINED> instruction: 0xc70b0091
    7f84:	0b000032 	bleq	8054 <errno+0x8050>
    7f88:	004d097f 	subeq	r0, sp, pc, ror r9
    7f8c:	91020000 	mrsls	r0, (UNDEF: 2)
    7f90:	26b00b6c 	ldrtcs	r0, [r0], ip, ror #22
    7f94:	800b0000 	andhi	r0, fp, r0
    7f98:	0005850b 	andeq	r8, r5, fp, lsl #10
    7f9c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    7fa0:	003fed0b 	eorseq	lr, pc, fp, lsl #26
    7fa4:	09810b00 	stmibeq	r1, {r8, r9, fp}
    7fa8:	0000004d 	andeq	r0, r0, sp, asr #32
    7fac:	0b689102 	bleq	1a2c3bc <__bss_end__+0x18e3374>
    7fb0:	00000c20 	andeq	r0, r0, r0, lsr #24
    7fb4:	3d12820b 	lfmcc	f0, 1, [r2, #-44]	; 0xffffffd4
    7fb8:	0200001a 	andeq	r0, r0, #26
    7fbc:	b6325491 			; <UNDEFINED> instruction: 0xb6325491
    7fc0:	d200001a 	andle	r0, r0, #26
    7fc4:	05000022 	streq	r0, [r0, #-34]	; 0xffffffde
    7fc8:	02851c03 	addeq	r1, r5, #768	; 0x300
    7fcc:	ac0c0000 	stcge	0, cr0, [ip], {-0}
    7fd0:	d2000005 	andle	r0, r0, #5
    7fd4:	0d000022 	stceq	0, cr0, [r0, #-136]	; 0xffffff78
    7fd8:	00000060 	andeq	r0, r0, r0, rrx
    7fdc:	c20a0019 	andgt	r0, sl, #25
    7fe0:	35000022 	strcc	r0, [r0, #-34]	; 0xffffffde
    7fe4:	00003517 	andeq	r3, r0, r7, lsl r5
    7fe8:	850e560b 	strhi	r5, [lr, #-1547]	; 0xfffff9f5
    7fec:	f4000005 	vst4.8	{d0-d3}, [r0], r5
    7ff0:	3400015d 	strcc	r0, [r0], #-349	; 0xfffffea3
    7ff4:	01000001 	tsteq	r0, r1
    7ff8:	0023949c 	mlaeq	r3, ip, r4, r9
    7ffc:	2a2e3100 	bcs	b94404 <__bss_end__+0xa4b3bc>
    8000:	560b0000 	strpl	r0, [fp], -r0
    8004:	0005852f 	andeq	r8, r5, pc, lsr #10
    8008:	4c910200 	lfmmi	f0, 4, [r1], {0}
    800c:	0033c631 	eorseq	ip, r3, r1, lsr r6
    8010:	48560b00 	ldmdami	r6, {r8, r9, fp}^
    8014:	00000555 	andeq	r0, r0, r5, asr r5
    8018:	31489102 	cmpcc	r8, r2, lsl #2
    801c:	0000381f 	andeq	r3, r0, pc, lsl r8
    8020:	3d56560b 	ldclcc	6, cr5, [r6, #-44]	; 0xffffffd4
    8024:	02000005 	andeq	r0, r0, #5
    8028:	6c314491 	cfldrsvs	mvf4, [r1], #-580	; 0xfffffdbc
    802c:	0b000037 	bleq	8110 <errno+0x810c>
    8030:	004d2d57 	subeq	r2, sp, r7, asr sp
    8034:	91020000 	mrsls	r0, (UNDEF: 2)
    8038:	31d73140 	bicscc	r3, r7, r0, asr #2
    803c:	570b0000 	strpl	r0, [fp, -r0]
    8040:	0015744b 	andseq	r7, r5, fp, asr #8
    8044:	00910200 	addseq	r0, r1, r0, lsl #4
    8048:	0032c70b 	eorseq	ip, r2, fp, lsl #14
    804c:	09590b00 	ldmdbeq	r9, {r8, r9, fp}^
    8050:	0000004d 	andeq	r0, r0, sp, asr #32
    8054:	0b649102 	bleq	192c464 <__bss_end__+0x17e341c>
    8058:	00003fed 	andeq	r3, r0, sp, ror #31
    805c:	4d095a0b 	vstrmi	s10, [r9, #-44]	; 0xffffffd4
    8060:	02000000 	andeq	r0, r0, #0
    8064:	b00b6c91 	mullt	fp, r1, ip
    8068:	0b000026 	bleq	8108 <errno+0x8104>
    806c:	00750f5b 	rsbseq	r0, r5, fp, asr pc
    8070:	91020000 	mrsls	r0, (UNDEF: 2)
    8074:	0c200b68 			; <UNDEFINED> instruction: 0x0c200b68
    8078:	5c0b0000 	stcpl	0, cr0, [fp], {-0}
    807c:	001a3d12 	andseq	r3, sl, r2, lsl sp
    8080:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    8084:	003fed36 	eorseq	lr, pc, r6, lsr sp	; <UNPREDICTABLE>
    8088:	01730b00 	cmneq	r3, r0, lsl #22
    808c:	00015edc 	ldrdeq	r5, [r1], -ip
    8090:	001ab632 	andseq	fp, sl, r2, lsr r6
    8094:	0023a400 	eoreq	sl, r3, r0, lsl #8
    8098:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
    809c:	00000284 	andeq	r0, r0, r4, lsl #5
    80a0:	0005ac0c 	andeq	sl, r5, ip, lsl #24
    80a4:	0023a400 	eoreq	sl, r3, r0, lsl #8
    80a8:	00600d00 	rsbeq	r0, r0, r0, lsl #26
    80ac:	001a0000 	andseq	r0, sl, r0
    80b0:	0023940a 	eoreq	r9, r3, sl, lsl #8
    80b4:	26973700 	ldrcs	r3, [r7], r0, lsl #14
    80b8:	4a0b0000 	bmi	2c80c0 <__bss_end__+0x17f078>
    80bc:	00007512 	andeq	r7, r0, r2, lsl r5
    80c0:	015d9400 	cmpeq	sp, r0, lsl #8
    80c4:	00006000 	andeq	r6, r0, r0
    80c8:	e19c0100 	orrs	r0, ip, r0, lsl #2
    80cc:	31000023 	tstcc	r0, r3, lsr #32
    80d0:	000032c7 	andeq	r3, r0, r7, asr #5
    80d4:	753b4a0b 	ldrvc	r4, [fp, #-2571]!	; 0xfffff5f5
    80d8:	02000000 	andeq	r0, r0, #0
    80dc:	76256c91 			; <UNDEFINED> instruction: 0x76256c91
    80e0:	4c0b0061 	stcmi	0, cr0, [fp], {97}	; 0x61
    80e4:	0000750f 	andeq	r7, r0, pc, lsl #10
    80e8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    80ec:	2d7b3500 	cfldr64cs	mvdx3, [fp, #-0]
    80f0:	2c0a0000 	stccs	0, cr0, [sl], {-0}
    80f4:	00004d13 	andeq	r4, r0, r3, lsl sp
    80f8:	015d5000 	cmpeq	sp, r0
    80fc:	00004400 	andeq	r4, r0, r0, lsl #8
    8100:	0b9c0100 	bleq	fe708508 <__bss_end__+0xfe5bf4c0>
    8104:	38000024 	stmdacc	r0, {r2, r5}
    8108:	00637273 	rsbeq	r7, r3, r3, ror r2
    810c:	42382c0a 	eorsmi	r2, r8, #2560	; 0xa00
    8110:	0200000b 	andeq	r0, r0, #11
    8114:	39007491 	stmdbcc	r0, {r0, r4, r7, sl, ip, sp, lr}
    8118:	000032d4 	ldrdeq	r3, [r0], -r4
    811c:	15022509 	strne	r2, [r2, #-1289]	; 0xfffffaf7
    8120:	00000585 	andeq	r0, r0, r5, lsl #11
    8124:	00015b74 	andeq	r5, r1, r4, ror fp
    8128:	000001dc 	ldrdeq	r0, [r0], -ip
    812c:	24a69c01 	strtcs	r9, [r6], #3073	; 0xc01
    8130:	8d290000 	stchi	0, cr0, [r9, #-0]
    8134:	09000032 	stmdbeq	r0, {r1, r4, r5}
    8138:	ec300225 	lfm	f0, 4, [r0], #-148	; 0xffffff6c
    813c:	0200001b 	andeq	r0, r0, #27
    8140:	46296c91 			; <UNDEFINED> instruction: 0x46296c91
    8144:	0900002a 	stmdbeq	r0, {r1, r3, r5}
    8148:	ea420225 	b	10889e4 <__bss_end__+0xf3f99c>
    814c:	02000007 	andeq	r0, r0, #7
    8150:	cc296891 	stcgt	8, cr6, [r9], #-580	; 0xfffffdbc
    8154:	09000032 	stmdbeq	r0, {r1, r4, r5}
    8158:	d7540225 	ldrble	r0, [r4, -r5, lsr #4]
    815c:	02000008 	andeq	r0, r0, #8
    8160:	e1296491 			; <UNDEFINED> instruction: 0xe1296491
    8164:	09000024 	stmdbeq	r0, {r2, r5}
    8168:	6d370226 	lfmvs	f0, 4, [r7, #-152]!	; 0xffffff68
    816c:	02000002 	andeq	r0, r0, #2
    8170:	63296091 			; <UNDEFINED> instruction: 0x63296091
    8174:	09000029 	stmdbeq	r0, {r0, r3, r5}
    8178:	3d460226 	sfmcc	f0, 2, [r6, #-152]	; 0xffffff68
    817c:	02000005 	andeq	r0, r0, #5
    8180:	c2290091 	eorgt	r0, r9, #145	; 0x91
    8184:	09000032 	stmdbeq	r0, {r1, r4, r5}
    8188:	3d580226 	lfmcc	f0, 2, [r8, #-152]	; 0xffffff68
    818c:	02000005 	andeq	r0, r0, #5
    8190:	84290491 	strthi	r0, [r9], #-1169	; 0xfffffb6f
    8194:	09000025 	stmdbeq	r0, {r0, r2, r5}
    8198:	4d2a0227 	sfmmi	f0, 4, [sl, #-156]!	; 0xffffff64
    819c:	02000000 	andeq	r0, r0, #0
    81a0:	b6320891 			; <UNDEFINED> instruction: 0xb6320891
    81a4:	b600001a 			; <UNDEFINED> instruction: 0xb600001a
    81a8:	05000024 	streq	r0, [r0, #-36]	; 0xffffffdc
    81ac:	02853803 	addeq	r3, r5, #196608	; 0x30000
    81b0:	ac0c0000 	stcge	0, cr0, [ip], {-0}
    81b4:	b6000005 	strlt	r0, [r0], -r5
    81b8:	0d000024 	stceq	0, cr0, [r0, #-144]	; 0xffffff70
    81bc:	00000060 	andeq	r0, r0, r0, rrx
    81c0:	a60a0010 			; <UNDEFINED> instruction: 0xa60a0010
    81c4:	35000024 	strcc	r0, [r0, #-36]	; 0xffffffdc
    81c8:	000032b7 			; <UNDEFINED> instruction: 0x000032b7
    81cc:	e3011208 	movw	r1, #4616	; 0x1208
    81d0:	98000008 	stmdals	r0, {r3}
    81d4:	dc00015a 	stfles	f0, [r0], {90}	; 0x5a
    81d8:	01000000 	mrseq	r0, (UNDEF: 0)
    81dc:	00250b9c 	mlaeq	r5, ip, fp, r0
    81e0:	32c23100 	sbccc	r3, r2, #0, 2
    81e4:	12080000 	andne	r0, r8, #0
    81e8:	00053d1d 	andeq	r3, r5, sp, lsl sp
    81ec:	6c910200 	lfmvs	f0, 4, [r1], {0}
    81f0:	001ab632 	andseq	fp, sl, r2, lsr r6
    81f4:	00251b00 	eoreq	r1, r5, r0, lsl #22
    81f8:	4c030500 	cfstr32mi	mvfx0, [r3], {-0}
    81fc:	2a000285 	bcs	8c18 <errno+0x8c14>
    8200:	00015aa8 	andeq	r5, r1, r8, lsr #21
    8204:	000000bc 	strheq	r0, [r0], -ip
    8208:	08006925 	stmdaeq	r0, {r0, r2, r5, r8, fp, sp, lr}
    820c:	004d0e14 	subeq	r0, sp, r4, lsl lr
    8210:	91020000 	mrsls	r0, (UNDEF: 2)
    8214:	0c000074 	stceq	0, cr0, [r0], {116}	; 0x74
    8218:	000005ac 	andeq	r0, r0, ip, lsr #11
    821c:	0000251b 	andeq	r2, r0, fp, lsl r5
    8220:	0000600d 	andeq	r6, r0, sp
    8224:	0a001400 	beq	d22c <errno+0xd228>
    8228:	0000250b 	andeq	r2, r0, fp, lsl #10
    822c:	0024c93a 	eoreq	ip, r4, sl, lsr r9
    8230:	14bd0700 	ldrtne	r0, [sp], #1792	; 0x700
    8234:	00015988 	andeq	r5, r1, r8, lsl #19
    8238:	00000110 	andeq	r0, r0, r0, lsl r1
    823c:	25649c01 	strbcs	r9, [r4, #-3073]!	; 0xfffff3ff
    8240:	76380000 	ldrtvc	r0, [r8], -r0
    8244:	0700616b 	streq	r6, [r0, -fp, ror #2]
    8248:	1d222bbd 	fstmdbxne	r2!, {d2-d95}	;@ Deprecated
    824c:	91020000 	mrsls	r0, (UNDEF: 2)
    8250:	372f3174 			; <UNDEFINED> instruction: 0x372f3174
    8254:	bd070000 	stclt	0, cr0, [r7, #-0]
    8258:	0000813a 	andeq	r8, r0, sl, lsr r1
    825c:	70910200 	addsvc	r0, r1, r0, lsl #4
    8260:	001ab632 	andseq	fp, sl, r2, lsr r6
    8264:	00257400 	eoreq	r7, r5, r0, lsl #8
    8268:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    826c:	00000285 	andeq	r0, r0, r5, lsl #5
    8270:	0005ac0c 	andeq	sl, r5, ip, lsl #24
    8274:	00257400 	eoreq	r7, r5, r0, lsl #8
    8278:	00600d00 	rsbeq	r0, r0, r0, lsl #26
    827c:	000f0000 	andeq	r0, pc, r0
    8280:	0025640a 	eoreq	r6, r5, sl, lsl #8
    8284:	31f23a00 	mvnscc	r3, r0, lsl #20
    8288:	9c070000 	stcls	0, cr0, [r7], {-0}
    828c:	0157f414 	cmpeq	r7, r4, lsl r4	; <UNPREDICTABLE>
    8290:	00019400 	andeq	r9, r1, r0, lsl #8
    8294:	cc9c0100 	ldfgts	f0, [ip], {0}
    8298:	38000025 	stmdacc	r0, {r0, r2, r5}
    829c:	00616b76 	rsbeq	r6, r1, r6, ror fp
    82a0:	22309c07 	eorscs	r9, r0, #1792	; 0x700
    82a4:	0200001d 	andeq	r0, r0, #29
    82a8:	2f317491 	svccs	0x00317491
    82ac:	07000037 	smladxeq	r0, r7, r0, r0
    82b0:	00813f9c 	umulleq	r3, r1, ip, pc	; <UNPREDICTABLE>
    82b4:	91020000 	mrsls	r0, (UNDEF: 2)
    82b8:	65723870 	ldrbvs	r3, [r2, #-2160]!	; 0xfffff790
    82bc:	9c070073 	stcls	0, cr0, [r7], {115}	; 0x73
    82c0:	00078453 	andeq	r8, r7, r3, asr r4
    82c4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    82c8:	001ab632 	andseq	fp, sl, r2, lsr r6
    82cc:	00251b00 	eoreq	r1, r5, r0, lsl #22
    82d0:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    82d4:	00000285 	andeq	r0, r0, r5, lsl #5
    82d8:	002af935 	eoreq	pc, sl, r5, lsr r9	; <UNPREDICTABLE>
    82dc:	13190600 	tstne	r9, #0, 12
    82e0:	0000004d 	andeq	r0, r0, sp, asr #32
    82e4:	000157bc 			; <UNDEFINED> instruction: 0x000157bc
    82e8:	00000038 	andeq	r0, r0, r8, lsr r0
    82ec:	25f69c01 	ldrbcs	r9, [r6, #3073]!	; 0xc01
    82f0:	63380000 	teqvs	r8, #0
    82f4:	06007061 	streq	r7, [r0], -r1, rrx
    82f8:	00813019 	addeq	r3, r1, r9, lsl r0
    82fc:	91020000 	mrsls	r0, (UNDEF: 2)
    8300:	24390074 	ldrtcs	r0, [r9], #-116	; 0xffffff8c
    8304:	05000038 	streq	r0, [r0, #-56]	; 0xffffffc8
    8308:	11010f4b 	tstne	r1, fp, asr #30
    830c:	cc000002 	stcgt	0, cr0, [r0], {2}
    8310:	f0000156 			; <UNDEFINED> instruction: 0xf0000156
    8314:	01000000 	mrseq	r0, (UNDEF: 0)
    8318:	0026b29c 	mlaeq	r6, ip, r2, fp
    831c:	1c422900 	mcrrne	9, 0, r2, r2, cr0	; <UNPREDICTABLE>
    8320:	4b050000 	blmi	148328 <morecore_area+0xff328>
    8324:	03401e0f 	movteq	r1, #3599	; 0xe0f
    8328:	91020000 	mrsls	r0, (UNDEF: 2)
    832c:	174f2954 	smlsldne	r2, pc, r4, r9	; <UNPREDICTABLE>
    8330:	4b050000 	blmi	148338 <morecore_area+0xff338>
    8334:	0075320f 	rsbseq	r3, r5, pc, lsl #4
    8338:	91020000 	mrsls	r0, (UNDEF: 2)
    833c:	48262950 	stmdami	r6!, {r4, r6, r8, fp, sp}
    8340:	4b050000 	blmi	148348 <morecore_area+0xff348>
    8344:	002c440f 	eoreq	r4, ip, pc, lsl #8
    8348:	91020000 	mrsls	r0, (UNDEF: 2)
    834c:	17b32f4f 	ldrne	r2, [r3, pc, asr #30]!
    8350:	4d050000 	stcmi	0, cr0, [r5, #-0]
    8354:	02110d0f 	andseq	r0, r1, #960	; 0x3c0
    8358:	91020000 	mrsls	r0, (UNDEF: 2)
    835c:	61742b74 	cmnvs	r4, r4, ror fp
    8360:	4e050067 	cdpmi	0, 0, cr0, cr5, cr7, {3}
    8364:	0296150f 	addseq	r1, r6, #62914560	; 0x3c00000
    8368:	91020000 	mrsls	r0, (UNDEF: 2)
    836c:	1be32f70 	blne	ff8d4134 <__bss_end__+0xff78b0ec>
    8370:	4f050000 	svcmi	0x00050000
    8374:	0296150f 	addseq	r1, r6, #62914560	; 0x3c00000
    8378:	91020000 	mrsls	r0, (UNDEF: 2)
    837c:	726d2b6c 	rsbvc	r2, sp, #108, 22	; 0x1b000
    8380:	50050030 	andpl	r0, r5, r0, lsr r0
    8384:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    8388:	91020000 	mrsls	r0, (UNDEF: 2)
    838c:	726d2b68 	rsbvc	r2, sp, #104, 22	; 0x1a000
    8390:	51050031 	tstpl	r5, r1, lsr r0
    8394:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    8398:	91020000 	mrsls	r0, (UNDEF: 2)
    839c:	726d2b64 	rsbvc	r2, sp, #100, 22	; 0x19000
    83a0:	52050032 	andpl	r0, r5, #50	; 0x32
    83a4:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    83a8:	91020000 	mrsls	r0, (UNDEF: 2)
    83ac:	726d2b60 	rsbvc	r2, sp, #96, 22	; 0x18000
    83b0:	53050033 	movwpl	r0, #20531	; 0x5033
    83b4:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    83b8:	91020000 	mrsls	r0, (UNDEF: 2)
    83bc:	4939005c 	ldmdbmi	r9!, {r2, r3, r4, r6}
    83c0:	05000038 	streq	r0, [r0, #-56]	; 0xffffffc8
    83c4:	11010299 			; <UNDEFINED> instruction: 0x11010299
    83c8:	e8000002 	stmda	r0, {r1}
    83cc:	e4000155 	str	r0, [r0], #-341	; 0xfffffeab
    83d0:	01000000 	mrseq	r0, (UNDEF: 0)
    83d4:	00274e9c 	mlaeq	r7, ip, lr, r4
    83d8:	1c422900 	mcrrne	9, 0, r2, r2, cr0	; <UNPREDICTABLE>
    83dc:	99050000 	stmdbls	r5, {}	; <UNPREDICTABLE>
    83e0:	008d2302 	addeq	r2, sp, r2, lsl #6
    83e4:	91020000 	mrsls	r0, (UNDEF: 2)
    83e8:	17b32f54 	sbfxne	r2, r4, #30, #20
    83ec:	9b050000 	blls	1483f4 <morecore_area+0xff3f4>
    83f0:	02110d02 	andseq	r0, r1, #2, 26	; 0x80
    83f4:	91020000 	mrsls	r0, (UNDEF: 2)
    83f8:	61742b74 	cmnvs	r4, r4, ror fp
    83fc:	9c050067 	stcls	0, cr0, [r5], {103}	; 0x67
    8400:	02961502 	addseq	r1, r6, #8388608	; 0x800000
    8404:	91020000 	mrsls	r0, (UNDEF: 2)
    8408:	1be32f70 	blne	ff8d41d0 <__bss_end__+0xff78b188>
    840c:	9d050000 	stcls	0, cr0, [r5, #-0]
    8410:	02961502 	addseq	r1, r6, #8388608	; 0x800000
    8414:	91020000 	mrsls	r0, (UNDEF: 2)
    8418:	726d2b6c 	rsbvc	r2, sp, #108, 22	; 0x1b000
    841c:	9e050030 	mcrls	0, 0, r0, cr5, cr0, {1}
    8420:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8424:	91020000 	mrsls	r0, (UNDEF: 2)
    8428:	726d2b68 	rsbvc	r2, sp, #104, 22	; 0x1a000
    842c:	9f050031 	svcls	0x00050031
    8430:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8434:	91020000 	mrsls	r0, (UNDEF: 2)
    8438:	726d2b64 	rsbvc	r2, sp, #100, 22	; 0x19000
    843c:	a0050032 	andge	r0, r5, r2, lsr r0
    8440:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8444:	91020000 	mrsls	r0, (UNDEF: 2)
    8448:	726d2b60 	rsbvc	r2, sp, #96, 22	; 0x18000
    844c:	a1050033 	tstge	r5, r3, lsr r0
    8450:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8454:	91020000 	mrsls	r0, (UNDEF: 2)
    8458:	1f39005c 	svcne	0x0039005c
    845c:	0500002f 	streq	r0, [r0, #-47]	; 0xffffffd1
    8460:	11010263 	tstne	r1, r3, ror #4
    8464:	ec000002 	stc	0, cr0, [r0], {2}
    8468:	fc000154 	stc2	1, cr0, [r0], {84}	; 0x54
    846c:	01000000 	mrseq	r0, (UNDEF: 0)
    8470:	00282a9c 	mlaeq	r8, ip, sl, r2
    8474:	1c422900 	mcrrne	9, 0, r2, r2, cr0	; <UNPREDICTABLE>
    8478:	63050000 	movwvs	r0, #20480	; 0x5000
    847c:	008d2102 	addeq	r2, sp, r2, lsl #2
    8480:	91020000 	mrsls	r0, (UNDEF: 2)
    8484:	328d2954 	addcc	r2, sp, #84, 18	; 0x150000
    8488:	63050000 	movwvs	r0, #20480	; 0x5000
    848c:	00813502 	addeq	r3, r1, r2, lsl #10
    8490:	91020000 	mrsls	r0, (UNDEF: 2)
    8494:	26b02950 	ssatcs	r2, #17, r0, asr #18
    8498:	63050000 	movwvs	r0, #20480	; 0x5000
    849c:	00754702 	rsbseq	r4, r5, r2, lsl #14
    84a0:	91020000 	mrsls	r0, (UNDEF: 2)
    84a4:	24e1294c 	strbtcs	r2, [r1], #2380	; 0x94c
    84a8:	63050000 	movwvs	r0, #20480	; 0x5000
    84ac:	026d5f02 	rsbeq	r5, sp, #2, 30
    84b0:	91020000 	mrsls	r0, (UNDEF: 2)
    84b4:	291f2948 	ldmdbcs	pc, {r3, r6, r8, fp, sp}	; <UNPREDICTABLE>
    84b8:	63050000 	movwvs	r0, #20480	; 0x5000
    84bc:	00c97d02 	sbceq	r7, r9, r2, lsl #26
    84c0:	91020000 	mrsls	r0, (UNDEF: 2)
    84c4:	17b32f00 	ldrne	r2, [r3, r0, lsl #30]!
    84c8:	65050000 	strvs	r0, [r5, #-0]
    84cc:	02110d02 	andseq	r0, r1, #2, 26	; 0x80
    84d0:	91020000 	mrsls	r0, (UNDEF: 2)
    84d4:	61742b74 	cmnvs	r4, r4, ror fp
    84d8:	66050067 	strvs	r0, [r5], -r7, rrx
    84dc:	02961502 	addseq	r1, r6, #8388608	; 0x800000
    84e0:	91020000 	mrsls	r0, (UNDEF: 2)
    84e4:	1be32f70 	blne	ff8d42ac <__bss_end__+0xff78b264>
    84e8:	67050000 	strvs	r0, [r5, -r0]
    84ec:	02961502 	addseq	r1, r6, #8388608	; 0x800000
    84f0:	91020000 	mrsls	r0, (UNDEF: 2)
    84f4:	726d2b6c 	rsbvc	r2, sp, #108, 22	; 0x1b000
    84f8:	68050030 	stmdavs	r5, {r4, r5}
    84fc:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8500:	91020000 	mrsls	r0, (UNDEF: 2)
    8504:	726d2b68 	rsbvc	r2, sp, #104, 22	; 0x1a000
    8508:	69050031 	stmdbvs	r5, {r0, r4, r5}
    850c:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8510:	91020000 	mrsls	r0, (UNDEF: 2)
    8514:	726d2b64 	rsbvc	r2, sp, #100, 22	; 0x19000
    8518:	6a050032 	bvs	1485e8 <morecore_area+0xff5e8>
    851c:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8520:	91020000 	mrsls	r0, (UNDEF: 2)
    8524:	726d2b60 	rsbvc	r2, sp, #96, 22	; 0x18000
    8528:	6b050033 	blvs	1485fc <morecore_area+0xff5fc>
    852c:	00750c02 	rsbseq	r0, r5, r2, lsl #24
    8530:	91020000 	mrsls	r0, (UNDEF: 2)
    8534:	4039005c 	eorsmi	r0, r9, ip, asr r0
    8538:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    853c:	5421026c 	strtpl	r0, [r1], #-620	; 0xfffffd94
    8540:	60000000 	andvs	r0, r0, r0
    8544:	8c000154 	stfhis	f0, [r0], {84}	; 0x54
    8548:	01000000 	mrseq	r0, (UNDEF: 0)
    854c:	0028a69c 	mlaeq	r8, ip, r6, sl
    8550:	61632d00 	cmnvs	r3, r0, lsl #26
    8554:	6c040070 	stcvs	0, cr0, [r4], {112}	; 0x70
    8558:	00814102 	addeq	r4, r1, r2, lsl #2
    855c:	91020000 	mrsls	r0, (UNDEF: 2)
    8560:	0e082f5c 	mcreq	15, 0, r2, cr8, cr12, {2}
    8564:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
    8568:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    856c:	91020000 	mrsls	r0, (UNDEF: 2)
    8570:	0e102f74 	mrceq	15, 0, r2, cr0, cr4, {3}
    8574:	6f040000 	svcvs	0x00040000
    8578:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    857c:	91020000 	mrsls	r0, (UNDEF: 2)
    8580:	10722f70 	rsbsne	r2, r2, r0, ror pc
    8584:	70040000 	andvc	r0, r4, r0
    8588:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    858c:	91020000 	mrsls	r0, (UNDEF: 2)
    8590:	0e182f6c 	cdpeq	15, 1, cr2, cr8, cr12, {3}
    8594:	71040000 	mrsvc	r0, (UNDEF: 4)
    8598:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    859c:	91020000 	mrsls	r0, (UNDEF: 2)
    85a0:	0e202f68 	cdpeq	15, 2, cr2, cr0, cr8, {3}
    85a4:	72040000 	andvc	r0, r4, #0
    85a8:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    85ac:	91020000 	mrsls	r0, (UNDEF: 2)
    85b0:	c2350064 	eorsgt	r0, r5, #100	; 0x64
    85b4:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    85b8:	029628bb 	addseq	r2, r6, #12255232	; 0xbb0000
    85bc:	52bc0000 	adcspl	r0, ip, #0
    85c0:	01a40001 			; <UNDEFINED> instruction: 0x01a40001
    85c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    85c8:	00002966 	andeq	r2, r0, r6, ror #18
    85cc:	000c2031 	andeq	r2, ip, r1, lsr r0
    85d0:	43bb0400 			; <UNDEFINED> instruction: 0x43bb0400
    85d4:	00000081 	andeq	r0, r0, r1, lsl #1
    85d8:	315c9102 	cmpcc	ip, r2, lsl #2
    85dc:	00001c4b 	andeq	r1, r0, fp, asr #24
    85e0:	965cbb04 	ldrbls	fp, [ip], -r4, lsl #22
    85e4:	02000002 	andeq	r0, r0, #2
    85e8:	6d385891 	ldcvs	8, cr5, [r8, #-580]!	; 0xfffffdbc
    85ec:	04003072 	streq	r3, [r0], #-114	; 0xffffff8e
    85f0:	07f044bc 			; <UNDEFINED> instruction: 0x07f044bc
    85f4:	91020000 	mrsls	r0, (UNDEF: 2)
    85f8:	726d3854 	rsbvc	r3, sp, #84, 16	; 0x540000
    85fc:	bc040031 	stclt	0, cr0, [r4], {49}	; 0x31
    8600:	0007f054 	andeq	pc, r7, r4, asr r0	; <UNPREDICTABLE>
    8604:	50910200 	addspl	r0, r1, r0, lsl #4
    8608:	32726d38 	rsbscc	r6, r2, #56, 26	; 0xe00
    860c:	64bc0400 	ldrtvs	r0, [ip], #1024	; 0x400
    8610:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8614:	38009102 	stmdacc	r0, {r1, r8, ip, pc}
    8618:	0033726d 	eorseq	r7, r3, sp, ror #4
    861c:	f074bc04 			; <UNDEFINED> instruction: 0xf074bc04
    8620:	02000007 	andeq	r0, r0, #7
    8624:	a90b0491 	stmdbge	fp, {r0, r4, r7, sl}
    8628:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    862c:	029618be 	addseq	r1, r6, #12451840	; 0xbe0000
    8630:	91020000 	mrsls	r0, (UNDEF: 2)
    8634:	113b0b74 	teqne	fp, r4, ror fp
    8638:	bf040000 	svclt	0x00040000
    863c:	0000750f 	andeq	r7, r0, pc, lsl #10
    8640:	70910200 	addsvc	r0, r1, r0, lsl #4
    8644:	0011400b 	andseq	r4, r1, fp
    8648:	0fc00400 	svceq	0x00c00400
    864c:	00000075 	andeq	r0, r0, r5, ror r0
    8650:	0b6c9102 	bleq	1b2ca60 <__bss_end__+0x19e3a18>
    8654:	00001145 	andeq	r1, r0, r5, asr #2
    8658:	750fc104 	strvc	ip, [pc, #-260]	; 855c <errno+0x8558>
    865c:	02000000 	andeq	r0, r0, #0
    8660:	140b6891 	strne	r6, [fp], #-2193	; 0xfffff76f
    8664:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    8668:	00750fc2 	rsbseq	r0, r5, r2, asr #31
    866c:	91020000 	mrsls	r0, (UNDEF: 2)
    8670:	993b0064 	ldmdbls	fp!, {r2, r5, r6}
    8674:	0300000d 	movweq	r0, #13
    8678:	52101492 	andspl	r1, r0, #-1845493760	; 0x92000000
    867c:	00ac0001 	adceq	r0, ip, r1
    8680:	9c010000 	stcls	0, cr0, [r1], {-0}
    8684:	00002a75 	andeq	r2, r0, r5, ror sl
    8688:	73797338 	cmnvc	r9, #56, 6	; 0xe0000000
    868c:	30920300 	addscc	r0, r2, r0, lsl #6
    8690:	00000075 	andeq	r0, r0, r5, ror r0
    8694:	316c9102 	cmncc	ip, r2, lsl #2
    8698:	00000c20 	andeq	r0, r0, r0, lsr #24
    869c:	753f9203 	ldrvc	r9, [pc, #-515]!	; 84a1 <errno+0x849d>
    86a0:	02000000 	andeq	r0, r0, #0
    86a4:	ae316891 	mrcge	8, 1, r6, cr1, cr1, {4}
    86a8:	03000011 	movweq	r0, #17
    86ac:	07f05092 			; <UNDEFINED> instruction: 0x07f05092
    86b0:	91020000 	mrsls	r0, (UNDEF: 2)
    86b4:	10f23164 	rscsne	r3, r2, r4, ror #2
    86b8:	92030000 	andls	r0, r3, #0
    86bc:	00007565 	andeq	r7, r0, r5, ror #10
    86c0:	60910200 	addsvs	r0, r1, r0, lsl #4
    86c4:	000ad331 	andeq	sp, sl, r1, lsr r3
    86c8:	31930300 	orrscc	r0, r3, r0, lsl #6
    86cc:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    86d0:	31009102 	tstcc	r0, r2, lsl #2
    86d4:	000009dd 	ldrdeq	r0, [r0], -sp
    86d8:	f0469303 			; <UNDEFINED> instruction: 0xf0469303
    86dc:	02000007 	andeq	r0, r0, #7
    86e0:	e8310491 	ldmda	r1!, {r0, r4, r7, sl}
    86e4:	03000009 	movweq	r0, #9
    86e8:	07f05d93 			; <UNDEFINED> instruction: 0x07f05d93
    86ec:	91020000 	mrsls	r0, (UNDEF: 2)
    86f0:	09f33108 	ldmibeq	r3!, {r3, r8, ip, sp}^
    86f4:	93030000 	movwls	r0, #12288	; 0x3000
    86f8:	0007f074 	andeq	pc, r7, r4, ror r0	; <UNPREDICTABLE>
    86fc:	0c910200 	lfmeq	f0, 4, [r1], {0}
    8700:	0009fe31 	andeq	pc, r9, r1, lsr lr	; <UNPREDICTABLE>
    8704:	8b930300 	blhi	fe4c930c <__bss_end__+0xfe3802c4>
    8708:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    870c:	31109102 	tstcc	r0, r2, lsl #2
    8710:	0000093a 	andeq	r0, r0, sl, lsr r9
    8714:	753f9403 	ldrvc	r9, [pc, #-1027]!	; 8319 <errno+0x8315>
    8718:	02000000 	andeq	r0, r0, #0
    871c:	ce0b1491 	mcrgt	4, 0, r1, cr11, cr1, {4}
    8720:	0300000c 	movweq	r0, #12
    8724:	00751896 			; <UNDEFINED> instruction: 0x00751896
    8728:	50010000 	andpl	r0, r1, r0
    872c:	0028a90b 	eoreq	sl, r8, fp, lsl #18
    8730:	18970300 	ldmne	r7, {r8, r9}
    8734:	00000075 	andeq	r0, r0, r5, ror r0
    8738:	3b0b5101 	blcc	2dcb44 <__bss_end__+0x193afc>
    873c:	03000011 	movweq	r0, #17
    8740:	0075189a 			; <UNDEFINED> instruction: 0x0075189a
    8744:	52010000 	andpl	r0, r1, #0
    8748:	0011400b 	andseq	r4, r1, fp
    874c:	189b0300 	ldmne	fp, {r8, r9}
    8750:	00000075 	andeq	r0, r0, r5, ror r0
    8754:	450b5301 	strmi	r5, [fp, #-769]	; 0xfffffcff
    8758:	03000011 	movweq	r0, #17
    875c:	0075189c 			; <UNDEFINED> instruction: 0x0075189c
    8760:	54010000 	strpl	r0, [r1], #-0
    8764:	0011140b 	andseq	r1, r1, fp, lsl #8
    8768:	189d0300 	ldmne	sp, {r8, r9}
    876c:	00000075 	andeq	r0, r0, r5, ror r0
    8770:	090b5501 	stmdbeq	fp, {r0, r8, sl, ip, lr}
    8774:	0300000d 	movweq	r0, #13
    8778:	007518a1 	rsbseq	r1, r5, r1, lsr #17
    877c:	57010000 	strpl	r0, [r1, -r0]
    8780:	35b23a00 	ldrcc	r3, [r2, #2560]!	; 0xa00
    8784:	4c020000 	stcmi	0, cr0, [r2], {-0}
    8788:	0151d81a 	cmpeq	r1, sl, lsl r8
    878c:	00003800 	andeq	r3, r0, r0, lsl #16
    8790:	a89c0100 	ldmge	ip, {r8}
    8794:	3800002a 	stmdacc	r0, {r1, r3, r5}
    8798:	4c020069 	stcmi	0, cr0, [r2], {105}	; 0x69
    879c:	00004d2a 	andeq	r4, r0, sl, lsr #26
    87a0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    87a4:	00258e31 	eoreq	r8, r5, r1, lsr lr
    87a8:	374c0200 	strbcc	r0, [ip, -r0, lsl #4]
    87ac:	00000081 	andeq	r0, r0, r1, lsl #1
    87b0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    87b4:	001b603a 	andseq	r6, fp, sl, lsr r0
    87b8:	1a330200 	bne	cc8fc0 <__bss_end__+0xb7ff78>
    87bc:	0001519c 	muleq	r1, ip, r1
    87c0:	0000003c 	andeq	r0, r0, ip, lsr r0
    87c4:	2ada9c01 	bcs	ff6af7d0 <__bss_end__+0xff566788>
    87c8:	69380000 	ldmdbvs	r8!, {}	; <UNPREDICTABLE>
    87cc:	29330200 	ldmdbcs	r3!, {r9}
    87d0:	0000004d 	andeq	r0, r0, sp, asr #32
    87d4:	38749102 	ldmdacc	r4!, {r1, r8, ip, pc}^
    87d8:	0200726d 	andeq	r7, r0, #-805306362	; 0xd0000006
    87dc:	00753633 	rsbseq	r3, r5, r3, lsr r6
    87e0:	91020000 	mrsls	r0, (UNDEF: 2)
    87e4:	c33c0070 	teqgt	ip, #112	; 0x70
    87e8:	0200000d 	andeq	r0, r0, #13
    87ec:	03582529 	cmpeq	r8, #171966464	; 0xa400000
    87f0:	51780000 	cmnpl	r8, r0
    87f4:	00240001 	eoreq	r0, r4, r1
    87f8:	9c010000 	stcls	0, cr0, [r1], {-0}
    87fc:	001d153d 	andseq	r1, sp, sp, lsr r5
    8800:	01d50100 	bicseq	r0, r5, r0, lsl #2
    8804:	00005401 	andeq	r5, r0, r1, lsl #8
    8808:	01514800 	cmpeq	r1, r0, lsl #16
    880c:	00003000 	andeq	r3, r0, r0
    8810:	2c9c0100 	ldfcss	f0, [ip], {0}
    8814:	2900002b 	stmdbcs	r0, {r0, r1, r3, r5}
    8818:	000002a7 	andeq	r0, r0, r7, lsr #5
    881c:	3001d501 	andcc	sp, r1, r1, lsl #10
    8820:	00000296 	muleq	r0, r6, r2
    8824:	2b6c9102 	blcs	1b2cc34 <__bss_end__+0x19e3bec>
    8828:	00746572 	rsbseq	r6, r4, r2, ror r5
    882c:	1101d601 	tstne	r1, r1, lsl #12
    8830:	00000054 	andeq	r0, r0, r4, asr r0
    8834:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8838:	001dbf3d 	andseq	fp, sp, sp, lsr pc
    883c:	01600100 	cmneq	r0, r0, lsl #2
    8840:	00005401 	andeq	r5, r0, r1, lsl #8
    8844:	01511800 	cmpeq	r1, r0, lsl #16
    8848:	00003000 	andeq	r3, r0, r0
    884c:	689c0100 	ldmvs	ip, {r8}
    8850:	2900002b 	stmdbcs	r0, {r0, r1, r3, r5}
    8854:	000002a7 	andeq	r0, r0, r7, lsr #5
    8858:	2f016001 	svccs	0x00016001
    885c:	00000296 	muleq	r0, r6, r2
    8860:	2b6c9102 	blcs	1b2cc70 <__bss_end__+0x19e3c28>
    8864:	00746572 	rsbseq	r6, r4, r2, ror r5
    8868:	11016101 	tstne	r1, r1, lsl #2
    886c:	00000054 	andeq	r0, r0, r4, asr r0
    8870:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8874:	001c1039 	andseq	r1, ip, r9, lsr r0
    8878:	013e0100 	teqeq	lr, r0, lsl #2
    887c:	00029601 	andeq	r9, r2, r1, lsl #12
    8880:	014ff000 	mrseq	pc, SPSR	; <UNPREDICTABLE>
    8884:	00012800 	andeq	r2, r1, r0, lsl #16
    8888:	e39c0100 	orrs	r0, ip, #0, 2
    888c:	2900002b 	stmdbcs	r0, {r0, r1, r3, r5}
    8890:	00001018 	andeq	r1, r0, r8, lsl r0
    8894:	22013e01 	andcs	r3, r1, #1, 28
    8898:	00000054 	andeq	r0, r0, r4, asr r0
    889c:	296c9102 	stmdbcs	ip!, {r1, r8, ip, pc}^
    88a0:	00001d8e 	andeq	r1, r0, lr, lsl #27
    88a4:	35013e01 	strcc	r3, [r1, #-3585]	; 0xfffff1ff
    88a8:	00000054 	andeq	r0, r0, r4, asr r0
    88ac:	29689102 	stmdbcs	r8!, {r1, r8, ip, pc}^
    88b0:	00001b10 	andeq	r1, r0, r0, lsl fp
    88b4:	50013e01 	andpl	r3, r1, r1, lsl #28
    88b8:	00000054 	andeq	r0, r0, r4, asr r0
    88bc:	29649102 	stmdbcs	r4!, {r1, r8, ip, pc}^
    88c0:	0000452f 	andeq	r4, r0, pc, lsr #10
    88c4:	67013e01 	strvs	r3, [r1, -r1, lsl #28]
    88c8:	00000054 	andeq	r0, r0, r4, asr r0
    88cc:	2f609102 	svccs	0x00609102
    88d0:	000002a7 	andeq	r0, r0, r7, lsr #5
    88d4:	18013f01 	stmdane	r1, {r0, r8, r9, sl, fp, ip, sp}
    88d8:	00000296 	muleq	r0, r6, r2
    88dc:	32749102 	rsbscc	r9, r4, #-2147483648	; 0x80000000
    88e0:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    88e4:	0000251b 	andeq	r2, r0, fp, lsl r5
    88e8:	85040305 	strhi	r0, [r4, #-773]	; 0xfffffcfb
    88ec:	35000002 	strcc	r0, [r0, #-2]
    88f0:	00002f7a 	andeq	r2, r0, sl, ror pc
    88f4:	6d017b01 	vstrvs	d7, [r1, #-4]
    88f8:	c8000002 	stmdagt	r0, {r1}
    88fc:	2800014e 	stmdacs	r0, {r1, r2, r3, r6, r8}
    8900:	01000001 	tsteq	r0, r1
    8904:	002c589c 	mlaeq	ip, ip, r8, r5
    8908:	36cc3100 	strbcc	r3, [ip], r0, lsl #2
    890c:	7b010000 	blvc	48914 <buf+0x3bc>
    8910:	00005420 	andeq	r5, r0, r0, lsr #8
    8914:	6c910200 	lfmvs	f0, 4, [r1], {0}
    8918:	00369631 	eorseq	r9, r6, r1, lsr r6
    891c:	407b0100 	rsbsmi	r0, fp, r0, lsl #2
    8920:	00000054 	andeq	r0, r0, r4, asr r0
    8924:	31689102 	cmncc	r8, r2, lsl #2
    8928:	000029fa 	strdeq	r2, [r0], -sl
    892c:	545b7b01 	ldrbpl	r7, [fp], #-2817	; 0xfffff4ff
    8930:	02000000 	andeq	r0, r0, #0
    8934:	49316491 	ldmdbmi	r1!, {r0, r4, r7, sl, sp, lr}
    8938:	01000027 	tsteq	r0, r7, lsr #32
    893c:	0054757b 	subseq	r7, r4, fp, ror r5
    8940:	91020000 	mrsls	r0, (UNDEF: 2)
    8944:	28940b60 	ldmcs	r4, {r5, r6, r8, r9, fp}
    8948:	7c010000 	stcvc	0, cr0, [r1], {-0}
    894c:	00026d16 	andeq	r6, r2, r6, lsl sp
    8950:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    8954:	001ab632 	andseq	fp, sl, r2, lsr r6
    8958:	002c6800 	eoreq	r6, ip, r0, lsl #16
    895c:	f0030500 			; <UNDEFINED> instruction: 0xf0030500
    8960:	00000284 	andeq	r0, r0, r4, lsl #5
    8964:	0005ac0c 	andeq	sl, r5, ip, lsl #24
    8968:	002c6800 	eoreq	r6, ip, r0, lsl #16
    896c:	00600d00 	rsbeq	r0, r0, r0, lsl #26
    8970:	00120000 	andseq	r0, r2, r0
    8974:	002c580a 	eoreq	r5, ip, sl, lsl #16
    8978:	20cd0000 	sbccs	r0, sp, r0
    897c:	00040000 	andeq	r0, r4, r0
    8980:	00002350 	andeq	r2, r0, r0, asr r3
    8984:	01170104 	tsteq	r7, r4, lsl #2
    8988:	9b0c0000 	blls	308990 <__bss_end__+0x1bf948>
    898c:	5f00003a 	svcpl	0x0000003a
    8990:	64000000 	strvs	r0, [r0], #-0
    8994:	98000165 	stmdals	r0, {r0, r2, r5, r6, r8}
    8998:	c300001c 	movwgt	r0, #28
    899c:	0200004f 	andeq	r0, r0, #79	; 0x4f
    89a0:	032e0601 			; <UNDEFINED> instruction: 0x032e0601
    89a4:	4d030000 	stcmi	0, cr0, [r3, #-0]
    89a8:	10000006 	andne	r0, r0, r6
    89ac:	00382526 	eorseq	r2, r8, r6, lsr #10
    89b0:	01020000 	mrseq	r0, (UNDEF: 2)
    89b4:	00032c08 	andeq	r2, r3, r8, lsl #24
    89b8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    89bc:	00000466 	andeq	r0, r0, r6, ror #8
    89c0:	52070202 	andpl	r0, r7, #536870912	; 0x20000000
    89c4:	04000003 	streq	r0, [r0], #-3
    89c8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    89cc:	0d030074 	stceq	0, cr0, [r3, #-464]	; 0xfffffe30
    89d0:	10000003 	andne	r0, r0, r3
    89d4:	0060253d 	rsbeq	r2, r0, sp, lsr r5
    89d8:	04020000 	streq	r0, [r2], #-0
    89dc:	0003c507 	andeq	ip, r3, r7, lsl #10
    89e0:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    89e4:	00000109 	andeq	r0, r0, r9, lsl #2
    89e8:	bb070802 	bllt	1ca9f8 <__bss_end__+0x819b0>
    89ec:	03000003 	movweq	r0, #3
    89f0:	00000372 	andeq	r0, r0, r2, ror r3
    89f4:	54157110 	ldrpl	r7, [r5], #-272	; 0xfffffef0
    89f8:	03000000 	movweq	r0, #0
    89fc:	000003d2 	ldrdeq	r0, [r0], -r2
    8a00:	75138010 	ldrvc	r8, [r3, #-16]
    8a04:	05000000 	streq	r0, [r0, #-0]
    8a08:	004d0405 	subeq	r0, sp, r5, lsl #8
    8a0c:	11140000 	tstne	r4, r0
    8a10:	0000f90e 	andeq	pc, r0, lr, lsl #18
    8a14:	0be00600 	bleq	ff80a21c <__bss_end__+0xff6c11d4>
    8a18:	067f0000 	ldrbteq	r0, [pc], -r0
    8a1c:	00000a83 	andeq	r0, r0, r3, lsl #21
    8a20:	0b26067e 	bleq	98a420 <__bss_end__+0x8413d8>
    8a24:	067d0000 	ldrbteq	r0, [sp], -r0
    8a28:	000010e3 	andeq	r1, r0, r3, ror #1
    8a2c:	11a1067c 			; <UNDEFINED> instruction: 0x11a1067c
    8a30:	067b0000 	ldrbteq	r0, [fp], -r0
    8a34:	00000f59 	andeq	r0, r0, r9, asr pc
    8a38:	0a6b067a 	beq	1aca428 <__bss_end__+0x19813e0>
    8a3c:	06790000 	ldrbteq	r0, [r9], -r0
    8a40:	00000e54 	andeq	r0, r0, r4, asr lr
    8a44:	0fce0678 	svceq	0x00ce0678
    8a48:	06770000 	ldrbteq	r0, [r7], -r0
    8a4c:	000011d5 	ldrdeq	r1, [r0], -r5
    8a50:	0cdb0676 	ldcleq	6, cr0, [fp], {118}	; 0x76
    8a54:	06750000 	ldrbteq	r0, [r5], -r0
    8a58:	00000fa0 	andeq	r0, r0, r0, lsr #31
    8a5c:	09b40674 	ldmibeq	r4!, {r2, r4, r5, r6, r9, sl}
    8a60:	06730000 	ldrbteq	r0, [r3], -r0
    8a64:	00000a53 	andeq	r0, r0, r3, asr sl
    8a68:	0e630772 	mcreq	7, 3, r0, cr3, cr2, {3}
    8a6c:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
    8a70:	08007fff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
    8a74:	00000392 	muleq	r0, r2, r3
    8a78:	00600407 	rsbeq	r0, r0, r7, lsl #8
    8a7c:	08110000 	ldmdaeq	r1, {}	; <UNPREDICTABLE>
    8a80:	0001300e 	andeq	r3, r1, lr
    8a84:	03190900 	tsteq	r9, #0, 18
    8a88:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    8a8c:	00000480 	andeq	r0, r0, r0, lsl #9
    8a90:	03f80901 	mvnseq	r0, #16384	; 0x4000
    8a94:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    8a98:	0000048f 	andeq	r0, r0, pc, lsl #9
    8a9c:	04cd0903 	strbeq	r0, [sp], #2307	; 0x903
    8aa0:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    8aa4:	000002bd 			; <UNDEFINED> instruction: 0x000002bd
    8aa8:	dc030005 	stcle	0, cr0, [r3], {5}
    8aac:	11000003 	tstne	r0, r3
    8ab0:	00f90313 	rscseq	r0, r9, r3, lsl r3
    8ab4:	300a0000 	andcc	r0, sl, r0
    8ab8:	0b000001 	bleq	8ac4 <errno+0x8ac0>
    8abc:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    8ac0:	3c591511 	cfldr64cc	mvdx1, [r9], {17}
    8ac4:	05000001 	streq	r0, [r0, #-1]
    8ac8:	0285ac03 	addeq	sl, r5, #768	; 0x300
    8acc:	0ee80800 	cdpeq	8, 14, cr0, cr8, cr0, {0}
    8ad0:	04070000 	streq	r0, [r7], #-0
    8ad4:	00000060 	andeq	r0, r0, r0, rrx
    8ad8:	720e0912 	andvc	r0, lr, #294912	; 0x48000
    8adc:	09000001 	stmdbeq	r0, {r0}
    8ae0:	00000a36 	andeq	r0, r0, r6, lsr sl
    8ae4:	0bbb0905 	bleq	feecaf00 <__bss_end__+0xfed81eb8>
    8ae8:	00060000 	andeq	r0, r6, r0
    8aec:	00344808 	eorseq	r4, r4, r8, lsl #16
    8af0:	60040700 	andvs	r0, r4, r0, lsl #14
    8af4:	13000000 	movwne	r0, #0
    8af8:	01a90e0b 			; <UNDEFINED> instruction: 0x01a90e0b
    8afc:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
    8b00:	06000039 			; <UNDEFINED> instruction: 0x06000039
    8b04:	0038ca09 	eorseq	ip, r8, r9, lsl #20
    8b08:	3e090700 	cdpcc	7, 0, cr0, cr9, cr0, {0}
    8b0c:	0800003a 	stmdaeq	r0, {r1, r3, r4, r5}
    8b10:	00389909 	eorseq	r9, r8, r9, lsl #18
    8b14:	ed090900 	vstr.16	s0, [r9, #-0]
    8b18:	0a000039 	beq	8c04 <errno+0x8c00>
    8b1c:	003a0609 	eorseq	r0, sl, r9, lsl #12
    8b20:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
    8b24:	00600407 	rsbeq	r0, r0, r7, lsl #8
    8b28:	09150000 	ldmdbeq	r5, {}	; <UNPREDICTABLE>
    8b2c:	0002000e 	andeq	r0, r2, lr
    8b30:	1ce20900 			; <UNDEFINED> instruction: 0x1ce20900
    8b34:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    8b38:	00001dec 	andeq	r1, r0, ip, ror #27
    8b3c:	1da80901 			; <UNDEFINED> instruction: 0x1da80901
    8b40:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    8b44:	00001c53 	andeq	r1, r0, r3, asr ip
    8b48:	1b000903 	blne	af5c <errno+0xaf58>
    8b4c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    8b50:	00001bcf 	andeq	r1, r0, pc, asr #23
    8b54:	1cef0905 			; <UNDEFINED> instruction: 0x1cef0905
    8b58:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    8b5c:	00001d78 	andeq	r1, r0, r8, ror sp
    8b60:	1e820907 	vdivne.f16	s0, s4, s14	; <UNPREDICTABLE>
    8b64:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    8b68:	00001adb 	ldrdeq	r1, [r0], -fp
    8b6c:	1b230909 	blne	8caf98 <__bss_end__+0x781f50>
    8b70:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    8b74:	00001cd3 	ldrdeq	r1, [r0], -r3
    8b78:	9303000b 	movwls	r0, #12299	; 0x300b
    8b7c:	1500001e 	strne	r0, [r0, #-30]	; 0xffffffe2
    8b80:	01a9031b 			; <UNDEFINED> instruction: 0x01a9031b
    8b84:	29080000 	stmdbcs	r8, {}	; <UNPREDICTABLE>
    8b88:	0700000d 	streq	r0, [r0, -sp]
    8b8c:	00006004 	andeq	r6, r0, r4
    8b90:	06341600 	ldrteq	r1, [r4], -r0, lsl #12
    8b94:	00000231 	andeq	r0, r0, r1, lsr r2
    8b98:	0009ca09 	andeq	ip, r9, r9, lsl #20
    8b9c:	f5090700 			; <UNDEFINED> instruction: 0xf5090700
    8ba0:	0200000e 	andeq	r0, r0, #14
    8ba4:	000df609 	andeq	pc, sp, r9, lsl #12
    8ba8:	0c007800 	stceq	8, cr7, [r0], {-0}
    8bac:	00000054 	andeq	r0, r0, r4, asr r0
    8bb0:	00000241 	andeq	r0, r0, r1, asr #4
    8bb4:	0000600d 	andeq	r6, r0, sp
    8bb8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8bbc:	00002894 	muleq	r0, r4, r8
    8bc0:	08750104 	ldmdaeq	r5!, {r2, r8}^
    8bc4:	0000025c 	andeq	r0, r0, ip, asr r2
    8bc8:	0003b00f 	andeq	fp, r3, pc
    8bcc:	11760100 	cmnne	r6, r0, lsl #2
    8bd0:	00000231 	andeq	r0, r0, r1, lsr r2
    8bd4:	b7030000 	strlt	r0, [r3, -r0]
    8bd8:	0100002c 	tsteq	r0, ip, lsr #32
    8bdc:	02411f78 	subeq	r1, r1, #120, 30	; 0x1e0
    8be0:	a7100000 	ldrge	r0, [r0, -r0]
    8be4:	04000002 	streq	r0, [r0], #-2
    8be8:	08013801 	stmdaeq	r1, {r0, fp, ip, sp}
    8bec:	00000285 	andeq	r0, r0, r5, lsl #5
    8bf0:	0003b011 	andeq	fp, r3, r1, lsl r0
    8bf4:	01390100 	teqeq	r9, r0, lsl #2
    8bf8:	00023111 	andeq	r3, r2, r1, lsl r1
    8bfc:	12000000 	andne	r0, r0, #0
    8c00:	0000039d 	muleq	r0, sp, r3
    8c04:	21013b01 	tstcs	r1, r1, lsl #22
    8c08:	00000268 	andeq	r0, r0, r8, ror #4
    8c0c:	00047013 	andeq	r7, r4, r3, lsl r0
    8c10:	17020000 	strne	r0, [r2, -r0]
    8c14:	0301100b 	movweq	r1, #4107	; 0x100b
    8c18:	74140000 	ldrvc	r0, [r4], #-0
    8c1c:	17006761 	strne	r6, [r0, -r1, ror #14]
    8c20:	0285180c 	addeq	r1, r5, #12, 16	; 0xc0000
    8c24:	14000000 	strne	r0, [r0], #-0
    8c28:	0067736d 	rsbeq	r7, r7, sp, ror #6
    8c2c:	010f0d17 	tsteq	pc, r7, lsl sp	; <UNPREDICTABLE>
    8c30:	04000003 	streq	r0, [r0], #-3
    8c34:	00033a15 	andeq	r3, r3, r5, lsl sl
    8c38:	0f0e1700 	svceq	0x000e1700
    8c3c:	00000075 	andeq	r0, r0, r5, ror r0
    8c40:	7c1501e4 	ldfvcs	f0, [r5], {228}	; 0xe4
    8c44:	17000003 	strne	r0, [r0, -r3]
    8c48:	03110f0f 	tsteq	r1, #15, 30	; 0x3c
    8c4c:	01e80000 	mvneq	r0, r0
    8c50:	00036515 	andeq	r6, r3, r5, lsl r5
    8c54:	0f101700 	svceq	0x00101700
    8c58:	00000081 	andeq	r0, r0, r1, lsl #1
    8c5c:	001501f4 			; <UNDEFINED> instruction: 0x001501f4
    8c60:	17000003 	strne	r0, [r0, -r3]
    8c64:	00810f11 	addeq	r0, r1, r1, lsl pc
    8c68:	01f80000 	mvnseq	r0, r0
    8c6c:	00040c15 	andeq	r0, r4, r5, lsl ip
    8c70:	0f121700 	svceq	0x00121700
    8c74:	00000075 	andeq	r0, r0, r5, ror r0
    8c78:	0c0001fc 	stfeqs	f0, [r0], {252}	; 0xfc
    8c7c:	00000075 	andeq	r0, r0, r5, ror r0
    8c80:	00000311 	andeq	r0, r0, r1, lsl r3
    8c84:	0000600d 	andeq	r6, r0, sp
    8c88:	0c007700 	stceq	7, cr7, [r0], {-0}
    8c8c:	00000075 	andeq	r0, r0, r5, ror r0
    8c90:	00000321 	andeq	r0, r0, r1, lsr #6
    8c94:	0000600d 	andeq	r6, r0, sp
    8c98:	16000200 	strne	r0, [r0], -r0, lsl #4
    8c9c:	00000343 	andeq	r0, r0, r3, asr #6
    8ca0:	92031317 	andls	r1, r3, #1543503872	; 0x5c000000
    8ca4:	00000002 	andeq	r0, r0, r2
    8ca8:	248f0302 	strcs	r0, [pc], #770	; 8cb0 <errno+0x8cac>
    8cac:	23180000 	tstcs	r8, #0
    8cb0:	00008113 	andeq	r8, r0, r3, lsl r1
    8cb4:	02e81700 	rsceq	r1, r8, #0, 14
    8cb8:	0d020000 	stceq	0, cr0, [r2, #-0]
    8cbc:	00034721 	andeq	r4, r3, r1, lsr #14
    8cc0:	21041800 	tstcs	r4, r0, lsl #16
    8cc4:	08000003 	stmdaeq	r0, {r0, r1}
    8cc8:	0000100d 	andeq	r1, r0, sp
    8ccc:	00600407 	rsbeq	r0, r0, r7, lsl #8
    8cd0:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
    8cd4:	00041a06 	andeq	r1, r4, r6, lsl #20
    8cd8:	0ac10900 	beq	ff04b0e0 <__bss_end__+0xfef02098>
    8cdc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    8ce0:	0000122e 	andeq	r1, r0, lr, lsr #4
    8ce4:	0b7f0901 	bleq	1fcb0f0 <__bss_end__+0x1e820a8>
    8ce8:	09020000 	stmdbeq	r2, {}	; <UNPREDICTABLE>
    8cec:	00000f8e 	andeq	r0, r0, lr, lsl #31
    8cf0:	109a0903 	addsne	r0, sl, r3, lsl #18
    8cf4:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    8cf8:	00000b19 	andeq	r0, r0, r9, lsl fp
    8cfc:	0fb90905 	svceq	0x00b90905
    8d00:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    8d04:	00000b33 	andeq	r0, r0, r3, lsr fp
    8d08:	0a950907 	beq	fe54b12c <__bss_end__+0xfe4020e4>
    8d0c:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    8d10:	00000a09 	andeq	r0, r0, r9, lsl #20
    8d14:	0f2d0909 	svceq	0x002d0909
    8d18:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    8d1c:	00000ced 	andeq	r0, r0, sp, ror #25
    8d20:	1068090b 	rsbne	r0, r8, fp, lsl #18
    8d24:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    8d28:	00000fe3 	andeq	r0, r0, r3, ror #31
    8d2c:	10ab090d 	adcne	r0, fp, sp, lsl #18
    8d30:	090e0000 	stmdbeq	lr, {}	; <UNPREDICTABLE>
    8d34:	000011f0 	strdeq	r1, [r0], -r0
    8d38:	0cc2090f 			; <UNDEFINED> instruction: 0x0cc2090f
    8d3c:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
    8d40:	00000bd4 	ldrdeq	r0, [r0], -r4
    8d44:	0ed10911 			; <UNDEFINED> instruction: 0x0ed10911
    8d48:	09120000 	ldmdbeq	r2, {}	; <UNPREDICTABLE>
    8d4c:	0000120a 	andeq	r1, r0, sl, lsl #4
    8d50:	0b750913 	bleq	1d4b1a4 <__bss_end__+0x1c0215c>
    8d54:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
    8d58:	00000a79 	andeq	r0, r0, r9, ror sl
    8d5c:	0ff70915 	svceq	0x00f70915
    8d60:	09160000 	ldmdbeq	r6, {}	; <UNPREDICTABLE>
    8d64:	00000c25 	andeq	r0, r0, r5, lsr #24
    8d68:	0b650917 	bleq	194b1cc <__bss_end__+0x1802184>
    8d6c:	09180000 	ldmdbeq	r8, {}	; <UNPREDICTABLE>
    8d70:	00000c97 	muleq	r0, r7, ip
    8d74:	117a0919 	cmnne	sl, r9, lsl r9
    8d78:	091a0000 	ldmdbeq	sl, {}	; <UNPREDICTABLE>
    8d7c:	00000c86 	andeq	r0, r0, r6, lsl #25
    8d80:	0f67091b 	svceq	0x0067091b
    8d84:	091c0000 	ldmdbeq	ip, {}	; <UNPREDICTABLE>
    8d88:	00000ec4 	andeq	r0, r0, r4, asr #29
    8d8c:	0969091d 	stmdbeq	r9!, {r0, r2, r3, r4, r8, fp}^
    8d90:	001e0000 	andseq	r0, lr, r0
    8d94:	00100308 	andseq	r0, r0, r8, lsl #6
    8d98:	60040700 	andvs	r0, r4, r0, lsl #14
    8d9c:	1a000000 	bne	8da4 <errno+0x8da0>
    8da0:	044b060e 	strbeq	r0, [fp], #-1550	; 0xfffff9f2
    8da4:	e6090000 	str	r0, [r9], -r0
    8da8:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    8dac:	000f0a09 	andeq	r0, pc, r9, lsl #20
    8db0:	8b091f00 	blhi	2509b8 <__bss_end__+0x107970>
    8db4:	2000000e 	andcs	r0, r0, lr
    8db8:	00116309 	andseq	r6, r1, r9, lsl #6
    8dbc:	14092100 	strne	r2, [r9], #-256	; 0xffffff00
    8dc0:	22000012 	andcs	r0, r0, #18
    8dc4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8dc8:	000003c0 	andeq	r0, r0, r0, asr #7
    8dcc:	000a2f03 	andeq	r2, sl, r3, lsl #30
    8dd0:	186e1b00 	stmdane	lr!, {r8, r9, fp, ip}^
    8dd4:	00000060 	andeq	r0, r0, r0, rrx
    8dd8:	0004520a 	andeq	r5, r4, sl, lsl #4
    8ddc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    8de0:	0000010e 	andeq	r0, r0, lr, lsl #2
    8de4:	00092003 	andeq	r2, r9, r3
    8de8:	18731b00 	ldmdane	r3!, {r8, r9, fp, ip}^
    8dec:	00000060 	andeq	r0, r0, r0, rrx
    8df0:	00275703 	eoreq	r5, r7, r3, lsl #14
    8df4:	19ab1b00 	stmibne	fp!, {r8, r9, fp, ip}
    8df8:	00000038 	andeq	r0, r0, r8, lsr r0
    8dfc:	00058e03 	andeq	r8, r5, r3, lsl #28
    8e00:	19b51b00 	ldmibne	r5!, {r8, r9, fp, ip}
    8e04:	00000060 	andeq	r0, r0, r0, rrx
    8e08:	b7030419 	smladlt	r3, r9, r4, r0
    8e0c:	1b000018 	blne	8e74 <errno+0x8e70>
    8e10:	004d0f7d 	subeq	r0, sp, sp, ror pc
    8e14:	2a120000 	bcs	488e1c <__bss_end__+0x33fdd4>
    8e18:	1b000002 	blne	8e28 <errno+0x8e24>
    8e1c:	a919016d 	ldmdbge	r9, {r0, r2, r3, r5, r6, r8}
    8e20:	1a000004 	bne	8e38 <errno+0x8e34>
    8e24:	00000226 	andeq	r0, r0, r6, lsr #4
    8e28:	35080102 	strcc	r0, [r8, #-258]	; 0xfffffefe
    8e2c:	0a000003 	beq	8e40 <errno+0x8e3c>
    8e30:	000004ae 	andeq	r0, r0, lr, lsr #9
    8e34:	f8040802 			; <UNDEFINED> instruction: 0xf8040802
    8e38:	17000015 	smladne	r0, r5, r0, r0
    8e3c:	0000022f 	andeq	r0, r0, pc, lsr #4
    8e40:	d314371c 	tstle	r4, #28, 14	; 0x700000
    8e44:	18000004 	stmdane	r0, {r2}
    8e48:	00049c04 	andeq	r9, r4, r4, lsl #24
    8e4c:	04cd0a00 	strbeq	r0, [sp], #2560	; 0xa00
    8e50:	3c170000 	ldccc	0, cr0, [r7], {-0}
    8e54:	1c000002 	stcne	0, cr0, [r0], {2}
    8e58:	04d31438 	ldrbeq	r1, [r3], #1080	; 0x438
    8e5c:	35170000 	ldrcc	r0, [r7, #-0]
    8e60:	1c000002 	stcne	0, cr0, [r0], {2}
    8e64:	04d31439 	ldrbeq	r1, [r3], #1081	; 0x439
    8e68:	04180000 	ldreq	r0, [r8], #-0
    8e6c:	000004ae 	andeq	r0, r0, lr, lsr #9
    8e70:	00189c17 	andseq	r9, r8, r7, lsl ip
    8e74:	0cf81d00 	ldcleq	13, cr1, [r8]
    8e78:	0000004d 	andeq	r0, r0, sp, asr #32
    8e7c:	002ffb0e 	eoreq	pc, pc, lr, lsl #22
    8e80:	4e1e1c00 	cdpmi	12, 1, cr1, cr14, cr0, {0}
    8e84:	00056b10 	andeq	r6, r5, r0, lsl fp
    8e88:	26d90f00 	ldrbcs	r0, [r9], r0, lsl #30
    8e8c:	4f1e0000 	svcmi	0x001e0000
    8e90:	00008111 	andeq	r8, r0, r1, lsl r1
    8e94:	0b0f0000 	bleq	3c8e9c <__bss_end__+0x27fe54>
    8e98:	1e000027 	cdpne	0, 0, cr0, cr0, cr7, {1}
    8e9c:	00751150 	rsbseq	r1, r5, r0, asr r1
    8ea0:	0f040000 	svceq	0x00040000
    8ea4:	000031e1 	andeq	r3, r0, r1, ror #3
    8ea8:	2f11511e 	svccs	0x0011511e
    8eac:	08000003 	stmdaeq	r0, {r0, r1}
    8eb0:	000c200f 	andeq	r2, ip, pc
    8eb4:	11521e00 	cmpne	r2, r0, lsl #28
    8eb8:	00000075 	andeq	r0, r0, r5, ror r0
    8ebc:	36ef0f0c 	strbtcc	r0, [pc], ip, lsl #30
    8ec0:	531e0000 	tstpl	lr, #0
    8ec4:	00007511 	andeq	r7, r0, r1, lsl r5
    8ec8:	7e0f1000 	cdpvc	0, 0, cr1, cr15, cr0, {0}
    8ecc:	1e000048 	cdpne	0, 0, cr0, cr0, cr8, {2}
    8ed0:	00751154 	rsbseq	r1, r5, r4, asr r1
    8ed4:	0f140000 	svceq	0x00140000
    8ed8:	0000245e 	andeq	r2, r0, lr, asr r4
    8edc:	7511551e 	ldrvc	r5, [r1, #-1310]	; 0xfffffae2
    8ee0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    8ee4:	2ffc0300 	svccs	0x00fc0300
    8ee8:	561e0000 	ldrpl	r0, [lr], -r0
    8eec:	00050203 	andeq	r0, r5, r3, lsl #4
    8ef0:	056b0a00 	strbeq	r0, [fp, #-2560]!	; 0xfffff600
    8ef4:	c7030000 	strgt	r0, [r3, -r0]
    8ef8:	1f000030 	svcne	0x00000030
    8efc:	0588152f 	streq	r1, [r8, #1327]	; 0x52f
    8f00:	04180000 	ldreq	r0, [r8], #-0
    8f04:	0000058e 	andeq	r0, r0, lr, lsl #11
    8f08:	0002001b 	andeq	r0, r2, fp, lsl r0
    8f0c:	0005b100 	andeq	fp, r5, r0, lsl #2
    8f10:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    8f14:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    8f18:	1c000000 	stcne	0, cr0, [r0], {-0}
    8f1c:	0000032f 	andeq	r0, r0, pc, lsr #6
    8f20:	0000751c 	andeq	r7, r0, ip, lsl r5
    8f24:	04761c00 	ldrbteq	r1, [r6], #-3072	; 0xfffff400
    8f28:	03000000 	movweq	r0, #0
    8f2c:	000027a5 	andeq	r2, r0, r5, lsr #15
    8f30:	bd15311f 	ldflts	f3, [r5, #-124]	; 0xffffff84
    8f34:	18000005 	stmdane	r0, {r0, r2}
    8f38:	0005c304 	andeq	ip, r5, r4, lsl #6
    8f3c:	02001b00 	andeq	r1, r0, #0, 22
    8f40:	05f00000 	ldrbeq	r0, [r0, #0]!
    8f44:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    8f48:	1c000004 	stcne	0, cr0, [r0], {4}
    8f4c:	0000004d 	andeq	r0, r0, sp, asr #32
    8f50:	00004d1c 	andeq	r4, r0, ip, lsl sp
    8f54:	004d1c00 	subeq	r1, sp, r0, lsl #24
    8f58:	2f1c0000 	svccs	0x001c0000
    8f5c:	1c000003 	stcne	0, cr0, [r0], {3}
    8f60:	00000075 	andeq	r0, r0, r5, ror r0
    8f64:	0004761c 	andeq	r7, r4, ip, lsl r6
    8f68:	04180000 	ldreq	r0, [r8], #-0
    8f6c:	000005f6 	strdeq	r0, [r0], -r6
    8f70:	0000811b 	andeq	r8, r0, fp, lsl r1
    8f74:	00060a00 	andeq	r0, r6, r0, lsl #20
    8f78:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    8f7c:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    8f80:	00000000 	andeq	r0, r0, r0
    8f84:	00281a0e 	eoreq	r1, r8, lr, lsl #20
    8f88:	371f0c00 	ldrcc	r0, [pc, -r0, lsl #24]
    8f8c:	00063f10 	andeq	r3, r6, r0, lsl pc
    8f90:	72691400 	rsbvc	r1, r9, #0, 8
    8f94:	381f0071 	ldmdacc	pc, {r0, r4, r5, r6}	; <UNPREDICTABLE>
    8f98:	00057c1f 	andeq	r7, r5, pc, lsl ip
    8f9c:	ee0f0000 	cdp	0, 0, cr0, cr15, cr0, {0}
    8fa0:	1f00002c 	svcne	0x0000002c
    8fa4:	05b11f39 	ldreq	r1, [r1, #3897]!	; 0xf39
    8fa8:	0f040000 	svceq	0x00040000
    8fac:	000019a1 	andeq	r1, r0, r1, lsr #19
    8fb0:	8e0b3e1f 	mcrhi	14, 0, r3, cr11, cr15, {0}
    8fb4:	08000004 	stmdaeq	r0, {r2}
    8fb8:	26000300 	strcs	r0, [r0], -r0, lsl #6
    8fbc:	3f1f0000 	svccc	0x001f0000
    8fc0:	00060a03 	andeq	r0, r6, r3, lsl #20
    8fc4:	296d0300 	stmdbcs	sp!, {r8, r9}^
    8fc8:	22060000 	andcs	r0, r6, #0
    8fcc:	00065715 	andeq	r5, r6, r5, lsl r7
    8fd0:	5d041800 	stcpl	8, cr1, [r4, #-0]
    8fd4:	1b000006 	blne	8ff4 <errno+0x8ff0>
    8fd8:	00000200 	andeq	r0, r0, r0, lsl #4
    8fdc:	0000067b 	andeq	r0, r0, fp, ror r6
    8fe0:	00048e1c 	andeq	r8, r4, ip, lsl lr
    8fe4:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    8fe8:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    8fec:	1c000000 	stcne	0, cr0, [r0], {-0}
    8ff0:	0000067b 	andeq	r0, r0, fp, ror r6
    8ff4:	6b041800 	blvs	10effc <morecore_area+0xc5ffc>
    8ff8:	03000005 	movweq	r0, #5
    8ffc:	00003458 	andeq	r3, r0, r8, asr r4
    9000:	8d113206 	lfmhi	f3, 4, [r1, #-24]	; 0xffffffe8
    9004:	18000006 	stmdane	r0, {r1, r2}
    9008:	00069304 	andeq	r9, r6, r4, lsl #6
    900c:	048e1b00 	streq	r1, [lr], #2816	; 0xb00
    9010:	06ac0000 	strteq	r0, [ip], r0
    9014:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9018:	1c000004 	stcne	0, cr0, [r0], {4}
    901c:	0000048e 	andeq	r0, r0, lr, lsl #9
    9020:	00004d1c 	andeq	r4, r0, ip, lsl sp
    9024:	12030000 	andne	r0, r3, #0
    9028:	06000030 			; <UNDEFINED> instruction: 0x06000030
    902c:	06b81144 	ldrteq	r1, [r8], r4, asr #2
    9030:	04180000 	ldreq	r0, [r8], #-0
    9034:	000006be 			; <UNDEFINED> instruction: 0x000006be
    9038:	00048e1b 	andeq	r8, r4, fp, lsl lr
    903c:	0006e100 	andeq	lr, r6, r0, lsl #2
    9040:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    9044:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9048:	1c000004 	stcne	0, cr0, [r0], {4}
    904c:	0000004d 	andeq	r0, r0, sp, asr #32
    9050:	0006e11c 	andeq	lr, r6, ip, lsl r1
    9054:	06e71c00 	strbteq	r1, [r7], r0, lsl #24
    9058:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    905c:	00008104 	andeq	r8, r0, r4, lsl #2
    9060:	75041800 	strvc	r1, [r4, #-2048]	; 0xfffff800
    9064:	03000000 	movweq	r0, #0
    9068:	0000260e 	andeq	r2, r0, lr, lsl #12
    906c:	f9154d06 			; <UNDEFINED> instruction: 0xf9154d06
    9070:	18000006 	stmdane	r0, {r1, r2}
    9074:	0006ff04 	andeq	pc, r6, r4, lsl #30
    9078:	02001b00 	andeq	r1, r0, #0, 22
    907c:	07130000 	ldreq	r0, [r3, -r0]
    9080:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9084:	1c000004 	stcne	0, cr0, [r0], {4}
    9088:	00000081 	andeq	r0, r0, r1, lsl #1
    908c:	26e00300 	strbtcs	r0, [r0], r0, lsl #6
    9090:	54060000 	strpl	r0, [r6], #-0
    9094:	00071f0f 	andeq	r1, r7, pc, lsl #30
    9098:	25041800 	strcs	r1, [r4, #-2048]	; 0xfffff800
    909c:	1b000007 	blne	90c0 <errno+0x90bc>
    90a0:	0000004d 	andeq	r0, r0, sp, asr #32
    90a4:	00000734 	andeq	r0, r0, r4, lsr r7
    90a8:	00048e1c 	andeq	r8, r4, ip, lsl lr
    90ac:	e6030000 	str	r0, [r3], -r0
    90b0:	06000033 			; <UNDEFINED> instruction: 0x06000033
    90b4:	05f01462 	ldrbeq	r1, [r0, #1122]!	; 0x462
    90b8:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    90bc:	06000025 	streq	r0, [r0], -r5, lsr #32
    90c0:	074c146c 	strbeq	r1, [ip, -ip, ror #8]
    90c4:	04180000 	ldreq	r0, [r8], #-0
    90c8:	00000752 	andeq	r0, r0, r2, asr r7
    90cc:	0000811b 	andeq	r8, r0, fp, lsl r1
    90d0:	00076600 	andeq	r6, r7, r0, lsl #12
    90d4:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    90d8:	811c0000 	tsthi	ip, r0
    90dc:	00000000 	andeq	r0, r0, r0
    90e0:	002d9c03 	eoreq	r9, sp, r3, lsl #24
    90e4:	13740600 	cmnne	r4, #0, 12
    90e8:	00000772 	andeq	r0, r0, r2, ror r7
    90ec:	07780418 			; <UNDEFINED> instruction: 0x07780418
    90f0:	761b0000 	ldrvc	r0, [fp], -r0
    90f4:	87000004 	strhi	r0, [r0, -r4]
    90f8:	1c000007 	stcne	0, cr0, [r0], {7}
    90fc:	0000048e 	andeq	r0, r0, lr, lsl #9
    9100:	24150300 	ldrcs	r0, [r5], #-768	; 0xfffffd00
    9104:	7d060000 	stcvc	0, cr0, [r6, #-0]
    9108:	00071f0f 	andeq	r1, r7, pc, lsl #30
    910c:	33cc0300 	biccc	r0, ip, #0, 6
    9110:	8a060000 	bhi	189118 <__bss_end__+0x400d0>
    9114:	00079f14 	andeq	r9, r7, r4, lsl pc
    9118:	a5041800 	strge	r1, [r4, #-2048]	; 0xfffff800
    911c:	1b000007 	blne	9140 <errno+0x913c>
    9120:	00000081 	andeq	r0, r0, r1, lsl #1
    9124:	000007c8 	andeq	r0, r0, r8, asr #15
    9128:	00048e1c 	andeq	r8, r4, ip, lsl lr
    912c:	004d1c00 	subeq	r1, sp, r0, lsl #24
    9130:	c81c0000 	ldmdagt	ip, {}	; <UNPREDICTABLE>
    9134:	1c000007 	stcne	0, cr0, [r0], {7}
    9138:	000007ce 	andeq	r0, r0, lr, asr #15
    913c:	0007d41c 	andeq	sp, r7, ip, lsl r4
    9140:	04180000 	ldreq	r0, [r8], #-0
    9144:	00000452 	andeq	r0, r0, r2, asr r4
    9148:	046a0418 	strbteq	r0, [sl], #-1048	; 0xfffffbe8
    914c:	04180000 	ldreq	r0, [r8], #-0
    9150:	000007da 	ldrdeq	r0, [r0], -sl
    9154:	c9020102 	stmdbgt	r2, {r1, r8}
    9158:	0300001b 	movweq	r0, #27
    915c:	00002837 	andeq	r2, r0, r7, lsr r8
    9160:	1f0f9306 	svcne	0x000f9306
    9164:	03000007 	movweq	r0, #7
    9168:	00003262 	andeq	r3, r0, r2, ror #4
    916c:	f0149e06 			; <UNDEFINED> instruction: 0xf0149e06
    9170:	03000005 	movweq	r0, #5
    9174:	00003548 	andeq	r3, r0, r8, asr #10
    9178:	1f0fa706 	svcne	0x000fa706
    917c:	03000007 	movweq	r0, #7
    9180:	00002de2 	andeq	r2, r0, r2, ror #27
    9184:	f014ba06 			; <UNDEFINED> instruction: 0xf014ba06
    9188:	03000005 	movweq	r0, #5
    918c:	00002788 	andeq	r2, r0, r8, lsl #15
    9190:	1d10c106 	ldfned	f4, [r0, #-24]	; 0xffffffe8
    9194:	18000008 	stmdane	r0, {r3}
    9198:	00082304 	andeq	r2, r8, r4, lsl #6
    919c:	082e1d00 	stmdaeq	lr!, {r8, sl, fp, ip}
    91a0:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    91a4:	00000004 	andeq	r0, r0, r4
    91a8:	002c5303 	eoreq	r5, ip, r3, lsl #6
    91ac:	13cd0600 	bicne	r0, sp, #0, 12
    91b0:	0000083a 	andeq	r0, r0, sl, lsr r8
    91b4:	08400418 	stmdaeq	r0, {r3, r4, sl}^
    91b8:	901b0000 	andsls	r0, fp, r0
    91bc:	54000004 	strpl	r0, [r0], #-4
    91c0:	1c000008 	stcne	0, cr0, [r0], {8}
    91c4:	0000048e 	andeq	r0, r0, lr, lsl #9
    91c8:	0000751c 	andeq	r7, r0, ip, lsl r5
    91cc:	2c030000 	stccs	0, cr0, [r3], {-0}
    91d0:	06000033 			; <UNDEFINED> instruction: 0x06000033
    91d4:	086013db 	stmdaeq	r0!, {r0, r1, r3, r4, r6, r7, r8, r9, ip}^
    91d8:	04180000 	ldreq	r0, [r8], #-0
    91dc:	00000866 	andeq	r0, r0, r6, ror #16
    91e0:	0004901b 	andeq	r9, r4, fp, lsl r0
    91e4:	00088400 	andeq	r8, r8, r0, lsl #8
    91e8:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    91ec:	751c0000 	ldrvc	r0, [ip, #-0]
    91f0:	1c000000 	stcne	0, cr0, [r0], {-0}
    91f4:	0000048e 	andeq	r0, r0, lr, lsl #9
    91f8:	0004901c 	andeq	r9, r4, ip, lsl r0
    91fc:	050e0000 	streq	r0, [lr, #-0]
    9200:	54000026 	strpl	r0, [r0], #-38	; 0xffffffda
    9204:	8910dd06 	ldmdbhi	r0, {r1, r2, r8, sl, fp, ip, lr, pc}
    9208:	0f000009 	svceq	0x00000009
    920c:	000019a1 	andeq	r1, r0, r1, lsr #19
    9210:	8e0bde06 	cdphi	14, 0, cr13, cr11, cr6, {0}
    9214:	00000004 	andeq	r0, r0, r4
    9218:	0036c20f 	eorseq	ip, r6, pc, lsl #4
    921c:	1ddf0600 	ldclne	6, cr0, [pc]	; 9224 <errno+0x9220>
    9220:	0000064b 	andeq	r0, r0, fp, asr #12
    9224:	266a0f04 	strbtcs	r0, [sl], -r4, lsl #30
    9228:	e0060000 	and	r0, r6, r0
    922c:	00068121 	andeq	r8, r6, r1, lsr #2
    9230:	a30f0800 	movwge	r0, #63488	; 0xf800
    9234:	06000028 	streq	r0, [r0], -r8, lsr #32
    9238:	06ac1ee1 	strteq	r1, [ip], r1, ror #29
    923c:	0f0c0000 	svceq	0x000c0000
    9240:	0000247b 	andeq	r2, r0, fp, ror r4
    9244:	ed1fe206 	lfm	f6, 1, [pc, #-24]	; 9234 <errno+0x9230>
    9248:	10000006 	andne	r0, r0, r6
    924c:	00368c0f 	eorseq	r8, r6, pc, lsl #24
    9250:	1de30600 	stclne	6, cr0, [r3]
    9254:	00000713 	andeq	r0, r0, r3, lsl r7
    9258:	31c80f14 	biccc	r0, r8, r4, lsl pc
    925c:	e4060000 	str	r0, [r6], #-0
    9260:	0007341b 	andeq	r3, r7, fp, lsl r4
    9264:	730f1800 	movwvc	r1, #63488	; 0xf800
    9268:	06000031 			; <UNDEFINED> instruction: 0x06000031
    926c:	07401ce5 	strbeq	r1, [r0, -r5, ror #25]
    9270:	0f1c0000 	svceq	0x001c0000
    9274:	00003819 	andeq	r3, r0, r9, lsl r8
    9278:	661ee606 	ldrvs	lr, [lr], -r6, lsl #12
    927c:	20000007 	andcs	r0, r0, r7
    9280:	00277a0f 	eoreq	r7, r7, pc, lsl #20
    9284:	21e70600 	mvncs	r0, r0, lsl #12
    9288:	00000787 	andeq	r0, r0, r7, lsl #15
    928c:	34bf0f24 	ldrtcc	r0, [pc], #3876	; 9294 <errno+0x9290>
    9290:	e8060000 	stmda	r6, {}	; <UNPREDICTABLE>
    9294:	0007931f 	andeq	r9, r7, pc, lsl r3
    9298:	650f2800 	strvs	r2, [pc, #-2048]	; 8aa0 <errno+0x8a9c>
    929c:	0600002a 	streq	r0, [r0], -sl, lsr #32
    92a0:	07e123e9 	strbeq	r2, [r1, r9, ror #7]!
    92a4:	0f2c0000 	svceq	0x002c0000
    92a8:	00002359 	andeq	r2, r0, r9, asr r3
    92ac:	ed21ea06 	vstmdb	r1!, {s28-s33}
    92b0:	30000007 	andcc	r0, r0, r7
    92b4:	0037b80f 	eorseq	fp, r7, pc, lsl #16
    92b8:	1eeb0600 	cdpne	6, 14, cr0, cr11, cr0, {0}
    92bc:	000007f9 	strdeq	r0, [r0], -r9
    92c0:	31380f34 	teqcc	r8, r4, lsr pc
    92c4:	ec060000 	stc	0, cr0, [r6], {-0}
    92c8:	00081115 	andeq	r1, r8, r5, lsl r1
    92cc:	cb0f3800 	blgt	3d72d4 <__bss_end__+0x28e28c>
    92d0:	06000034 			; <UNDEFINED> instruction: 0x06000034
    92d4:	08051eed 	stmdaeq	r5, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip}
    92d8:	0f3c0000 	svceq	0x003c0000
    92dc:	00003035 	andeq	r3, r0, r5, lsr r0
    92e0:	2e29ee06 	cdpcs	14, 2, cr14, cr9, cr6, {0}
    92e4:	40000008 	andmi	r0, r0, r8
    92e8:	002e190f 	eoreq	r1, lr, pc, lsl #18
    92ec:	25ef0600 	strbcs	r0, [pc, #1536]!	; 98f4 <errno+0x98f0>
    92f0:	00000854 	andeq	r0, r0, r4, asr r8
    92f4:	281a0f44 	ldmdacs	sl, {r2, r6, r8, r9, sl, fp}
    92f8:	f0060000 			; <UNDEFINED> instruction: 0xf0060000
    92fc:	00063f13 	andeq	r3, r6, r3, lsl pc
    9300:	03004800 	movweq	r4, #2048	; 0x800
    9304:	00002605 	andeq	r2, r0, r5, lsl #12
    9308:	8403f106 	strhi	pc, [r3], #-262	; 0xfffffefa
    930c:	03000008 	movweq	r0, #8
    9310:	000030e1 	andeq	r3, r0, r1, ror #1
    9314:	a10f1d08 	tstge	pc, r8, lsl #26
    9318:	18000009 	stmdane	r0, {r0, r3}
    931c:	0009a704 	andeq	sl, r9, r4, lsl #14
    9320:	004d1b00 	subeq	r1, sp, r0, lsl #22
    9324:	09bb0000 	ldmibeq	fp!, {}	; <UNPREDICTABLE>
    9328:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    932c:	1c000004 	stcne	0, cr0, [r0], {4}
    9330:	000006e1 	andeq	r0, r0, r1, ror #13
    9334:	2ac10300 	bcs	ff049f3c <__bss_end__+0xfef00ef4>
    9338:	27080000 	strcs	r0, [r8, -r0]
    933c:	0009c710 	andeq	ip, r9, r0, lsl r7
    9340:	cd041800 	stcgt	8, cr1, [r4, #-0]
    9344:	1d000009 	stcne	0, cr0, [r0, #-36]	; 0xffffffdc
    9348:	000009e2 	andeq	r0, r0, r2, ror #19
    934c:	00048e1c 	andeq	r8, r4, ip, lsl lr
    9350:	00811c00 	addeq	r1, r1, r0, lsl #24
    9354:	7b1c0000 	blvc	70935c <__bss_end__+0x5c0314>
    9358:	00000006 	andeq	r0, r0, r6
    935c:	0026bf03 	eoreq	fp, r6, r3, lsl #30
    9360:	102f0800 	eorne	r0, pc, r0, lsl #16
    9364:	000009ee 	andeq	r0, r0, lr, ror #19
    9368:	09f40418 	ldmibeq	r4!, {r3, r4, sl}^
    936c:	041d0000 	ldreq	r0, [sp], #-0
    9370:	1c00000a 	stcne	0, cr0, [r0], {10}
    9374:	0000048e 	andeq	r0, r0, lr, lsl #9
    9378:	0000811c 	andeq	r8, r0, ip, lsl r1
    937c:	d2030000 	andle	r0, r3, #0
    9380:	08000029 	stmdaeq	r0, {r0, r3, r5}
    9384:	0a100f3b 	beq	40d078 <__bss_end__+0x2c4030>
    9388:	04180000 	ldreq	r0, [r8], #-0
    938c:	00000a16 	andeq	r0, r0, r6, lsl sl
    9390:	00004d1b 	andeq	r4, r0, fp, lsl sp
    9394:	000a3900 	andeq	r3, sl, r0, lsl #18
    9398:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    939c:	391c0000 	ldmdbcc	ip, {}	; <UNPREDICTABLE>
    93a0:	1c00000a 	stcne	0, cr0, [r0], {10}
    93a4:	00000075 	andeq	r0, r0, r5, ror r0
    93a8:	0000751c 	andeq	r7, r0, ip, lsl r5
    93ac:	06e71c00 	strbteq	r1, [r7], r0, lsl #24
    93b0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    93b4:	00057704 	andeq	r7, r5, r4, lsl #14
    93b8:	34ff0300 	ldrbtcc	r0, [pc], #768	; 93c0 <errno+0x93bc>
    93bc:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    93c0:	000a4b0f 	andeq	r4, sl, pc, lsl #22
    93c4:	51041800 	tstpl	r4, r0, lsl #16
    93c8:	1b00000a 	blne	93f8 <errno+0x93f4>
    93cc:	0000004d 	andeq	r0, r0, sp, asr #32
    93d0:	00000a79 	andeq	r0, r0, r9, ror sl
    93d4:	00048e1c 	andeq	r8, r4, ip, lsl lr
    93d8:	0a391c00 	beq	e503e0 <__bss_end__+0xd07398>
    93dc:	751c0000 	ldrvc	r0, [ip, #-0]
    93e0:	1c000000 	stcne	0, cr0, [r0], {-0}
    93e4:	00000075 	andeq	r0, r0, r5, ror r0
    93e8:	00046a1c 	andeq	r6, r4, ip, lsl sl
    93ec:	06e71c00 	strbteq	r1, [r7], r0, lsl #24
    93f0:	03000000 	movweq	r0, #0
    93f4:	00002648 	andeq	r2, r0, r8, asr #12
    93f8:	850f5708 	strhi	r5, [pc, #-1800]	; 8cf8 <errno+0x8cf4>
    93fc:	1800000a 	stmdane	r0, {r1, r3}
    9400:	000a8b04 	andeq	r8, sl, r4, lsl #22
    9404:	004d1b00 	subeq	r1, sp, r0, lsl #22
    9408:	0ab30000 	beq	fecc9410 <__bss_end__+0xfeb803c8>
    940c:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9410:	1c000004 	stcne	0, cr0, [r0], {4}
    9414:	00000a39 	andeq	r0, r0, r9, lsr sl
    9418:	0000751c 	andeq	r7, r0, ip, lsl r5
    941c:	00751c00 	rsbseq	r1, r5, r0, lsl #24
    9420:	da1c0000 	ble	709428 <__bss_end__+0x5c03e0>
    9424:	1c000007 	stcne	0, cr0, [r0], {7}
    9428:	000006e7 	andeq	r0, r0, r7, ror #13
    942c:	2fba0300 	svccs	0x00ba0300
    9430:	63080000 	movwvs	r0, #32768	; 0x8000
    9434:	000abf10 	andeq	fp, sl, r0, lsl pc
    9438:	c5041800 	strgt	r1, [r4, #-2048]	; 0xfffff800
    943c:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    9440:	00000adf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    9444:	00048e1c 	andeq	r8, r4, ip, lsl lr
    9448:	00751c00 	rsbseq	r1, r5, r0, lsl #24
    944c:	751c0000 	ldrvc	r0, [ip, #-0]
    9450:	1c000000 	stcne	0, cr0, [r0], {-0}
    9454:	00000075 	andeq	r0, r0, r5, ror r0
    9458:	2a850300 	bcs	fe14a060 <__bss_end__+0xfe001018>
    945c:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
    9460:	000aeb15 	andeq	lr, sl, r5, lsl fp
    9464:	f1041800 			; <UNDEFINED> instruction: 0xf1041800
    9468:	1b00000a 	blne	9498 <errno+0x9494>
    946c:	0000046a 	andeq	r0, r0, sl, ror #8
    9470:	00000b0f 	andeq	r0, r0, pc, lsl #22
    9474:	00048e1c 	andeq	r8, r4, ip, lsl lr
    9478:	00751c00 	rsbseq	r1, r5, r0, lsl #24
    947c:	751c0000 	ldrvc	r0, [ip, #-0]
    9480:	1c000000 	stcne	0, cr0, [r0], {-0}
    9484:	00000075 	andeq	r0, r0, r5, ror r0
    9488:	6b761e00 	blvs	1d90c90 <__bss_end__+0x1c47c48>
    948c:	08240061 	stmdaeq	r4!, {r0, r5, r6}
    9490:	0b92107c 	bleq	fe48d688 <__bss_end__+0xfe344640>
    9494:	a10f0000 	mrsge	r0, CPSR
    9498:	08000019 	stmdaeq	r0, {r0, r3, r4}
    949c:	048e0b7d 	streq	r0, [lr], #2941	; 0xb7d
    94a0:	0f000000 	svceq	0x00000000
    94a4:	00003936 	andeq	r3, r0, r6, lsr r9
    94a8:	95197e08 	ldrls	r7, [r9, #-3592]	; 0xfffff1f8
    94ac:	04000009 	streq	r0, [r0], #-9
    94b0:	0031f60f 	eorseq	pc, r1, pc, lsl #12
    94b4:	1d7f0800 	ldclne	8, cr0, [pc, #-0]	; 94bc <errno+0x94b8>
    94b8:	000009bb 			; <UNDEFINED> instruction: 0x000009bb
    94bc:	30810f08 	addcc	r0, r1, r8, lsl #30
    94c0:	80080000 	andhi	r0, r8, r0
    94c4:	000a041a 	andeq	r0, sl, sl, lsl r4
    94c8:	800f0c00 	andhi	r0, pc, r0, lsl #24
    94cc:	0800003a 	stmdaeq	r0, {r1, r3, r4, r5}
    94d0:	0a792781 	beq	1e532dc <__bss_end__+0x1d0a294>
    94d4:	0f100000 	svceq	0x00100000
    94d8:	000038b9 			; <UNDEFINED> instruction: 0x000038b9
    94dc:	3f1d8208 	svccc	0x001d8208
    94e0:	1400000a 	strne	r0, [r0], #-10
    94e4:	0024cd0f 	eoreq	ip, r4, pc, lsl #26
    94e8:	18830800 	stmne	r3, {fp}
    94ec:	000009e2 	andeq	r0, r0, r2, ror #19
    94f0:	3a6f0f18 	bcc	1bcd158 <__bss_end__+0x1a84110>
    94f4:	84080000 	strhi	r0, [r8], #-0
    94f8:	000ab319 	andeq	fp, sl, r9, lsl r3
    94fc:	be0f1c00 	cdplt	12, 0, cr1, cr15, cr0, {0}
    9500:	08000033 	stmdaeq	r0, {r0, r1, r4, r5}
    9504:	0adf1a85 	beq	ff7cff20 <__bss_end__+0xff686ed8>
    9508:	00200000 	eoreq	r0, r0, r0
    950c:	002b2f03 	eoreq	r2, fp, r3, lsl #30
    9510:	03860800 	orreq	r0, r6, #0, 16
    9514:	00000b0f 	andeq	r0, r0, pc, lsl #22
    9518:	00173217 	andseq	r3, r7, r7, lsl r2
    951c:	1a102000 	bne	411524 <__bss_end__+0x2c84dc>
    9520:	0000004d 	andeq	r0, r0, sp, asr #32
    9524:	002e5a08 	eoreq	r5, lr, r8, lsl #20
    9528:	60040700 	andvs	r0, r4, r0, lsl #14
    952c:	21000000 	mrscs	r0, (UNDEF: 0)
    9530:	0be70e15 	bleq	ff9ccd8c <__bss_end__+0xff883d44>
    9534:	d9090000 	stmdble	r9, {}	; <UNPREDICTABLE>
    9538:	00000024 	andeq	r0, r0, r4, lsr #32
    953c:	002bfb09 	eoreq	pc, fp, r9, lsl #22
    9540:	0f090100 	svceq	0x00090100
    9544:	02000029 	andeq	r0, r0, #41	; 0x29
    9548:	002fce09 	eoreq	ip, pc, r9, lsl #28
    954c:	0e090300 	cdpeq	3, 0, cr0, cr9, cr0, {0}
    9550:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
    9554:	0028fc09 	eoreq	pc, r8, r9, lsl #24
    9558:	84090500 	strhi	r0, [r9], #-1280	; 0xfffffb00
    955c:	0600002c 	streq	r0, [r0], -ip, lsr #32
    9560:	367a0300 	ldrbtcc	r0, [sl], -r0, lsl #6
    9564:	1d210000 	stcne	0, cr0, [r1, #-0]
    9568:	000baa03 	andeq	sl, fp, r3, lsl #20
    956c:	21141f00 	tstcs	r4, r0, lsl #30
    9570:	0c3e0927 			; <UNDEFINED> instruction: 0x0c3e0927
    9574:	850f0000 	strhi	r0, [pc, #-0]	; 957c <errno+0x9578>
    9578:	21000036 	tstcs	r0, r6, lsr r0
    957c:	04631228 	strbteq	r1, [r3], #-552	; 0xfffffdd8
    9580:	14000000 	strne	r0, [r0], #-0
    9584:	006e6970 	rsbeq	r6, lr, r0, ror r9
    9588:	63122921 	tstvs	r2, #540672	; 0x84000
    958c:	04000004 	streq	r0, [r0], #-4
    9590:	004e000f 	subeq	r0, lr, pc
    9594:	122a2100 	eorne	r2, sl, #0, 2
    9598:	00000463 	andeq	r0, r0, r3, ror #8
    959c:	23670f08 	cmncs	r7, #8, 30
    95a0:	2b210000 	blcs	8495a8 <__bss_end__+0x700560>
    95a4:	00046312 	andeq	r6, r4, r2, lsl r3
    95a8:	900f0c00 	andls	r0, pc, r0, lsl #24
    95ac:	21000033 	tstcs	r0, r3, lsr r0
    95b0:	0463122c 	strbteq	r1, [r3], #-556	; 0xfffffdd4
    95b4:	00100000 	andseq	r0, r0, r0
    95b8:	2e21141f 	mcrcs	4, 1, r1, cr1, cr15, {0}
    95bc:	000c8909 	andeq	r8, ip, r9, lsl #18
    95c0:	2f310f00 	svccs	0x00310f00
    95c4:	2f210000 	svccs	0x00210000
    95c8:	00046312 	andeq	r6, r4, r2, lsl r3
    95cc:	ff0f0000 			; <UNDEFINED> instruction: 0xff0f0000
    95d0:	21000035 	tstcs	r0, r5, lsr r0
    95d4:	04631230 	strbteq	r1, [r3], #-560	; 0xfffffdd0
    95d8:	0f040000 	svceq	0x00040000
    95dc:	00002b35 	andeq	r2, r0, r5, lsr fp
    95e0:	63123121 	tstvs	r2, #1073741832	; 0x40000008
    95e4:	08000004 	stmdaeq	r0, {r2}
    95e8:	0042cf0f 	subeq	ip, r2, pc, lsl #30
    95ec:	12322100 	eorsne	r2, r2, #0, 2
    95f0:	00000463 	andeq	r0, r0, r3, ror #8
    95f4:	33900f0c 	orrscc	r0, r0, #12, 30	; 0x30
    95f8:	33210000 			; <UNDEFINED> instruction: 0x33210000
    95fc:	00046312 	andeq	r6, r4, r2, lsl r3
    9600:	1f001000 	svcne	0x00001000
    9604:	09352104 	ldmdbeq	r5!, {r2, r8, sp}
    9608:	00000ca0 	andeq	r0, r0, r0, lsr #25
    960c:	0034970f 	eorseq	r9, r4, pc, lsl #14
    9610:	12362100 	eorsne	r2, r6, #0, 2
    9614:	00000463 	andeq	r0, r0, r3, ror #8
    9618:	081f0000 	ldmdaeq	pc, {}	; <UNPREDICTABLE>
    961c:	c4093821 	strgt	r3, [r9], #-2081	; 0xfffff7df
    9620:	0f00000c 	svceq	0x0000000c
    9624:	00003497 	muleq	r0, r7, r4
    9628:	63123921 	tstvs	r2, #540672	; 0x84000
    962c:	00000004 	andeq	r0, r0, r4
    9630:	003e0e0f 	eorseq	r0, lr, pc, lsl #28
    9634:	123a2100 	eorsne	r2, sl, #0, 2
    9638:	00000463 	andeq	r0, r0, r3, ror #8
    963c:	0c1f0004 	ldceq	0, cr0, [pc], {4}
    9640:	f5093c21 			; <UNDEFINED> instruction: 0xf5093c21
    9644:	0f00000c 	svceq	0x0000000c
    9648:	00003497 	muleq	r0, r7, r4
    964c:	63123d21 	tstvs	r2, #2112	; 0x840
    9650:	00000004 	andeq	r0, r0, r4
    9654:	003e0e0f 	eorseq	r0, lr, pc, lsl #28
    9658:	123e2100 	eorsne	r2, lr, #0, 2
    965c:	00000463 	andeq	r0, r0, r3, ror #8
    9660:	29070f04 	stmdbcs	r7, {r2, r8, r9, sl, fp}
    9664:	3f210000 	svccc	0x00210000
    9668:	00046312 	andeq	r6, r4, r2, lsl r3
    966c:	20000800 	andcs	r0, r0, r0, lsl #16
    9670:	05262114 	streq	r2, [r6, #-276]!	; 0xfffffeec
    9674:	00000d47 	andeq	r0, r0, r7, asr #26
    9678:	00368521 	eorseq	r8, r6, r1, lsr #10
    967c:	0b2d2100 	bleq	b51a84 <__bss_end__+0xa08a3c>
    9680:	00000bf3 	strdeq	r0, [r0], -r3
    9684:	69736d22 	ldmdbvs	r3!, {r1, r5, r8, sl, fp, sp, lr}^
    9688:	0b342100 	bleq	d11a90 <__bss_end__+0xbc8a48>
    968c:	00000c3e 	andeq	r0, r0, lr, lsr ip
    9690:	71726922 	cmnvc	r2, r2, lsr #18
    9694:	0b372100 	bleq	dd1a9c <__bss_end__+0xc88a54>
    9698:	00000c89 	andeq	r0, r0, r9, lsl #25
    969c:	003e0e21 	eorseq	r0, lr, r1, lsr #28
    96a0:	0b3b2100 	bleq	ed1aa8 <__bss_end__+0xd88a60>
    96a4:	00000ca0 	andeq	r0, r0, r0, lsr #25
    96a8:	75706322 	ldrbvc	r6, [r0, #-802]!	; 0xfffffcde
    96ac:	0b402100 	bleq	1011ab4 <__bss_end__+0xec8a6c>
    96b0:	00000cc4 	andeq	r0, r0, r4, asr #25
    96b4:	00291921 	eoreq	r1, r9, r1, lsr #18
    96b8:	0f412100 	svceq	0x00412100
    96bc:	0000048e 	andeq	r0, r0, lr, lsl #9
    96c0:	21181f00 	tstcs	r8, r0, lsl #30
    96c4:	0d640924 			; <UNDEFINED> instruction: 0x0d640924
    96c8:	8d0f0000 	stchi	0, cr0, [pc, #-0]	; 96d0 <errno+0x96cc>
    96cc:	21000003 	tstcs	r0, r3
    96d0:	0be71025 	bleq	ff9cd76c <__bss_end__+0xff884724>
    96d4:	23000000 	movwcs	r0, #0
    96d8:	00000cf5 	strdeq	r0, [r0], -r5
    96dc:	be030004 	cdplt	0, 0, cr0, cr3, cr4, {0}
    96e0:	21000030 	tstcs	r0, r0, lsr r0
    96e4:	0d470343 	stcleq	3, cr0, [r7, #-268]	; 0xfffffef4
    96e8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    96ec:	0015f304 	andseq	pc, r5, r4, lsl #6
    96f0:	192b1700 	stmdbne	fp!, {r8, r9, sl, ip}
    96f4:	7b220000 	blvc	8896fc <__bss_end__+0x7406b4>
    96f8:	0004f00e 	andeq	pc, r4, lr
    96fc:	19001700 	stmdbne	r0, {r8, r9, sl, ip}
    9700:	7c220000 	stcvc	0, cr0, [r2], #-0
    9704:	00004d0c 	andeq	r4, r0, ip, lsl #26
    9708:	178e1700 	strne	r1, [lr, r0, lsl #14]
    970c:	7c220000 	stcvc	0, cr0, [r2], #-0
    9710:	00004d14 	andeq	r4, r0, r4, lsl sp
    9714:	17181700 	ldrne	r1, [r8, -r0, lsl #14]
    9718:	7c220000 	stcvc	0, cr0, [r2], #-0
    971c:	00004d1c 	andeq	r4, r0, ip, lsl sp
    9720:	8e041800 	cdphi	8, 0, cr1, cr4, cr0, {0}
    9724:	08000004 	stmdaeq	r0, {r2}
    9728:	0000204e 	andeq	r2, r0, lr, asr #32
    972c:	00600407 	rsbeq	r0, r0, r7, lsl #8
    9730:	0f090000 	svceq	0x00090000
    9734:	000dcc06 	andeq	ip, sp, r6, lsl #24
    9738:	21420900 	cmpcs	r2, r0, lsl #18
    973c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9740:	000021b3 			; <UNDEFINED> instruction: 0x000021b3
    9744:	01030001 	tsteq	r3, r1
    9748:	09000020 	stmdbeq	r0, {r5}
    974c:	004d0d14 	subeq	r0, sp, r4, lsl sp
    9750:	cc0a0000 	stcgt	0, cr0, [sl], {-0}
    9754:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    9758:	0000202e 	andeq	r2, r0, lr, lsr #32
    975c:	00600407 	rsbeq	r0, r0, r7, lsl #8
    9760:	100a0000 	andne	r0, sl, r0
    9764:	000e0206 	andeq	r0, lr, r6, lsl #4
    9768:	21000900 	tstcs	r0, r0, lsl #18
    976c:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    9770:	000021a0 	andeq	r2, r0, r0, lsr #3
    9774:	1f5e0902 	svcne	0x005e0902
    9778:	00030000 	andeq	r0, r3, r0
    977c:	00205708 	eoreq	r5, r0, r8, lsl #14
    9780:	60040700 	andvs	r0, r4, r0, lsl #14
    9784:	0b000000 	bleq	978c <errno+0x9788>
    9788:	0e4b0612 	mcreq	6, 2, r0, cr11, cr2, {0}
    978c:	5e090000 	cdppl	0, 0, cr0, cr9, cr0, {0}
    9790:	03000021 	movweq	r0, #33	; 0x21
    9794:	00208009 	eoreq	r8, r0, r9
    9798:	73090400 	movwvc	r0, #37888	; 0x9400
    979c:	05000021 	streq	r0, [r0, #-33]	; 0xffffffdf
    97a0:	00206509 	eoreq	r6, r0, r9, lsl #10
    97a4:	8f090600 	svchi	0x00090600
    97a8:	07000021 	streq	r0, [r0, -r1, lsr #32]
    97ac:	0021ca09 	eoreq	ip, r1, r9, lsl #20
    97b0:	81090800 	tsthi	r9, r0, lsl #16
    97b4:	09000021 	stmdbeq	r0, {r0, r5}
    97b8:	001f8709 	andseq	r8, pc, r9, lsl #14
    97bc:	75090a00 	strvc	r0, [r9, #-2560]	; 0xfffff600
    97c0:	0b00001f 	bleq	9844 <errno+0x9840>
    97c4:	1fc30b00 	svcne	0x00c30b00
    97c8:	220b0000 	andcs	r0, fp, #0
    97cc:	000dd83f 	andeq	sp, sp, pc, lsr r8
    97d0:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    97d4:	0b00028a 	bleq	a204 <errno+0xa200>
    97d8:	00002117 	andeq	r2, r0, r7, lsl r1
    97dc:	d83b230b 	ldmdale	fp!, {r0, r1, r3, r8, r9, sp}
    97e0:	0500000d 	streq	r0, [r0, #-13]
    97e4:	028a4003 	addeq	r4, sl, #3
    97e8:	34450e00 	strbcc	r0, [r5], #-3584	; 0xfffff200
    97ec:	0c100000 	ldceq	0, cr0, [r0], {-0}
    97f0:	0eb01018 	mrceq	0, 5, r1, cr0, cr8, {0}
    97f4:	8e0f0000 	cdphi	0, 0, cr0, cr15, cr0, {0}
    97f8:	0c000025 	stceq	0, cr0, [r0], {37}	; 0x25
    97fc:	00810f19 	addeq	r0, r1, r9, lsl pc
    9800:	14000000 	strne	r0, [r0], #-0
    9804:	0c007475 	cfstrseq	mvf7, [r0], {117}	; 0x75
    9808:	00750f1a 	rsbseq	r0, r5, sl, lsl pc
    980c:	0f040000 	svceq	0x00040000
    9810:	0000038d 	andeq	r0, r0, sp, lsl #7
    9814:	750f1b0c 	strvc	r1, [pc, #-2828]	; 8d10 <errno+0x8d0c>
    9818:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    981c:	0032c20f 	eorseq	ip, r2, pc, lsl #4
    9820:	0f1c0c00 	svceq	0x001c0c00
    9824:	00000075 	andeq	r0, r0, r5, ror r0
    9828:	d303000c 	movwle	r0, #12300	; 0x300c
    982c:	0c000037 	stceq	0, cr0, [r0], {55}	; 0x37
    9830:	0e6f031d 	mcreq	3, 3, r0, cr15, cr13, {0}
    9834:	5e0c0000 	cdppl	0, 0, cr0, cr12, cr0, {0}
    9838:	cc000004 	stcgt	0, cr0, [r0], {4}
    983c:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    9840:	00000060 	andeq	r0, r0, r0, rrx
    9844:	bc0a0003 	stclt	0, cr0, [sl], {3}
    9848:	0b00000e 	bleq	9888 <errno+0x9884>
    984c:	00001a62 	andeq	r1, r0, r2, ror #20
    9850:	cc1c0e23 	ldcgt	14, cr0, [ip], {35}	; 0x23
    9854:	0500000e 	streq	r0, [r0, #-14]
    9858:	028b7803 	addeq	r7, fp, #196608	; 0x30000
    985c:	24720300 	ldrbtcs	r0, [r2], #-768	; 0xfffffd00
    9860:	100e0000 	andne	r0, lr, r0
    9864:	000eef17 	andeq	lr, lr, r7, lsl pc
    9868:	328d1000 	addcc	r1, sp, #0
    986c:	0e4c0000 	cdpeq	0, 4, cr0, cr12, cr0, {0}
    9870:	080801d3 	stmdaeq	r8, {r0, r1, r4, r6, r7, r8}
    9874:	11000010 	tstne	r0, r0, lsl r0
    9878:	000019a1 	andeq	r1, r0, r1, lsr #19
    987c:	0b01d40e 	bleq	7e8bc <morecore_area+0x358bc>
    9880:	0000048e 	andeq	r0, r0, lr, lsl #9
    9884:	29241100 	stmdbcs	r4!, {r8, ip}
    9888:	d60e0000 	strle	r0, [lr], -r0
    988c:	102f1901 	eorne	r1, pc, r1, lsl #18
    9890:	11040000 	mrsne	r0, (UNDEF: 4)
    9894:	000032db 	ldrdeq	r3, [r0], -fp
    9898:	1901d70e 	stmdbne	r1, {r1, r2, r3, r8, r9, sl, ip, lr, pc}
    989c:	00001065 	andeq	r1, r0, r5, rrx
    98a0:	2dfb1108 	ldfcse	f1, [fp, #32]!
    98a4:	d90e0000 	stmdble	lr, {}	; <UNPREDICTABLE>
    98a8:	10a42201 	adcne	r2, r4, r1, lsl #4
    98ac:	110c0000 	mrsne	r0, (UNDEF: 12)
    98b0:	00002b1c 	andeq	r2, r0, ip, lsl fp
    98b4:	2201db0e 	andcs	sp, r1, #14336	; 0x3800
    98b8:	000010de 	ldrdeq	r1, [r0], -lr
    98bc:	2b0c1110 	blcs	30dd04 <__bss_end__+0x1c4cbc>
    98c0:	dc0e0000 	stcle	0, cr0, [lr], {-0}
    98c4:	111e3201 	tstne	lr, r1, lsl #4
    98c8:	11140000 	tstne	r4, r0
    98cc:	000031e6 	andeq	r3, r0, r6, ror #3
    98d0:	1b01de0e 	blne	81110 <morecore_area+0x38110>
    98d4:	00001163 	andeq	r1, r0, r3, ror #2
    98d8:	28c41118 	stmiacs	r4, {r3, r4, r8, ip}^
    98dc:	df0e0000 	svcle	0x000e0000
    98e0:	119b1901 	orrsne	r1, fp, r1, lsl #18
    98e4:	111c0000 	tstne	ip, r0
    98e8:	00003532 	andeq	r3, r0, r2, lsr r5
    98ec:	2501e10e 	strcs	lr, [r1, #-270]	; 0xfffffef2
    98f0:	000011be 			; <UNDEFINED> instruction: 0x000011be
    98f4:	310e1120 	tstcc	lr, r0, lsr #2
    98f8:	e20e0000 	and	r0, lr, #0
    98fc:	11f92001 	mvnsne	r2, r1
    9900:	11240000 			; <UNDEFINED> instruction: 0x11240000
    9904:	000023a9 	andeq	r2, r0, r9, lsr #7
    9908:	3001e30e 	andcc	lr, r1, lr, lsl #6
    990c:	0000122f 	andeq	r1, r0, pc, lsr #4
    9910:	28261128 	stmdacs	r6!, {r3, r5, r8, ip}
    9914:	e40e0000 	str	r0, [lr], #-0
    9918:	12602001 	rsbne	r2, r0, #1
    991c:	112c0000 			; <UNDEFINED> instruction: 0x112c0000
    9920:	00002312 	andeq	r2, r0, r2, lsl r3
    9924:	2901e50e 	stmdbcs	r1, {r1, r2, r3, r8, sl, sp, lr, pc}
    9928:	00001283 	andeq	r1, r0, r3, lsl #5
    992c:	30aa1130 	adccc	r1, sl, r0, lsr r1
    9930:	e70e0000 	str	r0, [lr, -r0]
    9934:	12a61701 	adcne	r1, r6, #262144	; 0x40000
    9938:	11340000 	teqne	r4, r0
    993c:	000031dd 	ldrdeq	r3, [r0], -sp
    9940:	1801e80e 	stmdane	r1, {r1, r2, r3, fp, sp, lr, pc}
    9944:	00001317 	andeq	r1, r0, r7, lsl r3
    9948:	33fc1138 	mvnscc	r1, #56, 2
    994c:	e90e0000 	stmdb	lr, {}	; <UNPREDICTABLE>
    9950:	12cd1a01 	sbcne	r1, sp, #4096	; 0x1000
    9954:	113c0000 	teqne	ip, r0
    9958:	00002431 	andeq	r2, r0, r1, lsr r4
    995c:	2201eb0e 	andcs	lr, r1, #14336	; 0x3800
    9960:	00001339 	andeq	r1, r0, r9, lsr r3
    9964:	2a351140 	bcs	d4de6c <__bss_end__+0xc04e24>
    9968:	ed0e0000 	stc	0, cr0, [lr, #-0]
    996c:	12f42001 	rscsne	r2, r4, #1
    9970:	11440000 	mrsne	r0, (UNDEF: 68)
    9974:	00002a1d 	andeq	r2, r0, sp, lsl sl
    9978:	0b01ee0e 	bleq	851b8 <morecore_area+0x3c1b8>
    997c:	0000048e 	andeq	r0, r0, lr, lsl #9
    9980:	2b0e0048 	blcs	389aa8 <__bss_end__+0x240a60>
    9984:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    9988:	2310120e 	tstcs	r0, #-536870912	; 0xe0000000
    998c:	14000010 	strne	r0, [r0], #-16
    9990:	00736572 	rsbseq	r6, r3, r2, ror r5
    9994:	8e0b130e 	cdphi	3, 0, cr1, cr11, cr14, {0}
    9998:	00000004 	andeq	r0, r0, r4
    999c:	25db0300 	ldrbcs	r0, [fp, #768]	; 0x300
    99a0:	140e0000 	strne	r0, [lr], #-0
    99a4:	00100803 	andseq	r0, r0, r3, lsl #16
    99a8:	36f90300 	ldrbtcc	r0, [r9], r0, lsl #6
    99ac:	e10e0000 	mrs	r0, (UNDEF: 14)
    99b0:	00103b11 	andseq	r3, r0, r1, lsl fp
    99b4:	41041800 	tstmi	r4, r0, lsl #16
    99b8:	1b000010 	blne	9a00 <errno+0x99fc>
    99bc:	0000048e 	andeq	r0, r0, lr, lsl #9
    99c0:	0000105f 	andeq	r1, r0, pc, asr r0
    99c4:	00105f1c 	andseq	r5, r0, ip, lsl pc
    99c8:	025c1c00 	subseq	r1, ip, #0, 24
    99cc:	521c0000 	andspl	r0, ip, #0
    99d0:	1c000004 	stcne	0, cr0, [r0], {4}
    99d4:	00000452 	andeq	r0, r0, r2, asr r4
    99d8:	e3041800 	movw	r1, #18432	; 0x4800
    99dc:	0300000e 	movweq	r0, #14
    99e0:	00002e69 	andeq	r2, r0, r9, ror #28
    99e4:	7111e40e 	tstvc	r1, lr, lsl #8
    99e8:	18000010 	stmdane	r0, {r4}
    99ec:	00107704 	andseq	r7, r0, r4, lsl #14
    99f0:	048e1b00 	streq	r1, [lr], #2816	; 0xb00
    99f4:	10a40000 	adcne	r0, r4, r0
    99f8:	5f1c0000 	svcpl	0x001c0000
    99fc:	1c000010 	stcne	0, cr0, [r0], {16}
    9a00:	000006e1 	andeq	r0, r0, r1, ror #13
    9a04:	0007ce1c 	andeq	ip, r7, ip, lsl lr
    9a08:	025c1c00 	subseq	r1, ip, #0, 24
    9a0c:	521c0000 	andspl	r0, ip, #0
    9a10:	1c000004 	stcne	0, cr0, [r0], {4}
    9a14:	00000452 	andeq	r0, r0, r2, asr r4
    9a18:	00004d1c 	andeq	r4, r0, ip, lsl sp
    9a1c:	73030000 	movwvc	r0, #12288	; 0x3000
    9a20:	0e000033 	mcreq	0, 0, r0, cr0, cr3, {1}
    9a24:	10b00ffa 	ldrshtne	r0, [r0], sl
    9a28:	04180000 	ldreq	r0, [r8], #-0
    9a2c:	000010b6 	strheq	r1, [r0], -r6
    9a30:	00004d1b 	andeq	r4, r0, fp, lsl sp
    9a34:	0010de00 	andseq	sp, r0, r0, lsl #28
    9a38:	105f1c00 	subsne	r1, pc, r0, lsl #24
    9a3c:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9a40:	1c000004 	stcne	0, cr0, [r0], {4}
    9a44:	00000452 	andeq	r0, r0, r2, asr r4
    9a48:	0004521c 	andeq	r5, r4, ip, lsl r2
    9a4c:	10231c00 	eorne	r1, r3, r0, lsl #24
    9a50:	da1c0000 	ble	709a58 <__bss_end__+0x5c0a10>
    9a54:	00000007 	andeq	r0, r0, r7
    9a58:	002b8a12 	eoreq	r8, fp, r2, lsl sl
    9a5c:	010c0e00 	tsteq	ip, r0, lsl #28
    9a60:	0010eb0f 	andseq	lr, r0, pc, lsl #22
    9a64:	f1041800 			; <UNDEFINED> instruction: 0xf1041800
    9a68:	1b000010 	blne	9ab0 <errno+0x9aac>
    9a6c:	0000004d 	andeq	r0, r0, sp, asr #32
    9a70:	0000111e 	andeq	r1, r0, lr, lsl r1
    9a74:	00105f1c 	andseq	r5, r0, ip, lsl pc
    9a78:	06e11c00 	strbteq	r1, [r1], r0, lsl #24
    9a7c:	ce1c0000 	cdpgt	0, 1, cr0, cr12, cr0, {0}
    9a80:	1c000007 	stcne	0, cr0, [r0], {7}
    9a84:	0000048e 	andeq	r0, r0, lr, lsl #9
    9a88:	0004521c 	andeq	r5, r4, ip, lsl r2
    9a8c:	04521c00 	ldrbeq	r1, [r2], #-3072	; 0xfffff400
    9a90:	231c0000 	tstcs	ip, #0
    9a94:	00000010 	andeq	r0, r0, r0, lsl r0
    9a98:	00232c12 	eoreq	r2, r3, r2, lsl ip
    9a9c:	01220e00 			; <UNDEFINED> instruction: 0x01220e00
    9aa0:	00112b0f 	andseq	r2, r1, pc, lsl #22
    9aa4:	31041800 	tstcc	r4, r0, lsl #16
    9aa8:	1b000011 	blne	9af4 <errno+0x9af0>
    9aac:	0000004d 	andeq	r0, r0, sp, asr #32
    9ab0:	00001163 	andeq	r1, r0, r3, ror #2
    9ab4:	00105f1c 	andseq	r5, r0, ip, lsl pc
    9ab8:	06e11c00 	strbteq	r1, [r1], r0, lsl #24
    9abc:	ce1c0000 	cdpgt	0, 1, cr0, cr12, cr0, {0}
    9ac0:	1c000007 	stcne	0, cr0, [r0], {7}
    9ac4:	0000048e 	andeq	r0, r0, lr, lsl #9
    9ac8:	0004521c 	andeq	r5, r4, ip, lsl r2
    9acc:	04521c00 	ldrbeq	r1, [r2], #-3072	; 0xfffff400
    9ad0:	5c1c0000 	ldcpl	0, cr0, [ip], {-0}
    9ad4:	1c000002 	stcne	0, cr0, [r0], {2}
    9ad8:	00001023 	andeq	r1, r0, r3, lsr #32
    9adc:	38831200 	stmcc	r3, {r9, ip}
    9ae0:	3d0e0000 	stccc	0, cr0, [lr, #-0]
    9ae4:	11701001 	cmnne	r0, r1
    9ae8:	04180000 	ldreq	r0, [r8], #-0
    9aec:	00001176 	andeq	r1, r0, r6, ror r1
    9af0:	0011951d 	andseq	r9, r1, sp, lsl r5
    9af4:	105f1c00 	subsne	r1, pc, r0, lsl #24
    9af8:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9afc:	1c000004 	stcne	0, cr0, [r0], {4}
    9b00:	00000452 	andeq	r0, r0, r2, asr r4
    9b04:	0004521c 	andeq	r5, r4, ip, lsl r2
    9b08:	11951c00 	orrsne	r1, r5, r0, lsl #24
    9b0c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    9b10:	000b9204 	andeq	r9, fp, r4, lsl #4
    9b14:	37e01200 	strbcc	r1, [r0, r0, lsl #4]!
    9b18:	560e0000 	strpl	r0, [lr], -r0
    9b1c:	11a81001 			; <UNDEFINED> instruction: 0x11a81001
    9b20:	04180000 	ldreq	r0, [r8], #-0
    9b24:	000011ae 	andeq	r1, r0, lr, lsr #3
    9b28:	0011be1d 	andseq	fp, r1, sp, lsl lr
    9b2c:	105f1c00 	subsne	r1, pc, r0, lsl #24
    9b30:	951c0000 	ldrls	r0, [ip, #-0]
    9b34:	00000011 	andeq	r0, r0, r1, lsl r0
    9b38:	002ad912 	eoreq	sp, sl, r2, lsl r9
    9b3c:	01650e00 	cmneq	r5, r0, lsl #28
    9b40:	0011cb19 	andseq	ip, r1, r9, lsl fp
    9b44:	d1041800 	tstle	r4, r0, lsl #16
    9b48:	1b000011 	blne	9b94 <errno+0x9b90>
    9b4c:	00001023 	andeq	r1, r0, r3, lsr #32
    9b50:	000011f9 	strdeq	r1, [r0], -r9
    9b54:	00105f1c 	andseq	r5, r0, ip, lsl pc
    9b58:	04521c00 	ldrbeq	r1, [r2], #-3072	; 0xfffff400
    9b5c:	521c0000 	andspl	r0, ip, #0
    9b60:	1c000004 	stcne	0, cr0, [r0], {4}
    9b64:	0000025c 	andeq	r0, r0, ip, asr r2
    9b68:	00004d1c 	andeq	r4, r0, ip, lsl sp
    9b6c:	0da71c00 	stceq	12, cr1, [r7]
    9b70:	12000000 	andne	r0, r0, #0
    9b74:	0000308f 	andeq	r3, r0, pc, lsl #1
    9b78:	1901740e 	stmdbne	r1, {r1, r2, r3, sl, ip, sp, lr}
    9b7c:	00001206 	andeq	r1, r0, r6, lsl #4
    9b80:	120c0418 	andne	r0, ip, #24, 8	; 0x18000000
    9b84:	231b0000 	tstcs	fp, #0
    9b88:	2f000010 	svccs	0x00000010
    9b8c:	1c000012 	stcne	0, cr0, [r0], {18}
    9b90:	0000105f 	andeq	r1, r0, pc, asr r0
    9b94:	00048e1c 	andeq	r8, r4, ip, lsl lr
    9b98:	04521c00 	ldrbeq	r1, [r2], #-3072	; 0xfffff400
    9b9c:	5c1c0000 	ldcpl	0, cr0, [ip], {-0}
    9ba0:	1c000002 	stcne	0, cr0, [r0], {2}
    9ba4:	0000004d 	andeq	r0, r0, sp, asr #32
    9ba8:	2d501200 	lfmcs	f1, 2, [r0, #-0]
    9bac:	840e0000 	strhi	r0, [lr], #-0
    9bb0:	123c1901 	eorsne	r1, ip, #16384	; 0x4000
    9bb4:	04180000 	ldreq	r0, [r8], #-0
    9bb8:	00001242 	andeq	r1, r0, r2, asr #4
    9bbc:	0010231b 	andseq	r2, r0, fp, lsl r3
    9bc0:	00126000 	andseq	r6, r2, r0
    9bc4:	105f1c00 	subsne	r1, pc, r0, lsl #24
    9bc8:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9bcc:	1c000004 	stcne	0, cr0, [r0], {4}
    9bd0:	00000452 	andeq	r0, r0, r2, asr r4
    9bd4:	00004d1c 	andeq	r4, r0, ip, lsl sp
    9bd8:	c5120000 	ldrgt	r0, [r2, #-0]
    9bdc:	0e000035 	mcreq	0, 0, r0, cr0, cr5, {1}
    9be0:	6d10018f 	ldfvss	f0, [r0, #-572]	; 0xfffffdc4
    9be4:	18000012 	stmdane	r0, {r1, r4}
    9be8:	00127304 	andseq	r7, r2, r4, lsl #6
    9bec:	12831d00 	addne	r1, r3, #0, 26
    9bf0:	5f1c0000 	svcpl	0x001c0000
    9bf4:	1c000010 	stcne	0, cr0, [r0], {16}
    9bf8:	00001023 	andeq	r1, r0, r3, lsr #32
    9bfc:	29ae1200 	stmibcs	lr!, {r9, ip}
    9c00:	990e0000 	stmdbls	lr, {}	; <UNPREDICTABLE>
    9c04:	12901001 	addsne	r1, r0, #1
    9c08:	04180000 	ldreq	r0, [r8], #-0
    9c0c:	00001296 	muleq	r0, r6, r2
    9c10:	0012a61d 	andseq	sl, r2, sp, lsl r6
    9c14:	105f1c00 	subsne	r1, pc, r0, lsl #24
    9c18:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9c1c:	00000004 	andeq	r0, r0, r4
    9c20:	00237e12 	eoreq	r7, r3, r2, lsl lr
    9c24:	01a40e00 			; <UNDEFINED> instruction: 0x01a40e00
    9c28:	0012b314 	andseq	fp, r2, r4, lsl r3
    9c2c:	b9041800 	stmdblt	r4, {fp, ip}
    9c30:	1b000012 	blne	9c80 <errno+0x9c7c>
    9c34:	00000081 	andeq	r0, r0, r1, lsl #1
    9c38:	000012cd 	andeq	r1, r0, sp, asr #5
    9c3c:	00105f1c 	andseq	r5, r0, ip, lsl pc
    9c40:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    9c44:	12000000 	andne	r0, r0, #0
    9c48:	00003407 	andeq	r3, r0, r7, lsl #8
    9c4c:	1501ae0e 	strne	sl, [r1, #-3598]	; 0xfffff1f2
    9c50:	000012da 	ldrdeq	r1, [r0], -sl
    9c54:	12e00418 	rscne	r0, r0, #24, 8	; 0x18000000
    9c58:	6a1b0000 	bvs	6c9c60 <__bss_end__+0x580c18>
    9c5c:	f4000004 	vst4.8	{d0-d3}, [r0], r4
    9c60:	1c000012 	stcne	0, cr0, [r0], {18}
    9c64:	0000105f 	andeq	r1, r0, pc, asr r0
    9c68:	00048e1c 	andeq	r8, r4, ip, lsl lr
    9c6c:	7f120000 	svcvc	0x00120000
    9c70:	0e000035 	mcreq	0, 0, r0, cr0, cr5, {1}
    9c74:	011001bb 			; <UNDEFINED> instruction: 0x011001bb
    9c78:	18000013 	stmdane	r0, {r0, r1, r4}
    9c7c:	00130704 	andseq	r0, r3, r4, lsl #14
    9c80:	13171d00 	tstne	r7, #0, 26
    9c84:	8e1c0000 	cdphi	0, 1, cr0, cr12, cr0, {0}
    9c88:	1c000004 	stcne	0, cr0, [r0], {4}
    9c8c:	00000eb0 			; <UNDEFINED> instruction: 0x00000eb0
    9c90:	26f81200 	ldrbtcs	r1, [r8], r0, lsl #4
    9c94:	bf0e0000 	svclt	0x000e0000
    9c98:	13241401 			; <UNDEFINED> instruction: 0x13241401
    9c9c:	04180000 	ldreq	r0, [r8], #-0
    9ca0:	0000132a 	andeq	r1, r0, sl, lsr #6
    9ca4:	0000811b 	andeq	r8, r0, fp, lsl r1
    9ca8:	00133900 	andseq	r3, r3, r0, lsl #18
    9cac:	105f1c00 	subsne	r1, pc, r0, lsl #24
    9cb0:	12000000 	andne	r0, r0, #0
    9cb4:	000024ac 	andeq	r2, r0, ip, lsr #9
    9cb8:	0f01cf0e 	svceq	0x0001cf0e
    9cbc:	00001346 	andeq	r1, r0, r6, asr #6
    9cc0:	134c0418 	movtne	r0, #50200	; 0xc418
    9cc4:	4d1b0000 	ldcmi	0, cr0, [fp, #-0]
    9cc8:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
    9ccc:	1c000013 	stcne	0, cr0, [r0], {19}
    9cd0:	0000105f 	andeq	r1, r0, pc, asr r0
    9cd4:	00105f1c 	andseq	r5, r0, ip, lsl pc
    9cd8:	048e1c00 	streq	r1, [lr], #3072	; 0xc00
    9cdc:	4d1c0000 	ldcmi	0, cr0, [ip, #-0]
    9ce0:	1c000000 	stcne	0, cr0, [r0], {-0}
    9ce4:	00000452 	andeq	r0, r0, r2, asr r4
    9ce8:	00048e1c 	andeq	r8, r4, ip, lsl lr
    9cec:	10231c00 	eorne	r1, r3, r0, lsl #24
    9cf0:	24000000 	strcs	r0, [r0], #-0
    9cf4:	00003915 	andeq	r3, r0, r5, lsl r9
    9cf8:	8e07340f 	cdphi	4, 0, cr3, cr7, cr15, {0}
    9cfc:	e8000004 	stmda	r0, {r2}
    9d00:	14000180 	strne	r0, [r0], #-384	; 0xfffffe80
    9d04:	01000001 	tsteq	r0, r1
    9d08:	00140c9c 	mulseq	r4, ip, ip
    9d0c:	6b762500 	blvs	1d93114 <__bss_end__+0x1c4a0cc>
    9d10:	340f0061 	strcc	r0, [pc], #-97	; 9d18 <errno+0x9d14>
    9d14:	0011952b 	andseq	r9, r1, fp, lsr #10
    9d18:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    9d1c:	00328d26 	eorseq	r8, r2, r6, lsr #26
    9d20:	3a340f00 	bcc	d0d928 <__bss_end__+0xbc48e0>
    9d24:	0000105f 	andeq	r1, r0, pc, asr r0
    9d28:	26609102 	strbtcs	r9, [r0], -r2, lsl #2
    9d2c:	000033c6 	andeq	r3, r0, r6, asr #7
    9d30:	6a4c340f 	bvs	1316d74 <__bss_end__+0x11cdd2c>
    9d34:	02000004 	andeq	r0, r0, #4
    9d38:	c2265c91 	eorgt	r5, r6, #37120	; 0x9100
    9d3c:	0f000032 	svceq	0x00000032
    9d40:	04525a34 	ldrbeq	r5, [r2], #-2612	; 0xfffff5cc
    9d44:	91020000 	mrsls	r0, (UNDEF: 2)
    9d48:	39c92658 	stmibcc	r9, {r3, r4, r6, r9, sl, sp}^
    9d4c:	340f0000 	strcc	r0, [pc], #-0	; 9d54 <errno+0x9d50>
    9d50:	00140c73 	andseq	r0, r4, r3, ror ip
    9d54:	00910200 	addseq	r0, r1, r0, lsl #4
    9d58:	003fed0b 	eorseq	lr, pc, fp, lsl #26
    9d5c:	09360f00 	ldmdbeq	r6!, {r8, r9, sl, fp}
    9d60:	0000004d 	andeq	r0, r0, sp, asr #32
    9d64:	0b6c9102 	bleq	1b2e174 <__bss_end__+0x19e512c>
    9d68:	000026b0 			; <UNDEFINED> instruction: 0x000026b0
    9d6c:	8e0b3b0f 	vmlahi.f64	d3, d11, d15
    9d70:	02000004 	andeq	r0, r0, #4
    9d74:	b6276891 			; <UNDEFINED> instruction: 0xb6276891
    9d78:	2200001a 	andcs	r0, r0, #26
    9d7c:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    9d80:	028f2003 	addeq	r2, pc, #3
    9d84:	04180000 	ldreq	r0, [r8], #-0
    9d88:	00000eb0 			; <UNDEFINED> instruction: 0x00000eb0
    9d8c:	0004b50c 	andeq	fp, r4, ip, lsl #10
    9d90:	00142200 	andseq	r2, r4, r0, lsl #4
    9d94:	00600d00 	rsbeq	r0, r0, r0, lsl #26
    9d98:	001c0000 	andseq	r0, ip, r0
    9d9c:	0014120a 	andseq	r1, r4, sl, lsl #4
    9da0:	38e32400 	stmiacc	r3!, {sl, sp}^
    9da4:	290f0000 	stmdbcs	pc, {}	; <UNPREDICTABLE>
    9da8:	0002000c 	andeq	r0, r2, ip
    9dac:	01804c00 	orreq	r4, r0, r0, lsl #24
    9db0:	00009c00 	andeq	r9, r0, r0, lsl #24
    9db4:	9c9c0100 	ldflss	f0, [ip], {0}
    9db8:	25000014 	strcs	r0, [r0, #-20]	; 0xffffffec
    9dbc:	00616b76 	rsbeq	r6, r1, r6, ror fp
    9dc0:	9532290f 	ldrls	r2, [r2, #-2319]!	; 0xfffff6f1
    9dc4:	02000011 	andeq	r0, r0, #17
    9dc8:	c6266c91 			; <UNDEFINED> instruction: 0xc6266c91
    9dcc:	0f000033 	svceq	0x00000033
    9dd0:	046a4129 	strbteq	r4, [sl], #-297	; 0xfffffed7
    9dd4:	91020000 	mrsls	r0, (UNDEF: 2)
    9dd8:	32c22668 	sbccc	r2, r2, #104, 12	; 0x6800000
    9ddc:	290f0000 	stmdbcs	pc, {}	; <UNPREDICTABLE>
    9de0:	0004524f 	andeq	r5, r4, pc, asr #4
    9de4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    9de8:	0039c926 	eorseq	ip, r9, r6, lsr #18
    9dec:	68290f00 	stmdavs	r9!, {r8, r9, sl, fp}
    9df0:	0000140c 	andeq	r1, r0, ip, lsl #8
    9df4:	0b609102 	bleq	182e204 <__bss_end__+0x16e51bc>
    9df8:	00003fed 	andeq	r3, r0, sp, ror #31
    9dfc:	4d092c0f 	stcmi	12, cr2, [r9, #-60]	; 0xffffffc4
    9e00:	02000000 	andeq	r0, r0, #0
    9e04:	b6277491 			; <UNDEFINED> instruction: 0xb6277491
    9e08:	ac00001a 	stcge	0, cr0, [r0], {26}
    9e0c:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    9e10:	028e8c03 	addeq	r8, lr, #768	; 0x300
    9e14:	b50c0000 	strlt	r0, [ip, #-0]
    9e18:	ac000004 	stcge	0, cr0, [r0], {4}
    9e1c:	0d000014 	stceq	0, cr0, [r0, #-80]	; 0xffffffb0
    9e20:	00000060 	andeq	r0, r0, r0, rrx
    9e24:	9c0a001e 	stcls	0, cr0, [sl], {30}
    9e28:	24000014 	strcs	r0, [r0], #-20	; 0xffffffec
    9e2c:	00003943 	andeq	r3, r0, r3, asr #18
    9e30:	000c0f0f 	andeq	r0, ip, pc, lsl #30
    9e34:	a4000002 	strge	r0, [r0], #-2
    9e38:	a800017e 	stmdage	r0, {r1, r2, r3, r4, r5, r6, r8}
    9e3c:	01000001 	tsteq	r0, r1
    9e40:	0015359c 	mulseq	r5, ip, r5
    9e44:	6b762500 	blvs	1d9324c <__bss_end__+0x1c4a204>
    9e48:	0f0f0061 	svceq	0x000f0061
    9e4c:	00119530 	andseq	r9, r1, r0, lsr r5
    9e50:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    9e54:	00281f26 	eoreq	r1, r8, r6, lsr #30
    9e58:	3f0f0f00 	svccc	0x000f0f00
    9e5c:	00001535 	andeq	r1, r0, r5, lsr r5
    9e60:	25609102 	strbcs	r9, [r0, #-258]!	; 0xfffffefe
    9e64:	00717269 	rsbseq	r7, r1, r9, ror #4
    9e68:	3b510f0f 	blcc	144daac <__bss_end__+0x1304a64>
    9e6c:	02000015 	andeq	r0, r0, #21
    9e70:	20265c91 	mlacs	r6, r1, ip, r5
    9e74:	0f00000c 	svceq	0x0000000c
    9e78:	067b640f 	ldrbteq	r6, [fp], -pc, lsl #8
    9e7c:	91020000 	mrsls	r0, (UNDEF: 2)
    9e80:	61632858 	cmnvs	r3, r8, asr r8
    9e84:	110f0070 	tstne	pc, r0, ror r0	; <UNPREDICTABLE>
    9e88:	0000810f 	andeq	r8, r0, pc, lsl #2
    9e8c:	68910200 	ldmvs	r1, {r9}
    9e90:	003fed0b 	eorseq	lr, pc, fp, lsl #26
    9e94:	09140f00 	ldmdbeq	r4, {r8, r9, sl, fp}
    9e98:	0000004d 	andeq	r0, r0, sp, asr #32
    9e9c:	276c9102 	strbcs	r9, [ip, -r2, lsl #2]!
    9ea0:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    9ea4:	00001422 	andeq	r1, r0, r2, lsr #8
    9ea8:	8e000305 	cdphi	3, 0, cr0, cr0, cr5, {0}
    9eac:	18000002 	stmdane	r0, {r1}
    9eb0:	00098904 	andeq	r8, r9, r4, lsl #18
    9eb4:	64041800 	strvs	r1, [r4], #-2048	; 0xfffff800
    9eb8:	2900000d 	stmdbcs	r0, {r0, r2, r3}
    9ebc:	000032d4 	ldrdeq	r3, [r0], -r4
    9ec0:	1502250e 	strne	r2, [r2, #-1294]	; 0xfffffaf2
    9ec4:	0000048e 	andeq	r0, r0, lr, lsl #9
    9ec8:	00017cc8 	andeq	r7, r1, r8, asr #25
    9ecc:	000001dc 	ldrdeq	r0, [r0], -ip
    9ed0:	15dc9c01 	ldrbne	r9, [ip, #3073]	; 0xc01
    9ed4:	8d2a0000 	stchi	0, cr0, [sl, #-0]
    9ed8:	0e000032 	mcreq	0, 0, r0, cr0, cr2, {1}
    9edc:	5f300225 	svcpl	0x00300225
    9ee0:	02000010 	andeq	r0, r0, #16
    9ee4:	462a6c91 			; <UNDEFINED> instruction: 0x462a6c91
    9ee8:	0e00002a 	cdpeq	0, 0, cr0, cr0, cr10, {1}
    9eec:	e1420225 	cmp	r2, r5, lsr #4
    9ef0:	02000006 	andeq	r0, r0, #6
    9ef4:	cc2a6891 	stcgt	8, cr6, [sl], #-580	; 0xfffffdbc
    9ef8:	0e000032 	mcreq	0, 0, r0, cr0, cr2, {1}
    9efc:	ce540225 	cdpgt	2, 5, cr0, cr4, cr5, {1}
    9f00:	02000007 	andeq	r0, r0, #7
    9f04:	e12a6491 			; <UNDEFINED> instruction: 0xe12a6491
    9f08:	0e000024 	cdpeq	0, 0, cr0, cr0, cr4, {1}
    9f0c:	5c370226 	lfmpl	f0, 4, [r7], #-152	; 0xffffff68
    9f10:	02000002 	andeq	r0, r0, #2
    9f14:	632a6091 			; <UNDEFINED> instruction: 0x632a6091
    9f18:	0e000029 	cdpeq	0, 0, cr0, cr0, cr9, {1}
    9f1c:	52460226 	subpl	r0, r6, #1610612738	; 0x60000002
    9f20:	02000004 	andeq	r0, r0, #4
    9f24:	c22a0091 	eorgt	r0, sl, #145	; 0x91
    9f28:	0e000032 	mcreq	0, 0, r0, cr0, cr2, {1}
    9f2c:	52580226 	subspl	r0, r8, #1610612738	; 0x60000002
    9f30:	02000004 	andeq	r0, r0, #4
    9f34:	842a0491 	strthi	r0, [sl], #-1169	; 0xfffffb6f
    9f38:	0e000025 	cdpeq	0, 0, cr0, cr0, cr5, {1}
    9f3c:	4d2a0227 	sfmmi	f0, 4, [sl, #-156]!	; 0xffffff64
    9f40:	02000000 	andeq	r0, r0, #0
    9f44:	b6270891 			; <UNDEFINED> instruction: 0xb6270891
    9f48:	ec00001a 	stc	0, cr0, [r0], {26}
    9f4c:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    9f50:	028f5403 	addeq	r5, pc, #50331648	; 0x3000000
    9f54:	b50c0000 	strlt	r0, [ip, #-0]
    9f58:	ec000004 	stc	0, cr0, [r0], {4}
    9f5c:	0d000015 	stceq	0, cr0, [r0, #-84]	; 0xffffffac
    9f60:	00000060 	andeq	r0, r0, r0, rrx
    9f64:	dc0a0010 	stcle	0, cr0, [sl], {16}
    9f68:	2b000015 	blcs	9fc4 <errno+0x9fc0>
    9f6c:	000032b7 			; <UNDEFINED> instruction: 0x000032b7
    9f70:	da01120d 	ble	4e7ac <morecore_area+0x57ac>
    9f74:	ec000007 	stc	0, cr0, [r0], {7}
    9f78:	dc00017b 	stfles	f0, [r0], {123}	; 0x7b
    9f7c:	01000000 	mrseq	r0, (UNDEF: 0)
    9f80:	0016419c 	mulseq	r6, ip, r1
    9f84:	32c22600 	sbccc	r2, r2, #0, 12
    9f88:	120d0000 	andne	r0, sp, #0
    9f8c:	0004521d 	andeq	r5, r4, sp, lsl r2
    9f90:	6c910200 	lfmvs	f0, 4, [r1], {0}
    9f94:	001ab627 	andseq	fp, sl, r7, lsr #12
    9f98:	00165100 	andseq	r5, r6, r0, lsl #2
    9f9c:	68030500 	stmdavs	r3, {r8, sl}
    9fa0:	2c00028f 	sfmcs	f0, 4, [r0], {143}	; 0x8f
    9fa4:	00017bfc 	strdeq	r7, [r1], -ip
    9fa8:	000000bc 	strheq	r0, [r0], -ip
    9fac:	0d006928 	vstreq.16	s12, [r0, #-80]	; 0xffffffb0	; <UNPREDICTABLE>
    9fb0:	004d0e14 	subeq	r0, sp, r4, lsl lr
    9fb4:	91020000 	mrsls	r0, (UNDEF: 2)
    9fb8:	0c000074 	stceq	0, cr0, [r0], {116}	; 0x74
    9fbc:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    9fc0:	00001651 	andeq	r1, r0, r1, asr r6
    9fc4:	0000600d 	andeq	r6, r0, sp
    9fc8:	0a001400 	beq	efd0 <errno+0xefcc>
    9fcc:	00001641 	andeq	r1, r0, r1, asr #12
    9fd0:	0039022b 	eorseq	r0, r9, fp, lsr #4
    9fd4:	13d40c00 	bicsne	r0, r4, #0, 24
    9fd8:	0000004d 	andeq	r0, r0, sp, asr #32
    9fdc:	00017b98 	muleq	r1, r8, fp
    9fe0:	00000054 	andeq	r0, r0, r4, asr r0
    9fe4:	16ad9c01 	strtne	r9, [sp], r1, lsl #24
    9fe8:	76250000 	strtvc	r0, [r5], -r0
    9fec:	0c00616b 	stfeqs	f6, [r0], {107}	; 0x6b
    9ff0:	11952dd4 			; <UNDEFINED> instruction: 0x11952dd4
    9ff4:	91020000 	mrsls	r0, (UNDEF: 2)
    9ff8:	32c22674 	sbccc	r2, r2, #116, 12	; 0x7400000
    9ffc:	d40c0000 	strle	r0, [ip], #-0
    a000:	0004823b 	andeq	r8, r4, fp, lsr r2
    a004:	70910200 	addsvc	r0, r1, r0, lsl #4
    a008:	0033c626 	eorseq	ip, r3, r6, lsr #12
    a00c:	50d40c00 	sbcspl	r0, r4, r0, lsl #24
    a010:	0000046a 	andeq	r0, r0, sl, ror #8
    a014:	266c9102 	strbtcs	r9, [ip], -r2, lsl #2
    a018:	000017b3 			; <UNDEFINED> instruction: 0x000017b3
    a01c:	0c34d50c 	cfldr32eq	mvfx13, [r4], #-48	; 0xffffffd0
    a020:	02000014 	andeq	r0, r0, #20
    a024:	2d006891 	stccs	8, cr6, [r0, #-580]	; 0xfffffdbc
    a028:	000039ae 	andeq	r3, r0, lr, lsr #19
    a02c:	bc14660c 	ldclt	6, cr6, [r4], {12}
    a030:	dc00017a 	stfles	f0, [r0], {122}	; 0x7a
    a034:	01000000 	mrseq	r0, (UNDEF: 0)
    a038:	0017009c 	mulseq	r7, ip, r0
    a03c:	6b762500 	blvs	1d93444 <__bss_end__+0x1c4a3fc>
    a040:	660c0061 	strvs	r0, [ip], -r1, rrx
    a044:	0011952b 	andseq	r9, r1, fp, lsr #10
    a048:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    a04c:	00344926 	eorseq	r4, r4, r6, lsr #18
    a050:	3e660c00 	cdpcc	12, 6, cr0, cr6, cr0, {0}
    a054:	0000140c 	andeq	r1, r0, ip, lsl #8
    a058:	0b509102 	bleq	142e468 <__bss_end__+0x12e5420>
    a05c:	00003202 	andeq	r3, r0, r2, lsl #4
    a060:	6b12680c 	blvs	4a4098 <__bss_end__+0x35b050>
    a064:	02000005 	andeq	r0, r0, #5
    a068:	b6275c91 			; <UNDEFINED> instruction: 0xb6275c91
    a06c:	1000001a 	andne	r0, r0, sl, lsl r0
    a070:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    a074:	028f8003 	addeq	r8, pc, #3
    a078:	b50c0000 	strlt	r0, [ip, #-0]
    a07c:	10000004 	andne	r0, r0, r4
    a080:	0d000017 	stceq	0, cr0, [r0, #-92]	; 0xffffffa4
    a084:	00000060 	andeq	r0, r0, r0, rrx
    a088:	000a000f 	andeq	r0, sl, pc
    a08c:	2b000017 	blcs	a0f0 <errno+0xa0ec>
    a090:	0000397a 	andeq	r3, r0, sl, ror r9
    a094:	4d13530c 	ldcmi	3, cr5, [r3, #-48]	; 0xffffffd0
    a098:	6c000000 	stcvs	0, cr0, [r0], {-0}
    a09c:	5000017a 	andpl	r0, r0, sl, ror r1
    a0a0:	01000000 	mrseq	r0, (UNDEF: 0)
    a0a4:	00177b9c 	mulseq	r7, ip, fp
    a0a8:	6b762500 	blvs	1d934b0 <__bss_end__+0x1c4a468>
    a0ac:	530c0061 	movwpl	r0, #49249	; 0xc061
    a0b0:	0011952e 	andseq	r9, r1, lr, lsr #10
    a0b4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a0b8:	00038d26 	andeq	r8, r3, r6, lsr #26
    a0bc:	3d530c00 	ldclcc	12, cr0, [r3, #-0]
    a0c0:	00000075 	andeq	r0, r0, r5, ror r0
    a0c4:	26709102 	ldrbtcs	r9, [r0], -r2, lsl #2
    a0c8:	000032c2 	andeq	r3, r0, r2, asr #5
    a0cc:	754d530c 	strbvc	r5, [sp, #-780]	; 0xfffffcf4
    a0d0:	02000000 	andeq	r0, r0, #0
    a0d4:	c6266c91 			; <UNDEFINED> instruction: 0xc6266c91
    a0d8:	0c000033 	stceq	0, cr0, [r0], {51}	; 0x33
    a0dc:	046a6253 	strbteq	r6, [sl], #-595	; 0xfffffdad
    a0e0:	91020000 	mrsls	r0, (UNDEF: 2)
    a0e4:	17b32668 	ldrne	r2, [r3, r8, ror #12]!
    a0e8:	540c0000 	strpl	r0, [ip], #-0
    a0ec:	00140c35 	andseq	r0, r4, r5, lsr ip
    a0f0:	00910200 	addseq	r0, r1, r0, lsl #4
    a0f4:	39cf2b00 	stmibcc	pc, {r8, r9, fp, sp}^	; <UNPREDICTABLE>
    a0f8:	220c0000 	andcs	r0, ip, #0
    a0fc:	00004d13 	andeq	r4, r0, r3, lsl sp
    a100:	01775800 	cmneq	r7, r0, lsl #16
    a104:	00031400 	andeq	r1, r3, r0, lsl #8
    a108:	299c0100 	ldmibcs	ip, {r8}
    a10c:	25000018 	strcs	r0, [r0, #-24]	; 0xffffffe8
    a110:	00616b76 	rsbeq	r6, r1, r6, ror fp
    a114:	9538220c 	ldrls	r2, [r8, #-524]!	; 0xfffffdf4
    a118:	02000011 	andeq	r0, r0, #17
    a11c:	8d265491 	cfstrshi	mvf5, [r6, #-580]!	; 0xfffffdbc
    a120:	0c000003 	stceq	0, cr0, [r0], {3}
    a124:	00754722 	rsbseq	r4, r5, r2, lsr #14
    a128:	91020000 	mrsls	r0, (UNDEF: 2)
    a12c:	32c22650 	sbccc	r2, r2, #80, 12	; 0x5000000
    a130:	220c0000 	andcs	r0, ip, #0
    a134:	00007557 	andeq	r7, r0, r7, asr r5
    a138:	4c910200 	lfmmi	f0, 4, [r1], {0}
    a13c:	0033c626 	eorseq	ip, r3, r6, lsr #12
    a140:	6c220c00 	stcvs	12, cr0, [r2], #-0
    a144:	0000046a 	andeq	r0, r0, sl, ror #8
    a148:	26489102 	strbcs	r9, [r8], -r2, lsl #2
    a14c:	00003a1b 	andeq	r3, r0, fp, lsl sl
    a150:	da36230c 	ble	d92d88 <__bss_end__+0xc49d40>
    a154:	02000007 	andeq	r0, r0, #7
    a158:	b3260091 			; <UNDEFINED> instruction: 0xb3260091
    a15c:	0c000017 	stceq	0, cr0, [r0], {23}
    a160:	140c5123 	strne	r5, [ip], #-291	; 0xfffffedd
    a164:	91020000 	mrsls	r0, (UNDEF: 2)
    a168:	3fed0b04 	svccc	0x00ed0b04
    a16c:	250c0000 	strcs	r0, [ip, #-0]
    a170:	00004d09 	andeq	r4, r0, r9, lsl #26
    a174:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a178:	001ab627 	andseq	fp, sl, r7, lsr #12
    a17c:	00183900 	andseq	r3, r8, r0, lsl #18
    a180:	c8030500 	stmdagt	r3, {r8, sl}
    a184:	2e00028e 	cdpcs	2, 0, cr0, cr0, cr14, {4}
    a188:	00003fed 	andeq	r3, r0, sp, ror #31
    a18c:	28014a0c 	stmdacs	r1, {r2, r3, r9, fp, lr}
    a190:	0b00017a 	bleq	a780 <errno+0xa77c>
    a194:	00003202 	andeq	r3, r0, r2, lsl #4
    a198:	6b12330c 	blvs	496dd0 <__bss_end__+0x34dd88>
    a19c:	02000005 	andeq	r0, r0, #5
    a1a0:	0c005891 	stceq	8, cr5, [r0], {145}	; 0x91
    a1a4:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    a1a8:	00001839 	andeq	r1, r0, r9, lsr r8
    a1ac:	0000600d 	andeq	r6, r0, sp
    a1b0:	0a001d00 	beq	115b8 <__sel4runtime_memset+0xd0>
    a1b4:	00001829 	andeq	r1, r0, r9, lsr #16
    a1b8:	0039692b 	eorseq	r6, r9, fp, lsr #18
    a1bc:	194c0b00 	stmdbne	ip, {r8, r9, fp}^
    a1c0:	00000075 	andeq	r0, r0, r5, ror r0
    a1c4:	000176cc 	andeq	r7, r1, ip, asr #13
    a1c8:	0000008c 	andeq	r0, r0, ip, lsl #1
    a1cc:	18779c01 	ldmdane	r7!, {r0, sl, fp, ip, pc}^
    a1d0:	8d260000 	stchi	0, cr0, [r6, #-0]
    a1d4:	0b000003 	bleq	a1e8 <errno+0xa1e4>
    a1d8:	0dcc344c 	cfstrdeq	mvd3, [ip, #304]	; 0x130
    a1dc:	91020000 	mrsls	r0, (UNDEF: 2)
    a1e0:	39be2674 	ldmibcc	lr!, {r2, r4, r5, r6, r9, sl, sp}
    a1e4:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
    a1e8:	00007544 	andeq	r7, r0, r4, asr #10
    a1ec:	70910200 	addsvc	r0, r1, r0, lsl #4
    a1f0:	3a552b00 	bcc	1554df8 <__bss_end__+0x140bdb0>
    a1f4:	2b0a0000 	blcs	28a1fc <__bss_end__+0x1411b4>
    a1f8:	00007519 	andeq	r7, r0, r9, lsl r5
    a1fc:	01761c00 	cmneq	r6, r0, lsl #24
    a200:	0000b000 	andeq	fp, r0, r0
    a204:	b09c0100 	addslt	r0, ip, r0, lsl #2
    a208:	26000018 			; <UNDEFINED> instruction: 0x26000018
    a20c:	0000038d 	andeq	r0, r0, sp, lsl #7
    a210:	cc392b0a 			; <UNDEFINED> instruction: 0xcc392b0a
    a214:	0200000d 	andeq	r0, r0, #13
    a218:	be267491 	mcrlt	4, 1, r7, cr6, cr1, {4}
    a21c:	0a000039 	beq	a308 <errno+0xa304>
    a220:	0075492b 	rsbseq	r4, r5, fp, lsr #18
    a224:	91020000 	mrsls	r0, (UNDEF: 2)
    a228:	602b0070 	eorvs	r0, fp, r0, ror r0
    a22c:	09000039 	stmdbeq	r0, {r0, r3, r4, r5}
    a230:	0075192d 	rsbseq	r1, r5, sp, lsr #18
    a234:	75740000 	ldrbvc	r0, [r4, #-0]!
    a238:	00a80001 	adceq	r0, r8, r1
    a23c:	9c010000 	stcls	0, cr0, [r1], {-0}
    a240:	000018f8 	strdeq	r1, [r0], -r8
    a244:	00038d26 	andeq	r8, r3, r6, lsr #26
    a248:	3d2d0900 			; <UNDEFINED> instruction: 0x3d2d0900
    a24c:	00000dcc 	andeq	r0, r0, ip, asr #27
    a250:	26749102 	ldrbtcs	r9, [r4], -r2, lsl #2
    a254:	000039be 			; <UNDEFINED> instruction: 0x000039be
    a258:	754d2d09 	strbvc	r2, [sp, #-3337]	; 0xfffff2f7
    a25c:	02000000 	andeq	r0, r0, #0
    a260:	b6277091 			; <UNDEFINED> instruction: 0xb6277091
    a264:	0800001a 	stmdaeq	r0, {r1, r3, r4}
    a268:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    a26c:	028eac03 	addeq	sl, lr, #768	; 0x300
    a270:	b50c0000 	strlt	r0, [ip, #-0]
    a274:	08000004 	stmdaeq	r0, {r2}
    a278:	0d000019 	stceq	0, cr0, [r0, #-100]	; 0xffffff9c
    a27c:	00000060 	andeq	r0, r0, r0, rrx
    a280:	f80a0019 			; <UNDEFINED> instruction: 0xf80a0019
    a284:	2f000018 	svccs	0x00000018
    a288:	00003a6b 	andeq	r3, r0, fp, ror #20
    a28c:	14011008 	strne	r1, [r1], #-8
    a290:	00017460 	andeq	r7, r1, r0, ror #8
    a294:	00000114 	andeq	r0, r0, r4, lsl r1
    a298:	19749c01 	ldmdbne	r4!, {r0, sl, fp, ip, pc}^
    a29c:	76300000 	ldrtvc	r0, [r0], -r0
    a2a0:	0800616b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r8, sp, lr}
    a2a4:	952c0110 	strls	r0, [ip, #-272]!	; 0xfffffef0
    a2a8:	02000011 	andeq	r0, r0, #17
    a2ac:	8d2a6c91 	stchi	12, cr6, [sl, #-580]!	; 0xfffffdbc
    a2b0:	08000003 	stmdaeq	r0, {r0, r1}
    a2b4:	753b0110 	ldrvc	r0, [fp, #-272]!	; 0xfffffef0
    a2b8:	02000000 	andeq	r0, r0, #0
    a2bc:	c22a6891 	eorgt	r6, sl, #9502720	; 0x910000
    a2c0:	08000032 	stmdaeq	r0, {r1, r4, r5}
    a2c4:	754b0110 	strbvc	r0, [fp, #-272]	; 0xfffffef0
    a2c8:	02000000 	andeq	r0, r0, #0
    a2cc:	a72a6491 			; <UNDEFINED> instruction: 0xa72a6491
    a2d0:	08000039 	stmdaeq	r0, {r0, r3, r4, r5}
    a2d4:	75600110 	strbvc	r0, [r0, #-272]!	; 0xfffffef0
    a2d8:	02000000 	andeq	r0, r0, #0
    a2dc:	b6276091 			; <UNDEFINED> instruction: 0xb6276091
    a2e0:	ec00001a 	stc	0, cr0, [r0], {26}
    a2e4:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    a2e8:	028fa803 	addeq	sl, pc, #196608	; 0x30000
    a2ec:	b52b0000 	strlt	r0, [fp, #-0]!
    a2f0:	08000038 	stmdaeq	r0, {r3, r4, r5}
    a2f4:	004d13fd 	strdeq	r1, [sp], #-61	; 0xffffffc3
    a2f8:	72f80000 	rscsvc	r0, r8, #0
    a2fc:	01680001 	cmneq	r8, r1
    a300:	9c010000 	stcls	0, cr0, [r1], {-0}
    a304:	000019f8 	strdeq	r1, [r0], -r8
    a308:	616b7625 	cmnvs	fp, r5, lsr #12
    a30c:	2ffd0800 	svccs	0x00fd0800
    a310:	00001195 	muleq	r0, r5, r1
    a314:	266c9102 	strbtcs	r9, [ip], -r2, lsl #2
    a318:	00000c20 	andeq	r0, r0, r0, lsr #24
    a31c:	3948fd08 	stmdbcc	r8, {r3, r8, sl, fp, ip, sp, lr, pc}^
    a320:	0200000a 	andeq	r0, r0, #10
    a324:	8d266891 	stchi	8, cr6, [r6, #-580]!	; 0xfffffdbc
    a328:	08000003 	stmdaeq	r0, {r0, r1}
    a32c:	007558fd 	ldrshteq	r5, [r5], #-141	; 0xffffff73
    a330:	91020000 	mrsls	r0, (UNDEF: 2)
    a334:	32c22664 	sbccc	r2, r2, #100, 12	; 0x6400000
    a338:	fd080000 	stc2	0, cr0, [r8, #-0]
    a33c:	00007568 	andeq	r7, r0, r8, ror #10
    a340:	60910200 	addsvs	r0, r1, r0, lsl #4
    a344:	0033c626 	eorseq	ip, r3, r6, lsr #12
    a348:	32fe0800 	rscscc	r0, lr, #0, 16
    a34c:	0000046a 	andeq	r0, r0, sl, ror #8
    a350:	26009102 	strcs	r9, [r0], -r2, lsl #2
    a354:	00002a2e 	andeq	r2, r0, lr, lsr #20
    a358:	e744fe08 	strb	pc, [r4, -r8, lsl #28]	; <UNPREDICTABLE>
    a35c:	02000006 	andeq	r0, r0, #6
    a360:	b6270491 			; <UNDEFINED> instruction: 0xb6270491
    a364:	5100001a 	tstpl	r0, sl, lsl r0
    a368:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    a36c:	028f0803 	addeq	r0, pc, #196608	; 0x30000
    a370:	7c2b0000 	stcvc	0, cr0, [fp], #-0
    a374:	0800003a 	stmdaeq	r0, {r1, r3, r4, r5}
    a378:	004d13e8 	subeq	r1, sp, r8, ror #7
    a37c:	71900000 	orrsvc	r0, r0, r0
    a380:	01680001 	cmneq	r8, r1
    a384:	9c010000 	stcls	0, cr0, [r1], {-0}
    a388:	00001a7c 	andeq	r1, r0, ip, ror sl
    a38c:	616b7625 	cmnvs	fp, r5, lsr #12
    a390:	39e80800 	stmibcc	r8!, {fp}^
    a394:	00001195 	muleq	r0, r5, r1
    a398:	266c9102 	strbtcs	r9, [ip], -r2, lsl #2
    a39c:	00000c20 	andeq	r0, r0, r0, lsr #24
    a3a0:	3952e808 	ldmdbcc	r2, {r3, fp, sp, lr, pc}^
    a3a4:	0200000a 	andeq	r0, r0, #10
    a3a8:	8d266891 	stchi	8, cr6, [r6, #-580]!	; 0xfffffdbc
    a3ac:	08000003 	stmdaeq	r0, {r0, r1}
    a3b0:	007562e8 	rsbseq	r6, r5, r8, ror #5
    a3b4:	91020000 	mrsls	r0, (UNDEF: 2)
    a3b8:	32c22664 	sbccc	r2, r2, #100, 12	; 0x6400000
    a3bc:	e9080000 	stmdb	r8, {}	; <UNPREDICTABLE>
    a3c0:	0000753c 	andeq	r7, r0, ip, lsr r5
    a3c4:	60910200 	addsvs	r0, r1, r0, lsl #4
    a3c8:	003a1b26 	eorseq	r1, sl, r6, lsr #22
    a3cc:	4ce90800 	stclmi	8, cr0, [r9]
    a3d0:	000007da 	ldrdeq	r0, [r0], -sl
    a3d4:	25009102 	strcs	r9, [r0, #-258]	; 0xfffffefe
    a3d8:	00736572 	rsbseq	r6, r3, r2, ror r5
    a3dc:	e764e908 	strb	lr, [r4, -r8, lsl #18]!
    a3e0:	02000006 	andeq	r0, r0, #6
    a3e4:	b6270491 			; <UNDEFINED> instruction: 0xb6270491
    a3e8:	ac00001a 	stcge	0, cr0, [r0], {26}
    a3ec:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    a3f0:	028ee803 	addeq	lr, lr, #196608	; 0x30000
    a3f4:	c92d0000 	pushgt	{}	; <UNPREDICTABLE>
    a3f8:	08000024 	stmdaeq	r0, {r2, r5}
    a3fc:	708014bd 			; <UNDEFINED> instruction: 0x708014bd
    a400:	01100001 	tsteq	r0, r1
    a404:	9c010000 	stcls	0, cr0, [r1], {-0}
    a408:	00001ac0 	andeq	r1, r0, r0, asr #21
    a40c:	616b7625 	cmnvs	fp, r5, lsr #12
    a410:	2bbd0800 	blcs	fef4c418 <__bss_end__+0xfee033d0>
    a414:	00001195 	muleq	r0, r5, r1
    a418:	26749102 	ldrbtcs	r9, [r4], -r2, lsl #2
    a41c:	0000372f 	andeq	r3, r0, pc, lsr #14
    a420:	813abd08 	teqhi	sl, r8, lsl #26
    a424:	02000000 	andeq	r0, r0, #0
    a428:	b6277091 			; <UNDEFINED> instruction: 0xb6277091
    a42c:	1000001a 	andne	r0, r0, sl, lsl r0
    a430:	05000017 	streq	r0, [r0, #-23]	; 0xffffffe9
    a434:	028e7c03 	addeq	r7, lr, #768	; 0x300
    a438:	f22d0000 	vhadd.s32	d0, d13, d0
    a43c:	08000031 	stmdaeq	r0, {r0, r4, r5}
    a440:	6eec149c 	mcrvs	4, 7, r1, cr12, cr12, {4}
    a444:	01940001 	orrseq	r0, r4, r1
    a448:	9c010000 	stcls	0, cr0, [r1], {-0}
    a44c:	00001b13 	andeq	r1, r0, r3, lsl fp
    a450:	616b7625 	cmnvs	fp, r5, lsr #12
    a454:	309c0800 	addscc	r0, ip, r0, lsl #16
    a458:	00001195 	muleq	r0, r5, r1
    a45c:	26749102 	ldrbtcs	r9, [r4], -r2, lsl #2
    a460:	0000372f 	andeq	r3, r0, pc, lsr #14
    a464:	813f9c08 	teqhi	pc, r8, lsl #24
    a468:	02000000 	andeq	r0, r0, #0
    a46c:	72257091 	eorvc	r7, r5, #145	; 0x91
    a470:	08007365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    a474:	067b539c 			; <UNDEFINED> instruction: 0x067b539c
    a478:	91020000 	mrsls	r0, (UNDEF: 2)
    a47c:	1ab6276c 	bne	fed94234 <__bss_end__+0xfec4b1ec>
    a480:	16510000 	ldrbne	r0, [r1], -r0
    a484:	03050000 	movweq	r0, #20480	; 0x5000
    a488:	00028e34 	andeq	r8, r2, r4, lsr lr
    a48c:	39322b00 	ldmdbcc	r2!, {r8, r9, fp, sp}
    a490:	88080000 	stmdahi	r8, {}	; <UNPREDICTABLE>
    a494:	00004d13 	andeq	r4, r0, r3, lsl sp
    a498:	016da000 	cmneq	sp, r0
    a49c:	00014c00 	andeq	r4, r1, r0, lsl #24
    a4a0:	5b9c0100 	blpl	fe70a8a8 <__bss_end__+0xfe5c1860>
    a4a4:	2500001b 	strcs	r0, [r0, #-27]	; 0xffffffe5
    a4a8:	00616b76 	rsbeq	r6, r1, r6, ror fp
    a4ac:	952b8808 	strls	r8, [fp, #-2056]!	; 0xfffff7f8
    a4b0:	02000011 	andeq	r0, r0, #17
    a4b4:	72257491 	eorvc	r7, r5, #-1862270976	; 0x91000000
    a4b8:	08007365 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    a4bc:	06e13b88 	strbteq	r3, [r1], r8, lsl #23
    a4c0:	91020000 	mrsls	r0, (UNDEF: 2)
    a4c4:	1ab62770 	bne	fed9428c <__bss_end__+0xfec4b244>
    a4c8:	15ec0000 	strbne	r0, [ip, #0]!
    a4cc:	03050000 	movweq	r0, #20480	; 0x5000
    a4d0:	00028e20 	andeq	r8, r2, r0, lsr #28
    a4d4:	2af92b00 	bcs	ffe550dc <__bss_end__+0xffd0c094>
    a4d8:	19070000 	stmdbne	r7, {}	; <UNPREDICTABLE>
    a4dc:	00004d13 	andeq	r4, r0, r3, lsl sp
    a4e0:	016d6800 	cmneq	sp, r0, lsl #16
    a4e4:	00003800 	andeq	r3, r0, r0, lsl #16
    a4e8:	859c0100 	ldrhi	r0, [ip, #256]	; 0x100
    a4ec:	2500001b 	strcs	r0, [r0, #-27]	; 0xffffffe5
    a4f0:	00706163 	rsbseq	r6, r0, r3, ror #2
    a4f4:	81301907 	teqhi	r0, r7, lsl #18
    a4f8:	02000000 	andeq	r0, r0, #0
    a4fc:	29007491 	stmdbcs	r0, {r0, r4, r7, sl, ip, sp, lr}
    a500:	00003a27 	andeq	r3, r0, r7, lsr #20
    a504:	1a012b06 	bne	55124 <morecore_area+0xc124>
    a508:	00000200 	andeq	r0, r0, r0, lsl #4
    a50c:	00016c40 	andeq	r6, r1, r0, asr #24
    a510:	00000128 	andeq	r0, r0, r8, lsr #2
    a514:	1bef9c01 	blne	ffbf1520 <__bss_end__+0xffaa84d8>
    a518:	1f2a0000 	svcne	0x002a0000
    a51c:	06000028 	streq	r0, [r0], -r8, lsr #32
    a520:	353b012b 	ldrcc	r0, [fp, #-299]!	; 0xfffffed5
    a524:	02000015 	andeq	r0, r0, #21
    a528:	69306491 	ldmdbvs	r0!, {r0, r4, r7, sl, sp, lr}
    a52c:	06007172 			; <UNDEFINED> instruction: 0x06007172
    a530:	4d47012b 	stfmie	f0, [r7, #-172]	; 0xffffff54
    a534:	02000000 	andeq	r0, r0, #0
    a538:	022a6091 	eoreq	r6, sl, #145	; 0x91
    a53c:	06000032 			; <UNDEFINED> instruction: 0x06000032
    a540:	6b59012b 	blvs	164a9f4 <__bss_end__+0x15019ac>
    a544:	02000005 	andeq	r0, r0, #5
    a548:	b6277891 			; <UNDEFINED> instruction: 0xb6277891
    a54c:	ff00001a 			; <UNDEFINED> instruction: 0xff00001a
    a550:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    a554:	028e4c03 	addeq	r4, lr, #768	; 0x300
    a558:	18eb2700 	stmiane	fp!, {r8, r9, sl, sp}^
    a55c:	1bff0000 	blne	fffca564 <__bss_end__+0xffe8151c>
    a560:	03050000 	movweq	r0, #20480	; 0x5000
    a564:	00028e64 	andeq	r8, r2, r4, ror #28
    a568:	04b50c00 	ldrteq	r0, [r5], #3072	; 0xc00
    a56c:	1bff0000 	blne	fffca574 <__bss_end__+0xffe8152c>
    a570:	600d0000 	andvs	r0, sp, r0
    a574:	16000000 	strne	r0, [r0], -r0
    a578:	1bef0a00 	blne	ffbccd80 <__bss_end__+0xffa83d38>
    a57c:	24290000 	strtcs	r0, [r9], #-0
    a580:	05000038 	streq	r0, [r0, #-56]	; 0xffffffc8
    a584:	00010f4b 	andeq	r0, r1, fp, asr #30
    a588:	50000002 	andpl	r0, r0, r2
    a58c:	f000016b 			; <UNDEFINED> instruction: 0xf000016b
    a590:	01000000 	mrseq	r0, (UNDEF: 0)
    a594:	001cc09c 	mulseq	ip, ip, r0
    a598:	1c422a00 	mcrrne	10, 0, r2, r2, cr0
    a59c:	4b050000 	blmi	14a5a4 <__bss_end__+0x155c>
    a5a0:	032f1e0f 			; <UNDEFINED> instruction: 0x032f1e0f
    a5a4:	91020000 	mrsls	r0, (UNDEF: 2)
    a5a8:	174f2a54 	smlsldne	r2, pc, r4, sl	; <UNPREDICTABLE>
    a5ac:	4b050000 	blmi	14a5b4 <__bss_end__+0x156c>
    a5b0:	0075320f 	rsbseq	r3, r5, pc, lsl #4
    a5b4:	91020000 	mrsls	r0, (UNDEF: 2)
    a5b8:	48262a50 	stmdami	r6!, {r4, r6, r9, fp, sp}
    a5bc:	4b050000 	blmi	14a5c4 <__bss_end__+0x157c>
    a5c0:	002c440f 	eoreq	r4, ip, pc, lsl #8
    a5c4:	91020000 	mrsls	r0, (UNDEF: 2)
    a5c8:	17b3314f 	ldrne	r3, [r3, pc, asr #2]!
    a5cc:	4d050000 	stcmi	0, cr0, [r5, #-0]
    a5d0:	02000d0f 	andeq	r0, r0, #960	; 0x3c0
    a5d4:	91020000 	mrsls	r0, (UNDEF: 2)
    a5d8:	61743274 	cmnvs	r4, r4, ror r2
    a5dc:	4e050067 	cdpmi	0, 0, cr0, cr5, cr7, {3}
    a5e0:	0285150f 	addeq	r1, r5, #62914560	; 0x3c00000
    a5e4:	91020000 	mrsls	r0, (UNDEF: 2)
    a5e8:	1be33170 	blne	ff8d6bb0 <__bss_end__+0xff78db68>
    a5ec:	4f050000 	svcmi	0x00050000
    a5f0:	0285150f 	addeq	r1, r5, #62914560	; 0x3c00000
    a5f4:	91020000 	mrsls	r0, (UNDEF: 2)
    a5f8:	726d326c 	rsbvc	r3, sp, #108, 4	; 0xc0000006
    a5fc:	50050030 	andpl	r0, r5, r0, lsr r0
    a600:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    a604:	91020000 	mrsls	r0, (UNDEF: 2)
    a608:	726d3268 	rsbvc	r3, sp, #104, 4	; 0x80000006
    a60c:	51050031 	tstpl	r5, r1, lsr r0
    a610:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    a614:	91020000 	mrsls	r0, (UNDEF: 2)
    a618:	726d3264 	rsbvc	r3, sp, #100, 4	; 0x40000006
    a61c:	52050032 	andpl	r0, r5, #50	; 0x32
    a620:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    a624:	91020000 	mrsls	r0, (UNDEF: 2)
    a628:	726d3260 	rsbvc	r3, sp, #96, 4
    a62c:	53050033 	movwpl	r0, #20531	; 0x5033
    a630:	00750c0f 	rsbseq	r0, r5, pc, lsl #24
    a634:	91020000 	mrsls	r0, (UNDEF: 2)
    a638:	4029005c 	eormi	r0, r9, ip, asr r0
    a63c:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    a640:	5421026c 	strtpl	r0, [r1], #-620	; 0xfffffd94
    a644:	c4000000 	strgt	r0, [r0], #-0
    a648:	8c00016a 	stfhis	f0, [r0], {106}	; 0x6a
    a64c:	01000000 	mrseq	r0, (UNDEF: 0)
    a650:	001d3c9c 	mulseq	sp, ip, ip
    a654:	61633000 	cmnvs	r3, r0
    a658:	6c040070 	stcvs	0, cr0, [r4], {112}	; 0x70
    a65c:	00814102 	addeq	r4, r1, r2, lsl #2
    a660:	91020000 	mrsls	r0, (UNDEF: 2)
    a664:	0e08315c 	mcreq	1, 0, r3, cr8, cr12, {2}
    a668:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
    a66c:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    a670:	91020000 	mrsls	r0, (UNDEF: 2)
    a674:	0e103174 	fixeqz	r3, f4
    a678:	6f040000 	svcvs	0x00040000
    a67c:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    a680:	91020000 	mrsls	r0, (UNDEF: 2)
    a684:	10723170 	rsbsne	r3, r2, r0, ror r1
    a688:	70040000 	andvc	r0, r4, r0
    a68c:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    a690:	91020000 	mrsls	r0, (UNDEF: 2)
    a694:	0e18316c 	mufeqez	f3, f0, #4.0
    a698:	71040000 	mrsvc	r0, (UNDEF: 4)
    a69c:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    a6a0:	91020000 	mrsls	r0, (UNDEF: 2)
    a6a4:	0e203168 	sufeqsz	f3, f0, #0.0
    a6a8:	72040000 	andvc	r0, r4, #0
    a6ac:	00750f02 	rsbseq	r0, r5, r2, lsl #30
    a6b0:	91020000 	mrsls	r0, (UNDEF: 2)
    a6b4:	c22b0064 	eorgt	r0, fp, #100	; 0x64
    a6b8:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    a6bc:	028528bb 	addeq	r2, r5, #12255232	; 0xbb0000
    a6c0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    a6c4:	01a40001 			; <UNDEFINED> instruction: 0x01a40001
    a6c8:	9c010000 	stcls	0, cr0, [r1], {-0}
    a6cc:	00001dfc 	strdeq	r1, [r0], -ip
    a6d0:	000c2026 	andeq	r2, ip, r6, lsr #32
    a6d4:	43bb0400 			; <UNDEFINED> instruction: 0x43bb0400
    a6d8:	00000081 	andeq	r0, r0, r1, lsl #1
    a6dc:	265c9102 	ldrbcs	r9, [ip], -r2, lsl #2
    a6e0:	00001c4b 	andeq	r1, r0, fp, asr #24
    a6e4:	855cbb04 	ldrbhi	fp, [ip, #-2820]	; 0xfffff4fc
    a6e8:	02000002 	andeq	r0, r0, #2
    a6ec:	6d255891 	stcvs	8, cr5, [r5, #-580]!	; 0xfffffdbc
    a6f0:	04003072 	streq	r3, [r0], #-114	; 0xffffff8e
    a6f4:	06e744bc 			; <UNDEFINED> instruction: 0x06e744bc
    a6f8:	91020000 	mrsls	r0, (UNDEF: 2)
    a6fc:	726d2554 	rsbvc	r2, sp, #84, 10	; 0x15000000
    a700:	bc040031 	stclt	0, cr0, [r4], {49}	; 0x31
    a704:	0006e754 	andeq	lr, r6, r4, asr r7
    a708:	50910200 	addspl	r0, r1, r0, lsl #4
    a70c:	32726d25 	rsbscc	r6, r2, #2368	; 0x940
    a710:	64bc0400 	ldrtvs	r0, [ip], #1024	; 0x400
    a714:	000006e7 	andeq	r0, r0, r7, ror #13
    a718:	25009102 	strcs	r9, [r0, #-258]	; 0xfffffefe
    a71c:	0033726d 	eorseq	r7, r3, sp, ror #4
    a720:	e774bc04 	ldrb	fp, [r4, -r4, lsl #24]!
    a724:	02000006 	andeq	r0, r0, #6
    a728:	a90b0491 	stmdbge	fp, {r0, r4, r7, sl}
    a72c:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    a730:	028518be 	addeq	r1, r5, #12451840	; 0xbe0000
    a734:	91020000 	mrsls	r0, (UNDEF: 2)
    a738:	113b0b74 	teqne	fp, r4, ror fp
    a73c:	bf040000 	svclt	0x00040000
    a740:	0000750f 	andeq	r7, r0, pc, lsl #10
    a744:	70910200 	addsvc	r0, r1, r0, lsl #4
    a748:	0011400b 	andseq	r4, r1, fp
    a74c:	0fc00400 	svceq	0x00c00400
    a750:	00000075 	andeq	r0, r0, r5, ror r0
    a754:	0b6c9102 	bleq	1b2eb64 <__bss_end__+0x19e5b1c>
    a758:	00001145 	andeq	r1, r0, r5, asr #2
    a75c:	750fc104 	strvc	ip, [pc, #-260]	; a660 <errno+0xa65c>
    a760:	02000000 	andeq	r0, r0, #0
    a764:	140b6891 	strne	r6, [fp], #-2193	; 0xfffff76f
    a768:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    a76c:	00750fc2 	rsbseq	r0, r5, r2, asr #31
    a770:	91020000 	mrsls	r0, (UNDEF: 2)
    a774:	99330064 	ldmdbls	r3!, {r2, r5, r6}
    a778:	0300000d 	movweq	r0, #13
    a77c:	68741492 	ldmdavs	r4!, {r1, r4, r7, sl, ip}^
    a780:	00ac0001 	adceq	r0, ip, r1
    a784:	9c010000 	stcls	0, cr0, [r1], {-0}
    a788:	00001f0b 	andeq	r1, r0, fp, lsl #30
    a78c:	73797325 	cmnvc	r9, #-1811939328	; 0x94000000
    a790:	30920300 	addscc	r0, r2, r0, lsl #6
    a794:	00000075 	andeq	r0, r0, r5, ror r0
    a798:	266c9102 	strbtcs	r9, [ip], -r2, lsl #2
    a79c:	00000c20 	andeq	r0, r0, r0, lsr #24
    a7a0:	753f9203 	ldrvc	r9, [pc, #-515]!	; a5a5 <errno+0xa5a1>
    a7a4:	02000000 	andeq	r0, r0, #0
    a7a8:	ae266891 	mcrge	8, 1, r6, cr6, cr1, {4}
    a7ac:	03000011 	movweq	r0, #17
    a7b0:	06e75092 	usateq	r5, #7, r2, lsl #1
    a7b4:	91020000 	mrsls	r0, (UNDEF: 2)
    a7b8:	10f22664 	rscsne	r2, r2, r4, ror #12
    a7bc:	92030000 	andls	r0, r3, #0
    a7c0:	00007565 	andeq	r7, r0, r5, ror #10
    a7c4:	60910200 	addsvs	r0, r1, r0, lsl #4
    a7c8:	000ad326 	andeq	sp, sl, r6, lsr #6
    a7cc:	31930300 	orrscc	r0, r3, r0, lsl #6
    a7d0:	000006e7 	andeq	r0, r0, r7, ror #13
    a7d4:	26009102 	strcs	r9, [r0], -r2, lsl #2
    a7d8:	000009dd 	ldrdeq	r0, [r0], -sp
    a7dc:	e7469303 	strb	r9, [r6, -r3, lsl #6]
    a7e0:	02000006 	andeq	r0, r0, #6
    a7e4:	e8260491 	stmda	r6!, {r0, r4, r7, sl}
    a7e8:	03000009 	movweq	r0, #9
    a7ec:	06e75d93 	usateq	r5, #7, r3, lsl #27
    a7f0:	91020000 	mrsls	r0, (UNDEF: 2)
    a7f4:	09f32608 	ldmibeq	r3!, {r3, r9, sl, sp}^
    a7f8:	93030000 	movwls	r0, #12288	; 0x3000
    a7fc:	0006e774 	andeq	lr, r6, r4, ror r7
    a800:	0c910200 	lfmeq	f0, 4, [r1], {0}
    a804:	0009fe26 	andeq	pc, r9, r6, lsr #28
    a808:	8b930300 	blhi	fe4cb410 <__bss_end__+0xfe3823c8>
    a80c:	000006e7 	andeq	r0, r0, r7, ror #13
    a810:	26109102 	ldrcs	r9, [r0], -r2, lsl #2
    a814:	0000093a 	andeq	r0, r0, sl, lsr r9
    a818:	753f9403 	ldrvc	r9, [pc, #-1027]!	; a41d <errno+0xa419>
    a81c:	02000000 	andeq	r0, r0, #0
    a820:	ce0b1491 	mcrgt	4, 0, r1, cr11, cr1, {4}
    a824:	0300000c 	movweq	r0, #12
    a828:	00751896 			; <UNDEFINED> instruction: 0x00751896
    a82c:	50010000 	andpl	r0, r1, r0
    a830:	0028a90b 	eoreq	sl, r8, fp, lsl #18
    a834:	18970300 	ldmne	r7, {r8, r9}
    a838:	00000075 	andeq	r0, r0, r5, ror r0
    a83c:	3b0b5101 	blcc	2dec48 <__bss_end__+0x195c00>
    a840:	03000011 	movweq	r0, #17
    a844:	0075189a 			; <UNDEFINED> instruction: 0x0075189a
    a848:	52010000 	andpl	r0, r1, #0
    a84c:	0011400b 	andseq	r4, r1, fp
    a850:	189b0300 	ldmne	fp, {r8, r9}
    a854:	00000075 	andeq	r0, r0, r5, ror r0
    a858:	450b5301 	strmi	r5, [fp, #-769]	; 0xfffffcff
    a85c:	03000011 	movweq	r0, #17
    a860:	0075189c 			; <UNDEFINED> instruction: 0x0075189c
    a864:	54010000 	strpl	r0, [r1], #-0
    a868:	0011140b 	andseq	r1, r1, fp, lsl #8
    a86c:	189d0300 	ldmne	sp, {r8, r9}
    a870:	00000075 	andeq	r0, r0, r5, ror r0
    a874:	090b5501 	stmdbeq	fp, {r0, r8, sl, ip, lr}
    a878:	0300000d 	movweq	r0, #13
    a87c:	007518a1 	rsbseq	r1, r5, r1, lsr #17
    a880:	57010000 	strpl	r0, [r1, -r0]
    a884:	1b602d00 	blne	1815c8c <__bss_end__+0x16ccc44>
    a888:	33020000 	movwcc	r0, #8192	; 0x2000
    a88c:	0168381a 	cmneq	r8, sl, lsl r8
    a890:	00003c00 	andeq	r3, r0, r0, lsl #24
    a894:	3d9c0100 	ldfccs	f0, [ip]
    a898:	2500001f 	strcs	r0, [r0, #-31]	; 0xffffffe1
    a89c:	33020069 	movwcc	r0, #8297	; 0x2069
    a8a0:	00004d29 	andeq	r4, r0, r9, lsr #26
    a8a4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a8a8:	00726d25 	rsbseq	r6, r2, r5, lsr #26
    a8ac:	75363302 	ldrvc	r3, [r6, #-770]!	; 0xfffffcfe
    a8b0:	02000000 	andeq	r0, r0, #0
    a8b4:	34007091 	strcc	r7, [r0], #-145	; 0xffffff6f
    a8b8:	00000dc3 	andeq	r0, r0, r3, asr #27
    a8bc:	47252902 	strmi	r2, [r5, -r2, lsl #18]!
    a8c0:	14000003 	strne	r0, [r0], #-3
    a8c4:	24000168 	strcs	r0, [r0], #-360	; 0xfffffe98
    a8c8:	01000000 	mrseq	r0, (UNDEF: 0)
    a8cc:	1d15359c 	cfldr32ne	mvfx3, [r5, #-624]	; 0xfffffd90
    a8d0:	d5010000 	strle	r0, [r1, #-0]
    a8d4:	00540101 	subseq	r0, r4, r1, lsl #2
    a8d8:	67e40000 	strbvs	r0, [r4, r0]!
    a8dc:	00300001 	eorseq	r0, r0, r1
    a8e0:	9c010000 	stcls	0, cr0, [r1], {-0}
    a8e4:	00001f8f 	andeq	r1, r0, pc, lsl #31
    a8e8:	0002a72a 	andeq	sl, r2, sl, lsr #14
    a8ec:	01d50100 	bicseq	r0, r5, r0, lsl #2
    a8f0:	00028530 	andeq	r8, r2, r0, lsr r5
    a8f4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    a8f8:	74657232 	strbtvc	r7, [r5], #-562	; 0xfffffdce
    a8fc:	01d60100 	bicseq	r0, r6, r0, lsl #2
    a900:	00005411 	andeq	r5, r0, r1, lsl r4
    a904:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a908:	1dbf3500 	cfldr32ne	mvfx3, [pc]	; a910 <errno+0xa90c>
    a90c:	60010000 	andvs	r0, r1, r0
    a910:	00540101 	subseq	r0, r4, r1, lsl #2
    a914:	67b40000 	ldrvs	r0, [r4, r0]!
    a918:	00300001 	eorseq	r0, r0, r1
    a91c:	9c010000 	stcls	0, cr0, [r1], {-0}
    a920:	00001fcb 	andeq	r1, r0, fp, asr #31
    a924:	0002a72a 	andeq	sl, r2, sl, lsr #14
    a928:	01600100 	cmneq	r0, r0, lsl #2
    a92c:	0002852f 	andeq	r8, r2, pc, lsr #10
    a930:	6c910200 	lfmvs	f0, 4, [r1], {0}
    a934:	74657232 	strbtvc	r7, [r5], #-562	; 0xfffffdce
    a938:	01610100 	cmneq	r1, r0, lsl #2
    a93c:	00005411 	andeq	r5, r0, r1, lsl r4
    a940:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a944:	1c102900 			; <UNDEFINED> instruction: 0x1c102900
    a948:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    a94c:	02850101 	addeq	r0, r5, #1073741824	; 0x40000000
    a950:	668c0000 	strvs	r0, [ip], r0
    a954:	01280001 			; <UNDEFINED> instruction: 0x01280001
    a958:	9c010000 	stcls	0, cr0, [r1], {-0}
    a95c:	00002046 	andeq	r2, r0, r6, asr #32
    a960:	0010182a 	andseq	r1, r0, sl, lsr #16
    a964:	013e0100 	teqeq	lr, r0, lsl #2
    a968:	00005422 	andeq	r5, r0, r2, lsr #8
    a96c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    a970:	001d8e2a 	andseq	r8, sp, sl, lsr #28
    a974:	013e0100 	teqeq	lr, r0, lsl #2
    a978:	00005435 	andeq	r5, r0, r5, lsr r4
    a97c:	68910200 	ldmvs	r1, {r9}
    a980:	001b102a 	andseq	r1, fp, sl, lsr #32
    a984:	013e0100 	teqeq	lr, r0, lsl #2
    a988:	00005450 	andeq	r5, r0, r0, asr r4
    a98c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    a990:	00452f2a 	subeq	r2, r5, sl, lsr #30
    a994:	013e0100 	teqeq	lr, r0, lsl #2
    a998:	00005467 	andeq	r5, r0, r7, ror #8
    a99c:	60910200 	addsvs	r0, r1, r0, lsl #4
    a9a0:	0002a731 	andeq	sl, r2, r1, lsr r7
    a9a4:	013f0100 	teqeq	pc, r0, lsl #2
    a9a8:	00028518 	andeq	r8, r2, r8, lsl r5
    a9ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    a9b0:	001ab627 	andseq	fp, sl, r7, lsr #12
    a9b4:	00165100 	andseq	r5, r6, r0, lsl #2
    a9b8:	90030500 	andls	r0, r3, r0, lsl #10
    a9bc:	0000028f 	andeq	r0, r0, pc, lsl #5
    a9c0:	002f7a2b 	eoreq	r7, pc, fp, lsr #20
    a9c4:	017b0100 	cmneq	fp, r0, lsl #2
    a9c8:	0000025c 	andeq	r0, r0, ip, asr r2
    a9cc:	00016564 	andeq	r6, r1, r4, ror #10
    a9d0:	00000128 	andeq	r0, r0, r8, lsr #2
    a9d4:	20bb9c01 	adcscs	r9, fp, r1, lsl #24
    a9d8:	cc260000 	stcgt	0, cr0, [r6], #-0
    a9dc:	01000036 	tsteq	r0, r6, lsr r0
    a9e0:	0054207b 	subseq	r2, r4, fp, ror r0
    a9e4:	91020000 	mrsls	r0, (UNDEF: 2)
    a9e8:	3696266c 	ldrcc	r2, [r6], ip, ror #12
    a9ec:	7b010000 	blvc	4a9f4 <morecore_area+0x19f4>
    a9f0:	00005440 	andeq	r5, r0, r0, asr #8
    a9f4:	68910200 	ldmvs	r1, {r9}
    a9f8:	0029fa26 	eoreq	pc, r9, r6, lsr #20
    a9fc:	5b7b0100 	blpl	1ecae04 <__bss_end__+0x1d81dbc>
    aa00:	00000054 	andeq	r0, r0, r4, asr r0
    aa04:	26649102 	strbtcs	r9, [r4], -r2, lsl #2
    aa08:	00002749 	andeq	r2, r0, r9, asr #14
    aa0c:	54757b01 	ldrbtpl	r7, [r5], #-2817	; 0xfffff4ff
    aa10:	02000000 	andeq	r0, r0, #0
    aa14:	940b6091 	strls	r6, [fp], #-145	; 0xffffff6f
    aa18:	01000028 	tsteq	r0, r8, lsr #32
    aa1c:	025c167c 	subseq	r1, ip, #124, 12	; 0x7c00000
    aa20:	91020000 	mrsls	r0, (UNDEF: 2)
    aa24:	1ab62774 	bne	fed947fc <__bss_end__+0xfec4b7b4>
    aa28:	20cb0000 	sbccs	r0, fp, r0
    aa2c:	03050000 	movweq	r0, #20480	; 0x5000
    aa30:	00028f40 	andeq	r8, r2, r0, asr #30
    aa34:	04b50c00 	ldrteq	r0, [r5], #3072	; 0xc00
    aa38:	20cb0000 	sbccs	r0, fp, r0
    aa3c:	600d0000 	andvs	r0, sp, r0
    aa40:	12000000 	andne	r0, r0, #0
    aa44:	20bb0a00 	adcscs	r0, fp, r0, lsl #20
    aa48:	32000000 	andcc	r0, r0, #0
    aa4c:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    aa50:	0026a100 	eoreq	sl, r6, r0, lsl #2
    aa54:	17010400 	strne	r0, [r1, -r0, lsl #8]
    aa58:	0c000001 	stceq	0, cr0, [r0], {1}
    aa5c:	00003be1 	andeq	r3, r0, r1, ror #23
    aa60:	0000005f 	andeq	r0, r0, pc, asr r0
    aa64:	000181fc 	strdeq	r8, [r1], -ip
    aa68:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    aa6c:	00005db2 			; <UNDEFINED> instruction: 0x00005db2
    aa70:	2e060102 	adfcss	f0, f6, f2
    aa74:	02000003 	andeq	r0, r0, #3
    aa78:	032c0801 			; <UNDEFINED> instruction: 0x032c0801
    aa7c:	02020000 	andeq	r0, r2, #0
    aa80:	00046605 	andeq	r6, r4, r5, lsl #12
    aa84:	07020200 	streq	r0, [r2, -r0, lsl #4]
    aa88:	00000352 	andeq	r0, r0, r2, asr r3
    aa8c:	69050403 	stmdbvs	r5, {r0, r1, sl}
    aa90:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
    aa94:	00000041 	andeq	r0, r0, r1, asr #32
    aa98:	00030d05 	andeq	r0, r3, r5, lsl #26
    aa9c:	253d0500 	ldrcs	r0, [sp, #-1280]!	; 0xfffffb00
    aaa0:	00000059 	andeq	r0, r0, r9, asr r0
    aaa4:	c5070402 	strgt	r0, [r7, #-1026]	; 0xfffffbfe
    aaa8:	02000003 	andeq	r0, r0, #3
    aaac:	01090508 	tsteq	r9, r8, lsl #10
    aab0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    aab4:	0003bb07 	andeq	fp, r3, r7, lsl #22
    aab8:	03720500 	cmneq	r2, #0, 10
    aabc:	71050000 	mrsvc	r0, (UNDEF: 5)
    aac0:	00004d15 	andeq	r4, r0, r5, lsl sp
    aac4:	03d20500 	bicseq	r0, r2, #0, 10
    aac8:	80050000 	andhi	r0, r5, r0
    aacc:	00006e13 	andeq	r6, r0, r3, lsl lr
    aad0:	04050600 	streq	r0, [r5], #-1536	; 0xfffffa00
    aad4:	00000041 	andeq	r0, r0, r1, asr #32
    aad8:	f20e111f 	vand	d1, d14, d15
    aadc:	07000000 	streq	r0, [r0, -r0]
    aae0:	00000be0 	andeq	r0, r0, r0, ror #23
    aae4:	0a83077f 	beq	fe0cc8e8 <__bss_end__+0xfdf838a0>
    aae8:	077e0000 	ldrbeq	r0, [lr, -r0]!
    aaec:	00000b26 	andeq	r0, r0, r6, lsr #22
    aaf0:	10e3077d 	rscne	r0, r3, sp, ror r7
    aaf4:	077c0000 	ldrbeq	r0, [ip, -r0]!
    aaf8:	000011a1 	andeq	r1, r0, r1, lsr #3
    aafc:	0f59077b 	svceq	0x0059077b
    ab00:	077a0000 	ldrbeq	r0, [sl, -r0]!
    ab04:	00000a6b 	andeq	r0, r0, fp, ror #20
    ab08:	0e540779 	mrceq	7, 2, r0, cr4, cr9, {3}
    ab0c:	07780000 	ldrbeq	r0, [r8, -r0]!
    ab10:	00000fce 	andeq	r0, r0, lr, asr #31
    ab14:	11d50777 	bicsne	r0, r5, r7, ror r7
    ab18:	07760000 	ldrbeq	r0, [r6, -r0]!
    ab1c:	00000cdb 	ldrdeq	r0, [r0], -fp
    ab20:	0fa00775 	svceq	0x00a00775
    ab24:	07740000 	ldrbeq	r0, [r4, -r0]!
    ab28:	000009b4 			; <UNDEFINED> instruction: 0x000009b4
    ab2c:	0a530773 	beq	14cc900 <__bss_end__+0x13838b8>
    ab30:	08720000 	ldmdaeq	r2!, {}^	; <UNPREDICTABLE>
    ab34:	00000e63 	andeq	r0, r0, r3, ror #28
    ab38:	7fffffff 	svcvc	0x00ffffff
    ab3c:	03920900 	orrseq	r0, r2, #0, 18
    ab40:	04070000 	streq	r0, [r7], #-0
    ab44:	00000059 	andeq	r0, r0, r9, asr r0
    ab48:	290e0806 	stmdbcs	lr, {r1, r2, fp}
    ab4c:	0a000001 	beq	ab58 <errno+0xab54>
    ab50:	00000319 	andeq	r0, r0, r9, lsl r3
    ab54:	04800a00 	streq	r0, [r0], #2560	; 0xa00
    ab58:	0a010000 	beq	4ab60 <morecore_area+0x1b60>
    ab5c:	000003f8 	strdeq	r0, [r0], -r8
    ab60:	048f0a02 	streq	r0, [pc], #2562	; ab68 <errno+0xab64>
    ab64:	0a030000 	beq	cab6c <morecore_area+0x81b6c>
    ab68:	000004cd 	andeq	r0, r0, sp, asr #9
    ab6c:	02bd0a04 	adcseq	r0, sp, #4, 20	; 0x4000
    ab70:	00050000 	andeq	r0, r5, r0
    ab74:	0003dc05 	andeq	sp, r3, r5, lsl #24
    ab78:	03130600 	tsteq	r3, #0, 12
    ab7c:	000000f2 	strdeq	r0, [r0], -r2
    ab80:	00012904 	andeq	r2, r1, r4, lsl #18
    ab84:	04b40b00 	ldrteq	r0, [r4], #2816	; 0xb00
    ab88:	15060000 	strne	r0, [r6, #-0]
    ab8c:	00013559 	andeq	r3, r1, r9, asr r5
    ab90:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    ab94:	0900028f 	stmdbeq	r0, {r0, r1, r2, r3, r7, r9}
    ab98:	00000ee8 	andeq	r0, r0, r8, ror #29
    ab9c:	00590407 	subseq	r0, r9, r7, lsl #8
    aba0:	09070000 	stmdbeq	r7, {}	; <UNPREDICTABLE>
    aba4:	00016b0e 	andeq	r6, r1, lr, lsl #22
    aba8:	0a360a00 	beq	d8d3b0 <__bss_end__+0xc44368>
    abac:	0a050000 	beq	14abb4 <__bss_end__+0x1b6c>
    abb0:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
    abb4:	29090006 	stmdbcs	r9, {r1, r2}
    abb8:	0700000d 	streq	r0, [r0, -sp]
    abbc:	00005904 	andeq	r5, r0, r4, lsl #18
    abc0:	06340800 	ldrteq	r0, [r4], -r0, lsl #16
    abc4:	00000190 	muleq	r0, r0, r1
    abc8:	0009ca0a 	andeq	ip, r9, sl, lsl #20
    abcc:	f50a0700 			; <UNDEFINED> instruction: 0xf50a0700
    abd0:	0200000e 	andeq	r0, r0, #14
    abd4:	000df60a 	andeq	pc, sp, sl, lsl #12
    abd8:	0c007800 	stceq	8, cr7, [r0], {-0}
    abdc:	0000004d 	andeq	r0, r0, sp, asr #32
    abe0:	000001a0 	andeq	r0, r0, r0, lsr #3
    abe4:	0000590d 	andeq	r5, r0, sp, lsl #18
    abe8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    abec:	000002a7 	andeq	r0, r0, r7, lsr #5
    abf0:	01380904 	teqeq	r8, r4, lsl #18
    abf4:	0001bd08 	andeq	fp, r1, r8, lsl #26
    abf8:	03b00f00 	movseq	r0, #0, 30
    abfc:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
    ac00:	01901101 	orrseq	r1, r0, r1, lsl #2
    ac04:	00000000 	andeq	r0, r0, r0
    ac08:	00039d10 	andeq	r9, r3, r0, lsl sp
    ac0c:	013b0900 	teqeq	fp, r0, lsl #18
    ac10:	0001a021 	andeq	sl, r1, r1, lsr #32
    ac14:	04701100 	ldrbteq	r1, [r0], #-256	; 0xffffff00
    ac18:	02000000 	andeq	r0, r0, #0
    ac1c:	39100b0a 	ldmdbcc	r0, {r1, r3, r8, r9, fp}
    ac20:	12000002 	andne	r0, r0, #2
    ac24:	00676174 	rsbeq	r6, r7, r4, ror r1
    ac28:	bd180c0a 	ldclt	12, cr0, [r8, #-40]	; 0xffffffd8
    ac2c:	00000001 	andeq	r0, r0, r1
    ac30:	67736d12 			; <UNDEFINED> instruction: 0x67736d12
    ac34:	0f0d0a00 	svceq	0x000d0a00
    ac38:	00000239 	andeq	r0, r0, r9, lsr r2
    ac3c:	033a1304 	teqeq	sl, #4, 6	; 0x10000000
    ac40:	0e0a0000 	cdpeq	0, 0, cr0, cr10, cr0, {0}
    ac44:	00006e0f 	andeq	r6, r0, pc, lsl #28
    ac48:	1301e400 	movwne	lr, #5120	; 0x1400
    ac4c:	0000037c 	andeq	r0, r0, ip, ror r3
    ac50:	490f0f0a 	stmdbmi	pc, {r1, r3, r8, r9, sl, fp}	; <UNPREDICTABLE>
    ac54:	e8000002 	stmda	r0, {r1}
    ac58:	03651301 	cmneq	r5, #67108864	; 0x4000000
    ac5c:	100a0000 	andne	r0, sl, r0
    ac60:	00007a0f 	andeq	r7, r0, pc, lsl #20
    ac64:	1301f400 	movwne	pc, #5120	; 0x1400	; <UNPREDICTABLE>
    ac68:	00000300 	andeq	r0, r0, r0, lsl #6
    ac6c:	7a0f110a 	bvc	3cf09c <__bss_end__+0x286054>
    ac70:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    ac74:	040c1301 	streq	r1, [ip], #-769	; 0xfffffcff
    ac78:	120a0000 	andne	r0, sl, #0
    ac7c:	00006e0f 	andeq	r6, r0, pc, lsl #28
    ac80:	0001fc00 	andeq	pc, r1, r0, lsl #24
    ac84:	00006e0c 	andeq	r6, r0, ip, lsl #28
    ac88:	00024900 	andeq	r4, r2, r0, lsl #18
    ac8c:	00590d00 	subseq	r0, r9, r0, lsl #26
    ac90:	00770000 	rsbseq	r0, r7, r0
    ac94:	00006e0c 	andeq	r6, r0, ip, lsl #28
    ac98:	00025900 	andeq	r5, r2, r0, lsl #18
    ac9c:	00590d00 	subseq	r0, r9, r0, lsl #26
    aca0:	00020000 	andeq	r0, r2, r0
    aca4:	00034314 	andeq	r4, r3, r4, lsl r3
    aca8:	03130a00 	tsteq	r3, #0, 20
    acac:	000001ca 	andeq	r0, r0, sl, asr #3
    acb0:	e8150200 	ldmda	r5, {r9}
    acb4:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    acb8:	0273210d 	rsbseq	r2, r3, #1073741827	; 0x40000003
    acbc:	04160000 	ldreq	r0, [r6], #-0
    acc0:	00000259 	andeq	r0, r0, r9, asr r2
    acc4:	00100d09 	andseq	r0, r0, r9, lsl #26
    acc8:	59040700 	stmdbpl	r4, {r8, r9, sl}
    accc:	0b000000 	bleq	acd4 <errno+0xacd0>
    acd0:	0346060e 	movteq	r0, #26126	; 0x660e
    acd4:	c10a0000 	mrsgt	r0, (UNDEF: 10)
    acd8:	0000000a 	andeq	r0, r0, sl
    acdc:	00122e0a 	andseq	r2, r2, sl, lsl #28
    ace0:	7f0a0100 	svcvc	0x000a0100
    ace4:	0200000b 	andeq	r0, r0, #11
    ace8:	000f8e0a 	andeq	r8, pc, sl, lsl #28
    acec:	9a0a0300 	bls	28b8f4 <__bss_end__+0x1428ac>
    acf0:	04000010 	streq	r0, [r0], #-16
    acf4:	000b190a 	andeq	r1, fp, sl, lsl #18
    acf8:	b90a0500 	stmdblt	sl, {r8, sl}
    acfc:	0600000f 	streq	r0, [r0], -pc
    ad00:	000b330a 	andeq	r3, fp, sl, lsl #6
    ad04:	950a0700 	strls	r0, [sl, #-1792]	; 0xfffff900
    ad08:	0800000a 	stmdaeq	r0, {r1, r3}
    ad0c:	000a090a 	andeq	r0, sl, sl, lsl #18
    ad10:	2d0a0900 	vstrcs.16	s0, [sl, #-0]	; <UNPREDICTABLE>
    ad14:	0a00000f 	beq	ad58 <errno+0xad54>
    ad18:	000ced0a 	andeq	lr, ip, sl, lsl #26
    ad1c:	680a0b00 	stmdavs	sl, {r8, r9, fp}
    ad20:	0c000010 	stceq	0, cr0, [r0], {16}
    ad24:	000fe30a 	andeq	lr, pc, sl, lsl #6
    ad28:	ab0a0d00 	blge	28e130 <__bss_end__+0x1450e8>
    ad2c:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    ad30:	0011f00a 	andseq	pc, r1, sl
    ad34:	c20a0f00 	andgt	r0, sl, #0, 30
    ad38:	1000000c 	andne	r0, r0, ip
    ad3c:	000bd40a 	andeq	sp, fp, sl, lsl #8
    ad40:	d10a1100 	mrsle	r1, (UNDEF: 26)
    ad44:	1200000e 	andne	r0, r0, #14
    ad48:	00120a0a 	andseq	r0, r2, sl, lsl #20
    ad4c:	750a1300 	strvc	r1, [sl, #-768]	; 0xfffffd00
    ad50:	1400000b 	strne	r0, [r0], #-11
    ad54:	000a790a 	andeq	r7, sl, sl, lsl #18
    ad58:	f70a1500 			; <UNDEFINED> instruction: 0xf70a1500
    ad5c:	1600000f 	strne	r0, [r0], -pc
    ad60:	000c250a 	andeq	r2, ip, sl, lsl #10
    ad64:	650a1700 	strvs	r1, [sl, #-1792]	; 0xfffff900
    ad68:	1800000b 	stmdane	r0, {r0, r1, r3}
    ad6c:	000c970a 	andeq	r9, ip, sl, lsl #14
    ad70:	7a0a1900 	bvc	291178 <__bss_end__+0x148130>
    ad74:	1a000011 	bne	adc0 <errno+0xadbc>
    ad78:	000c860a 	andeq	r8, ip, sl, lsl #12
    ad7c:	670a1b00 	strvs	r1, [sl, -r0, lsl #22]
    ad80:	1c00000f 	stcne	0, cr0, [r0], {15}
    ad84:	000ec40a 	andeq	ip, lr, sl, lsl #8
    ad88:	690a1d00 	stmdbvs	sl, {r8, sl, fp, ip}
    ad8c:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    ad90:	10030900 	andne	r0, r3, r0, lsl #18
    ad94:	04070000 	streq	r0, [r7], #-0
    ad98:	00000059 	andeq	r0, r0, r9, asr r0
    ad9c:	77060e0c 	strvc	r0, [r6, -ip, lsl #28]
    ada0:	0a000003 	beq	adb4 <errno+0xadb0>
    ada4:	00000de6 	andeq	r0, r0, r6, ror #27
    ada8:	0f0a0a1e 	svceq	0x000a0a1e
    adac:	0a1f0000 	beq	7cadb4 <__bss_end__+0x681d6c>
    adb0:	00000e8b 	andeq	r0, r0, fp, lsl #29
    adb4:	11630a20 	cmnne	r3, r0, lsr #20
    adb8:	0a210000 	beq	84adc0 <__bss_end__+0x701d78>
    adbc:	00001214 	andeq	r1, r0, r4, lsl r2
    adc0:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    adc4:	0003c007 	andeq	ip, r3, r7
    adc8:	09200500 	stmdbeq	r0!, {r8, sl}
    adcc:	730d0000 	movwvc	r0, #53248	; 0xd000
    add0:	00005918 	andeq	r5, r0, r8, lsl r9
    add4:	058e0500 	streq	r0, [lr, #1280]	; 0x500
    add8:	b50d0000 	strlt	r0, [sp, #-0]
    addc:	00005919 	andeq	r5, r0, r9, lsl r9
    ade0:	35690500 	strbcc	r0, [r9, #-1280]!	; 0xfffffb00
    ade4:	ba0d0000 	blt	34adec <__bss_end__+0x201da4>
    ade8:	00006719 	andeq	r6, r0, r9, lsl r7
    adec:	0a2f0500 	beq	bcc1f4 <__bss_end__+0xa831ac>
    adf0:	6e0d0000 	cdpvs	0, 0, cr0, cr13, cr0, {0}
    adf4:	00005918 	andeq	r5, r0, r8, lsl r9
    adf8:	03a21700 			; <UNDEFINED> instruction: 0x03a21700
    adfc:	04020000 	streq	r0, [r2], #-0
    ae00:	00010e05 	andeq	r0, r1, r5, lsl #28
    ae04:	05041800 	streq	r1, [r4, #-2048]	; 0xfffff800
    ae08:	000018b7 			; <UNDEFINED> instruction: 0x000018b7
    ae0c:	410f7d0d 	tstmi	pc, sp, lsl #26
    ae10:	10000000 	andne	r0, r0, r0
    ae14:	0000022a 	andeq	r0, r0, sl, lsr #4
    ae18:	19016d0d 	stmdbne	r1, {r0, r2, r3, r8, sl, fp, sp, lr}
    ae1c:	000003d5 	ldrdeq	r0, [r0], -r5
    ae20:	00022619 	andeq	r2, r2, r9, lsl r6
    ae24:	08010200 	stmdaeq	r1, {r9}
    ae28:	00000335 	andeq	r0, r0, r5, lsr r3
    ae2c:	0003da04 	andeq	sp, r3, r4, lsl #20
    ae30:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    ae34:	000015f8 	strdeq	r1, [r0], -r8
    ae38:	00022f15 	andeq	r2, r2, r5, lsl pc
    ae3c:	14370f00 	ldrtne	r0, [r7], #-3840	; 0xfffff100
    ae40:	000003ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    ae44:	03c80416 	biceq	r0, r8, #369098752	; 0x16000000
    ae48:	f9040000 			; <UNDEFINED> instruction: 0xf9040000
    ae4c:	15000003 	strne	r0, [r0, #-3]
    ae50:	0000023c 	andeq	r0, r0, ip, lsr r2
    ae54:	ff14380f 			; <UNDEFINED> instruction: 0xff14380f
    ae58:	15000003 	strne	r0, [r0, #-3]
    ae5c:	00000235 	andeq	r0, r0, r5, lsr r2
    ae60:	ff14390f 			; <UNDEFINED> instruction: 0xff14390f
    ae64:	05000003 	streq	r0, [r0, #-3]
    ae68:	00002593 	muleq	r0, r3, r5
    ae6c:	96121010 			; <UNDEFINED> instruction: 0x96121010
    ae70:	16000003 	strne	r0, [r0], -r3
    ae74:	0003e104 	andeq	lr, r3, r4, lsl #2
    ae78:	da041600 	ble	110680 <morecore_area+0xc7680>
    ae7c:	15000003 	strne	r0, [r0, #-3]
    ae80:	0000189c 	muleq	r0, ip, r8
    ae84:	410cf811 	tstmi	ip, r1, lsl r8	; <UNPREDICTABLE>
    ae88:	02000000 	andeq	r0, r0, #0
    ae8c:	15f30408 	ldrbne	r0, [r3, #1032]!	; 0x408
    ae90:	32150000 	andscc	r0, r5, #0
    ae94:	12000017 	andne	r0, r0, #23
    ae98:	00411a10 	subeq	r1, r1, r0, lsl sl
    ae9c:	8d050000 	stchi	0, cr0, [r5, #-0]
    aea0:	1300002c 	movwne	r0, #44	; 0x2c
    aea4:	045f1a10 	ldrbeq	r1, [pc], #-2576	; aeac <errno+0xaea8>
    aea8:	4c0e0000 	stcmi	0, cr0, [lr], {-0}
    aeac:	80000033 	andhi	r0, r0, r3, lsr r0
    aeb0:	0801ea13 	stmdaeq	r1, {r0, r1, r4, r9, fp, sp, lr, pc}
    aeb4:	000004ec 	andeq	r0, r0, ip, ror #9
    aeb8:	002c1b0f 	eoreq	r1, ip, pc, lsl #22
    aebc:	01eb1300 	mvneq	r1, r0, lsl #6
    aec0:	000dbf14 	andeq	fp, sp, r4, lsl pc
    aec4:	9d0f0000 	stcls	0, cr0, [pc, #-0]	; aecc <errno+0xaec8>
    aec8:	1300002a 	movwne	r0, #42	; 0x2a
    aecc:	661601ec 	ldrvs	r0, [r6], -ip, ror #3
    aed0:	0c00000e 	stceq	0, cr0, [r0], {14}
    aed4:	0023eb0f 	eoreq	lr, r3, pc, lsl #22
    aed8:	01ed1300 	mvneq	r1, r0, lsl #6
    aedc:	000fa312 	andeq	sl, pc, r2, lsl r3	; <UNPREDICTABLE>
    aee0:	940f1800 	strls	r1, [pc], #-2048	; aee8 <errno+0xaee4>
    aee4:	13000032 	movwne	r0, #50	; 0x32
    aee8:	db1101ee 	blle	44b6a8 <__bss_end__+0x302660>
    aeec:	30000010 	andcc	r0, r0, r0, lsl r0
    aef0:	00302b0f 	eorseq	r2, r0, pc, lsl #22
    aef4:	01f01300 	mvnseq	r1, r0, lsl #6
    aef8:	0005a111 	andeq	sl, r5, r1, lsl r1
    aefc:	870f3800 	strhi	r3, [pc, -r0, lsl #16]
    af00:	13000024 	movwne	r0, #36	; 0x24
    af04:	350f01f1 	strcc	r0, [pc, #-497]	; ad1b <errno+0xad17>
    af08:	44000008 	strmi	r0, [r0], #-8
    af0c:	0022f70f 	eoreq	pc, r2, pc, lsl #14
    af10:	01f31300 	mvnseq	r1, r0, lsl #6
    af14:	000cf125 	andeq	pc, ip, r5, lsr #2
    af18:	8c0f5400 	cfstrshi	mvf5, [pc], {-0}
    af1c:	13000034 	movwne	r0, #52	; 0x34
    af20:	811501f4 			; <UNDEFINED> instruction: 0x811501f4
    af24:	64000010 	strvs	r0, [r0], #-16
    af28:	002ab90f 	eoreq	fp, sl, pc, lsl #18
    af2c:	01f51300 	mvnseq	r1, r0, lsl #6
    af30:	000ba812 	andeq	sl, fp, r2, lsl r8
    af34:	05007400 	streq	r7, [r0, #-1024]	; 0xfffffc00
    af38:	0000311f 	andeq	r3, r0, pc, lsl r1
    af3c:	f8161014 			; <UNDEFINED> instruction: 0xf8161014
    af40:	1a000004 	bne	af58 <errno+0xaf54>
    af44:	0000339b 	muleq	r0, fp, r3
    af48:	08271438 	stmdaeq	r7!, {r3, r4, r5, sl, ip}
    af4c:	000005a1 	andeq	r0, r0, r1, lsr #11
    af50:	00646912 	rsbeq	r6, r4, r2, lsl r9
    af54:	e2112814 	ands	r2, r1, #20, 16	; 0x140000
    af58:	00000005 	andeq	r0, r0, r5
    af5c:	0020291b 	eoreq	r2, r0, fp, lsl r9
    af60:	112a1400 			; <UNDEFINED> instruction: 0x112a1400
    af64:	00000428 	andeq	r0, r0, r8, lsr #8
    af68:	40381b04 	eorsmi	r1, r8, r4, lsl #22
    af6c:	2c140000 	ldccs	0, cr0, [r4], {-0}
    af70:	0003ba0b 	andeq	fp, r3, fp, lsl #20
    af74:	1c1b0800 	ldcne	8, cr0, [fp], {-0}
    af78:	14000034 	strne	r0, [r0], #-52	; 0xffffffcc
    af7c:	041c0c2e 	ldreq	r0, [ip], #-3118	; 0xfffff3d2
    af80:	1b100000 	blne	40af88 <__bss_end__+0x2c1f40>
    af84:	00002f46 	andeq	r2, r0, r6, asr #30
    af88:	730c3114 	movwvc	r3, #49428	; 0xc114
    af8c:	18000007 	stmdane	r0, {r0, r1, r2}
    af90:	0035611b 	eorseq	r6, r5, fp, lsl r1
    af94:	0c331400 	cfldrseq	mvf1, [r3], #-0
    af98:	00000773 	andeq	r0, r0, r3, ror r7
    af9c:	2e631b1c 	vmovcs.8	d3[4], r1
    afa0:	35140000 	ldrcc	r0, [r4, #-0]
    afa4:	0007730c 	andeq	r7, r7, ip, lsl #6
    afa8:	501b2000 	andspl	r2, fp, r0
    afac:	14000034 	strne	r0, [r0], #-52	; 0xffffffcc
    afb0:	07791238 			; <UNDEFINED> instruction: 0x07791238
    afb4:	1b240000 	blne	90afbc <__bss_end__+0x7c1f74>
    afb8:	000040c8 	andeq	r4, r0, r8, asr #1
    afbc:	b30e3a14 	movwlt	r3, #59924	; 0xea14
    afc0:	28000007 	stmdacs	r0, {r0, r1, r2}
    afc4:	0028bb1b 	eoreq	fp, r8, fp, lsl fp
    afc8:	0e3b1400 	cfabsseq	mvf1, mvf11
    afcc:	000007c8 	andeq	r0, r0, r8, asr #15
    afd0:	30091b2c 	andcc	r1, r9, ip, lsr #22
    afd4:	3c140000 	ldccc	0, cr0, [r4], {-0}
    afd8:	0007e20e 	andeq	lr, r7, lr, lsl #4
    afdc:	841b3000 	ldrhi	r3, [fp], #-0
    afe0:	14000026 	strne	r0, [r0], #-38	; 0xffffffda
    afe4:	07f30c3d 			; <UNDEFINED> instruction: 0x07f30c3d
    afe8:	00340000 	eorseq	r0, r4, r0
    afec:	00254a05 	eoreq	r4, r5, r5, lsl #20
    aff0:	1a111400 	bne	44fff8 <__bss_end__+0x306fb0>
    aff4:	000005ad 	andeq	r0, r0, sp, lsr #11
    aff8:	00302b1a 	eorseq	r2, r0, sl, lsl fp
    affc:	1f140c00 	svcne	0x00140c00
    b000:	0005e208 	andeq	lr, r5, r8, lsl #4
    b004:	33971b00 	orrscc	r1, r7, #0, 22
    b008:	20140000 	andscs	r0, r4, r0
    b00c:	00077f0e 	andeq	r7, r7, lr, lsl #30
    b010:	331b0000 	tstcc	fp, #0
    b014:	14000025 	strne	r0, [r0], #-37	; 0xffffffdb
    b018:	079e0b21 	ldreq	r0, [lr, r1, lsr #22]
    b01c:	1b040000 	blne	10b024 <morecore_area+0xc2024>
    b020:	00004038 	andeq	r4, r0, r8, lsr r0
    b024:	ba0b2214 	blt	2d387c <__bss_end__+0x18a834>
    b028:	08000003 	stmdaeq	r0, {r0, r1}
    b02c:	22f00900 	rscscs	r0, r0, #0, 18
    b030:	04070000 	streq	r0, [r7], #-0
    b034:	00000059 	andeq	r0, r0, r9, asr r0
    b038:	af060915 	svcge	0x00060915
    b03c:	0a000006 	beq	b05c <errno+0xb058>
    b040:	0000253f 	andeq	r2, r0, pc, lsr r5
    b044:	25a90a00 	strcs	r0, [r9, #2560]!	; 0xa00
    b048:	0a010000 	beq	4b050 <morecore_area+0x2050>
    b04c:	000030b2 	strheq	r3, [r0], -r2
    b050:	38780a02 	ldmdacc	r8!, {r1, r9, fp}^
    b054:	0a030000 	beq	cb05c <morecore_area+0x8205c>
    b058:	0000359a 	muleq	r0, sl, r5
    b05c:	27bf0a04 	ldrcs	r0, [pc, r4, lsl #20]!
    b060:	0a050000 	beq	14b068 <__bss_end__+0x2020>
    b064:	00002d24 	andeq	r2, r0, r4, lsr #26
    b068:	239e0a06 	orrscs	r0, lr, #24576	; 0x6000
    b06c:	0a070000 	beq	1cb074 <__bss_end__+0x8202c>
    b070:	00002c32 	andeq	r2, r0, r2, lsr ip
    b074:	2d190a08 	vldrcs	s0, [r9, #-32]	; 0xffffffe0
    b078:	0a090000 	beq	24b080 <__bss_end__+0x102038>
    b07c:	0000286b 	andeq	r2, r0, fp, ror #16
    b080:	2e2b0a0a 	vmulcs.f32	s0, s22, s20
    b084:	0a0b0000 	beq	2cb08c <__bss_end__+0x182044>
    b088:	00002e34 	andeq	r2, r0, r4, lsr lr
    b08c:	34eb0a0c 	strbtcc	r0, [fp], #2572	; 0xa0c
    b090:	0a0d0000 	beq	34b098 <__bss_end__+0x202050>
    b094:	000034f5 	strdeq	r3, [r0], -r5
    b098:	31b60a0e 			; <UNDEFINED> instruction: 0x31b60a0e
    b09c:	0a0f0000 	beq	3cb0a4 <__bss_end__+0x28205c>
    b0a0:	000031bf 			; <UNDEFINED> instruction: 0x000031bf
    b0a4:	331a0a10 	tstcc	sl, #16, 20	; 0x10000
    b0a8:	0a110000 	beq	44b0b0 <__bss_end__+0x302068>
    b0ac:	00003323 	andeq	r3, r0, r3, lsr #6
    b0b0:	37730a12 			; <UNDEFINED> instruction: 0x37730a12
    b0b4:	0a130000 	beq	4cb0bc <__bss_end__+0x382074>
    b0b8:	0000377d 	andeq	r3, r0, sp, ror r7
    b0bc:	27140a14 			; <UNDEFINED> instruction: 0x27140a14
    b0c0:	0a150000 	beq	54b0c8 <__bss_end__+0x402080>
    b0c4:	00003125 	andeq	r3, r0, r5, lsr #2
    b0c8:	36460a16 			; <UNDEFINED> instruction: 0x36460a16
    b0cc:	0a170000 	beq	5cb0d4 <__bss_end__+0x48208c>
    b0d0:	00003653 	andeq	r3, r0, r3, asr r6
    b0d4:	36600a18 			; <UNDEFINED> instruction: 0x36600a18
    b0d8:	0a190000 	beq	64b0e0 <__bss_end__+0x502098>
    b0dc:	0000366d 	andeq	r3, r0, sp, ror #12
    b0e0:	28120a1a 	ldmdacs	r2, {r1, r3, r4, r9, fp}
    b0e4:	0a1b0000 	beq	6cb0ec <__bss_end__+0x5820a4>
    b0e8:	0000288b 	andeq	r2, r0, fp, lsl #17
    b0ec:	2cc80a1c 	vstmiacs	r8, {s1-s28}
    b0f0:	0a1d0000 	beq	74b0f8 <__bss_end__+0x6020b0>
    b0f4:	000024f8 	strdeq	r2, [r0], -r8
    b0f8:	0f090000 	svceq	0x00090000
    b0fc:	07000033 	smladxeq	r0, r3, r0, r0
    b100:	00005904 	andeq	r5, r0, r4, lsl #18
    b104:	06341500 	ldrteq	r1, [r4], -r0, lsl #10
    b108:	00000734 	andeq	r0, r0, r4, lsr r7
    b10c:	002bda0a 	eoreq	sp, fp, sl, lsl #20
    b110:	f50a0000 			; <UNDEFINED> instruction: 0xf50a0000
    b114:	02000030 	andeq	r0, r0, #48	; 0x30
    b118:	0035720a 	eorseq	r7, r5, sl, lsl #4
    b11c:	6d0a0300 	stcvs	3, cr0, [sl, #-0]
    b120:	06000027 	streq	r0, [r0], -r7, lsr #32
    b124:	002c250a 	eoreq	r2, ip, sl, lsl #10
    b128:	900a0700 	andls	r0, sl, r0, lsl #14
    b12c:	0a000023 	beq	b1c0 <errno+0xb1bc>
    b130:	0034b10a 	eorseq	fp, r4, sl, lsl #2
    b134:	8a0a0b00 	bhi	28dd3c <__bss_end__+0x144cf4>
    b138:	0e000026 	cdpeq	0, 0, cr0, cr0, cr6, {1}
    b13c:	002c770a 	eoreq	r7, ip, sl, lsl #14
    b140:	440a0f00 	strmi	r0, [sl], #-3840	; 0xfffff100
    b144:	10000024 	andne	r0, r0, r4, lsr #32
    b148:	0028ae0a 	eoreq	sl, r8, sl, lsl #28
    b14c:	560a1100 	strpl	r1, [sl], -r0, lsl #2
    b150:	12000029 	andne	r0, r0, #41	; 0x29
    b154:	002f990a 	eoreq	r9, pc, sl, lsl #18
    b158:	a90a1300 	stmdbge	sl, {r8, r9, ip}
    b15c:	1400002c 	strne	r0, [r0], #-44	; 0xffffffd4
    b160:	0032070a 	eorseq	r0, r2, sl, lsl #14
    b164:	6d0a1500 	cfstr32vs	mvfx1, [sl, #-0]
    b168:	1600002f 	strne	r0, [r0], -pc, lsr #32
    b16c:	00275f0a 	eoreq	r5, r7, sl, lsl #30
    b170:	0d0a1700 	stceq	7, cr1, [sl, #-0]
    b174:	18000038 	stmdane	r0, {r3, r4, r5}
    b178:	002fb00a 	eoreq	fp, pc, sl
    b17c:	09001900 	stmdbeq	r0, {r8, fp, ip}
    b180:	00002a75 	andeq	r2, r0, r5, ror sl
    b184:	00590407 	subseq	r0, r9, r7, lsl #8
    b188:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    b18c:	00075f0e 	andeq	r5, r7, lr, lsl #30
    b190:	31830a00 	orrcc	r0, r3, r0, lsl #20
    b194:	0a000000 	beq	b19c <errno+0xb198>
    b198:	000035e0 	andeq	r3, r0, r0, ror #11
    b19c:	327e0a01 	rsbscc	r0, lr, #4096	; 0x1000
    b1a0:	0a020000 	beq	8b1a8 <morecore_area+0x421a8>
    b1a4:	000028ce 	andeq	r2, r0, lr, asr #17
    b1a8:	731c0003 	tstvc	ip, #3
    b1ac:	73000007 	movwvc	r0, #7
    b1b0:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    b1b4:	00000779 	andeq	r0, r0, r9, ror r7
    b1b8:	0005e21d 	andeq	lr, r5, sp, lsl r2
    b1bc:	04160000 	ldreq	r0, [r6], #-0
    b1c0:	000004ec 	andeq	r0, r0, ip, ror #9
    b1c4:	05a10416 	streq	r0, [r1, #1046]!	; 0x416
    b1c8:	04160000 	ldreq	r0, [r6], #-0
    b1cc:	0000075f 	andeq	r0, r0, pc, asr r7
    b1d0:	0000411c 	andeq	r4, r0, ip, lsl r1
    b1d4:	00079e00 	andeq	r9, r7, r0, lsl #28
    b1d8:	07791d00 	ldrbeq	r1, [r9, -r0, lsl #26]!
    b1dc:	af1d0000 	svcge	0x001d0000
    b1e0:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    b1e4:	00000734 	andeq	r0, r0, r4, lsr r7
    b1e8:	85041600 	strhi	r1, [r4, #-1536]	; 0xfffffa00
    b1ec:	1c000007 	stcne	0, cr0, [r0], {7}
    b1f0:	00000773 	andeq	r0, r0, r3, ror r7
    b1f4:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    b1f8:	0007731d 	andeq	r7, r7, sp, lsl r3
    b1fc:	04160000 	ldreq	r0, [r6], #-0
    b200:	000007a4 	andeq	r0, r0, r4, lsr #15
    b204:	00041c1c 	andeq	r1, r4, ip, lsl ip
    b208:	0007c800 	andeq	ip, r7, r0, lsl #16
    b20c:	07731d00 	ldrbeq	r1, [r3, -r0, lsl #26]!
    b210:	16000000 	strne	r0, [r0], -r0
    b214:	0007b904 	andeq	fp, r7, r4, lsl #18
    b218:	041c1c00 	ldreq	r1, [ip], #-3072	; 0xfffff400
    b21c:	07e20000 	strbeq	r0, [r2, r0]!
    b220:	731d0000 	tstvc	sp, #0
    b224:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    b228:	0000041c 	andeq	r0, r0, ip, lsl r4
    b22c:	ce041600 	cfmadd32gt	mvax0, mvfx1, mvfx4, mvfx0
    b230:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    b234:	000007f3 	strdeq	r0, [r0], -r3
    b238:	0007731d 	andeq	r7, r7, sp, lsl r3
    b23c:	04160000 	ldreq	r0, [r6], #-0
    b240:	000007e8 	andeq	r0, r0, r8, ror #15
    b244:	00192b15 	andseq	r2, r9, r5, lsl fp
    b248:	0e7b1600 	cdpeq	6, 7, cr1, cr11, cr0, {0}
    b24c:	0000042e 	andeq	r0, r0, lr, lsr #8
    b250:	00190015 	andseq	r0, r9, r5, lsl r0
    b254:	0c7c1600 	ldcleq	6, cr1, [ip], #-0
    b258:	00000041 	andeq	r0, r0, r1, asr #32
    b25c:	00178e15 	andseq	r8, r7, r5, lsl lr
    b260:	147c1600 	ldrbtne	r1, [ip], #-1536	; 0xfffffa00
    b264:	00000041 	andeq	r0, r0, r1, asr #32
    b268:	00171815 	andseq	r1, r7, r5, lsl r8
    b26c:	1c7c1600 	ldclne	6, cr1, [ip], #-0
    b270:	00000041 	andeq	r0, r0, r1, asr #32
    b274:	00237005 	eoreq	r7, r3, r5
    b278:	110b1700 	tstne	fp, r0, lsl #14
    b27c:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    b280:	00363c05 	eorseq	r3, r6, r5, lsl #24
    b284:	180c1700 	stmdane	ip, {r8, r9, sl, ip}
    b288:	00000846 	andeq	r0, r0, r6, asr #16
    b28c:	00083504 	andeq	r3, r8, r4, lsl #10
    b290:	24871a00 	strcs	r1, [r7], #2560	; 0xa00
    b294:	17100000 	ldrne	r0, [r0, -r0]
    b298:	08880817 	stmeq	r8, {r0, r1, r2, r4, fp}
    b29c:	151b0000 	ldrne	r0, [fp, #-0]
    b2a0:	17000032 	smladxne	r0, r2, r0, r0
    b2a4:	08d20b18 	ldmeq	r2, {r3, r4, r8, r9, fp}^
    b2a8:	1b000000 	blne	b2b0 <errno+0xb2ac>
    b2ac:	00002f0f 	andeq	r2, r0, pc, lsl #30
    b2b0:	ec0b1917 			; <UNDEFINED> instruction: 0xec0b1917
    b2b4:	04000008 	streq	r0, [r0], #-8
    b2b8:	002fdb1b 	eoreq	sp, pc, fp, lsl fp	; <UNPREDICTABLE>
    b2bc:	0d1a1700 	ldceq	7, cr1, [sl, #-0]
    b2c0:	00000901 	andeq	r0, r0, r1, lsl #18
    b2c4:	40381b08 	eorsmi	r1, r8, r8, lsl #22
    b2c8:	1b170000 	blne	5cb2d0 <__bss_end__+0x482288>
    b2cc:	0003ba0b 	andeq	fp, r3, fp, lsl #20
    b2d0:	09000c00 	stmdbeq	r0, {sl, fp}
    b2d4:	00003800 	andeq	r3, r0, r0, lsl #16
    b2d8:	00590407 	subseq	r0, r9, r7, lsl #8
    b2dc:	10170000 	andsne	r0, r7, r0
    b2e0:	0008b30e 	andeq	fp, r8, lr, lsl #6
    b2e4:	2ba70a00 	blcs	fe9cdaec <__bss_end__+0xfe884aa4>
    b2e8:	0a000000 	beq	b2f0 <errno+0xb2ec>
    b2ec:	0000370d 	andeq	r3, r0, sp, lsl #14
    b2f0:	36b10a01 	ldrtcc	r0, [r1], r1, lsl #20
    b2f4:	0a020000 	beq	8b2fc <morecore_area+0x422fc>
    b2f8:	00002e48 	andeq	r2, r0, r8, asr #28
    b2fc:	411c0003 	tstmi	ip, r3
    b300:	cc000000 	stcgt	0, cr0, [r0], {-0}
    b304:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
    b308:	000008cc 	andeq	r0, r0, ip, asr #17
    b30c:	0008291d 	andeq	r2, r8, sp, lsl r9
    b310:	08881d00 	stmeq	r8, {r8, sl, fp, ip}
    b314:	16000000 	strne	r0, [r0], -r0
    b318:	00084104 	andeq	r4, r8, r4, lsl #2
    b31c:	b3041600 	movwlt	r1, #17920	; 0x4600
    b320:	1c000008 	stcne	0, cr0, [r0], {8}
    b324:	00000041 	andeq	r0, r0, r1, asr #32
    b328:	000008ec 	andeq	r0, r0, ip, ror #17
    b32c:	0008cc1d 	andeq	ip, r8, sp, lsl ip
    b330:	08291d00 	stmdaeq	r9!, {r8, sl, fp, ip}
    b334:	16000000 	strne	r0, [r0], -r0
    b338:	0008d804 	andeq	sp, r8, r4, lsl #16
    b33c:	03ba1c00 			; <UNDEFINED> instruction: 0x03ba1c00
    b340:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    b344:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
    b348:	00000008 	andeq	r0, r0, r8
    b34c:	08f20416 	ldmeq	r2!, {r1, r2, r4, sl}^
    b350:	5a090000 	bpl	24b358 <__bss_end__+0x102310>
    b354:	0700002e 	streq	r0, [r0, -lr, lsr #32]
    b358:	00005904 	andeq	r5, r0, r4, lsl #18
    b35c:	0e151800 	cdpeq	8, 1, cr1, cr5, cr0, {0}
    b360:	00000944 	andeq	r0, r0, r4, asr #18
    b364:	0024d90a 	eoreq	sp, r4, sl, lsl #18
    b368:	fb0a0000 	blx	28b372 <__bss_end__+0x14232a>
    b36c:	0100002b 	tsteq	r0, fp, lsr #32
    b370:	00290f0a 	eoreq	r0, r9, sl, lsl #30
    b374:	ce0a0200 	cdpgt	2, 0, cr0, cr10, cr0, {0}
    b378:	0300002f 	movweq	r0, #47	; 0x2f
    b37c:	002e0e0a 	eoreq	r0, lr, sl, lsl #28
    b380:	fc0a0400 	stc2	4, cr0, [sl], {-0}
    b384:	05000028 	streq	r0, [r0, #-40]	; 0xffffffd8
    b388:	002c840a 	eoreq	r8, ip, sl, lsl #8
    b38c:	05000600 	streq	r0, [r0, #-1536]	; 0xfffffa00
    b390:	0000367a 	andeq	r3, r0, sl, ror r6
    b394:	07031d18 	smladeq	r3, r8, sp, r1
    b398:	1f000009 	svcne	0x00000009
    b39c:	09271814 	stmdbeq	r7!, {r2, r4, fp, ip}
    b3a0:	0000099b 	muleq	r0, fp, r9
    b3a4:	0036851b 	eorseq	r8, r6, fp, lsl r5
    b3a8:	12281800 	eorne	r1, r8, #0, 16
    b3ac:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    b3b0:	69701200 	ldmdbvs	r0!, {r9, ip}^
    b3b4:	2918006e 	ldmdbcs	r8, {r1, r2, r3, r5, r6}
    b3b8:	0003b312 	andeq	fp, r3, r2, lsl r3
    b3bc:	001b0400 	andseq	r0, fp, r0, lsl #8
    b3c0:	1800004e 	stmdane	r0, {r1, r2, r3, r6}
    b3c4:	03b3122a 			; <UNDEFINED> instruction: 0x03b3122a
    b3c8:	1b080000 	blne	20b3d0 <__bss_end__+0xc2388>
    b3cc:	00002367 	andeq	r2, r0, r7, ror #6
    b3d0:	b3122b18 	tstlt	r2, #24, 22	; 0x6000
    b3d4:	0c000003 	stceq	0, cr0, [r0], {3}
    b3d8:	0033901b 	eorseq	r9, r3, fp, lsl r0
    b3dc:	122c1800 	eorne	r1, ip, #0, 16
    b3e0:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    b3e4:	141f0010 	ldrne	r0, [pc], #-16	; b3ec <errno+0xb3e8>
    b3e8:	e6092e18 			; <UNDEFINED> instruction: 0xe6092e18
    b3ec:	1b000009 	blne	b418 <errno+0xb414>
    b3f0:	00002f31 	andeq	r2, r0, r1, lsr pc
    b3f4:	b3122f18 	tstlt	r2, #24, 30	; 0x60
    b3f8:	00000003 	andeq	r0, r0, r3
    b3fc:	0035ff1b 	eorseq	pc, r5, fp, lsl pc	; <UNPREDICTABLE>
    b400:	12301800 	eorsne	r1, r0, #0, 16
    b404:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
    b408:	2b351b04 	blcs	d52020 <__bss_end__+0xc08fd8>
    b40c:	31180000 	tstcc	r8, r0
    b410:	0003b312 	andeq	fp, r3, r2, lsl r3
    b414:	cf1b0800 	svcgt	0x001b0800
    b418:	18000042 	stmdane	r0, {r1, r6}
    b41c:	03b31232 			; <UNDEFINED> instruction: 0x03b31232
    b420:	1b0c0000 	blne	30b428 <__bss_end__+0x1c23e0>
    b424:	00003390 	muleq	r0, r0, r3
    b428:	b3123318 	tstlt	r2, #24, 6	; 0x60000000
    b42c:	10000003 	andne	r0, r0, r3
    b430:	18041f00 	stmdane	r4, {r8, r9, sl, fp, ip}
    b434:	09fd0935 	ldmibeq	sp!, {r0, r2, r4, r5, r8, fp}^
    b438:	971b0000 	ldrls	r0, [fp, -r0]
    b43c:	18000034 	stmdane	r0, {r2, r4, r5}
    b440:	03b31236 			; <UNDEFINED> instruction: 0x03b31236
    b444:	00000000 	andeq	r0, r0, r0
    b448:	3818081f 	ldmdacc	r8, {r0, r1, r2, r3, r4, fp}
    b44c:	000a2109 	andeq	r2, sl, r9, lsl #2
    b450:	34971b00 	ldrcc	r1, [r7], #2816	; 0xb00
    b454:	39180000 	ldmdbcc	r8, {}	; <UNPREDICTABLE>
    b458:	0003b312 	andeq	fp, r3, r2, lsl r3
    b45c:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    b460:	1800003e 	stmdane	r0, {r1, r2, r3, r4, r5}
    b464:	03b3123a 			; <UNDEFINED> instruction: 0x03b3123a
    b468:	00040000 	andeq	r0, r4, r0
    b46c:	3c180c1f 	ldccc	12, cr0, [r8], {31}
    b470:	000a5209 	andeq	r5, sl, r9, lsl #4
    b474:	34971b00 	ldrcc	r1, [r7], #2816	; 0xb00
    b478:	3d180000 	ldccc	0, cr0, [r8, #-0]
    b47c:	0003b312 	andeq	fp, r3, r2, lsl r3
    b480:	0e1b0000 	cdpeq	0, 1, cr0, cr11, cr0, {0}
    b484:	1800003e 	stmdane	r0, {r1, r2, r3, r4, r5}
    b488:	03b3123e 			; <UNDEFINED> instruction: 0x03b3123e
    b48c:	1b040000 	blne	10b494 <morecore_area+0xc2494>
    b490:	00002907 	andeq	r2, r0, r7, lsl #18
    b494:	b3123f18 	tstlt	r2, #24, 30	; 0x60
    b498:	08000003 	stmdaeq	r0, {r0, r1}
    b49c:	18142000 	ldmdane	r4, {sp}
    b4a0:	0aa40526 	beq	fe90c940 <__bss_end__+0xfe7c38f8>
    b4a4:	85210000 	strhi	r0, [r1, #-0]!
    b4a8:	18000036 	stmdane	r0, {r1, r2, r4, r5}
    b4ac:	09500b2d 	ldmdbeq	r0, {r0, r2, r3, r5, r8, r9, fp}^
    b4b0:	6d220000 	stcvs	0, cr0, [r2, #-0]
    b4b4:	18006973 	stmdane	r0, {r0, r1, r4, r5, r6, r8, fp, sp, lr}
    b4b8:	099b0b34 	ldmibeq	fp, {r2, r4, r5, r8, r9, fp}
    b4bc:	69220000 	stmdbvs	r2!, {}	; <UNPREDICTABLE>
    b4c0:	18007172 	stmdane	r0, {r1, r4, r5, r6, r8, ip, sp, lr}
    b4c4:	09e60b37 	stmibeq	r6!, {r0, r1, r2, r4, r5, r8, r9, fp}^
    b4c8:	0e210000 	cdpeq	0, 2, cr0, cr1, cr0, {0}
    b4cc:	1800003e 	stmdane	r0, {r1, r2, r3, r4, r5}
    b4d0:	09fd0b3b 	ldmibeq	sp!, {r0, r1, r3, r4, r5, r8, r9, fp}^
    b4d4:	63220000 			; <UNDEFINED> instruction: 0x63220000
    b4d8:	18007570 	stmdane	r0, {r4, r5, r6, r8, sl, ip, sp, lr}
    b4dc:	0a210b40 	beq	84e1e4 <__bss_end__+0x70519c>
    b4e0:	19210000 	stmdbne	r1!, {}	; <UNPREDICTABLE>
    b4e4:	18000029 	stmdane	r0, {r0, r3, r5}
    b4e8:	03ba0f41 			; <UNDEFINED> instruction: 0x03ba0f41
    b4ec:	1f000000 	svcne	0x00000000
    b4f0:	09241818 	stmdbeq	r4!, {r3, r4, fp, ip}
    b4f4:	00000ac1 	andeq	r0, r0, r1, asr #21
    b4f8:	00038d1b 	andeq	r8, r3, fp, lsl sp
    b4fc:	10251800 	eorne	r1, r5, r0, lsl #16
    b500:	00000944 	andeq	r0, r0, r4, asr #18
    b504:	0a522300 	beq	149410c <__bss_end__+0x134b0c4>
    b508:	00040000 	andeq	r0, r4, r0
    b50c:	0030be05 	eorseq	fp, r0, r5, lsl #28
    b510:	03431800 	movteq	r1, #14336	; 0x3800
    b514:	00000aa4 	andeq	r0, r0, r4, lsr #21
    b518:	0026b605 	eoreq	fp, r6, r5, lsl #12
    b51c:	0d451800 	stcleq	8, cr1, [r5, #-0]
    b520:	00000041 	andeq	r0, r0, r1, asr #32
    b524:	00287305 	eoreq	r7, r8, r5, lsl #6
    b528:	0f4e1800 	svceq	0x004e1800
    b52c:	00000ae5 	andeq	r0, r0, r5, ror #21
    b530:	0aeb0416 	beq	ffacc590 <__bss_end__+0xff983548>
    b534:	411c0000 	tstmi	ip, r0
    b538:	fa000000 	blx	b540 <errno+0xb53c>
    b53c:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    b540:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b544:	292e0500 	stmdbcs	lr!, {r8, sl}
    b548:	5f180000 	svcpl	0x00180000
    b54c:	000b0610 	andeq	r0, fp, r0, lsl r6
    b550:	0c041600 	stceq	6, cr1, [r4], {-0}
    b554:	1e00000b 	cdpne	0, 0, cr0, cr0, cr11, {0}
    b558:	00000b21 	andeq	r0, r0, r1, lsr #22
    b55c:	0003ba1d 	andeq	fp, r3, sp, lsl sl
    b560:	0ad91d00 	beq	ff652968 <__bss_end__+0xff509920>
    b564:	ba1d0000 	blt	74b56c <__bss_end__+0x602524>
    b568:	00000003 	andeq	r0, r0, r3
    b56c:	0025b505 	eoreq	fp, r5, r5, lsl #10
    b570:	14701800 	ldrbtne	r1, [r0], #-2048	; 0xfffff800
    b574:	00000b2d 	andeq	r0, r0, sp, lsr #22
    b578:	0b330416 	bleq	ccc5d8 <__bss_end__+0xb83590>
    b57c:	cd1c0000 	ldcgt	0, cr0, [ip, #-0]
    b580:	5100000a 	tstpl	r0, sl
    b584:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    b588:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b58c:	000ac11d 	andeq	ip, sl, sp, lsl r1
    b590:	0afa1d00 	beq	ffe92998 <__bss_end__+0xffd49950>
    b594:	ba1d0000 	blt	74b59c <__bss_end__+0x602554>
    b598:	00000003 	andeq	r0, r0, r3
    b59c:	00318e05 	eorseq	r8, r1, r5, lsl #28
    b5a0:	0f7b1800 	svceq	0x007b1800
    b5a4:	00000b5d 	andeq	r0, r0, sp, asr fp
    b5a8:	0b630416 	bleq	18cc608 <__bss_end__+0x17835c0>
    b5ac:	411c0000 	tstmi	ip, r0
    b5b0:	77000000 	strvc	r0, [r0, -r0]
    b5b4:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    b5b8:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b5bc:	000acd1d 	andeq	ip, sl, sp, lsl sp
    b5c0:	0c1f0000 	ldceq	0, cr0, [pc], {-0}
    b5c4:	a8097d18 	stmdage	r9, {r3, r4, r8, sl, fp, ip, sp, lr}
    b5c8:	1b00000b 	blne	b5fc <errno+0xb5f8>
    b5cc:	00002a2e 	andeq	r2, r0, lr, lsr #20
    b5d0:	ba0b7e18 	blt	2eae38 <__bss_end__+0x1a1df0>
    b5d4:	00000003 	andeq	r0, r0, r3
    b5d8:	0037c31b 	eorseq	ip, r7, fp, lsl r3
    b5dc:	1a7f1800 	bne	1fd15e4 <__bss_end__+0x1e8859c>
    b5e0:	00000b21 	andeq	r0, r0, r1, lsr #22
    b5e4:	23ca1b04 	biccs	r1, sl, #4, 22	; 0x1000
    b5e8:	80180000 	andshi	r0, r8, r0
    b5ec:	000b511c 	andeq	r5, fp, ip, lsl r1
    b5f0:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
    b5f4:	000036a4 	andeq	r3, r0, r4, lsr #13
    b5f8:	77038118 	smladvc	r3, r8, r1, r8
    b5fc:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    b600:	00002d07 	andeq	r2, r0, r7, lsl #26
    b604:	00590407 	subseq	r0, r9, r7, lsl #8
    b608:	09190000 	ldmdbeq	r9, {}	; <UNPREDICTABLE>
    b60c:	000beb0e 	andeq	lr, fp, lr, lsl #22
    b610:	249a0a00 	ldrcs	r0, [sl], #2560	; 0xa00
    b614:	0a000000 	beq	b61c <errno+0xb618>
    b618:	00002dc4 	andeq	r2, r0, r4, asr #27
    b61c:	2fe90a01 	svccs	0x00e90a01
    b620:	0a020000 	beq	8b628 <morecore_area+0x42628>
    b624:	00003224 	andeq	r3, r0, r4, lsr #4
    b628:	29e70a03 	stmibcs	r7!, {r0, r1, r9, fp}^
    b62c:	0a040000 	beq	10b634 <morecore_area+0xc2634>
    b630:	00002c3d 	andeq	r2, r0, sp, lsr ip
    b634:	4b050005 	blmi	14b650 <__bss_end__+0x2608>
    b638:	19000030 	stmdbne	r0, {r4, r5}
    b63c:	0bb40315 	bleq	fed0c298 <__bss_end__+0xfebc3250>
    b640:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    b644:	1a000024 	bne	b6dc <errno+0xb6d8>
    b648:	0c030f13 	stceq	15, cr0, [r3], {19}
    b64c:	04160000 	ldreq	r0, [r6], #-0
    b650:	00000c09 	andeq	r0, r0, r9, lsl #24
    b654:	0000411c 	andeq	r4, r0, ip, lsl r1
    b658:	000c2700 	andeq	r2, ip, r0, lsl #14
    b65c:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    b660:	eb1d0000 	bl	74b668 <__bss_end__+0x602620>
    b664:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    b668:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b66c:	000c271d 	andeq	r2, ip, sp, lsl r7
    b670:	04160000 	ldreq	r0, [r6], #-0
    b674:	0000042e 	andeq	r0, r0, lr, lsr #8
    b678:	002b3e05 	eoreq	r3, fp, r5, lsl #28
    b67c:	0f161a00 	svceq	0x00161a00
    b680:	00000c39 	andeq	r0, r0, r9, lsr ip
    b684:	0c3f0416 	cfldrseq	mvf0, [pc], #-88	; b634 <errno+0xb630>
    b688:	411c0000 	tstmi	ip, r0
    b68c:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    b690:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    b694:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b698:	000beb1d 	andeq	lr, fp, sp, lsl fp
    b69c:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    b6a0:	05000000 	streq	r0, [r0, #-0]
    b6a4:	0000313e 	andeq	r3, r0, lr, lsr r1
    b6a8:	640f211a 	strvs	r2, [pc], #-282	; b6b0 <errno+0xb6ac>
    b6ac:	1600000c 	strne	r0, [r0], -ip
    b6b0:	000c6a04 	andeq	r6, ip, r4, lsl #20
    b6b4:	00411c00 	subeq	r1, r1, r0, lsl #24
    b6b8:	0c830000 	stceq	0, cr0, [r3], {0}
    b6bc:	ba1d0000 	blt	74b6c4 <__bss_end__+0x60267c>
    b6c0:	1d000003 	stcne	0, cr0, [r0, #-12]
    b6c4:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b6c8:	000c271d 	andeq	r2, ip, sp, lsl r7
    b6cc:	6d050000 	stcvs	0, cr0, [r5, #-0]
    b6d0:	1a000025 	bne	b76c <errno+0xb768>
    b6d4:	0c8f0f23 	stceq	15, cr0, [pc], {35}	; 0x23
    b6d8:	04160000 	ldreq	r0, [r6], #-0
    b6dc:	00000c95 	muleq	r0, r5, ip
    b6e0:	0000411c 	andeq	r4, r0, ip, lsl r1
    b6e4:	000cb300 	andeq	fp, ip, r0, lsl #6
    b6e8:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    b6ec:	eb1d0000 	bl	74b6f4 <__bss_end__+0x6026ac>
    b6f0:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    b6f4:	00000c58 	andeq	r0, r0, r8, asr ip
    b6f8:	0003ba1d 	andeq	fp, r3, sp, lsl sl
    b6fc:	101f0000 	andsne	r0, pc, r0
    b700:	f109261a 			; <UNDEFINED> instruction: 0xf109261a
    b704:	1b00000c 	blne	b73c <errno+0xb738>
    b708:	00002a2e 	andeq	r2, r0, lr, lsr #20
    b70c:	ba0b271a 	blt	2d537c <__bss_end__+0x18c334>
    b710:	00000003 	andeq	r0, r0, r3
    b714:	0028551b 	eoreq	r5, r8, fp, lsl r5
    b718:	20281a00 	eorcs	r1, r8, r0, lsl #20
    b71c:	00000bf7 	strdeq	r0, [r0], -r7
    b720:	34741b04 	ldrbtcc	r1, [r4], #-2820	; 0xfffff4fc
    b724:	291a0000 	ldmdbcs	sl, {}	; <UNPREDICTABLE>
    b728:	000c2d22 	andeq	r2, ip, r2, lsr #26
    b72c:	961b0800 	ldrls	r0, [fp], -r0, lsl #16
    b730:	1a000037 	bne	b814 <errno+0xb810>
    b734:	0c831c2a 	stceq	12, cr1, [r3], {42}	; 0x2a
    b738:	000c0000 	andeq	r0, ip, r0
    b73c:	002f4d05 	eoreq	r4, pc, r5, lsl #26
    b740:	032b1a00 			; <UNDEFINED> instruction: 0x032b1a00
    b744:	00000cb3 			; <UNDEFINED> instruction: 0x00000cb3
    b748:	0031d009 	eorseq	sp, r1, r9
    b74c:	59040700 	stmdbpl	r4, {r8, r9, sl}
    b750:	13000000 	movwne	r0, #0
    b754:	0d220e1f 	stceq	14, cr0, [r2, #-124]!	; 0xffffff84
    b758:	a10a0000 	mrsge	r0, (UNDEF: 10)
    b75c:	00000033 	andeq	r0, r0, r3, lsr r0
    b760:	0032ad0a 	eorseq	sl, r2, sl, lsl #26
    b764:	a80a0100 	stmdage	sl, {r8}
    b768:	02000035 	andeq	r0, r0, #53	; 0x35
    b76c:	2db50500 	cfldr32cs	mvfx0, [r5]
    b770:	23130000 	tstcs	r3, #0
    b774:	000cfd03 	andeq	pc, ip, r3, lsl #26
    b778:	28030500 	stmdacs	r3, {r8, sl}
    b77c:	2f130000 	svccs	0x00130000
    b780:	000d3a11 	andeq	r3, sp, r1, lsl sl
    b784:	40041600 	andmi	r1, r4, r0, lsl #12
    b788:	1c00000d 	stcne	0, cr0, [r0], {13}
    b78c:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b790:	00000d63 	andeq	r0, r0, r3, ror #26
    b794:	0003ba1d 	andeq	fp, r3, sp, lsl sl
    b798:	037e1d00 	cmneq	lr, #0, 26
    b79c:	a21d0000 	andsge	r0, sp, #0
    b7a0:	1d000003 	stcne	0, cr0, [r0, #-12]
    b7a4:	00000041 	andeq	r0, r0, r1, asr #32
    b7a8:	000d221d 	andeq	r2, sp, sp, lsl r2
    b7ac:	a5050000 	strge	r0, [r5, #-0]
    b7b0:	13000031 	movwne	r0, #49	; 0x31
    b7b4:	0d6f103d 	stcleq	0, cr1, [pc, #-244]!	; b6c8 <errno+0xb6c4>
    b7b8:	04160000 	ldreq	r0, [r6], #-0
    b7bc:	00000d75 	andeq	r0, r0, r5, ror sp
    b7c0:	000d8a1e 	andeq	r8, sp, lr, lsl sl
    b7c4:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    b7c8:	ba1d0000 	blt	74b7d0 <__bss_end__+0x602788>
    b7cc:	1d000003 	stcne	0, cr0, [r0, #-12]
    b7d0:	000003a2 	andeq	r0, r0, r2, lsr #7
    b7d4:	2c181a00 			; <UNDEFINED> instruction: 0x2c181a00
    b7d8:	130c0000 	movwne	r0, #49152	; 0xc000
    b7dc:	0dbf1042 	ldceq	0, cr1, [pc, #264]!	; b8ec <errno+0xb8e8>
    b7e0:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    b7e4:	1300002a 	movwne	r0, #42	; 0x2a
    b7e8:	03ba0b43 			; <UNDEFINED> instruction: 0x03ba0b43
    b7ec:	1b000000 	blne	b7f4 <errno+0xb7f0>
    b7f0:	00002fa6 	andeq	r2, r0, r6, lsr #31
    b7f4:	2e144413 	cfmvrdlcs	r4, mvd4
    b7f8:	0400000d 	streq	r0, [r0], #-13
    b7fc:	0026781b 	eoreq	r7, r6, fp, lsl r8
    b800:	16451300 	strbne	r1, [r5], -r0, lsl #6
    b804:	00000d63 	andeq	r0, r0, r3, ror #26
    b808:	5f050008 	svcpl	0x00050008
    b80c:	13000030 	movwne	r0, #48	; 0x30
    b810:	0d8a0346 	stceq	3, cr0, [sl, #280]	; 0x118
    b814:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
    b818:	13000034 	movwne	r0, #52	; 0x34
    b81c:	0dd70f68 	ldcleq	15, cr0, [r7, #416]	; 0x1a0
    b820:	04160000 	ldreq	r0, [r6], #-0
    b824:	00000ddd 	ldrdeq	r0, [r0], -sp
    b828:	0000411c 	andeq	r4, r0, ip, lsl r1
    b82c:	000dfb00 	andeq	pc, sp, r0, lsl #22
    b830:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    b834:	8a1d0000 	bhi	74b83c <__bss_end__+0x6027f4>
    b838:	1d000003 	stcne	0, cr0, [r0, #-12]
    b83c:	00000041 	andeq	r0, r0, r1, asr #32
    b840:	000dfb1d 	andeq	pc, sp, sp, lsl fp	; <UNPREDICTABLE>
    b844:	04160000 	ldreq	r0, [r6], #-0
    b848:	0000038a 	andeq	r0, r0, sl, lsl #7
    b84c:	0028e805 	eoreq	lr, r8, r5, lsl #16
    b850:	0f781300 	svceq	0x00781300
    b854:	00000e0d 	andeq	r0, r0, sp, lsl #28
    b858:	0e130416 	cfmvrdleq	r0, mvd3
    b85c:	411c0000 	tstmi	ip, r0
    b860:	31000000 	mrscc	r0, (UNDEF: 0)
    b864:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    b868:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b86c:	00038a1d 	andeq	r8, r3, sp, lsl sl
    b870:	00411d00 	subeq	r1, r1, r0, lsl #26
    b874:	8a1d0000 	bhi	74b87c <__bss_end__+0x602834>
    b878:	00000003 	andeq	r0, r0, r3
    b87c:	002a9a1a 	eoreq	r9, sl, sl, lsl sl
    b880:	7e130c00 	cdpvc	12, 1, cr0, cr3, cr0, {0}
    b884:	000e6610 	andeq	r6, lr, r0, lsl r6
    b888:	2a2e1b00 	bcs	b92490 <__bss_end__+0xa49448>
    b88c:	7f130000 	svcvc	0x00130000
    b890:	0003ba0b 	andeq	fp, r3, fp, lsl #20
    b894:	011b0000 	tsteq	fp, r0
    b898:	1300002f 	movwne	r0, #47	; 0x2f
    b89c:	0dcb1880 	stcleq	8, cr1, [fp, #512]	; 0x200
    b8a0:	1b040000 	blne	10b8a8 <morecore_area+0xc28a8>
    b8a4:	00002d2f 	andeq	r2, r0, pc, lsr #26
    b8a8:	01198113 	tsteq	r9, r3, lsl r1
    b8ac:	0800000e 	stmdaeq	r0, {r1, r2, r3}
    b8b0:	24040500 	strcs	r0, [r4], #-1280	; 0xfffffb00
    b8b4:	82130000 	andshi	r0, r3, #0
    b8b8:	000e3103 	andeq	r3, lr, r3, lsl #2
    b8bc:	24650900 	strbtcs	r0, [r5], #-2304	; 0xfffff700
    b8c0:	04070000 	streq	r0, [r7], #-0
    b8c4:	00000059 	andeq	r0, r0, r9, asr r0
    b8c8:	970e9a13 	smladls	lr, r3, sl, r9
    b8cc:	0a00000e 	beq	b90c <errno+0xb908>
    b8d0:	000032e5 	andeq	r3, r0, r5, ror #5
    b8d4:	2b5b0a00 	blcs	16ce0dc <__bss_end__+0x1585094>
    b8d8:	0a010000 	beq	4b8e0 <morecore_area+0x28e0>
    b8dc:	0000361e 	andeq	r3, r0, lr, lsl r6
    b8e0:	dc050002 	stcle	0, cr0, [r5], {2}
    b8e4:	13000023 	movwne	r0, #35	; 0x23
    b8e8:	0e72039e 	mrceq	3, 3, r0, cr2, cr14, {4}
    b8ec:	1d050000 	stcne	0, cr0, [r5, #-0]
    b8f0:	13000037 	movwne	r0, #55	; 0x37
    b8f4:	0eaf11ad 	fdveq<illegal precision>p	f1, f7, #5.0
    b8f8:	04160000 	ldreq	r0, [r6], #-0
    b8fc:	00000eb5 			; <UNDEFINED> instruction: 0x00000eb5
    b900:	0003ba1c 	andeq	fp, r3, ip, lsl sl
    b904:	000ed800 	andeq	sp, lr, r0, lsl #16
    b908:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    b90c:	a21d0000 	andsge	r0, sp, #0
    b910:	1d000003 	stcne	0, cr0, [r0, #-12]
    b914:	00000041 	andeq	r0, r0, r1, asr #32
    b918:	0000411d 	andeq	r4, r0, sp, lsl r1
    b91c:	0d221d00 	stceq	13, cr1, [r2, #-0]
    b920:	05000000 	streq	r0, [r0, #-0]
    b924:	000025ca 	andeq	r2, r0, sl, asr #11
    b928:	6f10bb13 	svcvs	0x0010bb13
    b92c:	0500000d 	streq	r0, [r0, #-13]
    b930:	000024e8 	andeq	r2, r0, r8, ror #9
    b934:	f015cc13 			; <UNDEFINED> instruction: 0xf015cc13
    b938:	1600000e 	strne	r0, [r0], -lr
    b93c:	000ef604 	andeq	pc, lr, r4, lsl #12
    b940:	037e1c00 	cmneq	lr, #0, 24
    b944:	0f0f0000 	svceq	0x000f0000
    b948:	ba1d0000 	blt	74b950 <__bss_end__+0x602908>
    b94c:	1d000003 	stcne	0, cr0, [r0, #-12]
    b950:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    b954:	0003a21d 	andeq	sl, r3, sp, lsl r2
    b958:	85050000 	strhi	r0, [r5, #-0]
    b95c:	13000029 	movwne	r0, #41	; 0x29
    b960:	0d6f10da 	stcleq	0, cr1, [pc, #-872]!	; b600 <errno+0xb5fc>
    b964:	d6050000 	strle	r0, [r5], -r0
    b968:	13000034 	movwne	r0, #52	; 0x34
    b96c:	0f2710e8 	svceq	0x002710e8
    b970:	04160000 	ldreq	r0, [r6], #-0
    b974:	00000f2d 	andeq	r0, r0, sp, lsr #30
    b978:	000f471e 	andeq	r4, pc, lr, lsl r7	; <UNPREDICTABLE>
    b97c:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    b980:	ba1d0000 	blt	74b988 <__bss_end__+0x602940>
    b984:	1d000003 	stcne	0, cr0, [r0, #-12]
    b988:	000003a2 	andeq	r0, r0, r2, lsr #7
    b98c:	000e971d 	andeq	r9, lr, sp, lsl r7
    b990:	d71a0000 	ldrle	r0, [sl, -r0]
    b994:	1800002d 	stmdane	r0, {r0, r2, r3, r5}
    b998:	a310ee13 	tstge	r0, #304	; 0x130
    b99c:	1b00000f 	blne	b9e0 <errno+0xb9dc>
    b9a0:	00002a2e 	andeq	r2, r0, lr, lsr #20
    b9a4:	ba0bef13 	blt	3075f8 <__bss_end__+0x1be5b0>
    b9a8:	00000003 	andeq	r0, r0, r3
    b9ac:	002cfa1b 	eoreq	pc, ip, fp, lsl sl	; <UNPREDICTABLE>
    b9b0:	17f01300 	ldrbne	r1, [r0, r0, lsl #6]!
    b9b4:	00000ea3 	andeq	r0, r0, r3, lsr #29
    b9b8:	31021b04 	tstcc	r2, r4, lsl #22
    b9bc:	f1130000 			; <UNDEFINED> instruction: 0xf1130000
    b9c0:	000ed816 	andeq	sp, lr, r6, lsl r8
    b9c4:	2d1b0800 	ldccs	8, cr0, [fp, #-0]
    b9c8:	13000031 	movwne	r0, #49	; 0x31
    b9cc:	0ee415f2 	mcreq	5, 7, r1, cr4, cr2, {7}
    b9d0:	1b0c0000 	blne	30b9d8 <__bss_end__+0x1c2990>
    b9d4:	00002f39 	andeq	r2, r0, r9, lsr pc
    b9d8:	0f17f313 	svceq	0x0017f313
    b9dc:	1000000f 	andne	r0, r0, pc
    b9e0:	002c991b 	eoreq	r9, ip, fp, lsl r9
    b9e4:	1af41300 	bne	ffd105ec <__bss_end__+0xffbc75a4>
    b9e8:	00000f1b 	andeq	r0, r0, fp, lsl pc
    b9ec:	3c050014 	stccc	0, cr0, [r5], {20}
    b9f0:	13000027 	movwne	r0, #39	; 0x27
    b9f4:	0f4703f5 	svceq	0x004703f5
    b9f8:	87100000 	ldrhi	r0, [r0, -r0]
    b9fc:	13000037 	movwne	r0, #55	; 0x37
    ba00:	bc0f014d 	stflts	f0, [pc], {77}	; 0x4d
    ba04:	1600000f 	strne	r0, [r0], -pc
    ba08:	000fc204 	andeq	ip, pc, r4, lsl #4
    ba0c:	00411c00 	subeq	r1, r1, r0, lsl #24
    ba10:	0fdb0000 	svceq	0x00db0000
    ba14:	ba1d0000 	blt	74ba1c <__bss_end__+0x6029d4>
    ba18:	1d000003 	stcne	0, cr0, [r0, #-12]
    ba1c:	000003a2 	andeq	r0, r0, r2, lsr #7
    ba20:	000fdb1d 	andeq	sp, pc, sp, lsl fp	; <UNPREDICTABLE>
    ba24:	04160000 	ldreq	r0, [r6], #-0
    ba28:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    ba2c:	00259a10 	eoreq	r9, r5, r0, lsl sl
    ba30:	015c1300 	cmpeq	ip, r0, lsl #6
    ba34:	000fee0f 	andeq	lr, pc, pc, lsl #28
    ba38:	f4041600 	vst1.8	{d1-d3}, [r4], r0
    ba3c:	1c00000f 	stcne	0, cr0, [r0], {15}
    ba40:	00000041 	andeq	r0, r0, r1, asr #32
    ba44:	00001012 	andeq	r1, r0, r2, lsl r0
    ba48:	0003ba1d 	andeq	fp, r3, sp, lsl sl
    ba4c:	03a21d00 			; <UNDEFINED> instruction: 0x03a21d00
    ba50:	a21d0000 	andsge	r0, sp, #0
    ba54:	1d000003 	stcne	0, cr0, [r0, #-12]
    ba58:	00000fdb 	ldrdeq	r0, [r0], -fp
    ba5c:	24511000 	ldrbcs	r1, [r1], #-0
    ba60:	6b130000 	blvs	4cba68 <__bss_end__+0x382a20>
    ba64:	101f0f01 	andsne	r0, pc, r1, lsl #30
    ba68:	04160000 	ldreq	r0, [r6], #-0
    ba6c:	00001025 	andeq	r1, r0, r5, lsr #32
    ba70:	0000411c 	andeq	r4, r0, ip, lsl r1
    ba74:	00103e00 	andseq	r3, r0, r0, lsl #28
    ba78:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    ba7c:	a21d0000 	andsge	r0, sp, #0
    ba80:	1d000003 	stcne	0, cr0, [r0, #-12]
    ba84:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    ba88:	13102400 	tstne	r0, #0, 8
    ba8c:	81090170 	tsthi	r9, r0, ror r1
    ba90:	0f000010 	svceq	0x00000010
    ba94:	00002a07 	andeq	r2, r0, r7, lsl #20
    ba98:	14017113 	strne	r7, [r1], #-275	; 0xfffffeed
    ba9c:	00000faf 	andeq	r0, r0, pc, lsr #31
    baa0:	317c0f00 	cmncc	ip, r0, lsl #30
    baa4:	72130000 	andsvc	r0, r3, #0
    baa8:	0fe11401 	svceq	0x00e11401
    baac:	0f040000 	svceq	0x00040000
    bab0:	000024d4 	ldrdeq	r2, [r0], -r4
    bab4:	12017313 	andne	r7, r1, #1275068416	; 0x4c000000
    bab8:	00001012 	andeq	r1, r0, r2, lsl r0
    babc:	2a2e0f08 	bcs	b8f6e4 <__bss_end__+0xa4669c>
    bac0:	74130000 	ldrvc	r0, [r3], #-0
    bac4:	03ba0b01 			; <UNDEFINED> instruction: 0x03ba0b01
    bac8:	000c0000 	andeq	r0, ip, r0
    bacc:	0037a810 	eorseq	sl, r7, r0, lsl r8
    bad0:	01751300 	cmneq	r5, r0, lsl #6
    bad4:	00103e03 	andseq	r3, r0, r3, lsl #28
    bad8:	306e1000 	rsbcc	r1, lr, r0
    badc:	d0130000 	andsle	r0, r3, r0
    bae0:	109b1101 	addsne	r1, fp, r1, lsl #2
    bae4:	04160000 	ldreq	r0, [r6], #-0
    bae8:	000010a1 	andeq	r1, r0, r1, lsr #1
    baec:	00042e1c 	andeq	r2, r4, ip, lsl lr
    baf0:	0010b000 	andseq	fp, r0, r0
    baf4:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    baf8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    bafc:	000035be 			; <UNDEFINED> instruction: 0x000035be
    bb00:	01d31308 	bicseq	r1, r3, r8, lsl #6
    bb04:	0010db10 	andseq	sp, r0, r0, lsl fp
    bb08:	2a2e0f00 	bcs	b8f710 <__bss_end__+0xa466c8>
    bb0c:	d4130000 	ldrle	r0, [r3], #-0
    bb10:	03ba0b01 			; <UNDEFINED> instruction: 0x03ba0b01
    bb14:	0f000000 	svceq	0x00000000
    bb18:	000026d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    bb1c:	1801d513 	stmdane	r1, {r0, r1, r4, r8, sl, ip, lr, pc}
    bb20:	0000108e 	andeq	r1, r0, lr, lsl #1
    bb24:	f4100004 			; <UNDEFINED> instruction: 0xf4100004
    bb28:	13000037 	movwne	r0, #55	; 0x37
    bb2c:	b00301d6 	ldrdlt	r0, [r3], -r6
    bb30:	05000010 	streq	r0, [r0, #-16]
    bb34:	00003b4f 	andeq	r3, r0, pc, asr #22
    bb38:	f41e0c03 			; <UNDEFINED> instruction: 0xf41e0c03
    bb3c:	1a000010 	bne	bb84 <errno+0xbb80>
    bb40:	00003ca3 	andeq	r3, r0, r3, lsr #25
    bb44:	082a03c8 	stmdaeq	sl!, {r3, r6, r7, r8, r9}
    bb48:	00001190 	muleq	r0, r0, r1
    bb4c:	00646912 	rsbeq	r6, r4, r2, lsl r9
    bb50:	90152c03 	andsls	r2, r5, r3, lsl #24
    bb54:	00000011 	andeq	r0, r0, r1, lsl r0
    bb58:	0026b01b 	eoreq	fp, r6, fp, lsl r0
    bb5c:	0b2d0300 	bleq	b4c764 <__bss_end__+0xa0371c>
    bb60:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
    bb64:	18cc1b04 	stmiane	ip, {r2, r8, r9, fp, ip}^
    bb68:	2f030000 	svccs	0x00030000
    bb6c:	0012900f 	andseq	r9, r2, pc
    bb70:	b01b0800 	andslt	r0, fp, r0, lsl #16
    bb74:	0300004e 	movweq	r0, #78	; 0x4e
    bb78:	12c00f30 	sbcne	r0, r0, #48, 30	; 0xc0
    bb7c:	1b0c0000 	blne	30bb84 <__bss_end__+0x1c2b3c>
    bb80:	00003ff8 	strdeq	r3, [r0], -r8
    bb84:	d10c3103 	tstle	ip, r3, lsl #2
    bb88:	10000012 	andne	r0, r0, r2, lsl r0
    bb8c:	003e231b 	eorseq	r2, lr, fp, lsl r3
    bb90:	10330300 	eorsne	r0, r3, r0, lsl #6
    bb94:	000012d7 	ldrdeq	r1, [r0], -r7
    bb98:	3b6e1b14 	blcc	1b927f0 <__bss_end__+0x1a497a8>
    bb9c:	35030000 	strcc	r0, [r3, #-0]
    bba0:	00121e24 	andseq	r1, r2, r4, lsr #28
    bba4:	261b1800 	ldrcs	r1, [fp], -r0, lsl #16
    bba8:	0300003b 	movweq	r0, #59	; 0x3b
    bbac:	121e2437 	andsne	r2, lr, #922746880	; 0x37000000
    bbb0:	122c0000 	eorne	r0, ip, #0
    bbb4:	006b6c63 	rsbeq	r6, fp, r3, ror #24
    bbb8:	e2143903 	ands	r3, r4, #49152	; 0xc000
    bbbc:	40000012 	andmi	r0, r0, r2, lsl r0
    bbc0:	003d001b 	eorseq	r0, sp, fp, lsl r0
    bbc4:	113b0300 	teqne	fp, r0, lsl #6
    bbc8:	00000453 	andeq	r0, r0, r3, asr r4
    bbcc:	31d71b44 	bicscc	r1, r7, r4, asr #22
    bbd0:	3d030000 	stccc	0, cr0, [r3, #-0]
    bbd4:	00004109 	andeq	r4, r0, r9, lsl #2
    bbd8:	0900c400 	stmdbeq	r0, {sl, lr, pc}
    bbdc:	00003bb1 			; <UNDEFINED> instruction: 0x00003bb1
    bbe0:	00590407 	subseq	r0, r9, r7, lsl #8
    bbe4:	0f1b0000 	svceq	0x001b0000
    bbe8:	0011c106 	andseq	ip, r1, r6, lsl #2
    bbec:	3c680a00 			; <UNDEFINED> instruction: 0x3c680a00
    bbf0:	0a000000 	beq	bbf8 <errno+0xbbf4>
    bbf4:	00003c73 	andeq	r3, r0, r3, ror ip
    bbf8:	3b370a01 	blcc	dce404 <__bss_end__+0xc853bc>
    bbfc:	0a000000 	beq	bc04 <errno+0xbc00>
    bc00:	00003cf5 	strdeq	r3, [r0], -r5
    bc04:	3cc40a01 	vstmiacc	r4, {s1}
    bc08:	00010000 	andeq	r0, r1, r0
    bc0c:	003b5f09 	eorseq	r5, fp, r9, lsl #30
    bc10:	59040700 	stmdbpl	r4, {r8, r9, sl}
    bc14:	03000000 	movweq	r0, #0
    bc18:	11ec0610 	mvnne	r0, r0, lsl r6
    bc1c:	bc0a0000 	stclt	0, cr0, [sl], {-0}
    bc20:	0000003b 	andeq	r0, r0, fp, lsr r0
    bc24:	003d190a 	eorseq	r1, sp, sl, lsl #18
    bc28:	060a0100 	streq	r0, [sl], -r0, lsl #2
    bc2c:	0200003d 	andeq	r0, r0, #61	; 0x3d
    bc30:	003c410a 	eorseq	r4, ip, sl, lsl #2
    bc34:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
    bc38:	00003afb 	strdeq	r3, [r0], -fp
    bc3c:	f8101b03 			; <UNDEFINED> instruction: 0xf8101b03
    bc40:	16000011 			; <UNDEFINED> instruction: 0x16000011
    bc44:	0011fe04 	andseq	pc, r1, r4, lsl #28
    bc48:	12181e00 	andsne	r1, r8, #0, 28
    bc4c:	181d0000 	ldmdane	sp, {}	; <UNPREDICTABLE>
    bc50:	1d000012 	stcne	0, cr0, [r0, #-72]	; 0xffffffb8
    bc54:	000011c1 	andeq	r1, r0, r1, asr #3
    bc58:	0003a21d 	andeq	sl, r3, sp, lsl r2
    bc5c:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    bc60:	16000000 	strne	r0, [r0], -r0
    bc64:	0010e804 	andseq	lr, r0, r4, lsl #16
    bc68:	3b0e1a00 	blcc	392470 <__bss_end__+0x249428>
    bc6c:	03140000 	tsteq	r4, #0
    bc70:	126d081d 	rsbne	r0, sp, #1900544	; 0x1d0000
    bc74:	271b0000 	ldrcs	r0, [fp, -r0]
    bc78:	0300004d 	movweq	r0, #77	; 0x4d
    bc7c:	11ec181f 	mvnne	r1, pc, lsl r8
    bc80:	1b000000 	blne	bc88 <errno+0xbc84>
    bc84:	00003d31 	andeq	r3, r0, r1, lsr sp
    bc88:	ba0b2103 	blt	2d409c <__bss_end__+0x18b054>
    bc8c:	04000003 	streq	r0, [r0], #-3
    bc90:	003b9b1b 	eorseq	r9, fp, fp, lsl fp
    bc94:	0c230300 	stceq	3, cr0, [r3], #-0
    bc98:	000003a2 	andeq	r0, r0, r2, lsr #7
    bc9c:	3ce51b08 	vstmiacc	r5!, {d17-d20}
    bca0:	25030000 	strcs	r0, [r3, #-0]
    bca4:	0003ae15 	andeq	sl, r3, r5, lsl lr
    bca8:	a11b0c00 	tstge	fp, r0, lsl #24
    bcac:	03000019 	movweq	r0, #25
    bcb0:	03ba0b27 			; <UNDEFINED> instruction: 0x03ba0b27
    bcb4:	00100000 	andseq	r0, r0, r0
    bcb8:	0003bc1c 	andeq	fp, r3, ip, lsl ip
    bcbc:	00129000 	andseq	r9, r2, r0
    bcc0:	12181d00 	andsne	r1, r8, #0, 26
    bcc4:	ba1d0000 	blt	74bccc <__bss_end__+0x602c84>
    bcc8:	1d000003 	stcne	0, cr0, [r0, #-12]
    bccc:	000003a2 	andeq	r0, r0, r2, lsr #7
    bcd0:	0011ec1d 	andseq	lr, r1, sp, lsl ip
    bcd4:	03ba1d00 			; <UNDEFINED> instruction: 0x03ba1d00
    bcd8:	16000000 	strne	r0, [r0], -r0
    bcdc:	00126d04 	andseq	r6, r2, r4, lsl #26
    bce0:	03bc1c00 			; <UNDEFINED> instruction: 0x03bc1c00
    bce4:	12b90000 	adcsne	r0, r9, #0
    bce8:	181d0000 	ldmdane	sp, {}	; <UNPREDICTABLE>
    bcec:	1d000012 	stcne	0, cr0, [r0, #-72]	; 0xffffffb8
    bcf0:	000012b9 			; <UNDEFINED> instruction: 0x000012b9
    bcf4:	0003a21d 	andeq	sl, r3, sp, lsl r2
    bcf8:	11ec1d00 	mvnne	r1, r0, lsl #26
    bcfc:	ba1d0000 	blt	74bd04 <__bss_end__+0x602cbc>
    bd00:	00000003 	andeq	r0, r0, r3
    bd04:	12bf0416 	adcsne	r0, pc, #369098752	; 0x16000000
    bd08:	16250000 	strtne	r0, [r5], -r0
    bd0c:	00129604 	andseq	r9, r2, r4, lsl #12
    bd10:	12d11e00 	sbcsne	r1, r1, #0, 28
    bd14:	181d0000 	ldmdane	sp, {}	; <UNPREDICTABLE>
    bd18:	00000012 	andeq	r0, r0, r2, lsl r0
    bd1c:	12c60416 	sbcne	r0, r6, #369098752	; 0x16000000
    bd20:	04160000 	ldreq	r0, [r6], #-0
    bd24:	00000048 	andeq	r0, r0, r8, asr #32
    bd28:	003cb119 	eorseq	fp, ip, r9, lsl r1
    bd2c:	dd041600 	stcle	6, cr1, [r4, #-0]
    bd30:	16000012 			; <UNDEFINED> instruction: 0x16000012
    bd34:	00006e04 	andeq	r6, r0, r4, lsl #28
    bd38:	02010200 	andeq	r0, r1, #0, 4
    bd3c:	00001bc9 	andeq	r1, r0, r9, asr #23
    bd40:	00204e09 	eoreq	r4, r0, r9, lsl #28
    bd44:	59040700 	stmdbpl	r4, {r8, r9, sl}
    bd48:	1c000000 	stcne	0, cr0, [r0], {-0}
    bd4c:	1314060f 	tstne	r4, #15728640	; 0xf00000
    bd50:	420a0000 	andmi	r0, sl, #0
    bd54:	00000021 	andeq	r0, r0, r1, lsr #32
    bd58:	0021b30a 	eoreq	fp, r1, sl, lsl #6
    bd5c:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    bd60:	00002001 	andeq	r2, r0, r1
    bd64:	410d141c 	tstmi	sp, ip, lsl r4
    bd68:	04000000 	streq	r0, [r0], #-0
    bd6c:	00001314 	andeq	r1, r0, r4, lsl r3
    bd70:	00202e09 	eoreq	r2, r0, r9, lsl #28
    bd74:	59040700 	stmdbpl	r4, {r8, r9, sl}
    bd78:	1d000000 	stcne	0, cr0, [r0, #-0]
    bd7c:	134a0610 	movtne	r0, #42512	; 0xa610
    bd80:	000a0000 	andeq	r0, sl, r0
    bd84:	01000021 	tsteq	r0, r1, lsr #32
    bd88:	0021a00a 	eoreq	sl, r1, sl
    bd8c:	5e0a0200 	cdppl	2, 0, cr0, cr10, cr0, {0}
    bd90:	0300001f 	movweq	r0, #31
    bd94:	20570900 	subscs	r0, r7, r0, lsl #18
    bd98:	04070000 	streq	r0, [r7], #-0
    bd9c:	00000059 	andeq	r0, r0, r9, asr r0
    bda0:	9306121e 	movwls	r1, #25118	; 0x621e
    bda4:	0a000013 	beq	bdf8 <errno+0xbdf4>
    bda8:	0000215e 	andeq	r2, r0, lr, asr r1
    bdac:	20800a03 	addcs	r0, r0, r3, lsl #20
    bdb0:	0a040000 	beq	10bdb8 <morecore_area+0xc2db8>
    bdb4:	00002173 	andeq	r2, r0, r3, ror r1
    bdb8:	20650a05 	rsbcs	r0, r5, r5, lsl #20
    bdbc:	0a060000 	beq	18bdc4 <__bss_end__+0x42d7c>
    bdc0:	0000218f 	andeq	r2, r0, pc, lsl #3
    bdc4:	21ca0a07 	biccs	r0, sl, r7, lsl #20
    bdc8:	0a080000 	beq	20bdd0 <__bss_end__+0xc2d88>
    bdcc:	00002181 	andeq	r2, r0, r1, lsl #3
    bdd0:	1f870a09 	svcne	0x00870a09
    bdd4:	0a0a0000 	beq	28bddc <__bss_end__+0x142d94>
    bdd8:	00001f75 	andeq	r1, r0, r5, ror pc
    bddc:	c30b000b 	movwgt	r0, #45067	; 0xb00b
    bde0:	1e00001f 	mcrne	0, 0, r0, cr0, cr15, {0}
    bde4:	13203f22 			; <UNDEFINED> instruction: 0x13203f22
    bde8:	03050000 	movweq	r0, #20480	; 0x5000
    bdec:	00028fc0 	andeq	r8, r2, r0, asr #31
    bdf0:	0021170b 	eoreq	r1, r1, fp, lsl #14
    bdf4:	3b231e00 	blcc	8d35fc <__bss_end__+0x78a5b4>
    bdf8:	00001320 	andeq	r1, r0, r0, lsr #6
    bdfc:	8fc40305 	svchi	0x00c40305
    be00:	d60b0002 	strle	r0, [fp], -r2
    be04:	0400003c 	streq	r0, [r0], #-60	; 0xffffffc4
    be08:	10f41d1e 	rscsne	r1, r4, lr, lsl sp
    be0c:	03050000 	movweq	r0, #20480	; 0x5000
    be10:	0002c684 	andeq	ip, r2, r4, lsl #13
    be14:	003b470b 	eorseq	r4, fp, fp, lsl #14
    be18:	1e210400 	cdpne	4, 2, cr0, cr1, cr0, {0}
    be1c:	000013db 	ldrdeq	r1, [r0], -fp
    be20:	c74c0305 	strbgt	r0, [ip, -r5, lsl #6]
    be24:	04160002 	ldreq	r0, [r6], #-2
    be28:	000010f4 	strdeq	r1, [r0], -r4
    be2c:	003bd226 	eorseq	sp, fp, r6, lsr #4
    be30:	053f0400 	ldreq	r0, [pc, #-1024]!	; ba38 <errno+0xba34>
    be34:	00000041 	andeq	r0, r0, r1, asr #32
    be38:	00018574 	andeq	r8, r1, r4, ror r5
    be3c:	00000044 	andeq	r0, r0, r4, asr #32
    be40:	94279c01 	strtls	r9, [r7], #-3073	; 0xfffff3ff
    be44:	0400003c 	streq	r0, [r0], #-60	; 0xffffffc4
    be48:	852c0638 	strhi	r0, [ip, #-1592]!	; 0xfffff9c8
    be4c:	00480001 	subeq	r0, r8, r1
    be50:	9c010000 	stcls	0, cr0, [r1], {-0}
    be54:	0000141b 	andeq	r1, r0, fp, lsl r4
    be58:	04006328 	streq	r6, [r0], #-808	; 0xfffffcd8
    be5c:	00411938 	subeq	r1, r1, r8, lsr r9
    be60:	91020000 	mrsls	r0, (UNDEF: 2)
    be64:	37290074 			; <UNDEFINED> instruction: 0x37290074
    be68:	0400003d 	streq	r0, [r0], #-61	; 0xffffffc3
    be6c:	00410528 	subeq	r0, r1, r8, lsr #10
    be70:	84a80000 	strthi	r0, [r8], #0
    be74:	00840001 	addeq	r0, r4, r1
    be78:	9c010000 	stcls	0, cr0, [r1], {-0}
    be7c:	00001456 	andeq	r1, r0, r6, asr r4
    be80:	0026412a 	eoreq	r4, r6, sl, lsr #2
    be84:	25280400 	strcs	r0, [r8, #-1024]!	; 0xfffffc00
    be88:	00001456 	andeq	r1, r0, r6, asr r4
    be8c:	7eac9103 	tanvce	f1, f3
    be90:	003cb80b 	eorseq	fp, ip, fp, lsl #16
    be94:	1a2a0400 	bne	a8ce9c <__bss_end__+0x943e54>
    be98:	000010f4 	strdeq	r1, [r0], -r4
    be9c:	7eb09103 	asnvcs	f1, f3
    bea0:	53041600 	movwpl	r1, #17920	; 0x4600
    bea4:	2b000004 	blcs	bebc <errno+0xbeb8>
    bea8:	00003b7e 	andeq	r3, r0, lr, ror fp
    beac:	78062304 	stmdavc	r6, {r2, r8, r9, sp}
    beb0:	30000184 	andcc	r0, r0, r4, lsl #3
    beb4:	01000000 	mrseq	r0, (UNDEF: 0)
    beb8:	0014829c 	mulseq	r4, ip, r2
    bebc:	3b422a00 	blcc	10966c4 <__bss_end__+0xf4d67c>
    bec0:	23040000 	movwcs	r0, #16384	; 0x4000
    bec4:	0013db2d 	andseq	sp, r3, sp, lsr #22
    bec8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    becc:	3b8f2c00 	blcc	fe3d6ed4 <__bss_end__+0xfe28de8c>
    bed0:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    bed4:	0003bc10 	andeq	fp, r3, r0, lsl ip
    bed8:	0183fc00 	orreq	pc, r3, r0, lsl #24
    bedc:	00007c00 	andeq	r7, r0, r0, lsl #24
    bee0:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
    bee4:	2a000015 	bcs	bf40 <errno+0xbf3c>
    bee8:	00003a94 	muleq	r0, r4, sl
    beec:	182d0e04 	stmdane	sp!, {r2, r9, sl, fp}
    bef0:	02000012 	andeq	r0, r0, #18
    bef4:	7e2a6c91 	mcrvc	12, 1, r6, cr10, cr1, {4}
    bef8:	0400003c 	streq	r0, [r0], #-60	; 0xffffffc4
    befc:	12b9480e 	adcsne	r4, r9, #917504	; 0xe0000
    bf00:	91020000 	mrsls	r0, (UNDEF: 2)
    bf04:	27822a68 	strcs	r2, [r2, r8, ror #20]
    bf08:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    bf0c:	0003a256 	andeq	sl, r3, r6, asr r2
    bf10:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    bf14:	00626328 	rsbeq	r6, r2, r8, lsr #6
    bf18:	ec2f0f04 	stc	15, cr0, [pc], #-16	; bf10 <errno+0xbf0c>
    bf1c:	02000011 	andeq	r0, r0, #17
    bf20:	312a6091 			; <UNDEFINED> instruction: 0x312a6091
    bf24:	0400003d 	streq	r0, [r0], #-61	; 0xffffffc3
    bf28:	03ba400f 			; <UNDEFINED> instruction: 0x03ba400f
    bf2c:	91020000 	mrsls	r0, (UNDEF: 2)
    bf30:	3bac0b00 	blcc	feb0eb38 <__bss_end__+0xfe9c5af0>
    bf34:	12040000 	andne	r0, r4, #0
    bf38:	0003a20c 	andeq	sl, r3, ip, lsl #4
    bf3c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    bf40:	0019a10b 	andseq	sl, r9, fp, lsl #2
    bf44:	11130400 	tstne	r3, r0, lsl #8
    bf48:	00000428 	andeq	r0, r0, r8, lsr #8
    bf4c:	00709102 	rsbseq	r9, r0, r2, lsl #2
    bf50:	003c842c 	eorseq	r8, ip, ip, lsr #8
    bf54:	13730300 	cmnne	r3, #0, 6
    bf58:	00000041 	andeq	r0, r0, r1, asr #32
    bf5c:	000183a0 	andeq	r8, r1, r0, lsr #7
    bf60:	0000005c 	andeq	r0, r0, ip, asr r0
    bf64:	154b9c01 	strbne	r9, [fp, #-3073]	; 0xfffff3ff
    bf68:	64280000 	strtvs	r0, [r8], #-0
    bf6c:	34730300 	ldrbtcc	r0, [r3], #-768	; 0xfffffd00
    bf70:	00001218 	andeq	r1, r0, r8, lsl r2
    bf74:	2d649102 	stfcsp	f1, [r4, #-8]!
    bf78:	00746572 	rsbseq	r6, r4, r2, ror r5
    bf7c:	41097503 	tstmi	r9, r3, lsl #10
    bf80:	02000000 	andeq	r0, r0, #0
    bf84:	a10b6c91 			; <UNDEFINED> instruction: 0xa10b6c91
    bf88:	03000019 	movweq	r0, #25
    bf8c:	03da0a76 	bicseq	r0, sl, #483328	; 0x76000
    bf90:	91020000 	mrsls	r0, (UNDEF: 2)
    bf94:	582e006b 	stmdapl	lr!, {r0, r1, r3, r5, r6}
    bf98:	0300003c 	movweq	r0, #60	; 0x3c
    bf9c:	833c1465 	teqhi	ip, #1694498816	; 0x65000000
    bfa0:	00640001 	rsbeq	r0, r4, r1
    bfa4:	9c010000 	stcls	0, cr0, [r1], {-0}
    bfa8:	000015a4 	andeq	r1, r0, r4, lsr #11
    bfac:	03006428 	movweq	r6, #1064	; 0x428
    bfb0:	12183565 	andsne	r3, r8, #423624704	; 0x19400000
    bfb4:	91020000 	mrsls	r0, (UNDEF: 2)
    bfb8:	00632864 	rsbeq	r2, r3, r4, ror #16
    bfbc:	413c6503 	teqmi	ip, r3, lsl #10
    bfc0:	02000000 	andeq	r0, r0, #0
    bfc4:	722d6091 	eorvc	r6, sp, #145	; 0x91
    bfc8:	03007465 	movweq	r7, #1125	; 0x465
    bfcc:	00410967 	subeq	r0, r1, r7, ror #18
    bfd0:	91020000 	mrsls	r0, (UNDEF: 2)
    bfd4:	83502f6c 	cmphi	r0, #108, 30	; 0x1b0
    bfd8:	00340001 	eorseq	r0, r4, r1
    bfdc:	a10b0000 	mrsge	r0, (UNDEF: 11)
    bfe0:	03000019 	movweq	r0, #25
    bfe4:	03da0e69 	bicseq	r0, sl, #1680	; 0x690
    bfe8:	91020000 	mrsls	r0, (UNDEF: 2)
    bfec:	3000006b 	andcc	r0, r0, fp, rrx
    bff0:	00001622 	andeq	r1, r0, r2, lsr #12
    bff4:	1a023f02 	bne	9bc04 <morecore_area+0x52c04>
    bff8:	000182a8 	andeq	r8, r1, r8, lsr #5
    bffc:	00000094 	muleq	r0, r4, r0
    c000:	162a9c01 	strtne	r9, [sl], -r1, lsl #24
    c004:	63310000 	teqvs	r1, #0
    c008:	023f0200 	eorseq	r0, pc, #0, 4
    c00c:	0003da31 	andeq	sp, r3, r1, lsr sl
    c010:	5f910200 	svcpl	0x00910200
    c014:	000e0832 	andeq	r0, lr, r2, lsr r8
    c018:	02410200 	subeq	r0, r1, #0, 4
    c01c:	00006e0f 	andeq	r6, r0, pc, lsl #28
    c020:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c024:	000e1032 	andeq	r1, lr, r2, lsr r0
    c028:	02420200 	subeq	r0, r2, #0, 4
    c02c:	00006e0f 	andeq	r6, r0, pc, lsl #28
    c030:	70910200 	addsvc	r0, r1, r0, lsl #4
    c034:	00107232 	andseq	r7, r0, r2, lsr r2
    c038:	02430200 	subeq	r0, r3, #0, 4
    c03c:	00006e0f 	andeq	r6, r0, pc, lsl #28
    c040:	6c910200 	lfmvs	f0, 4, [r1], {0}
    c044:	000e1832 	andeq	r1, lr, r2, lsr r8
    c048:	02440200 	subeq	r0, r4, #0, 4
    c04c:	00006e0f 	andeq	r6, r0, pc, lsl #28
    c050:	68910200 	ldmvs	r1, {r9}
    c054:	000e2032 	andeq	r2, lr, r2, lsr r0
    c058:	02450200 	subeq	r0, r5, #0, 4
    c05c:	00006e0f 	andeq	r6, r0, pc, lsl #28
    c060:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    c064:	000e2832 	andeq	r2, lr, r2, lsr r8
    c068:	02460200 	subeq	r0, r6, #0, 4
    c06c:	00006e0f 	andeq	r6, r0, pc, lsl #28
    c070:	60910200 	addsvs	r0, r1, r0, lsl #4
    c074:	0d993300 	ldceq	3, cr3, [r9]
    c078:	92010000 	andls	r0, r1, #0
    c07c:	0181fc14 	orreq	pc, r1, r4, lsl ip	; <UNPREDICTABLE>
    c080:	0000ac00 	andeq	sl, r0, r0, lsl #24
    c084:	289c0100 	ldmcs	ip, {r8}
    c088:	00737973 	rsbseq	r7, r3, r3, ror r9
    c08c:	6e309201 	cdpvs	2, 3, cr9, cr0, cr1, {0}
    c090:	02000000 	andeq	r0, r0, #0
    c094:	202a6c91 	mlacs	sl, r1, ip, r6
    c098:	0100000c 	tsteq	r0, ip
    c09c:	006e3f92 	mlseq	lr, r2, pc, r3	; <UNPREDICTABLE>
    c0a0:	91020000 	mrsls	r0, (UNDEF: 2)
    c0a4:	11ae2a68 			; <UNDEFINED> instruction: 0x11ae2a68
    c0a8:	92010000 	andls	r0, r1, #0
    c0ac:	0012e850 	andseq	lr, r2, r0, asr r8
    c0b0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    c0b4:	0010f22a 	andseq	pc, r0, sl, lsr #4
    c0b8:	65920100 	ldrvs	r0, [r2, #256]	; 0x100
    c0bc:	0000006e 	andeq	r0, r0, lr, rrx
    c0c0:	2a609102 	bcs	18304d0 <__bss_end__+0x16e7488>
    c0c4:	00000ad3 	ldrdeq	r0, [r0], -r3
    c0c8:	e8319301 	ldmda	r1!, {r0, r8, r9, ip, pc}
    c0cc:	02000012 	andeq	r0, r0, #18
    c0d0:	dd2a0091 	stcle	0, cr0, [sl, #-580]!	; 0xfffffdbc
    c0d4:	01000009 	tsteq	r0, r9
    c0d8:	12e84693 	rscne	r4, r8, #154140672	; 0x9300000
    c0dc:	91020000 	mrsls	r0, (UNDEF: 2)
    c0e0:	09e82a04 	stmibeq	r8!, {r2, r9, fp, sp}^
    c0e4:	93010000 	movwls	r0, #4096	; 0x1000
    c0e8:	0012e85d 	andseq	lr, r2, sp, asr r8
    c0ec:	08910200 	ldmeq	r1, {r9}
    c0f0:	0009f32a 	andeq	pc, r9, sl, lsr #6
    c0f4:	74930100 	ldrvc	r0, [r3], #256	; 0x100
    c0f8:	000012e8 	andeq	r1, r0, r8, ror #5
    c0fc:	2a0c9102 	bcs	33050c <__bss_end__+0x1e74c4>
    c100:	000009fe 	strdeq	r0, [r0], -lr
    c104:	e88b9301 	stm	fp, {r0, r8, r9, ip, pc}
    c108:	02000012 	andeq	r0, r0, #18
    c10c:	3a2a1091 	bcc	a90358 <__bss_end__+0x947310>
    c110:	01000009 	tsteq	r0, r9
    c114:	006e3f94 	mlseq	lr, r4, pc, r3	; <UNPREDICTABLE>
    c118:	91020000 	mrsls	r0, (UNDEF: 2)
    c11c:	0cce0b14 	vstmiaeq	lr, {d16-d25}
    c120:	96010000 	strls	r0, [r1], -r0
    c124:	00006e18 	andeq	r6, r0, r8, lsl lr
    c128:	0b500100 	bleq	140c530 <__bss_end__+0x12c34e8>
    c12c:	000028a9 	andeq	r2, r0, r9, lsr #17
    c130:	6e189701 	cdpvs	7, 1, cr9, cr8, cr1, {0}
    c134:	01000000 	mrseq	r0, (UNDEF: 0)
    c138:	113b0b51 	teqne	fp, r1, asr fp
    c13c:	9a010000 	bls	4c144 <morecore_area+0x3144>
    c140:	00006e18 	andeq	r6, r0, r8, lsl lr
    c144:	0b520100 	bleq	148c54c <__bss_end__+0x1343504>
    c148:	00001140 	andeq	r1, r0, r0, asr #2
    c14c:	6e189b01 	vnmlsvs.f64	d9, d8, d1
    c150:	01000000 	mrseq	r0, (UNDEF: 0)
    c154:	11450b53 	cmpne	r5, r3, asr fp
    c158:	9c010000 	stcls	0, cr0, [r1], {-0}
    c15c:	00006e18 	andeq	r6, r0, r8, lsl lr
    c160:	0b540100 	bleq	150c568 <__bss_end__+0x13c3520>
    c164:	00001114 	andeq	r1, r0, r4, lsl r1
    c168:	6e189d01 	cdpvs	13, 1, cr9, cr8, cr1, {0}
    c16c:	01000000 	mrseq	r0, (UNDEF: 0)
    c170:	0d090b55 	vstreq	d0, [r9, #-340]	; 0xfffffeac
    c174:	a1010000 	mrsge	r0, (UNDEF: 1)
    c178:	00006e18 	andeq	r6, r0, r8, lsl lr
    c17c:	00570100 	subseq	r0, r7, r0, lsl #2
    c180:	0009ab00 	andeq	sl, r9, r0, lsl #22
    c184:	be000400 	cfcpyslt	mvf0, mvf0
    c188:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    c18c:	00011701 	andeq	r1, r1, r1, lsl #14
    c190:	3d910c00 	ldccc	12, cr0, [r1]
    c194:	005f0000 	subseq	r0, pc, r0
    c198:	85b80000 	ldrhi	r0, [r8, #0]!
    c19c:	03640001 	cmneq	r4, #1
    c1a0:	65450000 	strbvs	r0, [r5, #-0]
    c1a4:	01020000 	mrseq	r0, (UNDEF: 2)
    c1a8:	00032e06 	andeq	r2, r3, r6, lsl #28
    c1ac:	08010200 	stmdaeq	r1, {r9}
    c1b0:	0000032c 	andeq	r0, r0, ip, lsr #6
    c1b4:	66050202 	strvs	r0, [r5], -r2, lsl #4
    c1b8:	02000004 	andeq	r0, r0, #4
    c1bc:	03520702 	cmpeq	r2, #524288	; 0x80000
    c1c0:	04030000 	streq	r0, [r3], #-0
    c1c4:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    c1c8:	030d0400 	movweq	r0, #54272	; 0xd400
    c1cc:	3d030000 	stccc	0, cr0, [r3, #-0]
    c1d0:	00005425 	andeq	r5, r0, r5, lsr #8
    c1d4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c1d8:	000003c5 	andeq	r0, r0, r5, asr #7
    c1dc:	09050802 	stmdbeq	r5, {r1, fp}
    c1e0:	02000001 	andeq	r0, r0, #1
    c1e4:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
    c1e8:	72040000 	andvc	r0, r4, #0
    c1ec:	03000003 	movweq	r0, #3
    c1f0:	00481571 	subeq	r1, r8, r1, ror r5
    c1f4:	d2040000 	andle	r0, r4, #0
    c1f8:	03000003 	movweq	r0, #3
    c1fc:	00691380 	rsbeq	r1, r9, r0, lsl #7
    c200:	92050000 	andls	r0, r5, #0
    c204:	07000003 	streq	r0, [r0, -r3]
    c208:	00005404 	andeq	r5, r0, r4, lsl #8
    c20c:	0e080400 	cfcpyseq	mvf0, mvf8
    c210:	000000b8 	strheq	r0, [r0], -r8
    c214:	00031906 	andeq	r1, r3, r6, lsl #18
    c218:	80060000 	andhi	r0, r6, r0
    c21c:	01000004 	tsteq	r0, r4
    c220:	0003f806 	andeq	pc, r3, r6, lsl #16
    c224:	8f060200 	svchi	0x00060200
    c228:	03000004 	movweq	r0, #4
    c22c:	0004cd06 	andeq	ip, r4, r6, lsl #26
    c230:	bd060400 	cfstrslt	mvf0, [r6, #-0]
    c234:	05000002 	streq	r0, [r0, #-2]
    c238:	03dc0400 	bicseq	r0, ip, #0, 8
    c23c:	13040000 	movwne	r0, #16384	; 0x4000
    c240:	00008103 	andeq	r8, r0, r3, lsl #2
    c244:	00b80700 	adcseq	r0, r8, r0, lsl #14
    c248:	b4080000 	strlt	r0, [r8], #-0
    c24c:	04000004 	streq	r0, [r0], #-4
    c250:	00c45915 	sbceq	r5, r4, r5, lsl r9
    c254:	03050000 	movweq	r0, #20480	; 0x5000
    c258:	00028fc8 	andeq	r8, r2, r8, asr #31
    c25c:	000ee805 	andeq	lr, lr, r5, lsl #16
    c260:	54040700 	strpl	r0, [r4], #-1792	; 0xfffff900
    c264:	05000000 	streq	r0, [r0, #-0]
    c268:	00fa0e09 	rscseq	r0, sl, r9, lsl #28
    c26c:	36060000 	strcc	r0, [r6], -r0
    c270:	0500000a 	streq	r0, [r0, #-10]
    c274:	000bbb06 	andeq	fp, fp, r6, lsl #22
    c278:	09000600 	stmdbeq	r0, {r9, sl}
    c27c:	00540407 	subseq	r0, r4, r7, lsl #8
    c280:	09060000 	stmdbeq	r6, {}	; <UNPREDICTABLE>
    c284:	0001510e 	andeq	r5, r1, lr, lsl #2
    c288:	1ce20600 	stclne	6, cr0, [r2]
    c28c:	06000000 	streq	r0, [r0], -r0
    c290:	00001dec 	andeq	r1, r0, ip, ror #27
    c294:	1da80601 	stcne	6, cr0, [r8, #4]!
    c298:	06020000 	streq	r0, [r2], -r0
    c29c:	00001c53 	andeq	r1, r0, r3, asr ip
    c2a0:	1b000603 	blne	dab4 <errno+0xdab0>
    c2a4:	06040000 	streq	r0, [r4], -r0
    c2a8:	00001bcf 	andeq	r1, r0, pc, asr #23
    c2ac:	1cef0605 	stclne	6, cr0, [pc], #20	; c2c8 <errno+0xc2c4>
    c2b0:	06060000 	streq	r0, [r6], -r0
    c2b4:	00001d78 	andeq	r1, r0, r8, ror sp
    c2b8:	1e820607 	cdpne	6, 8, cr0, cr2, cr7, {0}
    c2bc:	06080000 	streq	r0, [r8], -r0
    c2c0:	00001adb 	ldrdeq	r1, [r0], -fp
    c2c4:	1b230609 	blne	8cdaf0 <__bss_end__+0x784aa8>
    c2c8:	060a0000 	streq	r0, [sl], -r0
    c2cc:	00001cd3 	ldrdeq	r1, [r0], -r3
    c2d0:	9304000b 	movwls	r0, #16395	; 0x400b
    c2d4:	0600001e 			; <UNDEFINED> instruction: 0x0600001e
    c2d8:	00fa031b 	rscseq	r0, sl, fp, lsl r3
    c2dc:	29050000 	stmdbcs	r5, {}	; <UNPREDICTABLE>
    c2e0:	0700000d 	streq	r0, [r0, -sp]
    c2e4:	00005404 	andeq	r5, r0, r4, lsl #8
    c2e8:	06340700 	ldrteq	r0, [r4], -r0, lsl #14
    c2ec:	00000182 	andeq	r0, r0, r2, lsl #3
    c2f0:	0009ca06 	andeq	ip, r9, r6, lsl #20
    c2f4:	f5060700 			; <UNDEFINED> instruction: 0xf5060700
    c2f8:	0200000e 	andeq	r0, r0, #14
    c2fc:	000df606 	andeq	pc, sp, r6, lsl #12
    c300:	0a007800 	beq	2a308 <errmsg+0x476>
    c304:	00000048 	andeq	r0, r0, r8, asr #32
    c308:	00000192 	muleq	r0, r2, r1
    c30c:	0000540b 	andeq	r5, r0, fp, lsl #8
    c310:	0c000000 	stceq	0, cr0, [r0], {-0}
    c314:	000002a7 	andeq	r0, r0, r7, lsr #5
    c318:	01380804 	teqeq	r8, r4, lsl #16
    c31c:	0001af08 	andeq	sl, r1, r8, lsl #30
    c320:	03b00d00 	movseq	r0, #0, 26
    c324:	39080000 	stmdbcc	r8, {}	; <UNPREDICTABLE>
    c328:	01821101 	orreq	r1, r2, r1, lsl #2
    c32c:	00000000 	andeq	r0, r0, r0
    c330:	00039d0e 	andeq	r9, r3, lr, lsl #26
    c334:	013b0800 	teqeq	fp, r0, lsl #16
    c338:	00019221 	andeq	r9, r1, r1, lsr #4
    c33c:	04700f00 	ldrbteq	r0, [r0], #-3840	; 0xfffff100
    c340:	02000000 	andeq	r0, r0, #0
    c344:	2b100b09 	blcs	40ef70 <__bss_end__+0x2c5f28>
    c348:	10000002 	andne	r0, r0, r2
    c34c:	00676174 	rsbeq	r6, r7, r4, ror r1
    c350:	af180c09 	svcge	0x00180c09
    c354:	00000001 	andeq	r0, r0, r1
    c358:	67736d10 			; <UNDEFINED> instruction: 0x67736d10
    c35c:	0f0d0900 	svceq	0x000d0900
    c360:	0000022b 	andeq	r0, r0, fp, lsr #4
    c364:	033a1104 	teqeq	sl, #4, 2
    c368:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
    c36c:	0000690f 	andeq	r6, r0, pc, lsl #18
    c370:	1101e400 	tstne	r1, r0, lsl #8
    c374:	0000037c 	andeq	r0, r0, ip, ror r3
    c378:	3b0f0f09 	blcc	3cffa4 <__bss_end__+0x286f5c>
    c37c:	e8000002 	stmda	r0, {r1}
    c380:	03651101 	cmneq	r5, #1073741824	; 0x40000000
    c384:	10090000 	andne	r0, r9, r0
    c388:	0000750f 	andeq	r7, r0, pc, lsl #10
    c38c:	1101f400 	tstne	r1, r0, lsl #8	; <UNPREDICTABLE>
    c390:	00000300 	andeq	r0, r0, r0, lsl #6
    c394:	750f1109 	strvc	r1, [pc, #-265]	; c293 <errno+0xc28f>
    c398:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    c39c:	040c1101 	streq	r1, [ip], #-257	; 0xfffffeff
    c3a0:	12090000 	andne	r0, r9, #0
    c3a4:	0000690f 	andeq	r6, r0, pc, lsl #18
    c3a8:	0001fc00 	andeq	pc, r1, r0, lsl #24
    c3ac:	0000690a 	andeq	r6, r0, sl, lsl #18
    c3b0:	00023b00 	andeq	r3, r2, r0, lsl #22
    c3b4:	00540b00 	subseq	r0, r4, r0, lsl #22
    c3b8:	00770000 	rsbseq	r0, r7, r0
    c3bc:	0000690a 	andeq	r6, r0, sl, lsl #18
    c3c0:	00024b00 	andeq	r4, r2, r0, lsl #22
    c3c4:	00540b00 	subseq	r0, r4, r0, lsl #22
    c3c8:	00020000 	andeq	r0, r2, r0
    c3cc:	00034312 	andeq	r4, r3, r2, lsl r3
    c3d0:	03130900 	tsteq	r3, #0, 18
    c3d4:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    c3d8:	8f040200 	svchi	0x00040200
    c3dc:	0a000024 	beq	c474 <errno+0xc470>
    c3e0:	00751323 	rsbseq	r1, r5, r3, lsr #6
    c3e4:	e8130000 	ldmda	r3, {}	; <UNPREDICTABLE>
    c3e8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    c3ec:	0271210d 	rsbseq	r2, r1, #1073741827	; 0x40000003
    c3f0:	04140000 	ldreq	r0, [r4], #-0
    c3f4:	0000024b 	andeq	r0, r0, fp, asr #4
    c3f8:	00100d05 	andseq	r0, r0, r5, lsl #26
    c3fc:	54040700 	strpl	r0, [r4], #-1792	; 0xfffff900
    c400:	0b000000 	bleq	c408 <errno+0xc404>
    c404:	0344060e 	movteq	r0, #17934	; 0x460e
    c408:	c1060000 	mrsgt	r0, (UNDEF: 6)
    c40c:	0000000a 	andeq	r0, r0, sl
    c410:	00122e06 	andseq	r2, r2, r6, lsl #28
    c414:	7f060100 	svcvc	0x00060100
    c418:	0200000b 	andeq	r0, r0, #11
    c41c:	000f8e06 	andeq	r8, pc, r6, lsl #28
    c420:	9a060300 	bls	18d028 <__bss_end__+0x43fe0>
    c424:	04000010 	streq	r0, [r0], #-16
    c428:	000b1906 	andeq	r1, fp, r6, lsl #18
    c42c:	b9060500 	stmdblt	r6, {r8, sl}
    c430:	0600000f 	streq	r0, [r0], -pc
    c434:	000b3306 	andeq	r3, fp, r6, lsl #6
    c438:	95060700 	strls	r0, [r6, #-1792]	; 0xfffff900
    c43c:	0800000a 	stmdaeq	r0, {r1, r3}
    c440:	000a0906 	andeq	r0, sl, r6, lsl #18
    c444:	2d060900 	vstrcs.16	s0, [r6, #-0]	; <UNPREDICTABLE>
    c448:	0a00000f 	beq	c48c <errno+0xc488>
    c44c:	000ced06 	andeq	lr, ip, r6, lsl #26
    c450:	68060b00 	stmdavs	r6, {r8, r9, fp}
    c454:	0c000010 	stceq	0, cr0, [r0], {16}
    c458:	000fe306 	andeq	lr, pc, r6, lsl #6
    c45c:	ab060d00 	blge	18f864 <__bss_end__+0x4681c>
    c460:	0e000010 	mcreq	0, 0, r0, cr0, cr0, {0}
    c464:	0011f006 	andseq	pc, r1, r6
    c468:	c2060f00 	andgt	r0, r6, #0, 30
    c46c:	1000000c 	andne	r0, r0, ip
    c470:	000bd406 	andeq	sp, fp, r6, lsl #8
    c474:	d1061100 	mrsle	r1, (UNDEF: 22)
    c478:	1200000e 	andne	r0, r0, #14
    c47c:	00120a06 	andseq	r0, r2, r6, lsl #20
    c480:	75061300 	strvc	r1, [r6, #-768]	; 0xfffffd00
    c484:	1400000b 	strne	r0, [r0], #-11
    c488:	000a7906 	andeq	r7, sl, r6, lsl #18
    c48c:	f7061500 			; <UNDEFINED> instruction: 0xf7061500
    c490:	1600000f 	strne	r0, [r0], -pc
    c494:	000c2506 	andeq	r2, ip, r6, lsl #10
    c498:	65061700 	strvs	r1, [r6, #-1792]	; 0xfffff900
    c49c:	1800000b 	stmdane	r0, {r0, r1, r3}
    c4a0:	000c9706 	andeq	r9, ip, r6, lsl #14
    c4a4:	7a061900 	bvc	1928ac <__bss_end__+0x49864>
    c4a8:	1a000011 	bne	c4f4 <errno+0xc4f0>
    c4ac:	000c8606 	andeq	r8, ip, r6, lsl #12
    c4b0:	67061b00 	strvs	r1, [r6, -r0, lsl #22]
    c4b4:	1c00000f 	stcne	0, cr0, [r0], {15}
    c4b8:	000ec406 	andeq	ip, lr, r6, lsl #8
    c4bc:	69061d00 	stmdbvs	r6, {r8, sl, fp, ip}
    c4c0:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    c4c4:	10030500 	andne	r0, r3, r0, lsl #10
    c4c8:	04070000 	streq	r0, [r7], #-0
    c4cc:	00000054 	andeq	r0, r0, r4, asr r0
    c4d0:	75060e0c 	strvc	r0, [r6, #-3596]	; 0xfffff1f4
    c4d4:	06000003 	streq	r0, [r0], -r3
    c4d8:	00000de6 	andeq	r0, r0, r6, ror #27
    c4dc:	0f0a061e 	svceq	0x000a061e
    c4e0:	061f0000 	ldreq	r0, [pc], -r0
    c4e4:	00000e8b 	andeq	r0, r0, fp, lsl #29
    c4e8:	11630620 	cmnne	r3, r0, lsr #12
    c4ec:	06210000 	strteq	r0, [r1], -r0
    c4f0:	00001214 	andeq	r1, r0, r4, lsl r2
    c4f4:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    c4f8:	0003c007 	andeq	ip, r3, r7
    c4fc:	0a2f0400 	beq	bcd504 <__bss_end__+0xa844bc>
    c500:	6e0d0000 	cdpvs	0, 0, cr0, cr13, cr0, {0}
    c504:	00005418 	andeq	r5, r0, r8, lsl r4
    c508:	037c0700 	cmneq	ip, #0, 14
    c50c:	04020000 	streq	r0, [r2], #-0
    c510:	00010e05 	andeq	r0, r1, r5, lsl #28
    c514:	27570400 	ldrbcs	r0, [r7, -r0, lsl #8]
    c518:	ab0d0000 	blge	34c520 <__bss_end__+0x2034d8>
    c51c:	00002c19 	andeq	r2, r0, r9, lsl ip
    c520:	0e041500 	cfsh32eq	mvfx1, mvfx4, #0
    c524:	0000022a 	andeq	r0, r0, sl, lsr #4
    c528:	19016d0d 	stmdbne	r1, {r0, r2, r3, r8, sl, fp, sp, lr}
    c52c:	000003af 	andeq	r0, r0, pc, lsr #7
    c530:	00022616 	andeq	r2, r2, r6, lsl r6
    c534:	08010200 	stmdaeq	r1, {r9}
    c538:	00000335 	andeq	r0, r0, r5, lsr r3
    c53c:	0003b407 	andeq	fp, r3, r7, lsl #8
    c540:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    c544:	000015f8 	strdeq	r1, [r0], -r8
    c548:	00022f13 	andeq	r2, r2, r3, lsl pc
    c54c:	14370f00 	ldrtne	r0, [r7], #-3840	; 0xfffff100
    c550:	000003d9 	ldrdeq	r0, [r0], -r9
    c554:	03a20414 			; <UNDEFINED> instruction: 0x03a20414
    c558:	d3070000 	movwle	r0, #28672	; 0x7000
    c55c:	13000003 	movwne	r0, #3
    c560:	0000023c 	andeq	r0, r0, ip, lsr r2
    c564:	d914380f 	ldmdble	r4, {r0, r1, r2, r3, fp, ip, sp}
    c568:	13000003 	movwne	r0, #3
    c56c:	00000235 	andeq	r0, r0, r5, lsr r2
    c570:	d914390f 	ldmdble	r4, {r0, r1, r2, r3, r8, fp, ip, sp}
    c574:	14000003 	strne	r0, [r0], #-3
    c578:	0003b404 	andeq	fp, r3, r4, lsl #8
    c57c:	189c1300 	ldmne	ip, {r8, r9, ip}
    c580:	f8100000 			; <UNDEFINED> instruction: 0xf8100000
    c584:	0000410c 	andeq	r4, r0, ip, lsl #2
    c588:	2ffb1700 	svccs	0x00fb1700
    c58c:	111c0000 	tstne	ip, r0
    c590:	0471104e 	ldrbteq	r1, [r1], #-78	; 0xffffffb2
    c594:	d9180000 	ldmdble	r8, {}	; <UNPREDICTABLE>
    c598:	11000026 	tstne	r0, r6, lsr #32
    c59c:	0075114f 	rsbseq	r1, r5, pc, asr #2
    c5a0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    c5a4:	0000270b 	andeq	r2, r0, fp, lsl #14
    c5a8:	69115011 	ldmdbvs	r1, {r0, r4, ip, lr}
    c5ac:	04000000 	streq	r0, [r0], #-0
    c5b0:	0031e118 	eorseq	lr, r1, r8, lsl r1
    c5b4:	11511100 	cmpne	r1, r0, lsl #2
    c5b8:	00000259 	andeq	r0, r0, r9, asr r2
    c5bc:	0c201808 	stceq	8, cr1, [r0], #-32	; 0xffffffe0
    c5c0:	52110000 	andspl	r0, r1, #0
    c5c4:	00006911 	andeq	r6, r0, r1, lsl r9
    c5c8:	ef180c00 	svc	0x00180c00
    c5cc:	11000036 	tstne	r0, r6, lsr r0
    c5d0:	00691153 	rsbeq	r1, r9, r3, asr r1
    c5d4:	18100000 	ldmdane	r0, {}	; <UNPREDICTABLE>
    c5d8:	0000487e 	andeq	r4, r0, lr, ror r8
    c5dc:	69115411 	ldmdbvs	r1, {r0, r4, sl, ip, lr}
    c5e0:	14000000 	strne	r0, [r0], #-0
    c5e4:	00245e18 	eoreq	r5, r4, r8, lsl lr
    c5e8:	11551100 	cmpne	r5, r0, lsl #2
    c5ec:	00000069 	andeq	r0, r0, r9, rrx
    c5f0:	fc040018 	stc2	0, cr0, [r4], {24}
    c5f4:	1100002f 	tstne	r0, pc, lsr #32
    c5f8:	04080356 	streq	r0, [r8], #-854	; 0xfffffcaa
    c5fc:	c7040000 	strgt	r0, [r4, -r0]
    c600:	01000030 	tsteq	r0, r0, lsr r0
    c604:	0489152f 	streq	r1, [r9], #1327	; 0x52f
    c608:	04140000 	ldreq	r0, [r4], #-0
    c60c:	0000048f 	andeq	r0, r0, pc, lsl #9
    c610:	00015119 	andeq	r5, r1, r9, lsl r1
    c614:	0004b200 	andeq	fp, r4, r0, lsl #4
    c618:	03a01a00 	moveq	r1, #0, 20
    c61c:	411a0000 	tstmi	sl, r0
    c620:	1a000000 	bne	c628 <errno+0xc624>
    c624:	00000259 	andeq	r0, r0, r9, asr r2
    c628:	0000691a 	andeq	r6, r0, sl, lsl r9
    c62c:	03941a00 	orrseq	r1, r4, #0, 20
    c630:	04000000 	streq	r0, [r0], #-0
    c634:	000027a5 	andeq	r2, r0, r5, lsr #15
    c638:	be153101 	muflts	f3, f5, f1
    c63c:	14000004 	strne	r0, [r0], #-4
    c640:	0004c404 	andeq	ip, r4, r4, lsl #8
    c644:	01511900 	cmpeq	r1, r0, lsl #18
    c648:	04f10000 	ldrbteq	r0, [r1], #0
    c64c:	a01a0000 	andsge	r0, sl, r0
    c650:	1a000003 	bne	c664 <errno+0xc660>
    c654:	00000041 	andeq	r0, r0, r1, asr #32
    c658:	0000411a 	andeq	r4, r0, sl, lsl r1
    c65c:	00411a00 	subeq	r1, r1, r0, lsl #20
    c660:	591a0000 	ldmdbpl	sl, {}	; <UNPREDICTABLE>
    c664:	1a000002 	bne	c674 <errno+0xc670>
    c668:	00000069 	andeq	r0, r0, r9, rrx
    c66c:	0003941a 	andeq	r9, r3, sl, lsl r4
    c670:	1a170000 	bne	5cc678 <__bss_end__+0x483630>
    c674:	0c000028 	stceq	0, cr0, [r0], {40}	; 0x28
    c678:	26103701 	ldrcs	r3, [r0], -r1, lsl #14
    c67c:	10000005 	andne	r0, r0, r5
    c680:	00717269 	rsbseq	r7, r1, r9, ror #4
    c684:	7d1f3801 	ldcvc	8, cr3, [pc, #-4]	; c688 <errno+0xc684>
    c688:	00000004 	andeq	r0, r0, r4
    c68c:	002cee18 	eoreq	lr, ip, r8, lsl lr
    c690:	1f390100 	svcne	0x00390100
    c694:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
    c698:	19a11804 	stmibne	r1!, {r2, fp, ip}
    c69c:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    c6a0:	0003a00b 	andeq	sl, r3, fp
    c6a4:	04000800 	streq	r0, [r0], #-2048	; 0xfffff800
    c6a8:	00002600 	andeq	r2, r0, r0, lsl #12
    c6ac:	f1033f01 			; <UNDEFINED> instruction: 0xf1033f01
    c6b0:	14000004 	strne	r0, [r0], #-4
    c6b4:	00047104 	andeq	r7, r4, r4, lsl #2
    c6b8:	02010200 	andeq	r0, r1, #0, 4
    c6bc:	00001bc9 	andeq	r1, r0, r9, asr #23
    c6c0:	00173213 	andseq	r3, r7, r3, lsl r2
    c6c4:	1a101200 	bne	410ecc <__bss_end__+0x2c7e84>
    c6c8:	00000041 	andeq	r0, r0, r1, asr #32
    c6cc:	002e5a05 	eoreq	r5, lr, r5, lsl #20
    c6d0:	54040700 	strpl	r0, [r4], #-1792	; 0xfffff900
    c6d4:	13000000 	movwne	r0, #0
    c6d8:	05880e15 	streq	r0, [r8, #3605]	; 0xe15
    c6dc:	d9060000 	stmdble	r6, {}	; <UNPREDICTABLE>
    c6e0:	00000024 	andeq	r0, r0, r4, lsr #32
    c6e4:	002bfb06 	eoreq	pc, fp, r6, lsl #22
    c6e8:	0f060100 	svceq	0x00060100
    c6ec:	02000029 	andeq	r0, r0, #41	; 0x29
    c6f0:	002fce06 	eoreq	ip, pc, r6, lsl #28
    c6f4:	0e060300 	cdpeq	3, 0, cr0, cr6, cr0, {0}
    c6f8:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
    c6fc:	0028fc06 	eoreq	pc, r8, r6, lsl #24
    c700:	84060500 	strhi	r0, [r6], #-1280	; 0xfffffb00
    c704:	0600002c 	streq	r0, [r0], -ip, lsr #32
    c708:	367a0400 	ldrbtcc	r0, [sl], -r0, lsl #8
    c70c:	1d130000 	ldcne	0, cr0, [r3, #-0]
    c710:	00054b03 	andeq	r4, r5, r3, lsl #22
    c714:	13141b00 	tstne	r4, #0, 22
    c718:	05df0927 	ldrbeq	r0, [pc, #2343]	; d047 <errno+0xd043>
    c71c:	85180000 	ldrhi	r0, [r8, #-0]
    c720:	13000036 	movwne	r0, #54	; 0x36
    c724:	038d1228 	orreq	r1, sp, #40, 4	; 0x80000002
    c728:	10000000 	andne	r0, r0, r0
    c72c:	006e6970 	rsbeq	r6, lr, r0, ror r9
    c730:	8d122913 	vldrhi.16	s4, [r2, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    c734:	04000003 	streq	r0, [r0], #-3
    c738:	004e0018 	subeq	r0, lr, r8, lsl r0
    c73c:	122a1300 	eorne	r1, sl, #0, 6
    c740:	0000038d 	andeq	r0, r0, sp, lsl #7
    c744:	23671808 	cmncs	r7, #8, 16	; 0x80000
    c748:	2b130000 	blcs	4cc750 <__bss_end__+0x383708>
    c74c:	00038d12 	andeq	r8, r3, r2, lsl sp
    c750:	90180c00 	andsls	r0, r8, r0, lsl #24
    c754:	13000033 	movwne	r0, #51	; 0x33
    c758:	038d122c 	orreq	r1, sp, #44, 4	; 0xc0000002
    c75c:	00100000 	andseq	r0, r0, r0
    c760:	2e13141b 	cfmvrdlcs	r1, mvd3
    c764:	00062a09 	andeq	r2, r6, r9, lsl #20
    c768:	2f311800 	svccs	0x00311800
    c76c:	2f130000 	svccs	0x00130000
    c770:	00038d12 	andeq	r8, r3, r2, lsl sp
    c774:	ff180000 			; <UNDEFINED> instruction: 0xff180000
    c778:	13000035 	movwne	r0, #53	; 0x35
    c77c:	038d1230 	orreq	r1, sp, #48, 4
    c780:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    c784:	00002b35 	andeq	r2, r0, r5, lsr fp
    c788:	8d123113 	ldfhis	f3, [r2, #-76]	; 0xffffffb4
    c78c:	08000003 	stmdaeq	r0, {r0, r1}
    c790:	0042cf18 	subeq	ip, r2, r8, lsl pc
    c794:	12321300 	eorsne	r1, r2, #0, 6
    c798:	0000038d 	andeq	r0, r0, sp, lsl #7
    c79c:	3390180c 	orrscc	r1, r0, #12, 16	; 0xc0000
    c7a0:	33130000 	tstcc	r3, #0
    c7a4:	00038d12 	andeq	r8, r3, r2, lsl sp
    c7a8:	1b001000 	blne	107b0 <sel4runtime_get_tls_size+0x18>
    c7ac:	09351304 	ldmdbeq	r5!, {r2, r8, r9, ip}
    c7b0:	00000641 	andeq	r0, r0, r1, asr #12
    c7b4:	00349718 	eorseq	r9, r4, r8, lsl r7
    c7b8:	12361300 	eorsne	r1, r6, #0, 6
    c7bc:	0000038d 	andeq	r0, r0, sp, lsl #7
    c7c0:	081b0000 	ldmdaeq	fp, {}	; <UNPREDICTABLE>
    c7c4:	65093813 	strvs	r3, [r9, #-2067]	; 0xfffff7ed
    c7c8:	18000006 	stmdane	r0, {r1, r2}
    c7cc:	00003497 	muleq	r0, r7, r4
    c7d0:	8d123913 	vldrhi.16	s6, [r2, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    c7d4:	00000003 	andeq	r0, r0, r3
    c7d8:	003e0e18 	eorseq	r0, lr, r8, lsl lr
    c7dc:	123a1300 	eorsne	r1, sl, #0, 6
    c7e0:	0000038d 	andeq	r0, r0, sp, lsl #7
    c7e4:	0c1b0004 	ldceq	0, cr0, [fp], {4}
    c7e8:	96093c13 			; <UNDEFINED> instruction: 0x96093c13
    c7ec:	18000006 	stmdane	r0, {r1, r2}
    c7f0:	00003497 	muleq	r0, r7, r4
    c7f4:	8d123d13 	ldchi	13, cr3, [r2, #-76]	; 0xffffffb4
    c7f8:	00000003 	andeq	r0, r0, r3
    c7fc:	003e0e18 	eorseq	r0, lr, r8, lsl lr
    c800:	123e1300 	eorsne	r1, lr, #0, 6
    c804:	0000038d 	andeq	r0, r0, sp, lsl #7
    c808:	29071804 	stmdbcs	r7, {r2, fp, ip}
    c80c:	3f130000 	svccc	0x00130000
    c810:	00038d12 	andeq	r8, r3, r2, lsl sp
    c814:	1c000800 	stcne	8, cr0, [r0], {-0}
    c818:	05261314 	streq	r1, [r6, #-788]!	; 0xfffffcec
    c81c:	000006e8 	andeq	r0, r0, r8, ror #13
    c820:	0036851d 	eorseq	r8, r6, sp, lsl r5
    c824:	0b2d1300 	bleq	b5142c <__bss_end__+0xa083e4>
    c828:	00000594 	muleq	r0, r4, r5
    c82c:	69736d1e 	ldmdbvs	r3!, {r1, r2, r3, r4, r8, sl, fp, sp, lr}^
    c830:	0b341300 	bleq	d11438 <__bss_end__+0xbc83f0>
    c834:	000005df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    c838:	7172691e 	cmnvc	r2, lr, lsl r9
    c83c:	0b371300 	bleq	dd1444 <__bss_end__+0xc883fc>
    c840:	0000062a 	andeq	r0, r0, sl, lsr #12
    c844:	003e0e1d 	eorseq	r0, lr, sp, lsl lr
    c848:	0b3b1300 	bleq	ed1450 <__bss_end__+0xd88408>
    c84c:	00000641 	andeq	r0, r0, r1, asr #12
    c850:	7570631e 	ldrbvc	r6, [r0, #-798]!	; 0xfffffce2
    c854:	0b401300 	bleq	101145c <__bss_end__+0xec8414>
    c858:	00000665 	andeq	r0, r0, r5, ror #12
    c85c:	0029191d 	eoreq	r1, r9, sp, lsl r9
    c860:	0f411300 	svceq	0x00411300
    c864:	000003a0 	andeq	r0, r0, r0, lsr #7
    c868:	13181b00 	tstne	r8, #0, 22
    c86c:	07050924 	streq	r0, [r5, -r4, lsr #18]
    c870:	8d180000 	ldchi	0, cr0, [r8, #-0]
    c874:	13000003 	movwne	r0, #3
    c878:	05881025 	streq	r1, [r8, #37]	; 0x25
    c87c:	1f000000 	svcne	0x00000000
    c880:	00000696 	muleq	r0, r6, r6
    c884:	be040004 	cdplt	0, 0, cr0, cr4, cr4, {0}
    c888:	13000030 	movwne	r0, #48	; 0x30
    c88c:	06e80343 	strbteq	r0, [r8], r3, asr #6
    c890:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c894:	0015f304 	andseq	pc, r5, r4, lsl #6
    c898:	192b1300 	stmdbne	fp!, {r8, r9, ip}
    c89c:	7b140000 	blvc	50c8a4 <__bss_end__+0x3c385c>
    c8a0:	0003f60e 	andeq	pc, r3, lr, lsl #12
    c8a4:	19001300 	stmdbne	r0, {r8, r9, ip}
    c8a8:	7c140000 	ldcvc	0, cr0, [r4], {-0}
    c8ac:	0000410c 	andeq	r4, r0, ip, lsl #2
    c8b0:	178e1300 	strne	r1, [lr, r0, lsl #6]
    c8b4:	7c140000 	ldcvc	0, cr0, [r4], {-0}
    c8b8:	00004114 	andeq	r4, r0, r4, lsl r1
    c8bc:	17181300 	ldrne	r1, [r8, -r0, lsl #6]
    c8c0:	7c140000 	ldcvc	0, cr0, [r4], {-0}
    c8c4:	0000411c 	andeq	r4, r0, ip, lsl r1
    c8c8:	204e0500 	subcs	r0, lr, r0, lsl #10
    c8cc:	04070000 	streq	r0, [r7], #-0
    c8d0:	00000054 	andeq	r0, r0, r4, asr r0
    c8d4:	67060f15 	smladvs	r6, r5, pc, r0	; <UNPREDICTABLE>
    c8d8:	06000007 	streq	r0, [r0], -r7
    c8dc:	00002142 	andeq	r2, r0, r2, asr #2
    c8e0:	21b30600 			; <UNDEFINED> instruction: 0x21b30600
    c8e4:	00010000 	andeq	r0, r1, r0
    c8e8:	00200104 	eoreq	r0, r0, r4, lsl #2
    c8ec:	0d141500 	cfldr32eq	mvfx1, [r4, #-0]
    c8f0:	00000041 	andeq	r0, r0, r1, asr #32
    c8f4:	00076707 	andeq	r6, r7, r7, lsl #14
    c8f8:	202e0500 	eorcs	r0, lr, r0, lsl #10
    c8fc:	04070000 	streq	r0, [r7], #-0
    c900:	00000054 	andeq	r0, r0, r4, asr r0
    c904:	9d061016 	stcls	0, cr1, [r6, #-88]	; 0xffffffa8
    c908:	06000007 	streq	r0, [r0], -r7
    c90c:	00002100 	andeq	r2, r0, r0, lsl #2
    c910:	21a00601 	lslcs	r0, r1, #12
    c914:	06020000 	streq	r0, [r2], -r0
    c918:	00001f5e 	andeq	r1, r0, lr, asr pc
    c91c:	57050003 	strpl	r0, [r5, -r3]
    c920:	07000020 	streq	r0, [r0, -r0, lsr #32]
    c924:	00005404 	andeq	r5, r0, r4, lsl #8
    c928:	06121700 	ldreq	r1, [r2], -r0, lsl #14
    c92c:	000007e6 	andeq	r0, r0, r6, ror #15
    c930:	00215e06 	eoreq	r5, r1, r6, lsl #28
    c934:	80060300 	andhi	r0, r6, r0, lsl #6
    c938:	04000020 	streq	r0, [r0], #-32	; 0xffffffe0
    c93c:	00217306 	eoreq	r7, r1, r6, lsl #6
    c940:	65060500 	strvs	r0, [r6, #-1280]	; 0xfffffb00
    c944:	06000020 	streq	r0, [r0], -r0, lsr #32
    c948:	00218f06 	eoreq	r8, r1, r6, lsl #30
    c94c:	ca060700 	bgt	18e554 <__bss_end__+0x4550c>
    c950:	08000021 	stmdaeq	r0, {r0, r5}
    c954:	00218106 	eoreq	r8, r1, r6, lsl #2
    c958:	87060900 	strhi	r0, [r6, -r0, lsl #18]
    c95c:	0a00001f 	beq	c9e0 <errno+0xc9dc>
    c960:	001f7506 	andseq	r7, pc, r6, lsl #10
    c964:	08000b00 	stmdaeq	r0, {r8, r9, fp}
    c968:	00001fc3 	andeq	r1, r0, r3, asr #31
    c96c:	733f2217 	teqvc	pc, #1879048193	; 0x70000001
    c970:	05000007 	streq	r0, [r0, #-7]
    c974:	02906003 	addseq	r6, r0, #3
    c978:	21170800 	tstcs	r7, r0, lsl #16
    c97c:	23170000 	tstcs	r7, #0
    c980:	0007733b 	andeq	r7, r7, fp, lsr r3
    c984:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    c988:	0a000290 	beq	d3d0 <errno+0xd3cc>
    c98c:	00000388 	andeq	r0, r0, r8, lsl #7
    c990:	0000081a 	andeq	r0, r0, sl, lsl r8
    c994:	0000540b 	andeq	r5, r0, fp, lsl #8
    c998:	07000300 	streq	r0, [r0, -r0, lsl #6]
    c99c:	0000080a 	andeq	r0, r0, sl, lsl #16
    c9a0:	001a6208 	andseq	r6, sl, r8, lsl #4
    c9a4:	1c0e1800 	stcne	8, cr1, [lr], {-0}
    c9a8:	0000081a 	andeq	r0, r0, sl, lsl r8
    c9ac:	90680305 	rsbls	r0, r8, r5, lsl #6
    c9b0:	4a200002 	bmi	80c9c0 <__bss_end__+0x6c3978>
    c9b4:	0200003d 	andeq	r0, r0, #61	; 0x3d
    c9b8:	0041050a 	subeq	r0, r1, sl, lsl #10
    c9bc:	87fc0000 	ldrbhi	r0, [ip, r0]!
    c9c0:	01200001 			; <UNDEFINED> instruction: 0x01200001
    c9c4:	9c010000 	stcls	0, cr0, [r1], {-0}
    c9c8:	00000888 	andeq	r0, r0, r8, lsl #17
    c9cc:	00281a21 	eoreq	r1, r8, r1, lsr #20
    c9d0:	360a0200 	strcc	r0, [sl], -r0, lsl #4
    c9d4:	00000888 	andeq	r0, r0, r8, lsl #17
    c9d8:	22649102 	rsbcs	r9, r4, #-2147483648	; 0x80000000
    c9dc:	00717269 	rsbseq	r7, r1, r9, ror #4
    c9e0:	8e4d0a02 	vmlahi.f32	s1, s26, s4
    c9e4:	02000008 	andeq	r0, r0, #8
    c9e8:	20216091 	mlacs	r1, r1, r0, r6
    c9ec:	0200000c 	andeq	r0, r0, #12
    c9f0:	0532600a 	ldreq	r6, [r2, #-10]!
    c9f4:	91020000 	mrsls	r0, (UNDEF: 2)
    c9f8:	1ab6235c 	bne	fed95770 <__bss_end__+0xfec4c728>
    c9fc:	08a40000 	stmiaeq	r4!, {}	; <UNPREDICTABLE>
    ca00:	03050000 	movweq	r0, #20480	; 0x5000
    ca04:	000290f8 	strdeq	r9, [r2], -r8
    ca08:	26041400 	strcs	r1, [r4], -r0, lsl #8
    ca0c:	14000005 	strne	r0, [r0], #-5
    ca10:	00070504 	andeq	r0, r7, r4, lsl #10
    ca14:	03bb0a00 			; <UNDEFINED> instruction: 0x03bb0a00
    ca18:	08a40000 	stmiaeq	r4!, {}	; <UNPREDICTABLE>
    ca1c:	540b0000 	strpl	r0, [fp], #-0
    ca20:	21000000 	mrscs	r0, (UNDEF: 0)
    ca24:	08940700 	ldmeq	r4, {r8, r9, sl}
    ca28:	6c240000 	stcvs	0, cr0, [r4], #-0
    ca2c:	0100003d 	tsteq	r0, sp, lsr r0
    ca30:	01511a58 	cmpeq	r1, r8, asr sl
    ca34:	86e00000 	strbthi	r0, [r0], r0
    ca38:	011c0001 	tsteq	ip, r1
    ca3c:	9c010000 	stcls	0, cr0, [r1], {-0}
    ca40:	0000091e 	andeq	r0, r0, lr, lsl r9
    ca44:	00281f21 	eoreq	r1, r8, r1, lsr #30
    ca48:	49580100 	ldmdbmi	r8, {r8}^
    ca4c:	00000888 	andeq	r0, r0, r8, lsl #17
    ca50:	226c9102 	rsbcs	r9, ip, #-2147483648	; 0x80000000
    ca54:	00717269 	rsbseq	r7, r1, r9, ror #4
    ca58:	41555801 	cmpmi	r5, r1, lsl #16
    ca5c:	02000000 	andeq	r0, r0, #0
    ca60:	0e216891 	mcreq	8, 1, r6, cr1, cr1, {4}
    ca64:	0100003e 	tsteq	r0, lr, lsr r0
    ca68:	00415e58 	subeq	r5, r1, r8, asr lr
    ca6c:	91020000 	mrsls	r0, (UNDEF: 2)
    ca70:	3d8c2164 	stfccs	f2, [ip, #400]	; 0x190
    ca74:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    ca78:	0000416b 	andeq	r4, r0, fp, ror #2
    ca7c:	60910200 	addsvs	r0, r1, r0, lsl #4
    ca80:	00320221 	eorseq	r0, r2, r1, lsr #4
    ca84:	47590100 	ldrbmi	r0, [r9, -r0, lsl #2]
    ca88:	00000471 	andeq	r0, r0, r1, ror r4
    ca8c:	23009102 	movwcs	r9, #258	; 0x102
    ca90:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    ca94:	0000092e 	andeq	r0, r0, lr, lsr #18
    ca98:	91380305 	teqls	r8, r5, lsl #6
    ca9c:	0a000002 	beq	caac <errno+0xcaa8>
    caa0:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
    caa4:	0000092e 	andeq	r0, r0, lr, lsr #18
    caa8:	0000540b 	andeq	r5, r0, fp, lsl #8
    caac:	07001f00 	streq	r1, [r0, -r0, lsl #30]
    cab0:	0000091e 	andeq	r0, r0, lr, lsl r9
    cab4:	003dfa24 	eorseq	pc, sp, r4, lsr #20
    cab8:	1a490100 	bne	124cec0 <__bss_end__+0x1103e78>
    cabc:	00000151 	andeq	r0, r0, r1, asr r1
    cac0:	000185b8 			; <UNDEFINED> instruction: 0x000185b8
    cac4:	00000128 	andeq	r0, r0, r8, lsr #2
    cac8:	09999c01 	ldmibeq	r9, {r0, sl, fp, ip, pc}
    cacc:	1f210000 	svcne	0x00210000
    cad0:	01000028 	tsteq	r0, r8, lsr #32
    cad4:	08884549 	stmeq	r8, {r0, r3, r6, r8, sl, lr}
    cad8:	91020000 	mrsls	r0, (UNDEF: 2)
    cadc:	72692264 	rsbvc	r2, r9, #100, 4	; 0x40000006
    cae0:	49010071 	stmdbmi	r1, {r0, r4, r5, r6}
    cae4:	00004151 	andeq	r4, r0, r1, asr r1
    cae8:	60910200 	addsvs	r0, r1, r0, lsl #4
    caec:	003e0e21 	eorseq	r0, lr, r1, lsr #28
    caf0:	5a490100 	bpl	124cef8 <__bss_end__+0x1103eb0>
    caf4:	00000041 	andeq	r0, r0, r1, asr #32
    caf8:	215c9102 	cmpcs	ip, r2, lsl #2
    cafc:	00003202 	andeq	r3, r0, r2, lsl #4
    cb00:	71434a01 	cmpvc	r3, r1, lsl #20
    cb04:	02000004 	andeq	r0, r0, #4
    cb08:	b6237c91 			; <UNDEFINED> instruction: 0xb6237c91
    cb0c:	a900001a 	stmdbge	r0, {r1, r3, r4}
    cb10:	05000009 	streq	r0, [r0, #-9]
    cb14:	02911c03 	addseq	r1, r1, #768	; 0x300
    cb18:	bb0a0000 	bllt	28cb20 <__bss_end__+0x143ad8>
    cb1c:	a9000003 	stmdbge	r0, {r0, r1}
    cb20:	0b000009 	bleq	cb4c <errno+0xcb48>
    cb24:	00000054 	andeq	r0, r0, r4, asr r0
    cb28:	9907001b 	stmdbls	r7, {r0, r1, r3, r4}
    cb2c:	00000009 	andeq	r0, r0, r9
    cb30:	00001158 	andeq	r1, r0, r8, asr r1
    cb34:	2bd60004 	blcs	ff58cb4c <__bss_end__+0xff443b04>
    cb38:	01040000 	mrseq	r0, (UNDEF: 4)
    cb3c:	00000117 	andeq	r0, r0, r7, lsl r1
    cb40:	003e300c 	eorseq	r3, lr, ip
    cb44:	00005f00 	andeq	r5, r0, r0, lsl #30
    cb48:	01891c00 	orreq	r1, r9, r0, lsl #24
    cb4c:	00014000 	andeq	r4, r1, r0
    cb50:	006bc000 	rsbeq	ip, fp, r0
    cb54:	07040200 	streq	r0, [r4, -r0, lsl #4]
    cb58:	000003c5 	andeq	r0, r0, r5, asr #7
    cb5c:	09050802 	stmdbeq	r5, {r1, fp}
    cb60:	02000001 	andeq	r0, r0, #1
    cb64:	15f30408 	ldrbne	r0, [r3, #1032]!	; 0x408
    cb68:	2f030000 	svccs	0x00030000
    cb6c:	0200000a 	andeq	r0, r0, #10
    cb70:	0025186e 	eoreq	r1, r5, lr, ror #16
    cb74:	3a040000 	bcc	10cb7c <morecore_area+0xc3b7c>
    cb78:	05000000 	streq	r0, [r0, #-0]
    cb7c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    cb80:	4b060074 	blmi	18cd58 <__bss_end__+0x43d10>
    cb84:	03000000 	movweq	r0, #0
    cb88:	00000920 	andeq	r0, r0, r0, lsr #18
    cb8c:	25187302 	ldrcs	r7, [r8, #-770]	; 0xfffffcfe
    cb90:	02000000 	andeq	r0, r0, #0
    cb94:	032e0601 			; <UNDEFINED> instruction: 0x032e0601
    cb98:	02020000 	andeq	r0, r2, #0
    cb9c:	00046605 	andeq	r6, r4, r5, lsl #12
    cba0:	08010200 	stmdaeq	r1, {r9}
    cba4:	0000032c 	andeq	r0, r0, ip, lsr #6
    cba8:	52070202 	andpl	r0, r7, #536870912	; 0x20000000
    cbac:	03000003 	movweq	r0, #3
    cbb0:	0000058e 	andeq	r0, r0, lr, lsl #11
    cbb4:	2519b502 	ldrcs	fp, [r9, #-1282]	; 0xfffffafe
    cbb8:	03000000 	movweq	r0, #0
    cbbc:	00003569 	andeq	r3, r0, r9, ror #10
    cbc0:	9719ba02 	ldrls	fp, [r9, -r2, lsl #20]
    cbc4:	02000000 	andeq	r0, r0, #0
    cbc8:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
    cbcc:	04020000 	streq	r0, [r2], #-0
    cbd0:	00010e05 	andeq	r0, r1, r5, lsl #28
    cbd4:	03040700 	movweq	r0, #18176	; 0x4700
    cbd8:	000018b7 			; <UNDEFINED> instruction: 0x000018b7
    cbdc:	4b0f7d02 	blmi	3ebfec <__bss_end__+0x2a2fa4>
    cbe0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    cbe4:	0000022a 	andeq	r0, r0, sl, lsr #4
    cbe8:	19016d02 	stmdbne	r1, {r1, r8, sl, fp, sp, lr}
    cbec:	000000c0 	andeq	r0, r0, r0, asr #1
    cbf0:	00022609 	andeq	r2, r2, r9, lsl #12
    cbf4:	08010200 	stmdaeq	r1, {r9}
    cbf8:	00000335 	andeq	r0, r0, r5, lsr r3
    cbfc:	0000c506 	andeq	ip, r0, r6, lsl #10
    cc00:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    cc04:	000015f8 	strdeq	r1, [r0], -r8
    cc08:	00022f0a 	andeq	r2, r2, sl, lsl #30
    cc0c:	14370300 	ldrtne	r0, [r7], #-768	; 0xfffffd00
    cc10:	000000ea 	andeq	r0, r0, sl, ror #1
    cc14:	00b3040b 	adcseq	r0, r3, fp, lsl #8
    cc18:	e4060000 	str	r0, [r6], #-0
    cc1c:	0a000000 	beq	cc24 <errno+0xcc20>
    cc20:	0000023c 	andeq	r0, r0, ip, lsr r2
    cc24:	ea143803 	b	51ac38 <__bss_end__+0x3d1bf0>
    cc28:	0a000000 	beq	cc30 <errno+0xcc2c>
    cc2c:	00000235 	andeq	r0, r0, r5, lsr r2
    cc30:	ea143903 	b	51b044 <__bss_end__+0x3d1ffc>
    cc34:	03000000 	movweq	r0, #0
    cc38:	00002593 	muleq	r0, r3, r5
    cc3c:	8b121004 	blhi	490c54 <__bss_end__+0x347c0c>
    cc40:	0b000000 	bleq	cc48 <errno+0xcc44>
    cc44:	0000cc04 	andeq	ip, r0, r4, lsl #24
    cc48:	c5040b00 	strgt	r0, [r4, #-2816]	; 0xfffff500
    cc4c:	0a000000 	beq	cc54 <errno+0xcc50>
    cc50:	0000189c 	muleq	r0, ip, r8
    cc54:	4b0cf805 	blmi	34ac70 <__bss_end__+0x201c28>
    cc58:	02000000 	andeq	r0, r0, #0
    cc5c:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
    cc60:	320a0000 	andcc	r0, sl, #0
    cc64:	06000017 			; <UNDEFINED> instruction: 0x06000017
    cc68:	004b1a10 	subeq	r1, fp, r0, lsl sl
    cc6c:	8d030000 	stchi	0, cr0, [r3, #-0]
    cc70:	0700002c 	streq	r0, [r0, -ip, lsr #32]
    cc74:	014f1a10 	cmpeq	pc, r0, lsl sl	; <UNPREDICTABLE>
    cc78:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    cc7c:	0c000001 	stceq	0, cr0, [r0], {1}
    cc80:	0000334c 	andeq	r3, r0, ip, asr #6
    cc84:	01ea0780 	mvneq	r0, r0, lsl #15
    cc88:	0001dc08 	andeq	sp, r1, r8, lsl #24
    cc8c:	2c1b0d00 	ldccs	13, cr0, [fp], {-0}
    cc90:	eb070000 	bl	1ccc98 <__bss_end__+0x83c50>
    cc94:	0aaf1401 	beq	febd1ca0 <__bss_end__+0xfea88c58>
    cc98:	0d000000 	stceq	0, cr0, [r0, #-0]
    cc9c:	00002a9d 	muleq	r0, sp, sl
    cca0:	1601ec07 	strne	lr, [r1], -r7, lsl #24
    cca4:	00000b56 	andeq	r0, r0, r6, asr fp
    cca8:	23eb0d0c 	mvncs	r0, #12, 26	; 0x300
    ccac:	ed070000 	stc	0, cr0, [r7, #-0]
    ccb0:	0c931201 	lfmeq	f1, 4, [r3], {1}
    ccb4:	0d180000 	ldceq	0, cr0, [r8, #-0]
    ccb8:	00003294 	muleq	r0, r4, r2
    ccbc:	1101ee07 	tstne	r1, r7, lsl #28
    ccc0:	00000dcb 	andeq	r0, r0, fp, asr #27
    ccc4:	302b0d30 	eorcc	r0, fp, r0, lsr sp
    ccc8:	f0070000 			; <UNDEFINED> instruction: 0xf0070000
    cccc:	02911101 	addseq	r1, r1, #1073741824	; 0x40000000
    ccd0:	0d380000 	ldceq	0, cr0, [r8, #-0]
    ccd4:	00002487 	andeq	r2, r0, r7, lsl #9
    ccd8:	0f01f107 	svceq	0x0001f107
    ccdc:	00000525 	andeq	r0, r0, r5, lsr #10
    cce0:	22f70d44 	rscscs	r0, r7, #68, 26	; 0x1100
    cce4:	f3070000 	vhadd.u8	d0, d7, d0
    cce8:	09e12501 	stmibeq	r1!, {r0, r8, sl, sp}^
    ccec:	0d540000 	ldcleq	0, cr0, [r4, #-0]
    ccf0:	0000348c 	andeq	r3, r0, ip, lsl #9
    ccf4:	1501f407 	strne	pc, [r1, #-1031]	; 0xfffffbf9
    ccf8:	00000d71 	andeq	r0, r0, r1, ror sp
    ccfc:	2ab90d64 	bcs	fee50294 <__bss_end__+0xfed0724c>
    cd00:	f5070000 			; <UNDEFINED> instruction: 0xf5070000
    cd04:	08981201 	ldmeq	r8, {r0, r9, ip}
    cd08:	00740000 	rsbseq	r0, r4, r0
    cd0c:	00311f03 	eorseq	r1, r1, r3, lsl #30
    cd10:	16100800 	ldrne	r0, [r0], -r0, lsl #16
    cd14:	000001e8 	andeq	r0, r0, r8, ror #3
    cd18:	00339b0e 	eorseq	r9, r3, lr, lsl #22
    cd1c:	27083800 	strcs	r3, [r8, -r0, lsl #16]
    cd20:	00029108 	andeq	r9, r2, r8, lsl #2
    cd24:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    cd28:	11280800 			; <UNDEFINED> instruction: 0x11280800
    cd2c:	000002d2 	ldrdeq	r0, [r0], -r2
    cd30:	20291000 	eorcs	r1, r9, r0
    cd34:	2a080000 	bcs	20cd3c <__bss_end__+0xc3cf4>
    cd38:	00011311 	andeq	r1, r1, r1, lsl r3
    cd3c:	38100400 	ldmdacc	r0, {sl}
    cd40:	08000040 	stmdaeq	r0, {r6}
    cd44:	00a50b2c 	adceq	r0, r5, ip, lsr #22
    cd48:	10080000 	andne	r0, r8, r0
    cd4c:	0000341c 	andeq	r3, r0, ip, lsl r4
    cd50:	070c2e08 	streq	r2, [ip, -r8, lsl #28]
    cd54:	10000001 	andne	r0, r0, r1
    cd58:	002f4610 	eoreq	r4, pc, r0, lsl r6	; <UNPREDICTABLE>
    cd5c:	0c310800 	ldceq	8, cr0, [r1], #-0
    cd60:	00000463 	andeq	r0, r0, r3, ror #8
    cd64:	35611018 	strbcc	r1, [r1, #-24]!	; 0xffffffe8
    cd68:	33080000 	movwcc	r0, #32768	; 0x8000
    cd6c:	0004630c 	andeq	r6, r4, ip, lsl #6
    cd70:	63101c00 	tstvs	r0, #0, 24
    cd74:	0800002e 	stmdaeq	r0, {r1, r2, r3, r5}
    cd78:	04630c35 	strbteq	r0, [r3], #-3125	; 0xfffff3cb
    cd7c:	10200000 	eorne	r0, r0, r0
    cd80:	00003450 	andeq	r3, r0, r0, asr r4
    cd84:	69123808 	ldmdbvs	r2, {r3, fp, ip, sp}
    cd88:	24000004 	strcs	r0, [r0], #-4
    cd8c:	0040c810 	subeq	ip, r0, r0, lsl r8
    cd90:	0e3a0800 	cdpeq	8, 3, cr0, cr10, cr0, {0}
    cd94:	000004a3 	andeq	r0, r0, r3, lsr #9
    cd98:	28bb1028 	ldmcs	fp!, {r3, r5, ip}
    cd9c:	3b080000 	blcc	20cda4 <__bss_end__+0xc3d5c>
    cda0:	0004b80e 	andeq	fp, r4, lr, lsl #16
    cda4:	09102c00 	ldmdbeq	r0, {sl, fp, sp}
    cda8:	08000030 	stmdaeq	r0, {r4, r5}
    cdac:	04d20e3c 	ldrbeq	r0, [r2], #3644	; 0xe3c
    cdb0:	10300000 	eorsne	r0, r0, r0
    cdb4:	00002684 	andeq	r2, r0, r4, lsl #13
    cdb8:	e30c3d08 	movw	r3, #52488	; 0xcd08
    cdbc:	34000004 	strcc	r0, [r0], #-4
    cdc0:	254a0300 	strbcs	r0, [sl, #-768]	; 0xfffffd00
    cdc4:	11080000 	mrsne	r0, (UNDEF: 8)
    cdc8:	00029d1a 	andeq	r9, r2, sl, lsl sp
    cdcc:	302b0e00 	eorcc	r0, fp, r0, lsl #28
    cdd0:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    cdd4:	02d2081f 	sbcseq	r0, r2, #2031616	; 0x1f0000
    cdd8:	97100000 	ldrls	r0, [r0, -r0]
    cddc:	08000033 	stmdaeq	r0, {r0, r1, r4, r5}
    cde0:	046f0e20 	strbteq	r0, [pc], #-3616	; cde8 <errno+0xcde4>
    cde4:	10000000 	andne	r0, r0, r0
    cde8:	00002533 	andeq	r2, r0, r3, lsr r5
    cdec:	8e0b2108 	adfhie	f2, f3, #0.0
    cdf0:	04000004 	streq	r0, [r0], #-4
    cdf4:	00403810 	subeq	r3, r0, r0, lsl r8
    cdf8:	0b220800 	bleq	88ee00 <__bss_end__+0x745db8>
    cdfc:	000000a5 	andeq	r0, r0, r5, lsr #1
    ce00:	f0110008 			; <UNDEFINED> instruction: 0xf0110008
    ce04:	07000022 	streq	r0, [r0, -r2, lsr #32]
    ce08:	00002504 	andeq	r2, r0, r4, lsl #10
    ce0c:	06090900 	streq	r0, [r9], -r0, lsl #18
    ce10:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    ce14:	00253f12 	eoreq	r3, r5, r2, lsl pc
    ce18:	a9120000 	ldmdbge	r2, {}	; <UNPREDICTABLE>
    ce1c:	01000025 	tsteq	r0, r5, lsr #32
    ce20:	0030b212 	eorseq	fp, r0, r2, lsl r2
    ce24:	78120200 	ldmdavc	r2, {r9}
    ce28:	03000038 	movweq	r0, #56	; 0x38
    ce2c:	00359a12 	eorseq	r9, r5, r2, lsl sl
    ce30:	bf120400 	svclt	0x00120400
    ce34:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    ce38:	002d2412 	eoreq	r2, sp, r2, lsl r4
    ce3c:	9e120600 	cfmsub32ls	mvax0, mvfx0, mvfx2, mvfx0
    ce40:	07000023 	streq	r0, [r0, -r3, lsr #32]
    ce44:	002c3212 	eoreq	r3, ip, r2, lsl r2
    ce48:	19120800 	ldmdbne	r2, {fp}
    ce4c:	0900002d 	stmdbeq	r0, {r0, r2, r3, r5}
    ce50:	00286b12 	eoreq	r6, r8, r2, lsl fp
    ce54:	2b120a00 	blcs	48f65c <__bss_end__+0x346614>
    ce58:	0b00002e 	bleq	cf18 <errno+0xcf14>
    ce5c:	002e3412 	eoreq	r3, lr, r2, lsl r4
    ce60:	eb120c00 	bl	48fe68 <__bss_end__+0x346e20>
    ce64:	0d000034 	stceq	0, cr0, [r0, #-208]	; 0xffffff30
    ce68:	0034f512 	eorseq	pc, r4, r2, lsl r5	; <UNPREDICTABLE>
    ce6c:	b6120e00 	ldrlt	r0, [r2], -r0, lsl #28
    ce70:	0f000031 	svceq	0x00000031
    ce74:	0031bf12 	eorseq	fp, r1, r2, lsl pc
    ce78:	1a121000 	bne	490e80 <__bss_end__+0x347e38>
    ce7c:	11000033 	tstne	r0, r3, lsr r0
    ce80:	00332312 	eorseq	r2, r3, r2, lsl r3
    ce84:	73121200 	tstvc	r2, #0, 4
    ce88:	13000037 	movwne	r0, #55	; 0x37
    ce8c:	00377d12 	eorseq	r7, r7, r2, lsl sp
    ce90:	14121400 	ldrne	r1, [r2], #-1024	; 0xfffffc00
    ce94:	15000027 	strne	r0, [r0, #-39]	; 0xffffffd9
    ce98:	00312512 	eorseq	r2, r1, r2, lsl r5
    ce9c:	46121600 	ldrmi	r1, [r2], -r0, lsl #12
    cea0:	17000036 	smladxne	r0, r6, r0, r0
    cea4:	00365312 	eorseq	r5, r6, r2, lsl r3
    cea8:	60121800 	andsvs	r1, r2, r0, lsl #16
    ceac:	19000036 	stmdbne	r0, {r1, r2, r4, r5}
    ceb0:	00366d12 	eorseq	r6, r6, r2, lsl sp
    ceb4:	12121a00 	andsne	r1, r2, #0, 20
    ceb8:	1b000028 	blne	cf60 <errno+0xcf5c>
    cebc:	00288b12 	eoreq	r8, r8, r2, lsl fp
    cec0:	c8121c00 	ldmdagt	r2, {sl, fp, ip}
    cec4:	1d00002c 	stcne	0, cr0, [r0, #-176]	; 0xffffff50
    cec8:	0024f812 	eoreq	pc, r4, r2, lsl r8	; <UNPREDICTABLE>
    cecc:	11000000 	mrsne	r0, (UNDEF: 0)
    ced0:	0000330f 	andeq	r3, r0, pc, lsl #6
    ced4:	00250407 	eoreq	r0, r5, r7, lsl #8
    ced8:	34090000 	strcc	r0, [r9], #-0
    cedc:	00042406 	andeq	r2, r4, r6, lsl #8
    cee0:	2bda1200 	blcs	ff6916e8 <__bss_end__+0xff5486a0>
    cee4:	12000000 	andne	r0, r0, #0
    cee8:	000030f5 	strdeq	r3, [r0], -r5
    ceec:	35721202 	ldrbcc	r1, [r2, #-514]!	; 0xfffffdfe
    cef0:	12030000 	andne	r0, r3, #0
    cef4:	0000276d 	andeq	r2, r0, sp, ror #14
    cef8:	2c251206 	sfmcs	f1, 4, [r5], #-24	; 0xffffffe8
    cefc:	12070000 	andne	r0, r7, #0
    cf00:	00002390 	muleq	r0, r0, r3
    cf04:	34b1120a 	ldrtcc	r1, [r1], #522	; 0x20a
    cf08:	120b0000 	andne	r0, fp, #0
    cf0c:	0000268a 	andeq	r2, r0, sl, lsl #13
    cf10:	2c77120e 	lfmcs	f1, 2, [r7], #-56	; 0xffffffc8
    cf14:	120f0000 	andne	r0, pc, #0
    cf18:	00002444 	andeq	r2, r0, r4, asr #8
    cf1c:	28ae1210 	stmiacs	lr!, {r4, r9, ip}
    cf20:	12110000 	andsne	r0, r1, #0
    cf24:	00002956 	andeq	r2, r0, r6, asr r9
    cf28:	2f991212 	svccs	0x00991212
    cf2c:	12130000 	andsne	r0, r3, #0
    cf30:	00002ca9 	andeq	r2, r0, r9, lsr #25
    cf34:	32071214 	andcc	r1, r7, #20, 4	; 0x40000001
    cf38:	12150000 	andsne	r0, r5, #0
    cf3c:	00002f6d 	andeq	r2, r0, sp, ror #30
    cf40:	275f1216 	smmlacs	pc, r6, r2, r1	; <UNPREDICTABLE>
    cf44:	12170000 	andsne	r0, r7, #0
    cf48:	0000380d 	andeq	r3, r0, sp, lsl #16
    cf4c:	2fb01218 	svccs	0x00b01218
    cf50:	00190000 	andseq	r0, r9, r0
    cf54:	002a7511 	eoreq	r7, sl, r1, lsl r5
    cf58:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
    cf5c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    cf60:	044f0e18 	strbeq	r0, [pc], #-3608	; cf68 <errno+0xcf64>
    cf64:	83120000 	tsthi	r2, #0
    cf68:	00000031 	andeq	r0, r0, r1, lsr r0
    cf6c:	0035e012 	eorseq	lr, r5, r2, lsl r0
    cf70:	7e120100 	mufvcs	f0, f2, f0
    cf74:	02000032 	andeq	r0, r0, #50	; 0x32
    cf78:	0028ce12 	eoreq	ip, r8, r2, lsl lr
    cf7c:	13000300 	movwne	r0, #768	; 0x300
    cf80:	00000463 	andeq	r0, r0, r3, ror #8
    cf84:	00000463 	andeq	r0, r0, r3, ror #8
    cf88:	00046914 	andeq	r6, r4, r4, lsl r9
    cf8c:	02d21400 	sbcseq	r1, r2, #0, 8
    cf90:	0b000000 	bleq	cf98 <errno+0xcf94>
    cf94:	0001dc04 	andeq	sp, r1, r4, lsl #24
    cf98:	91040b00 	tstls	r4, r0, lsl #22
    cf9c:	0b000002 	bleq	cfac <errno+0xcfa8>
    cfa0:	00044f04 	andeq	r4, r4, r4, lsl #30
    cfa4:	004b1300 	subeq	r1, fp, r0, lsl #6
    cfa8:	048e0000 	streq	r0, [lr], #0
    cfac:	69140000 	ldmdbvs	r4, {}	; <UNPREDICTABLE>
    cfb0:	14000004 	strne	r0, [r0], #-4
    cfb4:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    cfb8:	00042414 	andeq	r2, r4, r4, lsl r4
    cfbc:	040b0000 	streq	r0, [fp], #-0
    cfc0:	00000475 	andeq	r0, r0, r5, ror r4
    cfc4:	00046313 	andeq	r6, r4, r3, lsl r3
    cfc8:	0004a300 	andeq	sl, r4, r0, lsl #6
    cfcc:	04631400 	strbteq	r1, [r3], #-1024	; 0xfffffc00
    cfd0:	0b000000 	bleq	cfd8 <errno+0xcfd4>
    cfd4:	00049404 	andeq	r9, r4, r4, lsl #8
    cfd8:	01071300 	mrseq	r1, SP_und
    cfdc:	04b80000 	ldrteq	r0, [r8], #0
    cfe0:	63140000 	tstvs	r4, #0
    cfe4:	00000004 	andeq	r0, r0, r4
    cfe8:	04a9040b 	strteq	r0, [r9], #1035	; 0x40b
    cfec:	07130000 	ldreq	r0, [r3, -r0]
    cff0:	d2000001 	andle	r0, r0, #1
    cff4:	14000004 	strne	r0, [r0], #-4
    cff8:	00000463 	andeq	r0, r0, r3, ror #8
    cffc:	00010714 	andeq	r0, r1, r4, lsl r7
    d000:	040b0000 	streq	r0, [fp], #-0
    d004:	000004be 			; <UNDEFINED> instruction: 0x000004be
    d008:	0004e315 	andeq	lr, r4, r5, lsl r3
    d00c:	04631400 	strbteq	r1, [r3], #-1024	; 0xfffffc00
    d010:	0b000000 	bleq	d018 <errno+0xd014>
    d014:	0004d804 	andeq	sp, r4, r4, lsl #16
    d018:	192b0a00 	stmdbne	fp!, {r9, fp}
    d01c:	7b0a0000 	blvc	28d024 <__bss_end__+0x143fdc>
    d020:	0001190e 	andeq	r1, r1, lr, lsl #18
    d024:	19000a00 	stmdbne	r0, {r9, fp}
    d028:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
    d02c:	00004b0c 	andeq	r4, r0, ip, lsl #22
    d030:	178e0a00 	strne	r0, [lr, r0, lsl #20]
    d034:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
    d038:	00004b14 	andeq	r4, r0, r4, lsl fp
    d03c:	17180a00 	ldrne	r0, [r8, -r0, lsl #20]
    d040:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
    d044:	00004b1c 	andeq	r4, r0, ip, lsl fp
    d048:	23700300 	cmncs	r0, #0, 6
    d04c:	0b0b0000 	bleq	2cd054 <__bss_end__+0x18400c>
    d050:	0000a711 	andeq	sl, r0, r1, lsl r7
    d054:	363c0300 	ldrtcc	r0, [ip], -r0, lsl #6
    d058:	0c0b0000 	stceq	0, cr0, [fp], {-0}
    d05c:	00053618 	andeq	r3, r5, r8, lsl r6
    d060:	05250600 	streq	r0, [r5, #-1536]!	; 0xfffffa00
    d064:	870e0000 	strhi	r0, [lr, -r0]
    d068:	10000024 	andne	r0, r0, r4, lsr #32
    d06c:	7808170b 	stmdavc	r8, {r0, r1, r3, r8, r9, sl, ip}
    d070:	10000005 	andne	r0, r0, r5
    d074:	00003215 	andeq	r3, r0, r5, lsl r2
    d078:	c20b180b 	andgt	r1, fp, #720896	; 0xb0000
    d07c:	00000005 	andeq	r0, r0, r5
    d080:	002f0f10 	eoreq	r0, pc, r0, lsl pc	; <UNPREDICTABLE>
    d084:	0b190b00 	bleq	64fc8c <__bss_end__+0x506c44>
    d088:	000005dc 	ldrdeq	r0, [r0], -ip
    d08c:	2fdb1004 	svccs	0x00db1004
    d090:	1a0b0000 	bne	2cd098 <__bss_end__+0x184050>
    d094:	0005f10d 	andeq	pc, r5, sp, lsl #2
    d098:	38100800 	ldmdacc	r0, {fp}
    d09c:	0b000040 	bleq	d1a4 <errno+0xd1a0>
    d0a0:	00a50b1b 	adceq	r0, r5, fp, lsl fp
    d0a4:	000c0000 	andeq	r0, ip, r0
    d0a8:	00380011 	eorseq	r0, r8, r1, lsl r0
    d0ac:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
    d0b0:	0b000000 	bleq	d0b8 <errno+0xd0b4>
    d0b4:	05a30e10 	streq	r0, [r3, #3600]!	; 0xe10
    d0b8:	a7120000 	ldrge	r0, [r2, -r0]
    d0bc:	0000002b 	andeq	r0, r0, fp, lsr #32
    d0c0:	00370d12 	eorseq	r0, r7, r2, lsl sp
    d0c4:	b1120100 	tstlt	r2, r0, lsl #2
    d0c8:	02000036 	andeq	r0, r0, #54	; 0x36
    d0cc:	002e4812 	eoreq	r4, lr, r2, lsl r8
    d0d0:	13000300 	movwne	r0, #768	; 0x300
    d0d4:	0000004b 	andeq	r0, r0, fp, asr #32
    d0d8:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    d0dc:	0005bc14 	andeq	fp, r5, r4, lsl ip
    d0e0:	05191400 	ldreq	r1, [r9, #-1024]	; 0xfffffc00
    d0e4:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    d0e8:	00000005 	andeq	r0, r0, r5
    d0ec:	0531040b 	ldreq	r0, [r1, #-1035]!	; 0xfffffbf5
    d0f0:	040b0000 	streq	r0, [fp], #-0
    d0f4:	000005a3 	andeq	r0, r0, r3, lsr #11
    d0f8:	00004b13 	andeq	r4, r0, r3, lsl fp
    d0fc:	0005dc00 	andeq	sp, r5, r0, lsl #24
    d100:	05bc1400 	ldreq	r1, [ip, #1024]!	; 0x400
    d104:	19140000 	ldmdbne	r4, {}	; <UNPREDICTABLE>
    d108:	00000005 	andeq	r0, r0, r5
    d10c:	05c8040b 	strbeq	r0, [r8, #1035]	; 0x40b
    d110:	a5130000 	ldrge	r0, [r3, #-0]
    d114:	f1000000 	cps	#0
    d118:	14000005 	strne	r0, [r0], #-5
    d11c:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    d120:	e2040b00 	and	r0, r4, #0, 22
    d124:	11000005 	tstne	r0, r5
    d128:	00002e5a 	andeq	r2, r0, sl, asr lr
    d12c:	00250407 	eoreq	r0, r5, r7, lsl #8
    d130:	150c0000 	strne	r0, [ip, #-0]
    d134:	0006340e 	andeq	r3, r6, lr, lsl #8
    d138:	24d91200 	ldrbcs	r1, [r9], #512	; 0x200
    d13c:	12000000 	andne	r0, r0, #0
    d140:	00002bfb 	strdeq	r2, [r0], -fp
    d144:	290f1201 	stmdbcs	pc, {r0, r9, ip}	; <UNPREDICTABLE>
    d148:	12020000 	andne	r0, r2, #0
    d14c:	00002fce 	andeq	r2, r0, lr, asr #31
    d150:	2e0e1203 	cdpcs	2, 0, cr1, cr14, cr3, {0}
    d154:	12040000 	andne	r0, r4, #0
    d158:	000028fc 	strdeq	r2, [r0], -ip
    d15c:	2c841205 	sfmcs	f1, 4, [r4], {5}
    d160:	00060000 	andeq	r0, r6, r0
    d164:	00367a03 	eorseq	r7, r6, r3, lsl #20
    d168:	031d0c00 	tsteq	sp, #0, 24
    d16c:	000005f7 	strdeq	r0, [r0], -r7
    d170:	270c1416 	smladcs	ip, r6, r4, r1
    d174:	00068b09 	andeq	r8, r6, r9, lsl #22
    d178:	36851000 	strcc	r1, [r5], r0
    d17c:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
    d180:	00009e12 	andeq	r9, r0, r2, lsl lr
    d184:	700f0000 	andvc	r0, pc, r0
    d188:	0c006e69 	stceq	14, cr6, [r0], {105}	; 0x69
    d18c:	009e1229 	addseq	r1, lr, r9, lsr #4
    d190:	10040000 	andne	r0, r4, r0
    d194:	00004e00 	andeq	r4, r0, r0, lsl #28
    d198:	9e122a0c 	vnmlsls.f32	s4, s4, s24
    d19c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    d1a0:	00236710 	eoreq	r6, r3, r0, lsl r7
    d1a4:	122b0c00 	eorne	r0, fp, #0, 24
    d1a8:	0000009e 	muleq	r0, lr, r0
    d1ac:	3390100c 	orrscc	r1, r0, #12
    d1b0:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    d1b4:	00009e12 	andeq	r9, r0, r2, lsl lr
    d1b8:	16001000 	strne	r1, [r0], -r0
    d1bc:	092e0c14 	stmdbeq	lr!, {r2, r4, sl, fp}
    d1c0:	000006d6 	ldrdeq	r0, [r0], -r6
    d1c4:	002f3110 	eoreq	r3, pc, r0, lsl r1	; <UNPREDICTABLE>
    d1c8:	122f0c00 	eorne	r0, pc, #0, 24
    d1cc:	0000009e 	muleq	r0, lr, r0
    d1d0:	35ff1000 	ldrbcc	r1, [pc, #0]!	; d1d8 <errno+0xd1d4>
    d1d4:	300c0000 	andcc	r0, ip, r0
    d1d8:	00009e12 	andeq	r9, r0, r2, lsl lr
    d1dc:	35100400 	ldrcc	r0, [r0, #-1024]	; 0xfffffc00
    d1e0:	0c00002b 	stceq	0, cr0, [r0], {43}	; 0x2b
    d1e4:	009e1231 	addseq	r1, lr, r1, lsr r2
    d1e8:	10080000 	andne	r0, r8, r0
    d1ec:	000042cf 	andeq	r4, r0, pc, asr #5
    d1f0:	9e12320c 	cdpls	2, 1, cr3, cr2, cr12, {0}
    d1f4:	0c000000 	stceq	0, cr0, [r0], {-0}
    d1f8:	00339010 	eorseq	r9, r3, r0, lsl r0
    d1fc:	12330c00 	eorsne	r0, r3, #0, 24
    d200:	0000009e 	muleq	r0, lr, r0
    d204:	04160010 	ldreq	r0, [r6], #-16
    d208:	ed09350c 	cfstr32	mvfx3, [r9, #-48]	; 0xffffffd0
    d20c:	10000006 	andne	r0, r0, r6
    d210:	00003497 	muleq	r0, r7, r4
    d214:	9e12360c 	cfmsub32ls	mvax0, mvfx3, mvfx2, mvfx12
    d218:	00000000 	andeq	r0, r0, r0
    d21c:	0c081600 	stceq	6, cr1, [r8], {-0}
    d220:	07110938 			; <UNDEFINED> instruction: 0x07110938
    d224:	97100000 	ldrls	r0, [r0, -r0]
    d228:	0c000034 	stceq	0, cr0, [r0], {52}	; 0x34
    d22c:	009e1239 	addseq	r1, lr, r9, lsr r2
    d230:	10000000 	andne	r0, r0, r0
    d234:	00003e0e 	andeq	r3, r0, lr, lsl #28
    d238:	9e123a0c 	vnmlsls.f32	s6, s4, s24
    d23c:	04000000 	streq	r0, [r0], #-0
    d240:	0c0c1600 	stceq	6, cr1, [ip], {-0}
    d244:	0742093c 	smlaldxeq	r0, r2, ip, r9
    d248:	97100000 	ldrls	r0, [r0, -r0]
    d24c:	0c000034 	stceq	0, cr0, [r0], {52}	; 0x34
    d250:	009e123d 	addseq	r1, lr, sp, lsr r2
    d254:	10000000 	andne	r0, r0, r0
    d258:	00003e0e 	andeq	r3, r0, lr, lsl #28
    d25c:	9e123e0c 	cdpls	14, 1, cr3, cr2, cr12, {0}
    d260:	04000000 	streq	r0, [r0], #-0
    d264:	00290710 	eoreq	r0, r9, r0, lsl r7
    d268:	123f0c00 	eorsne	r0, pc, #0, 24
    d26c:	0000009e 	muleq	r0, lr, r0
    d270:	14170008 	ldrne	r0, [r7], #-8
    d274:	9405260c 	strls	r2, [r5], #-1548	; 0xfffff9f4
    d278:	18000007 	stmdane	r0, {r0, r1, r2}
    d27c:	00003685 	andeq	r3, r0, r5, lsl #13
    d280:	400b2d0c 	andmi	r2, fp, ip, lsl #26
    d284:	19000006 	stmdbne	r0, {r1, r2}
    d288:	0069736d 	rsbeq	r7, r9, sp, ror #6
    d28c:	8b0b340c 	blhi	2da2c4 <__bss_end__+0x19127c>
    d290:	19000006 	stmdbne	r0, {r1, r2}
    d294:	00717269 	rsbseq	r7, r1, r9, ror #4
    d298:	d60b370c 	strle	r3, [fp], -ip, lsl #14
    d29c:	18000006 	stmdane	r0, {r1, r2}
    d2a0:	00003e0e 	andeq	r3, r0, lr, lsl #28
    d2a4:	ed0b3b0c 	vstr	d3, [fp, #-48]	; 0xffffffd0
    d2a8:	19000006 	stmdbne	r0, {r1, r2}
    d2ac:	00757063 	rsbseq	r7, r5, r3, rrx
    d2b0:	110b400c 	tstne	fp, ip
    d2b4:	18000007 	stmdane	r0, {r0, r1, r2}
    d2b8:	00002919 	andeq	r2, r0, r9, lsl r9
    d2bc:	a50f410c 	strge	r4, [pc, #-268]	; d1b8 <errno+0xd1b4>
    d2c0:	00000000 	andeq	r0, r0, r0
    d2c4:	240c1816 	strcs	r1, [ip], #-2070	; 0xfffff7ea
    d2c8:	0007b109 	andeq	fp, r7, r9, lsl #2
    d2cc:	038d1000 	orreq	r1, sp, #0
    d2d0:	250c0000 	strcs	r0, [ip, #-0]
    d2d4:	00063410 	andeq	r3, r6, r0, lsl r4
    d2d8:	421a0000 	andsmi	r0, sl, #0
    d2dc:	04000007 	streq	r0, [r0], #-7
    d2e0:	30be0300 	adcscc	r0, lr, r0, lsl #6
    d2e4:	430c0000 	movwmi	r0, #49152	; 0xc000
    d2e8:	00079403 	andeq	r9, r7, r3, lsl #8
    d2ec:	26b60300 	ldrtcs	r0, [r6], r0, lsl #6
    d2f0:	450c0000 	strmi	r0, [ip, #-0]
    d2f4:	00004b0d 	andeq	r4, r0, sp, lsl #22
    d2f8:	28730300 	ldmdacs	r3!, {r8, r9}^
    d2fc:	4e0c0000 	cdpmi	0, 0, cr0, cr12, cr0, {0}
    d300:	0007d50f 	andeq	sp, r7, pc, lsl #10
    d304:	db040b00 	blle	10ff0c <morecore_area+0xc6f0c>
    d308:	13000007 	movwne	r0, #7
    d30c:	0000004b 	andeq	r0, r0, fp, asr #32
    d310:	000007ea 	andeq	r0, r0, sl, ror #15
    d314:	0000a514 	andeq	sl, r0, r4, lsl r5
    d318:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    d31c:	0c000029 	stceq	0, cr0, [r0], {41}	; 0x29
    d320:	07f6105f 	ubfxeq	r1, pc, #0, #23
    d324:	040b0000 	streq	r0, [fp], #-0
    d328:	000007fc 	strdeq	r0, [r0], -ip
    d32c:	00081115 	andeq	r1, r8, r5, lsl r1
    d330:	00a51400 	adceq	r1, r5, r0, lsl #8
    d334:	c9140000 	ldmdbgt	r4, {}	; <UNPREDICTABLE>
    d338:	14000007 	strne	r0, [r0], #-7
    d33c:	000000a5 	andeq	r0, r0, r5, lsr #1
    d340:	25b50300 	ldrcs	r0, [r5, #768]!	; 0x300
    d344:	700c0000 	andvc	r0, ip, r0
    d348:	00081d14 	andeq	r1, r8, r4, lsl sp
    d34c:	23040b00 	movwcs	r0, #19200	; 0x4b00
    d350:	13000008 	movwne	r0, #8
    d354:	000007bd 			; <UNDEFINED> instruction: 0x000007bd
    d358:	00000841 	andeq	r0, r0, r1, asr #16
    d35c:	0000a514 	andeq	sl, r0, r4, lsl r5
    d360:	07b11400 	ldreq	r1, [r1, r0, lsl #8]!
    d364:	ea140000 	b	50d36c <__bss_end__+0x3c4324>
    d368:	14000007 	strne	r0, [r0], #-7
    d36c:	000000a5 	andeq	r0, r0, r5, lsr #1
    d370:	318e0300 	orrcc	r0, lr, r0, lsl #6
    d374:	7b0c0000 	blvc	30d37c <__bss_end__+0x1c4334>
    d378:	00084d0f 	andeq	r4, r8, pc, lsl #26
    d37c:	53040b00 	movwpl	r0, #19200	; 0x4b00
    d380:	13000008 	movwne	r0, #8
    d384:	0000004b 	andeq	r0, r0, fp, asr #32
    d388:	00000867 	andeq	r0, r0, r7, ror #16
    d38c:	0000a514 	andeq	sl, r0, r4, lsl r5
    d390:	07bd1400 	ldreq	r1, [sp, r0, lsl #8]!
    d394:	16000000 	strne	r0, [r0], -r0
    d398:	097d0c0c 	ldmdbeq	sp!, {r2, r3, sl, fp}^
    d39c:	00000898 	muleq	r0, r8, r8
    d3a0:	002a2e10 	eoreq	r2, sl, r0, lsl lr
    d3a4:	0b7e0c00 	bleq	1f903ac <__bss_end__+0x1e47364>
    d3a8:	000000a5 	andeq	r0, r0, r5, lsr #1
    d3ac:	37c31000 	strbcc	r1, [r3, r0]
    d3b0:	7f0c0000 	svcvc	0x000c0000
    d3b4:	0008111a 	andeq	r1, r8, sl, lsl r1
    d3b8:	ca100400 	bgt	40e3c0 <__bss_end__+0x2c5378>
    d3bc:	0c000023 	stceq	0, cr0, [r0], {35}	; 0x23
    d3c0:	08411c80 	stmdaeq	r1, {r7, sl, fp, ip}^
    d3c4:	00080000 	andeq	r0, r8, r0
    d3c8:	0036a403 	eorseq	sl, r6, r3, lsl #8
    d3cc:	03810c00 	orreq	r0, r1, #0, 24
    d3d0:	00000867 	andeq	r0, r0, r7, ror #16
    d3d4:	002d0711 	eoreq	r0, sp, r1, lsl r7
    d3d8:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
    d3dc:	0d000000 	stceq	0, cr0, [r0, #-0]
    d3e0:	08db0e09 	ldmeq	fp, {r0, r3, r9, sl, fp}^
    d3e4:	9a120000 	bls	48d3ec <__bss_end__+0x3443a4>
    d3e8:	00000024 	andeq	r0, r0, r4, lsr #32
    d3ec:	002dc412 	eoreq	ip, sp, r2, lsl r4
    d3f0:	e9120100 	ldmdb	r2, {r8}
    d3f4:	0200002f 	andeq	r0, r0, #47	; 0x2f
    d3f8:	00322412 	eorseq	r2, r2, r2, lsl r4
    d3fc:	e7120300 	ldr	r0, [r2, -r0, lsl #6]
    d400:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    d404:	002c3d12 	eoreq	r3, ip, r2, lsl sp
    d408:	03000500 	movweq	r0, #1280	; 0x500
    d40c:	0000304b 	andeq	r3, r0, fp, asr #32
    d410:	a403150d 	strge	r1, [r3], #-1293	; 0xfffffaf3
    d414:	03000008 	movweq	r0, #8
    d418:	000024ff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    d41c:	f30f130e 	vcgt.u8	d1, d15, d14
    d420:	0b000008 	bleq	d448 <errno+0xd444>
    d424:	0008f904 	andeq	pc, r8, r4, lsl #18
    d428:	004b1300 	subeq	r1, fp, r0, lsl #6
    d42c:	09170000 	ldmdbeq	r7, {}	; <UNPREDICTABLE>
    d430:	a5140000 	ldrge	r0, [r4, #-0]
    d434:	14000000 	strne	r0, [r0], #-0
    d438:	000008db 	ldrdeq	r0, [r0], -fp
    d43c:	0000a514 	andeq	sl, r0, r4, lsl r5
    d440:	09171400 	ldmdbeq	r7, {sl, ip}
    d444:	0b000000 	bleq	d44c <errno+0xd448>
    d448:	00011904 	andeq	r1, r1, r4, lsl #18
    d44c:	2b3e0300 	blcs	f8e054 <__bss_end__+0xe4500c>
    d450:	160e0000 	strne	r0, [lr], -r0
    d454:	0009290f 	andeq	r2, r9, pc, lsl #18
    d458:	2f040b00 	svccs	0x00040b00
    d45c:	13000009 	movwne	r0, #9
    d460:	0000004b 	andeq	r0, r0, fp, asr #32
    d464:	00000948 	andeq	r0, r0, r8, asr #18
    d468:	0000a514 	andeq	sl, r0, r4, lsl r5
    d46c:	08db1400 	ldmeq	fp, {sl, ip}^
    d470:	a5140000 	ldrge	r0, [r4, #-0]
    d474:	00000000 	andeq	r0, r0, r0
    d478:	00313e03 	eorseq	r3, r1, r3, lsl #28
    d47c:	0f210e00 	svceq	0x00210e00
    d480:	00000954 	andeq	r0, r0, r4, asr r9
    d484:	095a040b 	ldmdbeq	sl, {r0, r1, r3, sl}^
    d488:	4b130000 	blmi	4cd490 <__bss_end__+0x384448>
    d48c:	73000000 	movwvc	r0, #0
    d490:	14000009 	strne	r0, [r0], #-9
    d494:	000000a5 	andeq	r0, r0, r5, lsr #1
    d498:	0000a514 	andeq	sl, r0, r4, lsl r5
    d49c:	09171400 	ldmdbeq	r7, {sl, ip}
    d4a0:	03000000 	movweq	r0, #0
    d4a4:	0000256d 	andeq	r2, r0, sp, ror #10
    d4a8:	7f0f230e 	svcvc	0x000f230e
    d4ac:	0b000009 	bleq	d4d8 <errno+0xd4d4>
    d4b0:	00098504 	andeq	r8, r9, r4, lsl #10
    d4b4:	004b1300 	subeq	r1, fp, r0, lsl #6
    d4b8:	09a30000 	stmibeq	r3!, {}	; <UNPREDICTABLE>
    d4bc:	a5140000 	ldrge	r0, [r4, #-0]
    d4c0:	14000000 	strne	r0, [r0], #-0
    d4c4:	000008db 	ldrdeq	r0, [r0], -fp
    d4c8:	00094814 	andeq	r4, r9, r4, lsl r8
    d4cc:	00a51400 	adceq	r1, r5, r0, lsl #8
    d4d0:	16000000 	strne	r0, [r0], -r0
    d4d4:	09260e10 	stmdbeq	r6!, {r4, r9, sl, fp}
    d4d8:	000009e1 	andeq	r0, r0, r1, ror #19
    d4dc:	002a2e10 	eoreq	r2, sl, r0, lsl lr
    d4e0:	0b270e00 	bleq	9d0ce8 <__bss_end__+0x887ca0>
    d4e4:	000000a5 	andeq	r0, r0, r5, lsr #1
    d4e8:	28551000 	ldmdacs	r5, {ip}^
    d4ec:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
    d4f0:	0008e720 	andeq	lr, r8, r0, lsr #14
    d4f4:	74100400 	ldrvc	r0, [r0], #-1024	; 0xfffffc00
    d4f8:	0e000034 	mcreq	0, 0, r0, cr0, cr4, {1}
    d4fc:	091d2229 	ldmdbeq	sp, {r0, r3, r5, r9, sp}
    d500:	10080000 	andne	r0, r8, r0
    d504:	00003796 	muleq	r0, r6, r7
    d508:	731c2a0e 	tstvc	ip, #57344	; 0xe000
    d50c:	0c000009 	stceq	0, cr0, [r0], {9}
    d510:	2f4d0300 	svccs	0x004d0300
    d514:	2b0e0000 	blcs	38d51c <__bss_end__+0x2444d4>
    d518:	0009a303 	andeq	sl, r9, r3, lsl #6
    d51c:	31d01100 	bicscc	r1, r0, r0, lsl #2
    d520:	04070000 	streq	r0, [r7], #-0
    d524:	00000025 	andeq	r0, r0, r5, lsr #32
    d528:	120e1f07 	andne	r1, lr, #7, 30
    d52c:	1200000a 	andne	r0, r0, #10
    d530:	000033a1 	andeq	r3, r0, r1, lsr #7
    d534:	32ad1200 	adccc	r1, sp, #0, 4
    d538:	12010000 	andne	r0, r1, #0
    d53c:	000035a8 	andeq	r3, r0, r8, lsr #11
    d540:	b5030002 	strlt	r0, [r3, #-2]
    d544:	0700002d 	streq	r0, [r0, -sp, lsr #32]
    d548:	09ed0323 	stmibeq	sp!, {r0, r1, r5, r8, r9}^
    d54c:	03030000 	movweq	r0, #12288	; 0x3000
    d550:	07000028 	streq	r0, [r0, -r8, lsr #32]
    d554:	0a2a112f 	beq	a91a18 <__bss_end__+0x9489d0>
    d558:	040b0000 	streq	r0, [fp], #-0
    d55c:	00000a30 	andeq	r0, r0, r0, lsr sl
    d560:	0000a513 	andeq	sl, r0, r3, lsl r5
    d564:	000a5300 	andeq	r5, sl, r0, lsl #6
    d568:	00a51400 	adceq	r1, r5, r0, lsl #8
    d56c:	57140000 	ldrpl	r0, [r4, -r0]
    d570:	14000000 	strne	r0, [r0], #-0
    d574:	0000003a 	andeq	r0, r0, sl, lsr r0
    d578:	00004b14 	andeq	r4, r0, r4, lsl fp
    d57c:	0a121400 	beq	492584 <__bss_end__+0x34953c>
    d580:	03000000 	movweq	r0, #0
    d584:	000031a5 	andeq	r3, r0, r5, lsr #3
    d588:	5f103d07 	svcpl	0x00103d07
    d58c:	0b00000a 	bleq	d5bc <errno+0xd5b8>
    d590:	000a6504 	andeq	r6, sl, r4, lsl #10
    d594:	0a7a1500 	beq	1e9299c <__bss_end__+0x1d49954>
    d598:	a5140000 	ldrge	r0, [r4, #-0]
    d59c:	14000000 	strne	r0, [r0], #-0
    d5a0:	000000a5 	andeq	r0, r0, r5, lsr #1
    d5a4:	00003a14 	andeq	r3, r0, r4, lsl sl
    d5a8:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
    d5ac:	0c00002c 	stceq	0, cr0, [r0], {44}	; 0x2c
    d5b0:	af104207 	svcge	0x00104207
    d5b4:	1000000a 	andne	r0, r0, sl
    d5b8:	00002a2e 	andeq	r2, r0, lr, lsr #20
    d5bc:	a50b4307 	strge	r4, [fp, #-775]	; 0xfffffcf9
    d5c0:	00000000 	andeq	r0, r0, r0
    d5c4:	002fa610 	eoreq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    d5c8:	14440700 	strbne	r0, [r4], #-1792	; 0xfffff900
    d5cc:	00000a1e 	andeq	r0, r0, lr, lsl sl
    d5d0:	26781004 	ldrbtcs	r1, [r8], -r4
    d5d4:	45070000 	strmi	r0, [r7, #-0]
    d5d8:	000a5316 	andeq	r5, sl, r6, lsl r3
    d5dc:	03000800 	movweq	r0, #2048	; 0x800
    d5e0:	0000305f 	andeq	r3, r0, pc, asr r0
    d5e4:	7a034607 	bvc	dee08 <morecore_area+0x95e08>
    d5e8:	0300000a 	movweq	r0, #10
    d5ec:	0000349e 	muleq	r0, lr, r4
    d5f0:	c70f6807 	strgt	r6, [pc, -r7, lsl #16]
    d5f4:	0b00000a 	bleq	d624 <errno+0xd620>
    d5f8:	000acd04 	andeq	ip, sl, r4, lsl #26
    d5fc:	004b1300 	subeq	r1, fp, r0, lsl #6
    d600:	0aeb0000 	beq	ffacd608 <__bss_end__+0xff9845c0>
    d604:	a5140000 	ldrge	r0, [r4, #-0]
    d608:	14000000 	strne	r0, [r0], #-0
    d60c:	0000007f 	andeq	r0, r0, pc, ror r0
    d610:	00004b14 	andeq	r4, r0, r4, lsl fp
    d614:	0aeb1400 	beq	ffad261c <__bss_end__+0xff9895d4>
    d618:	0b000000 	bleq	d620 <errno+0xd61c>
    d61c:	00007f04 	andeq	r7, r0, r4, lsl #30
    d620:	28e80300 	stmiacs	r8!, {r8, r9}^
    d624:	78070000 	stmdavc	r7, {}	; <UNPREDICTABLE>
    d628:	000afd0f 	andeq	pc, sl, pc, lsl #26
    d62c:	03040b00 	movweq	r0, #19200	; 0x4b00
    d630:	1300000b 	movwne	r0, #11
    d634:	0000004b 	andeq	r0, r0, fp, asr #32
    d638:	00000b21 	andeq	r0, r0, r1, lsr #22
    d63c:	0000a514 	andeq	sl, r0, r4, lsl r5
    d640:	007f1400 	rsbseq	r1, pc, r0, lsl #8
    d644:	4b140000 	blmi	50d64c <__bss_end__+0x3c4604>
    d648:	14000000 	strne	r0, [r0], #-0
    d64c:	0000007f 	andeq	r0, r0, pc, ror r0
    d650:	2a9a0e00 	bcs	fe690e58 <__bss_end__+0xfe547e10>
    d654:	070c0000 	streq	r0, [ip, -r0]
    d658:	0b56107e 	bleq	1591858 <__bss_end__+0x1448810>
    d65c:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    d660:	0700002a 	streq	r0, [r0, -sl, lsr #32]
    d664:	00a50b7f 	adceq	r0, r5, pc, ror fp
    d668:	10000000 	andne	r0, r0, r0
    d66c:	00002f01 	andeq	r2, r0, r1, lsl #30
    d670:	bb188007 	bllt	62d694 <__bss_end__+0x4e464c>
    d674:	0400000a 	streq	r0, [r0], #-10
    d678:	002d2f10 	eoreq	r2, sp, r0, lsl pc
    d67c:	19810700 	stmibne	r1, {r8, r9, sl}
    d680:	00000af1 	strdeq	r0, [r0], -r1
    d684:	04030008 	streq	r0, [r3], #-8
    d688:	07000024 	streq	r0, [r0, -r4, lsr #32]
    d68c:	0b210382 	bleq	84e49c <__bss_end__+0x705454>
    d690:	65110000 	ldrvs	r0, [r1, #-0]
    d694:	07000024 	streq	r0, [r0, -r4, lsr #32]
    d698:	00002504 	andeq	r2, r0, r4, lsl #10
    d69c:	0e9a0700 	cdpeq	7, 9, cr0, cr10, cr0, {0}
    d6a0:	00000b87 	andeq	r0, r0, r7, lsl #23
    d6a4:	0032e512 	eorseq	lr, r2, r2, lsl r5
    d6a8:	5b120000 	blpl	48d6b0 <__bss_end__+0x344668>
    d6ac:	0100002b 	tsteq	r0, fp, lsr #32
    d6b0:	00361e12 	eorseq	r1, r6, r2, lsl lr
    d6b4:	03000200 	movweq	r0, #512	; 0x200
    d6b8:	000023dc 	ldrdeq	r2, [r0], -ip
    d6bc:	62039e07 	andvs	r9, r3, #7, 28	; 0x70
    d6c0:	0300000b 	movweq	r0, #11
    d6c4:	0000371d 	andeq	r3, r0, sp, lsl r7
    d6c8:	9f11ad07 	svcls	0x0011ad07
    d6cc:	0b00000b 	bleq	d700 <errno+0xd6fc>
    d6d0:	000ba504 	andeq	sl, fp, r4, lsl #10
    d6d4:	00a51300 	adceq	r1, r5, r0, lsl #6
    d6d8:	0bc80000 	bleq	ff20d6e0 <__bss_end__+0xff0c4698>
    d6dc:	a5140000 	ldrge	r0, [r4, #-0]
    d6e0:	14000000 	strne	r0, [r0], #-0
    d6e4:	0000003a 	andeq	r0, r0, sl, lsr r0
    d6e8:	00004b14 	andeq	r4, r0, r4, lsl fp
    d6ec:	004b1400 	subeq	r1, fp, r0, lsl #8
    d6f0:	12140000 	andsne	r0, r4, #0
    d6f4:	0000000a 	andeq	r0, r0, sl
    d6f8:	0025ca03 	eoreq	ip, r5, r3, lsl #20
    d6fc:	10bb0700 	adcsne	r0, fp, r0, lsl #14
    d700:	00000a5f 	andeq	r0, r0, pc, asr sl
    d704:	0024e803 	eoreq	lr, r4, r3, lsl #16
    d708:	15cc0700 	strbne	r0, [ip, #1792]	; 0x700
    d70c:	00000be0 	andeq	r0, r0, r0, ror #23
    d710:	0be6040b 	bleq	ff98e744 <__bss_end__+0xff8456fc>
    d714:	57130000 	ldrpl	r0, [r3, -r0]
    d718:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    d71c:	1400000b 	strne	r0, [r0], #-11
    d720:	000000a5 	andeq	r0, r0, r5, lsr #1
    d724:	0000a514 	andeq	sl, r0, r4, lsl r5
    d728:	003a1400 	eorseq	r1, sl, r0, lsl #8
    d72c:	03000000 	movweq	r0, #0
    d730:	00002985 	andeq	r2, r0, r5, lsl #19
    d734:	5f10da07 	svcpl	0x0010da07
    d738:	0300000a 	movweq	r0, #10
    d73c:	000034d6 	ldrdeq	r3, [r0], -r6
    d740:	1710e807 	ldrne	lr, [r0, -r7, lsl #16]
    d744:	0b00000c 	bleq	d77c <errno+0xd778>
    d748:	000c1d04 	andeq	r1, ip, r4, lsl #26
    d74c:	0c371500 	cfldr32eq	mvfx1, [r7], #-0
    d750:	a5140000 	ldrge	r0, [r4, #-0]
    d754:	14000000 	strne	r0, [r0], #-0
    d758:	000000a5 	andeq	r0, r0, r5, lsr #1
    d75c:	00003a14 	andeq	r3, r0, r4, lsl sl
    d760:	0b871400 	bleq	fe1d2768 <__bss_end__+0xfe089720>
    d764:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    d768:	00002dd7 	ldrdeq	r2, [r0], -r7
    d76c:	10ee0718 	rscne	r0, lr, r8, lsl r7
    d770:	00000c93 	muleq	r0, r3, ip
    d774:	002a2e10 	eoreq	r2, sl, r0, lsl lr
    d778:	0bef0700 	bleq	ffbcf380 <__bss_end__+0xffa86338>
    d77c:	000000a5 	andeq	r0, r0, r5, lsr #1
    d780:	2cfa1000 	ldclcs	0, cr1, [sl]
    d784:	f0070000 			; <UNDEFINED> instruction: 0xf0070000
    d788:	000b9317 	andeq	r9, fp, r7, lsl r3
    d78c:	02100400 	andseq	r0, r0, #0, 8
    d790:	07000031 	smladxeq	r0, r1, r0, r0
    d794:	0bc816f1 	bleq	ff213360 <__bss_end__+0xff0ca318>
    d798:	10080000 	andne	r0, r8, r0
    d79c:	0000312d 	andeq	r3, r0, sp, lsr #2
    d7a0:	d415f207 	ldrle	pc, [r5], #-519	; 0xfffffdf9
    d7a4:	0c00000b 	stceq	0, cr0, [r0], {11}
    d7a8:	002f3910 	eoreq	r3, pc, r0, lsl r9	; <UNPREDICTABLE>
    d7ac:	17f30700 	ldrbne	r0, [r3, r0, lsl #14]!
    d7b0:	00000bff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    d7b4:	2c991010 	ldccs	0, cr1, [r9], {16}
    d7b8:	f4070000 	vst4.8	{d0-d3}, [r7], r0
    d7bc:	000c0b1a 	andeq	r0, ip, sl, lsl fp
    d7c0:	03001400 	movweq	r1, #1024	; 0x400
    d7c4:	0000273c 	andeq	r2, r0, ip, lsr r7
    d7c8:	3703f507 	strcc	pc, [r3, -r7, lsl #10]
    d7cc:	0800000c 	stmdaeq	r0, {r2, r3}
    d7d0:	00003787 	andeq	r3, r0, r7, lsl #15
    d7d4:	0f014d07 	svceq	0x00014d07
    d7d8:	00000cac 	andeq	r0, r0, ip, lsr #25
    d7dc:	0cb2040b 	cfldrseq	mvf0, [r2], #44	; 0x2c
    d7e0:	4b130000 	blmi	4cd7e8 <__bss_end__+0x3847a0>
    d7e4:	cb000000 	blgt	d7ec <errno+0xd7e8>
    d7e8:	1400000c 	strne	r0, [r0], #-12
    d7ec:	000000a5 	andeq	r0, r0, r5, lsr #1
    d7f0:	00003a14 	andeq	r3, r0, r4, lsl sl
    d7f4:	0ccb1400 	cfstrdeq	mvd1, [fp], {0}
    d7f8:	0b000000 	bleq	d800 <errno+0xd7fc>
    d7fc:	0000a504 	andeq	sl, r0, r4, lsl #10
    d800:	259a0800 	ldrcs	r0, [sl, #2048]	; 0x800
    d804:	5c070000 	stcpl	0, cr0, [r7], {-0}
    d808:	0cde0f01 	ldcleq	15, cr0, [lr], {1}
    d80c:	040b0000 	streq	r0, [fp], #-0
    d810:	00000ce4 	andeq	r0, r0, r4, ror #25
    d814:	00004b13 	andeq	r4, r0, r3, lsl fp
    d818:	000d0200 	andeq	r0, sp, r0, lsl #4
    d81c:	00a51400 	adceq	r1, r5, r0, lsl #8
    d820:	3a140000 	bcc	50d828 <__bss_end__+0x3c47e0>
    d824:	14000000 	strne	r0, [r0], #-0
    d828:	0000003a 	andeq	r0, r0, sl, lsr r0
    d82c:	000ccb14 	andeq	ip, ip, r4, lsl fp
    d830:	51080000 	mrspl	r0, (UNDEF: 8)
    d834:	07000024 	streq	r0, [r0, -r4, lsr #32]
    d838:	0f0f016b 	svceq	0x000f016b
    d83c:	0b00000d 	bleq	d878 <errno+0xd874>
    d840:	000d1504 	andeq	r1, sp, r4, lsl #10
    d844:	004b1300 	subeq	r1, fp, r0, lsl #6
    d848:	0d2e0000 	stceq	0, cr0, [lr, #-0]
    d84c:	a5140000 	ldrge	r0, [r4, #-0]
    d850:	14000000 	strne	r0, [r0], #-0
    d854:	0000003a 	andeq	r0, r0, sl, lsr r0
    d858:	0000a514 	andeq	sl, r0, r4, lsl r5
    d85c:	101b0000 	andsne	r0, fp, r0
    d860:	09017007 	stmdbeq	r1, {r0, r1, r2, ip, sp, lr}
    d864:	00000d71 	andeq	r0, r0, r1, ror sp
    d868:	002a070d 	eoreq	r0, sl, sp, lsl #14
    d86c:	01710700 	cmneq	r1, r0, lsl #14
    d870:	000c9f14 	andeq	r9, ip, r4, lsl pc
    d874:	7c0d0000 	stcvc	0, cr0, [sp], {-0}
    d878:	07000031 	smladxeq	r0, r1, r0, r0
    d87c:	d1140172 	tstle	r4, r2, ror r1
    d880:	0400000c 	streq	r0, [r0], #-12
    d884:	0024d40d 	eoreq	sp, r4, sp, lsl #8
    d888:	01730700 	cmneq	r3, r0, lsl #14
    d88c:	000d0212 	andeq	r0, sp, r2, lsl r2
    d890:	2e0d0800 	cdpcs	8, 0, cr0, cr13, cr0, {0}
    d894:	0700002a 	streq	r0, [r0, -sl, lsr #32]
    d898:	a50b0174 	strge	r0, [fp, #-372]	; 0xfffffe8c
    d89c:	0c000000 	stceq	0, cr0, [r0], {-0}
    d8a0:	37a80800 	strcc	r0, [r8, r0, lsl #16]!
    d8a4:	75070000 	strvc	r0, [r7, #-0]
    d8a8:	0d2e0301 	stceq	3, cr0, [lr, #-4]!
    d8ac:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
    d8b0:	07000030 	smladxeq	r0, r0, r0, r0
    d8b4:	8b1101d0 	blhi	44dffc <__bss_end__+0x304fb4>
    d8b8:	0b00000d 	bleq	d8f4 <errno+0xd8f0>
    d8bc:	000d9104 	andeq	r9, sp, r4, lsl #2
    d8c0:	01191300 	tsteq	r9, r0, lsl #6
    d8c4:	0da00000 	stceq	0, cr0, [r0]
    d8c8:	a5140000 	ldrge	r0, [r4, #-0]
    d8cc:	00000000 	andeq	r0, r0, r0
    d8d0:	0035be0c 	eorseq	fp, r5, ip, lsl #28
    d8d4:	d3070800 	movwle	r0, #30720	; 0x7800
    d8d8:	0dcb1001 	stcleq	0, cr1, [fp, #4]
    d8dc:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    d8e0:	0700002a 	streq	r0, [r0, -sl, lsr #32]
    d8e4:	a50b01d4 	strge	r0, [fp, #-468]	; 0xfffffe2c
    d8e8:	00000000 	andeq	r0, r0, r0
    d8ec:	0026d20d 	eoreq	sp, r6, sp, lsl #4
    d8f0:	01d50700 	bicseq	r0, r5, r0, lsl #14
    d8f4:	000d7e18 	andeq	r7, sp, r8, lsl lr
    d8f8:	08000400 	stmdaeq	r0, {sl}
    d8fc:	000037f4 	strdeq	r3, [r0], -r4
    d900:	0301d607 	movweq	sp, #5639	; 0x1607
    d904:	00000da0 	andeq	r0, r0, r0, lsr #27
    d908:	003b4f03 	eorseq	r4, fp, r3, lsl #30
    d90c:	1e0c0f00 	cdpne	15, 0, cr0, cr12, cr0, {0}
    d910:	00000de4 	andeq	r0, r0, r4, ror #27
    d914:	003ca30e 	eorseq	sl, ip, lr, lsl #6
    d918:	2a0fc800 	bcs	3ff920 <__bss_end__+0x2b68d8>
    d91c:	000e8008 	andeq	r8, lr, r8
    d920:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    d924:	152c0f00 	strne	r0, [ip, #-3840]!	; 0xfffff100
    d928:	00000e80 	andeq	r0, r0, r0, lsl #29
    d92c:	26b01000 	ldrtcs	r1, [r0], r0
    d930:	2d0f0000 	stccs	0, cr0, [pc, #-0]	; d938 <errno+0xd934>
    d934:	0000a50b 	andeq	sl, r0, fp, lsl #10
    d938:	cc100400 	cfldrsgt	mvf0, [r0], {-0}
    d93c:	0f000018 	svceq	0x00000018
    d940:	0f800f2f 	svceq	0x00800f2f
    d944:	10080000 	andne	r0, r8, r0
    d948:	00004eb0 			; <UNDEFINED> instruction: 0x00004eb0
    d94c:	b00f300f 	andlt	r3, pc, pc
    d950:	0c00000f 	stceq	0, cr0, [r0], {15}
    d954:	003ff810 	eorseq	pc, pc, r0, lsl r8	; <UNPREDICTABLE>
    d958:	0c310f00 	ldceq	15, cr0, [r1], #-0
    d95c:	00000fc1 	andeq	r0, r0, r1, asr #31
    d960:	3e231010 	mcrcc	0, 1, r1, cr3, cr0, {0}
    d964:	330f0000 	movwcc	r0, #61440	; 0xf000
    d968:	000fc710 	andeq	ip, pc, r0, lsl r7	; <UNPREDICTABLE>
    d96c:	6e101400 	cfmulsvs	mvf1, mvf0, mvf0
    d970:	0f00003b 	svceq	0x0000003b
    d974:	0f0e2435 	svceq	0x000e2435
    d978:	10180000 	andsne	r0, r8, r0
    d97c:	00003b26 	andeq	r3, r0, r6, lsr #22
    d980:	0e24370f 	cdpeq	7, 2, cr3, cr4, cr15, {0}
    d984:	2c00000f 	stccs	0, cr0, [r0], {15}
    d988:	6b6c630f 	blvs	1b265cc <__bss_end__+0x19dd584>
    d98c:	14390f00 	ldrtne	r0, [r9], #-3840	; 0xfffff100
    d990:	00000fd2 	ldrdeq	r0, [r0], -r2
    d994:	3d001040 	stccc	0, cr1, [r0, #-256]	; 0xffffff00
    d998:	3b0f0000 	blcc	3cd9a0 <__bss_end__+0x284958>
    d99c:	00013e11 	andeq	r3, r1, r1, lsl lr
    d9a0:	d7104400 	ldrle	r4, [r0, -r0, lsl #8]
    d9a4:	0f000031 	svceq	0x00000031
    d9a8:	004b093d 	subeq	r0, fp, sp, lsr r9
    d9ac:	00c40000 	sbceq	r0, r4, r0
    d9b0:	003bb111 	eorseq	fp, fp, r1, lsl r1
    d9b4:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
    d9b8:	10000000 	andne	r0, r0, r0
    d9bc:	0eb1060f 	cdpeq	6, 11, cr0, cr1, cr15, {0}
    d9c0:	68120000 	ldmdavs	r2, {}	; <UNPREDICTABLE>
    d9c4:	0000003c 	andeq	r0, r0, ip, lsr r0
    d9c8:	003c7312 	eorseq	r7, ip, r2, lsl r3
    d9cc:	37120100 	ldrcc	r0, [r2, -r0, lsl #2]
    d9d0:	0000003b 	andeq	r0, r0, fp, lsr r0
    d9d4:	003cf512 	eorseq	pc, ip, r2, lsl r5	; <UNPREDICTABLE>
    d9d8:	c4120100 	ldrgt	r0, [r2], #-256	; 0xffffff00
    d9dc:	0100003c 	tsteq	r0, ip, lsr r0
    d9e0:	3b5f1100 	blcc	17d1de8 <__bss_end__+0x1688da0>
    d9e4:	04070000 	streq	r0, [r7], #-0
    d9e8:	00000025 	andeq	r0, r0, r5, lsr #32
    d9ec:	dc06100f 	stcle	0, cr1, [r6], {15}
    d9f0:	1200000e 	andne	r0, r0, #14
    d9f4:	00003bbc 			; <UNDEFINED> instruction: 0x00003bbc
    d9f8:	3d191200 	lfmcc	f1, 4, [r9, #-0]
    d9fc:	12010000 	andne	r0, r1, #0
    da00:	00003d06 	andeq	r3, r0, r6, lsl #26
    da04:	3c411202 	sfmcc	f1, 2, [r1], {2}
    da08:	00030000 	andeq	r0, r3, r0
    da0c:	003afb03 	eorseq	pc, sl, r3, lsl #22
    da10:	101b0f00 	andsne	r0, fp, r0, lsl #30
    da14:	00000ee8 	andeq	r0, r0, r8, ror #29
    da18:	0eee040b 	cdpeq	4, 14, cr0, cr14, cr11, {0}
    da1c:	08150000 	ldmdaeq	r5, {}	; <UNPREDICTABLE>
    da20:	1400000f 	strne	r0, [r0], #-15
    da24:	00000f08 	andeq	r0, r0, r8, lsl #30
    da28:	000eb114 	andeq	fp, lr, r4, lsl r1
    da2c:	003a1400 	eorseq	r1, sl, r0, lsl #8
    da30:	a5140000 	ldrge	r0, [r4, #-0]
    da34:	00000000 	andeq	r0, r0, r0
    da38:	0dd8040b 	cfldrdeq	mvd0, [r8, #44]	; 0x2c
    da3c:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    da40:	1400003b 	strne	r0, [r0], #-59	; 0xffffffc5
    da44:	5d081d0f 	stcpl	13, cr1, [r8, #-60]	; 0xffffffc4
    da48:	1000000f 	andne	r0, r0, pc
    da4c:	00004d27 	andeq	r4, r0, r7, lsr #26
    da50:	dc181f0f 	ldcle	15, cr1, [r8], {15}
    da54:	0000000e 	andeq	r0, r0, lr
    da58:	003d3110 	eorseq	r3, sp, r0, lsl r1
    da5c:	0b210f00 	bleq	851664 <__bss_end__+0x70861c>
    da60:	000000a5 	andeq	r0, r0, r5, lsr #1
    da64:	3b9b1004 	blcc	fe6d1a7c <__bss_end__+0xfe588a34>
    da68:	230f0000 	movwcs	r0, #61440	; 0xf000
    da6c:	00003a0c 	andeq	r3, r0, ip, lsl #20
    da70:	e5100800 	ldr	r0, [r0, #-2048]	; 0xfffff800
    da74:	0f00003c 	svceq	0x0000003c
    da78:	00461525 	subeq	r1, r6, r5, lsr #10
    da7c:	100c0000 	andne	r0, ip, r0
    da80:	000019a1 	andeq	r1, r0, r1, lsr #19
    da84:	a50b270f 	strge	r2, [fp, #-1807]	; 0xfffff8f1
    da88:	10000000 	andne	r0, r0, r0
    da8c:	00a71300 	adceq	r1, r7, r0, lsl #6
    da90:	0f800000 	svceq	0x00800000
    da94:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    da98:	1400000f 	strne	r0, [r0], #-15
    da9c:	000000a5 	andeq	r0, r0, r5, lsr #1
    daa0:	00003a14 	andeq	r3, r0, r4, lsl sl
    daa4:	0edc1400 	cdpeq	4, 13, cr1, cr12, cr0, {0}
    daa8:	a5140000 	ldrge	r0, [r4, #-0]
    daac:	00000000 	andeq	r0, r0, r0
    dab0:	0f5d040b 	svceq	0x005d040b
    dab4:	a7130000 	ldrge	r0, [r3, -r0]
    dab8:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
    dabc:	1400000f 	strne	r0, [r0], #-15
    dac0:	00000f08 	andeq	r0, r0, r8, lsl #30
    dac4:	000fa914 	andeq	sl, pc, r4, lsl r9	; <UNPREDICTABLE>
    dac8:	003a1400 	eorseq	r1, sl, r0, lsl #8
    dacc:	dc140000 	ldcle	0, cr0, [r4], {-0}
    dad0:	1400000e 	strne	r0, [r0], #-14
    dad4:	000000a5 	andeq	r0, r0, r5, lsr #1
    dad8:	af040b00 	svcge	0x00040b00
    dadc:	1c00000f 	stcne	0, cr0, [r0], {15}
    dae0:	0f86040b 	svceq	0x0086040b
    dae4:	c1150000 	tstgt	r5, r0
    dae8:	1400000f 	strne	r0, [r0], #-15
    daec:	00000f08 	andeq	r0, r0, r8, lsl #30
    daf0:	b6040b00 	strlt	r0, [r4], -r0, lsl #22
    daf4:	0b00000f 	bleq	db38 <errno+0xdb34>
    daf8:	00005204 	andeq	r5, r0, r4, lsl #4
    dafc:	3cb10900 			; <UNDEFINED> instruction: 0x3cb10900
    db00:	040b0000 	streq	r0, [fp], #-0
    db04:	00000fcd 	andeq	r0, r0, sp, asr #31
    db08:	003ec30e 	eorseq	ip, lr, lr, lsl #6
    db0c:	0c111400 	cfldrseq	mvf1, [r1], {-0}
    db10:	00102608 	andseq	r2, r0, r8, lsl #12
    db14:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    db18:	150d1100 	strne	r1, [sp, #-256]	; 0xffffff00
    db1c:	00000e80 	andeq	r0, r0, r0, lsl #29
    db20:	33c61000 	biccc	r1, r6, #0
    db24:	0e110000 	cdpeq	0, 1, cr0, cr1, cr0, {0}
    db28:	0000570f 	andeq	r5, r0, pc, lsl #14
    db2c:	1f100400 	svcne	0x00100400
    db30:	11000038 	tstne	r0, r8, lsr r0
    db34:	004b090f 	subeq	r0, fp, pc, lsl #18
    db38:	10080000 	andne	r0, r8, r0
    db3c:	00003e23 	andeq	r3, r0, r3, lsr #28
    db40:	c7101011 			; <UNDEFINED> instruction: 0xc7101011
    db44:	0c00000f 	stceq	0, cr0, [r0], {15}
    db48:	003e2810 	eorseq	r2, lr, r0, lsl r8
    db4c:	0b111100 	bleq	451f54 <__bss_end__+0x308f0c>
    db50:	00001056 	andeq	r1, r0, r6, asr r0
    db54:	d8060010 	stmdale	r6, {r4}
    db58:	1300000f 	movwne	r0, #15
    db5c:	0000004b 	andeq	r0, r0, fp, asr #32
    db60:	00001044 	andeq	r1, r0, r4, asr #32
    db64:	00104414 	andseq	r4, r0, r4, lsl r4
    db68:	104a1400 	subne	r1, sl, r0, lsl #8
    db6c:	50140000 	andspl	r0, r4, r0
    db70:	00000010 	andeq	r0, r0, r0, lsl r0
    db74:	1026040b 	eorne	r0, r6, fp, lsl #8
    db78:	040b0000 	streq	r0, [fp], #-0
    db7c:	0000014a 	andeq	r0, r0, sl, asr #2
    db80:	0de4040b 	cfstrdeq	mvd0, [r4, #44]!	; 0x2c
    db84:	040b0000 	streq	r0, [fp], #-0
    db88:	0000102b 	andeq	r1, r0, fp, lsr #32
    db8c:	0000521d 	andeq	r5, r0, sp, lsl r2
    db90:	00106c00 	andseq	r6, r0, r0, lsl #24
    db94:	00251e00 	eoreq	r1, r5, r0, lsl #28
    db98:	00010000 	andeq	r0, r1, r0
    db9c:	00105c06 	andseq	r5, r0, r6, lsl #24
    dba0:	3e1d1f00 	cdpcc	15, 1, cr1, cr13, cr0, {0}
    dba4:	10010000 	andne	r0, r1, r0
    dba8:	00106c12 	andseq	r6, r0, r2, lsl ip
    dbac:	58030500 	stmdapl	r3, {r8, sl}
    dbb0:	1f000291 	svcne	0x00000291
    dbb4:	00003ea4 	andeq	r3, r0, r4, lsr #29
    dbb8:	6c121101 	ldfvss	f1, [r2], {1}
    dbbc:	05000010 	streq	r0, [r0, #-16]
    dbc0:	02916003 	addseq	r6, r1, #3
    dbc4:	10261d00 	eorne	r1, r6, r0, lsl #26
    dbc8:	10a50000 	adcne	r0, r5, r0
    dbcc:	251e0000 	ldrcs	r0, [lr, #-0]
    dbd0:	01000000 	mrseq	r0, (UNDEF: 0)
    dbd4:	10950600 	addsne	r0, r5, r0, lsl #12
    dbd8:	c31f0000 	tstgt	pc, #0
    dbdc:	0100003e 	tsteq	r0, lr, lsr r0
    dbe0:	10a51e1b 	adcne	r1, r5, fp, lsl lr
    dbe4:	03050000 	movweq	r0, #20480	; 0x5000
    dbe8:	00029168 	andeq	r9, r2, r8, ror #2
    dbec:	003eaf20 	eorseq	sl, lr, r0, lsr #30
    dbf0:	012c0100 			; <UNDEFINED> instruction: 0x012c0100
    dbf4:	00000f08 	andeq	r0, r0, r8, lsl #30
    dbf8:	000189f4 	strdeq	r8, [r1], -r4
    dbfc:	00000068 	andeq	r0, r0, r8, rrx
    dc00:	110f9c01 	tstne	pc, r1, lsl #24
    dc04:	6f210000 	svcvs	0x00210000
    dc08:	282c0100 	stmdacs	ip!, {r8}
    dc0c:	0000104a 	andeq	r1, r0, sl, asr #32
    dc10:	216c9102 	cmncs	ip, r2, lsl #2
    dc14:	2c010064 	stccs	0, cr0, [r1], {100}	; 0x64
    dc18:	000f083c 	andeq	r0, pc, ip, lsr r8	; <UNPREDICTABLE>
    dc1c:	68910200 	ldmvs	r1, {r9}
    dc20:	003e1622 	eorseq	r1, lr, r2, lsr #12
    dc24:	452c0100 	strmi	r0, [ip, #-256]!	; 0xffffff00
    dc28:	000000a5 	andeq	r0, r0, r5, lsr #1
    dc2c:	1f649102 	svcne	0x00649102
    dc30:	000026b0 			; <UNDEFINED> instruction: 0x000026b0
    dc34:	a50b3301 	strge	r3, [fp, #-769]	; 0xfffffcff
    dc38:	02000000 	andeq	r0, r0, #0
    dc3c:	23007491 	movwcs	r7, #1169	; 0x491
    dc40:	00003e97 	muleq	r0, r7, lr
    dc44:	50012101 	andpl	r2, r1, r1, lsl #2
    dc48:	1c000010 	stcne	0, cr0, [r0], {16}
    dc4c:	d8000189 	stmdale	r0, {r0, r3, r7, r8}
    dc50:	01000000 	mrseq	r0, (UNDEF: 0)
    dc54:	6469219c 	strbtvs	r2, [r9], #-412	; 0xfffffe64
    dc58:	1e210100 	sufnes	f0, f1, f0
    dc5c:	00000e80 	andeq	r0, r0, r0, lsl #29
    dc60:	21649102 	cmncs	r4, r2, lsl #2
    dc64:	2101006f 	tstcs	r1, pc, rrx
    dc68:	00104a35 	andseq	r4, r0, r5, lsr sl
    dc6c:	60910200 	addsvs	r0, r1, r0, lsl #4
    dc70:	01006421 	tsteq	r0, r1, lsr #8
    dc74:	10504e21 	subsne	r4, r0, r1, lsr #28
    dc78:	91020000 	mrsls	r0, (UNDEF: 2)
    dc7c:	0069245c 	rsbeq	r2, r9, ip, asr r4
    dc80:	25122201 	ldrcs	r2, [r2, #-513]	; 0xfffffdff
    dc84:	02000000 	andeq	r0, r0, #0
    dc88:	00006c91 	muleq	r0, r1, ip
    dc8c:	0000174c 	andeq	r1, r0, ip, asr #14
    dc90:	2dcf0004 	stclcs	0, cr0, [pc, #16]	; dca8 <errno+0xdca4>
    dc94:	01040000 	mrseq	r0, (UNDEF: 4)
    dc98:	00000117 	andeq	r0, r0, r7, lsl r1
    dc9c:	003f000c 	eorseq	r0, pc, ip
    dca0:	00005f00 	andeq	r5, r0, r0, lsl #30
    dca4:	018a5c00 	orreq	r5, sl, r0, lsl #24
    dca8:	000c4800 	andeq	r4, ip, r0, lsl #16
    dcac:	006fc900 	rsbeq	ip, pc, r0, lsl #18
    dcb0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    dcb4:	000003c5 	andeq	r0, r0, r5, asr #7
    dcb8:	000a2f03 	andeq	r2, sl, r3, lsl #30
    dcbc:	186e0400 	stmdane	lr!, {sl}^
    dcc0:	00000025 	andeq	r0, r0, r5, lsr #32
    dcc4:	00002c04 	andeq	r2, r0, r4, lsl #24
    dcc8:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    dccc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    dcd0:	00003d06 	andeq	r3, r0, r6, lsl #26
    dcd4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    dcd8:	0000010e 	andeq	r0, r0, lr, lsl #2
    dcdc:	09050802 	stmdbeq	r5, {r1, fp}
    dce0:	02000001 	andeq	r0, r0, #1
    dce4:	15f30408 	ldrbne	r0, [r3, #1032]!	; 0x408
    dce8:	20030000 	andcs	r0, r3, r0
    dcec:	04000009 	streq	r0, [r0], #-9
    dcf0:	00251873 	eoreq	r1, r5, r3, ror r8
    dcf4:	01020000 	mrseq	r0, (UNDEF: 2)
    dcf8:	00032e06 	andeq	r2, r3, r6, lsl #28
    dcfc:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    dd00:	00000466 	andeq	r0, r0, r6, ror #8
    dd04:	2c080102 	stfcss	f0, [r8], {2}
    dd08:	02000003 	andeq	r0, r0, #3
    dd0c:	03520702 	cmpeq	r2, #524288	; 0x80000
    dd10:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    dd14:	04000005 	streq	r0, [r0], #-5
    dd18:	002519b5 	strhteq	r1, [r5], -r5
    dd1c:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
    dd20:	04000035 	streq	r0, [r0], #-53	; 0xffffffcb
    dd24:	009e19ba 			; <UNDEFINED> instruction: 0x009e19ba
    dd28:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    dd2c:	0003bb07 	andeq	fp, r3, r7, lsl #22
    dd30:	03040700 	movweq	r0, #18176	; 0x4700
    dd34:	000018b7 			; <UNDEFINED> instruction: 0x000018b7
    dd38:	3d0f7d04 	stccc	13, cr7, [pc, #-16]	; dd30 <errno+0xdd2c>
    dd3c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    dd40:	0000022a 	andeq	r0, r0, sl, lsr #4
    dd44:	19016d04 	stmdbne	r1, {r2, r8, sl, fp, sp, lr}
    dd48:	000000c0 	andeq	r0, r0, r0, asr #1
    dd4c:	00022609 	andeq	r2, r2, r9, lsl #12
    dd50:	08010200 	stmdaeq	r1, {r9}
    dd54:	00000335 	andeq	r0, r0, r5, lsr r3
    dd58:	0000c506 	andeq	ip, r0, r6, lsl #10
    dd5c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    dd60:	000015f8 	strdeq	r1, [r0], -r8
    dd64:	00022f0a 	andeq	r2, r2, sl, lsl #30
    dd68:	14370500 	ldrtne	r0, [r7], #-1280	; 0xfffffb00
    dd6c:	000000ea 	andeq	r0, r0, sl, ror #1
    dd70:	00b3040b 	adcseq	r0, r3, fp, lsl #8
    dd74:	e4060000 	str	r0, [r6], #-0
    dd78:	0a000000 	beq	dd80 <errno+0xdd7c>
    dd7c:	0000023c 	andeq	r0, r0, ip, lsr r2
    dd80:	ea143805 	b	51bd9c <__bss_end__+0x3d2d54>
    dd84:	0a000000 	beq	dd8c <errno+0xdd88>
    dd88:	00000235 	andeq	r0, r0, r5, lsr r2
    dd8c:	ea143905 	b	51c1a8 <__bss_end__+0x3d3160>
    dd90:	03000000 	movweq	r0, #0
    dd94:	00002593 	muleq	r0, r3, r5
    dd98:	92121006 	andsls	r1, r2, #6
    dd9c:	0b000000 	bleq	dda4 <errno+0xdda0>
    dda0:	0000cc04 	andeq	ip, r0, r4, lsl #24
    dda4:	c5040b00 	strgt	r0, [r4, #-2816]	; 0xfffff500
    dda8:	0a000000 	beq	ddb0 <errno+0xddac>
    ddac:	0000189c 	muleq	r0, ip, r8
    ddb0:	3d0cf807 	stccc	8, cr15, [ip, #-28]	; 0xffffffe4
    ddb4:	02000000 	andeq	r0, r0, #0
    ddb8:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
    ddbc:	320a0000 	andcc	r0, sl, #0
    ddc0:	08000017 	stmdaeq	r0, {r0, r1, r2, r4}
    ddc4:	003d1a10 	eorseq	r1, sp, r0, lsl sl
    ddc8:	8d030000 	stchi	0, cr0, [r3, #-0]
    ddcc:	0100002c 	tsteq	r0, ip, lsr #32
    ddd0:	014f1a10 	cmpeq	pc, r0, lsl sl	; <UNPREDICTABLE>
    ddd4:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    ddd8:	0c000001 	stceq	0, cr0, [r0], {1}
    dddc:	0000334c 	andeq	r3, r0, ip, asr #6
    dde0:	01ea0180 	mvneq	r0, r0, lsl #3
    dde4:	0001dc08 	andeq	sp, r1, r8, lsl #24
    dde8:	2c1b0d00 	ldccs	13, cr0, [fp], {-0}
    ddec:	eb010000 	bl	4ddf4 <morecore_area+0x4df4>
    ddf0:	0aaf1401 	beq	febd2dfc <__bss_end__+0xfea89db4>
    ddf4:	0d000000 	stceq	0, cr0, [r0, #-0]
    ddf8:	00002a9d 	muleq	r0, sp, sl
    ddfc:	1601ec01 	strne	lr, [r1], -r1, lsl #24
    de00:	00000b5b 	andeq	r0, r0, fp, asr fp
    de04:	23eb0d0c 	mvncs	r0, #12, 26	; 0x300
    de08:	ed010000 	stc	0, cr0, [r1, #-0]
    de0c:	0c981201 	lfmeq	f1, 4, [r8], {1}
    de10:	0d180000 	ldceq	0, cr0, [r8, #-0]
    de14:	00003294 	muleq	r0, r4, r2
    de18:	1101ee01 	tstne	r1, r1, lsl #28
    de1c:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    de20:	302b0d30 	eorcc	r0, fp, r0, lsr sp
    de24:	f0010000 			; <UNDEFINED> instruction: 0xf0010000
    de28:	02911101 	addseq	r1, r1, #1073741824	; 0x40000000
    de2c:	0d380000 	ldceq	0, cr0, [r8, #-0]
    de30:	00002487 	andeq	r2, r0, r7, lsl #9
    de34:	0f01f101 	svceq	0x0001f101
    de38:	00000525 	andeq	r0, r0, r5, lsr #10
    de3c:	22f70d44 	rscscs	r0, r7, #68, 26	; 0x1100
    de40:	f3010000 	vhadd.u8	d0, d1, d0
    de44:	09e12501 	stmibeq	r1!, {r0, r8, sl, sp}^
    de48:	0d540000 	ldcleq	0, cr0, [r4, #-0]
    de4c:	0000348c 	andeq	r3, r0, ip, lsl #9
    de50:	1501f401 	strne	pc, [r1, #-1025]	; 0xfffffbff
    de54:	00000d76 	andeq	r0, r0, r6, ror sp
    de58:	2ab90d64 	bcs	fee513f0 <__bss_end__+0xfed083a8>
    de5c:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    de60:	08981201 	ldmeq	r8, {r0, r9, ip}
    de64:	00740000 	rsbseq	r0, r4, r0
    de68:	00311f03 	eorseq	r1, r1, r3, lsl #30
    de6c:	16100900 	ldrne	r0, [r0], -r0, lsl #18
    de70:	000001e8 	andeq	r0, r0, r8, ror #3
    de74:	00339b0e 	eorseq	r9, r3, lr, lsl #22
    de78:	27093800 	strcs	r3, [r9, -r0, lsl #16]
    de7c:	00029108 	andeq	r9, r2, r8, lsl #2
    de80:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    de84:	11280900 			; <UNDEFINED> instruction: 0x11280900
    de88:	000002d2 	ldrdeq	r0, [r0], -r2
    de8c:	20291000 	eorcs	r1, r9, r0
    de90:	2a090000 	bcs	24de98 <__bss_end__+0x104e50>
    de94:	00011311 	andeq	r1, r1, r1, lsl r3
    de98:	38100400 	ldmdacc	r0, {sl}
    de9c:	09000040 	stmdbeq	r0, {r6}
    dea0:	00a50b2c 	adceq	r0, r5, ip, lsr #22
    dea4:	10080000 	andne	r0, r8, r0
    dea8:	0000341c 	andeq	r3, r0, ip, lsl r4
    deac:	070c2e09 	streq	r2, [ip, -r9, lsl #28]
    deb0:	10000001 	andne	r0, r0, r1
    deb4:	002f4610 	eoreq	r4, pc, r0, lsl r6	; <UNPREDICTABLE>
    deb8:	0c310900 			; <UNDEFINED> instruction: 0x0c310900
    debc:	00000463 	andeq	r0, r0, r3, ror #8
    dec0:	35611018 	strbcc	r1, [r1, #-24]!	; 0xffffffe8
    dec4:	33090000 	movwcc	r0, #36864	; 0x9000
    dec8:	0004630c 	andeq	r6, r4, ip, lsl #6
    decc:	63101c00 	tstvs	r0, #0, 24
    ded0:	0900002e 	stmdbeq	r0, {r1, r2, r3, r5}
    ded4:	04630c35 	strbteq	r0, [r3], #-3125	; 0xfffff3cb
    ded8:	10200000 	eorne	r0, r0, r0
    dedc:	00003450 	andeq	r3, r0, r0, asr r4
    dee0:	69123809 	ldmdbvs	r2, {r0, r3, fp, ip, sp}
    dee4:	24000004 	strcs	r0, [r0], #-4
    dee8:	0040c810 	subeq	ip, r0, r0, lsl r8
    deec:	0e3a0900 	vaddeq.f16	s0, s20, s0	; <UNPREDICTABLE>
    def0:	000004a3 	andeq	r0, r0, r3, lsr #9
    def4:	28bb1028 	ldmcs	fp!, {r3, r5, ip}
    def8:	3b090000 	blcc	24df00 <__bss_end__+0x104eb8>
    defc:	0004b80e 	andeq	fp, r4, lr, lsl #16
    df00:	09102c00 	ldmdbeq	r0, {sl, fp, sp}
    df04:	09000030 	stmdbeq	r0, {r4, r5}
    df08:	04d20e3c 	ldrbeq	r0, [r2], #3644	; 0xe3c
    df0c:	10300000 	eorsne	r0, r0, r0
    df10:	00002684 	andeq	r2, r0, r4, lsl #13
    df14:	e30c3d09 	movw	r3, #52489	; 0xcd09
    df18:	34000004 	strcc	r0, [r0], #-4
    df1c:	254a0300 	strbcs	r0, [sl, #-768]	; 0xfffffd00
    df20:	11090000 	mrsne	r0, (UNDEF: 9)
    df24:	00029d1a 	andeq	r9, r2, sl, lsl sp
    df28:	302b0e00 	eorcc	r0, fp, r0, lsl #28
    df2c:	090c0000 	stmdbeq	ip, {}	; <UNPREDICTABLE>
    df30:	02d2081f 	sbcseq	r0, r2, #2031616	; 0x1f0000
    df34:	97100000 	ldrls	r0, [r0, -r0]
    df38:	09000033 	stmdbeq	r0, {r0, r1, r4, r5}
    df3c:	046f0e20 	strbteq	r0, [pc], #-3616	; df44 <errno+0xdf40>
    df40:	10000000 	andne	r0, r0, r0
    df44:	00002533 	andeq	r2, r0, r3, lsr r5
    df48:	8e0b2109 	adfhie	f2, f3, #1.0
    df4c:	04000004 	streq	r0, [r0], #-4
    df50:	00403810 	subeq	r3, r0, r0, lsl r8
    df54:	0b220900 	bleq	89035c <__bss_end__+0x747314>
    df58:	000000a5 	andeq	r0, r0, r5, lsr #1
    df5c:	f0110008 			; <UNDEFINED> instruction: 0xf0110008
    df60:	07000022 	streq	r0, [r0, -r2, lsr #32]
    df64:	00002504 	andeq	r2, r0, r4, lsl #10
    df68:	06090a00 	streq	r0, [r9], -r0, lsl #20
    df6c:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    df70:	00253f12 	eoreq	r3, r5, r2, lsl pc
    df74:	a9120000 	ldmdbge	r2, {}	; <UNPREDICTABLE>
    df78:	01000025 	tsteq	r0, r5, lsr #32
    df7c:	0030b212 	eorseq	fp, r0, r2, lsl r2
    df80:	78120200 	ldmdavc	r2, {r9}
    df84:	03000038 	movweq	r0, #56	; 0x38
    df88:	00359a12 	eorseq	r9, r5, r2, lsl sl
    df8c:	bf120400 	svclt	0x00120400
    df90:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    df94:	002d2412 	eoreq	r2, sp, r2, lsl r4
    df98:	9e120600 	cfmsub32ls	mvax0, mvfx0, mvfx2, mvfx0
    df9c:	07000023 	streq	r0, [r0, -r3, lsr #32]
    dfa0:	002c3212 	eoreq	r3, ip, r2, lsl r2
    dfa4:	19120800 	ldmdbne	r2, {fp}
    dfa8:	0900002d 	stmdbeq	r0, {r0, r2, r3, r5}
    dfac:	00286b12 	eoreq	r6, r8, r2, lsl fp
    dfb0:	2b120a00 	blcs	4907b8 <__bss_end__+0x347770>
    dfb4:	0b00002e 	bleq	e074 <errno+0xe070>
    dfb8:	002e3412 	eoreq	r3, lr, r2, lsl r4
    dfbc:	eb120c00 	bl	490fc4 <__bss_end__+0x347f7c>
    dfc0:	0d000034 	stceq	0, cr0, [r0, #-208]	; 0xffffff30
    dfc4:	0034f512 	eorseq	pc, r4, r2, lsl r5	; <UNPREDICTABLE>
    dfc8:	b6120e00 	ldrlt	r0, [r2], -r0, lsl #28
    dfcc:	0f000031 	svceq	0x00000031
    dfd0:	0031bf12 	eorseq	fp, r1, r2, lsl pc
    dfd4:	1a121000 	bne	491fdc <__bss_end__+0x348f94>
    dfd8:	11000033 	tstne	r0, r3, lsr r0
    dfdc:	00332312 	eorseq	r2, r3, r2, lsl r3
    dfe0:	73121200 	tstvc	r2, #0, 4
    dfe4:	13000037 	movwne	r0, #55	; 0x37
    dfe8:	00377d12 	eorseq	r7, r7, r2, lsl sp
    dfec:	14121400 	ldrne	r1, [r2], #-1024	; 0xfffffc00
    dff0:	15000027 	strne	r0, [r0, #-39]	; 0xffffffd9
    dff4:	00312512 	eorseq	r2, r1, r2, lsl r5
    dff8:	46121600 	ldrmi	r1, [r2], -r0, lsl #12
    dffc:	17000036 	smladxne	r0, r6, r0, r0
    e000:	00365312 	eorseq	r5, r6, r2, lsl r3
    e004:	60121800 	andsvs	r1, r2, r0, lsl #16
    e008:	19000036 	stmdbne	r0, {r1, r2, r4, r5}
    e00c:	00366d12 	eorseq	r6, r6, r2, lsl sp
    e010:	12121a00 	andsne	r1, r2, #0, 20
    e014:	1b000028 	blne	e0bc <errno+0xe0b8>
    e018:	00288b12 	eoreq	r8, r8, r2, lsl fp
    e01c:	c8121c00 	ldmdagt	r2, {sl, fp, ip}
    e020:	1d00002c 	stcne	0, cr0, [r0, #-176]	; 0xffffff50
    e024:	0024f812 	eoreq	pc, r4, r2, lsl r8	; <UNPREDICTABLE>
    e028:	11000000 	mrsne	r0, (UNDEF: 0)
    e02c:	0000330f 	andeq	r3, r0, pc, lsl #6
    e030:	00250407 	eoreq	r0, r5, r7, lsl #8
    e034:	340a0000 	strcc	r0, [sl], #-0
    e038:	00042406 	andeq	r2, r4, r6, lsl #8
    e03c:	2bda1200 	blcs	ff692844 <__bss_end__+0xff5497fc>
    e040:	12000000 	andne	r0, r0, #0
    e044:	000030f5 	strdeq	r3, [r0], -r5
    e048:	35721202 	ldrbcc	r1, [r2, #-514]!	; 0xfffffdfe
    e04c:	12030000 	andne	r0, r3, #0
    e050:	0000276d 	andeq	r2, r0, sp, ror #14
    e054:	2c251206 	sfmcs	f1, 4, [r5], #-24	; 0xffffffe8
    e058:	12070000 	andne	r0, r7, #0
    e05c:	00002390 	muleq	r0, r0, r3
    e060:	34b1120a 	ldrtcc	r1, [r1], #522	; 0x20a
    e064:	120b0000 	andne	r0, fp, #0
    e068:	0000268a 	andeq	r2, r0, sl, lsl #13
    e06c:	2c77120e 	lfmcs	f1, 2, [r7], #-56	; 0xffffffc8
    e070:	120f0000 	andne	r0, pc, #0
    e074:	00002444 	andeq	r2, r0, r4, asr #8
    e078:	28ae1210 	stmiacs	lr!, {r4, r9, ip}
    e07c:	12110000 	andsne	r0, r1, #0
    e080:	00002956 	andeq	r2, r0, r6, asr r9
    e084:	2f991212 	svccs	0x00991212
    e088:	12130000 	andsne	r0, r3, #0
    e08c:	00002ca9 	andeq	r2, r0, r9, lsr #25
    e090:	32071214 	andcc	r1, r7, #20, 4	; 0x40000001
    e094:	12150000 	andsne	r0, r5, #0
    e098:	00002f6d 	andeq	r2, r0, sp, ror #30
    e09c:	275f1216 	smmlacs	pc, r6, r2, r1	; <UNPREDICTABLE>
    e0a0:	12170000 	andsne	r0, r7, #0
    e0a4:	0000380d 	andeq	r3, r0, sp, lsl #16
    e0a8:	2fb01218 	svccs	0x00b01218
    e0ac:	00190000 	andseq	r0, r9, r0
    e0b0:	002a7511 	eoreq	r7, sl, r1, lsl r5
    e0b4:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
    e0b8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    e0bc:	044f0e18 	strbeq	r0, [pc], #-3608	; e0c4 <errno+0xe0c0>
    e0c0:	83120000 	tsthi	r2, #0
    e0c4:	00000031 	andeq	r0, r0, r1, lsr r0
    e0c8:	0035e012 	eorseq	lr, r5, r2, lsl r0
    e0cc:	7e120100 	mufvcs	f0, f2, f0
    e0d0:	02000032 	andeq	r0, r0, #50	; 0x32
    e0d4:	0028ce12 	eoreq	ip, r8, r2, lsl lr
    e0d8:	13000300 	movwne	r0, #768	; 0x300
    e0dc:	00000463 	andeq	r0, r0, r3, ror #8
    e0e0:	00000463 	andeq	r0, r0, r3, ror #8
    e0e4:	00046914 	andeq	r6, r4, r4, lsl r9
    e0e8:	02d21400 	sbcseq	r1, r2, #0, 8
    e0ec:	0b000000 	bleq	e0f4 <errno+0xe0f0>
    e0f0:	0001dc04 	andeq	sp, r1, r4, lsl #24
    e0f4:	91040b00 	tstls	r4, r0, lsl #22
    e0f8:	0b000002 	bleq	e108 <errno+0xe104>
    e0fc:	00044f04 	andeq	r4, r4, r4, lsl #30
    e100:	003d1300 	eorseq	r1, sp, r0, lsl #6
    e104:	048e0000 	streq	r0, [lr], #0
    e108:	69140000 	ldmdbvs	r4, {}	; <UNPREDICTABLE>
    e10c:	14000004 	strne	r0, [r0], #-4
    e110:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    e114:	00042414 	andeq	r2, r4, r4, lsl r4
    e118:	040b0000 	streq	r0, [fp], #-0
    e11c:	00000475 	andeq	r0, r0, r5, ror r4
    e120:	00046313 	andeq	r6, r4, r3, lsl r3
    e124:	0004a300 	andeq	sl, r4, r0, lsl #6
    e128:	04631400 	strbteq	r1, [r3], #-1024	; 0xfffffc00
    e12c:	0b000000 	bleq	e134 <errno+0xe130>
    e130:	00049404 	andeq	r9, r4, r4, lsl #8
    e134:	01071300 	mrseq	r1, SP_und
    e138:	04b80000 	ldrteq	r0, [r8], #0
    e13c:	63140000 	tstvs	r4, #0
    e140:	00000004 	andeq	r0, r0, r4
    e144:	04a9040b 	strteq	r0, [r9], #1035	; 0x40b
    e148:	07130000 	ldreq	r0, [r3, -r0]
    e14c:	d2000001 	andle	r0, r0, #1
    e150:	14000004 	strne	r0, [r0], #-4
    e154:	00000463 	andeq	r0, r0, r3, ror #8
    e158:	00010714 	andeq	r0, r1, r4, lsl r7
    e15c:	040b0000 	streq	r0, [fp], #-0
    e160:	000004be 			; <UNDEFINED> instruction: 0x000004be
    e164:	0004e315 	andeq	lr, r4, r5, lsl r3
    e168:	04631400 	strbteq	r1, [r3], #-1024	; 0xfffffc00
    e16c:	0b000000 	bleq	e174 <errno+0xe170>
    e170:	0004d804 	andeq	sp, r4, r4, lsl #16
    e174:	192b0a00 	stmdbne	fp!, {r9, fp}
    e178:	7b0b0000 	blvc	2ce180 <__bss_end__+0x185138>
    e17c:	0001190e 	andeq	r1, r1, lr, lsl #18
    e180:	19000a00 	stmdbne	r0, {r9, fp}
    e184:	7c0b0000 	stcvc	0, cr0, [fp], {-0}
    e188:	00003d0c 	andeq	r3, r0, ip, lsl #26
    e18c:	178e0a00 	strne	r0, [lr, r0, lsl #20]
    e190:	7c0b0000 	stcvc	0, cr0, [fp], {-0}
    e194:	00003d14 	andeq	r3, r0, r4, lsl sp
    e198:	17180a00 	ldrne	r0, [r8, -r0, lsl #20]
    e19c:	7c0b0000 	stcvc	0, cr0, [fp], {-0}
    e1a0:	00003d1c 	andeq	r3, r0, ip, lsl sp
    e1a4:	23700300 	cmncs	r0, #0, 6
    e1a8:	0b0c0000 	bleq	30e1b0 <__bss_end__+0x1c5168>
    e1ac:	0000a711 	andeq	sl, r0, r1, lsl r7
    e1b0:	363c0300 	ldrtcc	r0, [ip], -r0, lsl #6
    e1b4:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    e1b8:	00053618 	andeq	r3, r5, r8, lsl r6
    e1bc:	05250600 	streq	r0, [r5, #-1536]!	; 0xfffffa00
    e1c0:	870e0000 	strhi	r0, [lr, -r0]
    e1c4:	10000024 	andne	r0, r0, r4, lsr #32
    e1c8:	7808170c 	stmdavc	r8, {r2, r3, r8, r9, sl, ip}
    e1cc:	10000005 	andne	r0, r0, r5
    e1d0:	00003215 	andeq	r3, r0, r5, lsl r2
    e1d4:	c20b180c 	andgt	r1, fp, #12, 16	; 0xc0000
    e1d8:	00000005 	andeq	r0, r0, r5
    e1dc:	002f0f10 	eoreq	r0, pc, r0, lsl pc	; <UNPREDICTABLE>
    e1e0:	0b190c00 	bleq	6511e8 <__bss_end__+0x5081a0>
    e1e4:	000005dc 	ldrdeq	r0, [r0], -ip
    e1e8:	2fdb1004 	svccs	0x00db1004
    e1ec:	1a0c0000 	bne	30e1f4 <__bss_end__+0x1c51ac>
    e1f0:	0005f10d 	andeq	pc, r5, sp, lsl #2
    e1f4:	38100800 	ldmdacc	r0, {fp}
    e1f8:	0c000040 	stceq	0, cr0, [r0], {64}	; 0x40
    e1fc:	00a50b1b 	adceq	r0, r5, fp, lsl fp
    e200:	000c0000 	andeq	r0, ip, r0
    e204:	00380011 	eorseq	r0, r8, r1, lsl r0
    e208:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
    e20c:	0c000000 	stceq	0, cr0, [r0], {-0}
    e210:	05a30e10 	streq	r0, [r3, #3600]!	; 0xe10
    e214:	a7120000 	ldrge	r0, [r2, -r0]
    e218:	0000002b 	andeq	r0, r0, fp, lsr #32
    e21c:	00370d12 	eorseq	r0, r7, r2, lsl sp
    e220:	b1120100 	tstlt	r2, r0, lsl #2
    e224:	02000036 	andeq	r0, r0, #54	; 0x36
    e228:	002e4812 	eoreq	r4, lr, r2, lsl r8
    e22c:	13000300 	movwne	r0, #768	; 0x300
    e230:	0000003d 	andeq	r0, r0, sp, lsr r0
    e234:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    e238:	0005bc14 	andeq	fp, r5, r4, lsl ip
    e23c:	05191400 	ldreq	r1, [r9, #-1024]	; 0xfffffc00
    e240:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    e244:	00000005 	andeq	r0, r0, r5
    e248:	0531040b 	ldreq	r0, [r1, #-1035]!	; 0xfffffbf5
    e24c:	040b0000 	streq	r0, [fp], #-0
    e250:	000005a3 	andeq	r0, r0, r3, lsr #11
    e254:	00003d13 	andeq	r3, r0, r3, lsl sp
    e258:	0005dc00 	andeq	sp, r5, r0, lsl #24
    e25c:	05bc1400 	ldreq	r1, [ip, #1024]!	; 0x400
    e260:	19140000 	ldmdbne	r4, {}	; <UNPREDICTABLE>
    e264:	00000005 	andeq	r0, r0, r5
    e268:	05c8040b 	strbeq	r0, [r8, #1035]	; 0x40b
    e26c:	a5130000 	ldrge	r0, [r3, #-0]
    e270:	f1000000 	cps	#0
    e274:	14000005 	strne	r0, [r0], #-5
    e278:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    e27c:	e2040b00 	and	r0, r4, #0, 22
    e280:	11000005 	tstne	r0, r5
    e284:	00002e5a 	andeq	r2, r0, sl, asr lr
    e288:	00250407 	eoreq	r0, r5, r7, lsl #8
    e28c:	150d0000 	strne	r0, [sp, #-0]
    e290:	0006340e 	andeq	r3, r6, lr, lsl #8
    e294:	24d91200 	ldrbcs	r1, [r9], #512	; 0x200
    e298:	12000000 	andne	r0, r0, #0
    e29c:	00002bfb 	strdeq	r2, [r0], -fp
    e2a0:	290f1201 	stmdbcs	pc, {r0, r9, ip}	; <UNPREDICTABLE>
    e2a4:	12020000 	andne	r0, r2, #0
    e2a8:	00002fce 	andeq	r2, r0, lr, asr #31
    e2ac:	2e0e1203 	cdpcs	2, 0, cr1, cr14, cr3, {0}
    e2b0:	12040000 	andne	r0, r4, #0
    e2b4:	000028fc 	strdeq	r2, [r0], -ip
    e2b8:	2c841205 	sfmcs	f1, 4, [r4], {5}
    e2bc:	00060000 	andeq	r0, r6, r0
    e2c0:	00367a03 	eorseq	r7, r6, r3, lsl #20
    e2c4:	031d0d00 	tsteq	sp, #0, 26
    e2c8:	000005f7 	strdeq	r0, [r0], -r7
    e2cc:	270d1416 	smladcs	sp, r6, r4, r1
    e2d0:	00068b09 	andeq	r8, r6, r9, lsl #22
    e2d4:	36851000 	strcc	r1, [r5], r0
    e2d8:	280d0000 	stmdacs	sp, {}	; <UNPREDICTABLE>
    e2dc:	00004912 	andeq	r4, r0, r2, lsl r9
    e2e0:	700f0000 	andvc	r0, pc, r0
    e2e4:	0d006e69 	stceq	14, cr6, [r0, #-420]	; 0xfffffe5c
    e2e8:	00491229 	subeq	r1, r9, r9, lsr #4
    e2ec:	10040000 	andne	r0, r4, r0
    e2f0:	00004e00 	andeq	r4, r0, r0, lsl #28
    e2f4:	49122a0d 	ldmdbmi	r2, {r0, r2, r3, r9, fp, sp}
    e2f8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    e2fc:	00236710 	eoreq	r6, r3, r0, lsl r7
    e300:	122b0d00 	eorne	r0, fp, #0, 26
    e304:	00000049 	andeq	r0, r0, r9, asr #32
    e308:	3390100c 	orrscc	r1, r0, #12
    e30c:	2c0d0000 	stccs	0, cr0, [sp], {-0}
    e310:	00004912 	andeq	r4, r0, r2, lsl r9
    e314:	16001000 	strne	r1, [r0], -r0
    e318:	092e0d14 	stmdbeq	lr!, {r2, r4, r8, sl, fp}
    e31c:	000006d6 	ldrdeq	r0, [r0], -r6
    e320:	002f3110 	eoreq	r3, pc, r0, lsl r1	; <UNPREDICTABLE>
    e324:	122f0d00 	eorne	r0, pc, #0, 26
    e328:	00000049 	andeq	r0, r0, r9, asr #32
    e32c:	35ff1000 	ldrbcc	r1, [pc, #0]!	; e334 <errno+0xe330>
    e330:	300d0000 	andcc	r0, sp, r0
    e334:	00004912 	andeq	r4, r0, r2, lsl r9
    e338:	35100400 	ldrcc	r0, [r0, #-1024]	; 0xfffffc00
    e33c:	0d00002b 	stceq	0, cr0, [r0, #-172]	; 0xffffff54
    e340:	00491231 	subeq	r1, r9, r1, lsr r2
    e344:	10080000 	andne	r0, r8, r0
    e348:	000042cf 	andeq	r4, r0, pc, asr #5
    e34c:	4912320d 	ldmdbmi	r2, {r0, r2, r3, r9, ip, sp}
    e350:	0c000000 	stceq	0, cr0, [r0], {-0}
    e354:	00339010 	eorseq	r9, r3, r0, lsl r0
    e358:	12330d00 	eorsne	r0, r3, #0, 26
    e35c:	00000049 	andeq	r0, r0, r9, asr #32
    e360:	04160010 	ldreq	r0, [r6], #-16
    e364:	ed09350d 	cfstr32	mvfx3, [r9, #-52]	; 0xffffffcc
    e368:	10000006 	andne	r0, r0, r6
    e36c:	00003497 	muleq	r0, r7, r4
    e370:	4912360d 	ldmdbmi	r2, {r0, r2, r3, r9, sl, ip, sp}
    e374:	00000000 	andeq	r0, r0, r0
    e378:	0d081600 	stceq	6, cr1, [r8, #-0]
    e37c:	07110938 			; <UNDEFINED> instruction: 0x07110938
    e380:	97100000 	ldrls	r0, [r0, -r0]
    e384:	0d000034 	stceq	0, cr0, [r0, #-208]	; 0xffffff30
    e388:	00491239 	subeq	r1, r9, r9, lsr r2
    e38c:	10000000 	andne	r0, r0, r0
    e390:	00003e0e 	andeq	r3, r0, lr, lsl #28
    e394:	49123a0d 	ldmdbmi	r2, {r0, r2, r3, r9, fp, ip, sp}
    e398:	04000000 	streq	r0, [r0], #-0
    e39c:	0d0c1600 	stceq	6, cr1, [ip, #-0]
    e3a0:	0742093c 	smlaldxeq	r0, r2, ip, r9
    e3a4:	97100000 	ldrls	r0, [r0, -r0]
    e3a8:	0d000034 	stceq	0, cr0, [r0, #-208]	; 0xffffff30
    e3ac:	0049123d 	subeq	r1, r9, sp, lsr r2
    e3b0:	10000000 	andne	r0, r0, r0
    e3b4:	00003e0e 	andeq	r3, r0, lr, lsl #28
    e3b8:	49123e0d 	ldmdbmi	r2, {r0, r2, r3, r9, sl, fp, ip, sp}
    e3bc:	04000000 	streq	r0, [r0], #-0
    e3c0:	00290710 	eoreq	r0, r9, r0, lsl r7
    e3c4:	123f0d00 	eorsne	r0, pc, #0, 26
    e3c8:	00000049 	andeq	r0, r0, r9, asr #32
    e3cc:	14170008 	ldrne	r0, [r7], #-8
    e3d0:	9405260d 	strls	r2, [r5], #-1549	; 0xfffff9f3
    e3d4:	18000007 	stmdane	r0, {r0, r1, r2}
    e3d8:	00003685 	andeq	r3, r0, r5, lsl #13
    e3dc:	400b2d0d 	andmi	r2, fp, sp, lsl #26
    e3e0:	19000006 	stmdbne	r0, {r1, r2}
    e3e4:	0069736d 	rsbeq	r7, r9, sp, ror #6
    e3e8:	8b0b340d 	blhi	2db424 <__bss_end__+0x1923dc>
    e3ec:	19000006 	stmdbne	r0, {r1, r2}
    e3f0:	00717269 	rsbseq	r7, r1, r9, ror #4
    e3f4:	d60b370d 	strle	r3, [fp], -sp, lsl #14
    e3f8:	18000006 	stmdane	r0, {r1, r2}
    e3fc:	00003e0e 	andeq	r3, r0, lr, lsl #28
    e400:	ed0b3b0d 	vstr	d3, [fp, #-52]	; 0xffffffcc
    e404:	19000006 	stmdbne	r0, {r1, r2}
    e408:	00757063 	rsbseq	r7, r5, r3, rrx
    e40c:	110b400d 	tstne	fp, sp
    e410:	18000007 	stmdane	r0, {r0, r1, r2}
    e414:	00002919 	andeq	r2, r0, r9, lsl r9
    e418:	a50f410d 	strge	r4, [pc, #-269]	; e313 <errno+0xe30f>
    e41c:	00000000 	andeq	r0, r0, r0
    e420:	240d1816 	strcs	r1, [sp], #-2070	; 0xfffff7ea
    e424:	0007b109 	andeq	fp, r7, r9, lsl #2
    e428:	038d1000 	orreq	r1, sp, #0
    e42c:	250d0000 	strcs	r0, [sp, #-0]
    e430:	00063410 	andeq	r3, r6, r0, lsl r4
    e434:	421a0000 	andsmi	r0, sl, #0
    e438:	04000007 	streq	r0, [r0], #-7
    e43c:	30be0300 	adcscc	r0, lr, r0, lsl #6
    e440:	430d0000 	movwmi	r0, #53248	; 0xd000
    e444:	00079403 	andeq	r9, r7, r3, lsl #8
    e448:	26b60300 	ldrtcs	r0, [r6], r0, lsl #6
    e44c:	450d0000 	strmi	r0, [sp, #-0]
    e450:	00003d0d 	andeq	r3, r0, sp, lsl #26
    e454:	28730300 	ldmdacs	r3!, {r8, r9}^
    e458:	4e0d0000 	cdpmi	0, 0, cr0, cr13, cr0, {0}
    e45c:	0007d50f 	andeq	sp, r7, pc, lsl #10
    e460:	db040b00 	blle	111068 <morecore_area+0xc8068>
    e464:	13000007 	movwne	r0, #7
    e468:	0000003d 	andeq	r0, r0, sp, lsr r0
    e46c:	000007ea 	andeq	r0, r0, sl, ror #15
    e470:	0000a514 	andeq	sl, r0, r4, lsl r5
    e474:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    e478:	0d000029 	stceq	0, cr0, [r0, #-164]	; 0xffffff5c
    e47c:	07f6105f 	ubfxeq	r1, pc, #0, #23
    e480:	040b0000 	streq	r0, [fp], #-0
    e484:	000007fc 	strdeq	r0, [r0], -ip
    e488:	00081115 	andeq	r1, r8, r5, lsl r1
    e48c:	00a51400 	adceq	r1, r5, r0, lsl #8
    e490:	c9140000 	ldmdbgt	r4, {}	; <UNPREDICTABLE>
    e494:	14000007 	strne	r0, [r0], #-7
    e498:	000000a5 	andeq	r0, r0, r5, lsr #1
    e49c:	25b50300 	ldrcs	r0, [r5, #768]!	; 0x300
    e4a0:	700d0000 	andvc	r0, sp, r0
    e4a4:	00081d14 	andeq	r1, r8, r4, lsl sp
    e4a8:	23040b00 	movwcs	r0, #19200	; 0x4b00
    e4ac:	13000008 	movwne	r0, #8
    e4b0:	000007bd 			; <UNDEFINED> instruction: 0x000007bd
    e4b4:	00000841 	andeq	r0, r0, r1, asr #16
    e4b8:	0000a514 	andeq	sl, r0, r4, lsl r5
    e4bc:	07b11400 	ldreq	r1, [r1, r0, lsl #8]!
    e4c0:	ea140000 	b	50e4c8 <__bss_end__+0x3c5480>
    e4c4:	14000007 	strne	r0, [r0], #-7
    e4c8:	000000a5 	andeq	r0, r0, r5, lsr #1
    e4cc:	318e0300 	orrcc	r0, lr, r0, lsl #6
    e4d0:	7b0d0000 	blvc	34e4d8 <__bss_end__+0x205490>
    e4d4:	00084d0f 	andeq	r4, r8, pc, lsl #26
    e4d8:	53040b00 	movwpl	r0, #19200	; 0x4b00
    e4dc:	13000008 	movwne	r0, #8
    e4e0:	0000003d 	andeq	r0, r0, sp, lsr r0
    e4e4:	00000867 	andeq	r0, r0, r7, ror #16
    e4e8:	0000a514 	andeq	sl, r0, r4, lsl r5
    e4ec:	07bd1400 	ldreq	r1, [sp, r0, lsl #8]!
    e4f0:	16000000 	strne	r0, [r0], -r0
    e4f4:	097d0d0c 	ldmdbeq	sp!, {r2, r3, r8, sl, fp}^
    e4f8:	00000898 	muleq	r0, r8, r8
    e4fc:	002a2e10 	eoreq	r2, sl, r0, lsl lr
    e500:	0b7e0d00 	bleq	1f91908 <__bss_end__+0x1e488c0>
    e504:	000000a5 	andeq	r0, r0, r5, lsr #1
    e508:	37c31000 	strbcc	r1, [r3, r0]
    e50c:	7f0d0000 	svcvc	0x000d0000
    e510:	0008111a 	andeq	r1, r8, sl, lsl r1
    e514:	ca100400 	bgt	40f51c <__bss_end__+0x2c64d4>
    e518:	0d000023 	stceq	0, cr0, [r0, #-140]	; 0xffffff74
    e51c:	08411c80 	stmdaeq	r1, {r7, sl, fp, ip}^
    e520:	00080000 	andeq	r0, r8, r0
    e524:	0036a403 	eorseq	sl, r6, r3, lsl #8
    e528:	03810d00 	orreq	r0, r1, #0, 26
    e52c:	00000867 	andeq	r0, r0, r7, ror #16
    e530:	002d0711 	eoreq	r0, sp, r1, lsl r7
    e534:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
    e538:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    e53c:	08db0e09 	ldmeq	fp, {r0, r3, r9, sl, fp}^
    e540:	9a120000 	bls	48e548 <__bss_end__+0x345500>
    e544:	00000024 	andeq	r0, r0, r4, lsr #32
    e548:	002dc412 	eoreq	ip, sp, r2, lsl r4
    e54c:	e9120100 	ldmdb	r2, {r8}
    e550:	0200002f 	andeq	r0, r0, #47	; 0x2f
    e554:	00322412 	eorseq	r2, r2, r2, lsl r4
    e558:	e7120300 	ldr	r0, [r2, -r0, lsl #6]
    e55c:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    e560:	002c3d12 	eoreq	r3, ip, r2, lsl sp
    e564:	03000500 	movweq	r0, #1280	; 0x500
    e568:	0000304b 	andeq	r3, r0, fp, asr #32
    e56c:	a403150e 	strge	r1, [r3], #-1294	; 0xfffffaf2
    e570:	03000008 	movweq	r0, #8
    e574:	000024ff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    e578:	f30f130f 	vcgt.u8	d1, d15, d15
    e57c:	0b000008 	bleq	e5a4 <errno+0xe5a0>
    e580:	0008f904 	andeq	pc, r8, r4, lsl #18
    e584:	003d1300 	eorseq	r1, sp, r0, lsl #6
    e588:	09170000 	ldmdbeq	r7, {}	; <UNPREDICTABLE>
    e58c:	a5140000 	ldrge	r0, [r4, #-0]
    e590:	14000000 	strne	r0, [r0], #-0
    e594:	000008db 	ldrdeq	r0, [r0], -fp
    e598:	0000a514 	andeq	sl, r0, r4, lsl r5
    e59c:	09171400 	ldmdbeq	r7, {sl, ip}
    e5a0:	0b000000 	bleq	e5a8 <errno+0xe5a4>
    e5a4:	00011904 	andeq	r1, r1, r4, lsl #18
    e5a8:	2b3e0300 	blcs	f8f1b0 <__bss_end__+0xe46168>
    e5ac:	160f0000 	strne	r0, [pc], -r0
    e5b0:	0009290f 	andeq	r2, r9, pc, lsl #18
    e5b4:	2f040b00 	svccs	0x00040b00
    e5b8:	13000009 	movwne	r0, #9
    e5bc:	0000003d 	andeq	r0, r0, sp, lsr r0
    e5c0:	00000948 	andeq	r0, r0, r8, asr #18
    e5c4:	0000a514 	andeq	sl, r0, r4, lsl r5
    e5c8:	08db1400 	ldmeq	fp, {sl, ip}^
    e5cc:	a5140000 	ldrge	r0, [r4, #-0]
    e5d0:	00000000 	andeq	r0, r0, r0
    e5d4:	00313e03 	eorseq	r3, r1, r3, lsl #28
    e5d8:	0f210f00 	svceq	0x00210f00
    e5dc:	00000954 	andeq	r0, r0, r4, asr r9
    e5e0:	095a040b 	ldmdbeq	sl, {r0, r1, r3, sl}^
    e5e4:	3d130000 	ldccc	0, cr0, [r3, #-0]
    e5e8:	73000000 	movwvc	r0, #0
    e5ec:	14000009 	strne	r0, [r0], #-9
    e5f0:	000000a5 	andeq	r0, r0, r5, lsr #1
    e5f4:	0000a514 	andeq	sl, r0, r4, lsl r5
    e5f8:	09171400 	ldmdbeq	r7, {sl, ip}
    e5fc:	03000000 	movweq	r0, #0
    e600:	0000256d 	andeq	r2, r0, sp, ror #10
    e604:	7f0f230f 	svcvc	0x000f230f
    e608:	0b000009 	bleq	e634 <errno+0xe630>
    e60c:	00098504 	andeq	r8, r9, r4, lsl #10
    e610:	003d1300 	eorseq	r1, sp, r0, lsl #6
    e614:	09a30000 	stmibeq	r3!, {}	; <UNPREDICTABLE>
    e618:	a5140000 	ldrge	r0, [r4, #-0]
    e61c:	14000000 	strne	r0, [r0], #-0
    e620:	000008db 	ldrdeq	r0, [r0], -fp
    e624:	00094814 	andeq	r4, r9, r4, lsl r8
    e628:	00a51400 	adceq	r1, r5, r0, lsl #8
    e62c:	16000000 	strne	r0, [r0], -r0
    e630:	09260f10 	stmdbeq	r6!, {r4, r8, r9, sl, fp}
    e634:	000009e1 	andeq	r0, r0, r1, ror #19
    e638:	002a2e10 	eoreq	r2, sl, r0, lsl lr
    e63c:	0b270f00 	bleq	9d2244 <__bss_end__+0x8891fc>
    e640:	000000a5 	andeq	r0, r0, r5, lsr #1
    e644:	28551000 	ldmdacs	r5, {ip}^
    e648:	280f0000 	stmdacs	pc, {}	; <UNPREDICTABLE>
    e64c:	0008e720 	andeq	lr, r8, r0, lsr #14
    e650:	74100400 	ldrvc	r0, [r0], #-1024	; 0xfffffc00
    e654:	0f000034 	svceq	0x00000034
    e658:	091d2229 	ldmdbeq	sp, {r0, r3, r5, r9, sp}
    e65c:	10080000 	andne	r0, r8, r0
    e660:	00003796 	muleq	r0, r6, r7
    e664:	731c2a0f 	tstvc	ip, #61440	; 0xf000
    e668:	0c000009 	stceq	0, cr0, [r0], {9}
    e66c:	2f4d0300 	svccs	0x004d0300
    e670:	2b0f0000 	blcs	3ce678 <__bss_end__+0x285630>
    e674:	0009a303 	andeq	sl, r9, r3, lsl #6
    e678:	31d01100 	bicscc	r1, r0, r0, lsl #2
    e67c:	04070000 	streq	r0, [r7], #-0
    e680:	00000025 	andeq	r0, r0, r5, lsr #32
    e684:	120e1f01 	andne	r1, lr, #1, 30
    e688:	1200000a 	andne	r0, r0, #10
    e68c:	000033a1 	andeq	r3, r0, r1, lsr #7
    e690:	32ad1200 	adccc	r1, sp, #0, 4
    e694:	12010000 	andne	r0, r1, #0
    e698:	000035a8 	andeq	r3, r0, r8, lsr #11
    e69c:	b5030002 	strlt	r0, [r3, #-2]
    e6a0:	0100002d 	tsteq	r0, sp, lsr #32
    e6a4:	09ed0323 	stmibeq	sp!, {r0, r1, r5, r8, r9}^
    e6a8:	03030000 	movweq	r0, #12288	; 0x3000
    e6ac:	01000028 	tsteq	r0, r8, lsr #32
    e6b0:	0a2a112f 	beq	a92b74 <__bss_end__+0x949b2c>
    e6b4:	040b0000 	streq	r0, [fp], #-0
    e6b8:	00000a30 	andeq	r0, r0, r0, lsr sl
    e6bc:	0000a513 	andeq	sl, r0, r3, lsl r5
    e6c0:	000a5300 	andeq	r5, sl, r0, lsl #6
    e6c4:	00a51400 	adceq	r1, r5, r0, lsl #8
    e6c8:	5e140000 	cdppl	0, 1, cr0, cr4, cr0, {0}
    e6cc:	14000000 	strne	r0, [r0], #-0
    e6d0:	0000002c 	andeq	r0, r0, ip, lsr #32
    e6d4:	00003d14 	andeq	r3, r0, r4, lsl sp
    e6d8:	0a121400 	beq	4936e0 <__bss_end__+0x34a698>
    e6dc:	03000000 	movweq	r0, #0
    e6e0:	000031a5 	andeq	r3, r0, r5, lsr #3
    e6e4:	5f103d01 	svcpl	0x00103d01
    e6e8:	0b00000a 	bleq	e718 <errno+0xe714>
    e6ec:	000a6504 	andeq	r6, sl, r4, lsl #10
    e6f0:	0a7a1500 	beq	1e93af8 <__bss_end__+0x1d4aab0>
    e6f4:	a5140000 	ldrge	r0, [r4, #-0]
    e6f8:	14000000 	strne	r0, [r0], #-0
    e6fc:	000000a5 	andeq	r0, r0, r5, lsr #1
    e700:	00002c14 	andeq	r2, r0, r4, lsl ip
    e704:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
    e708:	0c00002c 	stceq	0, cr0, [r0], {44}	; 0x2c
    e70c:	af104201 	svcge	0x00104201
    e710:	1000000a 	andne	r0, r0, sl
    e714:	00002a2e 	andeq	r2, r0, lr, lsr #20
    e718:	a50b4301 	strge	r4, [fp, #-769]	; 0xfffffcff
    e71c:	00000000 	andeq	r0, r0, r0
    e720:	002fa610 	eoreq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    e724:	14440100 	strbne	r0, [r4], #-256	; 0xffffff00
    e728:	00000a1e 	andeq	r0, r0, lr, lsl sl
    e72c:	26781004 	ldrbtcs	r1, [r8], -r4
    e730:	45010000 	strmi	r0, [r1, #-0]
    e734:	000a5316 	andeq	r5, sl, r6, lsl r3
    e738:	03000800 	movweq	r0, #2048	; 0x800
    e73c:	0000305f 	andeq	r3, r0, pc, asr r0
    e740:	7a034601 	bvc	dff4c <morecore_area+0x96f4c>
    e744:	0600000a 	streq	r0, [r0], -sl
    e748:	00000aaf 	andeq	r0, r0, pc, lsr #21
    e74c:	00349e03 	eorseq	r9, r4, r3, lsl #28
    e750:	0f680100 	svceq	0x00680100
    e754:	00000acc 	andeq	r0, r0, ip, asr #21
    e758:	0ad2040b 	beq	ff48f78c <__bss_end__+0xff346744>
    e75c:	3d130000 	ldccc	0, cr0, [r3, #-0]
    e760:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
    e764:	1400000a 	strne	r0, [r0], #-10
    e768:	000000a5 	andeq	r0, r0, r5, lsr #1
    e76c:	00008614 	andeq	r8, r0, r4, lsl r6
    e770:	003d1400 	eorseq	r1, sp, r0, lsl #8
    e774:	f0140000 			; <UNDEFINED> instruction: 0xf0140000
    e778:	0000000a 	andeq	r0, r0, sl
    e77c:	0086040b 	addeq	r0, r6, fp, lsl #8
    e780:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    e784:	01000028 	tsteq	r0, r8, lsr #32
    e788:	0b020f78 	bleq	92570 <morecore_area+0x49570>
    e78c:	040b0000 	streq	r0, [fp], #-0
    e790:	00000b08 	andeq	r0, r0, r8, lsl #22
    e794:	00003d13 	andeq	r3, r0, r3, lsl sp
    e798:	000b2600 	andeq	r2, fp, r0, lsl #12
    e79c:	00a51400 	adceq	r1, r5, r0, lsl #8
    e7a0:	86140000 	ldrhi	r0, [r4], -r0
    e7a4:	14000000 	strne	r0, [r0], #-0
    e7a8:	0000003d 	andeq	r0, r0, sp, lsr r0
    e7ac:	00008614 	andeq	r8, r0, r4, lsl r6
    e7b0:	9a0e0000 	bls	38e7b8 <__bss_end__+0x245770>
    e7b4:	0c00002a 	stceq	0, cr0, [r0], {42}	; 0x2a
    e7b8:	5b107e01 	blpl	42dfc4 <__bss_end__+0x2e4f7c>
    e7bc:	1000000b 	andne	r0, r0, fp
    e7c0:	00002a2e 	andeq	r2, r0, lr, lsr #20
    e7c4:	a50b7f01 	strge	r7, [fp, #-3841]	; 0xfffff0ff
    e7c8:	00000000 	andeq	r0, r0, r0
    e7cc:	002f0110 	eoreq	r0, pc, r0, lsl r1	; <UNPREDICTABLE>
    e7d0:	18800100 	stmne	r0, {r8}
    e7d4:	00000ac0 	andeq	r0, r0, r0, asr #21
    e7d8:	2d2f1004 	stccs	0, cr1, [pc, #-16]!	; e7d0 <errno+0xe7cc>
    e7dc:	81010000 	mrshi	r0, (UNDEF: 1)
    e7e0:	000af619 	andeq	pc, sl, r9, lsl r6	; <UNPREDICTABLE>
    e7e4:	03000800 	movweq	r0, #2048	; 0x800
    e7e8:	00002404 	andeq	r2, r0, r4, lsl #8
    e7ec:	26038201 	strcs	r8, [r3], -r1, lsl #4
    e7f0:	1100000b 	tstne	r0, fp
    e7f4:	00002465 	andeq	r2, r0, r5, ror #8
    e7f8:	00250407 	eoreq	r0, r5, r7, lsl #8
    e7fc:	9a010000 	bls	4e804 <morecore_area+0x5804>
    e800:	000b8c0e 	andeq	r8, fp, lr, lsl #24
    e804:	32e51200 	rsccc	r1, r5, #0, 4
    e808:	12000000 	andne	r0, r0, #0
    e80c:	00002b5b 	andeq	r2, r0, fp, asr fp
    e810:	361e1201 	ldrcc	r1, [lr], -r1, lsl #4
    e814:	00020000 	andeq	r0, r2, r0
    e818:	0023dc03 	eoreq	sp, r3, r3, lsl #24
    e81c:	039e0100 	orrseq	r0, lr, #0, 2
    e820:	00000b67 	andeq	r0, r0, r7, ror #22
    e824:	00371d03 	eorseq	r1, r7, r3, lsl #26
    e828:	11ad0100 			; <UNDEFINED> instruction: 0x11ad0100
    e82c:	00000ba4 	andeq	r0, r0, r4, lsr #23
    e830:	0baa040b 	bleq	fea8f864 <__bss_end__+0xfe94681c>
    e834:	a5130000 	ldrge	r0, [r3, #-0]
    e838:	cd000000 	stcgt	0, cr0, [r0, #-0]
    e83c:	1400000b 	strne	r0, [r0], #-11
    e840:	000000a5 	andeq	r0, r0, r5, lsr #1
    e844:	00002c14 	andeq	r2, r0, r4, lsl ip
    e848:	003d1400 	eorseq	r1, sp, r0, lsl #8
    e84c:	3d140000 	ldccc	0, cr0, [r4, #-0]
    e850:	14000000 	strne	r0, [r0], #-0
    e854:	00000a12 	andeq	r0, r0, r2, lsl sl
    e858:	25ca0300 	strbcs	r0, [sl, #768]	; 0x300
    e85c:	bb010000 	bllt	4e864 <morecore_area+0x5864>
    e860:	000a5f10 	andeq	r5, sl, r0, lsl pc
    e864:	24e80300 	strbtcs	r0, [r8], #768	; 0x300
    e868:	cc010000 	stcgt	0, cr0, [r1], {-0}
    e86c:	000be515 	andeq	lr, fp, r5, lsl r5
    e870:	eb040b00 	bl	111478 <morecore_area+0xc8478>
    e874:	1300000b 	movwne	r0, #11
    e878:	0000005e 	andeq	r0, r0, lr, asr r0
    e87c:	00000c04 	andeq	r0, r0, r4, lsl #24
    e880:	0000a514 	andeq	sl, r0, r4, lsl r5
    e884:	00a51400 	adceq	r1, r5, r0, lsl #8
    e888:	2c140000 	ldccs	0, cr0, [r4], {-0}
    e88c:	00000000 	andeq	r0, r0, r0
    e890:	00298503 	eoreq	r8, r9, r3, lsl #10
    e894:	10da0100 	sbcsne	r0, sl, r0, lsl #2
    e898:	00000a5f 	andeq	r0, r0, pc, asr sl
    e89c:	0034d603 	eorseq	sp, r4, r3, lsl #12
    e8a0:	10e80100 	rscne	r0, r8, r0, lsl #2
    e8a4:	00000c1c 	andeq	r0, r0, ip, lsl ip
    e8a8:	0c22040b 	cfstrseq	mvf0, [r2], #-44	; 0xffffffd4
    e8ac:	3c150000 	ldccc	0, cr0, [r5], {-0}
    e8b0:	1400000c 	strne	r0, [r0], #-12
    e8b4:	000000a5 	andeq	r0, r0, r5, lsr #1
    e8b8:	0000a514 	andeq	sl, r0, r4, lsl r5
    e8bc:	002c1400 	eoreq	r1, ip, r0, lsl #8
    e8c0:	8c140000 	ldchi	0, cr0, [r4], {-0}
    e8c4:	0000000b 	andeq	r0, r0, fp
    e8c8:	002dd70e 	eoreq	sp, sp, lr, lsl #14
    e8cc:	ee011800 	cdp	8, 0, cr1, cr1, cr0, {0}
    e8d0:	000c9810 	andeq	r9, ip, r0, lsl r8
    e8d4:	2a2e1000 	bcs	b928dc <__bss_end__+0xa49894>
    e8d8:	ef010000 	svc	0x00010000
    e8dc:	0000a50b 	andeq	sl, r0, fp, lsl #10
    e8e0:	fa100000 	blx	40e8e8 <__bss_end__+0x2c58a0>
    e8e4:	0100002c 	tsteq	r0, ip, lsr #32
    e8e8:	0b9817f0 	bleq	fe6148b0 <__bss_end__+0xfe4cb868>
    e8ec:	10040000 	andne	r0, r4, r0
    e8f0:	00003102 	andeq	r3, r0, r2, lsl #2
    e8f4:	cd16f101 	ldfgtd	f7, [r6, #-4]
    e8f8:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    e8fc:	00312d10 	eorseq	r2, r1, r0, lsl sp
    e900:	15f20100 	ldrbne	r0, [r2, #256]!	; 0x100
    e904:	00000bd9 	ldrdeq	r0, [r0], -r9
    e908:	2f39100c 	svccs	0x0039100c
    e90c:	f3010000 	vhadd.u8	d0, d1, d0
    e910:	000c0417 	andeq	r0, ip, r7, lsl r4
    e914:	99101000 	ldmdbls	r0, {ip}
    e918:	0100002c 	tsteq	r0, ip, lsr #32
    e91c:	0c101af4 			; <UNDEFINED> instruction: 0x0c101af4
    e920:	00140000 	andseq	r0, r4, r0
    e924:	00273c03 	eoreq	r3, r7, r3, lsl #24
    e928:	03f50100 	mvnseq	r0, #0, 2
    e92c:	00000c3c 	andeq	r0, r0, ip, lsr ip
    e930:	00378708 	eorseq	r8, r7, r8, lsl #14
    e934:	014d0100 	mrseq	r0, (UNDEF: 93)
    e938:	000cb10f 	andeq	fp, ip, pc, lsl #2
    e93c:	b7040b00 	strlt	r0, [r4, -r0, lsl #22]
    e940:	1300000c 	movwne	r0, #12
    e944:	0000003d 	andeq	r0, r0, sp, lsr r0
    e948:	00000cd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e94c:	0000a514 	andeq	sl, r0, r4, lsl r5
    e950:	002c1400 	eoreq	r1, ip, r0, lsl #8
    e954:	d0140000 	andsle	r0, r4, r0
    e958:	0000000c 	andeq	r0, r0, ip
    e95c:	00a5040b 	adceq	r0, r5, fp, lsl #8
    e960:	9a080000 	bls	20e968 <__bss_end__+0xc5920>
    e964:	01000025 	tsteq	r0, r5, lsr #32
    e968:	e30f015c 	movw	r0, #61788	; 0xf15c
    e96c:	0b00000c 	bleq	e9a4 <errno+0xe9a0>
    e970:	000ce904 	andeq	lr, ip, r4, lsl #18
    e974:	003d1300 	eorseq	r1, sp, r0, lsl #6
    e978:	0d070000 	stceq	0, cr0, [r7, #-0]
    e97c:	a5140000 	ldrge	r0, [r4, #-0]
    e980:	14000000 	strne	r0, [r0], #-0
    e984:	0000002c 	andeq	r0, r0, ip, lsr #32
    e988:	00002c14 	andeq	r2, r0, r4, lsl ip
    e98c:	0cd01400 	cfldrdeq	mvd1, [r0], {0}
    e990:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    e994:	00002451 	andeq	r2, r0, r1, asr r4
    e998:	0f016b01 	svceq	0x00016b01
    e99c:	00000d14 	andeq	r0, r0, r4, lsl sp
    e9a0:	0d1a040b 	cfldrseq	mvf0, [sl, #-44]	; 0xffffffd4
    e9a4:	3d130000 	ldccc	0, cr0, [r3, #-0]
    e9a8:	33000000 	movwcc	r0, #0
    e9ac:	1400000d 	strne	r0, [r0], #-13
    e9b0:	000000a5 	andeq	r0, r0, r5, lsr #1
    e9b4:	00002c14 	andeq	r2, r0, r4, lsl ip
    e9b8:	00a51400 	adceq	r1, r5, r0, lsl #8
    e9bc:	1b000000 	blne	e9c4 <errno+0xe9c0>
    e9c0:	01700110 	cmneq	r0, r0, lsl r1
    e9c4:	000d7609 	andeq	r7, sp, r9, lsl #12
    e9c8:	2a070d00 	bcs	1d1dd0 <__bss_end__+0x88d88>
    e9cc:	71010000 	mrsvc	r0, (UNDEF: 1)
    e9d0:	0ca41401 	cfstrseq	mvf1, [r4], #4
    e9d4:	0d000000 	stceq	0, cr0, [r0, #-0]
    e9d8:	0000317c 	andeq	r3, r0, ip, ror r1
    e9dc:	14017201 	strne	r7, [r1], #-513	; 0xfffffdff
    e9e0:	00000cd6 	ldrdeq	r0, [r0], -r6
    e9e4:	24d40d04 	ldrbcs	r0, [r4], #3332	; 0xd04
    e9e8:	73010000 	movwvc	r0, #4096	; 0x1000
    e9ec:	0d071201 	sfmeq	f1, 4, [r7, #-4]
    e9f0:	0d080000 	stceq	0, cr0, [r8, #-0]
    e9f4:	00002a2e 	andeq	r2, r0, lr, lsr #20
    e9f8:	0b017401 	bleq	6ba04 <morecore_area+0x22a04>
    e9fc:	000000a5 	andeq	r0, r0, r5, lsr #1
    ea00:	a808000c 	stmdage	r8, {r2, r3}
    ea04:	01000037 	tsteq	r0, r7, lsr r0
    ea08:	33030175 	movwcc	r0, #12661	; 0x3175
    ea0c:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    ea10:	0000306e 	andeq	r3, r0, lr, rrx
    ea14:	1101d001 	tstne	r1, r1
    ea18:	00000d90 	muleq	r0, r0, sp
    ea1c:	0d96040b 	cfldrseq	mvf0, [r6, #44]	; 0x2c
    ea20:	19130000 	ldmdbne	r3, {}	; <UNPREDICTABLE>
    ea24:	a5000001 	strge	r0, [r0, #-1]
    ea28:	1400000d 	strne	r0, [r0], #-13
    ea2c:	000000a5 	andeq	r0, r0, r5, lsr #1
    ea30:	35be0c00 	ldrcc	r0, [lr, #3072]!	; 0xc00
    ea34:	01080000 	mrseq	r0, (UNDEF: 8)
    ea38:	d01001d3 			; <UNDEFINED> instruction: 0xd01001d3
    ea3c:	0d00000d 	stceq	0, cr0, [r0, #-52]	; 0xffffffcc
    ea40:	00002a2e 	andeq	r2, r0, lr, lsr #20
    ea44:	0b01d401 	bleq	83a50 <morecore_area+0x3aa50>
    ea48:	000000a5 	andeq	r0, r0, r5, lsr #1
    ea4c:	26d20d00 	ldrbcs	r0, [r2], r0, lsl #26
    ea50:	d5010000 	strle	r0, [r1, #-0]
    ea54:	0d831801 	stceq	8, cr1, [r3, #4]
    ea58:	00040000 	andeq	r0, r4, r0
    ea5c:	0037f408 	eorseq	pc, r7, r8, lsl #8
    ea60:	01d60100 	bicseq	r0, r6, r0, lsl #2
    ea64:	000da503 	andeq	sl, sp, r3, lsl #10
    ea68:	3b4f0300 	blcc	13cf670 <__bss_end__+0x1286628>
    ea6c:	0c100000 	ldceq	0, cr0, [r0], {-0}
    ea70:	000de91e 	andeq	lr, sp, lr, lsl r9
    ea74:	3ca30e00 	stccc	14, cr0, [r3]
    ea78:	10c80000 	sbcne	r0, r8, r0
    ea7c:	0e85082a 	cdpeq	8, 8, cr0, cr5, cr10, {1}
    ea80:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    ea84:	2c100064 	ldccs	0, cr0, [r0], {100}	; 0x64
    ea88:	000e8515 	andeq	r8, lr, r5, lsl r5
    ea8c:	b0100000 	andslt	r0, r0, r0
    ea90:	10000026 	andne	r0, r0, r6, lsr #32
    ea94:	00a50b2d 	adceq	r0, r5, sp, lsr #22
    ea98:	10040000 	andne	r0, r4, r0
    ea9c:	000018cc 	andeq	r1, r0, ip, asr #17
    eaa0:	850f2f10 	strhi	r2, [pc, #-3856]	; db98 <errno+0xdb94>
    eaa4:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    eaa8:	004eb010 	subeq	fp, lr, r0, lsl r0
    eaac:	0f301000 	svceq	0x00301000
    eab0:	00000fb5 			; <UNDEFINED> instruction: 0x00000fb5
    eab4:	3ff8100c 	svccc	0x00f8100c
    eab8:	31100000 	tstcc	r0, r0
    eabc:	000fc60c 	andeq	ip, pc, ip, lsl #12
    eac0:	23101000 	tstcs	r0, #0
    eac4:	1000003e 	andne	r0, r0, lr, lsr r0
    eac8:	0fcc1033 	svceq	0x00cc1033
    eacc:	10140000 	andsne	r0, r4, r0
    ead0:	00003b6e 	andeq	r3, r0, lr, ror #22
    ead4:	13243510 			; <UNDEFINED> instruction: 0x13243510
    ead8:	1800000f 	stmdane	r0, {r0, r1, r2, r3}
    eadc:	003b2610 	eorseq	r2, fp, r0, lsl r6
    eae0:	24371000 	ldrtcs	r1, [r7], #-0
    eae4:	00000f13 	andeq	r0, r0, r3, lsl pc
    eae8:	6c630f2c 	stclvs	15, cr0, [r3], #-176	; 0xffffff50
    eaec:	3910006b 	ldmdbcc	r0, {r0, r1, r3, r5, r6}
    eaf0:	000fd714 	andeq	sp, pc, r4, lsl r7	; <UNPREDICTABLE>
    eaf4:	00104000 	andseq	r4, r0, r0
    eaf8:	1000003d 	andne	r0, r0, sp, lsr r0
    eafc:	013e113b 	teqeq	lr, fp, lsr r1
    eb00:	10440000 	subne	r0, r4, r0
    eb04:	000031d7 	ldrdeq	r3, [r0], -r7
    eb08:	3d093d10 	stccc	13, cr3, [r9, #-64]	; 0xffffffc0
    eb0c:	c4000000 	strgt	r0, [r0], #-0
    eb10:	3bb11100 	blcc	fec52f18 <__bss_end__+0xfeb09ed0>
    eb14:	04070000 	streq	r0, [r7], #-0
    eb18:	00000025 	andeq	r0, r0, r5, lsr #32
    eb1c:	b6060f11 			; <UNDEFINED> instruction: 0xb6060f11
    eb20:	1200000e 	andne	r0, r0, #14
    eb24:	00003c68 	andeq	r3, r0, r8, ror #24
    eb28:	3c731200 	lfmcc	f1, 2, [r3], #-0
    eb2c:	12010000 	andne	r0, r1, #0
    eb30:	00003b37 	andeq	r3, r0, r7, lsr fp
    eb34:	3cf51200 	lfmcc	f1, 2, [r5]
    eb38:	12010000 	andne	r0, r1, #0
    eb3c:	00003cc4 	andeq	r3, r0, r4, asr #25
    eb40:	5f110001 	svcpl	0x00110001
    eb44:	0700003b 	smladxeq	r0, fp, r0, r0
    eb48:	00002504 	andeq	r2, r0, r4, lsl #10
    eb4c:	06101000 	ldreq	r1, [r0], -r0
    eb50:	00000ee1 	andeq	r0, r0, r1, ror #29
    eb54:	003bbc12 	eorseq	fp, fp, r2, lsl ip
    eb58:	19120000 	ldmdbne	r2, {}	; <UNPREDICTABLE>
    eb5c:	0100003d 	tsteq	r0, sp, lsr r0
    eb60:	003d0612 	eorseq	r0, sp, r2, lsl r6
    eb64:	41120200 	tstmi	r2, r0, lsl #4
    eb68:	0300003c 	movweq	r0, #60	; 0x3c
    eb6c:	3afb0300 	bcc	ffecf774 <__bss_end__+0xffd8672c>
    eb70:	1b100000 	blne	40eb78 <__bss_end__+0x2c5b30>
    eb74:	000eed10 	andeq	lr, lr, r0, lsl sp
    eb78:	f3040b00 	vqrdmulh.s<illegal width 8>	d0, d4, d0
    eb7c:	1500000e 	strne	r0, [r0, #-14]
    eb80:	00000f0d 	andeq	r0, r0, sp, lsl #30
    eb84:	000f0d14 	andeq	r0, pc, r4, lsl sp	; <UNPREDICTABLE>
    eb88:	0eb61400 	cdpeq	4, 11, cr1, cr6, cr0, {0}
    eb8c:	2c140000 	ldccs	0, cr0, [r4], {-0}
    eb90:	14000000 	strne	r0, [r0], #-0
    eb94:	000000a5 	andeq	r0, r0, r5, lsr #1
    eb98:	dd040b00 	vstrle	d0, [r4, #-0]
    eb9c:	0e00000d 	cdpeq	0, 0, cr0, cr0, cr13, {0}
    eba0:	00003b0e 	andeq	r3, r0, lr, lsl #22
    eba4:	081d1014 	ldmdaeq	sp, {r2, r4, ip}
    eba8:	00000f62 	andeq	r0, r0, r2, ror #30
    ebac:	004d2710 	subeq	r2, sp, r0, lsl r7
    ebb0:	181f1000 	ldmdane	pc, {ip}	; <UNPREDICTABLE>
    ebb4:	00000ee1 	andeq	r0, r0, r1, ror #29
    ebb8:	3d311000 	ldccc	0, cr1, [r1, #-0]
    ebbc:	21100000 	tstcs	r0, r0
    ebc0:	0000a50b 	andeq	sl, r0, fp, lsl #10
    ebc4:	9b100400 	blls	40fbcc <__bss_end__+0x2c6b84>
    ebc8:	1000003b 	andne	r0, r0, fp, lsr r0
    ebcc:	002c0c23 	eoreq	r0, ip, r3, lsr #24
    ebd0:	10080000 	andne	r0, r8, r0
    ebd4:	00003ce5 	andeq	r3, r0, r5, ror #25
    ebd8:	38152510 	ldmdacc	r5, {r4, r8, sl, sp}
    ebdc:	0c000000 	stceq	0, cr0, [r0], {-0}
    ebe0:	0019a110 	andseq	sl, r9, r0, lsl r1
    ebe4:	0b271000 	bleq	9d2bec <__bss_end__+0x889ba4>
    ebe8:	000000a5 	andeq	r0, r0, r5, lsr #1
    ebec:	a7130010 			; <UNDEFINED> instruction: 0xa7130010
    ebf0:	85000000 	strhi	r0, [r0, #-0]
    ebf4:	1400000f 	strne	r0, [r0], #-15
    ebf8:	00000f0d 	andeq	r0, r0, sp, lsl #30
    ebfc:	0000a514 	andeq	sl, r0, r4, lsl r5
    ec00:	002c1400 	eoreq	r1, ip, r0, lsl #8
    ec04:	e1140000 	tst	r4, r0
    ec08:	1400000e 	strne	r0, [r0], #-14
    ec0c:	000000a5 	andeq	r0, r0, r5, lsr #1
    ec10:	62040b00 	andvs	r0, r4, #0, 22
    ec14:	1300000f 	movwne	r0, #15
    ec18:	000000a7 	andeq	r0, r0, r7, lsr #1
    ec1c:	00000fae 	andeq	r0, r0, lr, lsr #31
    ec20:	000f0d14 	andeq	r0, pc, r4, lsl sp	; <UNPREDICTABLE>
    ec24:	0fae1400 	svceq	0x00ae1400
    ec28:	2c140000 	ldccs	0, cr0, [r4], {-0}
    ec2c:	14000000 	strne	r0, [r0], #-0
    ec30:	00000ee1 	andeq	r0, r0, r1, ror #29
    ec34:	0000a514 	andeq	sl, r0, r4, lsl r5
    ec38:	040b0000 	streq	r0, [fp], #-0
    ec3c:	00000fb4 			; <UNDEFINED> instruction: 0x00000fb4
    ec40:	8b040b1c 	blhi	1118b8 <morecore_area+0xc88b8>
    ec44:	1500000f 	strne	r0, [r0, #-15]
    ec48:	00000fc6 	andeq	r0, r0, r6, asr #31
    ec4c:	000f0d14 	andeq	r0, pc, r4, lsl sp	; <UNPREDICTABLE>
    ec50:	040b0000 	streq	r0, [fp], #-0
    ec54:	00000fbb 			; <UNDEFINED> instruction: 0x00000fbb
    ec58:	0044040b 	subeq	r0, r4, fp, lsl #8
    ec5c:	b1090000 	mrslt	r0, (UNDEF: 9)
    ec60:	0b00003c 	bleq	ed58 <errno+0xed54>
    ec64:	000fd204 	andeq	sp, pc, r4, lsl #4
    ec68:	408a1100 	addmi	r1, sl, r0, lsl #2
    ec6c:	04070000 	streq	r0, [r7], #-0
    ec70:	00000025 	andeq	r0, r0, r5, lsr #32
    ec74:	02061612 	andeq	r1, r6, #18874368	; 0x1200000
    ec78:	12000010 	andne	r0, r0, #16
    ec7c:	0000400d 	andeq	r4, r0, sp
    ec80:	40cd1200 	sbcmi	r1, sp, r0, lsl #4
    ec84:	12010000 	andne	r0, r1, #0
    ec88:	00003ecc 	andeq	r3, r0, ip, asr #29
    ec8c:	c30e0002 	movwgt	r0, #57346	; 0xe002
    ec90:	1400003e 	strne	r0, [r0], #-62	; 0xffffffc2
    ec94:	50080c02 	andpl	r0, r8, r2, lsl #24
    ec98:	0f000010 	svceq	0x00000010
    ec9c:	02006469 	andeq	r6, r0, #1761607680	; 0x69000000
    eca0:	0e85150d 	cdpeq	5, 8, cr1, cr5, cr13, {0}
    eca4:	10000000 	andne	r0, r0, r0
    eca8:	000033c6 	andeq	r3, r0, r6, asr #7
    ecac:	5e0f0e02 	cdppl	14, 0, cr0, cr15, cr2, {0}
    ecb0:	04000000 	streq	r0, [r0], #-0
    ecb4:	00381f10 	eorseq	r1, r8, r0, lsl pc
    ecb8:	090f0200 	stmdbeq	pc, {r9}	; <UNPREDICTABLE>
    ecbc:	0000003d 	andeq	r0, r0, sp, lsr r0
    ecc0:	3e231008 	cdpcc	0, 2, cr1, cr3, cr8, {0}
    ecc4:	10020000 	andne	r0, r2, r0
    ecc8:	000fcc10 	andeq	ip, pc, r0, lsl ip	; <UNPREDICTABLE>
    eccc:	28100c00 	ldmdacs	r0, {sl, fp}
    ecd0:	0200003e 	andeq	r0, r0, #62	; 0x3e
    ecd4:	10800b11 	addne	r0, r0, r1, lsl fp
    ecd8:	00100000 	andseq	r0, r0, r0
    ecdc:	00100206 	andseq	r0, r0, r6, lsl #4
    ece0:	003d1300 	eorseq	r1, sp, r0, lsl #6
    ece4:	106e0000 	rsbne	r0, lr, r0
    ece8:	6e140000 	cdpvs	0, 1, cr0, cr4, cr0, {0}
    ecec:	14000010 	strne	r0, [r0], #-16
    ecf0:	00001074 	andeq	r1, r0, r4, ror r0
    ecf4:	00107a14 	andseq	r7, r0, r4, lsl sl
    ecf8:	040b0000 	streq	r0, [fp], #-0
    ecfc:	00001050 	andeq	r1, r0, r0, asr r0
    ed00:	014a040b 	cmpeq	sl, fp, lsl #8
    ed04:	040b0000 	streq	r0, [fp], #-0
    ed08:	00000de9 	andeq	r0, r0, r9, ror #27
    ed0c:	1055040b 	subsne	r0, r5, fp, lsl #8
    ed10:	450e0000 	strmi	r0, [lr, #-0]
    ed14:	48000040 	stmdami	r0, {r6}
    ed18:	6e088c03 	cdpvs	12, 0, cr8, cr8, cr3, {0}
    ed1c:	0f000011 	svceq	0x00000011
    ed20:	03007263 	movweq	r7, #611	; 0x263
    ed24:	00860e8d 	addeq	r0, r6, sp, lsl #29
    ed28:	0f000000 	svceq	0x00000000
    ed2c:	0300726d 	movweq	r7, #621	; 0x26d
    ed30:	00860e8e 	addeq	r0, r6, lr, lsl #29
    ed34:	0f040000 	svceq	0x00040000
    ed38:	00726569 	rsbseq	r6, r2, r9, ror #10
    ed3c:	860e8f03 	strhi	r8, [lr], -r3, lsl #30
    ed40:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    ed44:	7264690f 	rsbvc	r6, r4, #245760	; 0x3c000
    ed48:	0e900300 	cdpeq	3, 9, cr0, cr0, cr0, {0}
    ed4c:	00000086 	andeq	r0, r0, r6, lsl #1
    ed50:	6d690f0c 	stclvs	15, cr0, [r9, #-48]!	; 0xffffffd0
    ed54:	91030072 	tstls	r3, r2, ror r0
    ed58:	0000860e 	andeq	r8, r0, lr, lsl #12
    ed5c:	690f1000 	stmdbvs	pc, {ip}	; <UNPREDICTABLE>
    ed60:	03007273 	movweq	r7, #627	; 0x273
    ed64:	00860e92 	umulleq	r0, r6, r2, lr
    ed68:	10140000 	andsne	r0, r4, r0
    ed6c:	00003fa9 	andeq	r3, r0, r9, lsr #31
    ed70:	860e9303 	strhi	r9, [lr], -r3, lsl #6
    ed74:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    ed78:	003fdc10 	eorseq	sp, pc, r0, lsl ip	; <UNPREDICTABLE>
    ed7c:	0e940300 	cdpeq	3, 9, cr0, cr4, cr0, {0}
    ed80:	00000086 	andeq	r0, r0, r6, lsl #1
    ed84:	4066101c 	rsbmi	r1, r6, ip, lsl r0
    ed88:	95030000 	strls	r0, [r3, #-0]
    ed8c:	0000860e 	andeq	r8, r0, lr, lsl #12
    ed90:	3d102000 	ldccc	0, cr2, [r0, #-0]
    ed94:	03000040 	movweq	r0, #64	; 0x40
    ed98:	00860e96 	umulleq	r0, r6, r6, lr
    ed9c:	10240000 	eorne	r0, r4, r0
    eda0:	0000405e 	andeq	r4, r0, lr, asr r0
    eda4:	860e9703 	strhi	r9, [lr], -r3, lsl #14
    eda8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    edac:	0072730f 	rsbseq	r7, r2, pc, lsl #6
    edb0:	860e9803 	strhi	r9, [lr], -r3, lsl #16
    edb4:	2c000000 	stccs	0, cr0, [r0], {-0}
    edb8:	00407f10 	subeq	r7, r0, r0, lsl pc
    edbc:	0e990300 	cdpeq	3, 9, cr0, cr9, cr0, {0}
    edc0:	00000086 	andeq	r0, r0, r6, lsl #1
    edc4:	406b1030 	rsbmi	r1, fp, r0, lsr r0
    edc8:	9a030000 	bls	cedd0 <morecore_area+0x85dd0>
    edcc:	0000860e 	andeq	r8, r0, lr, lsl #12
    edd0:	eb103400 	bl	41bdd8 <__bss_end__+0x2d2d90>
    edd4:	0300003e 	movweq	r0, #62	; 0x3e
    edd8:	00860e9b 	umulleq	r0, r6, fp, lr
    eddc:	0f380000 	svceq	0x00380000
    ede0:	00646170 	rsbeq	r6, r4, r0, ror r1
    ede4:	730e9c03 	movwvc	r9, #60419	; 0xec03
    ede8:	3c000011 	stccc	0, cr0, [r0], {17}
    edec:	00409810 	subeq	r9, r0, r0, lsl r8
    edf0:	0e9d0300 	cdpeq	3, 9, cr0, cr13, cr0, {0}
    edf4:	00000086 	andeq	r0, r0, r6, lsl #1
    edf8:	86040044 	strhi	r0, [r4], -r4, asr #32
    edfc:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    ee00:	00000086 	andeq	r0, r0, r6, lsl #1
    ee04:	00001183 	andeq	r1, r0, r3, lsl #3
    ee08:	0000251e 	andeq	r2, r0, lr, lsl r5
    ee0c:	03000100 	movweq	r0, #256	; 0x100
    ee10:	00003fb7 			; <UNDEFINED> instruction: 0x00003fb7
    ee14:	6e289f03 	cdpvs	15, 2, cr9, cr8, cr3, {0}
    ee18:	1f000011 	svcne	0x00000011
    ee1c:	00003f6b 	andeq	r3, r0, fp, ror #30
    ee20:	0501fb03 	streq	pc, [r1, #-2819]	; 0xfffff4fd
    ee24:	0000003d 	andeq	r0, r0, sp, lsr r0
    ee28:	000195a8 	andeq	r9, r1, r8, lsr #11
    ee2c:	000000fc 	strdeq	r0, [r0], -ip
    ee30:	11fa9c01 	mvnsne	r9, r1, lsl #24
    ee34:	c7200000 	strgt	r0, [r0, -r0]!
    ee38:	0300003e 	movweq	r0, #62	; 0x3e
    ee3c:	6e1c01fc 	mrcvs	1, 0, r0, cr12, cr12, {7}
    ee40:	02000010 	andeq	r0, r0, #16
    ee44:	6f216c91 	svcvs	0x00216c91
    ee48:	03007370 	movweq	r7, #880	; 0x370
    ee4c:	741801fd 	ldrvc	r0, [r8], #-509	; 0xfffffe03
    ee50:	02000010 	andeq	r0, r0, #16
    ee54:	64216891 	strtvs	r6, [r1], #-2193	; 0xfffff76f
    ee58:	03007665 	movweq	r7, #1637	; 0x665
    ee5c:	0d1601fe 	ldfeqs	f0, [r6, #-1016]	; 0xfffffc08
    ee60:	0200000f 	andeq	r0, r0, #15
    ee64:	b6226491 			; <UNDEFINED> instruction: 0xb6226491
    ee68:	0a00001a 	beq	eed8 <errno+0xeed4>
    ee6c:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    ee70:	02932c03 	addseq	r2, r3, #768	; 0x300
    ee74:	26b02300 	ldrtcs	r2, [r0], r0, lsl #6
    ee78:	05030000 	streq	r0, [r3, #-0]
    ee7c:	00a50b02 	adceq	r0, r5, r2, lsl #22
    ee80:	91020000 	mrsls	r0, (UNDEF: 2)
    ee84:	cc1d0074 	ldcgt	0, cr0, [sp], {116}	; 0x74
    ee88:	0a000000 	beq	ee90 <errno+0xee8c>
    ee8c:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    ee90:	00000025 	andeq	r0, r0, r5, lsr #32
    ee94:	fa060009 	blx	18eec0 <__bss_end__+0x45e78>
    ee98:	1f000011 	svcne	0x00000011
    ee9c:	000040bc 	strheq	r4, [r0], -ip
    eea0:	0501e503 	streq	lr, [r1, #-1283]	; 0xfffffafd
    eea4:	0000003d 	andeq	r0, r0, sp, lsr r0
    eea8:	000194d8 	ldrdeq	r9, [r1], -r8
    eeac:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    eeb0:	126a9c01 	rsbne	r9, sl, #256	; 0x100
    eeb4:	b0200000 	eorlt	r0, r0, r0
    eeb8:	03000026 	movweq	r0, #38	; 0x26
    eebc:	a50b01e6 	strge	r0, [fp, #-486]	; 0xfffffe1a
    eec0:	02000000 	andeq	r0, r0, #0
    eec4:	6f217491 	svcvs	0x00217491
    eec8:	03007370 	movweq	r7, #880	; 0x370
    eecc:	741801e7 	ldrvc	r0, [r8], #-487	; 0xfffffe19
    eed0:	02000010 	andeq	r0, r0, #16
    eed4:	64217091 	strtvs	r7, [r1], #-145	; 0xffffff6f
    eed8:	03007665 	movweq	r7, #1637	; 0x665
    eedc:	0d1601e8 	ldfeqs	f0, [r6, #-928]	; 0xfffffc60
    eee0:	0200000f 	andeq	r0, r0, #15
    eee4:	b6226c91 			; <UNDEFINED> instruction: 0xb6226c91
    eee8:	7a00001a 	bvc	ef58 <errno+0xef54>
    eeec:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    eef0:	02931803 	addseq	r1, r3, #196608	; 0x30000
    eef4:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
    eef8:	7a000000 	bvc	ef00 <errno+0xeefc>
    eefc:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    ef00:	00000025 	andeq	r0, r0, r5, lsr #32
    ef04:	6a060010 	bvs	18ef4c <__bss_end__+0x45f04>
    ef08:	24000012 	strcs	r0, [r0], #-18	; 0xffffffee
    ef0c:	00003f66 	andeq	r3, r0, r6, ror #30
    ef10:	0c01ba03 			; <UNDEFINED> instruction: 0x0c01ba03
    ef14:	0000003d 	andeq	r0, r0, sp, lsr r0
    ef18:	0001938c 	andeq	r9, r1, ip, lsl #7
    ef1c:	0000014c 	andeq	r0, r0, ip, asr #2
    ef20:	12bb9c01 	adcsne	r9, fp, #256	; 0x100
    ef24:	64210000 	strtvs	r0, [r1], #-0
    ef28:	03007665 	movweq	r7, #1637	; 0x665
    ef2c:	0d1601bb 	ldfeqs	f0, [r6, #-748]	; 0xfffffd14
    ef30:	0200000f 	andeq	r0, r0, #15
    ef34:	4f236c91 	svcmi	0x00236c91
    ef38:	03000040 	movweq	r0, #64	; 0x40
    ef3c:	bb1701bd 	bllt	5cf638 <__bss_end__+0x4865f0>
    ef40:	02000012 	andeq	r0, r0, #18
    ef44:	0b007491 	bleq	2c190 <syscall_table+0x184>
    ef48:	00118304 	andseq	r8, r1, r4, lsl #6
    ef4c:	3f752500 	svccc	0x00752500
    ef50:	a2030000 	andge	r0, r3, #0
    ef54:	92ac0d01 	adcls	r0, ip, #1, 26	; 0x40
    ef58:	00e00001 	rsceq	r0, r0, r1
    ef5c:	9c010000 	stcls	0, cr0, [r1], {-0}
    ef60:	00001337 	andeq	r1, r0, r7, lsr r3
    ef64:	76656421 	strbtvc	r6, [r5], -r1, lsr #8
    ef68:	01a30300 			; <UNDEFINED> instruction: 0x01a30300
    ef6c:	000f0d16 	andeq	r0, pc, r6, lsl sp	; <UNPREDICTABLE>
    ef70:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    ef74:	73706f21 	cmnvc	r0, #33, 30	; 0x84
    ef78:	01a40300 			; <UNDEFINED> instruction: 0x01a40300
    ef7c:	00107418 	andseq	r7, r0, r8, lsl r4
    ef80:	70910200 	addsvc	r0, r1, r0, lsl #4
    ef84:	00646921 	rsbeq	r6, r4, r1, lsr #18
    ef88:	1501a503 	strne	sl, [r1, #-1283]	; 0xfffffafd
    ef8c:	00000e85 	andeq	r0, r0, r5, lsl #29
    ef90:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    ef94:	000026b0 			; <UNDEFINED> instruction: 0x000026b0
    ef98:	0b01a603 	bleq	787ac <morecore_area+0x2f7ac>
    ef9c:	000000a5 	andeq	r0, r0, r5, lsr #1
    efa0:	20689102 	rsbcs	r9, r8, r2, lsl #2
    efa4:	00003e23 	andeq	r3, r0, r3, lsr #28
    efa8:	1001a703 	andne	sl, r1, r3, lsl #14
    efac:	00000fcc 	andeq	r0, r0, ip, asr #31
    efb0:	22009102 	andcs	r9, r0, #-2147483648	; 0x80000000
    efb4:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    efb8:	00001347 	andeq	r1, r0, r7, asr #6
    efbc:	93040305 	movwls	r0, #17157	; 0x4305
    efc0:	1d000002 	stcne	0, cr0, [r0, #-8]
    efc4:	000000cc 	andeq	r0, r0, ip, asr #1
    efc8:	00001347 	andeq	r1, r0, r7, asr #6
    efcc:	0000251e 	andeq	r2, r0, lr, lsl r5
    efd0:	06001200 	streq	r1, [r0], -r0, lsl #4
    efd4:	00001337 	andeq	r1, r0, r7, lsr r3
    efd8:	0040191f 	subeq	r1, r0, pc, lsl r9
    efdc:	01660300 	cmneq	r6, r0, lsl #6
    efe0:	00003d05 	andeq	r3, r0, r5, lsl #26
    efe4:	01911c00 	orrseq	r1, r1, r0, lsl #24
    efe8:	00019000 	andeq	r9, r1, r0
    efec:	d59c0100 	ldrle	r0, [ip, #256]	; 0x100
    eff0:	21000013 	tstcs	r0, r3, lsl r0
    eff4:	67030064 	strvs	r0, [r3, -r4, rrx]
    eff8:	0f0d1601 	svceq	0x000d1601
    effc:	91020000 	mrsls	r0, (UNDEF: 2)
    f000:	7062216c 	rsbvc	r2, r2, ip, ror #2
    f004:	68030073 	stmdavs	r3, {r0, r1, r4, r5, r6}
    f008:	00490a01 	subeq	r0, r9, r1, lsl #20
    f00c:	91020000 	mrsls	r0, (UNDEF: 2)
    f010:	3f952068 	svccc	0x00952068
    f014:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
    f018:	003d0901 	eorseq	r0, sp, r1, lsl #18
    f01c:	91020000 	mrsls	r0, (UNDEF: 2)
    f020:	40912064 	addsmi	r2, r1, r4, rrx
    f024:	6a030000 	bvs	cf02c <morecore_area+0x8602c>
    f028:	0fdd1801 	svceq	0x00dd1801
    f02c:	91020000 	mrsls	r0, (UNDEF: 2)
    f030:	40542060 	subsmi	r2, r4, r0, rrx
    f034:	6b030000 	blvs	cf03c <morecore_area+0x8603c>
    f038:	003d0901 	eorseq	r0, sp, r1, lsl #18
    f03c:	91020000 	mrsls	r0, (UNDEF: 2)
    f040:	404f2300 	submi	r2, pc, r0, lsl #6
    f044:	6d030000 	stcvs	0, cr0, [r3, #-0]
    f048:	12bb1701 	adcsne	r1, fp, #262144	; 0x40000
    f04c:	91020000 	mrsls	r0, (UNDEF: 2)
    f050:	726d2670 	rsbvc	r2, sp, #112, 12	; 0x7000000
    f054:	016e0300 	cmneq	lr, r0, lsl #6
    f058:	0000860e 	andeq	r8, r0, lr, lsl #12
    f05c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    f060:	40d92500 	sbcsmi	r2, r9, r0, lsl #10
    f064:	40030000 	andmi	r0, r3, r0
    f068:	90080d01 	andls	r0, r8, r1, lsl #26
    f06c:	01140001 	tsteq	r4, r1
    f070:	9c010000 	stcls	0, cr0, [r1], {-0}
    f074:	0000144a 	andeq	r1, r0, sl, asr #8
    f078:	03006421 	movweq	r6, #1057	; 0x421
    f07c:	0d160141 	ldfeqs	f0, [r6, #-260]	; 0xfffffefc
    f080:	0200000f 	andeq	r0, r0, #15
    f084:	62216491 	eorvs	r6, r1, #-1862270976	; 0x91000000
    f088:	03007370 	movweq	r7, #880	; 0x370
    f08c:	490a0142 	stmdbmi	sl, {r1, r6, r8}
    f090:	02000000 	andeq	r0, r0, #0
    f094:	4f236091 	svcmi	0x00236091
    f098:	03000040 	movweq	r0, #64	; 0x40
    f09c:	bb170144 	bllt	5cf5b4 <__bss_end__+0x48656c>
    f0a0:	02000012 	andeq	r0, r0, #18
    f0a4:	63267491 			; <UNDEFINED> instruction: 0x63267491
    f0a8:	45030064 	strmi	r0, [r3, #-100]	; 0xffffff9c
    f0ac:	00860e01 	addeq	r0, r6, r1, lsl #28
    f0b0:	91020000 	mrsls	r0, (UNDEF: 2)
    f0b4:	3fb22370 	svccc	0x00b22370
    f0b8:	46030000 	strmi	r0, [r3], -r0
    f0bc:	00860e01 	addeq	r0, r6, r1, lsl #28
    f0c0:	91020000 	mrsls	r0, (UNDEF: 2)
    f0c4:	4085236c 	addmi	r2, r5, ip, ror #6
    f0c8:	47030000 	strmi	r0, [r3, -r0]
    f0cc:	00251201 	eoreq	r1, r5, r1, lsl #4
    f0d0:	91020000 	mrsls	r0, (UNDEF: 2)
    f0d4:	9d240068 	stcls	0, cr0, [r4, #-416]!	; 0xfffffe60
    f0d8:	03000040 	movweq	r0, #64	; 0x40
    f0dc:	490d0105 	stmdbmi	sp, {r0, r2, r8}
    f0e0:	e0000000 	and	r0, r0, r0
    f0e4:	2800018d 	stmdacs	r0, {r0, r2, r3, r7, r8}
    f0e8:	01000002 	tsteq	r0, r2
    f0ec:	0015249c 	mulseq	r5, ip, r4
    f0f0:	6c632100 	stfvse	f2, [r3], #-0
    f0f4:	0603006b 	streq	r0, [r3], -fp, rrx
    f0f8:	00490a01 	subeq	r0, r9, r1, lsl #20
    f0fc:	91020000 	mrsls	r0, (UNDEF: 2)
    f100:	4008205c 	andmi	r2, r8, ip, asr r0
    f104:	07030000 	streq	r0, [r3, -r0]
    f108:	00490a01 	subeq	r0, r9, r1, lsl #20
    f10c:	91020000 	mrsls	r0, (UNDEF: 2)
    f110:	40842058 	addmi	r2, r4, r8, asr r0
    f114:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    f118:	15241301 	strne	r1, [r4, #-769]!	; 0xfffffcff
    f11c:	91020000 	mrsls	r0, (UNDEF: 2)
    f120:	63722154 	cmnvs	r2, #84, 2
    f124:	09030064 	stmdbeq	r3, {r2, r5, r6}
    f128:	0af00f01 	beq	ffc12d34 <__bss_end__+0xffac9cec>
    f12c:	91020000 	mrsls	r0, (UNDEF: 2)
    f130:	3fb12050 	svccc	0x00b12050
    f134:	0a030000 	beq	cf13c <morecore_area+0x8613c>
    f138:	0af00f01 	beq	ffc12d44 <__bss_end__+0xffac9cfc>
    f13c:	91020000 	mrsls	r0, (UNDEF: 2)
    f140:	1ab62200 	bne	fed97948 <__bss_end__+0xfec4e900>
    f144:	153a0000 	ldrne	r0, [sl, #-0]!
    f148:	03050000 	movweq	r0, #20480	; 0x5000
    f14c:	000292e8 	andeq	r9, r2, r8, ror #5
    f150:	00646326 	rsbeq	r6, r4, r6, lsr #6
    f154:	0e011103 	adfeqs	f1, f1, f3
    f158:	00000086 	andeq	r0, r0, r6, lsl #1
    f15c:	23649102 	cmncs	r4, #-2147483648	; 0x80000000
    f160:	00003fb2 			; <UNDEFINED> instruction: 0x00003fb2
    f164:	12011103 	andne	r1, r1, #-1073741824	; 0xc0000000
    f168:	00000086 	andeq	r0, r0, r6, lsl #1
    f16c:	23749102 	cmncs	r4, #-2147483648	; 0x80000000
    f170:	000040b6 	strheq	r4, [r0], -r6
    f174:	0a011203 	beq	53988 <morecore_area+0xa988>
    f178:	00000049 	andeq	r0, r0, r9, asr #32
    f17c:	23709102 	cmncs	r0, #-2147483648	; 0x80000000
    f180:	00004003 	andeq	r4, r0, r3
    f184:	12011303 	andne	r1, r1, #201326592	; 0xc000000
    f188:	00000025 	andeq	r0, r0, r5, lsr #32
    f18c:	23609102 	cmncs	r0, #-2147483648	; 0x80000000
    f190:	00003fe8 	andeq	r3, r0, r8, ror #31
    f194:	1d011303 	stcne	3, cr1, [r1, #-12]
    f198:	00000025 	andeq	r0, r0, r5, lsr #32
    f19c:	236c9102 	cmncs	ip, #-2147483648	; 0x80000000
    f1a0:	00003fe3 	andeq	r3, r0, r3, ror #31
    f1a4:	29011303 	stmdbcs	r1, {r0, r1, r8, r9, ip}
    f1a8:	00000025 	andeq	r0, r0, r5, lsr #32
    f1ac:	00689102 	rsbeq	r9, r8, r2, lsl #2
    f1b0:	0025040b 	eoreq	r0, r5, fp, lsl #8
    f1b4:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
    f1b8:	3a000000 	bcc	f1c0 <errno+0xf1bc>
    f1bc:	1e000015 	mcrne	0, 0, r0, cr0, cr5, {0}
    f1c0:	00000025 	andeq	r0, r0, r5, lsr #32
    f1c4:	2a060018 	bcs	18f22c <__bss_end__+0x461e4>
    f1c8:	27000015 	smladcs	r0, r5, r0, r0
    f1cc:	00003ff3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    f1d0:	ac0df503 	cfstr32ge	mvfx15, [sp], {3}
    f1d4:	3400018d 	strcc	r0, [r0], #-397	; 0xfffffe73
    f1d8:	01000000 	mrseq	r0, (UNDEF: 0)
    f1dc:	0015729c 	mulseq	r5, ip, r2
    f1e0:	00642800 	rsbeq	r2, r4, r0, lsl #16
    f1e4:	0d16f603 	ldceq	6, cr15, [r6, #-12]
    f1e8:	0200000f 	andeq	r0, r0, #15
    f1ec:	4f296c91 	svcmi	0x00296c91
    f1f0:	03000040 	movweq	r0, #64	; 0x40
    f1f4:	12bb17f8 	adcsne	r1, fp, #248, 14	; 0x3e00000
    f1f8:	91020000 	mrsls	r0, (UNDEF: 2)
    f1fc:	f32a0074 	vqadd.u32	q0, q5, q10
    f200:	0300003e 	movweq	r0, #62	; 0x3e
    f204:	003d05d4 	ldrsbteq	r0, [sp], -r4
    f208:	8cb40000 	ldchi	0, cr0, [r4]
    f20c:	00f80001 	rscseq	r0, r8, r1
    f210:	9c010000 	stcls	0, cr0, [r1], {-0}
    f214:	000015d4 	ldrdeq	r1, [r0], -r4
    f218:	03006428 	movweq	r6, #1064	; 0x428
    f21c:	0f0d16d5 	svceq	0x000d16d5
    f220:	91020000 	mrsls	r0, (UNDEF: 2)
    f224:	00632864 	rsbeq	r2, r3, r4, ror #16
    f228:	3d09d603 	stccc	6, cr13, [r9, #-12]
    f22c:	02000000 	andeq	r0, r0, #0
    f230:	722b6091 	eorvc	r6, fp, #145	; 0x91
    f234:	03007465 	movweq	r7, #1125	; 0x465
    f238:	003d09d8 	ldrsbteq	r0, [sp], -r8
    f23c:	91020000 	mrsls	r0, (UNDEF: 2)
    f240:	404f2974 	submi	r2, pc, r4, ror r9	; <UNPREDICTABLE>
    f244:	d9030000 	stmdble	r3, {}	; <UNPREDICTABLE>
    f248:	0012bb17 	andseq	fp, r2, r7, lsl fp
    f24c:	70910200 	addsvc	r0, r1, r0, lsl #4
    f250:	726d692b 	rsbvc	r6, sp, #704512	; 0xac000
    f254:	0edb0300 	cdpeq	3, 13, cr0, cr11, cr0, {0}
    f258:	00000086 	andeq	r0, r0, r6, lsl #1
    f25c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    f260:	003f882a 	eorseq	r8, pc, sl, lsr #16
    f264:	05b40300 	ldreq	r0, [r4, #768]!	; 0x300
    f268:	0000003d 	andeq	r0, r0, sp, lsr r0
    f26c:	00018c10 	andeq	r8, r1, r0, lsl ip
    f270:	000000a4 	andeq	r0, r0, r4, lsr #1
    f274:	16279c01 	strtne	r9, [r7], -r1, lsl #24
    f278:	64280000 	strtvs	r0, [r8], #-0
    f27c:	16b50300 	ldrtne	r0, [r5], r0, lsl #6
    f280:	00000f0d 	andeq	r0, r0, sp, lsl #30
    f284:	29649102 	stmdbcs	r4!, {r1, r8, ip, pc}^
    f288:	0000404f 	andeq	r4, r0, pc, asr #32
    f28c:	bb17b703 	bllt	5fcea0 <__bss_end__+0x4b3e58>
    f290:	02000012 	andeq	r0, r0, #18
    f294:	632b7091 			; <UNDEFINED> instruction: 0x632b7091
    f298:	09b80300 	ldmibeq	r8!, {r8, r9}
    f29c:	0000003d 	andeq	r0, r0, sp, lsr r0
    f2a0:	2b749102 	blcs	1d336b0 <__bss_end__+0x1bea668>
    f2a4:	00726d69 	rsbseq	r6, r2, r9, ror #26
    f2a8:	860eba03 	strhi	fp, [lr], -r3, lsl #20
    f2ac:	02000000 	andeq	r0, r0, #0
    f2b0:	2c006c91 	stccs	12, cr6, [r0], {145}	; 0x91
    f2b4:	00003fc8 	andeq	r3, r0, r8, asr #31
    f2b8:	c814ad03 	ldmdagt	r4, {r0, r1, r8, sl, fp, sp, pc}
    f2bc:	4800018b 	stmdami	r0, {r0, r1, r3, r7, r8}
    f2c0:	01000000 	mrseq	r0, (UNDEF: 0)
    f2c4:	00164d9c 	mulseq	r6, ip, sp
    f2c8:	404f2d00 	submi	r2, pc, r0, lsl #26
    f2cc:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    f2d0:	0012bb17 	andseq	fp, r2, r7, lsl fp
    f2d4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    f2d8:	3ed72c00 	cdpcc	12, 13, cr2, cr7, cr0, {0}
    f2dc:	a6030000 	strge	r0, [r3], -r0
    f2e0:	018b8014 	orreq	r8, fp, r4, lsl r0
    f2e4:	00004800 	andeq	r4, r0, r0, lsl #16
    f2e8:	739c0100 	orrsvc	r0, ip, #0, 2
    f2ec:	2d000016 	stccs	0, cr0, [r0, #-88]	; 0xffffffa8
    f2f0:	0000404f 	andeq	r4, r0, pc, asr #32
    f2f4:	bb17a703 	bllt	5f8f08 <__bss_end__+0x4afec0>
    f2f8:	02000012 	andeq	r0, r0, #18
    f2fc:	2e007491 	mcrcs	4, 0, r7, cr0, cr1, {4}
    f300:	0000402a 	andeq	r4, r0, sl, lsr #32
    f304:	bb21a103 	bllt	877718 <__bss_end__+0x72e6d0>
    f308:	58000012 	stmdapl	r0, {r1, r4}
    f30c:	2800018b 	stmdacs	r0, {r0, r1, r3, r7, r8}
    f310:	01000000 	mrseq	r0, (UNDEF: 0)
    f314:	00169b9c 	mulseq	r6, ip, fp
    f318:	00642800 	rsbeq	r2, r4, r0, lsl #16
    f31c:	0d45a103 	stfeqp	f2, [r5, #-12]
    f320:	0200000f 	andeq	r0, r0, #15
    f324:	2f007491 	svccs	0x00007491
    f328:	00004073 	andeq	r4, r0, r3, ror r0
    f32c:	a5151602 	ldrge	r1, [r5, #-1538]	; 0xfffff9fe
    f330:	0c000000 	stceq	0, cr0, [r0], {-0}
    f334:	4c00018b 	stfmis	f0, [r0], {139}	; 0x8b
    f338:	01000000 	mrseq	r0, (UNDEF: 0)
    f33c:	0016d49c 	mulseq	r6, ip, r4
    f340:	65642800 	strbvs	r2, [r4, #-2048]!	; 0xfffff800
    f344:	17020076 	smlsdxne	r2, r6, r0, r0
    f348:	00106e1c 	andseq	r6, r0, ip, lsl lr
    f34c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    f350:	73706f28 	cmnvc	r0, #40, 30	; 0xa0
    f354:	18180200 	ldmdane	r8, {r9}
    f358:	00001074 	andeq	r1, r0, r4, ror r0
    f35c:	00709102 	rsbseq	r9, r0, r2, lsl #2
    f360:	003f9f2f 	eorseq	r9, pc, pc, lsr #30
    f364:	15480100 	strbne	r0, [r8, #-256]	; 0xffffff00
    f368:	000000a5 	andeq	r0, r0, r5, lsr #1
    f36c:	00018a5c 	andeq	r8, r1, ip, asr sl
    f370:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    f374:	17499c01 	strbne	r9, [r9, -r1, lsl #24]
    f378:	1b2d0000 	blne	b4f380 <__bss_end__+0xa06338>
    f37c:	0100002c 	tsteq	r0, ip, lsr #32
    f380:	17491b49 	strbne	r1, [r9, -r9, asr #22]
    f384:	91020000 	mrsls	r0, (UNDEF: 2)
    f388:	33c62d6c 	biccc	r2, r6, #108, 26	; 0x1b00
    f38c:	4a010000 	bmi	4f394 <morecore_area+0x6394>
    f390:	00005e0f 	andeq	r5, r0, pc, lsl #28
    f394:	68910200 	ldmvs	r1, {r9}
    f398:	00381f2d 	eorseq	r1, r8, sp, lsr #30
    f39c:	0c4b0100 	stfeqe	f0, [fp], {-0}
    f3a0:	0000002c 	andeq	r0, r0, ip, lsr #32
    f3a4:	2d649102 	stfcsp	f1, [r4, #-8]!
    f3a8:	0000376c 	andeq	r3, r0, ip, ror #14
    f3ac:	3d094c01 	stccc	12, cr4, [r9, #-4]
    f3b0:	02000000 	andeq	r0, r0, #0
    f3b4:	d72d6091 			; <UNDEFINED> instruction: 0xd72d6091
    f3b8:	01000031 	tsteq	r0, r1, lsr r0
    f3bc:	0a12144d 	beq	4944f8 <__bss_end__+0x34b4b0>
    f3c0:	91020000 	mrsls	r0, (UNDEF: 2)
    f3c4:	1ab62200 	bne	fed97bcc <__bss_end__+0xfec4eb84>
    f3c8:	120a0000 	andne	r0, sl, #0
    f3cc:	03050000 	movweq	r0, #20480	; 0x5000
    f3d0:	00029338 	andeq	r9, r2, r8, lsr r3
    f3d4:	bb040b00 	bllt	111fdc <morecore_area+0xc8fdc>
    f3d8:	0000000a 	andeq	r0, r0, sl
    f3dc:	00001108 	andeq	r1, r0, r8, lsl #2
    f3e0:	30bd0004 	adcscc	r0, sp, r4
    f3e4:	01040000 	mrseq	r0, (UNDEF: 4)
    f3e8:	00000117 	andeq	r0, r0, r7, lsl r1
    f3ec:	0040f70c 	subeq	pc, r0, ip, lsl #14
    f3f0:	00005f00 	andeq	r5, r0, r0, lsl #30
    f3f4:	0196a400 	orrseq	sl, r6, r0, lsl #8
    f3f8:	00012000 	andeq	r2, r1, r0
    f3fc:	0076a500 	rsbseq	sl, r6, r0, lsl #10
    f400:	0a2f0200 	beq	bcfc08 <__bss_end__+0xa86bc0>
    f404:	6e020000 	cdpvs	0, 0, cr0, cr2, cr0, {0}
    f408:	00003618 	andeq	r3, r0, r8, lsl r6
    f40c:	00250300 	eoreq	r0, r5, r0, lsl #6
    f410:	04040000 	streq	r0, [r4], #-0
    f414:	0003c507 	andeq	ip, r3, r7, lsl #10
    f418:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    f41c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    f420:	00003d06 	andeq	r3, r0, r6, lsl #26
    f424:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    f428:	0000010e 	andeq	r0, r0, lr, lsl #2
    f42c:	09050804 	stmdbeq	r5, {r2, fp}
    f430:	04000001 	streq	r0, [r0], #-1
    f434:	15f30408 	ldrbne	r0, [r3, #1032]!	; 0x408
    f438:	20020000 	andcs	r0, r2, r0
    f43c:	02000009 	andeq	r0, r0, #9
    f440:	00361873 	eorseq	r1, r6, r3, ror r8
    f444:	01040000 	mrseq	r0, (UNDEF: 4)
    f448:	00032e06 	andeq	r2, r3, r6, lsl #28
    f44c:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
    f450:	00000466 	andeq	r0, r0, r6, ror #8
    f454:	2c080104 	stfcss	f0, [r8], {4}
    f458:	06000003 	streq	r0, [r0], -r3
    f45c:	00000078 	andeq	r0, r0, r8, ror r0
    f460:	52070204 	andpl	r0, r7, #4, 4	; 0x40000000
    f464:	02000003 	andeq	r0, r0, #3
    f468:	0000058e 	andeq	r0, r0, lr, lsl #11
    f46c:	3619b502 	ldrcc	fp, [r9], -r2, lsl #10
    f470:	02000000 	andeq	r0, r0, #0
    f474:	00003569 	andeq	r3, r0, r9, ror #10
    f478:	a319ba02 	tstge	r9, #8192	; 0x2000
    f47c:	04000000 	streq	r0, [r0], #-0
    f480:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
    f484:	04070000 	streq	r0, [r7], #-0
    f488:	0018b702 	andseq	fp, r8, r2, lsl #14
    f48c:	0f7d0200 	svceq	0x007d0200
    f490:	0000003d 	andeq	r0, r0, sp, lsr r0
    f494:	00022a08 	andeq	r2, r2, r8, lsl #20
    f498:	016d0200 	cmneq	sp, r0, lsl #4
    f49c:	0000c519 	andeq	ip, r0, r9, lsl r5
    f4a0:	02260900 	eoreq	r0, r6, #0, 18
    f4a4:	01040000 	mrseq	r0, (UNDEF: 4)
    f4a8:	00033508 	andeq	r3, r3, r8, lsl #10
    f4ac:	00ca0600 	sbceq	r0, sl, r0, lsl #12
    f4b0:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    f4b4:	0015f804 	andseq	pc, r5, r4, lsl #16
    f4b8:	022f0a00 	eoreq	r0, pc, #0, 20
    f4bc:	37030000 	strcc	r0, [r3, -r0]
    f4c0:	0000ef14 	andeq	lr, r0, r4, lsl pc
    f4c4:	b8040b00 	stmdalt	r4, {r8, r9, fp}
    f4c8:	06000000 	streq	r0, [r0], -r0
    f4cc:	000000e9 	andeq	r0, r0, r9, ror #1
    f4d0:	00023c0a 	andeq	r3, r2, sl, lsl #24
    f4d4:	14380300 	ldrtne	r0, [r8], #-768	; 0xfffffd00
    f4d8:	000000ef 	andeq	r0, r0, pc, ror #1
    f4dc:	0002350a 	andeq	r3, r2, sl, lsl #10
    f4e0:	14390300 	ldrtne	r0, [r9], #-768	; 0xfffffd00
    f4e4:	000000ef 	andeq	r0, r0, pc, ror #1
    f4e8:	00259302 	eoreq	r9, r5, r2, lsl #6
    f4ec:	12100400 	andsne	r0, r0, #0, 8
    f4f0:	00000097 	muleq	r0, r7, r0
    f4f4:	00d1040b 	sbcseq	r0, r1, fp, lsl #8
    f4f8:	040b0000 	streq	r0, [fp], #-0
    f4fc:	000000ca 	andeq	r0, r0, sl, asr #1
    f500:	00189c0a 	andseq	r9, r8, sl, lsl #24
    f504:	0cf80500 	cfldr64eq	mvdx0, [r8]
    f508:	0000003d 	andeq	r0, r0, sp, lsr r0
    f50c:	c0070404 	andgt	r0, r7, r4, lsl #8
    f510:	0a000003 	beq	f524 <errno+0xf520>
    f514:	00001732 	andeq	r1, r0, r2, lsr r7
    f518:	3d1a1006 	ldccc	0, cr1, [sl, #-24]	; 0xffffffe8
    f51c:	02000000 	andeq	r0, r0, #0
    f520:	00002c8d 	andeq	r2, r0, sp, lsl #25
    f524:	4f1a1007 	svcmi	0x001a1007
    f528:	0c000001 	stceq	0, cr0, [r0], {1}
    f52c:	0000334c 	andeq	r3, r0, ip, asr #6
    f530:	01ea0780 	mvneq	r0, r0, lsl #15
    f534:	0001dc08 	andeq	sp, r1, r8, lsl #24
    f538:	2c1b0d00 	ldccs	13, cr0, [fp], {-0}
    f53c:	eb070000 	bl	1cf544 <__bss_end__+0x864fc>
    f540:	0aaf1401 	beq	febd454c <__bss_end__+0xfea8b504>
    f544:	0d000000 	stceq	0, cr0, [r0, #-0]
    f548:	00002a9d 	muleq	r0, sp, sl
    f54c:	1601ec07 	strne	lr, [r1], -r7, lsl #24
    f550:	00000b56 	andeq	r0, r0, r6, asr fp
    f554:	23eb0d0c 	mvncs	r0, #12, 26	; 0x300
    f558:	ed070000 	stc	0, cr0, [r7, #-0]
    f55c:	0c931201 	lfmeq	f1, 4, [r3], {1}
    f560:	0d180000 	ldceq	0, cr0, [r8, #-0]
    f564:	00003294 	muleq	r0, r4, r2
    f568:	1101ee07 	tstne	r1, r7, lsl #28
    f56c:	00000dcb 	andeq	r0, r0, fp, asr #27
    f570:	302b0d30 	eorcc	r0, fp, r0, lsr sp
    f574:	f0070000 			; <UNDEFINED> instruction: 0xf0070000
    f578:	02911101 	addseq	r1, r1, #1073741824	; 0x40000000
    f57c:	0d380000 	ldceq	0, cr0, [r8, #-0]
    f580:	00002487 	andeq	r2, r0, r7, lsl #9
    f584:	0f01f107 	svceq	0x0001f107
    f588:	00000525 	andeq	r0, r0, r5, lsr #10
    f58c:	22f70d44 	rscscs	r0, r7, #68, 26	; 0x1100
    f590:	f3070000 	vhadd.u8	d0, d7, d0
    f594:	09e12501 	stmibeq	r1!, {r0, r8, sl, sp}^
    f598:	0d540000 	ldcleq	0, cr0, [r4, #-0]
    f59c:	0000348c 	andeq	r3, r0, ip, lsl #9
    f5a0:	1501f407 	strne	pc, [r1, #-1031]	; 0xfffffbf9
    f5a4:	00000d71 	andeq	r0, r0, r1, ror sp
    f5a8:	2ab90d64 	bcs	fee52b40 <__bss_end__+0xfed09af8>
    f5ac:	f5070000 			; <UNDEFINED> instruction: 0xf5070000
    f5b0:	08981201 	ldmeq	r8, {r0, r9, ip}
    f5b4:	00740000 	rsbseq	r0, r4, r0
    f5b8:	00311f02 	eorseq	r1, r1, r2, lsl #30
    f5bc:	16100800 	ldrne	r0, [r0], -r0, lsl #16
    f5c0:	000001e8 	andeq	r0, r0, r8, ror #3
    f5c4:	00339b0e 	eorseq	r9, r3, lr, lsl #22
    f5c8:	27083800 	strcs	r3, [r8, -r0, lsl #16]
    f5cc:	00029108 	andeq	r9, r2, r8, lsl #2
    f5d0:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    f5d4:	11280800 			; <UNDEFINED> instruction: 0x11280800
    f5d8:	000002d2 	ldrdeq	r0, [r0], -r2
    f5dc:	20291000 	eorcs	r1, r9, r0
    f5e0:	2a080000 	bcs	20f5e8 <__bss_end__+0xc65a0>
    f5e4:	00011811 	andeq	r1, r1, r1, lsl r8
    f5e8:	38100400 	ldmdacc	r0, {sl}
    f5ec:	08000040 	stmdaeq	r0, {r6}
    f5f0:	00aa0b2c 	adceq	r0, sl, ip, lsr #22
    f5f4:	10080000 	andne	r0, r8, r0
    f5f8:	0000341c 	andeq	r3, r0, ip, lsl r4
    f5fc:	0c0c2e08 	stceq	14, cr2, [ip], {8}
    f600:	10000001 	andne	r0, r0, r1
    f604:	002f4610 	eoreq	r4, pc, r0, lsl r6	; <UNPREDICTABLE>
    f608:	0c310800 	ldceq	8, cr0, [r1], #-0
    f60c:	00000463 	andeq	r0, r0, r3, ror #8
    f610:	35611018 	strbcc	r1, [r1, #-24]!	; 0xffffffe8
    f614:	33080000 	movwcc	r0, #32768	; 0x8000
    f618:	0004630c 	andeq	r6, r4, ip, lsl #6
    f61c:	63101c00 	tstvs	r0, #0, 24
    f620:	0800002e 	stmdaeq	r0, {r1, r2, r3, r5}
    f624:	04630c35 	strbteq	r0, [r3], #-3125	; 0xfffff3cb
    f628:	10200000 	eorne	r0, r0, r0
    f62c:	00003450 	andeq	r3, r0, r0, asr r4
    f630:	69123808 	ldmdbvs	r2, {r3, fp, ip, sp}
    f634:	24000004 	strcs	r0, [r0], #-4
    f638:	0040c810 	subeq	ip, r0, r0, lsl r8
    f63c:	0e3a0800 	cdpeq	8, 3, cr0, cr10, cr0, {0}
    f640:	000004a3 	andeq	r0, r0, r3, lsr #9
    f644:	28bb1028 	ldmcs	fp!, {r3, r5, ip}
    f648:	3b080000 	blcc	20f650 <__bss_end__+0xc6608>
    f64c:	0004b80e 	andeq	fp, r4, lr, lsl #16
    f650:	09102c00 	ldmdbeq	r0, {sl, fp, sp}
    f654:	08000030 	stmdaeq	r0, {r4, r5}
    f658:	04d20e3c 	ldrbeq	r0, [r2], #3644	; 0xe3c
    f65c:	10300000 	eorsne	r0, r0, r0
    f660:	00002684 	andeq	r2, r0, r4, lsl #13
    f664:	e30c3d08 	movw	r3, #52488	; 0xcd08
    f668:	34000004 	strcc	r0, [r0], #-4
    f66c:	254a0200 	strbcs	r0, [sl, #-512]	; 0xfffffe00
    f670:	11080000 	mrsne	r0, (UNDEF: 8)
    f674:	00029d1a 	andeq	r9, r2, sl, lsl sp
    f678:	302b0e00 	eorcc	r0, fp, r0, lsl #28
    f67c:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    f680:	02d2081f 	sbcseq	r0, r2, #2031616	; 0x1f0000
    f684:	97100000 	ldrls	r0, [r0, -r0]
    f688:	08000033 	stmdaeq	r0, {r0, r1, r4, r5}
    f68c:	046f0e20 	strbteq	r0, [pc], #-3616	; f694 <errno+0xf690>
    f690:	10000000 	andne	r0, r0, r0
    f694:	00002533 	andeq	r2, r0, r3, lsr r5
    f698:	8e0b2108 	adfhie	f2, f3, #0.0
    f69c:	04000004 	streq	r0, [r0], #-4
    f6a0:	00403810 	subeq	r3, r0, r0, lsl r8
    f6a4:	0b220800 	bleq	8916ac <__bss_end__+0x748664>
    f6a8:	000000aa 	andeq	r0, r0, sl, lsr #1
    f6ac:	f0110008 			; <UNDEFINED> instruction: 0xf0110008
    f6b0:	07000022 	streq	r0, [r0, -r2, lsr #32]
    f6b4:	00003604 	andeq	r3, r0, r4, lsl #12
    f6b8:	06090900 	streq	r0, [r9], -r0, lsl #18
    f6bc:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    f6c0:	00253f12 	eoreq	r3, r5, r2, lsl pc
    f6c4:	a9120000 	ldmdbge	r2, {}	; <UNPREDICTABLE>
    f6c8:	01000025 	tsteq	r0, r5, lsr #32
    f6cc:	0030b212 	eorseq	fp, r0, r2, lsl r2
    f6d0:	78120200 	ldmdavc	r2, {r9}
    f6d4:	03000038 	movweq	r0, #56	; 0x38
    f6d8:	00359a12 	eorseq	r9, r5, r2, lsl sl
    f6dc:	bf120400 	svclt	0x00120400
    f6e0:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    f6e4:	002d2412 	eoreq	r2, sp, r2, lsl r4
    f6e8:	9e120600 	cfmsub32ls	mvax0, mvfx0, mvfx2, mvfx0
    f6ec:	07000023 	streq	r0, [r0, -r3, lsr #32]
    f6f0:	002c3212 	eoreq	r3, ip, r2, lsl r2
    f6f4:	19120800 	ldmdbne	r2, {fp}
    f6f8:	0900002d 	stmdbeq	r0, {r0, r2, r3, r5}
    f6fc:	00286b12 	eoreq	r6, r8, r2, lsl fp
    f700:	2b120a00 	blcs	491f08 <__bss_end__+0x348ec0>
    f704:	0b00002e 	bleq	f7c4 <errno+0xf7c0>
    f708:	002e3412 	eoreq	r3, lr, r2, lsl r4
    f70c:	eb120c00 	bl	492714 <__bss_end__+0x3496cc>
    f710:	0d000034 	stceq	0, cr0, [r0, #-208]	; 0xffffff30
    f714:	0034f512 	eorseq	pc, r4, r2, lsl r5	; <UNPREDICTABLE>
    f718:	b6120e00 	ldrlt	r0, [r2], -r0, lsl #28
    f71c:	0f000031 	svceq	0x00000031
    f720:	0031bf12 	eorseq	fp, r1, r2, lsl pc
    f724:	1a121000 	bne	49372c <__bss_end__+0x34a6e4>
    f728:	11000033 	tstne	r0, r3, lsr r0
    f72c:	00332312 	eorseq	r2, r3, r2, lsl r3
    f730:	73121200 	tstvc	r2, #0, 4
    f734:	13000037 	movwne	r0, #55	; 0x37
    f738:	00377d12 	eorseq	r7, r7, r2, lsl sp
    f73c:	14121400 	ldrne	r1, [r2], #-1024	; 0xfffffc00
    f740:	15000027 	strne	r0, [r0, #-39]	; 0xffffffd9
    f744:	00312512 	eorseq	r2, r1, r2, lsl r5
    f748:	46121600 	ldrmi	r1, [r2], -r0, lsl #12
    f74c:	17000036 	smladxne	r0, r6, r0, r0
    f750:	00365312 	eorseq	r5, r6, r2, lsl r3
    f754:	60121800 	andsvs	r1, r2, r0, lsl #16
    f758:	19000036 	stmdbne	r0, {r1, r2, r4, r5}
    f75c:	00366d12 	eorseq	r6, r6, r2, lsl sp
    f760:	12121a00 	andsne	r1, r2, #0, 20
    f764:	1b000028 	blne	f80c <errno+0xf808>
    f768:	00288b12 	eoreq	r8, r8, r2, lsl fp
    f76c:	c8121c00 	ldmdagt	r2, {sl, fp, ip}
    f770:	1d00002c 	stcne	0, cr0, [r0, #-176]	; 0xffffff50
    f774:	0024f812 	eoreq	pc, r4, r2, lsl r8	; <UNPREDICTABLE>
    f778:	11000000 	mrsne	r0, (UNDEF: 0)
    f77c:	0000330f 	andeq	r3, r0, pc, lsl #6
    f780:	00360407 	eorseq	r0, r6, r7, lsl #8
    f784:	34090000 	strcc	r0, [r9], #-0
    f788:	00042406 	andeq	r2, r4, r6, lsl #8
    f78c:	2bda1200 	blcs	ff693f94 <__bss_end__+0xff54af4c>
    f790:	12000000 	andne	r0, r0, #0
    f794:	000030f5 	strdeq	r3, [r0], -r5
    f798:	35721202 	ldrbcc	r1, [r2, #-514]!	; 0xfffffdfe
    f79c:	12030000 	andne	r0, r3, #0
    f7a0:	0000276d 	andeq	r2, r0, sp, ror #14
    f7a4:	2c251206 	sfmcs	f1, 4, [r5], #-24	; 0xffffffe8
    f7a8:	12070000 	andne	r0, r7, #0
    f7ac:	00002390 	muleq	r0, r0, r3
    f7b0:	34b1120a 	ldrtcc	r1, [r1], #522	; 0x20a
    f7b4:	120b0000 	andne	r0, fp, #0
    f7b8:	0000268a 	andeq	r2, r0, sl, lsl #13
    f7bc:	2c77120e 	lfmcs	f1, 2, [r7], #-56	; 0xffffffc8
    f7c0:	120f0000 	andne	r0, pc, #0
    f7c4:	00002444 	andeq	r2, r0, r4, asr #8
    f7c8:	28ae1210 	stmiacs	lr!, {r4, r9, ip}
    f7cc:	12110000 	andsne	r0, r1, #0
    f7d0:	00002956 	andeq	r2, r0, r6, asr r9
    f7d4:	2f991212 	svccs	0x00991212
    f7d8:	12130000 	andsne	r0, r3, #0
    f7dc:	00002ca9 	andeq	r2, r0, r9, lsr #25
    f7e0:	32071214 	andcc	r1, r7, #20, 4	; 0x40000001
    f7e4:	12150000 	andsne	r0, r5, #0
    f7e8:	00002f6d 	andeq	r2, r0, sp, ror #30
    f7ec:	275f1216 	smmlacs	pc, r6, r2, r1	; <UNPREDICTABLE>
    f7f0:	12170000 	andsne	r0, r7, #0
    f7f4:	0000380d 	andeq	r3, r0, sp, lsl #16
    f7f8:	2fb01218 	svccs	0x00b01218
    f7fc:	00190000 	andseq	r0, r9, r0
    f800:	002a7511 	eoreq	r7, sl, r1, lsl r5
    f804:	36040700 	strcc	r0, [r4], -r0, lsl #14
    f808:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    f80c:	044f0e18 	strbeq	r0, [pc], #-3608	; f814 <errno+0xf810>
    f810:	83120000 	tsthi	r2, #0
    f814:	00000031 	andeq	r0, r0, r1, lsr r0
    f818:	0035e012 	eorseq	lr, r5, r2, lsl r0
    f81c:	7e120100 	mufvcs	f0, f2, f0
    f820:	02000032 	andeq	r0, r0, #50	; 0x32
    f824:	0028ce12 	eoreq	ip, r8, r2, lsl lr
    f828:	13000300 	movwne	r0, #768	; 0x300
    f82c:	00000463 	andeq	r0, r0, r3, ror #8
    f830:	00000463 	andeq	r0, r0, r3, ror #8
    f834:	00046914 	andeq	r6, r4, r4, lsl r9
    f838:	02d21400 	sbcseq	r1, r2, #0, 8
    f83c:	0b000000 	bleq	f844 <errno+0xf840>
    f840:	0001dc04 	andeq	sp, r1, r4, lsl #24
    f844:	91040b00 	tstls	r4, r0, lsl #22
    f848:	0b000002 	bleq	f858 <errno+0xf854>
    f84c:	00044f04 	andeq	r4, r4, r4, lsl #30
    f850:	003d1300 	eorseq	r1, sp, r0, lsl #6
    f854:	048e0000 	streq	r0, [lr], #0
    f858:	69140000 	ldmdbvs	r4, {}	; <UNPREDICTABLE>
    f85c:	14000004 	strne	r0, [r0], #-4
    f860:	0000039f 	muleq	r0, pc, r3	; <UNPREDICTABLE>
    f864:	00042414 	andeq	r2, r4, r4, lsl r4
    f868:	040b0000 	streq	r0, [fp], #-0
    f86c:	00000475 	andeq	r0, r0, r5, ror r4
    f870:	00046313 	andeq	r6, r4, r3, lsl r3
    f874:	0004a300 	andeq	sl, r4, r0, lsl #6
    f878:	04631400 	strbteq	r1, [r3], #-1024	; 0xfffffc00
    f87c:	0b000000 	bleq	f884 <errno+0xf880>
    f880:	00049404 	andeq	r9, r4, r4, lsl #8
    f884:	010c1300 	mrseq	r1, LR_mon
    f888:	04b80000 	ldrteq	r0, [r8], #0
    f88c:	63140000 	tstvs	r4, #0
    f890:	00000004 	andeq	r0, r0, r4
    f894:	04a9040b 	strteq	r0, [r9], #1035	; 0x40b
    f898:	0c130000 	ldceq	0, cr0, [r3], {-0}
    f89c:	d2000001 	andle	r0, r0, #1
    f8a0:	14000004 	strne	r0, [r0], #-4
    f8a4:	00000463 	andeq	r0, r0, r3, ror #8
    f8a8:	00010c14 	andeq	r0, r1, r4, lsl ip
    f8ac:	040b0000 	streq	r0, [fp], #-0
    f8b0:	000004be 			; <UNDEFINED> instruction: 0x000004be
    f8b4:	0004e315 	andeq	lr, r4, r5, lsl r3
    f8b8:	04631400 	strbteq	r1, [r3], #-1024	; 0xfffffc00
    f8bc:	0b000000 	bleq	f8c4 <errno+0xf8c0>
    f8c0:	0004d804 	andeq	sp, r4, r4, lsl #16
    f8c4:	192b0a00 	stmdbne	fp!, {r9, fp}
    f8c8:	7b0a0000 	blvc	28f8d0 <__bss_end__+0x146888>
    f8cc:	00011e0e 	andeq	r1, r1, lr, lsl #28
    f8d0:	19000a00 	stmdbne	r0, {r9, fp}
    f8d4:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
    f8d8:	00003d0c 	andeq	r3, r0, ip, lsl #26
    f8dc:	178e0a00 	strne	r0, [lr, r0, lsl #20]
    f8e0:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
    f8e4:	00003d14 	andeq	r3, r0, r4, lsl sp
    f8e8:	17180a00 	ldrne	r0, [r8, -r0, lsl #20]
    f8ec:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
    f8f0:	00003d1c 	andeq	r3, r0, ip, lsl sp
    f8f4:	23700200 	cmncs	r0, #0, 4
    f8f8:	0b0b0000 	bleq	2cf900 <__bss_end__+0x1868b8>
    f8fc:	0000ac11 	andeq	sl, r0, r1, lsl ip
    f900:	363c0200 	ldrtcc	r0, [ip], -r0, lsl #4
    f904:	0c0b0000 	stceq	0, cr0, [fp], {-0}
    f908:	00053618 	andeq	r3, r5, r8, lsl r6
    f90c:	05250600 	streq	r0, [r5, #-1536]!	; 0xfffffa00
    f910:	870e0000 	strhi	r0, [lr, -r0]
    f914:	10000024 	andne	r0, r0, r4, lsr #32
    f918:	7808170b 	stmdavc	r8, {r0, r1, r3, r8, r9, sl, ip}
    f91c:	10000005 	andne	r0, r0, r5
    f920:	00003215 	andeq	r3, r0, r5, lsl r2
    f924:	c20b180b 	andgt	r1, fp, #720896	; 0xb0000
    f928:	00000005 	andeq	r0, r0, r5
    f92c:	002f0f10 	eoreq	r0, pc, r0, lsl pc	; <UNPREDICTABLE>
    f930:	0b190b00 	bleq	652538 <__bss_end__+0x5094f0>
    f934:	000005dc 	ldrdeq	r0, [r0], -ip
    f938:	2fdb1004 	svccs	0x00db1004
    f93c:	1a0b0000 	bne	2cf944 <__bss_end__+0x1868fc>
    f940:	0005f10d 	andeq	pc, r5, sp, lsl #2
    f944:	38100800 	ldmdacc	r0, {fp}
    f948:	0b000040 	bleq	fa50 <errno+0xfa4c>
    f94c:	00aa0b1b 	adceq	r0, sl, fp, lsl fp
    f950:	000c0000 	andeq	r0, ip, r0
    f954:	00380011 	eorseq	r0, r8, r1, lsl r0
    f958:	36040700 	strcc	r0, [r4], -r0, lsl #14
    f95c:	0b000000 	bleq	f964 <errno+0xf960>
    f960:	05a30e10 	streq	r0, [r3, #3600]!	; 0xe10
    f964:	a7120000 	ldrge	r0, [r2, -r0]
    f968:	0000002b 	andeq	r0, r0, fp, lsr #32
    f96c:	00370d12 	eorseq	r0, r7, r2, lsl sp
    f970:	b1120100 	tstlt	r2, r0, lsl #2
    f974:	02000036 	andeq	r0, r0, #54	; 0x36
    f978:	002e4812 	eoreq	r4, lr, r2, lsl r8
    f97c:	13000300 	movwne	r0, #768	; 0x300
    f980:	0000003d 	andeq	r0, r0, sp, lsr r0
    f984:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    f988:	0005bc14 	andeq	fp, r5, r4, lsl ip
    f98c:	05191400 	ldreq	r1, [r9, #-1024]	; 0xfffffc00
    f990:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    f994:	00000005 	andeq	r0, r0, r5
    f998:	0531040b 	ldreq	r0, [r1, #-1035]!	; 0xfffffbf5
    f99c:	040b0000 	streq	r0, [fp], #-0
    f9a0:	000005a3 	andeq	r0, r0, r3, lsr #11
    f9a4:	00003d13 	andeq	r3, r0, r3, lsl sp
    f9a8:	0005dc00 	andeq	sp, r5, r0, lsl #24
    f9ac:	05bc1400 	ldreq	r1, [ip, #1024]!	; 0x400
    f9b0:	19140000 	ldmdbne	r4, {}	; <UNPREDICTABLE>
    f9b4:	00000005 	andeq	r0, r0, r5
    f9b8:	05c8040b 	strbeq	r0, [r8, #1035]	; 0x40b
    f9bc:	aa130000 	bge	4cf9c4 <__bss_end__+0x38697c>
    f9c0:	f1000000 	cps	#0
    f9c4:	14000005 	strne	r0, [r0], #-5
    f9c8:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    f9cc:	e2040b00 	and	r0, r4, #0, 22
    f9d0:	11000005 	tstne	r0, r5
    f9d4:	00002e5a 	andeq	r2, r0, sl, asr lr
    f9d8:	00360407 	eorseq	r0, r6, r7, lsl #8
    f9dc:	150c0000 	strne	r0, [ip, #-0]
    f9e0:	0006340e 	andeq	r3, r6, lr, lsl #8
    f9e4:	24d91200 	ldrbcs	r1, [r9], #512	; 0x200
    f9e8:	12000000 	andne	r0, r0, #0
    f9ec:	00002bfb 	strdeq	r2, [r0], -fp
    f9f0:	290f1201 	stmdbcs	pc, {r0, r9, ip}	; <UNPREDICTABLE>
    f9f4:	12020000 	andne	r0, r2, #0
    f9f8:	00002fce 	andeq	r2, r0, lr, asr #31
    f9fc:	2e0e1203 	cdpcs	2, 0, cr1, cr14, cr3, {0}
    fa00:	12040000 	andne	r0, r4, #0
    fa04:	000028fc 	strdeq	r2, [r0], -ip
    fa08:	2c841205 	sfmcs	f1, 4, [r4], {5}
    fa0c:	00060000 	andeq	r0, r6, r0
    fa10:	00367a02 	eorseq	r7, r6, r2, lsl #20
    fa14:	031d0c00 	tsteq	sp, #0, 24
    fa18:	000005f7 	strdeq	r0, [r0], -r7
    fa1c:	270c1416 	smladcs	ip, r6, r4, r1
    fa20:	00068b09 	andeq	r8, r6, r9, lsl #22
    fa24:	36851000 	strcc	r1, [r5], r0
    fa28:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
    fa2c:	00004912 	andeq	r4, r0, r2, lsl r9
    fa30:	700f0000 	andvc	r0, pc, r0
    fa34:	0c006e69 	stceq	14, cr6, [r0], {105}	; 0x69
    fa38:	00491229 	subeq	r1, r9, r9, lsr #4
    fa3c:	10040000 	andne	r0, r4, r0
    fa40:	00004e00 	andeq	r4, r0, r0, lsl #28
    fa44:	49122a0c 	ldmdbmi	r2, {r2, r3, r9, fp, sp}
    fa48:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    fa4c:	00236710 	eoreq	r6, r3, r0, lsl r7
    fa50:	122b0c00 	eorne	r0, fp, #0, 24
    fa54:	00000049 	andeq	r0, r0, r9, asr #32
    fa58:	3390100c 	orrscc	r1, r0, #12
    fa5c:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    fa60:	00004912 	andeq	r4, r0, r2, lsl r9
    fa64:	16001000 	strne	r1, [r0], -r0
    fa68:	092e0c14 	stmdbeq	lr!, {r2, r4, sl, fp}
    fa6c:	000006d6 	ldrdeq	r0, [r0], -r6
    fa70:	002f3110 	eoreq	r3, pc, r0, lsl r1	; <UNPREDICTABLE>
    fa74:	122f0c00 	eorne	r0, pc, #0, 24
    fa78:	00000049 	andeq	r0, r0, r9, asr #32
    fa7c:	35ff1000 	ldrbcc	r1, [pc, #0]!	; fa84 <errno+0xfa80>
    fa80:	300c0000 	andcc	r0, ip, r0
    fa84:	00004912 	andeq	r4, r0, r2, lsl r9
    fa88:	35100400 	ldrcc	r0, [r0, #-1024]	; 0xfffffc00
    fa8c:	0c00002b 	stceq	0, cr0, [r0], {43}	; 0x2b
    fa90:	00491231 	subeq	r1, r9, r1, lsr r2
    fa94:	10080000 	andne	r0, r8, r0
    fa98:	000042cf 	andeq	r4, r0, pc, asr #5
    fa9c:	4912320c 	ldmdbmi	r2, {r2, r3, r9, ip, sp}
    faa0:	0c000000 	stceq	0, cr0, [r0], {-0}
    faa4:	00339010 	eorseq	r9, r3, r0, lsl r0
    faa8:	12330c00 	eorsne	r0, r3, #0, 24
    faac:	00000049 	andeq	r0, r0, r9, asr #32
    fab0:	04160010 	ldreq	r0, [r6], #-16
    fab4:	ed09350c 	cfstr32	mvfx3, [r9, #-48]	; 0xffffffd0
    fab8:	10000006 	andne	r0, r0, r6
    fabc:	00003497 	muleq	r0, r7, r4
    fac0:	4912360c 	ldmdbmi	r2, {r2, r3, r9, sl, ip, sp}
    fac4:	00000000 	andeq	r0, r0, r0
    fac8:	0c081600 	stceq	6, cr1, [r8], {-0}
    facc:	07110938 			; <UNDEFINED> instruction: 0x07110938
    fad0:	97100000 	ldrls	r0, [r0, -r0]
    fad4:	0c000034 	stceq	0, cr0, [r0], {52}	; 0x34
    fad8:	00491239 	subeq	r1, r9, r9, lsr r2
    fadc:	10000000 	andne	r0, r0, r0
    fae0:	00003e0e 	andeq	r3, r0, lr, lsl #28
    fae4:	49123a0c 	ldmdbmi	r2, {r2, r3, r9, fp, ip, sp}
    fae8:	04000000 	streq	r0, [r0], #-0
    faec:	0c0c1600 	stceq	6, cr1, [ip], {-0}
    faf0:	0742093c 	smlaldxeq	r0, r2, ip, r9
    faf4:	97100000 	ldrls	r0, [r0, -r0]
    faf8:	0c000034 	stceq	0, cr0, [r0], {52}	; 0x34
    fafc:	0049123d 	subeq	r1, r9, sp, lsr r2
    fb00:	10000000 	andne	r0, r0, r0
    fb04:	00003e0e 	andeq	r3, r0, lr, lsl #28
    fb08:	49123e0c 	ldmdbmi	r2, {r2, r3, r9, sl, fp, ip, sp}
    fb0c:	04000000 	streq	r0, [r0], #-0
    fb10:	00290710 	eoreq	r0, r9, r0, lsl r7
    fb14:	123f0c00 	eorsne	r0, pc, #0, 24
    fb18:	00000049 	andeq	r0, r0, r9, asr #32
    fb1c:	14170008 	ldrne	r0, [r7], #-8
    fb20:	9405260c 	strls	r2, [r5], #-1548	; 0xfffff9f4
    fb24:	18000007 	stmdane	r0, {r0, r1, r2}
    fb28:	00003685 	andeq	r3, r0, r5, lsl #13
    fb2c:	400b2d0c 	andmi	r2, fp, ip, lsl #26
    fb30:	19000006 	stmdbne	r0, {r1, r2}
    fb34:	0069736d 	rsbeq	r7, r9, sp, ror #6
    fb38:	8b0b340c 	blhi	2dcb70 <__bss_end__+0x193b28>
    fb3c:	19000006 	stmdbne	r0, {r1, r2}
    fb40:	00717269 	rsbseq	r7, r1, r9, ror #4
    fb44:	d60b370c 	strle	r3, [fp], -ip, lsl #14
    fb48:	18000006 	stmdane	r0, {r1, r2}
    fb4c:	00003e0e 	andeq	r3, r0, lr, lsl #28
    fb50:	ed0b3b0c 	vstr	d3, [fp, #-48]	; 0xffffffd0
    fb54:	19000006 	stmdbne	r0, {r1, r2}
    fb58:	00757063 	rsbseq	r7, r5, r3, rrx
    fb5c:	110b400c 	tstne	fp, ip
    fb60:	18000007 	stmdane	r0, {r0, r1, r2}
    fb64:	00002919 	andeq	r2, r0, r9, lsl r9
    fb68:	aa0f410c 	bge	3dffa0 <__bss_end__+0x296f58>
    fb6c:	00000000 	andeq	r0, r0, r0
    fb70:	240c1816 	strcs	r1, [ip], #-2070	; 0xfffff7ea
    fb74:	0007b109 	andeq	fp, r7, r9, lsl #2
    fb78:	038d1000 	orreq	r1, sp, #0
    fb7c:	250c0000 	strcs	r0, [ip, #-0]
    fb80:	00063410 	andeq	r3, r6, r0, lsl r4
    fb84:	421a0000 	andsmi	r0, sl, #0
    fb88:	04000007 	streq	r0, [r0], #-7
    fb8c:	30be0200 	adcscc	r0, lr, r0, lsl #4
    fb90:	430c0000 	movwmi	r0, #49152	; 0xc000
    fb94:	00079403 	andeq	r9, r7, r3, lsl #8
    fb98:	26b60200 	ldrtcs	r0, [r6], r0, lsl #4
    fb9c:	450c0000 	strmi	r0, [ip, #-0]
    fba0:	00003d0d 	andeq	r3, r0, sp, lsl #26
    fba4:	28730200 	ldmdacs	r3!, {r9}^
    fba8:	4e0c0000 	cdpmi	0, 0, cr0, cr12, cr0, {0}
    fbac:	0007d50f 	andeq	sp, r7, pc, lsl #10
    fbb0:	db040b00 	blle	1127b8 <morecore_area+0xc97b8>
    fbb4:	13000007 	movwne	r0, #7
    fbb8:	0000003d 	andeq	r0, r0, sp, lsr r0
    fbbc:	000007ea 	andeq	r0, r0, sl, ror #15
    fbc0:	0000aa14 	andeq	sl, r0, r4, lsl sl
    fbc4:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
    fbc8:	0c000029 	stceq	0, cr0, [r0], {41}	; 0x29
    fbcc:	07f6105f 	ubfxeq	r1, pc, #0, #23
    fbd0:	040b0000 	streq	r0, [fp], #-0
    fbd4:	000007fc 	strdeq	r0, [r0], -ip
    fbd8:	00081115 	andeq	r1, r8, r5, lsl r1
    fbdc:	00aa1400 	adceq	r1, sl, r0, lsl #8
    fbe0:	c9140000 	ldmdbgt	r4, {}	; <UNPREDICTABLE>
    fbe4:	14000007 	strne	r0, [r0], #-7
    fbe8:	000000aa 	andeq	r0, r0, sl, lsr #1
    fbec:	25b50200 	ldrcs	r0, [r5, #512]!	; 0x200
    fbf0:	700c0000 	andvc	r0, ip, r0
    fbf4:	00081d14 	andeq	r1, r8, r4, lsl sp
    fbf8:	23040b00 	movwcs	r0, #19200	; 0x4b00
    fbfc:	13000008 	movwne	r0, #8
    fc00:	000007bd 			; <UNDEFINED> instruction: 0x000007bd
    fc04:	00000841 	andeq	r0, r0, r1, asr #16
    fc08:	0000aa14 	andeq	sl, r0, r4, lsl sl
    fc0c:	07b11400 	ldreq	r1, [r1, r0, lsl #8]!
    fc10:	ea140000 	b	50fc18 <__bss_end__+0x3c6bd0>
    fc14:	14000007 	strne	r0, [r0], #-7
    fc18:	000000aa 	andeq	r0, r0, sl, lsr #1
    fc1c:	318e0200 	orrcc	r0, lr, r0, lsl #4
    fc20:	7b0c0000 	blvc	30fc28 <__bss_end__+0x1c6be0>
    fc24:	00084d0f 	andeq	r4, r8, pc, lsl #26
    fc28:	53040b00 	movwpl	r0, #19200	; 0x4b00
    fc2c:	13000008 	movwne	r0, #8
    fc30:	0000003d 	andeq	r0, r0, sp, lsr r0
    fc34:	00000867 	andeq	r0, r0, r7, ror #16
    fc38:	0000aa14 	andeq	sl, r0, r4, lsl sl
    fc3c:	07bd1400 	ldreq	r1, [sp, r0, lsl #8]!
    fc40:	16000000 	strne	r0, [r0], -r0
    fc44:	097d0c0c 	ldmdbeq	sp!, {r2, r3, sl, fp}^
    fc48:	00000898 	muleq	r0, r8, r8
    fc4c:	002a2e10 	eoreq	r2, sl, r0, lsl lr
    fc50:	0b7e0c00 	bleq	1f92c58 <__bss_end__+0x1e49c10>
    fc54:	000000aa 	andeq	r0, r0, sl, lsr #1
    fc58:	37c31000 	strbcc	r1, [r3, r0]
    fc5c:	7f0c0000 	svcvc	0x000c0000
    fc60:	0008111a 	andeq	r1, r8, sl, lsl r1
    fc64:	ca100400 	bgt	410c6c <__bss_end__+0x2c7c24>
    fc68:	0c000023 	stceq	0, cr0, [r0], {35}	; 0x23
    fc6c:	08411c80 	stmdaeq	r1, {r7, sl, fp, ip}^
    fc70:	00080000 	andeq	r0, r8, r0
    fc74:	0036a402 	eorseq	sl, r6, r2, lsl #8
    fc78:	03810c00 	orreq	r0, r1, #0, 24
    fc7c:	00000867 	andeq	r0, r0, r7, ror #16
    fc80:	002d0711 	eoreq	r0, sp, r1, lsl r7
    fc84:	36040700 	strcc	r0, [r4], -r0, lsl #14
    fc88:	0d000000 	stceq	0, cr0, [r0, #-0]
    fc8c:	08db0e09 	ldmeq	fp, {r0, r3, r9, sl, fp}^
    fc90:	9a120000 	bls	48fc98 <__bss_end__+0x346c50>
    fc94:	00000024 	andeq	r0, r0, r4, lsr #32
    fc98:	002dc412 	eoreq	ip, sp, r2, lsl r4
    fc9c:	e9120100 	ldmdb	r2, {r8}
    fca0:	0200002f 	andeq	r0, r0, #47	; 0x2f
    fca4:	00322412 	eorseq	r2, r2, r2, lsl r4
    fca8:	e7120300 	ldr	r0, [r2, -r0, lsl #6]
    fcac:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    fcb0:	002c3d12 	eoreq	r3, ip, r2, lsl sp
    fcb4:	02000500 	andeq	r0, r0, #0, 10
    fcb8:	0000304b 	andeq	r3, r0, fp, asr #32
    fcbc:	a403150d 	strge	r1, [r3], #-1293	; 0xfffffaf3
    fcc0:	02000008 	andeq	r0, r0, #8
    fcc4:	000024ff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    fcc8:	f30f130e 	vcgt.u8	d1, d15, d14
    fccc:	0b000008 	bleq	fcf4 <errno+0xfcf0>
    fcd0:	0008f904 	andeq	pc, r8, r4, lsl #18
    fcd4:	003d1300 	eorseq	r1, sp, r0, lsl #6
    fcd8:	09170000 	ldmdbeq	r7, {}	; <UNPREDICTABLE>
    fcdc:	aa140000 	bge	50fce4 <__bss_end__+0x3c6c9c>
    fce0:	14000000 	strne	r0, [r0], #-0
    fce4:	000008db 	ldrdeq	r0, [r0], -fp
    fce8:	0000aa14 	andeq	sl, r0, r4, lsl sl
    fcec:	09171400 	ldmdbeq	r7, {sl, ip}
    fcf0:	0b000000 	bleq	fcf8 <errno+0xfcf4>
    fcf4:	00011e04 	andeq	r1, r1, r4, lsl #28
    fcf8:	2b3e0200 	blcs	f90500 <__bss_end__+0xe474b8>
    fcfc:	160e0000 	strne	r0, [lr], -r0
    fd00:	0009290f 	andeq	r2, r9, pc, lsl #18
    fd04:	2f040b00 	svccs	0x00040b00
    fd08:	13000009 	movwne	r0, #9
    fd0c:	0000003d 	andeq	r0, r0, sp, lsr r0
    fd10:	00000948 	andeq	r0, r0, r8, asr #18
    fd14:	0000aa14 	andeq	sl, r0, r4, lsl sl
    fd18:	08db1400 	ldmeq	fp, {sl, ip}^
    fd1c:	aa140000 	bge	50fd24 <__bss_end__+0x3c6cdc>
    fd20:	00000000 	andeq	r0, r0, r0
    fd24:	00313e02 	eorseq	r3, r1, r2, lsl #28
    fd28:	0f210e00 	svceq	0x00210e00
    fd2c:	00000954 	andeq	r0, r0, r4, asr r9
    fd30:	095a040b 	ldmdbeq	sl, {r0, r1, r3, sl}^
    fd34:	3d130000 	ldccc	0, cr0, [r3, #-0]
    fd38:	73000000 	movwvc	r0, #0
    fd3c:	14000009 	strne	r0, [r0], #-9
    fd40:	000000aa 	andeq	r0, r0, sl, lsr #1
    fd44:	0000aa14 	andeq	sl, r0, r4, lsl sl
    fd48:	09171400 	ldmdbeq	r7, {sl, ip}
    fd4c:	02000000 	andeq	r0, r0, #0
    fd50:	0000256d 	andeq	r2, r0, sp, ror #10
    fd54:	7f0f230e 	svcvc	0x000f230e
    fd58:	0b000009 	bleq	fd84 <errno+0xfd80>
    fd5c:	00098504 	andeq	r8, r9, r4, lsl #10
    fd60:	003d1300 	eorseq	r1, sp, r0, lsl #6
    fd64:	09a30000 	stmibeq	r3!, {}	; <UNPREDICTABLE>
    fd68:	aa140000 	bge	50fd70 <__bss_end__+0x3c6d28>
    fd6c:	14000000 	strne	r0, [r0], #-0
    fd70:	000008db 	ldrdeq	r0, [r0], -fp
    fd74:	00094814 	andeq	r4, r9, r4, lsl r8
    fd78:	00aa1400 	adceq	r1, sl, r0, lsl #8
    fd7c:	16000000 	strne	r0, [r0], -r0
    fd80:	09260e10 	stmdbeq	r6!, {r4, r9, sl, fp}
    fd84:	000009e1 	andeq	r0, r0, r1, ror #19
    fd88:	002a2e10 	eoreq	r2, sl, r0, lsl lr
    fd8c:	0b270e00 	bleq	9d3594 <__bss_end__+0x88a54c>
    fd90:	000000aa 	andeq	r0, r0, sl, lsr #1
    fd94:	28551000 	ldmdacs	r5, {ip}^
    fd98:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
    fd9c:	0008e720 	andeq	lr, r8, r0, lsr #14
    fda0:	74100400 	ldrvc	r0, [r0], #-1024	; 0xfffffc00
    fda4:	0e000034 	mcreq	0, 0, r0, cr0, cr4, {1}
    fda8:	091d2229 	ldmdbeq	sp, {r0, r3, r5, r9, sp}
    fdac:	10080000 	andne	r0, r8, r0
    fdb0:	00003796 	muleq	r0, r6, r7
    fdb4:	731c2a0e 	tstvc	ip, #57344	; 0xe000
    fdb8:	0c000009 	stceq	0, cr0, [r0], {9}
    fdbc:	2f4d0200 	svccs	0x004d0200
    fdc0:	2b0e0000 	blcs	38fdc8 <__bss_end__+0x246d80>
    fdc4:	0009a303 	andeq	sl, r9, r3, lsl #6
    fdc8:	31d01100 	bicscc	r1, r0, r0, lsl #2
    fdcc:	04070000 	streq	r0, [r7], #-0
    fdd0:	00000036 	andeq	r0, r0, r6, lsr r0
    fdd4:	120e1f07 	andne	r1, lr, #7, 30
    fdd8:	1200000a 	andne	r0, r0, #10
    fddc:	000033a1 	andeq	r3, r0, r1, lsr #7
    fde0:	32ad1200 	adccc	r1, sp, #0, 4
    fde4:	12010000 	andne	r0, r1, #0
    fde8:	000035a8 	andeq	r3, r0, r8, lsr #11
    fdec:	b5020002 	strlt	r0, [r2, #-2]
    fdf0:	0700002d 	streq	r0, [r0, -sp, lsr #32]
    fdf4:	09ed0323 	stmibeq	sp!, {r0, r1, r5, r8, r9}^
    fdf8:	03020000 	movweq	r0, #8192	; 0x2000
    fdfc:	07000028 	streq	r0, [r0, -r8, lsr #32]
    fe00:	0a2a112f 	beq	a942c4 <__bss_end__+0x94b27c>
    fe04:	040b0000 	streq	r0, [fp], #-0
    fe08:	00000a30 	andeq	r0, r0, r0, lsr sl
    fe0c:	0000aa13 	andeq	sl, r0, r3, lsl sl
    fe10:	000a5300 	andeq	r5, sl, r0, lsl #6
    fe14:	00aa1400 	adceq	r1, sl, r0, lsl #8
    fe18:	5e140000 	cdppl	0, 1, cr0, cr4, cr0, {0}
    fe1c:	14000000 	strne	r0, [r0], #-0
    fe20:	00000025 	andeq	r0, r0, r5, lsr #32
    fe24:	00003d14 	andeq	r3, r0, r4, lsl sp
    fe28:	0a121400 	beq	494e30 <__bss_end__+0x34bde8>
    fe2c:	02000000 	andeq	r0, r0, #0
    fe30:	000031a5 	andeq	r3, r0, r5, lsr #3
    fe34:	5f103d07 	svcpl	0x00103d07
    fe38:	0b00000a 	bleq	fe68 <errno+0xfe64>
    fe3c:	000a6504 	andeq	r6, sl, r4, lsl #10
    fe40:	0a7a1500 	beq	1e95248 <__bss_end__+0x1d4c200>
    fe44:	aa140000 	bge	50fe4c <__bss_end__+0x3c6e04>
    fe48:	14000000 	strne	r0, [r0], #-0
    fe4c:	000000aa 	andeq	r0, r0, sl, lsr #1
    fe50:	00002514 	andeq	r2, r0, r4, lsl r5
    fe54:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
    fe58:	0c00002c 	stceq	0, cr0, [r0], {44}	; 0x2c
    fe5c:	af104207 	svcge	0x00104207
    fe60:	1000000a 	andne	r0, r0, sl
    fe64:	00002a2e 	andeq	r2, r0, lr, lsr #20
    fe68:	aa0b4307 	bge	2e0a8c <__bss_end__+0x197a44>
    fe6c:	00000000 	andeq	r0, r0, r0
    fe70:	002fa610 	eoreq	sl, pc, r0, lsl r6	; <UNPREDICTABLE>
    fe74:	14440700 	strbne	r0, [r4], #-1792	; 0xfffff900
    fe78:	00000a1e 	andeq	r0, r0, lr, lsl sl
    fe7c:	26781004 	ldrbtcs	r1, [r8], -r4
    fe80:	45070000 	strmi	r0, [r7, #-0]
    fe84:	000a5316 	andeq	r5, sl, r6, lsl r3
    fe88:	02000800 	andeq	r0, r0, #0, 16
    fe8c:	0000305f 	andeq	r3, r0, pc, asr r0
    fe90:	7a034607 	bvc	e16b4 <morecore_area+0x986b4>
    fe94:	0200000a 	andeq	r0, r0, #10
    fe98:	0000349e 	muleq	r0, lr, r4
    fe9c:	c70f6807 	strgt	r6, [pc, -r7, lsl #16]
    fea0:	0b00000a 	bleq	fed0 <errno+0xfecc>
    fea4:	000acd04 	andeq	ip, sl, r4, lsl #26
    fea8:	003d1300 	eorseq	r1, sp, r0, lsl #6
    feac:	0aeb0000 	beq	ffacfeb4 <__bss_end__+0xff986e6c>
    feb0:	aa140000 	bge	50feb8 <__bss_end__+0x3c6e70>
    feb4:	14000000 	strne	r0, [r0], #-0
    feb8:	0000008b 	andeq	r0, r0, fp, lsl #1
    febc:	00003d14 	andeq	r3, r0, r4, lsl sp
    fec0:	0aeb1400 	beq	ffad4ec8 <__bss_end__+0xff98be80>
    fec4:	0b000000 	bleq	fecc <errno+0xfec8>
    fec8:	00008b04 	andeq	r8, r0, r4, lsl #22
    fecc:	28e80200 	stmiacs	r8!, {r9}^
    fed0:	78070000 	stmdavc	r7, {}	; <UNPREDICTABLE>
    fed4:	000afd0f 	andeq	pc, sl, pc, lsl #26
    fed8:	03040b00 	movweq	r0, #19200	; 0x4b00
    fedc:	1300000b 	movwne	r0, #11
    fee0:	0000003d 	andeq	r0, r0, sp, lsr r0
    fee4:	00000b21 	andeq	r0, r0, r1, lsr #22
    fee8:	0000aa14 	andeq	sl, r0, r4, lsl sl
    feec:	008b1400 	addeq	r1, fp, r0, lsl #8
    fef0:	3d140000 	ldccc	0, cr0, [r4, #-0]
    fef4:	14000000 	strne	r0, [r0], #-0
    fef8:	0000008b 	andeq	r0, r0, fp, lsl #1
    fefc:	2a9a0e00 	bcs	fe693704 <__bss_end__+0xfe54a6bc>
    ff00:	070c0000 	streq	r0, [ip, -r0]
    ff04:	0b56107e 	bleq	1594104 <__bss_end__+0x144b0bc>
    ff08:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    ff0c:	0700002a 	streq	r0, [r0, -sl, lsr #32]
    ff10:	00aa0b7f 	adceq	r0, sl, pc, ror fp
    ff14:	10000000 	andne	r0, r0, r0
    ff18:	00002f01 	andeq	r2, r0, r1, lsl #30
    ff1c:	bb188007 	bllt	62ff40 <__bss_end__+0x4e6ef8>
    ff20:	0400000a 	streq	r0, [r0], #-10
    ff24:	002d2f10 	eoreq	r2, sp, r0, lsl pc
    ff28:	19810700 	stmibne	r1, {r8, r9, sl}
    ff2c:	00000af1 	strdeq	r0, [r0], -r1
    ff30:	04020008 	streq	r0, [r2], #-8
    ff34:	07000024 	streq	r0, [r0, -r4, lsr #32]
    ff38:	0b210382 	bleq	850d48 <__bss_end__+0x707d00>
    ff3c:	65110000 	ldrvs	r0, [r1, #-0]
    ff40:	07000024 	streq	r0, [r0, -r4, lsr #32]
    ff44:	00003604 	andeq	r3, r0, r4, lsl #12
    ff48:	0e9a0700 	cdpeq	7, 9, cr0, cr10, cr0, {0}
    ff4c:	00000b87 	andeq	r0, r0, r7, lsl #23
    ff50:	0032e512 	eorseq	lr, r2, r2, lsl r5
    ff54:	5b120000 	blpl	48ff5c <__bss_end__+0x346f14>
    ff58:	0100002b 	tsteq	r0, fp, lsr #32
    ff5c:	00361e12 	eorseq	r1, r6, r2, lsl lr
    ff60:	02000200 	andeq	r0, r0, #0, 4
    ff64:	000023dc 	ldrdeq	r2, [r0], -ip
    ff68:	62039e07 	andvs	r9, r3, #7, 28	; 0x70
    ff6c:	0200000b 	andeq	r0, r0, #11
    ff70:	0000371d 	andeq	r3, r0, sp, lsl r7
    ff74:	9f11ad07 	svcls	0x0011ad07
    ff78:	0b00000b 	bleq	ffac <errno+0xffa8>
    ff7c:	000ba504 	andeq	sl, fp, r4, lsl #10
    ff80:	00aa1300 	adceq	r1, sl, r0, lsl #6
    ff84:	0bc80000 	bleq	ff20ff8c <__bss_end__+0xff0c6f44>
    ff88:	aa140000 	bge	50ff90 <__bss_end__+0x3c6f48>
    ff8c:	14000000 	strne	r0, [r0], #-0
    ff90:	00000025 	andeq	r0, r0, r5, lsr #32
    ff94:	00003d14 	andeq	r3, r0, r4, lsl sp
    ff98:	003d1400 	eorseq	r1, sp, r0, lsl #8
    ff9c:	12140000 	andsne	r0, r4, #0
    ffa0:	0000000a 	andeq	r0, r0, sl
    ffa4:	0025ca02 	eoreq	ip, r5, r2, lsl #20
    ffa8:	10bb0700 	adcsne	r0, fp, r0, lsl #14
    ffac:	00000a5f 	andeq	r0, r0, pc, asr sl
    ffb0:	0024e802 	eoreq	lr, r4, r2, lsl #16
    ffb4:	15cc0700 	strbne	r0, [ip, #1792]	; 0x700
    ffb8:	00000be0 	andeq	r0, r0, r0, ror #23
    ffbc:	0be6040b 	bleq	ff990ff0 <__bss_end__+0xff847fa8>
    ffc0:	5e130000 	cdppl	0, 1, cr0, cr3, cr0, {0}
    ffc4:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    ffc8:	1400000b 	strne	r0, [r0], #-11
    ffcc:	000000aa 	andeq	r0, r0, sl, lsr #1
    ffd0:	0000aa14 	andeq	sl, r0, r4, lsl sl
    ffd4:	00251400 	eoreq	r1, r5, r0, lsl #8
    ffd8:	02000000 	andeq	r0, r0, #0
    ffdc:	00002985 	andeq	r2, r0, r5, lsl #19
    ffe0:	5f10da07 	svcpl	0x0010da07
    ffe4:	0200000a 	andeq	r0, r0, #10
    ffe8:	000034d6 	ldrdeq	r3, [r0], -r6
    ffec:	1710e807 	ldrne	lr, [r0, -r7, lsl #16]
    fff0:	0b00000c 	bleq	10028 <__executable_start+0x28>
    fff4:	000c1d04 	andeq	r1, ip, r4, lsl #26
    fff8:	0c371500 	cfldr32eq	mvfx1, [r7], #-0
    fffc:	aa140000 	bge	510004 <__bss_end__+0x3c6fbc>
   10000:	14000000 	strne	r0, [r0], #-0
   10004:	000000aa 	andeq	r0, r0, sl, lsr #1
   10008:	00002514 	andeq	r2, r0, r4, lsl r5
   1000c:	0b871400 	bleq	fe1d5014 <__bss_end__+0xfe08bfcc>
   10010:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   10014:	00002dd7 	ldrdeq	r2, [r0], -r7
   10018:	10ee0718 	rscne	r0, lr, r8, lsl r7
   1001c:	00000c93 	muleq	r0, r3, ip
   10020:	002a2e10 	eoreq	r2, sl, r0, lsl lr
   10024:	0bef0700 	bleq	ffbd1c2c <__bss_end__+0xffa88be4>
   10028:	000000aa 	andeq	r0, r0, sl, lsr #1
   1002c:	2cfa1000 	ldclcs	0, cr1, [sl]
   10030:	f0070000 			; <UNDEFINED> instruction: 0xf0070000
   10034:	000b9317 	andeq	r9, fp, r7, lsl r3
   10038:	02100400 	andseq	r0, r0, #0, 8
   1003c:	07000031 	smladxeq	r0, r1, r0, r0
   10040:	0bc816f1 	bleq	ff215c0c <__bss_end__+0xff0ccbc4>
   10044:	10080000 	andne	r0, r8, r0
   10048:	0000312d 	andeq	r3, r0, sp, lsr #2
   1004c:	d415f207 	ldrle	pc, [r5], #-519	; 0xfffffdf9
   10050:	0c00000b 	stceq	0, cr0, [r0], {11}
   10054:	002f3910 	eoreq	r3, pc, r0, lsl r9	; <UNPREDICTABLE>
   10058:	17f30700 	ldrbne	r0, [r3, r0, lsl #14]!
   1005c:	00000bff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   10060:	2c991010 	ldccs	0, cr1, [r9], {16}
   10064:	f4070000 	vst4.8	{d0-d3}, [r7], r0
   10068:	000c0b1a 	andeq	r0, ip, sl, lsl fp
   1006c:	02001400 	andeq	r1, r0, #0, 8
   10070:	0000273c 	andeq	r2, r0, ip, lsr r7
   10074:	3703f507 	strcc	pc, [r3, -r7, lsl #10]
   10078:	0800000c 	stmdaeq	r0, {r2, r3}
   1007c:	00003787 	andeq	r3, r0, r7, lsl #15
   10080:	0f014d07 	svceq	0x00014d07
   10084:	00000cac 	andeq	r0, r0, ip, lsr #25
   10088:	0cb2040b 	cfldrseq	mvf0, [r2], #44	; 0x2c
   1008c:	3d130000 	ldccc	0, cr0, [r3, #-0]
   10090:	cb000000 	blgt	10098 <__executable_start+0x98>
   10094:	1400000c 	strne	r0, [r0], #-12
   10098:	000000aa 	andeq	r0, r0, sl, lsr #1
   1009c:	00002514 	andeq	r2, r0, r4, lsl r5
   100a0:	0ccb1400 	cfstrdeq	mvd1, [fp], {0}
   100a4:	0b000000 	bleq	100ac <__executable_start+0xac>
   100a8:	0000aa04 	andeq	sl, r0, r4, lsl #20
   100ac:	259a0800 	ldrcs	r0, [sl, #2048]	; 0x800
   100b0:	5c070000 	stcpl	0, cr0, [r7], {-0}
   100b4:	0cde0f01 	ldcleq	15, cr0, [lr], {1}
   100b8:	040b0000 	streq	r0, [fp], #-0
   100bc:	00000ce4 	andeq	r0, r0, r4, ror #25
   100c0:	00003d13 	andeq	r3, r0, r3, lsl sp
   100c4:	000d0200 	andeq	r0, sp, r0, lsl #4
   100c8:	00aa1400 	adceq	r1, sl, r0, lsl #8
   100cc:	25140000 	ldrcs	r0, [r4, #-0]
   100d0:	14000000 	strne	r0, [r0], #-0
   100d4:	00000025 	andeq	r0, r0, r5, lsr #32
   100d8:	000ccb14 	andeq	ip, ip, r4, lsl fp
   100dc:	51080000 	mrspl	r0, (UNDEF: 8)
   100e0:	07000024 	streq	r0, [r0, -r4, lsr #32]
   100e4:	0f0f016b 	svceq	0x000f016b
   100e8:	0b00000d 	bleq	10124 <_init+0xc>
   100ec:	000d1504 	andeq	r1, sp, r4, lsl #10
   100f0:	003d1300 	eorseq	r1, sp, r0, lsl #6
   100f4:	0d2e0000 	stceq	0, cr0, [lr, #-0]
   100f8:	aa140000 	bge	510100 <__bss_end__+0x3c70b8>
   100fc:	14000000 	strne	r0, [r0], #-0
   10100:	00000025 	andeq	r0, r0, r5, lsr #32
   10104:	0000aa14 	andeq	sl, r0, r4, lsl sl
   10108:	101b0000 	andsne	r0, fp, r0
   1010c:	09017007 	stmdbeq	r1, {r0, r1, r2, ip, sp, lr}
   10110:	00000d71 	andeq	r0, r0, r1, ror sp
   10114:	002a070d 	eoreq	r0, sl, sp, lsl #14
	stmdb sp!, {fp, lr}
   10118:	01710700 	cmneq	r1, r0, lsl #14
	mov fp, sp
   1011c:	000c9f14 	andeq	r9, ip, r4, lsl pc
	ldmia sp!, {fp, lr}
   10120:	7c0d0000 	stcvc	0, cr0, [sp], {-0}
	bx lr
   10124:	07000031 	smladxeq	r0, r1, r0, r0
   10128:	d1140172 	tstle	r4, r2, ror r1
   1012c:	0400000c 	streq	r0, [r0], #-12
   10130:	0024d40d 	eoreq	sp, r4, sp, lsl #8
   10134:	01730700 	cmneq	r3, r0, lsl #14
   10138:	000d0212 	andeq	r0, sp, r2, lsl r2
   1013c:	2e0d0800 	cdpcs	8, 0, cr0, cr13, cr0, {0}
   10140:	0700002a 	streq	r0, [r0, -sl, lsr #32]
	mov fp, 0
   10144:	aa0b0174 	bge	2d071c <__bss_end__+0x1876d4>
	mov lr, 0
   10148:	0c000000 	stceq	0, cr0, [r0], {-0}
	mov a1, sp
   1014c:	37a80800 	strcc	r0, [r8, r0, lsl #16]!
	bl __sel4_start_c
   10150:	75070000 	strvc	r0, [r7, #-0]
	b 1b
   10154:	0d2e0301 	stceq	3, cr0, [lr, #-4]!
   10158:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
   1015c:	07000030 	smladxeq	r0, r0, r0, r0
   10160:	8b1101d0 	blhi	4508a8 <__bss_end__+0x307860>
   10164:	0b00000d 	bleq	101a0 <register_tm_clones+0x1c>
   10168:	000d9104 	andeq	r9, sp, r4, lsl #2
   1016c:	011e1300 	tsteq	lr, r0, lsl #6
   10170:	0da00000 	stceq	0, cr0, [r0]
   10174:	aa140000 	bge	51017c <__bss_end__+0x3c7134>
   10178:	00000000 	andeq	r0, r0, r0
   1017c:	0035be0c 	eorseq	fp, r5, ip, lsl #28
   10180:	d3070800 	movwle	r0, #30720	; 0x7800
   10184:	0dcb1001 	stcleq	0, cr1, [fp, #4]
   10188:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
   1018c:	0700002a 	streq	r0, [r0, -sl, lsr #32]
   10190:	aa0b01d4 	bge	2d08e8 <__bss_end__+0x1878a0>
   10194:	00000000 	andeq	r0, r0, r0
   10198:	0026d20d 	eoreq	sp, r6, sp, lsl #4
   1019c:	01d50700 	bicseq	r0, r5, r0, lsl #14
   101a0:	000d7e18 	andeq	r7, sp, r8, lsl lr
   101a4:	08000400 	stmdaeq	r0, {sl}
   101a8:	000037f4 	strdeq	r3, [r0], -r4
   101ac:	0301d607 	movweq	sp, #5639	; 0x1607
   101b0:	00000da0 	andeq	r0, r0, r0, lsr #27
   101b4:	003b4f02 	eorseq	r4, fp, r2, lsl #30
   101b8:	1e0c0f00 	cdpne	15, 0, cr0, cr12, cr0, {0}
   101bc:	00000de4 	andeq	r0, r0, r4, ror #27
   101c0:	003ca30e 	eorseq	sl, ip, lr, lsl #6
   101c4:	2a0fc800 	bcs	4021cc <__bss_end__+0x2b9184>
   101c8:	000e8008 	andeq	r8, lr, r8
   101cc:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
   101d0:	152c0f00 	strne	r0, [ip, #-3840]!	; 0xfffff100
   101d4:	00000e80 	andeq	r0, r0, r0, lsl #29
   101d8:	26b01000 	ldrtcs	r1, [r0], r0
   101dc:	2d0f0000 	stccs	0, cr0, [pc, #-0]	; 101e4 <frame_dummy>
   101e0:	0000aa0b 	andeq	sl, r0, fp, lsl #20
   101e4:	cc100400 	cfldrsgt	mvf0, [r0], {-0}
int main(int argc, char *argv[]) {
   101e8:	0f000018 	svceq	0x00000018
   101ec:	0f800f2f 	svceq	0x00800f2f
   101f0:	10080000 	andne	r0, r8, r0
   101f4:	00004eb0 			; <UNDEFINED> instruction: 0x00004eb0
   101f8:	b00f300f 	andlt	r3, pc, pc
    printf("Hello, World!\n");
   101fc:	0c00000f 	stceq	0, cr0, [r0], {15}
   10200:	003ff810 	eorseq	pc, pc, r0, lsl r8	; <UNPREDICTABLE>
   10204:	0c310f00 	ldceq	15, cr0, [r1], #-0
    return 0;
   10208:	00000fc1 	andeq	r0, r0, r1, asr #31
}
   1020c:	3e231010 	mcrcc	0, 1, r1, cr3, cr0, {0}
   10210:	330f0000 	movwcc	r0, #61440	; 0xf000
   10214:	000fc710 	andeq	ip, pc, r0, lsl r7	; <UNPREDICTABLE>
   10218:	6e101400 	cfmulsvs	mvf1, mvf0, mvf0
	bl __sel4_start_root
   1021c:	0f00003b 	svceq	0x0000003b
	b 1b
   10220:	0f0e2435 	svceq	0x000e2435
	ldr sp, =__stack_top
   10224:	10180000 	andsne	r0, r8, r0
{
   10228:	00003b26 	andeq	r3, r0, r6, lsr #22
   1022c:	0e24370f 	cdpeq	7, 2, cr3, cr4, cr15, {0}
   10230:	2c00000f 	stccs	0, cr0, [r0], {15}
   10234:	6b6c630f 	blvs	1b28e78 <__bss_end__+0x19dfe30>
    unsigned long argc = *((unsigned long const *) stack);
   10238:	14390f00 	ldrtne	r0, [r9], #-3840	; 0xfffff100
   1023c:	00000fd2 	ldrdeq	r0, [r0], -r2
   10240:	3d001040 	stccc	0, cr1, [r0, #-256]	; 0xffffff00
    char const *const *argv = &((char const * const *) stack)[1];
   10244:	3b0f0000 	blcc	3d024c <__bss_end__+0x287204>
   10248:	00014311 	andeq	r4, r1, r1, lsl r3
   1024c:	d7104400 	ldrle	r4, [r0, -r0, lsl #8]
    char const *const *envp = &argv[argc + 1];
   10250:	0f000031 	svceq	0x00000031
   10254:	003d093d 	eorseq	r0, sp, sp, lsr r9
   10258:	00c40000 	sbceq	r0, r4, r0
   1025c:	003bb111 	eorseq	fp, fp, r1, lsl r1
   10260:	36040700 	strcc	r0, [r4], -r0, lsl #14
   10264:	10000000 	andne	r0, r0, r0
    int envc = 0;
   10268:	0eb1060f 	cdpeq	6, 11, cr0, cr1, cr15, {0}
   1026c:	68120000 	ldmdavs	r2, {}	; <UNPREDICTABLE>
    while (envp[envc] != SEL4RUNTIME_NULL) {
   10270:	0000003c 	andeq	r0, r0, ip, lsr r0
        envc++;
   10274:	003c7312 	eorseq	r7, ip, r2, lsl r3
   10278:	37120100 	ldrcc	r0, [r2, -r0, lsl #2]
   1027c:	0000003b 	andeq	r0, r0, fp, lsr r0
    while (envp[envc] != SEL4RUNTIME_NULL) {
   10280:	003cf512 	eorseq	pc, ip, r2, lsl r5	; <UNPREDICTABLE>
   10284:	c4120100 	ldrgt	r0, [r2], #-256	; 0xffffff00
   10288:	0100003c 	tsteq	r0, ip, lsr r0
   1028c:	3b5f1100 	blcc	17d4694 <__bss_end__+0x168b64c>
   10290:	04070000 	streq	r0, [r7], #-0
   10294:	00000036 	andeq	r0, r0, r6, lsr r0
   10298:	dc06100f 	stcle	0, cr1, [r6], {15}
    auxv_t const *auxv = (void const *)(&envp[envc + 1]);
   1029c:	1200000e 	andne	r0, r0, #14
   102a0:	00003bbc 			; <UNDEFINED> instruction: 0x00003bbc
   102a4:	3d191200 	lfmcc	f1, 4, [r9, #-0]
   102a8:	12010000 	andne	r0, r1, #0
   102ac:	00003d06 	andeq	r3, r0, r6, lsl #26
   102b0:	3c411202 	sfmcc	f1, 2, [r1], {2}
    __sel4runtime_start_main(main, argc, argv, envp, auxv);
   102b4:	00030000 	andeq	r0, r3, r0
   102b8:	003afb02 	eorseq	pc, sl, r2, lsl #22
   102bc:	101b0f00 	andsne	r0, fp, r0, lsl #30
   102c0:	00000ee8 	andeq	r0, r0, r8, ror #29
   102c4:	0eee040b 	cdpeq	4, 14, cr0, cr14, cr11, {0}
   102c8:	08150000 	ldmdaeq	r5, {}	; <UNPREDICTABLE>
   102cc:	1400000f 	strne	r0, [r0], #-15
   102d0:	00000f08 	andeq	r0, r0, r8, lsl #30
}
   102d4:	000eb114 	andeq	fp, lr, r4, lsl r1
   102d8:	00251400 	eoreq	r1, r5, r0, lsl #8
   102dc:	aa140000 	bge	5102e4 <__bss_end__+0x3c729c>
{
   102e0:	00000000 	andeq	r0, r0, r0
   102e4:	0dd8040b 	cfldrdeq	mvd0, [r8, #44]	; 0x2c
   102e8:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
   102ec:	1400003b 	strne	r0, [r0], #-59	; 0xffffffc5
   102f0:	5d081d0f 	stcpl	13, cr1, [r8, #-60]	; 0xffffffc4
   102f4:	1000000f 	andne	r0, r0, pc
   102f8:	00004d27 	andeq	r4, r0, r7, lsr #26
    __sel4runtime_load_env(argc, argv, envp, auxv);
   102fc:	dc181f0f 	ldcle	15, cr1, [r8], {15}
   10300:	0000000e 	andeq	r0, r0, lr
   10304:	003d3110 	eorseq	r3, sp, r0, lsl r1
   10308:	0b210f00 	bleq	853f10 <__bss_end__+0x70aec8>
   1030c:	000000aa 	andeq	r0, r0, sl, lsr #1
    sel4runtime_exit(main(argc, argv, envp));
   10310:	3b9b1004 	blcc	fe6d4328 <__bss_end__+0xfe58b2e0>
   10314:	230f0000 	movwcs	r0, #61440	; 0xf000
   10318:	0000250c 	andeq	r2, r0, ip, lsl #10
   1031c:	e5100800 	ldr	r0, [r0, #-2048]	; 0xfffff800
   10320:	0f00003c 	svceq	0x0000003c
   10324:	00311525 	eorseq	r1, r1, r5, lsr #10
   10328:	100c0000 	andne	r0, ip, r0
   1032c:	000019a1 	andeq	r1, r0, r1, lsr #19
}
   10330:	aa0b270f 	bge	2d9f74 <__bss_end__+0x190f2c>
   10334:	10000000 	andne	r0, r0, r0
   10338:	00ac1300 	adceq	r1, ip, r0, lsl #6
{
   1033c:	0f800000 	svceq	0x00800000
   10340:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
   10344:	1400000f 	strne	r0, [r0], #-15
   10348:	000000aa 	andeq	r0, r0, sl, lsr #1
    sel4runtime_uintptr_t tdata_start = (sel4runtime_uintptr_t) &_tdata_start[0];
   1034c:	00002514 	andeq	r2, r0, r4, lsl r5
   10350:	0edc1400 	cdpeq	4, 13, cr1, cr12, cr0, {0}
   10354:	aa140000 	bge	51035c <__bss_end__+0x3c7314>
    sel4runtime_uintptr_t tdata_end = (sel4runtime_uintptr_t) &_tdata_end[0];
   10358:	00000000 	andeq	r0, r0, r0
   1035c:	0f5d040b 	svceq	0x005d040b
   10360:	ac130000 	ldcge	0, cr0, [r3], {-0}
    sel4runtime_uintptr_t tbss_start = (sel4runtime_uintptr_t) &_tbss_start[0];
   10364:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
   10368:	1400000f 	strne	r0, [r0], #-15
   1036c:	00000f08 	andeq	r0, r0, r8, lsl #30
    sel4runtime_uintptr_t tbss_end = (sel4runtime_uintptr_t) &_tbss_end[0];
   10370:	000fa914 	andeq	sl, pc, r4, lsl r9	; <UNPREDICTABLE>
   10374:	00251400 	eoreq	r1, r5, r0, lsl #8
   10378:	dc140000 	ldcle	0, cr0, [r4], {-0}
    if (tdata_start == 0) {
   1037c:	1400000e 	strne	r0, [r0], #-14
   10380:	000000aa 	andeq	r0, r0, sl, lsr #1
   10384:	af040b00 	svcge	0x00040b00
        tdata_start = tbss_start;
   10388:	1c00000f 	stcne	0, cr0, [r0], {15}
   1038c:	0f86040b 	svceq	0x0086040b
        tdata_end = tbss_start;
   10390:	c1150000 	tstgt	r5, r0
   10394:	1400000f 	strne	r0, [r0], #-15
    Elf_Phdr tls_header = {
   10398:	00000f08 	andeq	r0, r0, r8, lsl #30
   1039c:	b6040b00 	strlt	r0, [r4], -r0, lsl #22
   103a0:	0b00000f 	bleq	103e4 <__sel4_start_root+0xa8>
   103a4:	00004404 	andeq	r4, r0, r4, lsl #8
   103a8:	3cb10900 			; <UNDEFINED> instruction: 0x3cb10900
   103ac:	040b0000 	streq	r0, [fp], #-0
   103b0:	00000fcd 	andeq	r0, r0, sp, asr #31
   103b4:	0041531d 	subeq	r5, r1, sp, lsl r3
   103b8:	091c0100 	ldmdbeq	ip, {r8}
        .p_filesz = tdata_end - tdata_start,
   103bc:	000000ac 	andeq	r0, r0, ip, lsr #1
   103c0:	00019730 	andeq	r9, r1, r0, lsr r7
   103c4:	00000094 	muleq	r0, r4, r0
    Elf_Phdr tls_header = {
   103c8:	107b9c01 	rsbsne	r9, fp, r1, lsl #24
        .p_memsz  = tbss_end - tdata_start,
   103cc:	641e0000 	ldrvs	r0, [lr], #-0
   103d0:	161d0100 	ldrne	r0, [sp], -r0, lsl #2
   103d4:	00000f08 	andeq	r0, r0, r8, lsl #30
    Elf_Phdr tls_header = {
   103d8:	1f649102 	svcne	0x00649102
   103dc:	00003c7e 	andeq	r3, r0, lr, ror ip
   103e0:	aa0b1e01 	bge	2d7bec <__bss_end__+0x18eba4>
    } info = {
   103e4:	02000000 	andeq	r0, r0, #0
   103e8:	821f6091 	andshi	r6, pc, #145	; 0x91
   103ec:	01000027 	tsteq	r0, r7, lsr #32
   103f0:	00250c1f 	eoreq	r0, r5, pc, lsl ip
   103f4:	91020000 	mrsls	r0, (UNDEF: 2)
   103f8:	63721e5c 	cmnvs	r2, #92, 28	; 0x5c0
   103fc:	20010062 	andcs	r0, r1, r2, rrx
   10400:	000edc18 	andeq	sp, lr, r8, lsl ip
   10404:	58910200 	ldmpl	r1, {r9}
   10408:	003d311f 	eorseq	r3, sp, pc, lsl r1
   1040c:	0b210100 	bleq	850814 <__bss_end__+0x7077cc>
   10410:	000000aa 	andeq	r0, r0, sl, lsr #1
   10414:	20009102 	andcs	r9, r0, r2, lsl #2
   10418:	000019a1 	andeq	r1, r0, r1, lsr #19
   1041c:	1e0b2301 	cdpne	3, 0, cr2, cr11, cr1, {0}
   10420:	02000001 	andeq	r0, r0, #1
   10424:	54217091 	strtpl	r7, [r1], #-145	; 0xffffff6f
   10428:	60000197 	mulvs	r0, r7, r1
   1042c:	22000000 	andcs	r0, r0, #0
   10430:	24010069 	strcs	r0, [r1], #-105	; 0xffffff97
   10434:	00003d0e 	andeq	r3, r0, lr, lsl #26
   10438:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   1043c:	01976021 	orrseq	r6, r7, r1, lsr #32
   10440:	00003800 	andeq	r3, r0, r0, lsl #16
   10444:	65722200 	ldrbvs	r2, [r2, #-512]!	; 0xfffffe00
   10448:	25010074 	strcs	r0, [r1, #-116]	; 0xffffff8c
   1044c:	00003d0d 	andeq	r3, r0, sp, lsl #26
   10450:	6c910200 	lfmvs	f0, 4, [r1], {0}
   10454:	1d000000 	stcne	0, cr0, [r0, #-0]
   10458:	000040ec 	andeq	r4, r0, ip, ror #1
   1045c:	ac090c01 	stcge	12, cr0, [r9], {1}
   10460:	a4000000 	strge	r0, [r0], #-0
   10464:	8c000196 	stfhis	f0, [r0], {150}	; 0x96
   10468:	01000000 	mrseq	r0, (UNDEF: 0)
   1046c:	0011059c 	mulseq	r1, ip, r5
   10470:	00641e00 	rsbeq	r1, r4, r0, lsl #28
   10474:	08160d01 	ldmdaeq	r6, {r0, r8, sl, fp}
   10478:	0200000f 	andeq	r0, r0, #15
   1047c:	7e1f6c91 	mrcvc	12, 0, r6, cr15, cr1, {4}
    __sel4runtime_start_main(main, ARRAY_LENGTH(info.argv) - 1, info.argv, info.envp, info.auxv);
   10480:	0100003c 	tsteq	r0, ip, lsr r0
   10484:	0fa9110e 	svceq	0x00a9110e
   10488:	91020000 	mrsls	r0, (UNDEF: 2)
   1048c:	27821f68 	strcs	r1, [r2, r8, ror #30]
   10490:	0f010000 	svceq	0x00010000
   10494:	0000250c 	andeq	r2, r0, ip, lsl #10
   10498:	64910200 	ldrvs	r0, [r1], #512	; 0x200
   1049c:	6263721e 	rsbvs	r7, r3, #-536870911	; 0xe0000001
   104a0:	18100100 	ldmdane	r0, {r8}
   104a4:	00000edc 	ldrdeq	r0, [r0], -ip
   104a8:	1f609102 	svcne	0x00609102
}
   104ac:	00003d31 	andeq	r3, r0, r1, lsr sp
   104b0:	aa0b1101 	bge	2d48bc <__bss_end__+0x18b874>
   104b4:	02000000 	andeq	r0, r0, #0
{
   104b8:	a1200091 			; <UNDEFINED> instruction: 0xa1200091
   104bc:	01000019 	tsteq	r0, r9, lsl r0
    return __sel4_ipc_buffer;
   104c0:	11051a13 	tstne	r5, r3, lsl sl
   104c4:	91020000 	mrsls	r0, (UNDEF: 2)
   104c8:	96c82170 			; <UNDEFINED> instruction: 0x96c82170
   104cc:	00580001 	subseq	r0, r8, r1
}
   104d0:	69220000 	stmdbvs	r2!, {}	; <UNPREDICTABLE>
   104d4:	0e140100 	mufeqs	f0, f4, f0
   104d8:	0000003d 	andeq	r0, r0, sp, lsr r0
{
   104dc:	00749102 	rsbseq	r9, r4, r2, lsl #2
   104e0:	7f040b00 	svcvc	0x00040b00
   104e4:	00000000 	andeq	r0, r0, r0
   104e8:	0000068d 	andeq	r0, r0, sp, lsl #13
   104ec:	32910004 	addscc	r0, r1, #4
   104f0:	01040000 	mrseq	r0, (UNDEF: 4)
   104f4:	00000117 	andeq	r0, r0, r7, lsl r1
    register seL4_Word destptr asm("r0") = dest;
   104f8:	0042160c 	subeq	r1, r2, ip, lsl #12
    register seL4_Word info asm("r1") = info_arg;
   104fc:	00005f00 	andeq	r5, r0, r0, lsl #30
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   10500:	0197c400 	orrseq	ip, r7, r0, lsl #8
   10504:	00044400 	andeq	r4, r4, r0, lsl #8
   10508:	007a4800 	rsbseq	r4, sl, r0, lsl #16
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   1050c:	07040200 	streq	r0, [r4, -r0, lsl #4]
   10510:	000003c5 	andeq	r0, r0, r5, asr #7
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   10514:	69050403 	stmdbvs	r5, {r0, r1, sl}
   10518:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
   1051c:	032e0601 			; <UNDEFINED> instruction: 0x032e0601
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   10520:	02020000 	andeq	r0, r2, #0
   10524:	00046605 	andeq	r6, r4, r5, lsl #12
   10528:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    register seL4_Word scno asm("r7") = sys;
   1052c:	00000109 	andeq	r0, r0, r9, lsl #2
    asm volatile(
   10530:	00275704 	eoreq	r5, r7, r4, lsl #14
    *out_info = info;
   10534:	19ab0500 	stmibne	fp!, {r8, sl}
   10538:	00000054 	andeq	r0, r0, r4, asr r0
   1053c:	2c080102 	stfcss	f0, [r8], {2}
    *out_badge = destptr;
   10540:	02000003 	andeq	r0, r0, #3
   10544:	03520702 	cmpeq	r2, #524288	; 0x80000
    *in_out_mr0 = msg0;
   10548:	8e040000 	cdphi	0, 0, cr0, cr4, cr0, {0}
   1054c:	05000005 	streq	r0, [r0, #-5]
   10550:	002519b5 	strhteq	r1, [r5], -r5
    *in_out_mr1 = msg1;
   10554:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   10558:	0003bb07 	andeq	fp, r3, r7, lsl #22
   1055c:	0a2f0400 	beq	bd1564 <__bss_end__+0xa8851c>
    *in_out_mr2 = msg2;
   10560:	6e050000 	cdpvs	0, 0, cr0, cr5, cr0, {0}
   10564:	00002518 	andeq	r2, r0, r8, lsl r5
   10568:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    *in_out_mr3 = msg3;
   1056c:	0000010e 	andeq	r0, r0, lr, lsl #2
   10570:	2a060405 	bcs	19158c <__bss_end__+0x48544>
   10574:	05000002 	streq	r0, [r0, #-2]
}
   10578:	9719016d 	ldrls	r0, [r9, -sp, ror #2]
   1057c:	07000000 	streq	r0, [r0, -r0]
   10580:	00000226 	andeq	r0, r0, r6, lsr #4
   10584:	35080102 	strcc	r0, [r8, #-258]	; 0xfffffefe
{
   10588:	08000003 	stmdaeq	r0, {r0, r1}
   1058c:	0000009c 	muleq	r0, ip, r0
   10590:	f8040802 			; <UNDEFINED> instruction: 0xf8040802
   10594:	09000015 	stmdbeq	r0, {r0, r2, r4}
   10598:	0000022f 	andeq	r0, r0, pc, lsr #4
    strcpy((char *)seL4_GetIPCBuffer()->msg, name);
   1059c:	c1143706 	tstgt	r4, r6, lsl #14
   105a0:	0a000000 	beq	105a8 <seL4_DebugNameThread+0x20>
   105a4:	00008a04 	andeq	r8, r0, r4, lsl #20
   105a8:	00bb0800 	adcseq	r0, fp, r0, lsl #16
   105ac:	3c090000 	stccc	0, cr0, [r9], {-0}
   105b0:	06000002 	streq	r0, [r0], -r2
    seL4_Word unused0 = 0;
   105b4:	00c11438 	sbceq	r1, r1, r8, lsr r4
   105b8:	35090000 	strcc	r0, [r9, #-0]
    seL4_Word unused1 = 0;
   105bc:	06000002 	streq	r0, [r0], -r2
   105c0:	00c11439 	sbceq	r1, r1, r9, lsr r4
    seL4_Word unused2 = 0;
   105c4:	040a0000 	streq	r0, [sl], #-0
   105c8:	0000009c 	muleq	r0, ip, r0
    seL4_Word unused3 = 0;
   105cc:	00189c09 	andseq	r9, r8, r9, lsl #24
   105d0:	0cf80700 	ldcleq	7, cr0, [r8]
    seL4_Word unused4 = 0;
   105d4:	0000002c 	andeq	r0, r0, ip, lsr #32
   105d8:	f3040802 	vsub.i8	d0, d4, d2
    seL4_Word unused5 = 0;
   105dc:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
   105e0:	000042b6 			; <UNDEFINED> instruction: 0x000042b6
    arm_sys_send_recv(seL4_SysDebugNameThread, tcb, &unused0, 0, &unused1, &unused2, &unused3, &unused4, &unused5, 0);
   105e4:	621e4901 	andsvs	r4, lr, #16384	; 0x4000
   105e8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   105ec:	000000f7 	strdeq	r0, [r0], -r7
   105f0:	00173209 	andseq	r3, r7, r9, lsl #4
   105f4:	1a100800 	bne	4125fc <__bss_end__+0x2c95b4>
   105f8:	0000002c 	andeq	r0, r0, ip, lsr #32
   105fc:	002e5a0b 	eoreq	r5, lr, fp, lsl #20
   10600:	25040700 	strcs	r0, [r4, #-1792]	; 0xfffff900
   10604:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   10608:	01510e15 	cmpeq	r1, r5, lsl lr
   1060c:	d90c0000 	stmdble	ip, {}	; <UNPREDICTABLE>
   10610:	00000024 	andeq	r0, r0, r4, lsr #32
   10614:	002bfb0c 	eoreq	pc, fp, ip, lsl #22
   10618:	0f0c0100 	svceq	0x000c0100
   1061c:	02000029 	andeq	r0, r0, #41	; 0x29
   10620:	002fce0c 	eoreq	ip, pc, ip, lsl #28
   10624:	0e0c0300 	cdpeq	3, 0, cr0, cr12, cr0, {0}
}
   10628:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
   1062c:	0028fc0c 	eoreq	pc, r8, ip, lsl #24
   10630:	840c0500 	strhi	r0, [ip], #-1280	; 0xfffffb00
{
   10634:	0600002c 	streq	r0, [r0], -ip, lsr #32
   10638:	367a0400 	ldrbtcc	r0, [sl], -r0, lsl #8
   1063c:	1d090000 	stcne	0, cr0, [r9, #-0]
    __asm__ __volatile__("mrc p15,0,%0,c13,c0,2" : "=r"(reg));
   10640:	00011403 	andeq	r1, r1, r3, lsl #8
   10644:	09140d00 	ldmdbeq	r4, {r8, sl, fp}
    return reg;
   10648:	01a80927 			; <UNDEFINED> instruction: 0x01a80927
}
   1064c:	850e0000 	strhi	r0, [lr, #-0]
   10650:	09000036 	stmdbeq	r0, {r1, r2, r4, r5}
   10654:	00811228 	addeq	r1, r1, r8, lsr #4
   10658:	0f000000 	svceq	0x00000000
{
   1065c:	006e6970 	rsbeq	r6, lr, r0, ror r9
   10660:	81122909 	tsthi	r2, r9, lsl #18
   10664:	04000000 	streq	r0, [r0], #-0
   10668:	004e000e 	subeq	r0, lr, lr
    __asm__ __volatile__("mcr p15,0,%0,c13,c0,2" :: "r"(reg));
   1066c:	122a0900 	eorne	r0, sl, #0, 18
   10670:	00000081 	andeq	r0, r0, r1, lsl #1
}
   10674:	23670e08 	cmncs	r7, #8, 28	; 0x80
   10678:	2b090000 	blcs	250680 <__bss_end__+0x107638>
   1067c:	00008112 	andeq	r8, r0, r2, lsl r1
   10680:	900e0c00 	andls	r0, lr, r0, lsl #24
{
   10684:	09000033 	stmdbeq	r0, {r0, r1, r4, r5}
   10688:	0081122c 	addeq	r1, r1, ip, lsr #4
   1068c:	00100000 	andseq	r0, r0, r0
   10690:	2e09140d 	cdpcs	4, 0, cr1, cr9, cr13, {0}
    sel4runtime_write_tpidr_el0(tls_base);
   10694:	0001f309 	andeq	pc, r1, r9, lsl #6
   10698:	2f310e00 	svccs	0x00310e00
}
   1069c:	2f090000 	svccs	0x00090000
   106a0:	00008112 	andeq	r8, r0, r2, lsl r1
   106a4:	ff0e0000 			; <UNDEFINED> instruction: 0xff0e0000
{
   106a8:	09000035 	stmdbeq	r0, {r0, r2, r4, r5}
   106ac:	00811230 	addeq	r1, r1, r0, lsr r2
    return sel4runtime_read_tpidr_el0();
   106b0:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
   106b4:	00002b35 	andeq	r2, r0, r5, lsr fp
}
   106b8:	81123109 	tsthi	r2, r9, lsl #2
   106bc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
{
   106c0:	0042cf0e 	subeq	ip, r2, lr, lsl #30
   106c4:	12320900 	eorsne	r0, r2, #0, 18
    return env.process_name;
   106c8:	00000081 	andeq	r0, r0, r1, lsl #1
   106cc:	33900e0c 	orrscc	r0, r0, #12, 28	; 0xc0
   106d0:	33090000 	movwcc	r0, #36864	; 0x9000
}
   106d4:	00008112 	andeq	r8, r0, r2, lsl r1
   106d8:	0d001000 	stceq	0, cr1, [r0, #-0]
   106dc:	09350904 	ldmdbeq	r5!, {r2, r8, fp}
   106e0:	0000020a 	andeq	r0, r0, sl, lsl #4
{
   106e4:	0034970e 	eorseq	r9, r4, lr, lsl #14
   106e8:	12360900 	eorsne	r0, r6, #0, 18
    return env.argv;
   106ec:	00000081 	andeq	r0, r0, r1, lsl #1
   106f0:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
   106f4:	2e093809 	cdpcs	8, 0, cr3, cr9, cr9, {0}
}
   106f8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
   106fc:	00003497 	muleq	r0, r7, r4
   10700:	81123909 	tsthi	r2, r9, lsl #18
   10704:	00000000 	andeq	r0, r0, r0
{
   10708:	003e0e0e 	eorseq	r0, lr, lr, lsl #28
   1070c:	123a0900 	eorsne	r0, sl, #0, 18
    return env.argc;
   10710:	00000081 	andeq	r0, r0, r1, lsl #1
   10714:	0c0d0004 	stceq	0, cr0, [sp], {4}
   10718:	5f093c09 	svcpl	0x00093c09
}
   1071c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
   10720:	00003497 	muleq	r0, r7, r4
   10724:	81123d09 	tsthi	r2, r9, lsl #26
   10728:	00000000 	andeq	r0, r0, r0
{
   1072c:	003e0e0e 	eorseq	r0, lr, lr, lsl #28
   10730:	123e0900 	eorsne	r0, lr, #0, 18
    return env.envp;
   10734:	00000081 	andeq	r0, r0, r1, lsl #1
   10738:	29070e04 	stmdbcs	r7, {r2, r9, sl, fp}
   1073c:	3f090000 	svccc	0x00090000
}
   10740:	00008112 	andeq	r8, r0, r2, lsl r1
   10744:	10000800 	andne	r0, r0, r0, lsl #16
   10748:	05260914 	streq	r0, [r6, #-2324]!	; 0xfffff6ec
   1074c:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
{
   10750:	00368511 	eorseq	r8, r6, r1, lsl r5
   10754:	0b2d0900 	bleq	b52b5c <__bss_end__+0xa09b14>
    return env.auxv;
   10758:	0000015d 	andeq	r0, r0, sp, asr r1
   1075c:	69736d12 	ldmdbvs	r3!, {r1, r4, r8, sl, fp, sp, lr}^
   10760:	0b340900 	bleq	d12b68 <__bss_end__+0xbc9b20>
}
   10764:	000001a8 	andeq	r0, r0, r8, lsr #3
   10768:	71726912 	cmnvc	r2, r2, lsl r9
   1076c:	0b370900 	bleq	dd2b74 <__bss_end__+0xc89b2c>
   10770:	000001f3 	strdeq	r0, [r0], -r3
{
   10774:	003e0e11 	eorseq	r0, lr, r1, lsl lr
   10778:	0b3b0900 	bleq	ed2b80 <__bss_end__+0xd89b38>
    return env.bootinfo;
   1077c:	0000020a 	andeq	r0, r0, sl, lsl #4
   10780:	75706312 	ldrbvc	r6, [r0, #-786]!	; 0xfffffcee
   10784:	0b400900 	bleq	1012b8c <__bss_end__+0xec9b44>
}
   10788:	0000022e 	andeq	r0, r0, lr, lsr #4
   1078c:	00291911 	eoreq	r1, r9, r1, lsl r9
   10790:	0f410900 	svceq	0x00410900
   10794:	00000088 	andeq	r0, r0, r8, lsl #1
{
   10798:	09180d00 	ldmdbeq	r8, {r8, sl, fp}
   1079c:	02ce0924 	sbceq	r0, lr, #36, 18	; 0x90000
    return env.tls.region_size;
   107a0:	8d0e0000 	stchi	0, cr0, [lr, #-0]
   107a4:	09000003 	stmdbeq	r0, {r0, r1}
   107a8:	01511025 	cmpeq	r1, r5, lsr #32
}
   107ac:	13000000 	movwne	r0, #0
   107b0:	0000025f 	andeq	r0, r0, pc, asr r2
   107b4:	be040004 	cdplt	0, 0, cr0, cr4, cr4, {0}
   107b8:	09000030 	stmdbeq	r0, {r4, r5}
{
   107bc:	02b10343 	adcseq	r0, r1, #201326593	; 0xc000001
   107c0:	04020000 	streq	r0, [r2], #-0
    return env.initial_thread_tls_base != (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   107c4:	0003c007 	andeq	ip, r3, r7
   107c8:	192b0900 	stmdbne	fp!, {r8, fp}
   107cc:	7b0a0000 	blvc	2907d4 <__bss_end__+0x14778c>
   107d0:	0000de0e 	andeq	sp, r0, lr, lsl #28
   107d4:	19000900 	stmdbne	r0, {r8, fp}
   107d8:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
   107dc:	00002c0c 	andeq	r2, r0, ip, lsl #24
}
   107e0:	178e0900 	strne	r0, [lr, r0, lsl #18]
   107e4:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
   107e8:	00002c14 	andeq	r2, r0, r4, lsl ip
   107ec:	17180900 	ldrne	r0, [r8, -r0, lsl #18]
{
   107f0:	7c0a0000 	stcvc	0, cr0, [sl], {-0}
   107f4:	00002c1c 	andeq	r2, r0, ip, lsl ip
   107f8:	de040a00 	vmlale.f32	s0, s8, s0
   107fc:	04000000 	streq	r0, [r0], #-0
    if (tls_memory == SEL4RUNTIME_NULL) {
   10800:	00004280 	andeq	r4, r0, r0, lsl #5
   10804:	230f2b0b 	movwcs	r2, #64267	; 0xfb0b
   10808:	0a000003 	beq	1081c <sel4runtime_write_tls_image+0x2c>
        return (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   1080c:	00032904 	andeq	r2, r3, r4, lsl #18
   10810:	002c1400 	eoreq	r1, ip, r0, lsl #8
    copy_tls_data(tls_memory);
   10814:	03470000 	movteq	r0, #28672	; 0x7000
   10818:	ce150000 	cdpgt	0, 1, cr0, cr5, cr0, {0}
    return tls_base_from_tls_region(tls_memory);
   1081c:	15000002 	strne	r0, [r0, #-2]
   10820:	00000025 	andeq	r0, r0, r5, lsr #32
   10824:	00007515 	andeq	r7, r0, r5, lsl r5
}
   10828:	00881500 	addeq	r1, r8, r0, lsl #10
   1082c:	04000000 	streq	r0, [r0], #-0
   10830:	00004291 	muleq	r0, r1, r2
{
   10834:	530f2603 	movwpl	r2, #62979	; 0xf603
   10838:	0a000003 	beq	1084c <sel4runtime_move_initial_tls+0x18>
   1083c:	00035904 	andeq	r5, r3, r4, lsl #18
   10840:	002c1400 	eoreq	r1, ip, r0, lsl #8
    if (tls_memory == SEL4RUNTIME_NULL) {
   10844:	037c0000 	cmneq	ip, #0
   10848:	de150000 	cdple	0, 1, cr0, cr5, cr0, {0}
   1084c:	15000000 	strne	r0, [r0, #-0]
        return (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   10850:	0000002c 	andeq	r0, r0, ip, lsr #32
   10854:	00002c15 	andeq	r2, r0, r5, lsl ip
    sel4runtime_uintptr_t tls_base = sel4runtime_write_tls_image(tls_memory);
   10858:	03171500 	tsteq	r7, #0, 10
   1085c:	88150000 	ldmdahi	r5, {}	; <UNPREDICTABLE>
   10860:	00000000 	andeq	r0, r0, r0
    if (tls_base == (sel4runtime_uintptr_t)SEL4RUNTIME_NULL) {
   10864:	00420b16 	subeq	r0, r2, r6, lsl fp
   10868:	2c030800 	stccs	8, cr0, [r3], {-0}
   1086c:	0003a410 	andeq	sl, r3, r0, lsl r4
        return (sel4runtime_uintptr_t)SEL4RUNTIME_NULL;
   10870:	44fd0e00 	ldrbtmi	r0, [sp], #3584	; 0xe00
   10874:	30030000 	andcc	r0, r3, r0
    sel4runtime_set_tls_base(tls_base);
   10878:	0003110c 	andeq	r1, r3, ip, lsl #2
   1087c:	dc0e0000 	stcle	0, cr0, [lr], {-0}
    if (env.initial_thread_ipc_buffer != SEL4RUNTIME_NULL) {
   10880:	03000041 	movweq	r0, #65	; 0x41
   10884:	03471b32 	movteq	r1, #31538	; 0x7b32
   10888:	00040000 	andeq	r0, r4, r0
   1088c:	00431104 	subeq	r1, r3, r4, lsl #2
   10890:	03330300 	teqeq	r3, #0, 6
        __sel4_ipc_buffer = env.initial_thread_ipc_buffer;
   10894:	0000037c 	andeq	r0, r0, ip, ror r3
   10898:	25040717 	strcs	r0, [r4, #-1815]	; 0xfffff8e9
   1089c:	04000000 	streq	r0, [r0], #-0
   108a0:	03cb0e15 	biceq	r0, fp, #336	; 0x150
   108a4:	cc0c0000 	stcgt	0, cr0, [ip], {-0}
   108a8:	00000041 	andeq	r0, r0, r1, asr #32
   108ac:	0041990c 	subeq	r9, r1, ip, lsl #18
    env.initial_thread_tls_base = tls_base;
   108b0:	17000100 	strne	r0, [r0, -r0, lsl #2]
   108b4:	00250407 	eoreq	r0, r5, r7, lsl #8
   108b8:	1a040000 	bne	1108c0 <morecore_area+0xc78c0>
   108bc:	0003ec0e 	andeq	lr, r3, lr, lsl #24
    if (env.initial_thread_tcb && env.initial_thread_ipc_buffer && env.process_name) {
   108c0:	42e70c00 	rscmi	r0, r7, #0, 24
   108c4:	0c000000 	stceq	0, cr0, [r0], {-0}
   108c8:	000041c8 	andeq	r4, r0, r8, asr #3
   108cc:	41950c01 	orrsmi	r0, r5, r1, lsl #24
   108d0:	00020000 	andeq	r0, r2, r0
   108d4:	0000de18 	andeq	sp, r0, r8, lsl lr
   108d8:	0003fc00 	andeq	pc, r3, r0, lsl #24
   108dc:	00251900 	eoreq	r1, r5, r0, lsl #18
   108e0:	00030000 	andeq	r0, r3, r0
   108e4:	0041b01a 	subeq	fp, r1, sl, lsl r0
   108e8:	074c0400 	strbeq	r0, [ip, -r0, lsl #8]
   108ec:	000003ec 	andeq	r0, r0, ip, ror #7
   108f0:	c7500305 	ldrbgt	r0, [r0, -r5, lsl #6]
   108f4:	e61b0002 	ldr	r0, [fp], -r2
   108f8:	04000041 	streq	r0, [r0], #-65	; 0xffffffbf
        seL4_DebugNameThread(env.initial_thread_tcb, env.process_name);
   108fc:	03a40152 			; <UNDEFINED> instruction: 0x03a40152
   10900:	03050000 	movweq	r0, #20480	; 0x5000
   10904:	0002c760 	andeq	ip, r2, r0, ror #14
   10908:	0041a41a 	subeq	sl, r1, sl, lsl r4
   1090c:	01520400 	cmpeq	r2, r0, lsl #8
   10910:	00000432 	andeq	r0, r0, r2, lsr r4
   10914:	c8dc0305 	ldmgt	ip, {r0, r2, r8, r9}^
   10918:	040a0002 	streq	r0, [sl], #-2
   1091c:	000003a4 	andeq	r0, r0, r4, lsr #7
    return env.initial_thread_tls_base;
   10920:	00415d1c 	subeq	r5, r1, ip, lsl sp
   10924:	0c220400 	cfstrseq	mvf0, [r2], #-0
   10928:	0000002c 	andeq	r0, r0, ip, lsr #32
}
   1092c:	00019994 	muleq	r1, r4, r9
   10930:	00000274 	andeq	r0, r0, r4, ror r2
   10934:	05789c01 	ldrbeq	r9, [r8, #-3073]!	; 0xfffff3ff
   10938:	831d0000 	tsthi	sp, #0
{
   1093c:	04000041 	streq	r0, [r0], #-65	; 0xffffffbf
   10940:	00de2b22 	sbcseq	r2, lr, r2, lsr #22
   10944:	91030000 	mrsls	r0, (UNDEF: 3)
   10948:	791d7fa4 	ldmdbvc	sp, {r2, r5, r7, r8, r9, sl, fp, ip, sp, lr}
    sel4runtime_exit_cb *old = env.exit_cb;
   1094c:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
   10950:	002c3922 	eoreq	r3, ip, r2, lsr #18
   10954:	91030000 	mrsls	r0, (UNDEF: 3)
   10958:	be1d7fa0 	cdplt	15, 1, cr7, cr13, cr0, {5}
    env.exit_cb = cb;
   1095c:	04000042 	streq	r0, [r0], #-66	; 0xffffffbe
   10960:	002c4a22 	eoreq	r4, ip, r2, lsr #20
   10964:	91030000 	mrsls	r0, (UNDEF: 3)
   10968:	271d7f9c 			; <UNDEFINED> instruction: 0x271d7f9c
    return old;
   1096c:	0400004d 	streq	r0, [r0], #-77	; 0xffffffb3
}
   10970:	03173623 	tsteq	r7, #36700160	; 0x2300000
   10974:	91030000 	mrsls	r0, (UNDEF: 3)
   10978:	311d7f98 			; <UNDEFINED> instruction: 0x311d7f98
   1097c:	0400003d 	streq	r0, [r0], #-61	; 0xffffffc3
{
   10980:	00884623 	addeq	r4, r8, r3, lsr #12
   10984:	91020000 	mrsls	r0, (UNDEF: 2)
   10988:	431e1b00 	tstmi	lr, #0, 22
   1098c:	25040000 	strcs	r0, [r4, #-0]
    sel4runtime_pre_exit_cb *old = env.pre_exit_cb;
   10990:	0005780a 	andeq	r7, r5, sl, lsl #16
   10994:	4b910200 	blmi	fe45119c <__bss_end__+0xfe308154>
   10998:	00418c1b 	subeq	r8, r1, fp, lsl ip
   1099c:	09260400 	stmdbeq	r6!, {sl}
    env.pre_exit_cb = cb;
   109a0:	0000002c 	andeq	r0, r0, ip, lsr #32
   109a4:	1b449102 	blne	1134db4 <__bss_end__+0xfebd6c>
   109a8:	000041fb 	strdeq	r4, [r0], -fp
   109ac:	7f112704 	svcvc	0x00112704
    return old;
   109b0:	02000005 	andeq	r0, r0, #5
}
   109b4:	b61e6091 			; <UNDEFINED> instruction: 0xb61e6091
   109b8:	9600001a 			; <UNDEFINED> instruction: 0x9600001a
   109bc:	05000005 	streq	r0, [r0, #-5]
   109c0:	02950403 	addseq	r0, r5, #50331648	; 0x3000000
{
   109c4:	42d61b00 	sbcsmi	r1, r6, #0, 22
   109c8:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
   109cc:	00002c09 	andeq	r2, r0, r9, lsl #24
   109d0:	5c910200 	lfmpl	f0, 4, [r1], {0}
    if (env.pre_exit_cb != SEL4RUNTIME_NULL) {
   109d4:	0043011b 	subeq	r0, r3, fp, lsl r1
   109d8:	092b0400 	stmdbeq	fp!, {sl}
   109dc:	0000002c 	andeq	r0, r0, ip, lsr #32
   109e0:	1b589102 	blne	1634df0 <__bss_end__+0x14ebda8>
   109e4:	000042a7 	andeq	r4, r0, r7, lsr #5
        code = env.pre_exit_cb(code);
   109e8:	2c092c04 	stccs	12, cr2, [r9], {4}
   109ec:	02000000 	andeq	r0, r0, #0
   109f0:	7c1f5491 	cfldrsvc	mvf5, [pc], {145}	; 0x91
   109f4:	7c00019a 	stfvcs	f0, [r0], {154}	; 0x9a
   109f8:	20000001 	andcs	r0, r0, r1
   109fc:	30040069 	andcc	r0, r4, r9, rrx
    __sel4runtime_run_destructors();
   10a00:	00002c0e 	andeq	r2, r0, lr, lsl #24
    env.exit_cb(code);
   10a04:	6c910200 	lfmvs	f0, 4, [r1], {0}
   10a08:	019a881f 	orrseq	r8, sl, pc, lsl r8
   10a0c:	00015400 	andeq	r5, r1, r0, lsl #8
   10a10:	43081b00 	movwmi	r1, #35584	; 0x8b00
   10a14:	31040000 	mrscc	r0, (UNDEF: 4)
}
   10a18:	0002ce12 	andeq	ip, r2, r2, lsl lr
   10a1c:	ac910300 	ldcge	3, cr0, [r1], {0}
   10a20:	42e21b7f 	rscmi	r1, r2, #130048	; 0x1fc00
{
   10a24:	32040000 	andcc	r0, r4, #0
   10a28:	00057f15 	andeq	r7, r5, r5, lsl pc
   10a2c:	50910200 	addspl	r0, r1, r0, lsl #4
   10a30:	002e5a1b 	eoreq	r5, lr, fp, lsl sl
   10a34:	12340400 	eorsne	r0, r4, #0, 8
   10a38:	00000062 	andeq	r0, r0, r2, rrx
   10a3c:	20689102 	rsbcs	r9, r8, r2, lsl #2
    sel4runtime_uintptr_t local_tls_base = sel4runtime_get_tls_base();
   10a40:	00717269 	rsbseq	r7, r1, r9, ror #4
   10a44:	62123504 	andsvs	r3, r2, #4, 10	; 0x1000000
    unsigned char *local_tls = tls_from_tls_base(local_tls_base);
   10a48:	02000000 	andeq	r0, r0, #0
   10a4c:	ed1b6491 	cfldrs	mvf6, [fp, #-580]	; 0xfffffdbc
   10a50:	0400003f 	streq	r0, [r0], #-63	; 0xffffffc1
    sel4runtime_size_t offset = local_tls_dest - local_tls;
   10a54:	002c0d43 	eoreq	r0, ip, r3, asr #26
   10a58:	91020000 	mrsls	r0, (UNDEF: 2)
   10a5c:	0000004c 	andeq	r0, r0, ip, asr #32
   10a60:	c9020102 	stmdbgt	r2, {r1, r8}
    sel4runtime_size_t tls_size = env.tls.memory_size;
   10a64:	0a00001b 	beq	10ad8 <__sel4runtime_write_tls_variable+0xb4>
   10a68:	00058504 	andeq	r8, r5, r4, lsl #10
   10a6c:	a3182100 	tstge	r8, #0, 2
   10a70:	96000000 	strls	r0, [r0], -r0
    if (offset > tls_size || offset + bytes > tls_size) {
   10a74:	19000005 	stmdbne	r0, {r0, r2}
   10a78:	00000025 	andeq	r0, r0, r5, lsr #32
   10a7c:	86080018 			; <UNDEFINED> instruction: 0x86080018
   10a80:	1c000005 	stcne	0, cr0, [r0], {5}
   10a84:	000041f7 	strdeq	r4, [r0], -r7
   10a88:	7f1b3d03 	svcvc	0x001b3d03
   10a8c:	68000005 	stmdavs	r0, {r0, r2}
   10a90:	2c000198 	stfcss	f0, [r0], {152}	; 0x98
   10a94:	01000001 	tsteq	r0, r1
   10a98:	0006109c 	muleq	r6, ip, r0
        return -1;
   10a9c:	41831d00 	orrmi	r1, r3, r0, lsl #26
   10aa0:	3d030000 	stccc	0, cr0, [r3, #-0]
    unsigned char *dest_tls = tls_from_tls_base(dest_tls_base);
   10aa4:	0000de35 	andeq	sp, r0, r5, lsr lr
   10aa8:	6c910200 	lfmvs	f0, 4, [r1], {0}
   10aac:	0048791d 	subeq	r7, r8, sp, lsl r9
    unsigned char *dest_addr = dest_tls + offset;
   10ab0:	433d0300 	teqmi	sp, #0, 6
   10ab4:	0000002c 	andeq	r0, r0, ip, lsr #32
   10ab8:	1d689102 	stfnep	f1, [r8, #-8]!
   10abc:	0000431e 	andeq	r4, r0, lr, lsl r3
    __sel4runtime_memcpy(dest_addr, src, bytes);
   10ac0:	10563d03 	subsne	r3, r6, r3, lsl #26
   10ac4:	02000006 	andeq	r0, r0, #6
   10ac8:	8c1d6491 	cfldrshi	mvf6, [sp], {145}	; 0x91
   10acc:	03000041 	movweq	r0, #65	; 0x41
    return 0;
   10ad0:	0616683d 			; <UNDEFINED> instruction: 0x0616683d
}
   10ad4:	91020000 	mrsls	r0, (UNDEF: 2)
   10ad8:	1ab61e60 	bne	fed98460 <__bss_end__+0xfec4f418>
   10adc:	062c0000 	strteq	r0, [ip], -r0
{
   10ae0:	03050000 	movweq	r0, #20480	; 0x5000
   10ae4:	00029520 	andeq	r9, r2, r0, lsr #10
   10ae8:	0041fb1b 	subeq	pc, r1, fp, lsl fp	; <UNPREDICTABLE>
   10aec:	11400300 	mrsne	r0, SPSR_irq
   10af0:	0000057f 	andeq	r0, r0, pc, ror r5
   10af4:	00749102 	rsbseq	r9, r4, r2, lsl #2
   10af8:	0578040a 	ldrbeq	r0, [r8, #-1034]!	; 0xfffffbf6
    empty_tls();
   10afc:	040a0000 	streq	r0, [sl], #-0
    parse_auxv(auxv);
   10b00:	0000002c 	andeq	r0, r0, ip, lsr #32
   10b04:	0000a318 	andeq	sl, r0, r8, lsl r3
    parse_phdrs();
   10b08:	00062c00 	andeq	r2, r6, r0, lsl #24
    if (argc > 0) {
   10b0c:	00251900 	eoreq	r1, r5, r0, lsl #18
   10b10:	00130000 	andseq	r0, r3, r0
   10b14:	00061c08 	andeq	r1, r6, r8, lsl #24
        name_process(argv[0]);
   10b18:	41ee1c00 	mvnmi	r1, r0, lsl #24
   10b1c:	a7020000 	strge	r0, [r2, -r0]
   10b20:	00006218 	andeq	r6, r0, r8, lsl r2
   10b24:	01982800 	orrseq	r2, r8, r0, lsl #16
    try_init_static_tls();
   10b28:	00004000 	andeq	r4, r0, r0
    env.argc = argc;
   10b2c:	669c0100 	ldrvs	r0, [ip], r0, lsl #2
   10b30:	22000006 	andcs	r0, r0, #6
   10b34:	a7020070 	smlsdxge	r2, r0, r0, r0
   10b38:	00066630 	andeq	r6, r6, r0, lsr r6
    env.argv = argv;
   10b3c:	6c910200 	lfmvs	f0, 4, [r1], {0}
   10b40:	02007620 	andeq	r7, r0, #32, 12	; 0x2000000
   10b44:	00f70aa9 	rscseq	r0, r7, r9, lsr #21
   10b48:	91020000 	mrsls	r0, (UNDEF: 2)
    env.auxv = auxv;
   10b4c:	040a0074 	streq	r0, [sl], #-116	; 0xffffff8c
   10b50:	00000103 	andeq	r0, r0, r3, lsl #2
   10b54:	00417623 	subeq	r7, r1, r3, lsr #12
   10b58:	185e0100 	ldmdane	lr, {r8}^
    env.envp = envp;
   10b5c:	00000062 	andeq	r0, r0, r2, rrx
   10b60:	000197c4 	andeq	r9, r1, r4, asr #15
   10b64:	00000064 	andeq	r0, r0, r4, rrx
   10b68:	78229c01 	stmdavc	r2!, {r0, sl, fp, ip, pc}
    __sel4runtime_run_constructors();
   10b6c:	2d5e0100 	ldfcse	f0, [lr, #-0]
}
   10b70:	000000f7 	strdeq	r0, [r0], -r7
   10b74:	00749102 	rsbseq	r9, r4, r2, lsl #2
   10b78:	0006f400 	andeq	pc, r6, r0, lsl #8
{
   10b7c:	81000400 	tsthi	r0, r0, lsl #8
   10b80:	04000034 	streq	r0, [r0], #-52	; 0xffffffcc
   10b84:	00011701 	andeq	r1, r1, r1, lsl #14
   10b88:	438d0c00 	orrmi	r0, sp, #0, 24
    env.process_name = name;
   10b8c:	005f0000 	subseq	r0, pc, r0
   10b90:	9c080000 	stcls	0, cr0, [r8], {-0}
   10b94:	06b40001 	ldrteq	r0, [r4], r1
   10b98:	7e440000 	cdpvc	0, 4, cr0, cr4, cr0, {0}
    while (name && *name != '\0') {
   10b9c:	04020000 	streq	r0, [r2], #-0
        if (*name == '/') {
   10ba0:	0003c507 	andeq	ip, r3, r7, lsl #10
   10ba4:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
   10ba8:	00746e69 	rsbseq	r6, r4, r9, ror #28
   10bac:	2e060102 	adfcss	f0, f6, f2
            env.process_name = name + 1;
   10bb0:	02000003 	andeq	r0, r0, #3
   10bb4:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
   10bb8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   10bbc:	00010905 	andeq	r0, r1, r5, lsl #18
   10bc0:	27570400 	ldrbcs	r0, [r7, -r0, lsl #8]
        name++;
   10bc4:	ab050000 	blge	150bcc <__bss_end__+0x7b84>
   10bc8:	00005419 	andeq	r5, r0, r9, lsl r4
   10bcc:	08010200 	stmdaeq	r1, {r9}
    while (name && *name != '\0') {
   10bd0:	0000032c 	andeq	r0, r0, ip, lsr #6
   10bd4:	52070202 	andpl	r0, r7, #536870912	; 0x20000000
   10bd8:	04000003 	streq	r0, [r0], #-3
   10bdc:	0000058e 	andeq	r0, r0, lr, lsl #11
   10be0:	2519b505 	ldrcs	fp, [r9, #-1285]	; 0xfffffafb
   10be4:	02000000 	andeq	r0, r0, #0
   10be8:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
}
   10bec:	2f040000 	svccs	0x00040000
   10bf0:	0500000a 	streq	r0, [r0, #-10]
   10bf4:	0025186e 	eoreq	r1, r5, lr, ror #16
   10bf8:	04020000 	streq	r0, [r2], #-0
{
   10bfc:	00010e05 	andeq	r0, r1, r5, lsl #28
   10c00:	06040500 	streq	r0, [r4], -r0, lsl #10
   10c04:	0000022a 	andeq	r0, r0, sl, lsr #4
   10c08:	19016d05 	stmdbne	r1, {r0, r2, r8, sl, fp, sp, lr}
    for (int i = 0; auxv[i].a_type != AT_NULL; i++) {
   10c0c:	00000097 	muleq	r0, r7, r0
   10c10:	00022607 	andeq	r2, r2, r7, lsl #12
   10c14:	08010200 	stmdaeq	r1, {r9}
        switch (auxv[i].a_type) {
   10c18:	00000335 	andeq	r0, r0, r5, lsr r3
   10c1c:	00009c08 	andeq	r9, r0, r8, lsl #24
   10c20:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
   10c24:	000015f8 	strdeq	r1, [r0], -r8
   10c28:	00022f09 	andeq	r2, r2, r9, lsl #30
   10c2c:	14370600 	ldrtne	r0, [r7], #-1536	; 0xfffffa00
   10c30:	000000c1 	andeq	r0, r0, r1, asr #1
   10c34:	008a040a 	addeq	r0, sl, sl, lsl #8
   10c38:	bb080000 	bllt	210c40 <__bss_end__+0xc7bf8>
   10c3c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   10c40:	0000023c 	andeq	r0, r0, ip, lsr r2
   10c44:	c1143806 	tstgt	r4, r6, lsl #16
   10c48:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   10c4c:	00000235 	andeq	r0, r0, r5, lsr r2
   10c50:	c1143906 	tstgt	r4, r6, lsl #18
   10c54:	0a000000 	beq	10c5c <parse_auxv+0x60>
   10c58:	00009c04 	andeq	r9, r0, r4, lsl #24
   10c5c:	189c0900 	ldmne	ip, {r8, fp}
   10c60:	f8070000 			; <UNDEFINED> instruction: 0xf8070000
   10c64:	00002c0c 	andeq	r2, r0, ip, lsl #24
   10c68:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
   10c6c:	000015f3 	strdeq	r1, [r0], -r3
   10c70:	0042b604 	subeq	fp, r2, r4, lsl #12
   10c74:	1e490100 	dvfnee	f0, f1, f0
   10c78:	00000062 	andeq	r0, r0, r2, rrx
            env.program_header.size = auxv[i].a_un.a_val;
   10c7c:	0000f708 	andeq	pc, r0, r8, lsl #14
   10c80:	17320900 	ldrne	r0, [r2, -r0, lsl #18]!
   10c84:	10080000 	andne	r0, r8, r0
   10c88:	00002c1a 	andeq	r2, r0, sl, lsl ip
   10c8c:	2e5a0b00 	vnmlscs.f64	d16, d10, d0
   10c90:	04070000 	streq	r0, [r7], #-0
   10c94:	00000025 	andeq	r0, r0, r5, lsr #32
   10c98:	510e1509 	tstpl	lr, r9, lsl #10
   10c9c:	0c000001 	stceq	0, cr0, [r0], {1}
            break;
   10ca0:	000024d9 	ldrdeq	r2, [r0], -r9
            env.program_header.count = auxv[i].a_un.a_val;
   10ca4:	2bfb0c00 	blcs	ffed3cac <__bss_end__+0xffd8ac64>
   10ca8:	0c010000 	stceq	0, cr0, [r1], {-0}
   10cac:	0000290f 	andeq	r2, r0, pc, lsl #18
   10cb0:	2fce0c02 	svccs	0x00ce0c02
   10cb4:	0c030000 	stceq	0, cr0, [r3], {-0}
   10cb8:	00002e0e 	andeq	r2, r0, lr, lsl #28
   10cbc:	28fc0c04 	ldmcs	ip!, {r2, sl, fp}^
   10cc0:	0c050000 	stceq	0, cr0, [r5], {-0}
   10cc4:	00002c84 	andeq	r2, r0, r4, lsl #25
            break;
   10cc8:	7a040006 	bvc	110ce8 <morecore_area+0xc7ce8>
            env.program_header.headers = auxv[i].a_un.a_ptr;
   10ccc:	09000036 	stmdbeq	r0, {r1, r2, r4, r5}
   10cd0:	0114031d 	tsteq	r4, sp, lsl r3
   10cd4:	140d0000 	strne	r0, [sp], #-0
   10cd8:	a8092709 	stmdage	r9, {r0, r3, r8, r9, sl, sp}
   10cdc:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
   10ce0:	00003685 	andeq	r3, r0, r5, lsl #13
   10ce4:	81122809 	tsthi	r2, r9, lsl #16
   10ce8:	00000000 	andeq	r0, r0, r0
            break;
   10cec:	6e69700f 	cdpvs	0, 6, cr7, cr9, cr15, {0}
            seL4_BootInfo *bootinfo = auxv[i].a_un.a_ptr;
   10cf0:	12290900 	eorne	r0, r9, #0, 18
   10cf4:	00000081 	andeq	r0, r0, r1, lsl #1
   10cf8:	4e000e04 	cdpmi	14, 0, cr0, cr0, cr4, {0}
   10cfc:	2a090000 	bcs	250d04 <__bss_end__+0x107cbc>
   10d00:	00008112 	andeq	r8, r0, r2, lsl r1
   10d04:	670e0800 	strvs	r0, [lr, -r0, lsl #16]
            if (bootinfo == SEL4RUNTIME_NULL) {
   10d08:	09000023 	stmdbeq	r0, {r0, r1, r5}
   10d0c:	0081122b 	addeq	r1, r1, fp, lsr #4
   10d10:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
            env.bootinfo = bootinfo;
   10d14:	00003390 	muleq	r0, r0, r3
   10d18:	81122c09 	tsthi	r2, r9, lsl #24
   10d1c:	10000000 	andne	r0, r0, r0
   10d20:	09140d00 	ldmdbeq	r4, {r8, sl, fp}
            env.initial_thread_ipc_buffer = bootinfo->ipcBuffer;
   10d24:	01f3092e 	mvnseq	r0, lr, lsr #18
   10d28:	310e0000 	mrscc	r0, (UNDEF: 14)
   10d2c:	0900002f 	stmdbeq	r0, {r0, r1, r2, r3, r5}
   10d30:	0081122f 	addeq	r1, r1, pc, lsr #4
   10d34:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
            env.initial_thread_tcb = seL4_CapInitThreadTCB;
   10d38:	000035ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   10d3c:	81123009 	tsthi	r2, r9
   10d40:	04000000 	streq	r0, [r0], #-0
   10d44:	002b350e 	eoreq	r3, fp, lr, lsl #10
            break;
   10d48:	12310900 	eorsne	r0, r1, #0, 18
            env.initial_thread_ipc_buffer = auxv[i].a_un.a_ptr;
   10d4c:	00000081 	andeq	r0, r0, r1, lsl #1
   10d50:	42cf0e08 	sbcmi	r0, pc, #8, 28	; 0x80
   10d54:	32090000 	andcc	r0, r9, #0
   10d58:	00008112 	andeq	r8, r0, r2, lsl r1
   10d5c:	900e0c00 	andls	r0, lr, r0, lsl #24
   10d60:	09000033 	stmdbeq	r0, {r0, r1, r4, r5}
   10d64:	00811233 	addeq	r1, r1, r3, lsr r2
   10d68:	00100000 	andseq	r0, r0, r0
            break;
   10d6c:	3509040d 	strcc	r0, [r9, #-1037]	; 0xfffffbf3
            env.initial_thread_tcb = auxv[i].a_un.a_val;
   10d70:	00020a09 	andeq	r0, r2, r9, lsl #20
   10d74:	34970e00 	ldrcc	r0, [r7], #3584	; 0xe00
   10d78:	36090000 	strcc	r0, [r9], -r0
   10d7c:	00008112 	andeq	r8, r0, r2, lsl r1
   10d80:	0d000000 	stceq	0, cr0, [r0, #-0]
   10d84:	09380908 	ldmdbeq	r8!, {r3, r8, fp}
   10d88:	0000022e 	andeq	r0, r0, lr, lsr #4
   10d8c:	0034970e 	eorseq	r9, r4, lr, lsl #14
   10d90:	12390900 	eorsne	r0, r9, #0, 18
            break;
   10d94:	00000081 	andeq	r0, r0, r1, lsl #1
            break;
   10d98:	3e0e0e00 	cdpcc	14, 0, cr0, cr14, cr0, {0}
   10d9c:	3a090000 	bcc	250da4 <__bss_end__+0x107d5c>
                break;
   10da0:	00008112 	andeq	r8, r0, r2, lsl r1
    for (int i = 0; auxv[i].a_type != AT_NULL; i++) {
   10da4:	0d000400 	cfstrseq	mvf0, [r0, #-0]
   10da8:	093c090c 	ldmdbeq	ip!, {r2, r3, r8, fp}
   10dac:	0000025f 	andeq	r0, r0, pc, asr r2
   10db0:	0034970e 	eorseq	r9, r4, lr, lsl #14
   10db4:	123d0900 	eorsne	r0, sp, #0, 18
   10db8:	00000081 	andeq	r0, r0, r1, lsl #1
   10dbc:	3e0e0e00 	cdpcc	14, 0, cr0, cr14, cr0, {0}
   10dc0:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
   10dc4:	00008112 	andeq	r8, r0, r2, lsl r1
   10dc8:	070e0400 	streq	r0, [lr, -r0, lsl #8]
}
   10dcc:	09000029 	stmdbeq	r0, {r0, r3, r5}
   10dd0:	0081123f 	addeq	r1, r1, pc, lsr r2
   10dd4:	00080000 	andeq	r0, r8, r0
   10dd8:	26091410 			; <UNDEFINED> instruction: 0x26091410
   10ddc:	0002b105 	andeq	fp, r2, r5, lsl #2
{
   10de0:	36851100 	strcc	r1, [r5], r0, lsl #2
   10de4:	2d090000 	stccs	0, cr0, [r9, #-0]
   10de8:	00015d0b 	andeq	r5, r1, fp, lsl #26
    for (sel4runtime_size_t h = 0; h < env.program_header.count; h++) {
   10dec:	736d1200 	cmnvc	sp, #0, 4
   10df0:	34090069 	strcc	r0, [r9], #-105	; 0xffffff97
   10df4:	0001a80b 	andeq	sl, r1, fp, lsl #16
        Elf_Phdr *header = &env.program_header.headers[h];
   10df8:	72691200 	rsbvc	r1, r9, #0, 4
   10dfc:	37090071 	smlsdxcc	r9, r1, r0, r0
   10e00:	0001f30b 	andeq	pc, r1, fp, lsl #6
   10e04:	3e0e1100 	adfcce	f1, f6, f0
   10e08:	3b090000 	blcc	250e10 <__bss_end__+0x107dc8>
   10e0c:	00020a0b 	andeq	r0, r2, fp, lsl #20
   10e10:	70631200 	rsbvc	r1, r3, r0, lsl #4
        switch (header->p_type) {
   10e14:	40090075 	andmi	r0, r9, r5, ror r0
   10e18:	00022e0b 	andeq	r2, r2, fp, lsl #28
   10e1c:	29191100 	ldmdbcs	r9, {r8, ip}
   10e20:	41090000 	mrsmi	r0, (UNDEF: 9)
            load_tls_data(header);
   10e24:	0000880f 	andeq	r8, r0, pc, lsl #16
   10e28:	180d0000 	stmdane	sp, {}	; <UNPREDICTABLE>
            break;
   10e2c:	ce092409 	cdpgt	4, 0, cr2, cr9, cr9, {0}
            break;
   10e30:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    for (sel4runtime_size_t h = 0; h < env.program_header.count; h++) {
   10e34:	0000038d 	andeq	r0, r0, sp, lsl #7
   10e38:	51102509 	tstpl	r0, r9, lsl #10
   10e3c:	00000001 	andeq	r0, r0, r1
   10e40:	00025f13 	andeq	r5, r2, r3, lsl pc
   10e44:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
   10e48:	000030be 	strheq	r3, [r0], -lr
   10e4c:	b1034309 	tstlt	r3, r9, lsl #6
   10e50:	02000002 	andeq	r0, r0, #2
   10e54:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
}
   10e58:	2b090000 	blcs	250e60 <__bss_end__+0x107e18>
   10e5c:	0a000019 	beq	10ec8 <load_tls_data+0x60>
   10e60:	00de0e7b 	sbcseq	r0, lr, fp, ror lr
   10e64:	00090000 	andeq	r0, r9, r0
{
   10e68:	0a000019 	beq	10ed4 <load_tls_data+0x6c>
   10e6c:	002c0c7c 	eoreq	r0, ip, ip, ror ip
   10e70:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
   10e74:	0a000017 	beq	10ed8 <load_tls_data+0x70>
    env.tls.image = (void *) header->p_vaddr;
   10e78:	002c147c 	eoreq	r1, ip, ip, ror r4
   10e7c:	18090000 	stmdane	r9, {}	; <UNPREDICTABLE>
   10e80:	0a000017 	beq	10ee4 <load_tls_data+0x7c>
   10e84:	002c1c7c 	eoreq	r1, ip, ip, ror ip
   10e88:	040a0000 	streq	r0, [sl], #-0
   10e8c:	000000de 	ldrdeq	r0, [r0], -lr
    if (header->p_align > MIN_ALIGN_BYTES) {
   10e90:	00428004 	subeq	r8, r2, r4
   10e94:	0f2b0b00 	svceq	0x002b0b00
   10e98:	00000323 	andeq	r0, r0, r3, lsr #6
   10e9c:	0329040a 			; <UNDEFINED> instruction: 0x0329040a
        env.tls.align = header->p_align;
   10ea0:	2c140000 	ldccs	0, cr0, [r4], {-0}
   10ea4:	47000000 	strmi	r0, [r0, -r0]
   10ea8:	15000003 	strne	r0, [r0, #-3]
   10eac:	000002ce 	andeq	r0, r0, lr, asr #5
   10eb0:	00002515 	andeq	r2, r0, r5, lsl r5
   10eb4:	00751500 	rsbseq	r1, r5, r0, lsl #10
        env.tls.align = MIN_ALIGN_BYTES;
   10eb8:	88150000 	ldmdahi	r5, {}	; <UNPREDICTABLE>
   10ebc:	00000000 	andeq	r0, r0, r0
   10ec0:	00429104 	subeq	r9, r2, r4, lsl #2
   10ec4:	0f260300 	svceq	0x00260300
    env.tls.image_size = header->p_filesz;
   10ec8:	00000353 	andeq	r0, r0, r3, asr r3
   10ecc:	0359040a 	cmpeq	r9, #167772160	; 0xa000000
   10ed0:	2c140000 	ldccs	0, cr0, [r4], {-0}
   10ed4:	7c000000 	stcvc	0, cr0, [r0], {-0}
   10ed8:	15000003 	strne	r0, [r0, #-3]
    env.tls.memory_size = ROUND_UP(header->p_memsz, header->p_align);
   10edc:	000000de 	ldrdeq	r0, [r0], -lr
   10ee0:	00002c15 	andeq	r2, r0, r5, lsl ip
   10ee4:	002c1500 	eoreq	r1, ip, r0, lsl #10
   10ee8:	17150000 	ldrne	r0, [r5, -r0]
   10eec:	15000003 	strne	r0, [r0, #-3]
   10ef0:	00000088 	andeq	r0, r0, r8, lsl #1
   10ef4:	420b1600 	andmi	r1, fp, #0, 12
   10ef8:	03080000 	movweq	r0, #32768	; 0x8000
   10efc:	03a4102c 			; <UNDEFINED> instruction: 0x03a4102c
   10f00:	fd0e0000 	stc2	0, cr0, [lr, #-0]
   10f04:	03000044 	movweq	r0, #68	; 0x44
   10f08:	03110c30 	tsteq	r1, #48, 24	; 0x3000
   10f0c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   10f10:	000041dc 	ldrdeq	r4, [r0], -ip
   10f14:	471b3203 	ldrmi	r3, [fp, -r3, lsl #4]
   10f18:	04000003 	streq	r0, [r0], #-3
   10f1c:	43110400 	tstmi	r1, #0, 8
   10f20:	33030000 	movwcc	r0, #12288	; 0x3000
   10f24:	00037c03 	andeq	r7, r3, r3, lsl #24
   10f28:	04071700 	streq	r1, [r7], #-1792	; 0xfffff900
   10f2c:	00000025 	andeq	r0, r0, r5, lsr #32
   10f30:	d70e1f04 	strle	r1, [lr, -r4, lsl #30]
   10f34:	0c000003 	stceq	0, cr0, [r0], {3}
   10f38:	000041cc 	andeq	r4, r0, ip, asr #3
   10f3c:	41990c00 	orrsmi	r0, r9, r0, lsl #24
   10f40:	0c010000 	stceq	0, cr0, [r1], {-0}
   10f44:	00004374 	andeq	r4, r0, r4, ror r3
   10f48:	43420c02 	movtmi	r0, #11266	; 0x2c02
    env.tls.region_size = tls_region_size(
   10f4c:	00030000 	andeq	r0, r3, r0
   10f50:	25040717 	strcs	r0, [r4, #-1815]	; 0xfffff8e9
   10f54:	04000000 	streq	r0, [r0], #-0
   10f58:	04040e26 	streq	r0, [r4], #-3622	; 0xfffff1da
   10f5c:	e70c0000 	str	r0, [ip, -r0]
   10f60:	00000042 	andeq	r0, r0, r2, asr #32
   10f64:	0041c80c 	subeq	ip, r1, ip, lsl #16
   10f68:	950c0100 	strls	r0, [ip, #-256]	; 0xffffff00
   10f6c:	02000041 	andeq	r0, r0, #65	; 0x41
   10f70:	0043700c 	subeq	r7, r3, ip
   10f74:	3e0c0300 	cdpcc	3, 0, cr0, cr12, cr0, {0}
   10f78:	04000043 	streq	r0, [r0], #-67	; 0xffffffbd
   10f7c:	00de1800 	sbcseq	r1, lr, r0, lsl #16
}
   10f80:	04140000 	ldreq	r0, [r4], #-0
   10f84:	25190000 	ldrcs	r0, [r9, #-0]
   10f88:	01000000 	mrseq	r0, (UNDEF: 0)
{
   10f8c:	43561a00 	cmpmi	r6, #0, 20
   10f90:	85040000 	strhi	r0, [r4, #-0]
    if (env.tls.region_size <= sizeof(static_tls)) {
   10f94:	00040407 	andeq	r0, r4, r7, lsl #8
   10f98:	68030500 	stmdavs	r3, {r8, sl}
   10f9c:	1b0002c7 	blne	11ac0 <__sel4runtime_memcpy+0x24c>
   10fa0:	00004468 	andeq	r4, r0, r8, ror #8
   10fa4:	a4018904 	strge	r8, [r1], #-2308	; 0xfffff6fc
        sel4runtime_move_initial_tls(static_tls);
   10fa8:	05000003 	streq	r0, [r0, #-3]
   10fac:	02c77003 	sbceq	r7, r7, #3
   10fb0:	442a1a00 	strtmi	r1, [sl], #-2560	; 0xfffff600
}
   10fb4:	89040000 	stmdbhi	r4, {}	; <UNPREDICTABLE>
   10fb8:	00044a01 	andeq	r4, r4, r1, lsl #20
{
   10fbc:	e0030500 	and	r0, r3, r0, lsl #10
   10fc0:	0a0002c8 	beq	11ae8 <__sel4runtime_memcpy+0x274>
   10fc4:	0003a404 	andeq	sl, r3, r4, lsl #8
   10fc8:	44381c00 	ldrtmi	r1, [r8], #-3072	; 0xfffff400
    unsigned char *tls = tls_from_tls_region(tls_region);
   10fcc:	30040000 	andcc	r0, r4, r0
   10fd0:	00002c0c 	andeq	r2, r0, ip, lsl #24
   10fd4:	019dd800 	orrseq	sp, sp, r0, lsl #16
    __sel4runtime_memcpy(tls, env.tls.image, env.tls.image_size);
   10fd8:	0004e400 	andeq	lr, r4, r0, lsl #8
   10fdc:	df9c0100 	svcle	0x009c0100
   10fe0:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
   10fe4:	00004183 	andeq	r4, r0, r3, lsl #3
   10fe8:	de2d3004 	cdple	0, 2, cr3, cr13, cr4, {0}
   10fec:	03000000 	movweq	r0, #0
   10ff0:	1d7f9491 	cfldrdne	mvd9, [pc, #-580]!	; 10db4 <parse_auxv+0x1b8>
   10ff4:	00004879 	andeq	r4, r0, r9, ror r8
   10ff8:	2c3b3004 	ldccs	0, cr3, [fp], #-16
    unsigned char *tbss = &tls[env.tls.image_size];
   10ffc:	03000000 	movweq	r0, #0
   11000:	1d7f9091 	ldclne	0, cr9, [pc, #-580]!	; 10dc4 <parse_auxv+0x1c8>
   11004:	000042be 			; <UNDEFINED> instruction: 0x000042be
   11008:	2c4c3004 	mcrrcs	0, 0, r3, ip, cr4
   1100c:	03000000 	movweq	r0, #0
   11010:	1d7f8c91 	ldclne	12, cr8, [pc, #-580]!	; 10dd4 <parse_auxv+0x1d8>
    __sel4runtime_memset(tbss, 0, env.tls.memory_size - env.tls.image_size);
   11014:	00004d27 	andeq	r4, r0, r7, lsr #26
   11018:	17383104 	ldrne	r3, [r8, -r4, lsl #2]!
   1101c:	03000003 	movweq	r0, #3
   11020:	1d7f8891 	ldclne	8, cr8, [pc, #-580]!	; 10de4 <parse_phdrs+0x4>
   11024:	00003d31 	andeq	r3, r0, r1, lsr sp
   11028:	88483104 	stmdahi	r8, {r2, r8, ip, sp}^
   1102c:	02000000 	andeq	r0, r0, #0
   11030:	1e1b0091 	mrcne	0, 0, r0, cr11, cr1, {4}
   11034:	04000043 	streq	r0, [r0], #-67	; 0xffffffbd
   11038:	05df0a33 	ldrbeq	r0, [pc, #2611]	; 11a73 <__sel4runtime_memcpy+0x1ff>
   1103c:	91030000 	mrsls	r0, (UNDEF: 3)
    thread_lookup_t *lookup = thread_lookup_from_tls_region(tls_region);
   11040:	8c1b7fb7 	ldchi	15, cr7, [fp], {183}	; 0xb7
   11044:	04000041 	streq	r0, [r0], #-65	; 0xffffffbf
   11048:	002c0934 	eoreq	r0, ip, r4, lsr r9
    if (lookup != SEL4RUNTIME_NULL) {
   1104c:	91030000 	mrsls	r0, (UNDEF: 3)
   11050:	fb1b7fb0 	blx	6f0f1a <__bss_end__+0x5a7ed2>
   11054:	04000041 	streq	r0, [r0], #-65	; 0xffffffbf
        lookup->tls_base = tls_base_from_tls_region(tls_region);
   11058:	05e61135 	strbeq	r1, [r6, #309]!	; 0x135
   1105c:	91020000 	mrsls	r0, (UNDEF: 2)
   11060:	1ab61e60 	bne	fed989e8 <__bss_end__+0xfec4f9a0>
   11064:	05fd0000 	ldrbeq	r0, [sp, #0]!
   11068:	03050000 	movweq	r0, #20480	; 0x5000
}
   1106c:	000297c8 	andeq	r9, r2, r8, asr #15
   11070:	0042d61b 	subeq	sp, r2, fp, lsl r6
   11074:	09370400 	ldmdbeq	r7!, {sl}
{
   11078:	0000002c 	andeq	r0, r0, ip, lsr #32
   1107c:	1b5c9102 	blne	173548c <__bss_end__+0x15ec444>
   11080:	00004413 	andeq	r4, r0, r3, lsl r4
   11084:	2c093d04 	stccs	13, cr3, [r9], {4}
    sel4runtime_uintptr_t tls_base = (sel4runtime_uintptr_t)tls_region;
   11088:	02000000 	andeq	r0, r0, #0
   1108c:	531b5891 	tstpl	fp, #9502720	; 0x910000
    return ROUND_UP(tls_base, env.tls.align);
   11090:	04000044 	streq	r0, [r0], #-68	; 0xffffffbc
   11094:	05e61142 	strbeq	r1, [r6, #322]!	; 0x142
   11098:	91020000 	mrsls	r0, (UNDEF: 2)
   1109c:	432a1b54 			; <UNDEFINED> instruction: 0x432a1b54
   110a0:	47040000 	strmi	r0, [r4, -r0]
   110a4:	0000620e 	andeq	r6, r0, lr, lsl #4
   110a8:	50910200 	addspl	r0, r1, r0, lsl #4
   110ac:	0043011b 	subeq	r0, r3, fp, lsl r1
   110b0:	094d0400 	stmdbeq	sp, {sl}^
   110b4:	0000002c 	andeq	r0, r0, ip, lsr #32
   110b8:	1b4c9102 	blne	13354c8 <__bss_end__+0x11ec480>
   110bc:	000042a7 	andeq	r4, r0, r7, lsr #5
   110c0:	2c094e04 	stccs	14, cr4, [r9], {4}
   110c4:	02000000 	andeq	r0, r0, #0
   110c8:	081f4891 	ldmdaeq	pc, {r0, r4, r7, fp, lr}	; <UNPREDICTABLE>
   110cc:	a40001a0 	strge	r0, [r0], #-416	; 0xfffffe60
   110d0:	20000002 	andcs	r0, r0, r2
   110d4:	52040069 	andpl	r0, r4, #105	; 0x69
   110d8:	00002c0e 	andeq	r2, r0, lr, lsl #24
   110dc:	6c910200 	lfmvs	f0, 4, [r1], {0}
   110e0:	01a0141f 	lsleq	r1, pc, r4
   110e4:	00027c00 	andeq	r7, r2, r0, lsl #24
   110e8:	43081b00 	movwmi	r1, #35584	; 0x8b00
   110ec:	53040000 	movwpl	r0, #16384	; 0x4000
   110f0:	0002ce12 	andeq	ip, r2, r2, lsl lr
}
   110f4:	98910300 	ldmls	r1, {r8, r9}
   110f8:	42e21b7f 	rscmi	r1, r2, #130048	; 0x1fc00
   110fc:	54040000 	strpl	r0, [r4], #-0
{
   11100:	0005e615 	andeq	lr, r5, r5, lsl r6
   11104:	44910200 	ldrmi	r0, [r1], #512	; 0x200
   11108:	002e5a1b 	eoreq	r5, lr, fp, lsl sl
   1110c:	12550400 	subsne	r0, r5, #0, 8
    sel4runtime_uintptr_t tls_addr = tls_base;
   11110:	00000062 	andeq	r0, r0, r2, rrx
   11114:	20689102 	rsbcs	r9, r8, r2, lsl #2
    tls_addr +=  GAP_ABOVE_TP;
   11118:	00717269 	rsbseq	r7, r1, r9, ror #4
   1111c:	62125604 	andsvs	r5, r2, #4, 12	; 0x400000
   11120:	02000000 	andeq	r0, r0, #0
    return (unsigned char *)tls_addr;
   11124:	841b6491 	ldrhi	r6, [fp], #-1169	; 0xfffffb6f
}
   11128:	04000043 	streq	r0, [r0], #-67	; 0xffffffbd
   1112c:	00621957 	rsbeq	r1, r2, r7, asr r9
   11130:	91020000 	mrsls	r0, (UNDEF: 2)
   11134:	43f91b40 	mvnsmi	r1, #64, 22	; 0x10000
{
   11138:	58040000 	stmdapl	r4, {}	; <UNPREDICTABLE>
   1113c:	00006219 	andeq	r6, r0, r9, lsl r2
   11140:	bc910300 	ldclt	3, cr0, [r1], {0}
   11144:	3fed1b7f 	svccc	0x00ed1b7f
    return tls_from_tls_base(tls_base_from_tls_region(tls_region));
   11148:	7c040000 	stcvc	0, cr0, [r4], {-0}
   1114c:	00002c0d 	andeq	r2, r0, sp, lsl #24
   11150:	b8910300 	ldmlt	r1, {r8, r9}
   11154:	0000007f 	andeq	r0, r0, pc, ror r0
   11158:	c9020102 	stmdbgt	r2, {r1, r8}
   1115c:	0a00001b 	beq	111d0 <tls_region_size+0x40>
}
   11160:	0005ec04 	andeq	lr, r5, r4, lsl #24
   11164:	a3182100 	tstge	r8, #0, 2
   11168:	fd000000 	stc2	0, cr0, [r0, #-0]
{
   1116c:	19000005 	stmdbne	r0, {r0, r2}
   11170:	00000025 	andeq	r0, r0, r5, lsr #32
   11174:	ed08001a 	stc	0, cr0, [r8, #-104]	; 0xffffff98
   11178:	1c000005 	stcne	0, cr0, [r0], {5}
    return SEL4RUNTIME_NULL;
   1117c:	000041f7 	strdeq	r4, [r0], -r7
}
   11180:	e61b3d03 	ldr	r3, [fp], -r3, lsl #26
   11184:	ac000005 	stcge	0, cr0, [r0], {5}
   11188:	2c00019c 	stfcss	f0, [r0], {156}	; 0x9c
   1118c:	01000001 	tsteq	r0, r1
{
   11190:	0006779c 	muleq	r6, ip, r7
   11194:	41831d00 	orrmi	r1, r3, r0, lsl #26
   11198:	3d030000 	stccc	0, cr0, [r3, #-0]
   1119c:	0000de35 	andeq	sp, r0, r5, lsr lr
   111a0:	6c910200 	lfmvs	f0, 4, [r1], {0}
           + ROUND_UP(sizeof(thread_lookup_t), align)
   111a4:	0048791d 	subeq	r7, r8, sp, lsl r9
   111a8:	433d0300 	teqmi	sp, #0, 6
   111ac:	0000002c 	andeq	r0, r0, ip, lsr #32
   111b0:	1d689102 	stfnep	f1, [r8, #-8]!
   111b4:	0000431e 	andeq	r4, r0, lr, lsl r3
   111b8:	77563d03 	ldrbvc	r3, [r6, -r3, lsl #26]
   111bc:	02000006 	andeq	r0, r0, #6
   111c0:	8c1d6491 	cfldrshi	mvf6, [sp], {145}	; 0x91
   111c4:	03000041 	movweq	r0, #65	; 0x41
   111c8:	067d683d 			; <UNDEFINED> instruction: 0x067d683d
   111cc:	91020000 	mrsls	r0, (UNDEF: 2)
   111d0:	1ab61e60 	bne	fed98b58 <__bss_end__+0xfec4fb10>
   111d4:	06930000 	ldreq	r0, [r3], r0
   111d8:	03050000 	movweq	r0, #20480	; 0x5000
   111dc:	000297e4 	andeq	r9, r2, r4, ror #15
   111e0:	0041fb1b 	subeq	pc, r1, fp, lsl fp	; <UNPREDICTABLE>
   111e4:	11400300 	mrsne	r0, SPSR_irq
   111e8:	000005e6 	andeq	r0, r0, r6, ror #11
   111ec:	00749102 	rsbseq	r9, r4, r2, lsl #2
   111f0:	05df040a 	ldrbeq	r0, [pc, #1034]	; 11602 <__sel4runtime_memset+0x11a>
   111f4:	040a0000 	streq	r0, [sl], #-0
   111f8:	0000002c 	andeq	r0, r0, ip, lsr #32
   111fc:	0000a318 	andeq	sl, r0, r8, lsl r3
   11200:	00069300 	andeq	r9, r6, r0, lsl #6
   11204:	00251900 	eoreq	r1, r5, r0, lsl #18
           + ROUND_UP(GAP_ABOVE_TP, align)
   11208:	00130000 	andseq	r0, r3, r0
   1120c:	00068308 	andeq	r8, r6, r8, lsl #6
   11210:	41ee1c00 	mvnmi	r1, r0, lsl #24
   11214:	a7020000 	strge	r0, [r2, -r0]
   11218:	00006218 	andeq	r6, r0, r8, lsl r2
   1121c:	019c6c00 	orrseq	r6, ip, r0, lsl #24
   11220:	00004000 	andeq	r4, r0, r0
   11224:	cd9c0100 	ldfgts	f0, [ip]
   11228:	22000006 	andcs	r0, r0, #6
   1122c:	a7020070 	smlsdxge	r2, r0, r0, r0
   11230:	0006cd30 	andeq	ip, r6, r0, lsr sp
   11234:	6c910200 	lfmvs	f0, 4, [r1], {0}
   11238:	02007620 	andeq	r7, r0, #32, 12	; 0x2000000
   1123c:	00f70aa9 	rscseq	r0, r7, r9, lsr #21
   11240:	91020000 	mrsls	r0, (UNDEF: 2)
   11244:	040a0074 	streq	r0, [sl], #-116	; 0xffffff8c
   11248:	00000103 	andeq	r0, r0, r3, lsl #2
   1124c:	00417623 	subeq	r7, r1, r3, lsr #12
   11250:	185e0100 	ldmdane	lr, {r8}^
   11254:	00000062 	andeq	r0, r0, r2, rrx
   11258:	00019c08 	andeq	r9, r1, r8, lsl #24
   1125c:	00000064 	andeq	r0, r0, r4, rrx
   11260:	78229c01 	stmdavc	r2!, {r0, sl, fp, ip, pc}
   11264:	2d5e0100 	ldfcse	f0, [lr, #-0]
           + ROUND_UP(mem_size, align);
   11268:	000000f7 	strdeq	r0, [r0], -r7
   1126c:	00749102 	rsbseq	r9, r4, r2, lsl #2
   11270:	0005e400 	andeq	lr, r5, r0, lsl #8
   11274:	71000400 	tstvc	r0, r0, lsl #8
   11278:	04000036 	streq	r0, [r0], #-54	; 0xffffffca
   1127c:	00011701 	andeq	r1, r1, r1, lsl #14
   11280:	44720c00 	ldrbtmi	r0, [r2], #-3072	; 0xfffff400
   11284:	005f0000 	subseq	r0, pc, r0
   11288:	a2bc0000 	adcsge	r0, ip, #0
   1128c:	03680001 	cmneq	r8, #1
   11290:	82940000 	addshi	r0, r4, #0
   11294:	04020000 	streq	r0, [r2], #-0
   11298:	0003c507 	andeq	ip, r3, r7, lsl #10
   1129c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
   112a0:	00746e69 	rsbseq	r6, r4, r9, ror #28
   112a4:	2e060102 	adfcss	f0, f6, f2
   112a8:	02000003 	andeq	r0, r0, #3
   112ac:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
   112b0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   112b4:	00010905 	andeq	r0, r1, r5, lsl #18
   112b8:	27570400 	ldrbcs	r0, [r7, -r0, lsl #8]
   112bc:	ab050000 	blge	1512c4 <__bss_end__+0x827c>
   112c0:	00005419 	andeq	r5, r0, r9, lsl r4
   112c4:	08010200 	stmdaeq	r1, {r9}
}
   112c8:	0000032c 	andeq	r0, r0, ip, lsr #6
   112cc:	52070202 	andpl	r0, r7, #536870912	; 0x20000000
   112d0:	04000003 	streq	r0, [r0], #-3
{
   112d4:	0000058e 	andeq	r0, r0, lr, lsl #11
   112d8:	2519b505 	ldrcs	fp, [r9, #-1285]	; 0xfffffafb
    env.tls.image = SEL4RUNTIME_NULL;
   112dc:	02000000 	andeq	r0, r0, #0
   112e0:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
   112e4:	2f040000 	svccs	0x00040000
   112e8:	0500000a 	streq	r0, [r0, #-10]
    env.tls.align = MIN_ALIGN_BYTES;
   112ec:	0025186e 	eoreq	r1, r5, lr, ror #16
   112f0:	04020000 	streq	r0, [r2], #-0
   112f4:	00010e05 	andeq	r0, r1, r5, lsl #28
   112f8:	06040500 	streq	r0, [r4], -r0, lsl #10
    env.tls.image_size = 0;
   112fc:	0000022a 	andeq	r0, r0, sl, lsr #4
   11300:	19016d05 	stmdbne	r1, {r0, r2, r8, sl, fp, sp, lr}
   11304:	00000097 	muleq	r0, r7, r0
   11308:	00022607 	andeq	r2, r2, r7, lsl #12
    env.tls.memory_size = 0;
   1130c:	08010200 	stmdaeq	r1, {r9}
   11310:	00000335 	andeq	r0, r0, r5, lsr r3
   11314:	00009c08 	andeq	r9, r0, r8, lsl #24
   11318:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    env.tls.region_size = tls_region_size(
   1131c:	000015f8 	strdeq	r1, [r0], -r8
   11320:	00022f09 	andeq	r2, r2, r9, lsl #30
   11324:	14370600 	ldrtne	r0, [r7], #-1536	; 0xfffffa00
   11328:	000000c1 	andeq	r0, r0, r1, asr #1
   1132c:	008a040a 	addeq	r0, sl, sl, lsl #8
   11330:	bb080000 	bllt	211338 <__bss_end__+0xc82f0>
   11334:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   11338:	0000023c 	andeq	r0, r0, ip, lsr r2
   1133c:	c1143806 	tstgt	r4, r6, lsl #16
   11340:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   11344:	00000235 	andeq	r0, r0, r5, lsr r2
   11348:	c1143906 	tstgt	r4, r6, lsl #18
   1134c:	0a000000 	beq	11354 <empty_tls+0x80>
}
   11350:	00009c04 	andeq	r9, r0, r4, lsl #24
   11354:	189c0900 	ldmne	ip, {r8, fp}
{
   11358:	f8070000 			; <UNDEFINED> instruction: 0xf8070000
   1135c:	00002c0c 	andeq	r2, r0, ip, lsl #24
    return env.initial_thread_tls_base == (sel4runtime_uintptr_t)SEL4RUNTIME_NULL
   11360:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
   11364:	000015f3 	strdeq	r1, [r0], -r3
   11368:	0042b604 	subeq	fp, r2, r4, lsl #12
           || sel4runtime_get_tls_base() == env.initial_thread_tls_base;
   1136c:	1e490100 	dvfnee	f0, f1, f0
   11370:	00000062 	andeq	r0, r0, r2, rrx
   11374:	0000f708 	andeq	pc, r0, r8, lsl #14
   11378:	17320900 	ldrne	r0, [r2, -r0, lsl #18]!
   1137c:	10080000 	andne	r0, r8, r0
   11380:	00002c1a 	andeq	r2, r0, sl, lsl ip
   11384:	2e5a0b00 	vnmlscs.f64	d16, d10, d0
   11388:	04070000 	streq	r0, [r7], #-0
   1138c:	00000025 	andeq	r0, r0, r5, lsr #32
   11390:	510e1509 	tstpl	lr, r9, lsl #10
   11394:	0c000001 	stceq	0, cr0, [r0], {1}
   11398:	000024d9 	ldrdeq	r2, [r0], -r9
}
   1139c:	2bfb0c00 	blcs	ffed43a4 <__bss_end__+0xffd8b35c>
   113a0:	0c010000 	stceq	0, cr0, [r1], {-0}
{
   113a4:	0000290f 	andeq	r2, r0, pc, lsl #18
   113a8:	2fce0c02 	svccs	0x00ce0c02
   113ac:	0c030000 	stceq	0, cr0, [r3], {-0}
          - &__preinit_array_start[0];
   113b0:	00002e0e 	andeq	r2, r0, lr, lsl #28
   113b4:	28fc0c04 	ldmcs	ip!, {r2, sl, fp}^
   113b8:	0c050000 	stceq	0, cr0, [r5], {-0}
   113bc:	00002c84 	andeq	r2, r0, r4, lsl #25
   113c0:	7a040006 	bvc	1113e0 <morecore_area+0xc83e0>
    int preinit_array_len
   113c4:	09000036 	stmdbeq	r0, {r1, r2, r4, r5}
   113c8:	0114031d 	tsteq	r4, sp, lsl r3
    for (int f = 0; f < preinit_array_len; f++) {
   113cc:	140d0000 	strne	r0, [sp], #-0
   113d0:	a8092709 	stmdage	r9, {r0, r3, r8, r9, sl, sp}
   113d4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
        __preinit_array_start[f]();
   113d8:	00003685 	andeq	r3, r0, r5, lsl #13
   113dc:	81122809 	tsthi	r2, r9, lsl #16
   113e0:	00000000 	andeq	r0, r0, r0
   113e4:	6e69700f 	cdpvs	0, 6, cr7, cr9, cr15, {0}
   113e8:	12290900 	eorne	r0, r9, #0, 18
    for (int f = 0; f < preinit_array_len; f++) {
   113ec:	00000081 	andeq	r0, r0, r1, lsl #1
   113f0:	4e000e04 	cdpmi	14, 0, cr0, cr0, cr4, {0}
   113f4:	2a090000 	bcs	2513fc <__bss_end__+0x1083b4>
   113f8:	00008112 	andeq	r8, r0, r2, lsl r1
   113fc:	670e0800 	strvs	r0, [lr, -r0, lsl #16]
   11400:	09000023 	stmdbeq	r0, {r0, r1, r5}
   11404:	0081122b 	addeq	r1, r1, fp, lsr #4
    _init();
   11408:	0e0c0000 	cdpeq	0, 0, cr0, cr12, cr0, {0}
          - &__init_array_start[0];
   1140c:	00003390 	muleq	r0, r0, r3
   11410:	81122c09 	tsthi	r2, r9, lsl #24
   11414:	10000000 	andne	r0, r0, r0
   11418:	09140d00 	ldmdbeq	r4, {r8, sl, fp}
   1141c:	01f3092e 	mvnseq	r0, lr, lsr #18
    int init_array_len
   11420:	310e0000 	mrscc	r0, (UNDEF: 14)
   11424:	0900002f 	stmdbeq	r0, {r0, r1, r2, r3, r5}
    for (int f = 0; f < init_array_len; f++) {
   11428:	0081122f 	addeq	r1, r1, pc, lsr #4
   1142c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   11430:	000035ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
        __init_array_start[f]();
   11434:	81123009 	tsthi	r2, r9
   11438:	04000000 	streq	r0, [r0], #-0
   1143c:	002b350e 	eoreq	r3, fp, lr, lsl #10
   11440:	12310900 	eorsne	r0, r1, #0, 18
   11444:	00000081 	andeq	r0, r0, r1, lsl #1
    for (int f = 0; f < init_array_len; f++) {
   11448:	42cf0e08 	sbcmi	r0, pc, #8, 28	; 0x80
   1144c:	32090000 	andcc	r0, r9, #0
   11450:	00008112 	andeq	r8, r0, r2, lsl r1
   11454:	900e0c00 	andls	r0, lr, r0, lsl #24
   11458:	09000033 	stmdbeq	r0, {r0, r1, r4, r5}
   1145c:	00811233 	addeq	r1, r1, r3, lsr r2
   11460:	00100000 	andseq	r0, r0, r0
}
   11464:	3509040d 	strcc	r0, [r9, #-1037]	; 0xfffffbf3
   11468:	00020a09 	andeq	r0, r2, r9, lsl #20
   1146c:	34970e00 	ldrcc	r0, [r7], #3584	; 0xe00
   11470:	36090000 	strcc	r0, [r9], -r0
{
   11474:	00008112 	andeq	r8, r0, r2, lsl r1
   11478:	0d000000 	stceq	0, cr0, [r0, #-0]
   1147c:	09380908 	ldmdbeq	r8!, {r3, r8, fp}
          - &__fini_array_start[0];
   11480:	0000022e 	andeq	r0, r0, lr, lsr #4
   11484:	0034970e 	eorseq	r9, r4, lr, lsl #14
   11488:	12390900 	eorsne	r0, r9, #0, 18
   1148c:	00000081 	andeq	r0, r0, r1, lsl #1
   11490:	3e0e0e00 	cdpcc	14, 0, cr0, cr14, cr0, {0}
    int fini_array_len
   11494:	3a090000 	bcc	25149c <__bss_end__+0x108454>
   11498:	00008112 	andeq	r8, r0, r2, lsl r1
    for (int f = fini_array_len - 1; f >= 0; f--) {
   1149c:	0d000400 	cfstrseq	mvf0, [r0, #-0]
   114a0:	093c090c 	ldmdbeq	ip!, {r2, r3, r8, fp}
   114a4:	0000025f 	andeq	r0, r0, pc, asr r2
   114a8:	0034970e 	eorseq	r9, r4, lr, lsl #14
        __fini_array_start[f]();
   114ac:	123d0900 	eorsne	r0, sp, #0, 18
   114b0:	00000081 	andeq	r0, r0, r1, lsl #1
   114b4:	3e0e0e00 	cdpcc	14, 0, cr0, cr14, cr0, {0}
   114b8:	3e090000 	cdpcc	0, 0, cr0, cr9, cr0, {0}
   114bc:	00008112 	andeq	r8, r0, r2, lsl r1
    for (int f = fini_array_len - 1; f >= 0; f--) {
   114c0:	070e0400 	streq	r0, [lr, -r0, lsl #8]
   114c4:	09000029 	stmdbeq	r0, {r0, r3, r5}
   114c8:	0081123f 	addeq	r1, r1, pc, lsr r2
   114cc:	00080000 	andeq	r0, r8, r0
   114d0:	26091410 			; <UNDEFINED> instruction: 0x26091410
   114d4:	0002b105 	andeq	fp, r2, r5, lsl #2
    _fini();
   114d8:	36851100 	strcc	r1, [r5], r0, lsl #2
}
   114dc:	2d090000 	stccs	0, cr0, [r9, #-0]
   114e0:	00015d0b 	andeq	r5, r1, fp, lsl #26
   114e4:	736d1200 	cmnvc	sp, #0, 4
{
   114e8:	34090069 	strcc	r0, [r9], #-105	; 0xffffff97
   114ec:	0001a80b 	andeq	sl, r1, fp, lsl #16
   114f0:	72691200 	rsbvc	r1, r9, #0, 4
   114f4:	37090071 	smlsdxcc	r9, r1, r0, r0
   114f8:	0001f30b 	andeq	pc, r1, fp, lsl #6
   114fc:	3e0e1100 	adfcce	f1, f6, f0
    unsigned char *s = dest;
   11500:	3b090000 	blcc	251508 <__bss_end__+0x1084c0>
   11504:	00020a0b 	andeq	r0, r2, fp, lsl #20
    if (!n) {
   11508:	70631200 	rsbvc	r1, r3, r0, lsl #4
   1150c:	40090075 	andmi	r0, r9, r5, ror r0
   11510:	00022e0b 	andeq	r2, r2, fp, lsl #28
        return dest;
   11514:	29191100 	ldmdbcs	r9, {r8, ip}
   11518:	41090000 	mrsmi	r0, (UNDEF: 9)
    s[0] = s[n - 1] = c;
   1151c:	0000880f 	andeq	r8, r0, pc, lsl #16
   11520:	180d0000 	stmdane	sp, {}	; <UNPREDICTABLE>
   11524:	ce092409 	cdpgt	4, 0, cr2, cr9, cr9, {0}
   11528:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
   1152c:	0000038d 	andeq	r0, r0, sp, lsl #7
   11530:	51102509 	tstpl	r0, r9, lsl #10
   11534:	00000001 	andeq	r0, r0, r1
   11538:	00025f13 	andeq	r5, r2, r3, lsl pc
   1153c:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
   11540:	000030be 	strheq	r3, [r0], -lr
    if (n <= 2) {
   11544:	b1034309 	tstlt	r3, r9, lsl #6
   11548:	02000002 	andeq	r0, r0, #2
   1154c:	03c00704 	biceq	r0, r0, #4, 14	; 0x100000
        return dest;
   11550:	2b090000 	blcs	251558 <__bss_end__+0x108510>
   11554:	0a000019 	beq	115c0 <__sel4runtime_memset+0xd8>
    s[1] = s[n - 2] = c;
   11558:	00de0e7b 	sbcseq	r0, lr, fp, ror lr
   1155c:	00090000 	andeq	r0, r9, r0
   11560:	0a000019 	beq	115cc <__sel4runtime_memset+0xe4>
   11564:	002c0c7c 	eoreq	r0, ip, ip, ror ip
   11568:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
   1156c:	0a000017 	beq	115d0 <__sel4runtime_memset+0xe8>
   11570:	002c147c 	eoreq	r1, ip, ip, ror r4
   11574:	18090000 	stmdane	r9, {}	; <UNPREDICTABLE>
   11578:	0a000017 	beq	115dc <__sel4runtime_memset+0xf4>
   1157c:	002c1c7c 	eoreq	r1, ip, ip, ror ip
   11580:	040a0000 	streq	r0, [sl], #-0
    s[2] = s[n - 3] = c;
   11584:	000000de 	ldrdeq	r0, [r0], -lr
   11588:	00428004 	subeq	r8, r2, r4
   1158c:	0f2b0b00 	svceq	0x002b0b00
   11590:	00000323 	andeq	r0, r0, r3, lsr #6
   11594:	0329040a 			; <UNDEFINED> instruction: 0x0329040a
   11598:	2c140000 	ldccs	0, cr0, [r4], {-0}
   1159c:	47000000 	strmi	r0, [r0, -r0]
   115a0:	15000003 	strne	r0, [r0, #-3]
   115a4:	000002ce 	andeq	r0, r0, lr, asr #5
   115a8:	00002515 	andeq	r2, r0, r5, lsl r5
   115ac:	00751500 	rsbseq	r1, r5, r0, lsl #10
    if (n <= 6) {
   115b0:	88150000 	ldmdahi	r5, {}	; <UNPREDICTABLE>
   115b4:	00000000 	andeq	r0, r0, r0
   115b8:	00429104 	subeq	r9, r2, r4, lsl #2
        return dest;
   115bc:	0f260300 	svceq	0x00260300
   115c0:	00000353 	andeq	r0, r0, r3, asr r3
    s[3] = s[n - 4] = c;
   115c4:	0359040a 	cmpeq	r9, #167772160	; 0xa000000
   115c8:	2c140000 	ldccs	0, cr0, [r4], {-0}
   115cc:	7c000000 	stcvc	0, cr0, [r0], {-0}
   115d0:	15000003 	strne	r0, [r0, #-3]
   115d4:	000000de 	ldrdeq	r0, [r0], -lr
   115d8:	00002c15 	andeq	r2, r0, r5, lsl ip
   115dc:	002c1500 	eoreq	r1, ip, r0, lsl #10
   115e0:	17150000 	ldrne	r0, [r5, -r0]
   115e4:	15000003 	strne	r0, [r0, #-3]
   115e8:	00000088 	andeq	r0, r0, r8, lsl #1
   115ec:	420b1600 	andmi	r1, fp, #0, 12
    if (n <= 8) {
   115f0:	03080000 	movweq	r0, #32768	; 0x8000
   115f4:	03a4102c 			; <UNDEFINED> instruction: 0x03a4102c
   115f8:	fd0e0000 	stc2	0, cr0, [lr, #-0]
        return dest;
   115fc:	03000044 	movweq	r0, #68	; 0x44
   11600:	03110c30 	tsteq	r1, #48, 24	; 0x3000
    k = -(sel4runtime_uintptr_t)s & 3;
   11604:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   11608:	000041dc 	ldrdeq	r4, [r0], -ip
   1160c:	471b3203 	ldrmi	r3, [fp, -r3, lsl #4]
   11610:	04000003 	streq	r0, [r0], #-3
    s += k;
   11614:	43110400 	tstmi	r1, #0, 8
   11618:	33030000 	movwcc	r0, #12288	; 0x3000
   1161c:	00037c03 	andeq	r7, r3, r3, lsl #24
   11620:	00de1700 	sbcseq	r1, lr, r0, lsl #14
    n -= k;
   11624:	03c00000 	biceq	r0, r0, #0
   11628:	25180000 	ldrcs	r0, [r8, #-0]
   1162c:	02000000 	andeq	r0, r0, #0
   11630:	44f41900 	ldrbtmi	r1, [r4], #2304	; 0x900
    n &= -4;
   11634:	27040000 	strcs	r0, [r4, -r0]
   11638:	0003b007 	andeq	fp, r3, r7
   1163c:	78030500 	stmdavc	r3, {r8, sl}
    u32 c32 = ((u32) - 1) / 255 * (unsigned char)c;
   11640:	1a0002c7 	bne	12164 <__sel4runtime_memcpy+0x8f0>
   11644:	000044de 	ldrdeq	r4, [r0], -lr
   11648:	a4012d04 	strge	r2, [r1], #-3332	; 0xfffff2fc
   1164c:	05000003 	streq	r0, [r0, #-3]
   11650:	02c78403 	sbceq	r8, r7, #50331648	; 0x3000000
   11654:	44e71900 	strbtmi	r1, [r7], #2304	; 0x900
   11658:	2d040000 	stccs	0, cr0, [r4, #-0]
    *(u32 *)(s + 0) = c32;
   1165c:	0003f601 	andeq	pc, r3, r1, lsl #12
   11660:	e4030500 	str	r0, [r3], #-1280	; 0xfffffb00
   11664:	0a0002c8 	beq	1218c <__sel4runtime_memcpy+0x918>
    *(u32 *)(s + n - 4) = c32;
   11668:	0003a404 	andeq	sl, r3, r4, lsl #8
   1166c:	450d1b00 	strmi	r1, [sp, #-2816]	; 0xfffff500
   11670:	10040000 	andne	r0, r4, r0
   11674:	00002c0c 	andeq	r2, r0, ip, lsl #24
   11678:	01a48c00 			; <UNDEFINED> instruction: 0x01a48c00
   1167c:	00019800 	andeq	r9, r1, r0, lsl #16
    if (n <= 8) {
   11680:	cf9c0100 	svcgt	0x009c0100
   11684:	1c000004 	stcne	0, cr0, [r0], {4}
   11688:	00004183 	andeq	r4, r0, r3, lsl #3
        return dest;
   1168c:	de2c1004 	cdple	0, 2, cr1, cr12, cr4, {0}
   11690:	03000000 	movweq	r0, #0
    *(u32 *)(s + 4) = c32;
   11694:	1c7fbc91 	ldclne	12, cr11, [pc], #-580	; 11458 <__sel4runtime_run_constructors+0xb4>
   11698:	00004879 	andeq	r4, r0, r9, ror r8
   1169c:	2c3a1004 	ldccs	0, cr1, [sl], #-16
   116a0:	03000000 	movweq	r0, #0
    *(u32 *)(s + 8) = c32;
   116a4:	1c7fb891 	ldclne	8, cr11, [pc], #-580	; 11468 <__sel4runtime_run_constructors+0xc4>
   116a8:	000042be 			; <UNDEFINED> instruction: 0x000042be
   116ac:	2c4b1004 	mcrrcs	0, 0, r1, fp, cr4
   116b0:	03000000 	movweq	r0, #0
    *(u32 *)(s + n - 12) = c32;
   116b4:	1c7fb491 	cfldrdne	mvd11, [pc], #-580	; 11478 <__sel4runtime_run_destructors+0x4>
   116b8:	00004d27 	andeq	r4, r0, r7, lsr #26
   116bc:	17371104 	ldrne	r1, [r7, -r4, lsl #2]!
   116c0:	03000003 	movweq	r0, #3
   116c4:	1c7fb091 	ldclne	0, cr11, [pc], #-580	; 11488 <__sel4runtime_run_destructors+0x14>
   116c8:	00003d31 	andeq	r3, r0, r1, lsr sp
    *(u32 *)(s + n - 8) = c32;
   116cc:	88471104 	stmdahi	r7, {r2, r8, ip}^
   116d0:	02000000 	andeq	r0, r0, #0
   116d4:	1e1a0091 	mrcne	0, 0, r0, cr10, cr1, {4}
   116d8:	04000043 	streq	r0, [r0], #-67	; 0xffffffbd
   116dc:	04cf0a13 	strbeq	r0, [pc], #2579	; 116e4 <__sel4runtime_memset+0x1fc>
   116e0:	91020000 	mrsls	r0, (UNDEF: 2)
    if (n <= 24) {
   116e4:	418c1a63 	orrmi	r1, ip, r3, ror #20
   116e8:	14040000 	strne	r0, [r4], #-0
   116ec:	00002c09 	andeq	r2, r0, r9, lsl #24
        return dest;
   116f0:	5c910200 	lfmpl	f0, 4, [r1], {0}
   116f4:	0041fb1a 	subeq	pc, r1, sl, lsl fp	; <UNPREDICTABLE>
    *(u32 *)(s + 12) = c32;
   116f8:	11150400 	tstne	r5, r0, lsl #8
   116fc:	000004d6 	ldrdeq	r0, [r0], -r6
   11700:	1d6c9102 	stfnep	f1, [ip, #-8]!
   11704:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
    *(u32 *)(s + 16) = c32;
   11708:	000004ed 	andeq	r0, r0, sp, ror #9
   1170c:	99e40305 	stmibls	r4!, {r0, r2, r8, r9}^
   11710:	d61a0002 	ldrle	r0, [sl], -r2
   11714:	04000042 	streq	r0, [r0], #-66	; 0xffffffbe
    *(u32 *)(s + 20) = c32;
   11718:	002c101b 	eoreq	r1, ip, fp, lsl r0
   1171c:	91020000 	mrsls	r0, (UNDEF: 2)
   11720:	72691e68 	rsbvc	r1, r9, #104, 28	; 0x680
   11724:	1f040071 	svcne	0x00040071
    *(u32 *)(s + 24) = c32;
   11728:	0002ce0e 	andeq	ip, r2, lr, lsl #28
   1172c:	44910200 	ldrmi	r0, [r1], #512	; 0x200
   11730:	003fed1a 	eorseq	lr, pc, sl, lsl sp	; <UNPREDICTABLE>
   11734:	09200400 	stmdbeq	r0!, {sl}
    *(u32 *)(s + n - 28) = c32;
   11738:	0000002c 	andeq	r0, r0, ip, lsr #32
   1173c:	00649102 	rsbeq	r9, r4, r2, lsl #2
   11740:	c9020102 	stmdbgt	r2, {r1, r8}
   11744:	0a00001b 	beq	117b8 <__sel4runtime_memset+0x2d0>
   11748:	0004dc04 	andeq	sp, r4, r4, lsl #24
   1174c:	a3171f00 	tstge	r7, #0, 30
    *(u32 *)(s + n - 24) = c32;
   11750:	ed000000 	stc	0, cr0, [r0, #-0]
   11754:	18000004 	stmdane	r0, {r2}
   11758:	00000025 	andeq	r0, r0, r5, lsr #32
   1175c:	dd080019 	stcle	0, cr0, [r8, #-100]	; 0xffffff9c
   11760:	1b000004 	blne	11778 <__sel4runtime_memset+0x290>
   11764:	000041f7 	strdeq	r4, [r0], -r7
    *(u32 *)(s + n - 20) = c32;
   11768:	d61b3d03 	ldrle	r3, [fp], -r3, lsl #26
   1176c:	60000004 	andvs	r0, r0, r4
   11770:	2c0001a3 	stfcss	f0, [r0], {163}	; 0xa3
   11774:	01000001 	tsteq	r0, r1
   11778:	0005679c 	muleq	r5, ip, r7
   1177c:	41831c00 	orrmi	r1, r3, r0, lsl #24
    *(u32 *)(s + n - 16) = c32;
   11780:	3d030000 	stccc	0, cr0, [r3, #-0]
   11784:	0000de35 	andeq	sp, r0, r5, lsr lr
   11788:	6c910200 	lfmvs	f0, 4, [r1], {0}
   1178c:	0048791c 	subeq	r7, r8, ip, lsl r9
   11790:	433d0300 	teqmi	sp, #0, 6
   11794:	0000002c 	andeq	r0, r0, ip, lsr #32
    k = 24 + ((sel4runtime_uintptr_t)s & 4);
   11798:	1c689102 	stfnep	f1, [r8], #-8
   1179c:	0000431e 	andeq	r4, r0, lr, lsl r3
   117a0:	67563d03 	ldrbvs	r3, [r6, -r3, lsl #26]
   117a4:	02000005 	andeq	r0, r0, #5
    s += k;
   117a8:	8c1c6491 	cfldrshi	mvf6, [ip], {145}	; 0x91
   117ac:	03000041 	movweq	r0, #65	; 0x41
   117b0:	056d683d 	strbeq	r6, [sp, #-2109]!	; 0xfffff7c3
   117b4:	91020000 	mrsls	r0, (UNDEF: 2)
    n -= k;
   117b8:	1ab61d60 	bne	fed98d40 <__bss_end__+0xfec4fcf8>
   117bc:	05830000 	streq	r0, [r3]
   117c0:	03050000 	movweq	r0, #20480	; 0x5000
   117c4:	00029a00 	andeq	r9, r2, r0, lsl #20
    u64 c64 = c32 | ((u64)c32 << 32);
   117c8:	0041fb1a 	subeq	pc, r1, sl, lsl fp	; <UNPREDICTABLE>
   117cc:	11400300 	mrsne	r0, SPSR_irq
   117d0:	000004d6 	ldrdeq	r0, [r0], -r6
   117d4:	00749102 	rsbseq	r9, r4, r2, lsl #2
   117d8:	04cf040a 	strbeq	r0, [pc], #1034	; 117e0 <__sel4runtime_memset+0x2f8>
   117dc:	040a0000 	streq	r0, [sl], #-0
   117e0:	0000002c 	andeq	r0, r0, ip, lsr #32
   117e4:	0000a317 	andeq	sl, r0, r7, lsl r3
   117e8:	00058300 	andeq	r8, r5, r0, lsl #6
   117ec:	00251800 	eoreq	r1, r5, r0, lsl #16
   117f0:	00130000 	andseq	r0, r3, r0
   117f4:	00057308 	andeq	r7, r5, r8, lsl #6
   117f8:	41ee1b00 	mvnmi	r1, r0, lsl #22
    for (; n >= 32; n -= 32, s += 32) {
   117fc:	a7020000 	strge	r0, [r2, -r0]
        *(u64 *)(s + 0) = c64;
   11800:	00006218 	andeq	r6, r0, r8, lsl r2
   11804:	01a32000 			; <UNDEFINED> instruction: 0x01a32000
   11808:	00004000 	andeq	r4, r0, r0
        *(u64 *)(s + 8) = c64;
   1180c:	bd9c0100 	ldflts	f0, [ip]
   11810:	20000005 	andcs	r0, r0, r5
   11814:	a7020070 	smlsdxge	r2, r0, r0, r0
   11818:	0005bd30 	andeq	fp, r5, r0, lsr sp
        *(u64 *)(s + 16) = c64;
   1181c:	6c910200 	lfmvs	f0, 4, [r1], {0}
   11820:	0200761e 	andeq	r7, r0, #31457280	; 0x1e00000
   11824:	00f70aa9 	rscseq	r0, r7, r9, lsr #21
   11828:	91020000 	mrsls	r0, (UNDEF: 2)
        *(u64 *)(s + 24) = c64;
   1182c:	040a0074 	streq	r0, [sl], #-116	; 0xffffff8c
   11830:	00000103 	andeq	r0, r0, r3, lsl #2
   11834:	00417621 	subeq	r7, r1, r1, lsr #12
   11838:	185e0100 	ldmdane	lr, {r8}^
    for (; n >= 32; n -= 32, s += 32) {
   1183c:	00000062 	andeq	r0, r0, r2, rrx
   11840:	0001a2bc 			; <UNDEFINED> instruction: 0x0001a2bc
   11844:	00000064 	andeq	r0, r0, r4, rrx
   11848:	78209c01 	stmdavc	r0!, {r0, sl, fp, ip, pc}
   1184c:	2d5e0100 	ldfcse	f0, [lr, #-0]
   11850:	000000f7 	strdeq	r0, [r0], -r7
   11854:	00749102 	rsbseq	r9, r4, r2, lsl #2
   11858:	0004f400 	andeq	pc, r4, r0, lsl #8
   1185c:	45000400 	strmi	r0, [r0, #-1024]	; 0xfffffc00
    return dest;
   11860:	04000038 	streq	r0, [r0], #-56	; 0xffffffc8
}
   11864:	00011701 	andeq	r1, r1, r1, lsl #14
   11868:	45460c00 	strbmi	r0, [r6, #-3072]	; 0xfffff400
   1186c:	005f0000 	subseq	r0, pc, r0
   11870:	a6240000 	strtge	r0, [r4], -r0
{
   11874:	01580001 	cmpeq	r8, r1
   11878:	862f0000 	strthi	r0, [pc], -r0
   1187c:	2f020000 	svccs	0x00020000
   11880:	0200000a 	andeq	r0, r0, #10
   11884:	0031186e 	eorseq	r1, r1, lr, ror #16
   11888:	04030000 	streq	r0, [r3], #-0
    unsigned char *d = dest;
   1188c:	0003c507 	andeq	ip, r3, r7, lsl #10
   11890:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    const unsigned char *s = src;
   11894:	00746e69 	rsbseq	r6, r4, r9, ror #28
   11898:	2e060103 	adfcss	f0, f6, f3
    for (; (sel4runtime_uintptr_t)s % 4 && n; n--) {
   1189c:	03000003 	movweq	r0, #3
        *d++ = *s++;
   118a0:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
   118a4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
   118a8:	00010905 	andeq	r0, r1, r5, lsl #18
   118ac:	08010300 	stmdaeq	r1, {r8, r9}
   118b0:	0000032c 	andeq	r0, r0, ip, lsr #6
   118b4:	52070203 	andpl	r0, r7, #805306368	; 0x30000000
   118b8:	03000003 	movweq	r0, #3
   118bc:	03bb0708 			; <UNDEFINED> instruction: 0x03bb0708
    for (; (sel4runtime_uintptr_t)s % 4 && n; n--) {
   118c0:	04030000 	streq	r0, [r3], #-0
   118c4:	00010e05 	andeq	r0, r1, r5, lsl #28
   118c8:	06040500 	streq	r0, [r4], -r0, lsl #10
   118cc:	0000022a 	andeq	r0, r0, sl, lsr #4
   118d0:	19016d02 	stmdbne	r1, {r1, r8, sl, fp, sp, lr}
   118d4:	0000007f 	andeq	r0, r0, pc, ror r0
   118d8:	00022607 	andeq	r2, r2, r7, lsl #12
   118dc:	08010300 	stmdaeq	r1, {r8, r9}
   118e0:	00000335 	andeq	r0, r0, r5, lsr r3
   118e4:	00008408 	andeq	r8, r0, r8, lsl #8
    if ((sel4runtime_uintptr_t)d % 4 == 0) {
   118e8:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
   118ec:	000015f8 	strdeq	r1, [r0], -r8
   118f0:	00022f09 	andeq	r2, r2, r9, lsl #30
   118f4:	14370300 	ldrtne	r0, [r7], #-768	; 0xfffffd00
        for (; n >= 16; s += 16, d += 16, n -= 16) {
   118f8:	000000a9 	andeq	r0, r0, r9, lsr #1
            *(u32 *)(d + 0) = *(u32 *)(s + 0);
   118fc:	0072040a 	rsbseq	r0, r2, sl, lsl #8
   11900:	a3080000 	movwge	r0, #32768	; 0x8000
   11904:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   11908:	0000023c 	andeq	r0, r0, ip, lsr r2
            *(u32 *)(d + 4) = *(u32 *)(s + 4);
   1190c:	a9143803 	ldmdbge	r4, {r0, r1, fp, ip, sp}
   11910:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   11914:	00000235 	andeq	r0, r0, r5, lsr r2
   11918:	a9143903 	ldmdbge	r4, {r0, r1, r8, fp, ip, sp}
   1191c:	0a000000 	beq	11924 <__sel4runtime_memcpy+0xb0>
   11920:	00008404 	andeq	r8, r0, r4, lsl #8
            *(u32 *)(d + 8) = *(u32 *)(s + 8);
   11924:	189c0900 	ldmne	ip, {r8, fp}
   11928:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
   1192c:	0000380c 	andeq	r3, r0, ip, lsl #16
   11930:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
   11934:	000015f3 	strdeq	r1, [r0], -r3
   11938:	00173209 	andseq	r3, r7, r9, lsl #4
            *(u32 *)(d + 12) = *(u32 *)(s + 12);
   1193c:	1a100500 	bne	412d44 <__bss_end__+0x2c9cfc>
   11940:	00000038 	andeq	r0, r0, r8, lsr r0
   11944:	002e5a0b 	eoreq	r5, lr, fp, lsl #20
   11948:	31040700 	tstcc	r4, r0, lsl #14
   1194c:	06000000 	streq	r0, [r0], -r0
   11950:	01280e15 			; <UNDEFINED> instruction: 0x01280e15
        for (; n >= 16; s += 16, d += 16, n -= 16) {
   11954:	d90c0000 	stmdble	ip, {}	; <UNPREDICTABLE>
   11958:	00000024 	andeq	r0, r0, r4, lsr #32
   1195c:	002bfb0c 	eoreq	pc, fp, ip, lsl #22
   11960:	0f0c0100 	svceq	0x000c0100
   11964:	02000029 	andeq	r0, r0, #41	; 0x29
   11968:	002fce0c 	eoreq	ip, pc, ip, lsl #28
   1196c:	0e0c0300 	cdpeq	3, 0, cr0, cr12, cr0, {0}
   11970:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
   11974:	0028fc0c 	eoreq	pc, r8, ip, lsl #24
   11978:	840c0500 	strhi	r0, [ip], #-1280	; 0xfffffb00
   1197c:	0600002c 	streq	r0, [r0], -ip, lsr #32
   11980:	367a0200 	ldrbtcc	r0, [sl], -r0, lsl #4
        if (n & 8) {
   11984:	1d060000 	stcne	0, cr0, [r6, #-0]
   11988:	0000eb03 	andeq	lr, r0, r3, lsl #22
   1198c:	06140d00 	ldreq	r0, [r4], -r0, lsl #26
   11990:	017f0927 	cmneq	pc, r7, lsr #18
            *(u32 *)(d + 0) = *(u32 *)(s + 0);
   11994:	850e0000 	strhi	r0, [lr, #-0]
   11998:	06000036 			; <UNDEFINED> instruction: 0x06000036
   1199c:	00691228 	rsbeq	r1, r9, r8, lsr #4
   119a0:	0f000000 	svceq	0x00000000
            *(u32 *)(d + 4) = *(u32 *)(s + 4);
   119a4:	006e6970 	rsbeq	r6, lr, r0, ror r9
   119a8:	69122906 	ldmdbvs	r2, {r1, r2, r8, fp, sp}
   119ac:	04000000 	streq	r0, [r0], #-0
   119b0:	004e000e 	subeq	r0, lr, lr
   119b4:	122a0600 	eorne	r0, sl, #0, 12
   119b8:	00000069 	andeq	r0, r0, r9, rrx
            d += 8;
   119bc:	23670e08 	cmncs	r7, #8, 28	; 0x80
   119c0:	2b060000 	blcs	1919c8 <__bss_end__+0x48980>
   119c4:	00006912 	andeq	r6, r0, r2, lsl r9
            s += 8;
   119c8:	900e0c00 	andls	r0, lr, r0, lsl #24
   119cc:	06000033 			; <UNDEFINED> instruction: 0x06000033
   119d0:	0069122c 	rsbeq	r1, r9, ip, lsr #4
        if (n & 4) {
   119d4:	00100000 	andseq	r0, r0, r0
   119d8:	2e06140d 	cdpcs	4, 0, cr1, cr6, cr13, {0}
   119dc:	0001ca09 	andeq	ip, r1, r9, lsl #20
   119e0:	2f310e00 	svccs	0x00310e00
            *(u32 *)(d + 0) = *(u32 *)(s + 0);
   119e4:	2f060000 	svccs	0x00060000
   119e8:	00006912 	andeq	r6, r0, r2, lsl r9
   119ec:	ff0e0000 			; <UNDEFINED> instruction: 0xff0e0000
   119f0:	06000035 			; <UNDEFINED> instruction: 0x06000035
            d += 4;
   119f4:	00691230 	rsbeq	r1, r9, r0, lsr r2
   119f8:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
   119fc:	00002b35 	andeq	r2, r0, r5, lsr fp
            s += 4;
   11a00:	69123106 	ldmdbvs	r2, {r1, r2, r8, ip, sp}
   11a04:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   11a08:	0042cf0e 	subeq	ip, r2, lr, lsl #30
        if (n & 2) {
   11a0c:	12320600 	eorsne	r0, r2, #0, 12
   11a10:	00000069 	andeq	r0, r0, r9, rrx
   11a14:	33900e0c 	orrscc	r0, r0, #12, 28	; 0xc0
   11a18:	33060000 	movwcc	r0, #24576	; 0x6000
            *d++ = *s++;
   11a1c:	00006912 	andeq	r6, r0, r2, lsl r9
   11a20:	0d001000 	stceq	0, cr1, [r0, #-0]
   11a24:	09350604 	ldmdbeq	r5!, {r2, r9, sl}
   11a28:	000001e1 	andeq	r0, r0, r1, ror #3
   11a2c:	0034970e 	eorseq	r9, r4, lr, lsl #14
   11a30:	12360600 	eorsne	r0, r6, #0, 12
   11a34:	00000069 	andeq	r0, r0, r9, rrx
   11a38:	080d0000 	stmdaeq	sp, {}	; <UNPREDICTABLE>
            *d++ = *s++;
   11a3c:	05093806 	streq	r3, [r9, #-2054]	; 0xfffff7fa
   11a40:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
   11a44:	00003497 	muleq	r0, r7, r4
   11a48:	69123906 	ldmdbvs	r2, {r1, r2, r8, fp, ip, sp}
   11a4c:	00000000 	andeq	r0, r0, r0
   11a50:	003e0e0e 	eorseq	r0, lr, lr, lsl #28
   11a54:	123a0600 	eorsne	r0, sl, #0, 12
   11a58:	00000069 	andeq	r0, r0, r9, rrx
        if (n & 1) {
   11a5c:	0c0d0004 	stceq	0, cr0, [sp], {4}
   11a60:	36093c06 	strcc	r3, [r9], -r6, lsl #24
   11a64:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
   11a68:	00003497 	muleq	r0, r7, r4
            *d = *s;
   11a6c:	69123d06 	ldmdbvs	r2, {r1, r2, r8, sl, fp, ip, sp}
   11a70:	00000000 	andeq	r0, r0, r0
   11a74:	003e0e0e 	eorseq	r0, lr, lr, lsl #28
   11a78:	123e0600 	eorsne	r0, lr, #0, 12
        return dest;
   11a7c:	00000069 	andeq	r0, r0, r9, rrx
   11a80:	29070e04 	stmdbcs	r7, {r2, r9, sl, fp}
    if (n >= 32) switch ((sel4runtime_uintptr_t)d % 4) {
   11a84:	3f060000 	svccc	0x00060000
   11a88:	00006912 	andeq	r6, r0, r2, lsl r9
   11a8c:	10000800 	andne	r0, r0, r0, lsl #16
   11a90:	05260614 	streq	r0, [r6, #-1556]!	; 0xfffff9ec
   11a94:	00000288 	andeq	r0, r0, r8, lsl #5
   11a98:	00368511 	eorseq	r8, r6, r1, lsl r5
   11a9c:	0b2d0600 	bleq	b532a4 <__bss_end__+0xa0a25c>
   11aa0:	00000134 	andeq	r0, r0, r4, lsr r1
   11aa4:	69736d12 	ldmdbvs	r3!, {r1, r4, r8, sl, fp, sp, lr}^
   11aa8:	0b340600 	bleq	d132b0 <__bss_end__+0xbca268>
   11aac:	0000017f 	andeq	r0, r0, pc, ror r1
   11ab0:	71726912 	cmnvc	r2, r2, lsl r9
   11ab4:	0b370600 	bleq	dd32bc <__bss_end__+0xc8a274>
   11ab8:	000001ca 	andeq	r0, r0, sl, asr #3
            w = *(u32 *)s;
   11abc:	003e0e11 	eorseq	r0, lr, r1, lsl lr
   11ac0:	0b3b0600 	bleq	ed32c8 <__bss_end__+0xd8a280>
   11ac4:	000001e1 	andeq	r0, r0, r1, ror #3
            *d++ = *s++;
   11ac8:	75706312 	ldrbvc	r6, [r0, #-786]!	; 0xfffffcee
   11acc:	0b400600 	bleq	10132d4 <__bss_end__+0xeca28c>
   11ad0:	00000205 	andeq	r0, r0, r5, lsl #4
   11ad4:	00291911 	eoreq	r1, r9, r1, lsl r9
   11ad8:	0f410600 	svceq	0x00410600
   11adc:	00000070 	andeq	r0, r0, r0, ror r0
   11ae0:	06180d00 	ldreq	r0, [r8], -r0, lsl #26
   11ae4:	02a50924 	adceq	r0, r5, #36, 18	; 0x90000
            *d++ = *s++;
   11ae8:	8d0e0000 	stchi	0, cr0, [lr, #-0]
   11aec:	06000003 	streq	r0, [r0], -r3
   11af0:	01281025 			; <UNDEFINED> instruction: 0x01281025
   11af4:	13000000 	movwne	r0, #0
   11af8:	00000236 	andeq	r0, r0, r6, lsr r2
   11afc:	be020004 	cdplt	0, 0, cr0, cr2, cr4, {0}
   11b00:	06000030 			; <UNDEFINED> instruction: 0x06000030
   11b04:	02880343 	addeq	r0, r8, #201326593	; 0xc000001
            *d++ = *s++;
   11b08:	04030000 	streq	r0, [r3], #-0
   11b0c:	0003c007 	andeq	ip, r3, r7
   11b10:	192b0900 	stmdbne	fp!, {r8, fp}
   11b14:	7b070000 	blvc	1d1b1c <__bss_end__+0x88ad4>
   11b18:	0000c60e 	andeq	ip, r0, lr, lsl #12
   11b1c:	19000900 	stmdbne	r0, {r8, fp}
   11b20:	7c070000 	stcvc	0, cr0, [r7], {-0}
   11b24:	0000380c 	andeq	r3, r0, ip, lsl #16
            n -= 3;
   11b28:	178e0900 	strne	r0, [lr, r0, lsl #18]
   11b2c:	7c070000 	stcvc	0, cr0, [r7], {-0}
   11b30:	00003814 	andeq	r3, r0, r4, lsl r8
            for (; n >= 17; s += 16, d += 16, n -= 16) {
   11b34:	17180900 	ldrne	r0, [r8, -r0, lsl #18]
                x = *(u32 *)(s + 1);
   11b38:	7c070000 	stcvc	0, cr0, [r7], {-0}
   11b3c:	0000381c 	andeq	r3, r0, ip, lsl r8
   11b40:	c6040a00 	strgt	r0, [r4], -r0, lsl #20
   11b44:	02000000 	andeq	r0, r0, #0
                *(u32 *)(d + 0) = (w LS 24) | (x RS 8);
   11b48:	00004280 	andeq	r4, r0, r0, lsl #5
   11b4c:	fa0f2b08 	blx	3dc774 <__bss_end__+0x29372c>
   11b50:	0a000002 	beq	11b60 <__sel4runtime_memcpy+0x2ec>
   11b54:	00030004 	andeq	r0, r3, r4
   11b58:	00381400 	eorseq	r1, r8, r0, lsl #8
   11b5c:	031e0000 	tsteq	lr, #0
   11b60:	a5150000 	ldrge	r0, [r5, #-0]
                w = *(u32 *)(s + 5);
   11b64:	15000002 	strne	r0, [r0, #-2]
   11b68:	00000031 	andeq	r0, r0, r1, lsr r0
   11b6c:	00002515 	andeq	r2, r0, r5, lsl r5
   11b70:	00701500 	rsbseq	r1, r0, r0, lsl #10
                *(u32 *)(d + 4) = (x LS 24) | (w RS 8);
   11b74:	02000000 	andeq	r0, r0, #0
   11b78:	00004291 	muleq	r0, r1, r2
   11b7c:	2a0f2609 	bcs	3db3a8 <__bss_end__+0x292360>
   11b80:	0a000003 	beq	11b94 <__sel4runtime_memcpy+0x320>
   11b84:	00033004 	andeq	r3, r3, r4
   11b88:	00381400 	eorseq	r1, r8, r0, lsl #8
   11b8c:	03530000 	cmpeq	r3, #0
   11b90:	c6150000 	ldrgt	r0, [r5], -r0
                x = *(u32 *)(s + 9);
   11b94:	15000000 	strne	r0, [r0, #-0]
   11b98:	00000038 	andeq	r0, r0, r8, lsr r0
   11b9c:	00003815 	andeq	r3, r0, r5, lsl r8
   11ba0:	02ee1500 	rsceq	r1, lr, #0, 10
                *(u32 *)(d + 8) = (w LS 24) | (x RS 8);
   11ba4:	70150000 	andsvc	r0, r5, r0
   11ba8:	00000000 	andeq	r0, r0, r0
   11bac:	00420b16 	subeq	r0, r2, r6, lsl fp
   11bb0:	2c090800 	stccs	8, cr0, [r9], {-0}
   11bb4:	00037b10 	andeq	r7, r3, r0, lsl fp
   11bb8:	44fd0e00 	ldrbtmi	r0, [sp], #3584	; 0xe00
   11bbc:	30090000 	andcc	r0, r9, r0
   11bc0:	0002e80c 	andeq	lr, r2, ip, lsl #16
                w = *(u32 *)(s + 13);
   11bc4:	dc0e0000 	stcle	0, cr0, [lr], {-0}
   11bc8:	09000041 	stmdbeq	r0, {r0, r6}
   11bcc:	031e1b32 	tsteq	lr, #51200	; 0xc800
   11bd0:	00040000 	andeq	r0, r4, r0
                *(u32 *)(d + 12) = (x LS 24) | (w RS 8);
   11bd4:	00431102 	subeq	r1, r3, r2, lsl #2
   11bd8:	03330900 	teqeq	r3, #0, 18
   11bdc:	00000353 	andeq	r0, r0, r3, asr r3
   11be0:	10010017 	andne	r0, r1, r7, lsl r0
   11be4:	461b1825 	ldrmi	r1, [fp], -r5, lsr #16
   11be8:	10010000 	andne	r0, r1, r0
   11bec:	0003872f 	andeq	r8, r3, pc, lsr #14
   11bf0:	e8030500 	stmda	r3, {r8, sl}
            for (; n >= 17; s += 16, d += 16, n -= 16) {
   11bf4:	190002c8 	stmdbne	r0, {r3, r6, r7, r9}
   11bf8:	000003a9 	andeq	r0, r0, r9, lsr #7
   11bfc:	000003a9 	andeq	r0, r0, r9, lsr #7
   11c00:	040a001a 	streq	r0, [sl], #-26	; 0xffffffe6
   11c04:	0000037b 	andeq	r0, r0, fp, ror r3
   11c08:	00460609 	subeq	r0, r6, r9, lsl #12
   11c0c:	16120100 	ldrne	r0, [r2], -r0, lsl #2
   11c10:	0000039e 	muleq	r0, lr, r3
   11c14:	00463c09 	subeq	r3, r6, r9, lsl #24
   11c18:	16130100 	ldrne	r0, [r3], -r0, lsl #2
   11c1c:	0000039e 	muleq	r0, lr, r3
   11c20:	0000c619 	andeq	ip, r0, r9, lsl r6
            break;
   11c24:	0003d700 	andeq	sp, r3, r0, lsl #14
            w = *(u32 *)s;
   11c28:	00311b00 	eorseq	r1, r1, r0, lsl #22
   11c2c:	00030000 	andeq	r0, r3, r0
   11c30:	0045ea1c 	subeq	lr, r5, ip, lsl sl
            *d++ = *s++;
   11c34:	072e0100 	streq	r0, [lr, -r0, lsl #2]!
   11c38:	000003c7 	andeq	r0, r0, r7, asr #7
   11c3c:	c78c0305 	strgt	r0, [ip, r5, lsl #6]
   11c40:	de180002 	cdple	0, 1, cr0, cr8, cr2, {0}
   11c44:	01000045 	tsteq	r0, r5, asr #32
   11c48:	037b0134 	cmneq	fp, #52, 2
   11c4c:	03050000 	movweq	r0, #20480	; 0x5000
   11c50:	0002c79c 	muleq	r2, ip, r7
            *d++ = *s++;
   11c54:	0045361c 	subeq	r3, r5, ip, lsl r6
   11c58:	01340100 	teqeq	r4, r0, lsl #2
   11c5c:	000003a9 	andeq	r0, r0, r9, lsr #7
   11c60:	c8e80305 	stmiagt	r8!, {r0, r2, r8, r9}^
   11c64:	c11d0002 	tstgt	sp, r2
   11c68:	01000045 	tsteq	r0, r5, asr #32
   11c6c:	00380c18 	eorseq	r0, r8, r8, lsl ip
   11c70:	a6240000 	strtge	r0, [r4], -r0
            n -= 2;
   11c74:	01580001 	cmpeq	r8, r1
   11c78:	9c010000 	stcls	0, cr0, [r1], {-0}
   11c7c:	000004dc 	ldrdeq	r0, [r0], -ip
            for (; n >= 18; s += 16, d += 16, n -= 16) {
   11c80:	0041831e 	subeq	r8, r1, lr, lsl r3
                x = *(u32 *)(s + 2);
   11c84:	2f180100 	svccs	0x00180100
   11c88:	000000c6 	andeq	r0, r0, r6, asr #1
   11c8c:	1e5c9102 	lognee	f1, f2
   11c90:	00004879 	andeq	r4, r0, r9, ror r8
                *(u32 *)(d + 0) = (w LS 16) | (x RS 16);
   11c94:	383d1801 	ldmdacc	sp!, {r0, fp, ip}
   11c98:	02000000 	andeq	r0, r0, #0
   11c9c:	be1e5891 	mrclt	8, 0, r5, cr14, cr1, {4}
   11ca0:	01000042 	tsteq	r0, r2, asr #32
   11ca4:	00384e18 	eorseq	r4, r8, r8, lsl lr
   11ca8:	91020000 	mrsls	r0, (UNDEF: 2)
   11cac:	4d271e54 	stcmi	14, cr1, [r7, #-336]!	; 0xfffffeb0
                w = *(u32 *)(s + 6);
   11cb0:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
   11cb4:	0002ee3a 	andeq	lr, r2, sl, lsr lr
   11cb8:	50910200 	addspl	r0, r1, r0, lsl #4
   11cbc:	003d311e 	eorseq	r3, sp, lr, lsl r1
                *(u32 *)(d + 4) = (x LS 16) | (w RS 16);
   11cc0:	4a190100 	bmi	6520c8 <__bss_end__+0x509080>
   11cc4:	00000070 	andeq	r0, r0, r0, ror r0
   11cc8:	1f009102 	svcne	0x00009102
   11ccc:	00001ab6 			; <UNDEFINED> instruction: 0x00001ab6
   11cd0:	000004ec 	andeq	r0, r0, ip, ror #9
   11cd4:	9b080305 	blls	2128f0 <__bss_end__+0xc98a8>
   11cd8:	40200002 	eormi	r0, r0, r2
   11cdc:	e80001a6 	stmda	r0, {r1, r2, r5, r7, r8}
                x = *(u32 *)(s + 10);
   11ce0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   11ce4:	0000420e 	andeq	r4, r0, lr, lsl #4
   11ce8:	f1191f01 			; <UNDEFINED> instruction: 0xf1191f01
   11cec:	02000004 	andeq	r0, r0, #4
                *(u32 *)(d + 8) = (w LS 16) | (x RS 16);
   11cf0:	50206c91 	mlapl	r0, r1, ip, r6
   11cf4:	b80001a6 	stmdalt	r0, {r1, r2, r5, r7, r8}
   11cf8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   11cfc:	000045b2 			; <UNDEFINED> instruction: 0x000045b2
   11d00:	e8152001 	ldmda	r5, {r0, sp}
   11d04:	02000002 	andeq	r0, r0, #2
   11d08:	64206891 	strtvs	r6, [r0], #-2193	; 0xfffff76f
   11d0c:	880001a6 	stmdahi	r0, {r1, r2, r5, r7, r8}
                w = *(u32 *)(s + 14);
   11d10:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   11d14:	0000462d 	andeq	r4, r0, sp, lsr #12
   11d18:	25142201 	ldrcs	r2, [r4, #-513]	; 0xfffffdff
   11d1c:	02000000 	andeq	r0, r0, #0
                *(u32 *)(d + 12) = (x LS 16) | (w RS 16);
   11d20:	27186491 			; <UNDEFINED> instruction: 0x27186491
   11d24:	01000045 	tsteq	r0, r5, asr #32
   11d28:	00251423 	eoreq	r1, r5, r3, lsr #8
   11d2c:	91020000 	mrsls	r0, (UNDEF: 2)
   11d30:	00000060 	andeq	r0, r0, r0, rrx
   11d34:	008b1900 	addeq	r1, fp, r0, lsl #18
   11d38:	04ec0000 	strbteq	r0, [ip], #0
   11d3c:	311b0000 	tstcc	fp, r0
            for (; n >= 18; s += 16, d += 16, n -= 16) {
   11d40:	1c000000 	stcne	0, cr0, [r0], {-0}
   11d44:	04dc0800 	ldrbeq	r0, [ip], #2048	; 0x800
   11d48:	040a0000 	streq	r0, [sl], #-0
   11d4c:	000003a9 	andeq	r0, r0, r9, lsr #7
   11d50:	0015c200 	andseq	ip, r5, r0, lsl #4
   11d54:	f3000400 	vshl.u8	d0, d0, d0
   11d58:	04000039 	streq	r0, [r0], #-57	; 0xffffffc7
   11d5c:	00011701 	andeq	r1, r1, r1, lsl #14
   11d60:	4b3f0c00 	blmi	fd4d68 <__bss_end__+0xe8bd20>
   11d64:	005f0000 	subseq	r0, pc, r0
   11d68:	a77c0000 	ldrbge	r0, [ip, -r0]!
   11d6c:	22fc0001 	rscscs	r0, ip, #1
            break;
   11d70:	88f30000 	ldmhi	r3!, {}^	; <UNPREDICTABLE>
            w = *(u32 *)s;
   11d74:	04020000 	streq	r0, [r2], #-0
   11d78:	0003c507 	andeq	ip, r3, r7, lsl #10
   11d7c:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
            *d++ = *s++;
   11d80:	00000109 	andeq	r0, r0, r9, lsl #2
   11d84:	f3040802 	vsub.i8	d0, d4, d2
   11d88:	03000015 	movweq	r0, #21
   11d8c:	00000a2f 	andeq	r0, r0, pc, lsr #20
   11d90:	25186e05 	ldrcs	r6, [r8, #-3589]	; 0xfffff1fb
   11d94:	04000000 	streq	r0, [r0], #-0
   11d98:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
   11d9c:	01020074 	tsteq	r2, r4, ror r0
            n -= 1;
   11da0:	00032e06 	andeq	r2, r3, r6, lsl #28
   11da4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
   11da8:	00000466 	andeq	r0, r0, r6, ror #8
            for (; n >= 19; s += 16, d += 16, n -= 16) {
   11dac:	00275703 	eoreq	r5, r7, r3, lsl #14
                x = *(u32 *)(s + 3);
   11db0:	19ab0500 	stmibne	fp!, {r8, sl}
   11db4:	00000067 	andeq	r0, r0, r7, rrx
   11db8:	2c080102 	stfcss	f0, [r8], {2}
   11dbc:	02000003 	andeq	r0, r0, #3
                *(u32 *)(d + 0) = (w LS 8) | (x RS 24);
   11dc0:	03520702 	cmpeq	r2, #524288	; 0x80000
   11dc4:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
   11dc8:	05000005 	streq	r0, [r0, #-5]
   11dcc:	002519b5 	strhteq	r1, [r5], -r5
   11dd0:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
   11dd4:	05000035 	streq	r0, [r0, #-53]	; 0xffffffcb
   11dd8:	008d19ba 			; <UNDEFINED> instruction: 0x008d19ba
                w = *(u32 *)(s + 7);
   11ddc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   11de0:	0003bb07 	andeq	fp, r3, r7, lsl #22
   11de4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
   11de8:	0000010e 	andeq	r0, r0, lr, lsl #2
                *(u32 *)(d + 4) = (x LS 8) | (w RS 24);
   11dec:	0042b603 	subeq	fp, r2, r3, lsl #12
   11df0:	1e490100 	dvfnee	f0, f1, f0
   11df4:	00000075 	andeq	r0, r0, r5, ror r0
   11df8:	00009b05 	andeq	r9, r0, r5, lsl #22
   11dfc:	47e70300 	strbmi	r0, [r7, r0, lsl #6]!
   11e00:	4a010000 	bmi	51e08 <morecore_area+0x8e08>
   11e04:	0000811e 	andeq	r8, r0, lr, lsl r1
   11e08:	00ac0500 	adceq	r0, ip, r0, lsl #10
                x = *(u32 *)(s + 11);
   11e0c:	7a060000 	bvc	191e14 <__bss_end__+0x48dcc>
   11e10:	2800004a 	stmdacs	r0, {r1, r3, r6}
   11e14:	4d083c06 	stcmi	12, cr3, [r8, #-24]	; 0xffffffe8
   11e18:	07000001 	streq	r0, [r0, -r1]
                *(u32 *)(d + 8) = (w LS 8) | (x RS 24);
   11e1c:	000049b1 			; <UNDEFINED> instruction: 0x000049b1
   11e20:	9b0a3d06 	blls	2a1240 <__bss_end__+0x1581f8>
   11e24:	00000000 	andeq	r0, r0, r0
   11e28:	00468a07 	subeq	r8, r6, r7, lsl #20
   11e2c:	0a3e0600 	beq	f93634 <__bss_end__+0xe4a5ec>
   11e30:	0000009b 	muleq	r0, fp, r0
   11e34:	49420704 	stmdbmi	r2, {r2, r8, r9, sl}^
   11e38:	3f060000 	svccc	0x00060000
                w = *(u32 *)(s + 15);
   11e3c:	00009b0a 	andeq	r9, r0, sl, lsl #22
   11e40:	63070800 	movwvs	r0, #30720	; 0x7800
   11e44:	06000048 	streq	r0, [r0], -r8, asr #32
   11e48:	009b0a40 	addseq	r0, fp, r0, asr #20
                *(u32 *)(d + 12) = (x LS 8) | (w RS 24);
   11e4c:	070c0000 	streq	r0, [ip, -r0]
   11e50:	00004993 	muleq	r0, r3, r9
   11e54:	9b0a4106 	blls	2a2274 <__bss_end__+0x15922c>
   11e58:	10000000 	andne	r0, r0, r0
   11e5c:	0046bc07 	subeq	fp, r6, r7, lsl #24
   11e60:	0a420600 	beq	1093668 <__bss_end__+0xf4a620>
   11e64:	0000009b 	muleq	r0, fp, r0
   11e68:	46b20714 	ssatmi	r0, #19, r4, lsl #14
            for (; n >= 19; s += 16, d += 16, n -= 16) {
   11e6c:	43060000 	movwmi	r0, #24576	; 0x6000
   11e70:	00009b0a 	andeq	r9, r0, sl, lsl #22
   11e74:	0b071800 	bleq	1d7e7c <__bss_end__+0x8ee34>
   11e78:	0600004b 	streq	r0, [r0], -fp, asr #32
   11e7c:	009b0a46 	addseq	r0, fp, r6, asr #20
   11e80:	071c0000 	ldreq	r0, [ip, -r0]
   11e84:	0000495d 	andeq	r4, r0, sp, asr r9
   11e88:	9b0a4906 	blls	2a42a8 <__bss_end__+0x15b260>
   11e8c:	20000000 	andcs	r0, r0, r0
   11e90:	0048e307 	subeq	lr, r8, r7, lsl #6
   11e94:	0a4c0600 	beq	131369c <__bss_end__+0x11ca654>
   11e98:	0000009b 	muleq	r0, fp, r0
            break;
   11e9c:	c4060024 	strgt	r0, [r6], #-36	; 0xffffffdc
    if (n & 16) {
   11ea0:	10000046 	andne	r0, r0, r6, asr #32
   11ea4:	75084f06 	strvc	r4, [r8, #-3846]	; 0xfffff0fa
   11ea8:	07000001 	streq	r0, [r0, -r1]
   11eac:	000021eb 	andeq	r2, r0, fp, ror #3
   11eb0:	ac0a5006 	stcge	0, cr5, [sl], {6}
        *d++ = *s++;
   11eb4:	00000000 	andeq	r0, r0, r0
   11eb8:	00381f07 	eorseq	r1, r8, r7, lsl #30
   11ebc:	0a510600 	beq	14536c4 <__bss_end__+0x130a67c>
   11ec0:	000000ac 	andeq	r0, r0, ip, lsr #1
   11ec4:	4d050008 	stcmi	0, cr0, [r5, #-32]	; 0xffffffe0
   11ec8:	06000001 	streq	r0, [r0], -r1
   11ecc:	000048c3 	andeq	r4, r0, r3, asr #17
   11ed0:	08540604 	ldmdaeq	r4, {r2, r9, sl}^
        *d++ = *s++;
   11ed4:	000001a2 	andeq	r0, r0, r2, lsr #3
   11ed8:	67617408 	strbvs	r7, [r1, -r8, lsl #8]!
   11edc:	0a550600 	beq	15536e4 <__bss_end__+0x140a69c>
   11ee0:	0000009b 	muleq	r0, fp, r0
   11ee4:	20290700 	eorcs	r0, r9, r0, lsl #14
   11ee8:	56060000 	strpl	r0, [r6], -r0
   11eec:	0001a707 	andeq	sl, r1, r7, lsl #14
   11ef0:	05000400 	streq	r0, [r0, #-1024]	; 0xfffffc00
        *d++ = *s++;
   11ef4:	0000017a 	andeq	r0, r0, sl, ror r1
   11ef8:	0001b709 	andeq	fp, r1, r9, lsl #14
   11efc:	0001b700 	andeq	fp, r1, r0, lsl #14
   11f00:	00250a00 	eoreq	r0, r5, r0, lsl #20
   11f04:	00000000 	andeq	r0, r0, r0
   11f08:	35080102 	strcc	r0, [r8, #-258]	; 0xfffffefe
   11f0c:	05000003 	streq	r0, [r0, #-3]
   11f10:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
        *d++ = *s++;
   11f14:	00467506 	subeq	r7, r6, r6, lsl #10
   11f18:	59060c00 	stmdbpl	r6, {sl, fp}
   11f1c:	00020508 	andeq	r0, r2, r8, lsl #10
   11f20:	61740800 	cmnvs	r4, r0, lsl #16
   11f24:	5a060067 	bpl	1920c8 <__bss_end__+0x49080>
   11f28:	00009b0a 	andeq	r9, r0, sl, lsl #22
   11f2c:	6c080000 	stcvs	0, cr0, [r8], {-0}
   11f30:	06006e65 	streq	r6, [r0], -r5, ror #28
        *d++ = *s++;
   11f34:	009b0a5b 	addseq	r0, fp, fp, asr sl
   11f38:	07040000 	streq	r0, [r4, -r0]
   11f3c:	00004655 	andeq	r4, r0, r5, asr r6
   11f40:	9b0a5c06 	blls	2a8f60 <__bss_end__+0x15ff18>
   11f44:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   11f48:	0019a107 	andseq	sl, r9, r7, lsl #2
   11f4c:	075d0600 	ldrbeq	r0, [sp, -r0, lsl #12]
   11f50:	0000020a 	andeq	r0, r0, sl, lsl #4
        *d++ = *s++;
   11f54:	c305000c 	movwgt	r0, #20492	; 0x500c
   11f58:	09000001 	stmdbeq	r0, {r0}
   11f5c:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
   11f60:	0000021a 	andeq	r0, r0, sl, lsl r2
   11f64:	0000250a 	andeq	r2, r0, sl, lsl #10
   11f68:	0b000000 	bleq	11f70 <__sel4runtime_memcpy+0x6fc>
   11f6c:	0001be04 	andeq	fp, r1, r4, lsl #28
   11f70:	49a20c00 	stmibmi	r2!, {sl, fp}
        *d++ = *s++;
   11f74:	5f040000 	svcpl	0x00040000
   11f78:	00460503 	subeq	r0, r6, r3, lsl #10
   11f7c:	c8b00000 	ldmgt	r0!, {}	; <UNPREDICTABLE>
   11f80:	01c80001 	biceq	r0, r8, r1
   11f84:	9c010000 	stcls	0, cr0, [r1], {-0}
   11f88:	000002dc 	ldrdeq	r0, [r0], -ip
   11f8c:	7464660d 	strbtvc	r6, [r4], #-1549	; 0xfffff9f3
   11f90:	035f0400 	cmpeq	pc, #0, 8
        *d++ = *s++;
   11f94:	0002dc20 	andeq	sp, r2, r0, lsr #24
   11f98:	54910200 	ldrpl	r0, [r1], #512	; 0x200
   11f9c:	0047950e 	subeq	r9, r7, lr, lsl #10
   11fa0:	035f0400 	cmpeq	pc, #0, 8
   11fa4:	00003a2c 	andeq	r3, r0, ip, lsr #20
   11fa8:	50910200 	addspl	r0, r1, r0, lsl #4
   11fac:	7272650f 	rsbsvc	r6, r2, #62914560	; 0x3c00000
   11fb0:	03610400 	cmneq	r1, #0, 8
        *d++ = *s++;
   11fb4:	00004606 	andeq	r4, r0, r6, lsl #12
   11fb8:	60910200 	addsvs	r0, r1, r0, lsl #4
   11fbc:	0046d610 	subeq	sp, r6, r0, lsl r6
   11fc0:	03620400 	cmneq	r2, #0, 8
   11fc4:	00004606 	andeq	r4, r0, r6, lsl #12
   11fc8:	70910200 	addsvc	r0, r1, r0, lsl #4
   11fcc:	00487e10 	subeq	r7, r8, r0, lsl lr
   11fd0:	03630400 	cmneq	r3, #0, 8
        *d++ = *s++;
   11fd4:	00004606 	andeq	r4, r0, r6, lsl #12
   11fd8:	6c910200 	lfmvs	f0, 4, [r1], {0}
   11fdc:	0049e210 	subeq	lr, r9, r0, lsl r2
   11fe0:	03630400 	cmneq	r3, #0, 8
   11fe4:	0000460e 	andeq	r4, r0, lr, lsl #12
   11fe8:	5c910200 	lfmpl	f0, 4, [r1], {0}
   11fec:	6761740f 	strbvs	r7, [r1, -pc, lsl #8]!
   11ff0:	03640400 	cmneq	r4, #0, 8
        *d++ = *s++;
   11ff4:	0000750b 	andeq	r7, r0, fp, lsl #10
   11ff8:	68910200 	ldmvs	r1, {r9}
   11ffc:	00482610 	subeq	r2, r8, r0, lsl r6
   12000:	03650400 	cmneq	r5, #0, 8
   12004:	0000250b 	andeq	r2, r0, fp, lsl #10
   12008:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   1200c:	00446310 	subeq	r6, r4, r0, lsl r3
   12010:	03660400 	cmneq	r6, #0, 8
        *d++ = *s++;
   12014:	0002dc0e 	andeq	sp, r2, lr, lsl #24
   12018:	64910200 	ldrvs	r0, [r1], #512	; 0x200
   1201c:	00481410 	subeq	r1, r8, r0, lsl r4
   12020:	03670400 	cmneq	r7, #0, 8
   12024:	00021a0e 	andeq	r1, r2, lr, lsl #20
   12028:	58910200 	ldmpl	r1, {r9}
   1202c:	e2040b00 	and	r0, r4, #0, 22
   12030:	11000002 	tstne	r0, r2
        *d++ = *s++;
   12034:	0047770c 	subeq	r7, r7, ip, lsl #14
   12038:	03460400 	movteq	r0, #25600	; 0x6400
   1203c:	00004605 	andeq	r4, r0, r5, lsl #12
   12040:	01c7e800 	biceq	lr, r7, r0, lsl #16
   12044:	0000c800 	andeq	ip, r0, r0, lsl #16
   12048:	699c0100 	ldmibvs	ip, {r8}
   1204c:	0d000003 	stceq	0, cr0, [r0, #-12]
   12050:	00746466 	rsbseq	r6, r4, r6, ror #8
        *d++ = *s++;
   12054:	2f034604 	svccs	0x00034604
   12058:	000002dc 	ldrdeq	r0, [r0], -ip
   1205c:	0e649102 	lgneqs	f1, f2
   12060:	00004ac0 	andeq	r4, r0, r0, asr #21
   12064:	38034604 	stmdacc	r3, {r2, r9, sl, lr}
   12068:	00000046 	andeq	r0, r0, r6, asr #32
   1206c:	0e609102 	lgneqs	f1, f2
   12070:	00004740 	andeq	r4, r0, r0, asr #14
        *d++ = *s++;
   12074:	13034704 	movwne	r4, #14084	; 0x3704
   12078:	0000021a 	andeq	r0, r0, sl, lsl r2
   1207c:	105c9102 	subsne	r9, ip, r2, lsl #2
   12080:	0000487e 	andeq	r4, r0, lr, ror r8
   12084:	06034904 	streq	r4, [r3], -r4, lsl #18
   12088:	00000046 	andeq	r0, r0, r6, asr #32
   1208c:	0f749102 	svceq	0x00749102
   12090:	00727265 	rsbseq	r7, r2, r5, ror #4
        *d++ = *s++;
   12094:	0e034904 	vmlaeq.f16	s8, s6, s8	; <UNPREDICTABLE>
   12098:	00000046 	andeq	r0, r0, r6, asr #32
   1209c:	126c9102 	rsbne	r9, ip, #-2147483648	; 0x80000000
   120a0:	0001c800 	andeq	ip, r1, r0, lsl #16
   120a4:	00000020 	andeq	r0, r0, r0, lsr #32
   120a8:	004b2a10 	subeq	r2, fp, r0, lsl sl
   120ac:	034b0400 	movteq	r0, #46080	; 0xb400
   120b0:	00004602 	andeq	r4, r0, r2, lsl #12
    if (n & 8) {
   120b4:	70910200 	addsvc	r0, r1, r0, lsl #4
   120b8:	310c0000 	mrscc	r0, (UNDEF: 12)
   120bc:	04000047 	streq	r0, [r0], #-71	; 0xffffffb9
   120c0:	46050339 			; <UNDEFINED> instruction: 0x46050339
        *d++ = *s++;
   120c4:	6c000000 	stcvs	0, cr0, [r0], {-0}
   120c8:	7c0001c7 	stfvcs	f0, [r0], {199}	; 0xc7
   120cc:	01000000 	mrseq	r0, (UNDEF: 0)
   120d0:	0003d59c 	muleq	r3, ip, r5
   120d4:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   120d8:	39040074 	stmdbcc	r4, {r2, r4, r5, r6}
   120dc:	02dc2b03 	sbcseq	r2, ip, #3072	; 0xc00
   120e0:	91020000 	mrsls	r0, (UNDEF: 2)
        *d++ = *s++;
   120e4:	48d80e6c 	ldmmi	r8, {r2, r3, r5, r6, r9, sl, fp}^
   120e8:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
   120ec:	00463403 	subeq	r3, r6, r3, lsl #8
   120f0:	91020000 	mrsls	r0, (UNDEF: 2)
   120f4:	47400e68 	strbmi	r0, [r0, -r8, ror #28]
   120f8:	3a040000 	bcc	112100 <morecore_area+0xc9100>
   120fc:	021a1603 	andseq	r1, sl, #3145728	; 0x300000
   12100:	91020000 	mrsls	r0, (UNDEF: 2)
        *d++ = *s++;
   12104:	44631064 	strbtmi	r1, [r3], #-100	; 0xffffff9c
   12108:	3c040000 	stccc	0, cr0, [r4], {-0}
   1210c:	02dc0e03 	sbcseq	r0, ip, #3, 28	; 0x30
   12110:	91020000 	mrsls	r0, (UNDEF: 2)
   12114:	656c0f74 	strbvs	r0, [ip, #-3956]!	; 0xfffff08c
   12118:	3d04006e 	stccc	0, cr0, [r4, #-440]	; 0xfffffe48
   1211c:	00460603 	subeq	r0, r6, r3, lsl #12
   12120:	91020000 	mrsls	r0, (UNDEF: 2)
        *d++ = *s++;
   12124:	2f0c0070 	svccs	0x000c0070
   12128:	04000049 	streq	r0, [r0], #-73	; 0xffffffb7
   1212c:	1a0d030c 	bne	352d64 <__bss_end__+0x209d1c>
   12130:	0c000002 	stceq	0, cr0, [r0], {2}
   12134:	600001c6 	andvs	r0, r0, r6, asr #3
   12138:	01000001 	tsteq	r0, r1
   1213c:	0004719c 	muleq	r4, ip, r1
   12140:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
        *d++ = *s++;
   12144:	0c040074 	stceq	0, cr0, [r4], {116}	; 0x74
   12148:	02dc2c03 	sbcseq	r2, ip, #768	; 0x300
   1214c:	91020000 	mrsls	r0, (UNDEF: 2)
   12150:	48d80e64 	ldmmi	r8, {r2, r5, r6, r9, sl, fp}^
   12154:	0c040000 	stceq	0, cr0, [r4], {-0}
   12158:	00463503 	subeq	r3, r6, r3, lsl #10
   1215c:	91020000 	mrsls	r0, (UNDEF: 2)
   12160:	46790e60 	ldrbtmi	r0, [r9], -r0, ror #28
        *d++ = *s++;
   12164:	0d040000 	stceq	0, cr0, [r4, #-0]
   12168:	021a1703 	andseq	r1, sl, #786432	; 0xc0000
   1216c:	91020000 	mrsls	r0, (UNDEF: 2)
   12170:	64690d5c 	strbtvs	r0, [r9], #-3420	; 0xfffff2a4
   12174:	0d040078 	stceq	0, cr0, [r4, #-480]	; 0xfffffe20
   12178:	00462503 	subeq	r2, r6, r3, lsl #10
   1217c:	91020000 	mrsls	r0, (UNDEF: 2)
   12180:	46500e58 			; <UNDEFINED> instruction: 0x46500e58
        *d++ = *s++;
   12184:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
   12188:	04711003 	ldrbteq	r1, [r1], #-3
   1218c:	91020000 	mrsls	r0, (UNDEF: 2)
   12190:	1a211000 	bne	856198 <__bss_end__+0x70d150>
   12194:	10040000 	andne	r0, r4, r0
   12198:	021a0e03 	andseq	r0, sl, #3, 28	; 0x30
   1219c:	91020000 	mrsls	r0, (UNDEF: 2)
   121a0:	6e650f74 	mcrvs	15, 3, r0, cr5, cr4, {3}
        *d++ = *s++;
   121a4:	10040064 	andne	r0, r4, r4, rrx
   121a8:	021a1503 	andseq	r1, sl, #12582912	; 0xc00000
   121ac:	91020000 	mrsls	r0, (UNDEF: 2)
   121b0:	452f1070 	strmi	r1, [pc, #-112]!	; 12148 <__sel4runtime_memcpy+0x8d4>
   121b4:	11040000 	mrsne	r0, (UNDEF: 4)
   121b8:	00460603 	subeq	r0, r6, r3, lsl #12
   121bc:	91020000 	mrsls	r0, (UNDEF: 2)
   121c0:	040b006c 	streq	r0, [fp], #-108	; 0xffffff94
    if (n & 4) {
   121c4:	00000046 	andeq	r0, r0, r6, asr #32
   121c8:	004a2f0c 	subeq	r2, sl, ip, lsl #30
   121cc:	02ee0400 	rsceq	r0, lr, #0, 8
   121d0:	00004605 	andeq	r4, r0, r5, lsl #12
        *d++ = *s++;
   121d4:	01c4d000 	biceq	sp, r4, r0
   121d8:	00013c00 	andeq	r3, r1, r0, lsl #24
   121dc:	239c0100 	orrscs	r0, ip, #0, 2
   121e0:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
   121e4:	00746466 	rsbseq	r6, r4, r6, ror #8
   121e8:	2702ee04 	strcs	lr, [r2, -r4, lsl #28]
   121ec:	000002dc 	ldrdeq	r0, [r0], -ip
   121f0:	0e5c9102 	logeqe	f1, f2
        *d++ = *s++;
   121f4:	000048d8 	ldrdeq	r4, [r0], -r8
   121f8:	3002ee04 	andcc	lr, r2, r4, lsl #28
   121fc:	00000046 	andeq	r0, r0, r6, asr #32
   12200:	0e589102 	logeqe	f1, f2
   12204:	00004679 	andeq	r4, r0, r9, ror r6
   12208:	4802ee04 	stmdami	r2, {r2, r9, sl, fp, sp, lr, pc}
   1220c:	0000021a 	andeq	r0, r0, sl, lsl r2
   12210:	0e549102 	logeqs	f1, f2
        *d++ = *s++;
   12214:	00001d45 	andeq	r1, r0, r5, asr #26
   12218:	1202ef04 	andne	lr, r2, #4, 30
   1221c:	0000021a 	andeq	r0, r0, sl, lsl r2
   12220:	10509102 	subsne	r9, r0, r2, lsl #2
   12224:	0000452f 	andeq	r4, r0, pc, lsr #10
   12228:	0602f104 	streq	pc, [r2], -r4, lsl #2
   1222c:	00000046 	andeq	r0, r0, r6, asr #32
   12230:	0f649102 	svceq	0x00649102
        *d++ = *s++;
   12234:	006e656c 	rsbeq	r6, lr, ip, ror #10
   12238:	0e02f104 	mvfeqs	f7, f4
   1223c:	00000046 	andeq	r0, r0, r6, asr #32
   12240:	0f6c9102 	svceq	0x006c9102
   12244:	00786469 	rsbseq	r6, r8, r9, ror #8
   12248:	1302f104 	movwne	pc, #8452	; 0x2104	; <UNPREDICTABLE>
   1224c:	00000046 	andeq	r0, r0, r6, asr #32
   12250:	10749102 	rsbsne	r9, r4, r2, lsl #2
    if (n & 2) {
   12254:	00001a21 	andeq	r1, r0, r1, lsr #20
   12258:	0e02f204 	cdpeq	2, 0, cr15, cr2, cr4, {0}
   1225c:	0000021a 	andeq	r0, r0, sl, lsl r2
   12260:	0f709102 	svceq	0x00709102
        *d++ = *s++;
   12264:	00646e65 	rsbeq	r6, r4, r5, ror #28
   12268:	1502f204 	strne	pc, [r2, #-516]	; 0xfffffdfc
   1226c:	0000021a 	andeq	r0, r0, sl, lsl r2
   12270:	00689102 	rsbeq	r9, r8, r2, lsl #2
   12274:	00497e0c 	subeq	r7, r9, ip, lsl #28
   12278:	02d50400 	sbcseq	r0, r5, #0, 8
   1227c:	00004605 	andeq	r4, r0, r5, lsl #12
   12280:	01c3e400 	biceq	lr, r3, r0, lsl #8
        *d++ = *s++;
   12284:	0000ec00 	andeq	lr, r0, r0, lsl #24
   12288:	af9c0100 	svcge	0x009c0100
   1228c:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
   12290:	00746466 	rsbseq	r6, r4, r6, ror #8
   12294:	2602d504 	strcs	sp, [r2], -r4, lsl #10
   12298:	000002dc 	ldrdeq	r0, [r0], -ip
   1229c:	0e649102 	lgneqs	f1, f2
   122a0:	000048d8 	ldrdeq	r4, [r0], -r8
    if (n & 1) {
   122a4:	2f02d504 	svccs	0x0002d504
   122a8:	00000046 	andeq	r0, r0, r6, asr #32
   122ac:	0e609102 	lgneqs	f1, f2
   122b0:	00004679 	andeq	r4, r0, r9, ror r6
        *d = *s;
   122b4:	4702d504 	strmi	sp, [r2, -r4, lsl #10]
   122b8:	0000021a 	andeq	r0, r0, sl, lsl r2
   122bc:	105c9102 	subsne	r9, ip, r2, lsl #2
   122c0:	00001a21 	andeq	r1, r0, r1, lsr #20
    return dest;
   122c4:	0e02d704 	cdpeq	7, 0, cr13, cr2, cr4, {0}
}
   122c8:	0000021a 	andeq	r0, r0, sl, lsl r2
   122cc:	0f749102 	svceq	0x00749102
   122d0:	00646e65 	rsbeq	r6, r4, r5, ror #28
   122d4:	1502d704 	strne	sp, [r2, #-1796]	; 0xfffff8fc
{
   122d8:	0000021a 	andeq	r0, r0, sl, lsl r2
   122dc:	106c9102 	rsbne	r9, ip, r2, lsl #2
   122e0:	0000452f 	andeq	r4, r0, pc, lsr #10
    return -1;
   122e4:	0602d804 	streq	sp, [r2], -r4, lsl #16
}
   122e8:	00000046 	andeq	r0, r0, r6, asr #32
   122ec:	10689102 	rsbne	r9, r8, r2, lsl #2
   122f0:	00002782 	andeq	r2, r0, r2, lsl #15
   122f4:	0e02d804 	cdpeq	8, 0, cr13, cr2, cr4, {0}
   122f8:	00000046 	andeq	r0, r0, r6, asr #32
	push {r1,r2,r3,lr}
   122fc:	00709102 	rsbseq	r9, r0, r2, lsl #2
	bl __aeabi_read_tp_c
   12300:	00465d0c 	subeq	r5, r6, ip, lsl #26
	pop {r1,r2,r3,lr}
   12304:	02c40400 	sbceq	r0, r4, #0, 8
	bx lr
   12308:	00004605 	andeq	r4, r0, r5, lsl #12
{
   1230c:	01c31800 	biceq	r1, r3, r0, lsl #16
   12310:	0000cc00 	andeq	ip, r0, r0, lsl #24
   12314:	199c0100 	ldmibne	ip, {r8}
    __asm__ __volatile__("mrc p15,0,%0,c13,c0,2" : "=r"(reg));
   12318:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
   1231c:	00004976 	andeq	r4, r0, r6, ror r9
    return reg;
   12320:	2902c404 	stmdbcs	r2, {r2, sl, lr, pc}
}
   12324:	0000021a 	andeq	r0, r0, sl, lsl r2
   12328:	0e6c9102 	lgneqe	f1, f2
   1232c:	00004a4f 	andeq	r4, r0, pc, asr #20
   12330:	3602c404 	strcc	ip, [r2], -r4, lsl #8
{
   12334:	00000046 	andeq	r0, r0, r6, asr #32
   12338:	0d689102 	stfeqp	f1, [r8, #-8]!
    return sel4runtime_read_tpidr_el0();
   1233c:	00727473 	rsbseq	r7, r2, r3, ror r4
   12340:	4b02c404 	blmi	c3358 <morecore_area+0x7a358>
}
   12344:	0000021a 	andeq	r0, r0, sl, lsl r2
   12348:	0f649102 	svceq	0x00649102
{
   1234c:	006e656c 	rsbeq	r6, lr, ip, ror #10
   12350:	0602c604 	streq	ip, [r2], -r4, lsl #12
    return (void *)sel4runtime_get_tls_base();
   12354:	00000046 	andeq	r0, r0, r6, asr #32
   12358:	0f749102 	svceq	0x00749102
}
   1235c:	c7040070 	smlsdxgt	r4, r0, r0, r0
   12360:	021a0e02 	andseq	r0, sl, #2, 28
{
   12364:	91020000 	mrsls	r0, (UNDEF: 2)
   12368:	cc0c0070 	stcgt	0, cr0, [ip], {112}	; 0x70
   1236c:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   12370:	460502ab 	strmi	r0, [r5], -fp, lsr #5
    bootinfo = bi;
   12374:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
   12378:	c00001c2 	andgt	r0, r0, r2, asr #3
   1237c:	01000000 	mrseq	r0, (UNDEF: 0)
   12380:	00067f9c 	muleq	r6, ip, pc	; <UNPREDICTABLE>
}
   12384:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   12388:	ab040074 	blge	112560 <morecore_area+0xc9560>
   1238c:	02dc2c02 	sbcseq	r2, ip, #512	; 0x200
   12390:	91020000 	mrsls	r0, (UNDEF: 2)
{
   12394:	42ce0e6c 	sbcmi	r0, lr, #108, 28	; 0x6c0
   12398:	ab040000 	blge	1123a0 <morecore_area+0xc93a0>
    return bootinfo;
   1239c:	00753a02 	rsbseq	r3, r5, r2, lsl #20
   123a0:	91020000 	mrsls	r0, (UNDEF: 2)
   123a4:	487e1068 	ldmdami	lr!, {r3, r5, r6, ip}^
}
   123a8:	ad040000 	stcge	0, cr0, [r4, #-0]
   123ac:	00460602 	subeq	r0, r6, r2, lsl #12
   123b0:	91020000 	mrsls	r0, (UNDEF: 2)
   123b4:	c28c1274 	addgt	r1, ip, #116, 4	; 0x40000007
{
   123b8:	00200001 	eoreq	r0, r0, r1
   123bc:	2a100000 	bcs	4123c4 <__bss_end__+0x2c937c>
   123c0:	0400004b 	streq	r0, [r0], #-75	; 0xffffffb5
   123c4:	460202b2 			; <UNDEFINED> instruction: 0x460202b2
   123c8:	02000000 	andeq	r0, r0, #0
   123cc:	00007091 	muleq	r0, r1, r0
   123d0:	004a570c 	subeq	r5, sl, ip, lsl #14
    register seL4_Word destptr asm("r0") = dest;
   123d4:	02900400 	addseq	r0, r0, #0, 8
    register seL4_Word info asm("r1") = info_arg;
   123d8:	00004605 	andeq	r4, r0, r5, lsl #12
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   123dc:	01c17800 	biceq	r7, r1, r0, lsl #16
   123e0:	0000e000 	andeq	lr, r0, r0
   123e4:	359c0100 	ldrcc	r0, [ip, #256]	; 0x100
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   123e8:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
   123ec:	00746466 	rsbseq	r6, r4, r6, ror #8
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   123f0:	2f029004 	svccs	0x00029004
   123f4:	000002dc 	ldrdeq	r0, [r0], -ip
   123f8:	0e649102 	lgneqs	f1, f2
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   123fc:	00004ac0 	andeq	r4, r0, r0, asr #21
   12400:	38029004 	stmdacc	r2, {r2, ip, pc}
   12404:	00000046 	andeq	r0, r0, r6, asr #32
    register seL4_Word scno asm("r7") = sys;
   12408:	0e609102 	lgneqs	f1, f2
    asm volatile(
   1240c:	00004814 	andeq	r4, r0, r4, lsl r8
    *out_info = info;
   12410:	13029104 	movwne	r9, #8452	; 0x2104
   12414:	0000021a 	andeq	r0, r0, sl, lsl r2
   12418:	0e5c9102 	logeqe	f1, f2
    *out_badge = destptr;
   1241c:	000048bb 			; <UNDEFINED> instruction: 0x000048bb
   12420:	13029204 	movwne	r9, #8708	; 0x2204
    *in_out_mr0 = msg0;
   12424:	000002dc 	ldrdeq	r0, [r0], -ip
   12428:	0e589102 	logeqe	f1, f2
   1242c:	000049be 			; <UNDEFINED> instruction: 0x000049be
    *in_out_mr1 = msg1;
   12430:	20029204 	andcs	r9, r2, r4, lsl #4
   12434:	00000046 	andeq	r0, r0, r6, asr #32
   12438:	10009102 	andne	r9, r0, r2, lsl #2
    *in_out_mr2 = msg2;
   1243c:	0000487e 	andeq	r4, r0, lr, ror r8
   12440:	06029404 	streq	r9, [r2], -r4, lsl #8
   12444:	00000046 	andeq	r0, r0, r6, asr #32
    *in_out_mr3 = msg3;
   12448:	0f749102 	svceq	0x00749102
   1244c:	006c6176 	rsbeq	r6, ip, r6, ror r1
   12450:	0e029504 	cfsh32eq	mvfx9, mvfx2, #4
}
   12454:	000002dc 	ldrdeq	r0, [r0], -ip
   12458:	0f6c9102 	svceq	0x006c9102
   1245c:	006e656c 	rsbeq	r6, lr, ip, ror #10
   12460:	06029604 	streq	r9, [r2], -r4, lsl #12
{
   12464:	00000046 	andeq	r0, r0, r6, asr #32
   12468:	12689102 	rsbne	r9, r8, #-2147483648	; 0x80000000
   1246c:	0001c194 	muleq	r1, r4, r1
   12470:	00000020 	andeq	r0, r0, r0, lsr #32
   12474:	004b2a10 	subeq	r2, fp, r0, lsl sl
    seL4_Word unused0 = 0;
   12478:	02980400 	addseq	r0, r8, #0, 8
   1247c:	00004602 	andeq	r4, r0, r2, lsl #12
    seL4_Word unused1 = 0;
   12480:	70910200 	addsvc	r0, r1, r0, lsl #4
   12484:	070c0000 	streq	r0, [ip, -r0]
    seL4_Word unused2 = 0;
   12488:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   1248c:	46050286 	strmi	r0, [r5], -r6, lsl #5
    seL4_Word unused3 = 0;
   12490:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   12494:	600001c1 	andvs	r0, r0, r1, asr #3
    seL4_Word unused4 = 0;
   12498:	01000000 	mrseq	r0, (UNDEF: 0)
   1249c:	0007819c 	muleq	r7, ip, r1
    seL4_Word unused5 = 0;
   124a0:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   124a4:	86040074 			; <UNDEFINED> instruction: 0x86040074
    arm_sys_send_recv(seL4_SysDebugPutChar, c, &unused0, 0, &unused1, &unused2, &unused3, &unused4, &unused5, 0);
   124a8:	02dc2302 	sbcseq	r2, ip, #134217728	; 0x8000000
   124ac:	91020000 	mrsls	r0, (UNDEF: 2)
   124b0:	48d80e6c 	ldmmi	r8, {r2, r3, r5, r6, r9, sl, fp}^
   124b4:	86040000 	strhi	r0, [r4], -r0
   124b8:	00462c02 	subeq	r2, r6, r2, lsl #24
   124bc:	91020000 	mrsls	r0, (UNDEF: 2)
   124c0:	48591068 	ldmdami	r9, {r3, r5, r6, ip}^
   124c4:	88040000 	stmdahi	r4, {}	; <UNPREDICTABLE>
   124c8:	00460602 	subeq	r0, r6, r2, lsl #12
   124cc:	91020000 	mrsls	r0, (UNDEF: 2)
   124d0:	1d0c0074 	stcne	0, cr0, [ip, #-464]	; 0xfffffe30
   124d4:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
   124d8:	4605027b 			; <UNDEFINED> instruction: 0x4605027b
   124dc:	b4000000 	strlt	r0, [r0], #-0
   124e0:	640001c0 	strvs	r0, [r0], #-448	; 0xfffffe40
   124e4:	01000000 	mrseq	r0, (UNDEF: 0)
   124e8:	0007dd9c 	muleq	r7, ip, sp
}
   124ec:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   124f0:	7b040074 	blvc	1126c8 <morecore_area+0xc96c8>
   124f4:	02dc2002 	sbcseq	r2, ip, #2
{
   124f8:	91020000 	mrsls	r0, (UNDEF: 2)
   124fc:	48d80e6c 	ldmmi	r8, {r2, r3, r5, r6, r9, sl, fp}^
   12500:	7b040000 	blvc	112508 <morecore_area+0xc9508>
   12504:	00462902 	subeq	r2, r6, r2, lsl #18
   12508:	91020000 	mrsls	r0, (UNDEF: 2)
    char *cdata = (char *)data;
   1250c:	48591068 	ldmdami	r9, {r3, r5, r6, ip}^
   12510:	7d040000 	stcvc	0, cr0, [r4, #-0]
    for (size_t i = 0; i < count; i++) {
   12514:	00460602 	subeq	r0, r6, r2, lsl #12
   12518:	91020000 	mrsls	r0, (UNDEF: 2)
   1251c:	72650f70 	rsbvc	r0, r5, #112, 30	; 0x1c0
        seL4_DebugPutChar(cdata[i]);
   12520:	7e040072 	mcrvc	0, 0, r0, cr4, cr2, {3}
   12524:	00460602 	subeq	r0, r6, r2, lsl #12
   12528:	91020000 	mrsls	r0, (UNDEF: 2)
   1252c:	020c0074 	andeq	r0, ip, #116	; 0x74
   12530:	04000049 	streq	r0, [r0], #-73	; 0xffffffb7
   12534:	46050257 			; <UNDEFINED> instruction: 0x46050257
    for (size_t i = 0; i < count; i++) {
   12538:	70000000 	andvc	r0, r0, r0
   1253c:	440001bf 	strmi	r0, [r0], #-447	; 0xfffffe41
   12540:	01000001 	tsteq	r0, r1
   12544:	0008839c 	muleq	r8, ip, r3
   12548:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   1254c:	57040074 	smlsdxpl	r4, r4, r0, r0
   12550:	02dc2e02 	sbcseq	r2, ip, #2, 28
    return count;
   12554:	91020000 	mrsls	r0, (UNDEF: 2)
}
   12558:	48d80e64 	ldmmi	r8, {r2, r5, r6, r9, sl, fp}^
   1255c:	57040000 	strpl	r0, [r4, -r0]
   12560:	00463702 	subeq	r3, r6, r2, lsl #14
{
   12564:	91020000 	mrsls	r0, (UNDEF: 2)
   12568:	48540e60 	ldmdami	r4, {r5, r6, r9, sl, fp}^
    sel4muslcsys_register_stdio_write_fn(kernel_putchar_write);
   1256c:	58040000 	stmdapl	r4, {}	; <UNPREDICTABLE>
   12570:	00460a02 	subeq	r0, r6, r2, lsl #20
   12574:	91020000 	mrsls	r0, (UNDEF: 2)
}
   12578:	48590e5c 	ldmdami	r9, {r2, r3, r4, r6, r9, sl, fp}^
   1257c:	58040000 	stmdapl	r4, {}	; <UNPREDICTABLE>
{
   12580:	04711f02 	ldrbteq	r1, [r1], #-3842	; 0xfffff0fe
   12584:	91020000 	mrsls	r0, (UNDEF: 2)
   12588:	487e1058 	ldmdami	lr!, {r3, r4, r6, ip}^
   1258c:	5a040000 	bpl	112594 <morecore_area+0xc9594>
   12590:	00460602 	subeq	r0, r6, r2, lsl #12
}
   12594:	91020000 	mrsls	r0, (UNDEF: 2)
   12598:	48261074 	stmdami	r6!, {r2, r4, r5, r6, ip}
   1259c:	5a040000 	bpl	1125a4 <morecore_area+0xc95a4>
   125a0:	00460e02 	subeq	r0, r6, r2, lsl #28
{
   125a4:	91020000 	mrsls	r0, (UNDEF: 2)
   125a8:	48d31068 	ldmmi	r3, {r3, r5, r6, ip}^
   125ac:	5b040000 	blpl	1125b4 <morecore_area+0xc95b4>
   125b0:	00460602 	subeq	r0, r6, r2, lsl #12
    get_fd_struct(fd)->filetype = FILE_TYPE_FREE;
   125b4:	91020000 	mrsls	r0, (UNDEF: 2)
   125b8:	bf941270 	svclt	0x00941270
   125bc:	00200001 	eoreq	r0, r0, r1
   125c0:	2a100000 	bcs	4125c8 <__bss_end__+0x2c9580>
   125c4:	0400004b 	streq	r0, [r0], #-75	; 0xffffffb5
    free_fd_table_index++;
   125c8:	4602025d 			; <UNDEFINED> instruction: 0x4602025d
   125cc:	02000000 	andeq	r0, r0, #0
   125d0:	00006c91 	muleq	r0, r1, ip
   125d4:	0049500c 	subeq	r5, r9, ip
   125d8:	02230400 	eoreq	r0, r3, #0, 8
   125dc:	00004605 	andeq	r4, r0, r5, lsl #12
   125e0:	01bd3800 			; <UNDEFINED> instruction: 0x01bd3800
    assert(free_fd_table_index < num_fds);
   125e4:	00023800 	andeq	r3, r2, r0, lsl #16
   125e8:	579c0100 	ldrpl	r0, [ip, r0, lsl #2]
   125ec:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
   125f0:	00746466 	rsbseq	r6, r4, r6, ror #8
   125f4:	1e022304 	cdpne	3, 0, cr2, cr2, cr4, {0}
   125f8:	000002dc 	ldrdeq	r0, [r0], -ip
   125fc:	0e549102 	logeqs	f1, f2
   12600:	000048d8 	ldrdeq	r4, [r0], -r8
   12604:	27022304 	strcs	r2, [r2, -r4, lsl #6]
   12608:	00000046 	andeq	r0, r0, r6, asr #32
   1260c:	0d509102 	ldfeqp	f1, [r0, #-8]
   12610:	00667562 	rsbeq	r7, r6, r2, ror #10
   12614:	39022304 	stmdbcc	r2, {r2, r8, r9, sp}
   12618:	00000957 	andeq	r0, r0, r7, asr r9
   1261c:	0e4c9102 	sqteqe	f1, f2
   12620:	000049c6 	andeq	r4, r0, r6, asr #19
    free_fd_table[free_fd_table_index] = fd;
   12624:	42022304 	andmi	r2, r2, #4, 6	; 0x10000000
   12628:	00000046 	andeq	r0, r0, r6, asr #32
   1262c:	10489102 	subne	r9, r8, r2, lsl #2
   12630:	000049b7 			; <UNDEFINED> instruction: 0x000049b7
   12634:	06022504 	streq	r2, [r2], -r4, lsl #10
   12638:	00000046 	andeq	r0, r0, r6, asr #32
   1263c:	0f749102 	svceq	0x00749102
   12640:	25040070 	strcs	r0, [r4, #-112]	; 0xffffff90
   12644:	00461202 	subeq	r1, r6, r2, lsl #4
   12648:	91020000 	mrsls	r0, (UNDEF: 2)
}
   1264c:	487e1070 	ldmdami	lr!, {r4, r5, r6, ip}^
   12650:	26040000 	strcs	r0, [r4], -r0
   12654:	00460602 	subeq	r0, r6, r2, lsl #12
{
   12658:	91020000 	mrsls	r0, (UNDEF: 2)
   1265c:	4826106c 	stmdami	r6!, {r2, r3, r5, r6, ip}
    if (free_fd_table_index == -1) {
   12660:	26040000 	strcs	r0, [r4], -r0
   12664:	00460e02 	subeq	r0, r6, r2, lsl #28
   12668:	91020000 	mrsls	r0, (UNDEF: 2)
   1266c:	47b31060 	ldrmi	r1, [r3, r0, rrx]!
   12670:	26040000 	strcs	r0, [r4], -r0
        return -EMFILE;
   12674:	00461502 	subeq	r1, r6, r2, lsl #10
   12678:	91020000 	mrsls	r0, (UNDEF: 2)
    free_fd_table_index--;
   1267c:	2029105c 	eorcs	r1, r9, ip, asr r0
   12680:	27040000 	strcs	r0, [r4, -r0]
   12684:	021a0e02 	andseq	r0, sl, #2, 28
   12688:	91020000 	mrsls	r0, (UNDEF: 2)
   1268c:	bd641264 	sfmlt	f1, 2, [r4, #-400]!	; 0xfffffe70
   12690:	00200001 	eoreq	r0, r0, r1
   12694:	2a100000 	bcs	41269c <__bss_end__+0x2c9654>
    return free_fd_table[free_fd_table_index + 1];
   12698:	0400004b 	streq	r0, [r0], #-75	; 0xffffffb5
   1269c:	46020229 	strmi	r0, [r2], -r9, lsr #4
   126a0:	02000000 	andeq	r0, r0, #0
   126a4:	00006891 	muleq	r0, r1, r8
   126a8:	01b7040b 			; <UNDEFINED> instruction: 0x01b7040b
   126ac:	060c0000 	streq	r0, [ip], -r0
   126b0:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
   126b4:	1a0d021e 	bne	352f34 <__bss_end__+0x209eec>
   126b8:	f8000002 			; <UNDEFINED> instruction: 0xf8000002
   126bc:	400001bc 			; <UNDEFINED> instruction: 0x400001bc
}
   126c0:	01000000 	mrseq	r0, (UNDEF: 0)
   126c4:	0009999c 	muleq	r9, ip, r9
   126c8:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   126cc:	1e040074 	mcrne	0, 0, r0, cr4, cr4, {3}
{
   126d0:	02dc2702 	sbcseq	r2, ip, #524288	; 0x80000
   126d4:	91020000 	mrsls	r0, (UNDEF: 2)
   126d8:	20290e74 	eorcs	r0, r9, r4, ror lr
   126dc:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    return fd < num_fds && fd >= FIRST_USER_FD;
   126e0:	021a3802 	andseq	r3, sl, #131072	; 0x20000
   126e4:	91020000 	mrsls	r0, (UNDEF: 2)
   126e8:	190c0070 	stmdbne	ip, {r4, r5, r6}
   126ec:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   126f0:	1a0d0212 	bne	352f40 <__bss_end__+0x209ef8>
   126f4:	8c000002 	stchi	0, cr0, [r0], {2}
   126f8:	6c0001bc 	stfvss	f0, [r0], {188}	; 0xbc
   126fc:	01000000 	mrseq	r0, (UNDEF: 0)
   12700:	0009f59c 	muleq	r9, ip, r5
   12704:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   12708:	12040074 	andne	r0, r4, #116	; 0x74
   1270c:	02dc2f02 	sbcseq	r2, ip, #2, 30
}
   12710:	91020000 	mrsls	r0, (UNDEF: 2)
   12714:	20290e6c 	eorcs	r0, r9, ip, ror #28
   12718:	13040000 	movwne	r0, #16384	; 0x4000
   1271c:	021a1302 	andseq	r1, sl, #134217728	; 0x8000000
{
   12720:	91020000 	mrsls	r0, (UNDEF: 2)
   12724:	47b30e68 	ldrmi	r0, [r3, r8, ror #28]!
   12728:	13040000 	movwne	r0, #16384	; 0x4000
    fd_table = malloc(FD_TABLE_SIZE(num_fds));
   1272c:	00461d02 	subeq	r1, r6, r2, lsl #26
   12730:	91020000 	mrsls	r0, (UNDEF: 2)
   12734:	476b1064 	strbmi	r1, [fp, -r4, rrx]!
   12738:	15040000 	strne	r0, [r4, #-0]
   1273c:	00460602 	subeq	r0, r6, r2, lsl #12
   12740:	91020000 	mrsls	r0, (UNDEF: 2)
   12744:	b00c0074 	andlt	r0, ip, r4, ror r0
   12748:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   1274c:	750a0201 	strvc	r0, [sl, #-513]	; 0xfffffdff
   12750:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
   12754:	9c0001bb 	stflss	f0, [r0], {187}	; 0xbb
    if (fd_table == NULL) {
   12758:	01000000 	mrseq	r0, (UNDEF: 0)
   1275c:	000a519c 	muleq	sl, ip, r1
   12760:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   12764:	01040074 	tsteq	r4, r4, ror r0
   12768:	02dc2602 	sbcseq	r2, ip, #2097152	; 0x200000
        return -ENOMEM;
   1276c:	91020000 	mrsls	r0, (UNDEF: 2)
   12770:	48d80e6c 	ldmmi	r8, {r2, r3, r5, r6, r9, sl, fp}^
    free_fd_table = malloc(FREE_FD_TABLE_SIZE(num_fds));
   12774:	01040000 	mrseq	r0, (UNDEF: 4)
   12778:	00462f02 	subeq	r2, r6, r2, lsl #30
   1277c:	91020000 	mrsls	r0, (UNDEF: 2)
   12780:	68700f68 	ldmdavs	r0!, {r3, r5, r6, r8, r9, sl, fp}^
   12784:	03040070 	movweq	r0, #16496	; 0x4070
   12788:	0a511102 	beq	1456b98 <__bss_end__+0x130db50>
   1278c:	91020000 	mrsls	r0, (UNDEF: 2)
   12790:	656c0f74 	strbvs	r0, [ip, #-3956]!	; 0xfffff08c
   12794:	0404006e 	streq	r0, [r4], #-110	; 0xffffff92
   12798:	00460602 	subeq	r0, r6, r2, lsl #12
   1279c:	91020000 	mrsls	r0, (UNDEF: 2)
   127a0:	040b0070 	streq	r0, [fp], #-112	; 0xffffff90
    if (free_fd_table == NULL) {
   127a4:	000000a7 	andeq	r0, r0, r7, lsr #1
   127a8:	0046e10c 	subeq	lr, r6, ip, lsl #2
   127ac:	01fb0400 	mvnseq	r0, r0, lsl #8
   127b0:	0002dc0d 	andeq	sp, r2, sp, lsl #24
   127b4:	01bb9800 			; <UNDEFINED> instruction: 0x01bb9800
        free(fd_table);
   127b8:	00005800 	andeq	r5, r0, r0, lsl #16
   127bc:	b39c0100 	orrslt	r0, ip, #0, 2
   127c0:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
   127c4:	00746466 	rsbseq	r6, r4, r6, ror #8
   127c8:	2501fb04 	strcs	pc, [r1, #-2820]	; 0xfffff4fc
        return -ENOMEM;
   127cc:	000002dc 	ldrdeq	r0, [r0], -ip
   127d0:	0e749102 	expeqs	f1, f2
    free_fd_table_index = -1;
   127d4:	000048d8 	ldrdeq	r4, [r0], -r8
   127d8:	2e01fb04 	vmlacs.f64	d15, d1, d4
   127dc:	00000046 	andeq	r0, r0, r6, asr #32
   127e0:	0e709102 	expeqs	f1, f2
    for (int i = FIRST_USER_FD; i < num_fds; i++) {
   127e4:	00002029 	andeq	r2, r0, r9, lsr #32
   127e8:	1001fc04 	andne	pc, r1, r4, lsl #24
   127ec:	0000021a 	andeq	r0, r0, sl, lsl r2
        add_free_fd(i);
   127f0:	0e6c9102 	lgneqe	f1, f2
   127f4:	00004650 	andeq	r4, r0, r0, asr r6
    for (int i = FIRST_USER_FD; i < num_fds; i++) {
   127f8:	1b01fc04 	blne	91810 <morecore_area+0x48810>
   127fc:	00000471 	andeq	r0, r0, r1, ror r4
   12800:	00689102 	rsbeq	r9, r8, r2, lsl #2
   12804:	004b8f0c 	subeq	r8, fp, ip, lsl #30
   12808:	01df0400 	bicseq	r0, pc, r0, lsl #8
   1280c:	0002dc0d 	andeq	sp, r2, sp, lsl #24
   12810:	01ba7400 			; <UNDEFINED> instruction: 0x01ba7400
   12814:	00012400 	andeq	r2, r1, r0, lsl #8
   12818:	499c0100 	ldmibmi	ip, {r8}
    return 0;
   1281c:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
}
   12820:	00746466 	rsbseq	r6, r4, r6, ror #8
   12824:	2f01df04 	svccs	0x0001df04
   12828:	000002dc 	ldrdeq	r0, [r0], -ip
{
   1282c:	0e649102 	lgneqs	f1, f2
   12830:	0000487e 	andeq	r4, r0, lr, ror r8
   12834:	3801df04 	stmdacc	r1, {r2, r8, r9, sl, fp, ip, lr, pc}
   12838:	00000046 	andeq	r0, r0, r6, asr #32
    int new_num_fds = num_fds + how_much;
   1283c:	0e609102 	lgneqs	f1, f2
   12840:	000049cd 	andeq	r4, r0, sp, asr #19
   12844:	1401e004 	strne	lr, [r1], #-4
   12848:	00000b49 	andeq	r0, r0, r9, asr #22
   1284c:	0e5c9102 	logeqe	f1, f2
   12850:	00004650 	andeq	r4, r0, r0, asr r6
    if (fd_table == NULL) {
   12854:	2001e004 	andcs	lr, r1, r4
   12858:	00000471 	andeq	r0, r0, r1, ror r4
   1285c:	10589102 	subsne	r9, r8, r2, lsl #2
   12860:	00004463 	andeq	r4, r0, r3, ror #8
   12864:	1d01e204 	sfmne	f6, 1, [r1, #-16]
        if (allocate_file_table() == -ENOMEM) {
   12868:	00000b4f 	andeq	r0, r0, pc, asr #22
   1286c:	12749102 	rsbsne	r9, r4, #-2147483648	; 0x80000000
   12870:	0001bac4 	andeq	fp, r1, r4, asr #21
   12874:	00000064 	andeq	r0, r0, r4, rrx
            return -ENOMEM;
   12878:	00202910 	eoreq	r2, r0, r0, lsl r9
   1287c:	01e80400 	mvneq	r0, r0, lsl #8
    muslcsys_fd_t *new_fd_table = malloc(FD_TABLE_SIZE(new_num_fds));
   12880:	00021a0f 	andeq	r1, r2, pc, lsl #20
   12884:	70910200 	addsvc	r0, r1, r0, lsl #4
   12888:	0047b310 	subeq	fp, r7, r0, lsl r3
   1288c:	01e90400 	mvneq	r0, r0, lsl #8
   12890:	00004607 	andeq	r4, r0, r7, lsl #12
   12894:	6c910200 	lfmvs	f0, 4, [r1], {0}
    if (!new_fd_table) {
   12898:	040b0000 	streq	r0, [fp], #-0
   1289c:	0000021a 	andeq	r0, r0, sl, lsl r2
   128a0:	0205040b 	andeq	r0, r5, #184549376	; 0xb000000
        LOG_ERROR("Failed to allocate new_vfds\n");
   128a4:	a70c0000 	strge	r0, [ip, -r0]
   128a8:	04000047 	streq	r0, [r0], #-71	; 0xffffffb9
   128ac:	dc0d01cd 	stfles	f0, [sp], {205}	; 0xcd
   128b0:	ac000002 	stcge	0, cr0, [r0], {2}
   128b4:	c80001b9 	stmdagt	r0, {r0, r3, r4, r5, r7, r8}
   128b8:	01000000 	mrseq	r0, (UNDEF: 0)
   128bc:	000be19c 	muleq	fp, ip, r1
   128c0:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   128c4:	cd040074 	stcgt	0, cr0, [r4, #-464]	; 0xfffffe30
   128c8:	02dc2d01 	sbcseq	r2, ip, #1, 26	; 0x40
   128cc:	91020000 	mrsls	r0, (UNDEF: 2)
   128d0:	48d80e6c 	ldmmi	r8, {r2, r3, r5, r6, r9, sl, fp}^
   128d4:	cd040000 	stcgt	0, cr0, [r4, #-0]
   128d8:	00463601 	subeq	r3, r6, r1, lsl #12
   128dc:	91020000 	mrsls	r0, (UNDEF: 2)
   128e0:	20290e68 	eorcs	r0, r9, r8, ror #28
   128e4:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
        return -ENOMEM;
   128e8:	021a1101 	andseq	r1, sl, #1073741824	; 0x40000000
   128ec:	91020000 	mrsls	r0, (UNDEF: 2)
    int *new_free_fd_table = malloc(FREE_FD_TABLE_SIZE(new_num_fds));
   128f0:	47b30e64 	ldrmi	r0, [r3, r4, ror #28]!
   128f4:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
   128f8:	00461b01 	subeq	r1, r6, r1, lsl #22
   128fc:	91020000 	mrsls	r0, (UNDEF: 2)
   12900:	46500e60 	ldrbmi	r0, [r0], -r0, ror #28
   12904:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
   12908:	04712901 	ldrbteq	r2, [r1], #-2305	; 0xfffff6ff
    if (!new_free_fd_table) {
   1290c:	91020000 	mrsls	r0, (UNDEF: 2)
   12910:	47f41000 	ldrbmi	r1, [r4, r0]!
   12914:	d0040000 	andle	r0, r4, r0
        free(new_fd_table);
   12918:	00460601 	subeq	r0, r6, r1, lsl #12
   1291c:	91020000 	mrsls	r0, (UNDEF: 2)
        ZF_LOGE("Failed to allocate free fd table\n");
   12920:	44631070 	strbtmi	r1, [r3], #-112	; 0xffffff90
   12924:	d1040000 	mrsle	r0, (UNDEF: 4)
   12928:	0b4f1d01 	bleq	13d9d34 <__bss_end__+0x1290cec>
   1292c:	91020000 	mrsls	r0, (UNDEF: 2)
   12930:	200c0074 	andcs	r0, ip, r4, ror r0
   12934:	04000047 	streq	r0, [r0], #-71	; 0xffffffb9
   12938:	4f1c01c5 	svcmi	0x001c01c5
   1293c:	5400000b 	strpl	r0, [r0], #-11
   12940:	580001b9 	stmdapl	r0, {r0, r3, r4, r5, r7, r8}
   12944:	01000000 	mrseq	r0, (UNDEF: 0)
   12948:	000c3d9c 	muleq	ip, ip, sp
   1294c:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   12950:	c5040074 	strgt	r0, [r4, #-116]	; 0xffffff8c
   12954:	02dc3901 	sbcseq	r3, ip, #16384	; 0x4000
   12958:	91020000 	mrsls	r0, (UNDEF: 2)
   1295c:	48d80e74 	ldmmi	r8, {r2, r4, r5, r6, r9, sl, fp}^
   12960:	c6040000 	strgt	r0, [r4], -r0
        return -ENOMEM;
   12964:	00460e01 	subeq	r0, r6, r1, lsl #28
   12968:	91020000 	mrsls	r0, (UNDEF: 2)
    memcpy(new_free_fd_table, free_fd_table, FREE_FD_TABLE_SIZE(num_fds));
   1296c:	20290e70 	eorcs	r0, r9, r0, ror lr
   12970:	c7040000 	strgt	r0, [r4, -r0]
   12974:	021a1601 	andseq	r1, sl, #1048576	; 0x100000
   12978:	91020000 	mrsls	r0, (UNDEF: 2)
   1297c:	46500e6c 	ldrbmi	r0, [r0], -ip, ror #28
   12980:	c7040000 	strgt	r0, [r4, -r0]
   12984:	04712101 	ldrbteq	r2, [r1], #-257	; 0xfffffeff
   12988:	91020000 	mrsls	r0, (UNDEF: 2)
   1298c:	f20c0068 	vhadd.s8	q0, q6, q12
   12990:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   12994:	4f1c01b3 	svcmi	0x001c01b3
    memcpy(new_fd_table, fd_table, FD_TABLE_SIZE(num_fds));
   12998:	c800000b 	stmdagt	r0, {r0, r1, r3}
   1299c:	8c0001b8 	stfhis	f0, [r0], {184}	; 0xb8
   129a0:	01000000 	mrseq	r0, (UNDEF: 0)
   129a4:	000ca99c 	muleq	ip, ip, r9
   129a8:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
   129ac:	b3040074 	movwlt	r0, #16500	; 0x4074
   129b0:	02dc4101 	sbcseq	r4, ip, #1073741824	; 0x40000000
   129b4:	91020000 	mrsls	r0, (UNDEF: 2)
   129b8:	487e0e74 	ldmdami	lr!, {r2, r4, r5, r6, r9, sl, fp}^
   129bc:	b4040000 	strlt	r0, [r4], #-0
    free(fd_table);
   129c0:	00460f01 	subeq	r0, r6, r1, lsl #30
   129c4:	91020000 	mrsls	r0, (UNDEF: 2)
   129c8:	20290e70 	eorcs	r0, r9, r0, ror lr
   129cc:	b5040000 	strlt	r0, [r4, #-0]
   129d0:	021a1701 	andseq	r1, sl, #262144	; 0x40000
    free(free_fd_table);
   129d4:	91020000 	mrsls	r0, (UNDEF: 2)
   129d8:	47b30e6c 	ldrmi	r0, [r3, ip, ror #28]!
   129dc:	b6040000 	strlt	r0, [r4], -r0
   129e0:	00460f01 	subeq	r0, r6, r1, lsl #30
   129e4:	91020000 	mrsls	r0, (UNDEF: 2)
    fd_table = new_fd_table;
   129e8:	46500e68 	ldrbmi	r0, [r0], -r8, ror #28
   129ec:	b6040000 	strlt	r0, [r4], -r0
   129f0:	04711d01 	ldrbteq	r1, [r1], #-3329	; 0xfffff2ff
   129f4:	91020000 	mrsls	r0, (UNDEF: 2)
    free_fd_table = new_free_fd_table;
   129f8:	ed130000 	ldc	0, cr0, [r3, #-0]
   129fc:	04000049 	streq	r0, [r0], #-73	; 0xffffffb7
   12a00:	4f230195 	svcmi	0x00230195
   12a04:	d400000b 	strle	r0, [r0], #-11
    num_fds = new_num_fds;
   12a08:	f40001b7 	vst4.32	{d0,d2,d4,d6}, [r0 :256], r7
   12a0c:	01000000 	mrseq	r0, (UNDEF: 0)
   12a10:	000d3f9c 	muleq	sp, ip, pc	; <UNPREDICTABLE>
   12a14:	64660d00 	strbtvs	r0, [r6], #-3328	; 0xfffff300
    for (int i = num_fds; i < new_num_fds; i++) {
   12a18:	95040074 	strls	r0, [r4, #-116]	; 0xffffff8c
   12a1c:	02dc4901 	sbcseq	r4, ip, #16384	; 0x4000
   12a20:	91020000 	mrsls	r0, (UNDEF: 2)
   12a24:	487e0e6c 	ldmdami	lr!, {r2, r3, r5, r6, r9, sl, fp}^
   12a28:	96040000 	strls	r0, [r4], -r0
        add_free_fd(i);
   12a2c:	00461701 	subeq	r1, r6, r1, lsl #14
   12a30:	91020000 	mrsls	r0, (UNDEF: 2)
    for (int i = num_fds; i < new_num_fds; i++) {
   12a34:	20290e68 	eorcs	r0, r9, r8, ror #28
   12a38:	97040000 	strls	r0, [r4, -r0]
   12a3c:	021a1f01 	andseq	r1, sl, #1, 30
   12a40:	91020000 	mrsls	r0, (UNDEF: 2)
   12a44:	47b30e64 	ldrmi	r0, [r3, r4, ror #28]!
   12a48:	98040000 	stmdals	r4, {}	; <UNPREDICTABLE>
   12a4c:	00461701 	subeq	r1, r6, r1, lsl #14
    return 0;
   12a50:	91020000 	mrsls	r0, (UNDEF: 2)
}
   12a54:	46500e60 	ldrbmi	r0, [r0], -r0, ror #28
   12a58:	99040000 	stmdbls	r4, {}	; <UNPREDICTABLE>
   12a5c:	04711101 	ldrbteq	r1, [r1], #-257	; 0xfffffeff
{
   12a60:	91020000 	mrsls	r0, (UNDEF: 2)
   12a64:	47f40e00 	ldrbmi	r0, [r4, r0, lsl #28]!
    if (fd_table == NULL) {
   12a68:	9a040000 	bls	112a70 <morecore_area+0xc9a70>
   12a6c:	04711101 	ldrbteq	r1, [r1], #-257	; 0xfffffeff
   12a70:	91020000 	mrsls	r0, (UNDEF: 2)
   12a74:	b8041204 	stmdalt	r4, {r2, r9, ip}
   12a78:	00800001 	addeq	r0, r0, r1
        if (allocate_file_table() == -ENOMEM) {
   12a7c:	63100000 	tstvs	r0, #0
   12a80:	04000044 	streq	r0, [r0], #-68	; 0xffffffbc
   12a84:	4f1e019f 	svcmi	0x001e019f
   12a88:	0200000b 	andeq	r0, r0, #11
            return -ENOMEM;
   12a8c:	00007491 	muleq	r0, r1, r4
   12a90:	0047050c 	subeq	r0, r7, ip, lsl #10
    return get_free_fd();
   12a94:	01850400 	orreq	r0, r5, r0, lsl #8
   12a98:	000b4f1c 	andeq	r4, fp, ip, lsl pc
}
   12a9c:	01b76000 			; <UNDEFINED> instruction: 0x01b76000
   12aa0:	00007400 	andeq	r7, r0, r0, lsl #8
{
   12aa4:	8b9c0100 	blhi	fe712eac <__bss_end__+0xfe5c9e64>
   12aa8:	0d00000d 	stceq	0, cr0, [r0, #-52]	; 0xffffffcc
   12aac:	00746466 	rsbseq	r6, r4, r6, ror #8
   12ab0:	43018504 	movwmi	r8, #5380	; 0x1504
    assert(fd < num_fds && fd >= FIRST_USER_FD);
   12ab4:	000002dc 	ldrdeq	r0, [r0], -ip
   12ab8:	0e749102 	expeqs	f1, f2
   12abc:	0000487e 	andeq	r4, r0, lr, ror r8
   12ac0:	11018604 	tstne	r1, r4, lsl #12
   12ac4:	00000046 	andeq	r0, r0, r6, asr #32
   12ac8:	0e709102 	expeqs	f1, f2
   12acc:	00004650 	andeq	r4, r0, r0, asr r6
   12ad0:	12018704 	andne	r8, r1, #4, 14	; 0x100000
   12ad4:	00000471 	andeq	r0, r0, r1, ror r4
   12ad8:	006c9102 	rsbeq	r9, ip, r2, lsl #2
   12adc:	0047bb13 	subeq	fp, r7, r3, lsl fp
   12ae0:	01700400 	cmneq	r0, r0, lsl #8
   12ae4:	000b4f23 	andeq	r4, fp, r3, lsr #30
   12ae8:	01b6c000 			; <UNDEFINED> instruction: 0x01b6c000
   12aec:	0000a000 	andeq	sl, r0, r0
   12af0:	f79c0100 			; <UNDEFINED> instruction: 0xf79c0100
   12af4:	0d00000d 	stceq	0, cr0, [r0, #-52]	; 0xffffffcc
    return &fd_table[fd - FIRST_USER_FD];
   12af8:	00746466 	rsbseq	r6, r4, r6, ror #8
   12afc:	4b017004 	blmi	6eb14 <morecore_area+0x25b14>
   12b00:	000002dc 	ldrdeq	r0, [r0], -ip
   12b04:	0e6c9102 	lgneqe	f1, f2
   12b08:	0000487e 	andeq	r4, r0, lr, ror r8
   12b0c:	19017104 	stmdbne	r1, {r2, r8, ip, sp, lr}
   12b10:	00000046 	andeq	r0, r0, r6, asr #32
}
   12b14:	0e689102 	lgneqe	f1, f2
   12b18:	00004650 	andeq	r4, r0, r0, asr r6
   12b1c:	1a017204 	bne	6f334 <morecore_area+0x26334>
{
   12b20:	00000471 	andeq	r0, r0, r1, ror r4
   12b24:	0f649102 	svceq	0x00649102
   12b28:	00727265 	rsbseq	r7, r2, r5, ror #4
   12b2c:	06017404 	streq	r7, [r1], -r4, lsl #8
   12b30:	00000046 	andeq	r0, r0, r6, asr #32
    char *realdata = data;
   12b34:	10749102 	rsbsne	r9, r4, r2, lsl #2
   12b38:	00004463 	andeq	r4, r0, r3, ror #8
    return __arch_write(realdata, count);
   12b3c:	1d017504 	cfstr32ne	mvfx7, [r1, #-16]
   12b40:	00000b4f 	andeq	r0, r0, pc, asr #22
   12b44:	00709102 	rsbseq	r9, r0, r2, lsl #2
   12b48:	0046990c 	subeq	r9, r6, ip, lsl #18
}
   12b4c:	01680400 	cmneq	r8, r0, lsl #8
   12b50:	00004605 	andeq	r4, r0, r5, lsl #12
   12b54:	01b66c00 			; <UNDEFINED> instruction: 0x01b66c00
{
   12b58:	00005400 	andeq	r5, r0, r0, lsl #8
   12b5c:	339c0100 	orrscc	r0, ip, #0, 2
   12b60:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
   12b64:	00746466 	rsbseq	r6, r4, r6, ror #8
   12b68:	2a016804 	bcs	6cb80 <morecore_area+0x23b80>
   12b6c:	000002dc 	ldrdeq	r0, [r0], -ip
    flags &= ~O_LARGEFILE;
   12b70:	0e749102 	expeqs	f1, f2
   12b74:	0000487e 	andeq	r4, r0, lr, ror r8
   12b78:	33016804 	movwcc	r6, #6148	; 0x1804
    if (flags != O_RDONLY) {
   12b7c:	00000046 	andeq	r0, r0, r6, asr #32
   12b80:	00709102 	rsbseq	r9, r0, r2, lsl #2
   12b84:	0048850c 	subeq	r8, r8, ip, lsl #10
        ZF_LOGE("Open only supports O_RDONLY, not 0x%x on %s\n", flags, pathname);
   12b88:	015e0400 	cmpeq	lr, r0, lsl #8
   12b8c:	00004605 	andeq	r4, r0, r5, lsl #12
   12b90:	01b61800 			; <UNDEFINED> instruction: 0x01b61800
   12b94:	00005400 	andeq	r5, r0, r0, lsl #8
   12b98:	7f9c0100 	svcvc	0x009c0100
   12b9c:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
   12ba0:	00746466 	rsbseq	r6, r4, r6, ror #8
   12ba4:	2b015e04 	blcs	6a3bc <morecore_area+0x213bc>
   12ba8:	000002dc 	ldrdeq	r0, [r0], -ip
   12bac:	0e6c9102 	lgneqe	f1, f2
   12bb0:	000048d8 	ldrdeq	r4, [r0], -r8
   12bb4:	34015e04 	strcc	r5, [r1], #-3588	; 0xfffff1fc
   12bb8:	00000046 	andeq	r0, r0, r6, asr #32
   12bbc:	10689102 	rsbne	r9, r8, r2, lsl #2
   12bc0:	0000487e 	andeq	r4, r0, lr, ror r8
   12bc4:	06016004 	streq	r6, [r1], -r4
   12bc8:	00000046 	andeq	r0, r0, r6, asr #32
   12bcc:	00749102 	rsbseq	r9, r4, r2, lsl #2
   12bd0:	004a850c 	subeq	r8, sl, ip, lsl #10
   12bd4:	01380400 	teqeq	r8, r0, lsl #8
   12bd8:	00021a0d 	andeq	r1, r2, sp, lsl #20
        assert(flags == O_RDONLY);
   12bdc:	01b50800 			; <UNDEFINED> instruction: 0x01b50800
   12be0:	00011000 	andeq	r1, r1, r0
   12be4:	219c0100 	orrscs	r0, ip, r0, lsl #2
   12be8:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
   12bec:	00746466 	rsbseq	r6, r4, r6, ror #8
   12bf0:	26013804 	strcs	r3, [r1], -r4, lsl #16
   12bf4:	000002dc 	ldrdeq	r0, [r0], -ip
   12bf8:	0e649102 	lgneqs	f1, f2
   12bfc:	000048d8 	ldrdeq	r4, [r0], -r8
   12c00:	2f013804 	svccs	0x00013804
   12c04:	00000046 	andeq	r0, r0, r6, asr #32
        return -EINVAL;
   12c08:	0d609102 	stfeqp	f1, [r0, #-8]!
   12c0c:	006e656c 	rsbeq	r6, lr, ip, ror #10
    char const *file = NULL;
   12c10:	40013804 	andmi	r3, r1, r4, lsl #16
   12c14:	00000471 	andeq	r0, r0, r1, ror r4
    if (cpio_get_file_impl && cpio_archive_symbol) {
   12c18:	0f5c9102 	svceq	0x005c9102
   12c1c:	0400686e 	streq	r6, [r0], #-2158	; 0xfffff792
   12c20:	2120013a 			; <UNDEFINED> instruction: 0x2120013a
   12c24:	0200000f 	andeq	r0, r0, #15
   12c28:	82106c91 	andshi	r6, r0, #37120	; 0x9100
   12c2c:	04000046 	streq	r0, [r0], #-70	; 0xffffffba
   12c30:	1a0e013b 	bne	393124 <__bss_end__+0x24a0dc>
   12c34:	02000002 	andeq	r0, r0, #2
   12c38:	650f7491 	strvs	r7, [pc, #-1169]	; 127af <allocate_file_table+0x8f>
   12c3c:	04007272 	streq	r7, [r0], #-626	; 0xfffffd8e
        file = cpio_get_file_impl(cpio_archive_symbol, cpio_archive_len, pathname, &size);
   12c40:	4606013c 			; <UNDEFINED> instruction: 0x4606013c
   12c44:	02000000 	andeq	r0, r0, #0
   12c48:	dd147091 	ldcle	0, cr7, [r4, #-580]	; 0xfffffdbc
   12c4c:	04000049 	streq	r0, [r0], #-73	; 0xffffffb7
   12c50:	f0020158 			; <UNDEFINED> instruction: 0xf0020158
   12c54:	120001b5 	andne	r0, r0, #1073741869	; 0x4000002d
   12c58:	0001b58c 	andeq	fp, r1, ip, lsl #11
   12c5c:	00000034 	andeq	r0, r0, r4, lsr r0
   12c60:	0047ef10 	subeq	lr, r7, r0, lsl pc
   12c64:	014a0400 	cmpeq	sl, r0, lsl #8
   12c68:	00021a0f 	andeq	r1, r2, pc, lsl #20
   12c6c:	68910200 	ldmvs	r1, {r9}
   12c70:	040b0000 	streq	r0, [fp], #-0
        if (!file && strncmp(pathname, "./", 2) == 0) {
   12c74:	000001a2 	andeq	r0, r0, r2, lsr #3
   12c78:	00491f0c 	subeq	r1, r9, ip, lsl #30
   12c7c:	01330400 	teqeq	r3, r0, lsl #8
   12c80:	00004605 	andeq	r4, r0, r5, lsl #12
   12c84:	01b4c800 			; <UNDEFINED> instruction: 0x01b4c800
   12c88:	00004000 	andeq	r4, r0, r0
   12c8c:	639c0100 	orrsvs	r0, ip, #0, 2
   12c90:	0d00000f 	stceq	0, cr0, [r0, #-60]	; 0xffffffc4
   12c94:	00746466 	rsbseq	r6, r4, r6, ror #8
   12c98:	21013304 	tstcs	r1, r4, lsl #6
   12c9c:	000002dc 	ldrdeq	r0, [r0], -ip
            file = cpio_get_file_impl(cpio_archive_symbol, cpio_archive_len, pathname + 2, &size);
   12ca0:	0e749102 	expeqs	f1, f2
   12ca4:	00003202 	andeq	r3, r0, r2, lsl #4
   12ca8:	32013304 	andcc	r3, r1, #4, 6	; 0x10000000
   12cac:	0000021a 	andeq	r0, r0, sl, lsl r2
   12cb0:	00709102 	rsbseq	r9, r0, r2, lsl #2
   12cb4:	0046ed0c 	subeq	lr, r6, ip, lsl #26
   12cb8:	01060400 	tsteq	r6, r0, lsl #8
   12cbc:	00004605 	andeq	r4, r0, r5, lsl #12
   12cc0:	01b31800 			; <UNDEFINED> instruction: 0x01b31800
   12cc4:	0001b000 	andeq	fp, r1, r0
   12cc8:	2f9c0100 	svccs	0x009c0100
   12ccc:	0d000010 	stceq	0, cr0, [r0, #-64]	; 0xffffffc0
   12cd0:	00746466 	rsbseq	r6, r4, r6, ror #8
   12cd4:	29010604 	stmdbcs	r1, {r2, r9, sl}
    if (!file) {
   12cd8:	000002dc 	ldrdeq	r0, [r0], -ip
   12cdc:	0e5c9102 	logeqe	f1, f2
   12ce0:	00003202 	andeq	r3, r0, r2, lsl #4
        ZF_LOGE("Failed to open file %s\n", pathname);
   12ce4:	3a010604 	bcc	544fc <morecore_area+0xb4fc>
   12ce8:	0000021a 	andeq	r0, r0, sl, lsl r2
   12cec:	0e589102 	logeqe	f1, f2
   12cf0:	000047b3 			; <UNDEFINED> instruction: 0x000047b3
   12cf4:	44010604 	strmi	r0, [r1], #-1540	; 0xfffff9fc
   12cf8:	00000046 	andeq	r0, r0, r6, asr #32
   12cfc:	0f549102 	svceq	0x00549102
   12d00:	00646e65 	rsbeq	r6, r4, r5, ror #28
   12d04:	0e010804 	cdpeq	8, 0, cr0, cr1, cr4, {0}
   12d08:	0000021a 	andeq	r0, r0, sl, lsl r2
   12d0c:	0f649102 	svceq	0x00649102
   12d10:	09040070 	stmdbeq	r4, {r4, r5, r6}
   12d14:	021a0e01 	andseq	r0, sl, #1, 28
   12d18:	91020000 	mrsls	r0, (UNDEF: 2)
   12d1c:	487e1074 	ldmdami	lr!, {r2, r4, r5, r6, ip}^
   12d20:	0a040000 	beq	112d28 <morecore_area+0xc9d28>
   12d24:	00460601 	subeq	r0, r6, r1, lsl #12
   12d28:	91020000 	mrsls	r0, (UNDEF: 2)
   12d2c:	b3501570 	cmplt	r0, #112, 10	; 0x1c000000
        return -ENOENT;
   12d30:	00200001 	eoreq	r0, r0, r1
   12d34:	0ffa0000 	svceq	0x00fa0000
    int fd = allocate_fd();
   12d38:	2a100000 	bcs	412d40 <__bss_end__+0x2c9cf8>
   12d3c:	0400004b 	streq	r0, [r0], #-75	; 0xffffffb5
    if (fd == -EMFILE) {
   12d40:	4602010c 	strmi	r0, [r2], -ip, lsl #2
   12d44:	02000000 	andeq	r0, r0, #0
   12d48:	15006091 	strne	r6, [r0, #-145]	; 0xffffff6f
        ZF_LOGE("Out of fds!\n");
   12d4c:	0001b380 	andeq	fp, r1, r0, lsl #7
   12d50:	00000080 	andeq	r0, r0, r0, lsl #1
   12d54:	00001016 	andeq	r1, r0, r6, lsl r0
   12d58:	0400710f 	streq	r7, [r0], #-271	; 0xfffffef1
   12d5c:	1a0f0110 	bne	3d31a4 <__bss_end__+0x28a15c>
   12d60:	02000002 	andeq	r0, r0, #2
   12d64:	12006c91 	andne	r6, r0, #37120	; 0x9100
   12d68:	0001b404 	andeq	fp, r1, r4, lsl #8
   12d6c:	000000a4 	andeq	r0, r0, r4, lsr #1
   12d70:	0400710f 	streq	r7, [r0], #-271	; 0xfffffef1
   12d74:	1a0f011e 	bne	3d31f4 <__bss_end__+0x28a1ac>
   12d78:	02000002 	andeq	r0, r0, #2
   12d7c:	00006891 	muleq	r0, r1, r8
   12d80:	0048720c 	subeq	r7, r8, ip, lsl #4
   12d84:	01000400 	tsteq	r0, r0, lsl #8
   12d88:	00004605 	andeq	r4, r0, r5, lsl #12
   12d8c:	01b2d400 			; <UNDEFINED> instruction: 0x01b2d400
        return -EMFILE;
   12d90:	00004400 	andeq	r4, r0, r0, lsl #8
   12d94:	7b9c0100 	blvc	fe71319c <__bss_end__+0xfe5ca154>
    muslcsys_fd_t *fds = get_fd_struct(fd);
   12d98:	0d000010 	stceq	0, cr0, [r0, #-64]	; 0xffffffc0
   12d9c:	00746466 	rsbseq	r6, r4, r6, ror #8
   12da0:	24010004 	strcs	r0, [r1], #-4
    fds->filetype = FILE_TYPE_CPIO;
   12da4:	000002dc 	ldrdeq	r0, [r0], -ip
   12da8:	0e749102 	expeqs	f1, f2
   12dac:	000048ae 	andeq	r4, r0, lr, lsr #17
    fds->data = malloc(sizeof(cpio_file_data_t));
   12db0:	2d010004 	stccs	0, cr0, [r1, #-16]
   12db4:	00000046 	andeq	r0, r0, r6, asr #32
   12db8:	0e709102 	expeqs	f1, f2
   12dbc:	00002029 	andeq	r2, r0, r9, lsr #32
   12dc0:	16010104 	strne	r0, [r1], -r4, lsl #2
   12dc4:	0000021a 	andeq	r0, r0, sl, lsl r2
    if (!fds->data) {
   12dc8:	006c9102 	rsbeq	r9, ip, r2, lsl #2
   12dcc:	00482c16 	subeq	r2, r8, r6, lsl ip
   12dd0:	05ed0400 	strbeq	r0, [sp, #1024]!	; 0x400
   12dd4:	00000046 	andeq	r0, r0, r6, asr #32
        ZF_LOGE("Malloc failed\n");
   12dd8:	0001b204 	andeq	fp, r1, r4, lsl #4
   12ddc:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12de0:	10fa9c01 	rscsne	r9, sl, r1, lsl #24
   12de4:	66170000 	ldrvs	r0, [r7], -r0
   12de8:	04007464 	streq	r7, [r0], #-1124	; 0xfffffb9c
   12dec:	02dc2ced 	sbcseq	r2, ip, #60672	; 0xed00
   12df0:	91020000 	mrsls	r0, (UNDEF: 2)
   12df4:	487e186c 	ldmdami	lr!, {r2, r3, r5, r6, fp, ip}^
   12df8:	ed040000 	stc	0, cr0, [r4, #-0]
   12dfc:	00004635 	andeq	r4, r0, r5, lsr r6
   12e00:	68910200 	ldmvs	r1, {r9}
   12e04:	00202918 	eoreq	r2, r0, r8, lsl r9
   12e08:	17ee0400 	strbne	r0, [lr, r0, lsl #8]!
   12e0c:	0000021a 	andeq	r0, r0, sl, lsl r2
   12e10:	18649102 	stmdane	r4!, {r1, r8, ip, pc}^
   12e14:	000047b3 			; <UNDEFINED> instruction: 0x000047b3
   12e18:	4621ee04 	strtmi	lr, [r1], -r4, lsl #28
        add_free_fd(fd);
   12e1c:	02000000 	andeq	r0, r0, #0
   12e20:	26196091 			; <UNDEFINED> instruction: 0x26196091
        return -ENOMEM;
   12e24:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
   12e28:	004606f0 	strdeq	r0, [r6], #-96	; 0xffffffa0
    cpio_file_data_t *fd_data = (cpio_file_data_t *)fds->data;
   12e2c:	91020000 	mrsls	r0, (UNDEF: 2)
   12e30:	b2201270 	eorlt	r1, r0, #112, 4
   12e34:	00200001 	eoreq	r0, r0, r1
    fd_data->start = file;
   12e38:	2a190000 	bcs	652e40 <__bss_end__+0x509df8>
   12e3c:	0400004b 	streq	r0, [r0], #-75	; 0xffffffb5
   12e40:	004602f2 	strdeq	r0, [r6], #-34	; 0xffffffde
    fd_data->size = size;
   12e44:	91020000 	mrsls	r0, (UNDEF: 2)
   12e48:	1a000074 	bne	13020 <sys_close+0x6c>
   12e4c:	000047fc 	strdeq	r4, [r0], -ip
    fd_data->current = 0;
   12e50:	460cd504 	strmi	sp, [ip], -r4, lsl #10
   12e54:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
   12e58:	8c0001b1 	stfhis	f0, [r0], {177}	; 0xb1
   12e5c:	01000000 	mrseq	r0, (UNDEF: 0)
    return fd;
   12e60:	0011519c 	mulseq	r1, ip, r1
}
   12e64:	64661700 	strbtvs	r1, [r6], #-1792	; 0xfffff900
   12e68:	d5040074 	strle	r0, [r4, #-116]	; 0xffffff8c
   12e6c:	0002dc22 	andeq	sp, r2, r2, lsr #24
{
   12e70:	6c910200 	lfmvs	f0, 4, [r1], {0}
   12e74:	00487e18 	subeq	r7, r8, r8, lsl lr
   12e78:	2bd50400 	blcs	ff553e80 <__bss_end__+0xff40ae38>
   12e7c:	00000046 	andeq	r0, r0, r6, asr #32
    const char *pathname = va_arg(ap, const char *);
   12e80:	1b689102 	blne	1a37290 <__bss_end__+0x18ee248>
   12e84:	00676174 	rsbeq	r6, r7, r4, ror r1
   12e88:	750bd704 	strvc	sp, [fp, #-1796]	; 0xfffff8fc
   12e8c:	02000000 	andeq	r0, r0, #0
   12e90:	e2197491 	ands	r7, r9, #-1862270976	; 0x91000000
    int flags = va_arg(ap, int);
   12e94:	04000049 	streq	r0, [r0], #-73	; 0xffffffb7
   12e98:	004606d8 	ldrdeq	r0, [r6], #-104	; 0xffffff98
   12e9c:	91020000 	mrsls	r0, (UNDEF: 2)
   12ea0:	f2160070 	vqadd.s16	q0, q3, q8
   12ea4:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
    mode_t mode = va_arg(ap, mode_t);
   12ea8:	004605c9 	subeq	r0, r6, r9, asr #11
   12eac:	b0fc0000 	rscslt	r0, ip, r0
   12eb0:	007c0001 	rsbseq	r0, ip, r1
   12eb4:	9c010000 	stcls	0, cr0, [r1], {-0}
   12eb8:	00001196 	muleq	r0, r6, r1
    return sys_open_impl(pathname, flags, mode);
   12ebc:	74646617 	strbtvc	r6, [r4], #-1559	; 0xfffff9e9
   12ec0:	21c90400 	biccs	r0, r9, r0, lsl #8
   12ec4:	000002dc 	ldrdeq	r0, [r0], -ip
   12ec8:	1b6c9102 	blne	1b372d8 <__bss_end__+0x19ee290>
   12ecc:	cb040069 	blgt	113078 <morecore_area+0xca078>
}
   12ed0:	00004606 	andeq	r4, r0, r6, lsl #12
   12ed4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   12ed8:	0065721b 	rsbeq	r7, r5, fp, lsl r2
{
   12edc:	9622cc04 	strtls	ip, [r2], -r4, lsl #24
   12ee0:	02000011 	andeq	r0, r0, #17
   12ee4:	0b007091 	bleq	2f130 <__bss_start+0x2844>
   12ee8:	00017504 	andeq	r7, r1, r4, lsl #10
    int dirfd = va_arg(ap, int);
   12eec:	47d71600 	ldrbmi	r1, [r7, r0, lsl #12]
   12ef0:	bb040000 	bllt	112ef8 <morecore_area+0xc9ef8>
   12ef4:	00004605 	andeq	r4, r0, r5, lsl #12
   12ef8:	01b05000 	movseq	r5, r0
   12efc:	0000ac00 	andeq	sl, r0, r0, lsl #24
    const char *pathname = va_arg(ap, const char *);
   12f00:	189c0100 	ldmne	ip, {r8}
   12f04:	17000012 	smladne	r0, r2, r0, r0
   12f08:	00746466 	rsbseq	r6, r4, r6, ror #8
   12f0c:	dc21bb04 			; <UNDEFINED> instruction: 0xdc21bb04
   12f10:	02000002 	andeq	r0, r0, #2
    int flags = va_arg(ap, int);
   12f14:	6e176c91 	mrcvs	12, 0, r6, cr7, cr1, {4}
   12f18:	2abb0400 	bcs	feed3f20 <__bss_end__+0xfed8aed8>
   12f1c:	00000046 	andeq	r0, r0, r6, asr #32
   12f20:	18689102 	stmdane	r8!, {r1, r8, ip, pc}^
   12f24:	000021eb 	andeq	r2, r0, fp, ror #3
    mode_t mode = va_arg(ap, mode_t);
   12f28:	1837bb04 	ldmdane	r7!, {r2, r8, r9, fp, ip, sp, pc}
   12f2c:	02000012 	andeq	r0, r0, #18
   12f30:	1f186491 	svcne	0x00186491
   12f34:	04000038 	streq	r0, [r0], #-56	; 0xffffffc8
   12f38:	12184abb 	andsne	r4, r8, #765952	; 0xbb000
    if (dirfd != AT_FDCWD) {
   12f3c:	91020000 	mrsls	r0, (UNDEF: 2)
   12f40:	65721b60 	ldrbvs	r1, [r2, #-2912]!	; 0xfffff4a0
   12f44:	22bd0400 	adcscs	r0, sp, #0, 8
        ZF_LOGE("Openat only supports relative path to the current working directory\n");
   12f48:	00001196 	muleq	r0, r6, r1
   12f4c:	12709102 	rsbsne	r9, r0, #-2147483648	; 0x80000000
   12f50:	0001b06c 	andeq	fp, r1, ip, rrx
   12f54:	00000020 	andeq	r0, r0, r0, lsr #32
   12f58:	004b2a19 	subeq	r2, fp, r9, lsl sl
   12f5c:	02bf0400 	adcseq	r0, pc, #0, 8
   12f60:	00000046 	andeq	r0, r0, r6, asr #32
   12f64:	00749102 	rsbseq	r9, r4, r2, lsl #2
   12f68:	81040b00 	tsthi	r4, r0, lsl #22
   12f6c:	1a000000 	bne	12f74 <sys_openat+0x98>
   12f70:	0000475f 	andeq	r4, r0, pc, asr r7
   12f74:	9628af04 	strtls	sl, [r8], -r4, lsl #30
   12f78:	a0000011 	andge	r0, r0, r1, lsl r0
   12f7c:	b00001af 	andlt	r0, r0, pc, lsr #3
   12f80:	01000000 	mrseq	r0, (UNDEF: 0)
   12f84:	0012739c 	mulseq	r2, ip, r3
   12f88:	64661700 	strbtvs	r1, [r6], #-1792	; 0xfffff900
        return -EINVAL;
   12f8c:	af040074 	svcge	0x00040074
   12f90:	0002dc40 	andeq	sp, r2, r0, asr #24
    return sys_open_impl(pathname, flags, mode);
   12f94:	6c910200 	lfmvs	f0, 4, [r1], {0}
   12f98:	04006e17 	streq	r6, [r0], #-3607	; 0xfffff1e9
   12f9c:	004649af 	subeq	r4, r6, pc, lsr #19
   12fa0:	91020000 	mrsls	r0, (UNDEF: 2)
   12fa4:	487e1968 	ldmdami	lr!, {r3, r5, r6, r8, fp, ip}^
}
   12fa8:	b1040000 	mrslt	r0, (UNDEF: 4)
   12fac:	00004606 	andeq	r4, r0, r6, lsl #12
   12fb0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
{
   12fb4:	00479d19 	subeq	r9, r7, r9, lsl sp
   12fb8:	06b20400 	ldrteq	r0, [r2], r0, lsl #8
   12fbc:	00000046 	andeq	r0, r0, r6, asr #32
   12fc0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    int fd = va_arg(ap, int);
   12fc4:	00474b16 	subeq	r4, r7, r6, lsl fp
   12fc8:	0a950400 	beq	fe553fd0 <__bss_end__+0xfe40af88>
   12fcc:	00000075 	andeq	r0, r0, r5, ror r0
   12fd0:	0001aeec 	andeq	sl, r1, ip, ror #29
   12fd4:	000000b4 	strheq	r0, [r0], -r4
    if (fd < FIRST_USER_FD) {
   12fd8:	12d49c01 	sbcsne	r9, r4, #256	; 0x100
   12fdc:	66170000 	ldrvs	r0, [r7], -r0
   12fe0:	04007464 	streq	r7, [r0], #-1124	; 0xfffffb9c
        assert(!"not implemented");
   12fe4:	02dc2a95 	sbcseq	r2, ip, #610304	; 0x95000
   12fe8:	91020000 	mrsls	r0, (UNDEF: 2)
   12fec:	47531964 	ldrbmi	r1, [r3, -r4, ror #18]
   12ff0:	97040000 	strls	r0, [r4, -r0]
   12ff4:	0000750b 	andeq	r7, r0, fp, lsl #10
   12ff8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   12ffc:	00487e19 	subeq	r7, r8, r9, lsl lr
   13000:	06980400 	ldreq	r0, [r8], r0, lsl #8
    if (!valid_fd(fd)) {
   13004:	00000046 	andeq	r0, r0, r6, asr #32
   13008:	12709102 	rsbsne	r9, r0, #-2147483648	; 0x80000000
   1300c:	0001af18 	andeq	sl, r1, r8, lsl pc
   13010:	00000064 	andeq	r0, r0, r4, rrx
   13014:	0042ce19 	subeq	ip, r2, r9, lsl lr
        return -EBADF;
   13018:	0c9c0400 	cfldrseq	mvf0, [ip], {0}
   1301c:	00000075 	andeq	r0, r0, r5, ror r0
    muslcsys_fd_t *fds = get_fd_struct(fd);
   13020:	006c9102 	rsbeq	r9, ip, r2, lsl #2
   13024:	4b1b1a00 	blmi	6d982c <__bss_end__+0x5907e4>
   13028:	8c040000 	stchi	0, cr0, [r4], {-0}
    if (fds->filetype == FILE_TYPE_CPIO) {
   1302c:	0000460c 	andeq	r4, r0, ip, lsl #12
   13030:	01ae6400 			; <UNDEFINED> instruction: 0x01ae6400
   13034:	00008800 	andeq	r8, r0, r0, lsl #16
   13038:	459c0100 	ldrmi	r0, [ip, #256]	; 0x100
        free(fds->data);
   1303c:	17000013 	smladne	r0, r3, r0, r0
   13040:	00746466 	rsbseq	r6, r4, r6, ror #8
   13044:	dc278c04 	stcle	12, cr8, [r7], #-16
   13048:	02000002 	andeq	r0, r0, #2
    add_free_fd(fd);
   1304c:	d3186c91 	tstle	r8, #37120	; 0x9100
   13050:	04000049 	streq	r0, [r0], #-73	; 0xffffffb7
    return 0;
   13054:	0046308c 	subeq	r3, r6, ip, lsl #1
}
   13058:	91020000 	mrsls	r0, (UNDEF: 2)
   1305c:	00731768 	rsbseq	r1, r3, r8, ror #14
   13060:	1a128d04 	bne	4b6478 <__bss_end__+0x36d430>
{
   13064:	02000002 	andeq	r0, r0, #2
   13068:	6c176491 	cfldrsvs	mvf6, [r7], {145}	; 0x91
   1306c:	04006e65 	streq	r6, [r0], #-3685	; 0xfffff19b
   13070:	0046198d 	subeq	r1, r6, sp, lsl #19
    write_buf_fn old = stdio_write;
   13074:	91020000 	mrsls	r0, (UNDEF: 2)
   13078:	46941960 	ldrmi	r1, [r4], r0, ror #18
   1307c:	8f040000 	svchi	0x00040000
   13080:	00004606 	andeq	r4, r0, r6, lsl #12
    stdio_write = write_fn;
   13084:	70910200 	addsvc	r0, r1, r0, lsl #4
   13088:	0400701b 	streq	r7, [r0], #-27	; 0xffffffe5
   1308c:	021a0e90 	andseq	r0, sl, #144, 28	; 0x900
   13090:	91020000 	mrsls	r0, (UNDEF: 2)
    return old;
   13094:	e7160074 			; <UNDEFINED> instruction: 0xe7160074
}
   13098:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   1309c:	021a0d87 	andseq	r0, sl, #8640	; 0x21c0
   130a0:	ae300000 	cdpge	0, 3, cr0, cr0, cr0, {0}
   130a4:	00340001 	eorseq	r0, r4, r1
{
   130a8:	9c010000 	stcls	0, cr0, [r1], {-0}
   130ac:	0000137e 	andeq	r1, r0, lr, ror r3
   130b0:	74646617 	strbtvc	r6, [r4], #-1559	; 0xfffff9e9
   130b4:	24870400 	strcs	r0, [r7], #1024	; 0x400
    int fildes = va_arg(ap, int);
   130b8:	000002dc 	ldrdeq	r0, [r0], -ip
   130bc:	18749102 	ldmdane	r4!, {r1, r8, ip, pc}^
   130c0:	000049d3 	ldrdeq	r4, [r0], -r3
   130c4:	462d8704 	strtmi	r8, [sp], -r4, lsl #14
   130c8:	02000000 	andeq	r0, r0, #0
    struct iovec *iov = va_arg(ap, struct iovec *);
   130cc:	16007091 			; <UNDEFINED> instruction: 0x16007091
   130d0:	0000489f 	muleq	r0, pc, r8	; <UNPREDICTABLE>
   130d4:	1a0d5104 	bne	3674ec <__bss_end__+0x21e4a4>
   130d8:	b0000002 	andlt	r0, r0, r2
   130dc:	800001ab 	andhi	r0, r0, fp, lsr #3
    int iovcnt = va_arg(ap, int);
   130e0:	01000002 	tsteq	r0, r2
   130e4:	0014199c 	mulseq	r4, ip, r9
   130e8:	64661700 	strbtvs	r1, [r6], #-1792	; 0xfffff900
   130ec:	51040074 	tstpl	r4, r4, ror r0
   130f0:	0002dc28 	andeq	sp, r2, r8, lsr #24
    long long sum = 0;
   130f4:	5c910200 	lfmpl	f0, 4, [r1], {0}
   130f8:	0049d318 	subeq	sp, r9, r8, lsl r3
   130fc:	31510400 	cmpcc	r1, r0, lsl #8
    ssize_t ret = 0;
   13100:	00000046 	andeq	r0, r0, r6, asr #32
   13104:	18589102 	ldmdane	r8, {r1, r8, ip, pc}^
    if (iovcnt <= 0 || iovcnt > IOV_MAX) {
   13108:	00004650 	andeq	r4, r0, r0, asr r6
   1310c:	71415104 	cmpvc	r1, r4, lsl #2
   13110:	02000004 	andeq	r0, r0, #4
   13114:	9d195491 	cfldrsls	mvf5, [r9, #-580]	; 0xfffffdbc
   13118:	04000047 	streq	r0, [r0], #-71	; 0xffffffb9
   1311c:	00750b53 	rsbseq	r0, r5, r3, asr fp
        return -EINVAL;
   13120:	91020000 	mrsls	r0, (UNDEF: 2)
   13124:	656c1b6c 	strbvs	r1, [ip, #-2924]!	; 0xfffff494
    for (int i = 0; i < iovcnt; i++) {
   13128:	5404006e 	strpl	r0, [r4], #-110	; 0xffffff92
   1312c:	00003a09 	andeq	r3, r0, r9, lsl #20
   13130:	74910200 	ldrvc	r0, [r1], #512	; 0x200
        sum += (long long)iov[i].iov_len;
   13134:	7272651b 	rsbsvc	r6, r2, #113246208	; 0x6c00000
   13138:	06550400 	ldrbeq	r0, [r5], -r0, lsl #8
   1313c:	00000046 	andeq	r0, r0, r6, asr #32
   13140:	1b709102 	blne	1c37550 <__bss_end__+0x1aee508>
   13144:	56040073 			; <UNDEFINED> instruction: 0x56040073
   13148:	00021a0e 	andeq	r1, r2, lr, lsl #20
   1314c:	68910200 	ldmvs	r1, {r9}
   13150:	04006e1b 	streq	r6, [r0], #-3611	; 0xfffff1e5
   13154:	021a1256 	andseq	r1, sl, #1610612741	; 0x60000005
   13158:	91020000 	mrsls	r0, (UNDEF: 2)
   1315c:	49dd1c64 	ldmibmi	sp, {r2, r5, r6, sl, fp, ip}^
        if (sum > SSIZE_MAX) {
   13160:	81040000 	mrshi	r0, (UNDEF: 4)
   13164:	01ae0801 			; <UNDEFINED> instruction: 0x01ae0801
   13168:	9f1a0000 	svcls	0x001a0000
   1316c:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   13170:	00460c3c 	subeq	r0, r6, ip, lsr ip
   13174:	aac00000 	bge	ff01317c <__bss_end__+0xfeeca134>
            return -EINVAL;
   13178:	00f00001 	rscseq	r0, r0, r1
   1317c:	9c010000 	stcls	0, cr0, [r1], {-0}
    for (int i = 0; i < iovcnt; i++) {
   13180:	0000148a 	andeq	r1, r0, sl, lsl #9
   13184:	74646617 	strbtvc	r6, [r4], #-1559	; 0xfffff9e9
   13188:	293c0400 	ldmdbcs	ip!, {sl}
   1318c:	000002dc 	ldrdeq	r0, [r0], -ip
   13190:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
   13194:	0000487e 	andeq	r4, r0, lr, ror r8
   13198:	46323c04 	ldrtmi	r3, [r2], -r4, lsl #24
    if (!sum) {
   1319c:	02000000 	andeq	r0, r0, #0
   131a0:	73176891 	tstvc	r7, #9502720	; 0x910000
   131a4:	143d0400 	ldrtne	r0, [sp], #-1024	; 0xfffffc00
        return 0;
   131a8:	0000021a 	andeq	r0, r0, sl, lsl r2
   131ac:	17649102 	strbne	r9, [r4, -r2, lsl #2]!
    if (fildes == STDOUT_FILENO || fildes == STDERR_FILENO) {
   131b0:	006e656c 	rsbeq	r6, lr, ip, ror #10
   131b4:	461b3d04 	ldrmi	r3, [fp], -r4, lsl #26
   131b8:	02000000 	andeq	r0, r0, #0
   131bc:	75196091 	ldrvc	r6, [r9, #-145]	; 0xffffff6f
   131c0:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   131c4:	0046063f 	subeq	r0, r6, pc, lsr r6
        for (int i = 0; i < iovcnt; i++) {
   131c8:	91020000 	mrsls	r0, (UNDEF: 2)
   131cc:	00701b70 	rsbseq	r1, r0, r0, ror fp
   131d0:	1a0e4004 	bne	3a31e8 <__bss_end__+0x25a1a0>
            if (stdio_write == NULL) {
   131d4:	02000002 	andeq	r0, r0, #2
   131d8:	1a007491 	bne	30424 <completed.10172+0x424>
   131dc:	00004847 	andeq	r4, r0, r7, asr #16
   131e0:	962f5403 	strtls	r5, [pc], -r3, lsl #8
   131e4:	70000011 	andvc	r0, r0, r1, lsl r0
                ret += iov[i].iov_len;
   131e8:	500001aa 	andpl	r0, r0, sl, lsr #3
   131ec:	01000000 	mrseq	r0, (UNDEF: 0)
   131f0:	0014d09c 	mulseq	r4, ip, r0
   131f4:	64661700 	strbtvs	r1, [r6], #-1792	; 0xfffff900
   131f8:	54030074 	strpl	r0, [r3], #-116	; 0xffffff8c
   131fc:	0002dc48 	andeq	sp, r2, r8, asr #24
   13200:	6c910200 	lfmvs	f0, 4, [r1], {0}
   13204:	03006e17 	movweq	r6, #3607	; 0xe17
   13208:	00465154 	subeq	r5, r6, r4, asr r1
                ret += stdio_write(iov[i].iov_base, iov[i].iov_len);
   1320c:	91020000 	mrsls	r0, (UNDEF: 2)
   13210:	4a451968 	bmi	11597b8 <__bss_end__+0x1010770>
   13214:	56030000 	strpl	r0, [r3], -r0
   13218:	00119622 	andseq	r9, r1, r2, lsr #12
   1321c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   13220:	4b2f1a00 	blmi	bd9a28 <__bss_end__+0xa909e0>
   13224:	4a030000 	bmi	d322c <morecore_area+0x8a22c>
   13228:	0002dc1b 	andeq	sp, r2, fp, lsl ip
   1322c:	01aa2c00 			; <UNDEFINED> instruction: 0x01aa2c00
   13230:	00004400 	andeq	r4, r0, r0, lsl #8
   13234:	099c0100 	ldmibeq	ip, {r8}
   13238:	17000015 	smladne	r0, r5, r0, r0
   1323c:	00746466 	rsbseq	r6, r4, r6, ror #8
   13240:	dc374a03 			; <UNDEFINED> instruction: 0xdc374a03
   13244:	02000002 	andeq	r0, r0, #2
   13248:	7e187491 	cfcmpsvc	r7, mvf8, mvf1
   1324c:	03000048 	movweq	r0, #72	; 0x48
   13250:	0046404a 	subeq	r4, r6, sl, asr #32
   13254:	91020000 	mrsls	r0, (UNDEF: 2)
        for (int i = 0; i < iovcnt; i++) {
   13258:	6d1a0070 	ldcvs	0, cr0, [sl, #-448]	; 0xfffffe40
   1325c:	02000049 	andeq	r0, r0, #73	; 0x49
   13260:	008118af 	addeq	r1, r1, pc, lsr #17
   13264:	a9e00000 	stmibge	r0!, {}^	; <UNPREDICTABLE>
   13268:	004c0001 	subeq	r0, ip, r1
   1326c:	9c010000 	stcls	0, cr0, [r1], {-0}
   13270:	0000153e 	andeq	r1, r0, lr, lsr r5
   13274:	02007017 	andeq	r7, r0, #23
        assert(!"Not implemented");
   13278:	153e30af 	ldrne	r3, [lr, #-175]!	; 0xffffff51
   1327c:	91020000 	mrsls	r0, (UNDEF: 2)
   13280:	00761b6c 	rsbseq	r1, r6, ip, ror #22
   13284:	ac0ab102 	stfged	f3, [sl], {2}
   13288:	02000000 	andeq	r0, r0, #0
   1328c:	0b007091 	bleq	2f4d8 <__bss_start+0x2bec>
   13290:	0000b804 	andeq	fp, r0, r4, lsl #16
   13294:	41ee1a00 	mvnmi	r1, r0, lsl #20
    return ret;
   13298:	a7020000 	strge	r0, [r2, -r0]
}
   1329c:	00007518 	andeq	r7, r0, r8, lsl r5
   132a0:	01a9a000 			; <UNDEFINED> instruction: 0x01a9a000
   132a4:	00004000 	andeq	r4, r0, r0
{
   132a8:	799c0100 	ldmibvc	ip, {r8}
   132ac:	17000015 	smladne	r0, r5, r0, r0
   132b0:	a7020070 	smlsdxge	r2, r0, r0, r0
   132b4:	000a5130 	andeq	r5, sl, r0, lsr r1
    int fd = va_arg(ap, int);
   132b8:	6c910200 	lfmvs	f0, 4, [r1], {0}
   132bc:	0200761b 	andeq	r7, r0, #28311552	; 0x1b00000
   132c0:	009b0aa9 	addseq	r0, fp, r9, lsr #21
   132c4:	91020000 	mrsls	r0, (UNDEF: 2)
   132c8:	921d0074 	andsls	r0, sp, #116	; 0x74
    void *buf = va_arg(ap, void *);
   132cc:	0100004a 	tsteq	r0, sl, asr #32
   132d0:	00811867 	addeq	r1, r1, r7, ror #16
   132d4:	a7e00000 	strbge	r0, [r0, r0]!
   132d8:	01c00001 	biceq	r0, r0, r1
   132dc:	9c010000 	stcls	0, cr0, [r1], {-0}
    size_t count = va_arg(ap, size_t);
   132e0:	000015a1 	andeq	r1, r0, r1, lsr #11
   132e4:	01007817 	tsteq	r0, r7, lsl r8
   132e8:	00ac2d67 	adceq	r2, ip, r7, ror #26
   132ec:	91020000 	mrsls	r0, (UNDEF: 2)
   132f0:	761e0058 			; <UNDEFINED> instruction: 0x761e0058
    struct iovec iov = {.iov_base = buf, .iov_len = count };
   132f4:	01000041 	tsteq	r0, r1, asr #32
   132f8:	0075185e 	rsbseq	r1, r5, lr, asr r8
   132fc:	a77c0000 	ldrbge	r0, [ip, -r0]!
   13300:	00640001 	rsbeq	r0, r4, r1
    return writev(fd, &iov, 1);
   13304:	9c010000 	stcls	0, cr0, [r1], {-0}
   13308:	01007817 	tsteq	r0, r7, lsl r8
   1330c:	009b2d5e 	addseq	r2, fp, lr, asr sp
   13310:	91020000 	mrsls	r0, (UNDEF: 2)
   13314:	74000074 	strvc	r0, [r0], #-116	; 0xffffff8c
   13318:	04000006 	streq	r0, [r0], #-6
}
   1331c:	003bea00 	eorseq	lr, fp, r0, lsl #20
   13320:	17010400 	strne	r0, [r1, -r0, lsl #8]
   13324:	0c000001 	stceq	0, cr0, [r0], {1}
{
   13328:	00004c6b 	andeq	r4, r0, fp, ror #24
   1332c:	0000005f 	andeq	r0, r0, pc, asr r0
   13330:	0001ca78 	andeq	ip, r1, r8, ror sl
   13334:	00000d6c 	andeq	r0, r0, ip, ror #26
    int fd = va_arg(ap, int);
   13338:	000092d1 	ldrdeq	r9, [r0], -r1
   1333c:	c5070402 	strgt	r0, [r7, #-1026]	; 0xfffffbfe
   13340:	02000003 	andeq	r0, r0, #3
   13344:	01090508 	tsteq	r9, r8, lsl #10
   13348:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    struct iovec *iov = va_arg(ap, struct iovec *);
   1334c:	0015f304 	andseq	pc, r5, r4, lsl #6
   13350:	0a2f0300 	beq	bd3f58 <__bss_end__+0xa8af10>
   13354:	6e050000 	cdpvs	0, 0, cr0, cr5, cr0, {0}
   13358:	00002518 	andeq	r2, r0, r8, lsl r5
   1335c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    int iovcnt = va_arg(ap, int);
   13360:	00746e69 	rsbseq	r6, r4, r9, ror #28
   13364:	2e060102 	adfcss	f0, f6, f2
   13368:	02000003 	andeq	r0, r0, #3
   1336c:	04660502 	strbteq	r0, [r6], #-1282	; 0xfffffafe
   13370:	57030000 	strpl	r0, [r3, -r0]
    if (fd < FIRST_USER_FD) {
   13374:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
   13378:	006719ab 	rsbeq	r1, r7, fp, lsr #19
   1337c:	01020000 	mrseq	r0, (UNDEF: 2)
        assert(!"not implemented");
   13380:	00032c08 	andeq	r2, r3, r8, lsl #24
   13384:	07020200 	streq	r0, [r2, -r0, lsl #4]
   13388:	00000352 	andeq	r0, r0, r2, asr r3
   1338c:	00058e03 	andeq	r8, r5, r3, lsl #28
   13390:	19b50500 	ldmibne	r5!, {r8, sl}
   13394:	00000025 	andeq	r0, r0, r5, lsr #32
   13398:	bb070802 	bllt	1d53a8 <__bss_end__+0x8c360>
   1339c:	02000003 	andeq	r0, r0, #3
    if (!valid_fd(fd)) {
   133a0:	010e0504 	tsteq	lr, r4, lsl #10
   133a4:	b6030000 	strlt	r0, [r3], -r0
   133a8:	01000042 	tsteq	r0, r2, asr #32
   133ac:	00751e49 	rsbseq	r1, r5, r9, asr #28
   133b0:	8f050000 	svchi	0x00050000
        return -EBADF;
   133b4:	06000000 	streq	r0, [r0], -r0
   133b8:	00004a7a 	andeq	r4, r0, sl, ror sl
    muslcsys_fd_t *muslc_fd = get_fd_struct(fd);
   133bc:	083c0628 	ldmdaeq	ip!, {r3, r5, r9, sl}
   133c0:	00000130 	andeq	r0, r0, r0, lsr r1
   133c4:	0049b107 	subeq	fp, r9, r7, lsl #2
    if (muslc_fd->filetype != FILE_TYPE_CPIO) {
   133c8:	0a3d0600 	beq	f54bd0 <__bss_end__+0xe0bb88>
   133cc:	0000008f 	andeq	r0, r0, pc, lsl #1
   133d0:	468a0700 	strmi	r0, [sl], r0, lsl #14
   133d4:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
        assert(!"not implemented");
   133d8:	00008f0a 	andeq	r8, r0, sl, lsl #30
   133dc:	42070400 	andmi	r0, r7, #0, 8
   133e0:	06000049 	streq	r0, [r0], -r9, asr #32
   133e4:	008f0a3f 	addeq	r0, pc, pc, lsr sl	; <UNPREDICTABLE>
   133e8:	07080000 	streq	r0, [r8, -r0]
   133ec:	00004863 	andeq	r4, r0, r3, ror #16
   133f0:	8f0a4006 	svchi	0x000a4006
   133f4:	0c000000 	stceq	0, cr0, [r0], {-0}
    cpio_file_data_t *cpio_fd = muslc_fd->data;
   133f8:	00499307 	subeq	r9, r9, r7, lsl #6
   133fc:	0a410600 	beq	1054c04 <__bss_end__+0xf0bbbc>
   13400:	0000008f 	andeq	r0, r0, pc, lsl #1
    read = 0;
   13404:	46bc0710 	ssatmi	r0, #29, r0, lsl #14
   13408:	42060000 	andmi	r0, r6, #0
    for (i = 0; i < iovcnt && cpio_fd->current < cpio_fd->size; i++) {
   1340c:	00008f0a 	andeq	r8, r0, sl, lsl #30
   13410:	b2071400 	andlt	r1, r7, #0, 8
   13414:	06000046 	streq	r0, [r0], -r6, asr #32
        long max = cpio_fd->size - cpio_fd->current;
   13418:	008f0a43 	addeq	r0, pc, r3, asr #20
   1341c:	07180000 	ldreq	r0, [r8, -r0]
   13420:	00004b0b 	andeq	r4, r0, fp, lsl #22
   13424:	8f0a4606 	svchi	0x000a4606
   13428:	1c000000 	stcne	0, cr0, [r0], {-0}
   1342c:	00495d07 	subeq	r5, r9, r7, lsl #26
   13430:	0a490600 	beq	1254c38 <__bss_end__+0x110bbf0>
        long len = max < iov[i].iov_len ? max : iov[i].iov_len;
   13434:	0000008f 	andeq	r0, r0, pc, lsl #1
   13438:	48e30720 	stmiami	r3!, {r5, r8, r9, sl}^
   1343c:	4c060000 	stcmi	0, cr0, [r6], {-0}
   13440:	00008f0a 	andeq	r8, r0, sl, lsl #30
   13444:	02002400 	andeq	r2, r0, #0, 8
   13448:	03350801 	teqeq	r5, #65536	; 0x10000
   1344c:	30050000 	andcc	r0, r5, r0
   13450:	08000001 	stmdaeq	r0, {r0}
   13454:	00013704 	andeq	r3, r1, r4, lsl #14
   13458:	4cd20900 			; <UNDEFINED> instruction: 0x4cd20900
        memcpy(iov[i].iov_base, cpio_fd->start + cpio_fd->current, len);
   1345c:	44040000 	strmi	r0, [r4], #-0
   13460:	00460501 	subeq	r0, r6, r1, lsl #10
   13464:	d7500000 	ldrble	r0, [r0, -r0]
   13468:	00940001 	addseq	r0, r4, r1
   1346c:	9c010000 	stcls	0, cr0, [r1], {-0}
   13470:	000001a8 	andeq	r0, r0, r8, lsr #3
   13474:	7464660a 	strbtvc	r6, [r4], #-1546	; 0xfffff9f6
   13478:	01440400 	cmpeq	r4, r0, lsl #8
   1347c:	0001a81a 	andeq	sl, r1, sl, lsl r8
   13480:	6c910200 	lfmvs	f0, 4, [r1], {0}
   13484:	6675620a 	ldrbtvs	r6, [r5], -sl, lsl #4
   13488:	01440400 	cmpeq	r4, r0, lsl #8
   1348c:	0001af25 	andeq	sl, r1, r5, lsr #30
   13490:	68910200 	ldmvs	r1, {r9}
        cpio_fd->current += len;
   13494:	0047950b 	subeq	r9, r7, fp, lsl #10
   13498:	01440400 	cmpeq	r4, r0, lsl #8
   1349c:	0000462e 	andeq	r4, r0, lr, lsr #12
   134a0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
   134a4:	01d7680c 	bicseq	r6, r7, ip, lsl #16
   134a8:	00002000 	andeq	r2, r0, r0
   134ac:	4b2a0d00 	blmi	a968b4 <__bss_end__+0x94d86c>
   134b0:	46040000 	strmi	r0, [r4], -r0
   134b4:	00460201 	subeq	r0, r6, r1, lsl #4
        read += len;
   134b8:	91020000 	mrsls	r0, (UNDEF: 2)
   134bc:	08000074 	stmdaeq	r0, {r2, r4, r5, r6}
   134c0:	0001ae04 	andeq	sl, r1, r4, lsl #28
   134c4:	040f0e00 	streq	r0, [pc], #-3584	; 134cc <sys_readv+0x1a4>
    for (i = 0; i < iovcnt && cpio_fd->current < cpio_fd->size; i++) {
   134c8:	004c1b09 	subeq	r1, ip, r9, lsl #22
   134cc:	01380400 	teqeq	r8, r0, lsl #8
   134d0:	00013c0d 	andeq	r3, r1, sp, lsl #24
   134d4:	01d6ac00 	bicseq	sl, r6, r0, lsl #24
   134d8:	0000a400 	andeq	sl, r0, r0, lsl #8
   134dc:	299c0100 	ldmibcs	ip, {r8}
   134e0:	0b000002 	bleq	134f0 <sys_readv+0x1c8>
   134e4:	00004c5c 	andeq	r4, r0, ip, asr ip
   134e8:	2a013804 	bcs	61500 <morecore_area+0x18500>
   134ec:	0000013c 	andeq	r0, r0, ip, lsr r1
   134f0:	0b649102 	bleq	1937900 <__bss_end__+0x17ee8b8>
   134f4:	00004c63 	andeq	r4, r0, r3, ror #24
   134f8:	36013804 	strcc	r3, [r1], -r4, lsl #16
   134fc:	00000046 	andeq	r0, r0, r6, asr #32
   13500:	0a609102 	beq	1837910 <__bss_end__+0x16ee8c8>
   13504:	38040073 	stmdacc	r4, {r0, r1, r4, r5, r6}
    return read;
   13508:	013c4b01 	teqeq	ip, r1, lsl #22
}
   1350c:	91020000 	mrsls	r0, (UNDEF: 2)
   13510:	656c105c 	strbvs	r1, [ip, #-92]!	; 0xffffffa4
   13514:	3a04006e 	bcc	1136d4 <morecore_area+0xca6d4>
{
   13518:	00460601 	subeq	r0, r6, r1, lsl #12
   1351c:	91020000 	mrsls	r0, (UNDEF: 2)
   13520:	4c570d70 	mrrcmi	13, 7, r0, r7, cr0
   13524:	3b040000 	blcc	11352c <morecore_area+0xca52c>
    int fd = va_arg(ap, int);
   13528:	013c0e01 	teqeq	ip, r1, lsl #28
   1352c:	91020000 	mrsls	r0, (UNDEF: 2)
   13530:	0070106c 	rsbseq	r1, r0, ip, rrx
   13534:	0e013c04 	cdpeq	12, 0, cr3, cr1, cr4, {0}
   13538:	0000013c 	andeq	r0, r0, ip, lsr r1
    void *buf = va_arg(ap, void *);
   1353c:	00749102 	rsbseq	r9, r4, r2, lsl #2
   13540:	004c2c09 	subeq	r2, ip, r9, lsl #24
   13544:	01270400 			; <UNDEFINED> instruction: 0x01270400
   13548:	00004605 	andeq	r4, r0, r5, lsl #12
   1354c:	01d63c00 	bicseq	r3, r6, r0, lsl #24
    size_t count = va_arg(ap, size_t);
   13550:	00007000 	andeq	r7, r0, r0
   13554:	759c0100 	ldrvc	r0, [ip, #256]	; 0x100
   13558:	0a000002 	beq	13568 <sys_read+0x50>
   1355c:	00746466 	rsbseq	r6, r4, r6, ror #8
   13560:	22012704 	andcs	r2, r1, #4, 14	; 0x100000
    struct iovec iov = {.iov_base = buf, .iov_len = count };
   13564:	000001a8 	andeq	r0, r0, r8, lsr #3
   13568:	0b6c9102 	bleq	1b37978 <__bss_end__+0x19ee930>
   1356c:	0000487e 	andeq	r4, r0, lr, ror r8
   13570:	2b012704 	blcs	5d188 <morecore_area+0x14188>
    return readv(fd, &iov, 1);
   13574:	00000046 	andeq	r0, r0, r6, asr #32
   13578:	0d689102 	stfeqp	f1, [r8, #-8]!
   1357c:	00004826 	andeq	r4, r0, r6, lsr #16
   13580:	06012904 	streq	r2, [r1], -r4, lsl #18
   13584:	00000046 	andeq	r0, r0, r6, asr #32
   13588:	00749102 	rsbseq	r9, r4, r2, lsl #2
}
   1358c:	004cdb09 	subeq	sp, ip, r9, lsl #22
   13590:	011c0400 	tsteq	ip, r0, lsl #8
   13594:	00004605 	andeq	r4, r0, r5, lsl #12
{
   13598:	01d5d800 	bicseq	sp, r5, r0, lsl #16
   1359c:	00006400 	andeq	r6, r0, r0, lsl #8
   135a0:	c19c0100 	orrsgt	r0, ip, r0, lsl #2
   135a4:	0a000002 	beq	135b4 <sys_ioctl+0x1c>
    int fd = va_arg(ap, int);
   135a8:	00746466 	rsbseq	r6, r4, r6, ror #8
   135ac:	23011c04 	movwcs	r1, #7172	; 0x1c04
   135b0:	000001a8 	andeq	r0, r0, r8, lsr #3
   135b4:	0b6c9102 	bleq	1b379c4 <__bss_end__+0x19ee97c>
   135b8:	0000487e 	andeq	r4, r0, lr, ror r8
    int request = va_arg(ap, int);
   135bc:	2c011c04 	stccs	12, cr1, [r1], {4}
   135c0:	00000046 	andeq	r0, r0, r6, asr #32
   135c4:	0d689102 	stfeqp	f1, [r8, #-8]!
   135c8:	00004826 	andeq	r4, r0, r6, lsr #16
   135cc:	06011e04 	streq	r1, [r1], -r4, lsl #28
    if (fd == STDOUT_FILENO) {
   135d0:	00000046 	andeq	r0, r0, r6, asr #32
   135d4:	00749102 	rsbseq	r9, r4, r2, lsl #2
   135d8:	004bee11 	subeq	lr, fp, r1, lsl lr
        return 0;
   135dc:	05f40400 	ldrbeq	r0, [r4, #1024]!	; 0x400
   135e0:	00000046 	andeq	r0, r0, r6, asr #32
    assert(!"not implemented");
   135e4:	0001d474 	andeq	sp, r1, r4, ror r4
   135e8:	00000164 	andeq	r0, r0, r4, ror #2
   135ec:	03279c01 			; <UNDEFINED> instruction: 0x03279c01
   135f0:	66120000 	ldrvs	r0, [r2], -r0
   135f4:	04007464 	streq	r7, [r0], #-1124	; 0xfffffb9c
   135f8:	01a81ff4 	strdeq	r1, [r8, r4]!
   135fc:	91020000 	mrsls	r0, (UNDEF: 2)
   13600:	487e136c 	ldmdami	lr!, {r2, r3, r5, r6, r8, r9, ip}^
}
   13604:	f4040000 	vst4.8	{d0-d3}, [r4], r0
   13608:	00004628 	andeq	r4, r0, r8, lsr #12
   1360c:	68910200 	ldmvs	r1, {r9}
{
   13610:	00482613 	subeq	r2, r8, r3, lsl r6
   13614:	35f40400 	ldrbcc	r0, [r4, #1024]!	; 0x400
   13618:	00000327 	andeq	r0, r0, r7, lsr #6
   1361c:	14649102 	strbtne	r9, [r4], #-258	; 0xfffffefe
    pid_t pid = va_arg(ap, pid_t);
   13620:	000049e2 	andeq	r4, r0, r2, ror #19
   13624:	4606f604 	strmi	pc, [r6], -r4, lsl #12
   13628:	02000000 	andeq	r0, r0, #0
   1362c:	74157091 	ldrvc	r7, [r5], #-145	; 0xffffff6f
   13630:	04006761 	streq	r6, [r0], #-1889	; 0xfffff89f
    int resource = va_arg(ap, int);
   13634:	00750bf7 	ldrshteq	r0, [r5], #-183	; 0xffffff49
   13638:	91020000 	mrsls	r0, (UNDEF: 2)
   1363c:	04080074 	streq	r0, [r8], #-116	; 0xffffff8c
   13640:	00000046 	andeq	r0, r0, r6, asr #32
   13644:	004ba511 	subeq	sl, fp, r1, lsl r5
    const struct rlimit *new_limit = va_arg(ap, const struct rlimit *);
   13648:	05eb0400 	strbeq	r0, [fp, #1024]!	; 0x400
   1364c:	00000046 	andeq	r0, r0, r6, asr #32
   13650:	0001d40c 	andeq	sp, r1, ip, lsl #8
   13654:	00000068 	andeq	r0, r0, r8, rrx
   13658:	03669c01 	cmneq	r6, #256	; 0x100
    struct rlimit *old_limit = va_arg(ap, struct rlimit *);
   1365c:	66120000 	ldrvs	r0, [r2], -r0
   13660:	04007464 	streq	r7, [r0], #-1124	; 0xfffffb9c
   13664:	01a828eb 			; <UNDEFINED> instruction: 0x01a828eb
   13668:	91020000 	mrsls	r0, (UNDEF: 2)
   1366c:	487e1374 	ldmdami	lr!, {r2, r4, r5, r6, r8, r9, ip}^
    int result = 0;
   13670:	eb040000 	bl	113678 <morecore_area+0xca678>
   13674:	00004631 	andeq	r4, r0, r1, lsr r6
    if (resource == RLIMIT_NOFILE) {
   13678:	70910200 	addsvc	r0, r1, r0, lsl #4
   1367c:	4c041100 	stfmis	f1, [r4], {-0}
   13680:	e2040000 	and	r0, r4, #0
        if (old_limit) {
   13684:	00004605 	andeq	r4, r0, r5, lsl #12
   13688:	01d3a400 	bicseq	sl, r3, r0, lsl #8
   1368c:	00006800 	andeq	r6, r0, r0, lsl #16
            old_limit->rlim_cur = num_fds;
   13690:	9f9c0100 	svcls	0x009c0100
   13694:	12000003 	andne	r0, r0, #3
   13698:	00746466 	rsbseq	r6, r4, r6, ror #8
   1369c:	a828e204 	stmdage	r8!, {r2, r9, sp, lr, pc}
   136a0:	02000001 	andeq	r0, r0, #1
   136a4:	7e137491 	cfcmpsvc	r7, mvf3, mvf1
   136a8:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
            old_limit->rlim_max = 65536;
   136ac:	004631e2 	subeq	r3, r6, r2, ror #3
   136b0:	91020000 	mrsls	r0, (UNDEF: 2)
   136b4:	4a110070 	bmi	45387c <__bss_end__+0x30a834>
   136b8:	0400004c 	streq	r0, [r0], #-76	; 0xffffffb4
        if (new_limit) {
   136bc:	00750aad 	rsbseq	r0, r5, sp, lsr #21
   136c0:	d16c0000 	cmnle	ip, r0
   136c4:	02380001 	eorseq	r0, r8, #1
            if (new_limit->rlim_cur < num_fds) {
   136c8:	9c010000 	stcls	0, cr0, [r1], {-0}
   136cc:	00000430 	andeq	r0, r0, r0, lsr r4
   136d0:	74646612 	strbtvc	r6, [r4], #-1554	; 0xfffff9ee
   136d4:	23ad0400 			; <UNDEFINED> instruction: 0x23ad0400
   136d8:	000001a8 	andeq	r0, r0, r8, lsr #3
   136dc:	13549102 	cmpne	r4, #-2147483648	; 0x80000000
   136e0:	00004ac0 	andeq	r4, r0, r0, asr #21
   136e4:	462cad04 	strtmi	sl, [ip], -r4, lsl #26
   136e8:	02000000 	andeq	r0, r0, #0
   136ec:	e2135091 	ands	r5, r3, #145	; 0x91
                printf("Trying to reduce open file limit. Operation not supported, ignoring\n");
   136f0:	04000049 	streq	r0, [r0], #-73	; 0xffffffb7
   136f4:	03273ead 			; <UNDEFINED> instruction: 0x03273ead
   136f8:	91020000 	mrsls	r0, (UNDEF: 2)
   136fc:	4ced144c 	cfstrdmi	mvd1, [sp], #304	; 0x130
                result = grow_fds(new_limit->rlim_cur - num_fds);
   13700:	af040000 	svcge	0x00040000
   13704:	00043011 	andeq	r3, r4, r1, lsl r0
   13708:	68910200 	ldmvs	r1, {r9}
   1370c:	00465014 	subeq	r5, r6, r4, lsl r0
   13710:	18af0400 	stmiane	pc!, {sl}	; <UNPREDICTABLE>
   13714:	00000430 	andeq	r0, r0, r0, lsr r4
   13718:	15609102 	strbne	r9, [r0, #-258]!	; 0xfffffefe
   1371c:	00676174 	rsbeq	r6, r7, r4, ror r1
   13720:	750bb004 	strvc	fp, [fp, #-4]
   13724:	02000000 	andeq	r0, r0, #0
        assert(!"not implemented");
   13728:	7e146491 	cfcmpsvc	r6, mvf4, mvf1
   1372c:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
   13730:	004606b1 	strheq	r0, [r6], #-97	; 0xffffff9f
   13734:	91020000 	mrsls	r0, (UNDEF: 2)
   13738:	0070156c 	rsbseq	r1, r0, ip, ror #10
   1373c:	3c0eb204 	sfmcc	f3, 1, [lr], {4}
   13740:	02000001 	andeq	r0, r0, #1
   13744:	08005c91 	stmdaeq	r0, {r0, r4, r7, sl, fp, ip, lr}
    return result;
   13748:	00009b04 	andeq	r9, r0, r4, lsl #22
}
   1374c:	4cb81100 	ldfmis	f1, [r8]
   13750:	9c040000 	stcls	0, cr0, [r4], {-0}
   13754:	0001a80d 	andeq	sl, r1, sp, lsl #16
{
   13758:	01d05c00 	bicseq	r5, r0, r0, lsl #24
   1375c:	00011000 	andeq	r1, r1, r0
   13760:	8d9c0100 	ldfhis	f0, [ip]
   13764:	12000004 	andne	r0, r0, #4
   13768:	00746466 	rsbseq	r6, r4, r6, ror #8
    return !(a >= 0 && b > INT_MAX - a) &&
   1376c:	a8289c04 	stmdage	r8!, {r2, sl, fp, ip, pc}
   13770:	02000001 	andeq	r0, r0, #1
   13774:	7e136491 	cfcmpsvc	r6, mvf3, mvf1
   13778:	04000048 	streq	r0, [r0], #-72	; 0xffffffb8
   1377c:	0046319c 	umaaleq	r3, r6, ip, r1
   13780:	91020000 	mrsls	r0, (UNDEF: 2)
   13784:	656c1260 	strbvs	r1, [ip, #-608]!	; 0xfffffda0
   13788:	9c04006e 	stcls	0, cr0, [r4], {110}	; 0x6e
   1378c:	00002546 	andeq	r2, r0, r6, asr #10
   13790:	5c910200 	lfmpl	f0, 4, [r1], {0}
   13794:	00479d14 	subeq	r9, r7, r4, lsl sp
   13798:	0b9e0400 	bleq	fe7947a0 <__bss_end__+0xfe64b758>
   1379c:	00000025 	andeq	r0, r0, r5, lsr #32
           !(a < 0 && b < INT_MAX - a);
   137a0:	006c9102 	rsbeq	r9, ip, r2, lsl #2
   137a4:	004bbc11 	subeq	fp, fp, r1, lsl ip
   137a8:	05730400 	ldrbeq	r0, [r3, #-1024]!	; 0xfffffc00
   137ac:	00000046 	andeq	r0, r0, r6, asr #32
   137b0:	0001cdd8 	ldrdeq	ip, [r1], -r8
   137b4:	00000284 	andeq	r0, r0, r4, lsl #5
   137b8:	04c69c01 	strbeq	r9, [r6], #3073	; 0xc01
    return !(a >= 0 && b > INT_MAX - a) &&
   137bc:	66120000 	ldrvs	r0, [r2], -r0
   137c0:	04007464 	streq	r7, [r0], #-1124	; 0xfffffb9c
   137c4:	01a82273 			; <UNDEFINED> instruction: 0x01a82273
}
   137c8:	91020000 	mrsls	r0, (UNDEF: 2)
   137cc:	4bfc1464 	blmi	fff18964 <__bss_end__+0xffdcf91c>
   137d0:	75040000 	strvc	r0, [r4, #-0]
   137d4:	00003a09 	andeq	r3, r0, r9, lsl #20
{
   137d8:	6c910200 	lfmvs	f0, 4, [r1], {0}
   137dc:	4bdd1600 	blmi	ff758fe4 <__bss_end__+0xff60ff9c>
   137e0:	65040000 	strvs	r0, [r4, #-0]
   137e4:	00003a08 	andeq	r3, r0, r8, lsl #20
    int fd = va_arg(ap, int);
   137e8:	01cd6400 	biceq	r6, sp, r0, lsl #8
   137ec:	00007400 	andeq	r7, r0, r0, lsl #8
   137f0:	f09c0100 			; <UNDEFINED> instruction: 0xf09c0100
   137f4:	13000004 	movwne	r0, #4
   137f8:	000046bc 			; <UNDEFINED> instruction: 0x000046bc
    off_t offset = va_arg(ap, off_t);
   137fc:	75226504 	strvc	r6, [r2, #-1284]!	; 0xfffffafc
   13800:	02000000 	andeq	r0, r0, #0
   13804:	17007491 			; <UNDEFINED> instruction: 0x17007491
   13808:	00004c3d 	andeq	r4, r0, sp, lsr ip
   1380c:	460c5904 	strmi	r5, [ip], -r4, lsl #18
   13810:	c4000000 	strgt	r0, [r0], #-0
   13814:	a00001cc 	andge	r0, r0, ip, asr #3
    int whence = va_arg(ap, int);
   13818:	01000000 	mrseq	r0, (UNDEF: 0)
   1381c:	0005479c 	muleq	r5, ip, r7
   13820:	4bfc1300 	blmi	fff18428 <__bss_end__+0xffdcf3e0>
   13824:	59040000 	stmdbpl	r4, {}	; <UNPREDICTABLE>
   13828:	00007522 	andeq	r7, r0, r2, lsr #10
    if (!valid_fd(fd)) {
   1382c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   13830:	00468a13 	subeq	r8, r6, r3, lsl sl
   13834:	34590400 	ldrbcc	r0, [r9], #-1024	; 0xfffffc00
   13838:	00000075 	andeq	r0, r0, r5, ror r0
   1383c:	13709102 	cmnne	r0, #-2147483648	; 0x80000000
        return -EBADF;
   13840:	00002049 	andeq	r2, r0, r9, asr #32
   13844:	750d5a04 	strvc	r5, [sp, #-2564]	; 0xfffff5fc
    muslcsys_fd_t *muslc_fd = get_fd_struct(fd);
   13848:	02000000 	andeq	r0, r0, #0
   1384c:	1f136c91 	svcne	0x00136c91
   13850:	04000038 	streq	r0, [r0], #-56	; 0xffffffc8
    if (muslc_fd == NULL) {
   13854:	00751c5a 	rsbseq	r1, r5, sl, asr ip
   13858:	91020000 	mrsls	r0, (UNDEF: 2)
   1385c:	c7180068 	ldrgt	r0, [r8, -r8, rrx]
        return -EBADF;
   13860:	0400004c 	streq	r0, [r0], #-76	; 0xffffffb4
   13864:	00460c54 	subeq	r0, r6, r4, asr ip
    if (muslc_fd->filetype != FILE_TYPE_CPIO) {
   13868:	cc700000 	ldclgt	0, cr0, [r0], #-0
   1386c:	00540001 	subseq	r0, r4, r1
   13870:	9c010000 	stcls	0, cr0, [r1], {-0}
   13874:	0000058f 	andeq	r0, r0, pc, lsl #11
        assert(!"Not implemented\n");
   13878:	004bfc13 	subeq	pc, fp, r3, lsl ip	; <UNPREDICTABLE>
   1387c:	20540400 	subscs	r0, r4, r0, lsl #8
   13880:	00000075 	andeq	r0, r0, r5, ror r0
   13884:	13749102 	cmnne	r4, #-2147483648	; 0x80000000
   13888:	0000468a 	andeq	r4, r0, sl, lsl #13
   1388c:	75325404 	ldrvc	r5, [r2, #-1028]!	; 0xfffffbfc
   13890:	02000000 	andeq	r0, r0, #0
   13894:	6f127091 	svcvs	0x00127091
    cpio_file_data_t *cpio_fd = muslc_fd->data;
   13898:	04006666 	streq	r6, [r0], #-1638	; 0xfffff99a
   1389c:	00754654 	rsbseq	r4, r5, r4, asr r6
   138a0:	91020000 	mrsls	r0, (UNDEF: 2)
    int new_offset = 0;
   138a4:	f211006c 	vhadd.s16	q0, <illegal reg q0.5>, q14
   138a8:	0400004c 	streq	r0, [r0], #-76	; 0xffffffb4
    switch (whence) {
   138ac:	00460541 	subeq	r0, r6, r1, asr #10
   138b0:	cb9c0000 	blgt	fe7138b8 <__bss_end__+0xfe5ca870>
   138b4:	00d40001 	sbcseq	r0, r4, r1
   138b8:	9c010000 	stcls	0, cr0, [r1], {-0}
   138bc:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
   138c0:	74646612 	strbtvc	r6, [r4], #-1554	; 0xfffff9ee
   138c4:	1f410400 	svcne	0x00410400
   138c8:	000001a8 	andeq	r0, r0, r8, lsr #3
   138cc:	00749102 	rsbseq	r9, r4, r2, lsl #2
   138d0:	004b2f17 	subeq	r2, fp, r7, lsl pc
   138d4:	1b4a0300 	blne	12944dc <__bss_end__+0x114b494>
   138d8:	000001a8 	andeq	r0, r0, r8, lsr #3
   138dc:	0001cb58 	andeq	ip, r1, r8, asr fp
        new_offset = offset;
   138e0:	00000044 	andeq	r0, r0, r4, asr #32
   138e4:	05f29c01 	ldrbeq	r9, [r2, #3073]!	; 0xc01
        break;
   138e8:	66120000 	ldrvs	r0, [r2], -r0
        if (!safe_addition(cpio_fd->current, offset)) {
   138ec:	03007464 	movweq	r7, #1124	; 0x464
   138f0:	01a8374a 			; <UNDEFINED> instruction: 0x01a8374a
   138f4:	91020000 	mrsls	r0, (UNDEF: 2)
   138f8:	487e1374 	ldmdami	lr!, {r2, r4, r5, r6, r8, r9, ip}^
   138fc:	4a030000 	bmi	d3904 <morecore_area+0x8a904>
   13900:	00004640 	andeq	r4, r0, r0, asr #12
   13904:	70910200 	addsvc	r0, r1, r0, lsl #4
   13908:	4bcd1900 	blmi	ff359d10 <__bss_end__+0xff210cc8>
   1390c:	23020000 	movwcs	r0, #8192	; 0x2000
            return -EOVERFLOW;
   13910:	003a1601 	eorseq	r1, sl, r1, lsl #12
   13914:	cb1c0000 	blgt	71391c <__bss_end__+0x5ca8d4>
        new_offset = cpio_fd->current + offset;
   13918:	003c0001 	eorseq	r0, ip, r1
   1391c:	9c010000 	stcls	0, cr0, [r1], {-0}
   13920:	0000061e 	andeq	r0, r0, lr, lsl r6
   13924:	7464660a 	strbtvc	r6, [r4], #-1546	; 0xfffff9f6
   13928:	01230200 			; <UNDEFINED> instruction: 0x01230200
        break;
   1392c:	0001a832 	andeq	sl, r1, r2, lsr r8
        if (offset > 0) {
   13930:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   13934:	41ee1700 	mvnmi	r1, r0, lsl #14
   13938:	a7020000 	strge	r0, [r2, -r0]
   1393c:	00007518 	andeq	r7, r0, r8, lsl r5
            return -EINVAL;
   13940:	01cadc00 	biceq	sp, sl, r0, lsl #24
   13944:	00004000 	andeq	r4, r0, r0
        new_offset = cpio_fd->size + offset;
   13948:	539c0100 	orrspl	r0, ip, #0, 2
   1394c:	12000006 	andne	r0, r0, #6
   13950:	a7020070 	smlsdxge	r2, r0, r0, r0
   13954:	00043030 	andeq	r3, r4, r0, lsr r0
   13958:	6c910200 	lfmvs	f0, 4, [r1], {0}
        break;
   1395c:	02007615 	andeq	r7, r0, #22020096	; 0x1500000
        return -EINVAL;
   13960:	008f0aa9 	addeq	r0, pc, r9, lsr #21
   13964:	91020000 	mrsls	r0, (UNDEF: 2)
    if (new_offset < 0) {
   13968:	761a0074 			; <UNDEFINED> instruction: 0x761a0074
   1396c:	01000041 	tsteq	r0, r1, asr #32
   13970:	0075185e 	rsbseq	r1, r5, lr, asr r8
        return -EINVAL;
   13974:	ca780000 	bgt	1e1397c <__bss_end__+0x1cca934>
   13978:	00640001 	rsbeq	r0, r4, r1
    } else if (new_offset > cpio_fd->size) {
   1397c:	9c010000 	stcls	0, cr0, [r1], {-0}
   13980:	01007812 	tsteq	r0, r2, lsl r8
   13984:	008f2d5e 	addeq	r2, pc, lr, asr sp	; <UNPREDICTABLE>
   13988:	91020000 	mrsls	r0, (UNDEF: 2)
   1398c:	6f000074 	svcvs	0x00000074
        return -EINVAL;
   13990:	04000009 	streq	r0, [r0], #-9
   13994:	003dba00 	eorseq	fp, sp, r0, lsl #20
    cpio_fd->current = new_offset;
   13998:	17010400 	strne	r0, [r1, -r0, lsl #8]
   1399c:	0c000001 	stceq	0, cr0, [r0], {1}
   139a0:	00004e37 	andeq	r4, r0, r7, lsr lr
   139a4:	0000005f 	andeq	r0, r0, pc, asr r0
   139a8:	0001d7e4 	andeq	sp, r1, r4, ror #15
    return new_offset;
   139ac:	00000a78 	andeq	r0, r0, r8, ror sl
}
   139b0:	0000978b 	andeq	r9, r0, fp, lsl #15
   139b4:	000a2f02 	andeq	r2, sl, r2, lsl #30
   139b8:	186e0200 	stmdane	lr!, {r9}^
{
   139bc:	00000031 	andeq	r0, r0, r1, lsr r0
   139c0:	c5070403 	strgt	r0, [r7, #-1027]	; 0xfffffbfd
   139c4:	04000003 	streq	r0, [r0], #-3
   139c8:	00000031 	andeq	r0, r0, r1, lsr r0
    int fd = va_arg(ap, int);
   139cc:	001a1e02 	andseq	r1, sl, r2, lsl #28
   139d0:	1b120200 	blne	4941d8 <__bss_end__+0x34b190>
   139d4:	00000049 	andeq	r0, r0, r9, asr #32
   139d8:	001a1c05 	andseq	r1, sl, r5, lsl #24
   139dc:	00070400 	andeq	r0, r7, r0, lsl #8
    uint32_t offset_high = va_arg(ap, uint32_t);
   139e0:	00000060 	andeq	r0, r0, r0, rrx
   139e4:	00190706 	andseq	r0, r9, r6, lsl #14
   139e8:	00006000 	andeq	r6, r0, r0
   139ec:	07000000 	streq	r0, [r0, -r0]
   139f0:	05080304 	streq	r0, [r8, #-772]	; 0xfffffcfc
    uint32_t offset_low = va_arg(ap, uint32_t);
   139f4:	00000109 	andeq	r0, r0, r9, lsl #2
   139f8:	f3040803 	vsub.i8	d0, d4, d3
   139fc:	02000015 	andeq	r0, r0, #21
   13a00:	00004f0d 	andeq	r4, r0, sp, lsl #30
   13a04:	810f7802 	tsthi	pc, r2, lsl #16
    off_t *result = va_arg(ap, off_t *);
   13a08:	04000000 	streq	r0, [r0], #-0
   13a0c:	00000070 	andeq	r0, r0, r0, ror r0
   13a10:	69050408 	stmdbvs	r5, {r3, sl}
   13a14:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
   13a18:	00000081 	andeq	r0, r0, r1, lsl #1
    int whence = va_arg(ap, int);
   13a1c:	0e050403 	cdpeq	4, 0, cr0, cr5, cr3, {0}
   13a20:	09000001 	stmdbeq	r0, {r0}
   13a24:	0000022a 	andeq	r0, r0, sl, lsr #4
   13a28:	19016d02 	stmdbne	r1, {r1, r8, sl, fp, sp, lr}
   13a2c:	000000a1 	andeq	r0, r0, r1, lsr #1
    long ret = syscall(SYS_lseek, fd, (uint32_t)offset_low, (uint32_t)offset_high, whence);
   13a30:	0002260a 	andeq	r2, r2, sl, lsl #12
   13a34:	08010300 	stmdaeq	r1, {r8, r9}
   13a38:	00000335 	andeq	r0, r0, r5, lsr r3
   13a3c:	0000a604 	andeq	sl, r0, r4, lsl #12
   13a40:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
   13a44:	000015f8 	strdeq	r1, [r0], -r8
   13a48:	00022f0b 	andeq	r2, r2, fp, lsl #30
   13a4c:	14370300 	ldrtne	r0, [r7], #-768	; 0xfffffd00
    if (ret == -1) {
   13a50:	000000cb 	andeq	r0, r0, fp, asr #1
   13a54:	0094040c 	addseq	r0, r4, ip, lsl #8
   13a58:	c5040000 	strgt	r0, [r4, #-0]
        return -errno;
   13a5c:	0b000000 	bleq	13a64 <sys__llseek+0xa8>
   13a60:	0000023c 	andeq	r0, r0, ip, lsr r2
   13a64:	cb143803 	blgt	521a78 <__bss_end__+0x3d8a30>
   13a68:	0b000000 	bleq	13a70 <sys__llseek+0xb4>
   13a6c:	00000235 	andeq	r0, r0, r5, lsr r2
   13a70:	cb143903 	blgt	521e84 <__bss_end__+0x3d8e3c>
    if (result) {
   13a74:	0b000000 	bleq	13a7c <sys__llseek+0xc0>
   13a78:	0000192b 	andeq	r1, r0, fp, lsr #18
   13a7c:	f40e7b04 			; <UNDEFINED> instruction: 0xf40e7b04
        *result = (off_t)ret;
   13a80:	0c000000 	stceq	0, cr0, [r0], {-0}
   13a84:	0000a604 	andeq	sl, r0, r4, lsl #12
   13a88:	00f40400 	rscseq	r0, r4, r0, lsl #8
   13a8c:	000b0000 	andeq	r0, fp, r0
   13a90:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    return 0;
   13a94:	00810c7c 	addeq	r0, r1, ip, ror ip
}
   13a98:	8e0b0000 	cdphi	0, 0, cr0, cr11, cr0, {0}
   13a9c:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
   13aa0:	0081147c 	addeq	r1, r1, ip, ror r4
   13aa4:	180b0000 	stmdane	fp, {}	; <UNPREDICTABLE>
{
   13aa8:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
   13aac:	00811c7c 	addeq	r1, r1, ip, ror ip
   13ab0:	040c0000 	streq	r0, [ip], #-0
   13ab4:	000000ad 	andeq	r0, r0, sp, lsr #1
    const char *pathname = va_arg(ap, const char *);
   13ab8:	00012304 	andeq	r2, r1, r4, lsl #6
   13abc:	00f40d00 	rscseq	r0, r4, r0, lsl #26
   13ac0:	013e0000 	teqeq	lr, r0
   13ac4:	310e0000 	mrscc	r0, (UNDEF: 14)
   13ac8:	01000000 	mrseq	r0, (UNDEF: 0)
    int mode = va_arg(ap, int);
   13acc:	4e300b00 	vaddmi.f64	d0, d0, d0
   13ad0:	72050000 	andvc	r0, r5, #0
   13ad4:	00012e0e 	andeq	r2, r1, lr, lsl #28
   13ad8:	4d4b0b00 	vstrmi	d16, [fp, #-0]
   13adc:	79050000 	stmdbvc	r5, {}	; <UNPREDICTABLE>
    if (mode == F_OK || mode == R_OK) {
   13ae0:	0000810c 	andeq	r8, r0, ip, lsl #2
   13ae4:	4d3c0b00 	vldmdbmi	ip!, {d0-d-1}
   13ae8:	7a050000 	bvc	153af0 <__bss_end__+0xaaa8>
   13aec:	00008d0d 	andeq	r8, r0, sp, lsl #26
   13af0:	4dad0b00 			; <UNDEFINED> instruction: 0x4dad0b00
   13af4:	7b050000 	blvc	153afc <__bss_end__+0xaab4>
        int fd = open(pathname, O_RDONLY, 0);
   13af8:	0000810c 	andeq	r8, r0, ip, lsl #2
   13afc:	07040300 	streq	r0, [r4, -r0, lsl #6]
   13b00:	000003c0 	andeq	r0, r0, r0, asr #7
   13b04:	004e180f 	subeq	r1, lr, pc, lsl #16
   13b08:	b0062000 	andlt	r2, r6, r0
        if (fd < 0) {
   13b0c:	0001e710 	andeq	lr, r1, r0, lsl r7
   13b10:	766c1000 	strbtvc	r1, [ip], -r0
   13b14:	b206006c 	andlt	r0, r6, #108	; 0x6c
            return -EACCES;
   13b18:	00008106 	andeq	r8, r0, r6, lsl #2
   13b1c:	74100000 	ldrvc	r0, [r0], #-0
        close(fd);
   13b20:	06006761 	streq	r6, [r0], -r1, ror #14
   13b24:	01230eb3 			; <UNDEFINED> instruction: 0x01230eb3
        return 0;
   13b28:	10040000 	andne	r0, r4, r0
   13b2c:	00667562 	rsbeq	r7, r6, r2, ror #10
    ZF_LOGE("Must pass F_OK or R_OK to %s\n", __FUNCTION__);
   13b30:	f408b406 	vst3.8	{d11-d13}, [r8], r6
   13b34:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   13b38:	06006510 			; <UNDEFINED> instruction: 0x06006510
   13b3c:	00f408b5 	ldrhteq	r0, [r4], #133	; 0x85
   13b40:	100c0000 	andne	r0, ip, r0
   13b44:	b6060070 			; <UNDEFINED> instruction: 0xb6060070
   13b48:	0000f408 	andeq	pc, r0, r8, lsl #8
   13b4c:	30111000 	andscc	r1, r1, r0
   13b50:	0600004d 	streq	r0, [r0], -sp, asr #32
   13b54:	00f408b7 	ldrhteq	r0, [r4], #135	; 0x87
   13b58:	11140000 	tstne	r4, r0
   13b5c:	00004d36 	andeq	r4, r0, r6, lsr sp
   13b60:	f408b806 	vst2.8	{d11-d12}, [r8], r6
   13b64:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   13b68:	004efc11 	subeq	pc, lr, r1, lsl ip	; <UNPREDICTABLE>
   13b6c:	08b90600 	ldmeq	r9!, {r9, sl}
   13b70:	000000f4 	strdeq	r0, [r0], -r4
   13b74:	1802001c 	stmdane	r2, {r2, r3, r4}
   13b78:	0600004e 	streq	r0, [r0], -lr, asr #32
   13b7c:	017501bb 	ldrheq	r0, [r5, #-27]!	; 0xffffffe5
    return -EACCES;
   13b80:	9c020000 	stcls	0, cr0, [r2], {-0}
}
   13b84:	0600004d 	streq	r0, [r0], -sp, asr #32
   13b88:	020410bd 	andeq	r1, r4, #189	; 0xbd
   13b8c:	f3040000 	vhadd.u8	d0, d4, d0
{
   13b90:	0c000001 	stceq	0, cr0, [r0], {1}
   13b94:	00020a04 	andeq	r0, r2, r4, lsl #20
   13b98:	02151200 	andseq	r1, r5, #0, 4
   13b9c:	15130000 	ldrne	r0, [r3, #-0]
   13ba0:	00000002 	andeq	r0, r0, r2
   13ba4:	01e7040c 	mvneq	r0, ip, lsl #8
    cpio_archive_symbol = cpio_symbol;
   13ba8:	15040000 	strne	r0, [r4, #-0]
   13bac:	0b000002 	bleq	13bbc <muslcsys_install_cpio_interface+0x2c>
   13bb0:	0000189c 	muleq	r0, ip, r8
   13bb4:	810cf806 	tsthi	ip, r6, lsl #16	; <UNPREDICTABLE>
    cpio_archive_len = cpio_len;
   13bb8:	02000000 	andeq	r0, r0, #0
   13bbc:	00004e08 	andeq	r4, r0, r8, lsl #28
   13bc0:	3d106a01 	vldrcc	s12, [r0, #-4]
   13bc4:	04000002 	streq	r0, [r0], #-2
    cpio_get_file_impl = fn;
   13bc8:	0000022c 	andeq	r0, r0, ip, lsr #4
   13bcc:	0243040c 	subeq	r0, r3, #12, 8	; 0xc000000
   13bd0:	53120000 	tstpl	r2, #0
   13bd4:	13000002 	movwne	r0, #2
}
   13bd8:	00000215 	andeq	r0, r0, r5, lsl r2
   13bdc:	0000f413 	andeq	pc, r0, r3, lsl r4	; <UNPREDICTABLE>
   13be0:	ad0d0000 	stcge	0, cr0, [sp, #-0]
   13be4:	63000000 	movwvs	r0, #0
seL4_MessageInfo_new(seL4_Uint32 label, seL4_Uint32 capsUnwrapped, seL4_Uint32 extraCaps, seL4_Uint32 length) {
   13be8:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
   13bec:	00000031 	andeq	r0, r0, r1, lsr r0
   13bf0:	53040010 	movwpl	r0, #16400	; 0x4010
   13bf4:	14000002 	strne	r0, [r0], #-2
   13bf8:	00004ec8 	andeq	r4, r0, r8, asr #29
   13bfc:	63137501 	tstvs	r3, #4194304	; 0x400000
   13c00:	05000002 	streq	r0, [r0, #-2]
    seL4_DebugAssert((label & ~0xfffffu) == ((0 && (label & (1u << 31))) ? 0x0 : 0));  
   13c04:	029b5803 	addseq	r5, fp, #196608	; 0x30000
   13c08:	4d541400 	cfldrdmi	mvd1, [r4, #-0]
   13c0c:	77010000 	strvc	r0, [r1, -r0]
   13c10:	00012314 	andeq	r2, r1, r4, lsl r3
   13c14:	08030500 	stmdaeq	r3, {r8, sl}
   13c18:	14000481 	strne	r0, [r0], #-1153	; 0xfffffb7f
   13c1c:	00004de2 	andeq	r4, r0, r2, ror #27
   13c20:	250f7801 	strcs	r7, [pc, #-2049]	; 13427 <sys_readv+0xff>
   13c24:	05000000 	streq	r0, [r0, #-0]
   13c28:	02c7a403 	sbceq	sl, r7, #50331648	; 0x3000000
   13c2c:	4d0e1400 	cfstrsmi	mvf1, [lr, #-0]
   13c30:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
   13c34:	00003824 	andeq	r3, r0, r4, lsr #16
    seL4_DebugAssert((capsUnwrapped & ~0x7u) == ((0 && (capsUnwrapped & (1u << 31))) ? 0x0 : 0));  
   13c38:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
   13c3c:	1400029b 	strne	r0, [r0], #-667	; 0xfffffd65
   13c40:	00004e06 	andeq	r4, r0, r6, lsl #28
   13c44:	38257e01 	stmdacc	r5!, {r0, r9, sl, fp, ip, sp, lr}
   13c48:	05000002 	streq	r0, [r0, #-2]
   13c4c:	029b7003 	addseq	r7, fp, #3
   13c50:	4da11400 	cfstrsmi	mvf1, [r1]
   13c54:	7f010000 	svcvc	0x00010000
   13c58:	0001f319 	andeq	pc, r1, r9, lsl r3	; <UNPREDICTABLE>
   13c5c:	a8030500 	stmdage	r3, {r8, sl}
   13c60:	150002c7 	strne	r0, [r0, #-711]	; 0xfffffd39
   13c64:	00000220 	andeq	r0, r0, r0, lsr #4
    seL4_DebugAssert((extraCaps & ~0x3u) == ((0 && (extraCaps & (1u << 31))) ? 0x0 : 0));  
   13c68:	05058101 	streq	r8, [r5, #-257]	; 0xfffffeff
   13c6c:	04810403 	streq	r0, [r1], #1027	; 0x403
   13c70:	4ece1600 	cdpmi	6, 12, cr1, cr14, cr0, {0}
   13c74:	d6010000 	strle	r0, [r1], -r0
   13c78:	e1a80601 			; <UNDEFINED> instruction: 0xe1a80601
   13c7c:	00b40001 	adcseq	r0, r4, r1
   13c80:	9c010000 	stcls	0, cr0, [r1], {-0}
   13c84:	0000037e 	andeq	r0, r0, lr, ror r3
   13c88:	6c766c17 	ldclvs	12, cr6, [r6], #-92	; 0xffffffa4
   13c8c:	01d60100 	bicseq	r0, r6, r0, lsl #2
   13c90:	00008822 	andeq	r8, r0, r2, lsr #16
   13c94:	cc910300 	ldcgt	3, cr0, [r1], {0}
    seL4_DebugAssert((length & ~0x7fu) == ((0 && (length & (1u << 31))) ? 0x0 : 0));
   13c98:	6174177d 	cmnvs	r4, sp, ror r7
   13c9c:	d6010067 	strle	r0, [r1], -r7, rrx
   13ca0:	01293901 			; <UNDEFINED> instruction: 0x01293901
   13ca4:	91030000 	mrsls	r0, (UNDEF: 3)
   13ca8:	64177dc8 	ldrvs	r7, [r7], #-3528	; 0xfffff238
   13cac:	01d70100 	bicseq	r0, r7, r0, lsl #2
   13cb0:	0003841b 	andeq	r8, r3, fp, lsl r4
   13cb4:	c4910300 	ldrgt	r0, [r1], #768	; 0x300
   13cb8:	4ec3187d 	mcrmi	8, 6, r1, cr3, cr13, {3}
   13cbc:	d7010000 	strle	r0, [r1, -r0]
   13cc0:	00382d01 	eorseq	r2, r8, r1, lsl #26
   13cc4:	91030000 	mrsls	r0, (UNDEF: 3)
        | (label & 0xfffffu) << 12
   13cc8:	66177dc0 	ldrvs	r7, [r7], -r0, asr #27
   13ccc:	0100746d 	tsteq	r0, sp, ror #8
        | (capsUnwrapped & 0x7u) << 9
   13cd0:	291b01d8 	ldmdbcs	fp, {r3, r4, r6, r7, r8}
   13cd4:	02000001 	andeq	r0, r0, #1
   13cd8:	1a190091 	bne	653f24 <__bss_end__+0x50aedc>
   13cdc:	00787463 	rsbseq	r7, r8, r3, ror #8
        | (extraCaps & 0x3u) << 7
   13ce0:	0201da01 	andeq	sp, r1, #4096	; 0x1000
   13ce4:	000001e7 	andeq	r0, r0, r7, ror #3
   13ce8:	1a589102 	bne	16380f8 <__bss_end__+0x14ef0b0>
   13cec:	00667562 	rsbeq	r7, r6, r2, ror #10
        | (length & 0x7fu) << 0;
   13cf0:	0201da01 	andeq	sp, r1, #4096	; 0x1000
   13cf4:	0000038a 	andeq	r0, r0, sl, lsl #7
   13cf8:	7dd89103 	ldfvcp	f1, [r8, #12]
    seL4_MessageInfo.words[0] = 0
   13cfc:	0061761a 	rsbeq	r7, r1, sl, lsl r6
    return seL4_MessageInfo;
   13d00:	0a01db01 	beq	8a90c <morecore_area+0x4190c>
}
   13d04:	0000003d 	andeq	r0, r0, sp, lsr r0
   13d08:	7dd49103 	ldfvcp	f1, [r4, #12]
   13d0c:	89040c00 	stmdbhi	r4, {sl, fp}
seL4_MessageInfo_get_label(seL4_MessageInfo_t seL4_MessageInfo) {
   13d10:	04000003 	streq	r0, [r0], #-3
   13d14:	0000037e 	andeq	r0, r0, lr, ror r3
   13d18:	00a60d1b 	adceq	r0, r6, fp, lsl sp
   13d1c:	039a0000 	orrseq	r0, sl, #0
    ret = (seL4_MessageInfo.words[0] & 0xfffff000u) >> 12;
   13d20:	310e0000 	mrscc	r0, (UNDEF: 14)
   13d24:	ff000000 			; <UNDEFINED> instruction: 0xff000000
   13d28:	4dce1600 	stclmi	6, cr1, [lr]
    return ret;
   13d2c:	c4010000 	strgt	r0, [r1], #-0
}
   13d30:	e0e00601 	rsc	r0, r0, r1, lsl #12
   13d34:	00c80001 	sbceq	r0, r8, r1
   13d38:	9c010000 	stcls	0, cr0, [r1], {-0}
   13d3c:	00000466 	andeq	r0, r0, r6, ror #8
seL4_MessageInfo_get_length(seL4_MessageInfo_t seL4_MessageInfo) {
   13d40:	002b3918 	eoreq	r3, fp, r8, lsl r9
   13d44:	01c40100 	biceq	r0, r4, r0, lsl #2
   13d48:	0001292c 	andeq	r2, r1, ip, lsr #18
   13d4c:	cc910300 	ldcgt	3, cr0, [r1], {0}
    ret = (seL4_MessageInfo.words[0] & 0x7fu) >> 0;
   13d50:	17ba187d 			; <UNDEFINED> instruction: 0x17ba187d
   13d54:	c5010000 	strgt	r0, [r1, #-0]
   13d58:	01291a01 			; <UNDEFINED> instruction: 0x01291a01
    return ret;
   13d5c:	91030000 	mrsls	r0, (UNDEF: 3)
}
   13d60:	b9187dc8 	ldmdblt	r8, {r3, r6, r7, r8, sl, fp, ip, sp, lr}
   13d64:	0100004d 	tsteq	r0, sp, asr #32
   13d68:	382f01c5 	stmdacc	pc!, {r0, r2, r6, r7, r8}	; <UNPREDICTABLE>
   13d6c:	03000000 	movweq	r0, #0
{
   13d70:	177dc491 			; <UNDEFINED> instruction: 0x177dc491
   13d74:	006c766c 	rsbeq	r7, ip, ip, ror #12
    return __sel4_ipc_buffer;
   13d78:	1201c601 	andne	ip, r1, #1048576	; 0x100000
   13d7c:	00000088 	andeq	r0, r0, r8, lsl #1
   13d80:	7dc09103 	stfvcp	f1, [r0, #12]
   13d84:	67617417 			; <UNDEFINED> instruction: 0x67617417
}
   13d88:	01c60100 	biceq	r0, r6, r0, lsl #2
   13d8c:	00012929 	andeq	r2, r1, r9, lsr #18
   13d90:	00910200 	addseq	r0, r1, r0, lsl #4
{
   13d94:	01006417 	tsteq	r0, r7, lsl r4
   13d98:	841a01c7 	ldrhi	r0, [sl], #-455	; 0xfffffe39
   13d9c:	02000003 	andeq	r0, r0, #3
   13da0:	c3180491 	tstgt	r8, #-1862270976	; 0x91000000
   13da4:	0100004e 	tsteq	r0, lr, asr #32
    seL4_GetIPCBuffer()->msg[i] = mr;
   13da8:	382c01c7 	stmdacc	ip!, {r0, r1, r2, r6, r7, r8}
   13dac:	02000000 	andeq	r0, r0, #0
   13db0:	66170891 			; <UNDEFINED> instruction: 0x66170891
   13db4:	0100746d 	tsteq	r0, sp, ror #8
   13db8:	291a01c8 	ldmdbcs	sl, {r3, r6, r7, r8}
   13dbc:	02000001 	andeq	r0, r0, #1
   13dc0:	1a190c91 	bne	65700c <__bss_end__+0x50dfc4>
}
   13dc4:	00787463 	rsbseq	r7, r8, r3, ror #8
   13dc8:	0201ca01 	andeq	ip, r1, #4096	; 0x1000
   13dcc:	000001e7 	andeq	r0, r0, r7, ror #3
{
   13dd0:	1a589102 	bne	16381e0 <__bss_end__+0x14ef198>
   13dd4:	00667562 	rsbeq	r7, r6, r2, ror #10
   13dd8:	0201ca01 	andeq	ip, r1, #4096	; 0x1000
   13ddc:	0000038a 	andeq	r0, r0, sl, lsl #7
   13de0:	7dd89103 	ldfvcp	f1, [r8, #12]
   13de4:	0061761a 	rsbeq	r7, r1, sl, lsl r6
   13de8:	0a01cb01 	beq	869f4 <morecore_area+0x3d9f4>
    register seL4_Word destptr asm("r0") = dest;
   13dec:	0000003d 	andeq	r0, r0, sp, lsr r0
    register seL4_Word info asm("r1") = info_arg;
   13df0:	7dd49103 	ldfvcp	f1, [r4, #12]
    register seL4_Word msg0 asm("r2") = *in_out_mr0;
   13df4:	4ea81600 	cdpmi	6, 10, cr1, cr8, cr0, {0}
   13df8:	b7010000 	strlt	r0, [r1, -r0]
   13dfc:	e03c0601 	eors	r0, ip, r1, lsl #12
    register seL4_Word msg1 asm("r3") = *in_out_mr1;
   13e00:	00a40001 	adceq	r0, r4, r1
   13e04:	9c010000 	stcls	0, cr0, [r1], {-0}
    register seL4_Word msg2 asm("r4") = *in_out_mr2;
   13e08:	000004e2 	andeq	r0, r0, r2, ror #9
   13e0c:	6c766c17 	ldclvs	12, cr6, [r6], #-92	; 0xffffffa4
   13e10:	01b70100 			; <UNDEFINED> instruction: 0x01b70100
    register seL4_Word msg3 asm("r5") = *in_out_mr3;
   13e14:	0000881e 	andeq	r8, r0, lr, lsl r8
   13e18:	c4910300 	ldrgt	r0, [r1], #768	; 0x300
   13e1c:	6174177d 	cmnvs	r4, sp, ror r7
    register seL4_Word scno asm("r7") = sys;
   13e20:	b7010067 	strlt	r0, [r1, -r7, rrx]
    asm volatile(
   13e24:	01293501 			; <UNDEFINED> instruction: 0x01293501
    *out_info = info;
   13e28:	91030000 	mrsls	r0, (UNDEF: 3)
   13e2c:	66177dc0 	ldrvs	r7, [r7], -r0, asr #27
   13e30:	0100746d 	tsteq	r0, sp, ror #8
    *out_badge = destptr;
   13e34:	291a01b8 	ldmdbcs	sl, {r3, r4, r5, r7, r8}
   13e38:	02000001 	andeq	r0, r0, #1
    *in_out_mr0 = msg0;
   13e3c:	1a197891 	bne	672088 <__bss_end__+0x529040>
   13e40:	00787463 	rsbseq	r7, r8, r3, ror #8
   13e44:	0201ba01 	andeq	fp, r1, #4096	; 0x1000
    *in_out_mr1 = msg1;
   13e48:	000001e7 	andeq	r0, r0, r7, ror #3
   13e4c:	1a509102 	bne	143825c <__bss_end__+0x12ef214>
   13e50:	00667562 	rsbeq	r7, r6, r2, ror #10
    *in_out_mr2 = msg2;
   13e54:	0201ba01 	andeq	fp, r1, #4096	; 0x1000
   13e58:	0000038a 	andeq	r0, r0, sl, lsl #7
   13e5c:	7dd09103 	ldfvcp	f1, [r0, #12]
    *in_out_mr3 = msg3;
   13e60:	0061761a 	rsbeq	r7, r1, sl, lsl r6
   13e64:	0a01bb01 	beq	82a70 <morecore_area+0x39a70>
   13e68:	0000003d 	andeq	r0, r0, sp, lsr r0
}
   13e6c:	7dcc9103 	stfvcp	f1, [ip, #12]
   13e70:	4dbe1600 	ldcmi	6, cr1, [lr]
   13e74:	a7010000 	strge	r0, [r1, -r0]
   13e78:	df880601 	svcle	0x00880601
{
   13e7c:	00b40001 	adcseq	r0, r4, r1
   13e80:	9c010000 	stcls	0, cr0, [r1], {-0}
   13e84:	00000590 	muleq	r0, r0, r5
   13e88:	002b3918 	eoreq	r3, fp, r8, lsl r9
   13e8c:	01a70100 			; <UNDEFINED> instruction: 0x01a70100
   13e90:	00012928 	andeq	r2, r1, r8, lsr #18
   13e94:	cc910300 	ldcgt	3, cr0, [r1], {0}
    seL4_Word msg0 = 0;
   13e98:	17ba187d 			; <UNDEFINED> instruction: 0x17ba187d
   13e9c:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
    seL4_Word msg1 = 0;
   13ea0:	01291901 			; <UNDEFINED> instruction: 0x01291901
   13ea4:	91030000 	mrsls	r0, (UNDEF: 3)
    seL4_Word msg2 = 0;
   13ea8:	b9187dc8 	ldmdblt	r8, {r3, r6, r7, r8, sl, fp, ip, sp, lr}
   13eac:	0100004d 	tsteq	r0, sp, asr #32
    seL4_Word msg3 = 0;
   13eb0:	382e01a8 	stmdacc	lr!, {r3, r5, r7, r8}
   13eb4:	03000000 	movweq	r0, #0
    if (mr0 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 0) {
   13eb8:	177dc491 			; <UNDEFINED> instruction: 0x177dc491
   13ebc:	006c766c 	rsbeq	r7, ip, ip, ror #12
   13ec0:	1101a901 	tstne	r1, r1, lsl #18
   13ec4:	00000088 	andeq	r0, r0, r8, lsl #1
   13ec8:	7dc09103 	stfvcp	f1, [r0, #12]
   13ecc:	67617417 			; <UNDEFINED> instruction: 0x67617417
   13ed0:	01a90100 			; <UNDEFINED> instruction: 0x01a90100
   13ed4:	00012928 	andeq	r2, r1, r8, lsr #18
        msg0 = *mr0;
   13ed8:	00910200 	addseq	r0, r1, r0, lsl #4
   13edc:	746d6617 	strbtvc	r6, [sp], #-1559	; 0xfffff9e9
   13ee0:	01aa0100 			; <UNDEFINED> instruction: 0x01aa0100
    if (mr1 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 1) {
   13ee4:	00012919 	andeq	r2, r1, r9, lsl r9
   13ee8:	04910200 	ldreq	r0, [r1], #512	; 0x200
   13eec:	74631a19 	strbtvc	r1, [r3], #-2585	; 0xfffff5e7
   13ef0:	ac010078 	stcge	0, cr0, [r1], {120}	; 0x78
   13ef4:	01e70201 	mvneq	r0, r1, lsl #4
   13ef8:	91020000 	mrsls	r0, (UNDEF: 2)
   13efc:	75621a58 	strbvc	r1, [r2, #-2648]!	; 0xfffff5a8
   13f00:	ac010066 	stcge	0, cr0, [r1], {102}	; 0x66
        msg1 = *mr1;
   13f04:	038a0201 	orreq	r0, sl, #268435456	; 0x10000000
   13f08:	91030000 	mrsls	r0, (UNDEF: 3)
   13f0c:	761a7dd8 			; <UNDEFINED> instruction: 0x761a7dd8
    if (mr2 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 2) {
   13f10:	ad010061 	stcge	0, cr0, [r1, #-388]	; 0xfffffe7c
   13f14:	003d0a01 	eorseq	r0, sp, r1, lsl #20
   13f18:	91030000 	mrsls	r0, (UNDEF: 3)
   13f1c:	1c007dd4 	stcne	13, cr7, [r0], {212}	; 0xd4
   13f20:	00004e8d 	andeq	r4, r0, sp, lsl #29
   13f24:	06019901 	streq	r9, [r1], -r1, lsl #18
   13f28:	0001df58 	andeq	sp, r1, r8, asr pc
   13f2c:	00000030 	andeq	r0, r0, r0, lsr r0
        msg2 = *mr2;
   13f30:	05b79c01 	ldreq	r9, [r7, #3073]!	; 0xc01
   13f34:	63170000 	tstvs	r7, #0
   13f38:	99010062 	stmdbls	r1, {r1, r5, r6}
    if (mr3 != seL4_Null && seL4_MessageInfo_get_length(msgInfo) > 3) {
   13f3c:	01ff3801 	mvnseq	r3, r1, lsl #16
   13f40:	91020000 	mrsls	r0, (UNDEF: 2)
   13f44:	ee1c0074 	mrc	0, 0, r0, cr12, cr4, {3}
   13f48:	0100004d 	tsteq	r0, sp, asr #32
   13f4c:	28060194 	stmdacs	r6, {r2, r4, r7, r8}
   13f50:	300001df 	ldrdcc	r0, [r0], -pc	; <UNPREDICTABLE>
   13f54:	01000000 	mrseq	r0, (UNDEF: 0)
   13f58:	0005df9c 	muleq	r5, ip, pc	; <UNPREDICTABLE>
        msg3 = *mr3;
   13f5c:	766c1700 	strbtvc	r1, [ip], -r0, lsl #14
   13f60:	9401006c 	strls	r0, [r1], #-108	; 0xffffff94
   13f64:	00882801 	addeq	r2, r8, r1, lsl #16
    arm_sys_send_recv(seL4_SysCall, dest, &dest, msgInfo.words[0], &info.words[0], &msg0, &msg1, &msg2, &msg3, 0);
   13f68:	91020000 	mrsls	r0, (UNDEF: 2)
   13f6c:	611c0074 	tstvs	ip, r4, ror r0
   13f70:	0100004d 	tsteq	r0, sp, asr #32
   13f74:	f806018f 			; <UNDEFINED> instruction: 0xf806018f
   13f78:	300001de 	ldrdcc	r0, [r0], -lr
   13f7c:	01000000 	mrseq	r0, (UNDEF: 0)
   13f80:	0006059c 	muleq	r6, ip, r5
   13f84:	00771700 	rsbseq	r1, r7, r0, lsl #14
   13f88:	2a018f01 	bcs	77b94 <morecore_area+0x2eb94>
   13f8c:	00000038 	andeq	r0, r0, r8, lsr r0
   13f90:	00749102 	rsbseq	r9, r4, r2, lsl #2
   13f94:	004d861c 	subeq	r8, sp, ip, lsl r6
   13f98:	018a0100 	orreq	r0, sl, r0, lsl #2
   13f9c:	01dec806 	bicseq	ip, lr, r6, lsl #16
   13fa0:	00003000 	andeq	r3, r0, r0
   13fa4:	2d9c0100 	ldfcss	f0, [ip]
   13fa8:	18000006 	stmdane	r0, {r1, r2}
   13fac:	00004d5a 	andeq	r4, r0, sl, asr sp
    if (mr0 != seL4_Null) {
   13fb0:	2e018a01 	vmlacs.f32	s16, s2, s2
   13fb4:	00000129 	andeq	r0, r0, r9, lsr #2
   13fb8:	00749102 	rsbseq	r9, r4, r2, lsl #2
        *mr0 = msg0;
   13fbc:	004f021d 	subeq	r0, pc, sp, lsl r2	; <UNPREDICTABLE>
   13fc0:	01630100 	cmneq	r3, r0, lsl #2
   13fc4:	01dcc80d 	bicseq	ip, ip, sp, lsl #16
    if (mr1 != seL4_Null) {
   13fc8:	00020000 	andeq	r0, r2, r0
   13fcc:	269c0100 	ldrcs	r0, [ip], r0, lsl #2
   13fd0:	17000007 	strne	r0, [r0, -r7]
        *mr1 = msg1;
   13fd4:	00787463 	rsbseq	r7, r8, r3, ror #8
   13fd8:	31016301 	tstcc	r1, r1, lsl #6
   13fdc:	0000021b 	andeq	r0, r0, fp, lsl r2
    if (mr2 != seL4_Null) {
   13fe0:	174c9102 	strbne	r9, [ip, -r2, lsl #2]
   13fe4:	64010064 	strvs	r0, [r1], #-100	; 0xffffff9c
   13fe8:	03841b01 	orreq	r1, r4, #1024	; 0x400
        *mr2 = msg2;
   13fec:	91020000 	mrsls	r0, (UNDEF: 2)
   13ff0:	4ec31848 	cdpmi	8, 12, cr1, cr3, cr8, {2}
   13ff4:	64010000 	strvs	r0, [r1], #-0
    if (mr3 != seL4_Null) {
   13ff8:	00382d01 	eorseq	r2, r8, r1, lsl #26
   13ffc:	91020000 	mrsls	r0, (UNDEF: 2)
   14000:	4d451e44 	stclmi	14, cr1, [r5, #-272]	; 0xfffffef0
        *mr3 = msg3;
   14004:	6a010000 	bvs	5400c <morecore_area+0xb00c>
   14008:	07261701 	streq	r1, [r6, -r1, lsl #14]!
   1400c:	91020000 	mrsls	r0, (UNDEF: 2)
    return info;
   14010:	4d081e74 	stcmi	14, cr1, [r8, #-464]	; 0xfffffe30
}
   14014:	6b010000 	blvs	5401c <morecore_area+0xb01c>
   14018:	072c1d01 	streq	r1, [ip, -r1, lsl #26]!
   1401c:	91020000 	mrsls	r0, (UNDEF: 2)
{
   14020:	4d001e68 	stcmi	14, cr1, [r0, #-416]	; 0xfffffe60
   14024:	6c010000 	stcvs	0, cr0, [r1], {-0}
   14028:	07261701 	streq	r1, [r6, -r1, lsl #14]!
   1402c:	91020000 	mrsls	r0, (UNDEF: 2)
   14030:	4de41e54 	stclmi	14, cr1, [r4, #336]!	; 0x150
    seL4_Word unused0 = 0;
   14034:	6d010000 	stcvs	0, cr0, [r1, #-0]
   14038:	007c1201 	rsbseq	r1, ip, r1, lsl #4
    seL4_Word unused1 = 0;
   1403c:	91020000 	mrsls	r0, (UNDEF: 2)
   14040:	4e2a1e64 	cdpmi	14, 2, cr1, cr10, cr4, {3}
    seL4_Word unused2 = 0;
   14044:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
   14048:	00fa0e01 	rscseq	r0, sl, r1, lsl #28
    seL4_Word unused3 = 0;
   1404c:	91020000 	mrsls	r0, (UNDEF: 2)
   14050:	4eec1e60 	cdpmi	14, 14, cr1, cr12, cr0, {3}
    seL4_Word unused4 = 0;
   14054:	6f010000 	svcvs	0x00010000
   14058:	00fa0e01 	rscseq	r0, sl, r1, lsl #28
    seL4_Word unused5 = 0;
   1405c:	91020000 	mrsls	r0, (UNDEF: 2)
   14060:	4ef41e5c 	mrcmi	14, 7, r1, cr4, cr12, {2}
    arm_sys_send_recv(seL4_SysDebugPutChar, c, &unused0, 0, &unused1, &unused2, &unused3, &unused4, &unused5, 0);
   14064:	70010000 	andvc	r0, r1, r0
   14068:	00fa0e01 	rscseq	r0, sl, r1, lsl #28
   1406c:	91020000 	mrsls	r0, (UNDEF: 2)
   14070:	dd6c1f58 	stclle	15, cr1, [ip, #-352]!	; 0xfffffea0
   14074:	01340001 	teqeq	r4, r1
   14078:	681a0000 	ldmdavs	sl, {}	; <UNPREDICTABLE>
   1407c:	01007865 	tsteq	r0, r5, ror #16
   14080:	f4090177 	vst4.16	{d0,d2,d4,d6}, [r9 :256], r7
   14084:	02000000 	andeq	r0, r0, #0
   14088:	121e7091 	andsne	r7, lr, #145	; 0x91
   1408c:	0100004e 	tsteq	r0, lr, asr #32
   14090:	f4090178 	vst4.16	{d0,d2,d4,d6}, [r9 :256], r8
   14094:	02000000 	andeq	r0, r0, #0
   14098:	b01f6c91 	mulslt	pc, r1, ip	; <UNPREDICTABLE>
   1409c:	8c0001dd 	stfhis	f0, [r0], {221}	; 0xdd
   140a0:	1a000000 	bne	140a8 <seL4_DebugPutChar+0x88>
   140a4:	01006863 	tsteq	r0, r3, ror #16
}
   140a8:	ad0f017c 	stfges	f0, [pc, #-496]	; 13ec0 <seL4_CallWithMRs+0x44>
   140ac:	02000000 	andeq	r0, r0, #0
   140b0:	00005391 	muleq	r0, r1, r3
{
   140b4:	38040c00 	stmdacc	r4, {sl, fp}
   140b8:	04000007 	streq	r0, [r0], #-7
   140bc:	00000726 	andeq	r0, r0, r6, lsr #14
   140c0:	2c080103 	stfcss	f0, [r8], {3}
   140c4:	04000003 	streq	r0, [r0], #-3
	seL4_MessageInfo_t tag = seL4_MessageInfo_new(TCBSetTLSBase, 0, 0, 1);
   140c8:	00000731 	andeq	r0, r0, r1, lsr r7
   140cc:	004d761d 	subeq	r7, sp, sp, lsl r6
   140d0:	015a0100 	cmpeq	sl, r0, lsl #2
   140d4:	01dc600d 	bicseq	r6, ip, sp
   140d8:	00006800 	andeq	r6, r0, r0, lsl #16
   140dc:	929c0100 	addsls	r0, ip, #0, 2
   140e0:	17000007 	strne	r0, [r0, -r7]
	mr0 = tls_base;
   140e4:	00787463 	rsbseq	r7, r8, r3, ror #8
   140e8:	2e015a01 	vmlacs.f32	s10, s2, s2
	mr1 = 0;
   140ec:	0000021b 	andeq	r0, r0, fp, lsl r2
   140f0:	17649102 	strbne	r9, [r4, -r2, lsl #2]!
	mr2 = 0;
   140f4:	00746d66 	rsbseq	r6, r4, r6, ror #26
   140f8:	18015b01 	stmdane	r1, {r0, r8, r9, fp, ip, lr}
	mr3 = 0;
   140fc:	00000129 	andeq	r0, r0, r9, lsr #2
   14100:	17609102 	strbne	r9, [r0, -r2, lsl #2]!
	output_tag = seL4_CallWithMRs(_service, tag,
   14104:	01006176 	tsteq	r0, r6, ror r1
   14108:	3d25015b 	stfccs	f0, [r5, #-364]!	; 0xfffffe94
   1410c:	02000000 	andeq	r0, r0, #0
   14110:	6e1a5c91 	mrcvs	12, 0, r5, cr10, cr1, {4}
   14114:	015d0100 	cmpeq	sp, r0, lsl #2
   14118:	00008106 	andeq	r8, r0, r6, lsl #2
   1411c:	6c910200 	lfmvs	f0, 4, [r1], {0}
   14120:	4d7e1d00 	ldclmi	13, cr1, [lr, #-0]
   14124:	51010000 	mrspl	r0, (UNDEF: 1)
   14128:	dbe40d01 	blle	ff917534 <__bss_end__+0xff7ce4ec>
   1412c:	007c0001 	rsbseq	r0, ip, r1
   14130:	9c010000 	stcls	0, cr0, [r1], {-0}
	result = (seL4_Error) seL4_MessageInfo_get_label(output_tag);
   14134:	000007f8 	strdeq	r0, [r0], -r8
   14138:	78746317 	ldmdavc	r4!, {r0, r1, r2, r4, r8, r9, sp, lr}^
   1413c:	01510100 	cmpeq	r1, r0, lsl #2
	if (result != seL4_NoError) {
   14140:	00021b2e 	andeq	r1, r2, lr, lsr #22
   14144:	64910200 	ldrvs	r0, [r1], #512	; 0x200
   14148:	002b3918 	eoreq	r3, fp, r8, lsl r9
		seL4_SetMR(0, mr0);
   1414c:	01510100 	cmpeq	r1, r0, lsl #2
   14150:	00012945 	andeq	r2, r1, r5, asr #18
   14154:	60910200 	addsvs	r0, r1, r0, lsl #4
   14158:	0017ba18 	andseq	fp, r7, r8, lsl sl
		seL4_SetMR(1, mr1);
   1415c:	01520100 	cmpeq	r2, r0, lsl #2
   14160:	00012918 	andeq	r2, r1, r8, lsl r9
   14164:	5c910200 	lfmpl	f0, 4, [r1], {0}
   14168:	004db918 	subeq	fp, sp, r8, lsl r9
		seL4_SetMR(2, mr2);
   1416c:	01520100 	cmpeq	r2, r0, lsl #2
   14170:	0000382d 	andeq	r3, r0, sp, lsr #16
   14174:	58910200 	ldmpl	r1, {r9}
   14178:	01006e1a 	tsteq	r0, sl, lsl lr
		seL4_SetMR(3, mr3);
   1417c:	81060154 	tsthi	r6, r4, asr r1
   14180:	02000000 	andeq	r0, r0, #0
   14184:	20006c91 	mulcs	r0, r1, ip
   14188:	00001be6 	andeq	r1, r0, r6, ror #23
	return result;
   1418c:	0d013601 	stceq	6, cr3, [r1, #-4]
}
   14190:	0001da10 	andeq	sp, r1, r0, lsl sl
   14194:	000001d4 	ldrdeq	r0, [r0], -r4
   14198:	083f9c01 	ldmdaeq	pc!, {r0, sl, fp, ip, pc}	; <UNPREDICTABLE>
{
   1419c:	63170000 	tstvs	r7, #0
   141a0:	01007874 	tsteq	r0, r4, ror r8
   141a4:	1b2e0136 	blne	b94684 <__bss_end__+0xa4b63c>
   141a8:	02000002 	andeq	r0, r0, #2
    void *tp = va_arg(ap, void *);
   141ac:	74176c91 	ldrvc	r6, [r7], #-3217	; 0xfffff36f
   141b0:	01006761 	tsteq	r0, r1, ror #14
   141b4:	29450136 	stmdbcs	r5, {r1, r2, r4, r5, r8}^
   141b8:	02000001 	andeq	r0, r0, #1
   141bc:	631a6891 	tstvs	sl, #9502720	; 0x910000
    if (boot_set_thread_area_happened) {
   141c0:	38010068 	stmdacc	r1, {r3, r5, r6}
   141c4:	01230e01 			; <UNDEFINED> instruction: 0x01230e01
   141c8:	91020000 	mrsls	r0, (UNDEF: 2)
   141cc:	22200074 	eorcs	r0, r0, #116	; 0x74
   141d0:	0100004e 	tsteq	r0, lr, asr #32
        ZF_LOGE("Boot version of set_thread_area somehow got called twice");
   141d4:	f00d0121 			; <UNDEFINED> instruction: 0xf00d0121
   141d8:	200001d9 	ldrdcs	r0, [r0], -r9
   141dc:	01000000 	mrseq	r0, (UNDEF: 0)
   141e0:	0008679c 	muleq	r8, ip, r7
   141e4:	74631700 	strbtvc	r1, [r3], #-1792	; 0xfffff900
   141e8:	21010078 	tstcs	r1, r8, ror r0
   141ec:	021b2e01 	andseq	r2, fp, #1, 28
   141f0:	91020000 	mrsls	r0, (UNDEF: 2)
   141f4:	e0200074 	eor	r0, r0, r4, ror r0
   141f8:	0100004e 	tsteq	r0, lr, asr #32
   141fc:	80140119 	andshi	r0, r4, r9, lsl r1
   14200:	700001d9 	ldrdvc	r0, [r0], -r9
   14204:	01000000 	mrseq	r0, (UNDEF: 0)
   14208:	00089d9c 	muleq	r8, ip, sp
   1420c:	74631700 	strbtvc	r1, [r3], #-1792	; 0xfffff900
   14210:	19010078 	stmdbne	r1, {r3, r4, r5, r6}
   14214:	021b3901 	andseq	r3, fp, #16384	; 0x4000
        return -ESRCH;
   14218:	91020000 	mrsls	r0, (UNDEF: 2)
   1421c:	006e1774 	rsbeq	r1, lr, r4, ror r7
    char *tcb_string = getenv("boot_tcb_cptr");
   14220:	48011901 	stmdami	r1, {r0, r8, fp, ip}
   14224:	00000088 	andeq	r0, r0, r8, lsl #1
   14228:	00709102 	rsbseq	r9, r0, r2, lsl #2
   1422c:	004eb621 	subeq	fp, lr, r1, lsr #12
    if (tcb_string) {
   14230:	010d0100 	mrseq	r0, (UNDEF: 29)
   14234:	00002516 	andeq	r2, r0, r6, lsl r5
   14238:	01d94800 	bicseq	r4, r9, r0, lsl #16
        if (sscanf(tcb_string, "%p", (void **)&tcb) == 1) {
   1423c:	00003800 	andeq	r3, r0, r0, lsl #16
   14240:	c99c0100 	ldmibgt	ip, {r8}
   14244:	17000008 	strne	r0, [r0, -r8]
   14248:	00787463 	rsbseq	r7, r8, r3, ror #8
   1424c:	3c010d01 	stccc	13, cr0, [r1], {1}
   14250:	0000021b 	andeq	r0, r0, fp, lsl r2
   14254:	00749102 	rsbseq	r9, r4, r2, lsl #2
   14258:	004d1721 	subeq	r1, sp, r1, lsr #14
   1425c:	01000100 	mrseq	r0, (UNDEF: 16)
            seL4_TCB_SetTLSBase(tcb, (seL4_Word)tp);
   14260:	00012314 	andeq	r2, r1, r4, lsl r3
   14264:	01d8c800 	bicseq	ip, r8, r0, lsl #16
   14268:	00008000 	andeq	r8, r0, r0
   1426c:	1b9c0100 	blne	fe714674 <__bss_end__+0xfe5cb62c>
   14270:	18000009 	stmdane	r0, {r0, r3}
    boot_set_thread_area_happened = true;
   14274:	000017ba 			; <UNDEFINED> instruction: 0x000017ba
   14278:	29010001 	stmdbcs	r1, {r0}
   1427c:	00000123 	andeq	r0, r0, r3, lsr #2
   14280:	1a6c9102 	bne	1b38690 <__bss_end__+0x19ef648>
    boot_set_thread_area_arg = tp;
   14284:	02010066 	andeq	r0, r1, #102	; 0x66
   14288:	01230e01 			; <UNDEFINED> instruction: 0x01230e01
   1428c:	91020000 	mrsls	r0, (UNDEF: 2)
   14290:	d8e01f74 	stmiale	r0!, {r2, r4, r5, r6, r8, r9, sl, fp, ip}^
    return 0;
   14294:	00540001 	subseq	r0, r4, r1
}
   14298:	701a0000 	andsvc	r0, sl, r0
   1429c:	01030100 	mrseq	r0, (UNDEF: 19)
   142a0:	00012313 	andeq	r2, r1, r3, lsl r3
{
   142a4:	70910200 	addsvc	r0, r1, r0, lsl #4
   142a8:	98220000 	stmdals	r2!, {}	; <UNPREDICTABLE>
   142ac:	0100004e 	tsteq	r0, lr, asr #32
   142b0:	d83c0de7 	ldmdale	ip!, {r0, r1, r2, r5, r6, r7, r8, sl, fp}
    *arg = boot_set_thread_area_arg;
   142b4:	008c0001 	addeq	r0, ip, r1
   142b8:	9c010000 	stcls	0, cr0, [r1], {-0}
   142bc:	00000941 	andeq	r0, r0, r1, asr #18
   142c0:	78746323 	ldmdavc	r4!, {r0, r1, r5, r8, r9, sp, lr}^
   142c4:	36e70100 	strbtcc	r0, [r7], r0, lsl #2
    return boot_set_thread_area_happened;
   142c8:	0000021b 	andeq	r0, r0, fp, lsl r2
   142cc:	00749102 	rsbseq	r9, r4, r2, lsl #2
   142d0:	004d2024 	subeq	r2, sp, r4, lsr #32
}
   142d4:	0de20100 	stfeqe	f0, [r2]
   142d8:	0001d7e4 	andeq	sp, r1, r4, ror #15
   142dc:	00000058 	andeq	r0, r0, r8, asr r0
   142e0:	63239c01 			; <UNDEFINED> instruction: 0x63239c01
{
   142e4:	01007874 	tsteq	r0, r4, ror r8
   142e8:	021530e2 	andseq	r3, r5, #226	; 0xe2
   142ec:	91020000 	mrsls	r0, (UNDEF: 2)
   142f0:	75622374 	strbvc	r2, [r2, #-884]!	; 0xfffffc8c
    int *tid = va_arg(ap, int *);
   142f4:	e2010066 	and	r0, r1, #102	; 0x66
   142f8:	0000f43b 	andeq	pc, r0, fp, lsr r4	; <UNPREDICTABLE>
   142fc:	70910200 	addsvc	r0, r1, r0, lsl #4
   14300:	001e0000 	andseq	r0, lr, r0
   14304:	00020000 	andeq	r0, r2, r0
    if (boot_set_tid_address_happened) {
   14308:	00003fe8 	andeq	r3, r0, r8, ror #31
   1430c:	9bf10104 	blls	ffc54724 <__bss_end__+0xffb0b6dc>
   14310:	00380000 	eorseq	r0, r8, r0
   14314:	4f170000 	svcmi	0x00170000
   14318:	005f0000 	subseq	r0, pc, r0
        ZF_LOGE("Boot version of set_tid_address somehow got called twice");
   1431c:	009e0000 	addseq	r0, lr, r0
   14320:	80010000 	andhi	r0, r1, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	10001101 	andne	r1, r0, r1, lsl #2
       4:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
       8:	1b0e0301 	blne	380c14 <__bss_end__+0x237bcc>
       c:	130e250e 	movwne	r2, #58638	; 0xe50e
      10:	00000005 	andeq	r0, r0, r5
      14:	10001101 	andne	r1, r0, r1, lsl #2
      18:	03065506 	movweq	r5, #25862	; 0x6506
      1c:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
      20:	0005130e 	andeq	r1, r5, lr, lsl #6
      24:	11010000 	mrsne	r0, (UNDEF: 1)
      28:	130e2501 	movwne	r2, #58625	; 0xe501
      2c:	1b0e030b 	blne	380c60 <__bss_end__+0x237c18>
      30:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
      34:	00171006 	andseq	r1, r7, r6
      38:	00240200 	eoreq	r0, r4, r0, lsl #4
      3c:	0b3e0b0b 	bleq	f82c70 <__bss_end__+0xe39c28>
      40:	00000e03 	andeq	r0, r0, r3, lsl #28
      44:	0b002403 	bleq	9058 <errno+0x9054>
      48:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      4c:	04000008 	streq	r0, [r0], #-8
      50:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      54:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      58:	13490b39 	movtne	r0, #39737	; 0x9b39
      5c:	13050000 	movwne	r0, #20480	; 0x5000
      60:	3c0e0300 	stccc	3, cr0, [lr], {-0}
      64:	06000019 			; <UNDEFINED> instruction: 0x06000019
      68:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
      6c:	0b3b0b3a 	bleq	ec2d5c <__bss_end__+0xd79d14>
      70:	13490b39 	movtne	r0, #39737	; 0x9b39
      74:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      78:	0f070000 	svceq	0x00070000
      7c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
      80:	08000013 	stmdaeq	r0, {r0, r1, r4}
      84:	13490026 	movtne	r0, #36902	; 0x9026
      88:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
      8c:	03193f01 	tsteq	r9, #1, 30
      90:	3b0b3a0e 	blcc	2ce8d0 <__bss_end__+0x185888>
      94:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
      98:	11134919 	tstne	r3, r9, lsl r9
      9c:	40061201 	andmi	r1, r6, r1, lsl #4
      a0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
      a4:	00001301 	andeq	r1, r0, r1, lsl #6
      a8:	0300050a 	movweq	r0, #1290	; 0x50a
      ac:	3b0b3a0e 	blcc	2ce8ec <__bss_end__+0x1858a4>
      b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      b4:	00180213 	andseq	r0, r8, r3, lsl r2
      b8:	11010000 	mrsne	r0, (UNDEF: 1)
      bc:	11061000 	mrsne	r1, (UNDEF: 6)
      c0:	03011201 	movweq	r1, #4609	; 0x1201
      c4:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
      c8:	0005130e 	andeq	r1, r5, lr, lsl #6
      cc:	11010000 	mrsne	r0, (UNDEF: 1)
      d0:	130e2501 	movwne	r2, #58625	; 0xe501
      d4:	1b0e030b 	blne	380d08 <__bss_end__+0x237cc0>
      d8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
      dc:	00171006 	andseq	r1, r7, r6
      e0:	00240200 	eoreq	r0, r4, r0, lsl #4
      e4:	0b3e0b0b 	bleq	f82d18 <__bss_end__+0xe39cd0>
      e8:	00000e03 	andeq	r0, r0, r3, lsl #28
      ec:	0b002403 	bleq	9100 <errno+0x90fc>
      f0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      f4:	04000008 	streq	r0, [r0], #-8
      f8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      fc:	0b3b0b3a 	bleq	ec2dec <__bss_end__+0xd79da4>
     100:	13490b39 	movtne	r0, #39737	; 0x9b39
     104:	04050000 	streq	r0, [r5], #-0
     108:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
     10c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     110:	3b0b3a13 	blcc	2ce964 <__bss_end__+0x18591c>
     114:	010b390b 	tsteq	fp, fp, lsl #18
     118:	06000013 			; <UNDEFINED> instruction: 0x06000013
     11c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     120:	00000b1c 	andeq	r0, r0, ip, lsl fp
     124:	49002607 	stmdbmi	r0, {r0, r1, r2, r9, sl, sp}
     128:	08000013 	stmdaeq	r0, {r0, r1, r4}
     12c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     130:	0b3b0b3a 	bleq	ec2e20 <__bss_end__+0xd79dd8>
     134:	13490b39 	movtne	r0, #39737	; 0x9b39
     138:	00001802 	andeq	r1, r0, r2, lsl #16
     13c:	49010109 	stmdbmi	r1, {r0, r3, r8}
     140:	00130113 	andseq	r0, r3, r3, lsl r1
     144:	00210a00 	eoreq	r0, r1, r0, lsl #20
     148:	0b2f1349 	bleq	bc4e74 <__bss_end__+0xa7be2c>
     14c:	130b0000 	movwne	r0, #45056	; 0xb000
     150:	0b0e0301 	bleq	380d5c <__bss_end__+0x237d14>
     154:	3b0b3a0b 	blcc	2ce988 <__bss_end__+0x185940>
     158:	010b3905 	tsteq	fp, r5, lsl #18
     15c:	0c000013 	stceq	0, cr0, [r0], {19}
     160:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     164:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     168:	13490b39 	movtne	r0, #39737	; 0x9b39
     16c:	00000b38 	andeq	r0, r0, r8, lsr fp
     170:	0300160d 	movweq	r1, #1549	; 0x60d
     174:	3b0b3a0e 	blcc	2ce9b4 <__bss_end__+0x18596c>
     178:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     17c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     180:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     184:	0b3a050b 	bleq	e815b8 <__bss_end__+0xd38570>
     188:	0b390b3b 	bleq	e42e7c <__bss_end__+0xcf9e34>
     18c:	00001301 	andeq	r1, r0, r1, lsl #6
     190:	03000d0f 	movweq	r0, #3343	; 0xd0f
     194:	3b0b3a08 	blcc	2ce9bc <__bss_end__+0x185974>
     198:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     19c:	000b3813 	andeq	r3, fp, r3, lsl r8
     1a0:	000d1000 	andeq	r1, sp, r0
     1a4:	0b3a0e03 	bleq	e839b8 <__bss_end__+0xd3a970>
     1a8:	0b390b3b 	bleq	e42e9c <__bss_end__+0xcf9e54>
     1ac:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     1b0:	16110000 	ldrne	r0, [r1], -r0
     1b4:	3a0e0300 	bcc	380dbc <__bss_end__+0x237d74>
     1b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1bc:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
     1c0:	00000501 	andeq	r0, r0, r1, lsl #10
     1c4:	03003412 	movweq	r3, #1042	; 0x412
     1c8:	3b0b3a0e 	blcc	2cea08 <__bss_end__+0x1859c0>
     1cc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     1d0:	3c193f13 	ldccc	15, cr3, [r9], {19}
     1d4:	13000019 	movwne	r0, #25
     1d8:	0b0b000f 	bleq	2c021c <__bss_end__+0x1771d4>
     1dc:	00001349 	andeq	r1, r0, r9, asr #6
     1e0:	0b011714 	bleq	45e38 <static_tls+0x1e38>
     1e4:	3b0b3a0b 	blcc	2cea18 <__bss_end__+0x1859d0>
     1e8:	010b390b 	tsteq	fp, fp, lsl #18
     1ec:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     1f0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     1f4:	0b3b0b3a 	bleq	ec2ee4 <__bss_end__+0xd79e9c>
     1f8:	13490b39 	movtne	r0, #39737	; 0x9b39
     1fc:	0f160000 	svceq	0x00160000
     200:	000b0b00 	andeq	r0, fp, r0, lsl #22
     204:	00151700 	andseq	r1, r5, r0, lsl #14
     208:	00001927 	andeq	r1, r0, r7, lsr #18
     20c:	0b011318 	bleq	44e74 <static_tls+0xe74>
     210:	3b0b3a0b 	blcc	2cea44 <__bss_end__+0x1859fc>
     214:	010b390b 	tsteq	fp, fp, lsl #18
     218:	19000013 	stmdbne	r0, {r0, r1, r4}
     21c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     220:	0b3b0b3a 	bleq	ec2f10 <__bss_end__+0xd79ec8>
     224:	13490b39 	movtne	r0, #39737	; 0x9b39
     228:	00000b38 	andeq	r0, r0, r8, lsr fp
     22c:	3f012e1a 	svccc	0x00012e1a
     230:	3a0e0319 	bcc	380e9c <__bss_end__+0x237e54>
     234:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     238:	1119270b 	tstne	r9, fp, lsl #14
     23c:	40061201 	andmi	r1, r6, r1, lsl #4
     240:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     244:	00001301 	andeq	r1, r0, r1, lsl #6
     248:	0300051b 	movweq	r0, #1307	; 0x51b
     24c:	3b0b3a0e 	blcc	2cea8c <__bss_end__+0x185a44>
     250:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     254:	00180213 	andseq	r0, r8, r3, lsl r2
     258:	00261c00 	eoreq	r1, r6, r0, lsl #24
     25c:	01000000 	mrseq	r0, (UNDEF: 0)
     260:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     264:	0e030b13 	vmoveq.32	d3[0], r0
     268:	01110e1b 	tsteq	r1, fp, lsl lr
     26c:	17100612 			; <UNDEFINED> instruction: 0x17100612
     270:	24020000 	strcs	r0, [r2], #-0
     274:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     278:	000e030b 	andeq	r0, lr, fp, lsl #6
     27c:	00240300 	eoreq	r0, r4, r0, lsl #6
     280:	0b3e0b0b 	bleq	f82eb4 <__bss_end__+0xe39e6c>
     284:	00000803 	andeq	r0, r0, r3, lsl #16
     288:	03001604 	movweq	r1, #1540	; 0x604
     28c:	3b0b3a0e 	blcc	2ceacc <__bss_end__+0x185a84>
     290:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     294:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     298:	0e030104 	adfeqs	f0, f3, f4
     29c:	0b0b0b3e 	bleq	2c2f9c <__bss_end__+0x179f54>
     2a0:	0b3a1349 	bleq	e84fcc <__bss_end__+0xd3bf84>
     2a4:	0b390b3b 	bleq	e42f98 <__bss_end__+0xcf9f50>
     2a8:	00001301 	andeq	r1, r0, r1, lsl #6
     2ac:	03002806 	movweq	r2, #2054	; 0x806
     2b0:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     2b4:	00260700 	eoreq	r0, r6, r0, lsl #14
     2b8:	00001349 	andeq	r1, r0, r9, asr #6
     2bc:	03003408 	movweq	r3, #1032	; 0x408
     2c0:	3b0b3a0e 	blcc	2ceb00 <__bss_end__+0x185ab8>
     2c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     2c8:	00180213 	andseq	r0, r8, r3, lsl r2
     2cc:	01010900 	tsteq	r1, r0, lsl #18
     2d0:	13011349 	movwne	r1, #4937	; 0x1349
     2d4:	210a0000 	mrscs	r0, (UNDEF: 10)
     2d8:	2f134900 	svccs	0x00134900
     2dc:	0b00000b 	bleq	310 <errno+0x30c>
     2e0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     2e4:	0b3a0b0b 	bleq	e82f18 <__bss_end__+0xd39ed0>
     2e8:	0b39053b 	bleq	e417dc <__bss_end__+0xcf8794>
     2ec:	00001301 	andeq	r1, r0, r1, lsl #6
     2f0:	03000d0c 	movweq	r0, #3340	; 0xd0c
     2f4:	3b0b3a0e 	blcc	2ceb34 <__bss_end__+0x185aec>
     2f8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     2fc:	000b3813 	andeq	r3, fp, r3, lsl r8
     300:	00160d00 	andseq	r0, r6, r0, lsl #26
     304:	0b3a0e03 	bleq	e83b18 <__bss_end__+0xd3aad0>
     308:	0b39053b 	bleq	e417fc <__bss_end__+0xcf87b4>
     30c:	00001349 	andeq	r1, r0, r9, asr #6
     310:	0301130e 	movweq	r1, #4878	; 0x130e
     314:	3a050b0e 	bcc	142f54 <morecore_area+0xf9f54>
     318:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     31c:	0013010b 	andseq	r0, r3, fp, lsl #2
     320:	000d0f00 	andeq	r0, sp, r0, lsl #30
     324:	0b3a0803 	bleq	e82338 <__bss_end__+0xd392f0>
     328:	0b390b3b 	bleq	e4301c <__bss_end__+0xcf9fd4>
     32c:	0b381349 	bleq	e05058 <__bss_end__+0xcbc010>
     330:	0d100000 	ldceq	0, cr0, [r0, #-0]
     334:	3a0e0300 	bcc	380f3c <__bss_end__+0x237ef4>
     338:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     33c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     340:	11000005 	tstne	r0, r5
     344:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     348:	0b3b0b3a 	bleq	ec3038 <__bss_end__+0xd79ff0>
     34c:	13490b39 	movtne	r0, #39737	; 0x9b39
     350:	00050188 	andeq	r0, r5, r8, lsl #3
     354:	00341200 	eorseq	r1, r4, r0, lsl #4
     358:	0b3a0e03 	bleq	e83b6c <__bss_end__+0xd3ab24>
     35c:	0b390b3b 	bleq	e43050 <__bss_end__+0xcfa008>
     360:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     364:	0000193c 	andeq	r1, r0, ip, lsr r9
     368:	0b000f13 	bleq	3fbc <errno+0x3fb8>
     36c:	0013490b 	andseq	r4, r3, fp, lsl #18
     370:	01171400 	tsteq	r7, r0, lsl #8
     374:	0b3a0b0b 	bleq	e82fa8 <__bss_end__+0xd39f60>
     378:	0b390b3b 	bleq	e4306c <__bss_end__+0xcfa024>
     37c:	00001301 	andeq	r1, r0, r1, lsl #6
     380:	03000d15 	movweq	r0, #3349	; 0xd15
     384:	3b0b3a0e 	blcc	2cebc4 <__bss_end__+0x185b7c>
     388:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     38c:	16000013 			; <UNDEFINED> instruction: 0x16000013
     390:	0b0b000f 	bleq	2c03d4 <__bss_end__+0x17738c>
     394:	15170000 	ldrne	r0, [r7, #-0]
     398:	00192700 	andseq	r2, r9, r0, lsl #14
     39c:	01131800 	tsteq	r3, r0, lsl #16
     3a0:	0b3a0b0b 	bleq	e82fd4 <__bss_end__+0xd39f8c>
     3a4:	0b390b3b 	bleq	e43098 <__bss_end__+0xcfa050>
     3a8:	00001301 	andeq	r1, r0, r1, lsl #6
     3ac:	03000d19 	movweq	r0, #3353	; 0xd19
     3b0:	3b0b3a0e 	blcc	2cebf0 <__bss_end__+0x185ba8>
     3b4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     3b8:	000b3813 	andeq	r3, fp, r3, lsl r8
     3bc:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     3c0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     3c4:	0b3b0b3a 	bleq	ec30b4 <__bss_end__+0xd7a06c>
     3c8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     3cc:	06120111 			; <UNDEFINED> instruction: 0x06120111
     3d0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     3d4:	00130119 	andseq	r0, r3, r9, lsl r1
     3d8:	00051b00 	andeq	r1, r5, r0, lsl #22
     3dc:	0b3a0e03 	bleq	e83bf0 <__bss_end__+0xd3aba8>
     3e0:	0b390b3b 	bleq	e430d4 <__bss_end__+0xcfa08c>
     3e4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     3e8:	151c0000 	ldrne	r0, [ip, #-0]
     3ec:	01134901 	tsteq	r3, r1, lsl #18
     3f0:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     3f4:	00000018 	andeq	r0, r0, r8, lsl r0
     3f8:	01110100 	tsteq	r1, r0, lsl #2
     3fc:	0b130e25 	bleq	4c3c98 <__bss_end__+0x37ac50>
     400:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     404:	06120111 			; <UNDEFINED> instruction: 0x06120111
     408:	00001710 	andeq	r1, r0, r0, lsl r7
     40c:	0b002402 	bleq	941c <errno+0x9418>
     410:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     414:	0300000e 	movweq	r0, #14
     418:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     41c:	0b3b0b3a 	bleq	ec310c <__bss_end__+0xd7a0c4>
     420:	13490b39 	movtne	r0, #39737	; 0x9b39
     424:	24040000 	strcs	r0, [r4], #-0
     428:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     42c:	0008030b 	andeq	r0, r8, fp, lsl #6
     430:	01040500 	tsteq	r4, r0, lsl #10
     434:	0b3e0e03 	bleq	f83c48 <__bss_end__+0xe3ac00>
     438:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     43c:	0b3b0b3a 	bleq	ec312c <__bss_end__+0xd7a0e4>
     440:	13010b39 	movwne	r0, #6969	; 0x1b39
     444:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     448:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     44c:	0700000b 	streq	r0, [r0, -fp]
     450:	13490026 	movtne	r0, #36902	; 0x9026
     454:	34080000 	strcc	r0, [r8], #-0
     458:	3a0e0300 	bcc	381060 <__bss_end__+0x238018>
     45c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     460:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     464:	09000018 	stmdbeq	r0, {r3, r4}
     468:	13490101 	movtne	r0, #37121	; 0x9101
     46c:	00001301 	andeq	r1, r0, r1, lsl #6
     470:	4900210a 	stmdbmi	r0, {r1, r3, r8, sp}
     474:	000b2f13 	andeq	r2, fp, r3, lsl pc
     478:	01130b00 	tsteq	r3, r0, lsl #22
     47c:	0b0b0e03 	bleq	2c3c90 <__bss_end__+0x17ac48>
     480:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     484:	13010b39 	movwne	r0, #6969	; 0x1b39
     488:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     48c:	3a0e0300 	bcc	381094 <__bss_end__+0x23804c>
     490:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     494:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     498:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     49c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     4a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4a4:	13490b39 	movtne	r0, #39737	; 0x9b39
     4a8:	130e0000 	movwne	r0, #57344	; 0xe000
     4ac:	0b0e0301 	bleq	3810b8 <__bss_end__+0x238070>
     4b0:	3b0b3a05 	blcc	2ceccc <__bss_end__+0x185c84>
     4b4:	010b390b 	tsteq	fp, fp, lsl #18
     4b8:	0f000013 	svceq	0x00000013
     4bc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     4c0:	0b3b0b3a 	bleq	ec31b0 <__bss_end__+0xd7a168>
     4c4:	13490b39 	movtne	r0, #39737	; 0x9b39
     4c8:	00000b38 	andeq	r0, r0, r8, lsr fp
     4cc:	03000d10 	movweq	r0, #3344	; 0xd10
     4d0:	3b0b3a0e 	blcc	2ced10 <__bss_end__+0x185cc8>
     4d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     4d8:	00053813 	andeq	r3, r5, r3, lsl r8
     4dc:	00161100 	andseq	r1, r6, r0, lsl #2
     4e0:	0b3a0e03 	bleq	e83cf4 <__bss_end__+0xd3acac>
     4e4:	0b390b3b 	bleq	e431d8 <__bss_end__+0xcfa190>
     4e8:	01881349 	orreq	r1, r8, r9, asr #6
     4ec:	12000005 	andne	r0, r0, #5
     4f0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     4f4:	0b3b0b3a 	bleq	ec31e4 <__bss_end__+0xd7a19c>
     4f8:	13490b39 	movtne	r0, #39737	; 0x9b39
     4fc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     500:	0f130000 	svceq	0x00130000
     504:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     508:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     50c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     510:	0b3a0b0b 	bleq	e83144 <__bss_end__+0xd3a0fc>
     514:	0b390b3b 	bleq	e43208 <__bss_end__+0xcfa1c0>
     518:	00001301 	andeq	r1, r0, r1, lsl #6
     51c:	03000d15 	movweq	r0, #3349	; 0xd15
     520:	3b0b3a0e 	blcc	2ced60 <__bss_end__+0x185d18>
     524:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     528:	000b3813 	andeq	r3, fp, r3, lsl r8
     52c:	01171600 	tsteq	r7, r0, lsl #12
     530:	0b3a0b0b 	bleq	e83164 <__bss_end__+0xd3a11c>
     534:	0b390b3b 	bleq	e43228 <__bss_end__+0xcfa1e0>
     538:	00001301 	andeq	r1, r0, r1, lsl #6
     53c:	03000d17 	movweq	r0, #3351	; 0xd17
     540:	3b0b3a0e 	blcc	2ced80 <__bss_end__+0x185d38>
     544:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     548:	18000013 	stmdane	r0, {r0, r1, r4}
     54c:	0b0b000f 	bleq	2c0590 <__bss_end__+0x177548>
     550:	15190000 	ldrne	r0, [r9, #-0]
     554:	00192700 	andseq	r2, r9, r0, lsl #14
     558:	01131a00 	tsteq	r3, r0, lsl #20
     55c:	0b3a0b0b 	bleq	e83190 <__bss_end__+0xd3a148>
     560:	0b390b3b 	bleq	e43254 <__bss_end__+0xcfa20c>
     564:	00001301 	andeq	r1, r0, r1, lsl #6
     568:	0000211b 	andeq	r2, r0, fp, lsl r1
     56c:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
     570:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     574:	0b3b0b3a 	bleq	ec3264 <__bss_end__+0xd7a21c>
     578:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     57c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     580:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     584:	00130119 	andseq	r0, r3, r9, lsl r1
     588:	00051d00 	andeq	r1, r5, r0, lsl #26
     58c:	0b3a0e03 	bleq	e83da0 <__bss_end__+0xd3ad58>
     590:	0b390b3b 	bleq	e43284 <__bss_end__+0xcfa23c>
     594:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     598:	011e0000 	tsteq	lr, r0
     59c:	00134901 	andseq	r4, r3, r1, lsl #18
     5a0:	11010000 	mrsne	r0, (UNDEF: 1)
     5a4:	130e2501 	movwne	r2, #58625	; 0xe501
     5a8:	1b0e030b 	blne	3811dc <__bss_end__+0x238194>
     5ac:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     5b0:	00171006 	andseq	r1, r7, r6
     5b4:	00240200 	eoreq	r0, r4, r0, lsl #4
     5b8:	0b3e0b0b 	bleq	f831ec <__bss_end__+0xe3a1a4>
     5bc:	00000e03 	andeq	r0, r0, r3, lsl #28
     5c0:	0b002403 	bleq	95d4 <errno+0x95d0>
     5c4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     5c8:	04000008 	streq	r0, [r0], #-8
     5cc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     5d0:	0b3b0b3a 	bleq	ec32c0 <__bss_end__+0xd7a278>
     5d4:	13490b39 	movtne	r0, #39737	; 0x9b39
     5d8:	04050000 	streq	r0, [r5], #-0
     5dc:	0b0b3e01 	bleq	2cfde8 <__bss_end__+0x186da0>
     5e0:	3a13490b 	bcc	4d2a14 <__bss_end__+0x3899cc>
     5e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5e8:	0013010b 	andseq	r0, r3, fp, lsl #2
     5ec:	00280600 	eoreq	r0, r8, r0, lsl #12
     5f0:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     5f4:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
     5f8:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     5fc:	08000006 	stmdaeq	r0, {r1, r2}
     600:	0e030104 	adfeqs	f0, f3, f4
     604:	0b0b0b3e 	bleq	2c3304 <__bss_end__+0x17a2bc>
     608:	0b3a1349 	bleq	e85334 <__bss_end__+0xd3c2ec>
     60c:	0b390b3b 	bleq	e43300 <__bss_end__+0xcfa2b8>
     610:	00001301 	andeq	r1, r0, r1, lsl #6
     614:	03002809 	movweq	r2, #2057	; 0x809
     618:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     61c:	00260a00 	eoreq	r0, r6, r0, lsl #20
     620:	00001349 	andeq	r1, r0, r9, asr #6
     624:	0300340b 	movweq	r3, #1035	; 0x40b
     628:	3b0b3a0e 	blcc	2cee68 <__bss_end__+0x185e20>
     62c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     630:	00180213 	andseq	r0, r8, r3, lsl r2
     634:	01010c00 	tsteq	r1, r0, lsl #24
     638:	13011349 	movwne	r1, #4937	; 0x1349
     63c:	210d0000 	mrscs	r0, (UNDEF: 13)
     640:	2f134900 	svccs	0x00134900
     644:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     648:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     64c:	0b3a0b0b 	bleq	e83280 <__bss_end__+0xd3a238>
     650:	0b39053b 	bleq	e41b44 <__bss_end__+0xcf8afc>
     654:	00001301 	andeq	r1, r0, r1, lsl #6
     658:	03000d0f 	movweq	r0, #3343	; 0xd0f
     65c:	3b0b3a0e 	blcc	2cee9c <__bss_end__+0x185e54>
     660:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     664:	000b3813 	andeq	r3, fp, r3, lsl r8
     668:	00161000 	andseq	r1, r6, r0
     66c:	0b3a0e03 	bleq	e83e80 <__bss_end__+0xd3ae38>
     670:	0b39053b 	bleq	e41b64 <__bss_end__+0xcf8b1c>
     674:	00001349 	andeq	r1, r0, r9, asr #6
     678:	03011311 	movweq	r1, #4881	; 0x1311
     67c:	3a050b0e 	bcc	1432bc <morecore_area+0xfa2bc>
     680:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     684:	0013010b 	andseq	r0, r3, fp, lsl #2
     688:	000d1200 	andeq	r1, sp, r0, lsl #4
     68c:	0b3a0803 	bleq	e826a0 <__bss_end__+0xd39658>
     690:	0b390b3b 	bleq	e43384 <__bss_end__+0xcfa33c>
     694:	0b381349 	bleq	e053c0 <__bss_end__+0xcbc378>
     698:	0d130000 	ldceq	0, cr0, [r3, #-0]
     69c:	3a0e0300 	bcc	3812a4 <__bss_end__+0x23825c>
     6a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6a4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     6a8:	14000005 	strne	r0, [r0], #-5
     6ac:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     6b0:	0b3b0b3a 	bleq	ec33a0 <__bss_end__+0xd7a358>
     6b4:	13490b39 	movtne	r0, #39737	; 0x9b39
     6b8:	00050188 	andeq	r0, r5, r8, lsl #3
     6bc:	00341500 	eorseq	r1, r4, r0, lsl #10
     6c0:	0b3a0e03 	bleq	e83ed4 <__bss_end__+0xd3ae8c>
     6c4:	0b390b3b 	bleq	e433b8 <__bss_end__+0xcfa370>
     6c8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     6cc:	0000193c 	andeq	r1, r0, ip, lsr r9
     6d0:	0b000f16 	bleq	4330 <errno+0x432c>
     6d4:	0013490b 	andseq	r4, r3, fp, lsl #18
     6d8:	01131700 	tsteq	r3, r0, lsl #14
     6dc:	0b0b0e03 	bleq	2c3ef0 <__bss_end__+0x17aea8>
     6e0:	0b3b0b3a 	bleq	ec33d0 <__bss_end__+0xd7a388>
     6e4:	13010b39 	movwne	r0, #6969	; 0x1b39
     6e8:	0d180000 	ldceq	0, cr0, [r8, #-0]
     6ec:	3a0e0300 	bcc	3812f4 <__bss_end__+0x2382ac>
     6f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     6f8:	1900000b 	stmdbne	r0, {r0, r1, r3}
     6fc:	0b0b0117 	bleq	2c0b60 <__bss_end__+0x177b18>
     700:	0b3b0b3a 	bleq	ec33f0 <__bss_end__+0xd7a3a8>
     704:	13010b39 	movwne	r0, #6969	; 0x1b39
     708:	0d1a0000 	ldceq	0, cr0, [sl, #-0]
     70c:	3a0e0300 	bcc	381314 <__bss_end__+0x2382cc>
     710:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     714:	0013490b 	andseq	r4, r3, fp, lsl #18
     718:	000f1b00 	andeq	r1, pc, r0, lsl #22
     71c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     720:	2700151c 	smladcs	r0, ip, r5, r1
     724:	1d000019 	stcne	0, cr0, [r0, #-100]	; 0xffffff9c
     728:	0b0b0113 	bleq	2c0b7c <__bss_end__+0x177b34>
     72c:	0b3b0b3a 	bleq	ec341c <__bss_end__+0xd7a3d4>
     730:	13010b39 	movwne	r0, #6969	; 0x1b39
     734:	151e0000 	ldrne	r0, [lr, #-0]
     738:	01192701 	tsteq	r9, r1, lsl #14
     73c:	1f000013 	svcne	0x00000013
     740:	13490005 	movtne	r0, #36869	; 0x9005
     744:	15200000 	strne	r0, [r0, #-0]!
     748:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
     74c:	00130113 	andseq	r0, r3, r3, lsl r1
     750:	00212100 	eoreq	r2, r1, r0, lsl #2
     754:	052f1349 	streq	r1, [pc, #-841]!	; 413 <errno+0x40f>
     758:	34220000 	strtcc	r0, [r2], #-0
     75c:	3a0e0300 	bcc	381364 <__bss_end__+0x23831c>
     760:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     764:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
     768:	18020b01 	stmdane	r2, {r0, r8, r9, fp}
     76c:	34230000 	strtcc	r0, [r3], #-0
     770:	3a080300 	bcc	201378 <__bss_end__+0xb8330>
     774:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     778:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     77c:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
     780:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     784:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     788:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     78c:	01111349 	tsteq	r1, r9, asr #6
     790:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     794:	00194296 	mulseq	r9, r6, r2
     798:	002e2500 	eoreq	r2, lr, r0, lsl #10
     79c:	0b3a0e03 	bleq	e83fb0 <__bss_end__+0xd3af68>
     7a0:	0b39053b 	bleq	e41c94 <__bss_end__+0xcf8c4c>
     7a4:	01111927 	tsteq	r1, r7, lsr #18
     7a8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     7ac:	00194296 	mulseq	r9, r6, r2
     7b0:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
     7b4:	0b3a0e03 	bleq	e83fc8 <__bss_end__+0xd3af80>
     7b8:	0b39053b 	bleq	e41cac <__bss_end__+0xcf8c64>
     7bc:	13491927 	movtne	r1, #39207	; 0x9927
     7c0:	06120111 			; <UNDEFINED> instruction: 0x06120111
     7c4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     7c8:	00130119 	andseq	r0, r3, r9, lsl r1
     7cc:	00052700 	andeq	r2, r5, r0, lsl #14
     7d0:	0b3a0e03 	bleq	e83fe4 <__bss_end__+0xd3af9c>
     7d4:	0b39053b 	bleq	e41cc8 <__bss_end__+0xcf8c80>
     7d8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     7dc:	0b280000 	bleq	a007e4 <__bss_end__+0x8b779c>
     7e0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     7e4:	00130106 	andseq	r0, r3, r6, lsl #2
     7e8:	00342900 	eorseq	r2, r4, r0, lsl #18
     7ec:	0b3a0803 	bleq	e82800 <__bss_end__+0xd397b8>
     7f0:	0b39053b 	bleq	e41ce4 <__bss_end__+0xcf8c9c>
     7f4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     7f8:	0b2a0000 	bleq	a80800 <__bss_end__+0x9377b8>
     7fc:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     800:	2b000006 	blcs	820 <errno+0x81c>
     804:	0e03012e 	adfeqsp	f0, f3, #0.5
     808:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     80c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     810:	01111349 	tsteq	r1, r9, asr #6
     814:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     818:	01194297 			; <UNDEFINED> instruction: 0x01194297
     81c:	2c000013 	stccs	0, cr0, [r0], {19}
     820:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     824:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     828:	13490b39 	movtne	r0, #39737	; 0x9b39
     82c:	00001802 	andeq	r1, r0, r2, lsl #16
     830:	03012e2d 	movweq	r2, #7725	; 0x1e2d
     834:	3b0b3a0e 	blcc	2cf074 <__bss_end__+0x18602c>
     838:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     83c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     840:	96184006 	ldrls	r4, [r8], -r6
     844:	13011942 	movwne	r1, #6466	; 0x1942
     848:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
     84c:	3a0e0301 	bcc	381458 <__bss_end__+0x238410>
     850:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     854:	1119270b 	tstne	r9, fp, lsl #14
     858:	40061201 	andmi	r1, r6, r1, lsl #4
     85c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     860:	00001301 	andeq	r1, r0, r1, lsl #6
     864:	55010b2f 	strpl	r0, [r1, #-2863]	; 0xfffff4d1
     868:	30000017 	andcc	r0, r0, r7, lsl r0
     86c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     870:	0b3a0e03 	bleq	e84084 <__bss_end__+0xd3b03c>
     874:	0b390b3b 	bleq	e43568 <__bss_end__+0xcfa520>
     878:	01111927 	tsteq	r1, r7, lsr #18
     87c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     880:	01194296 			; <UNDEFINED> instruction: 0x01194296
     884:	31000013 	tstcc	r0, r3, lsl r0
     888:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     88c:	0b3b0b3a 	bleq	ec357c <__bss_end__+0xd7a534>
     890:	13490b39 	movtne	r0, #39737	; 0x9b39
     894:	00001802 	andeq	r1, r0, r2, lsl #16
     898:	3f012e32 	svccc	0x00012e32
     89c:	3a0e0319 	bcc	381508 <__bss_end__+0x2384c0>
     8a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8a4:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     8a8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     8ac:	96184006 	ldrls	r4, [r8], -r6
     8b0:	13011942 	movwne	r1, #6466	; 0x1942
     8b4:	05330000 	ldreq	r0, [r3, #-0]!
     8b8:	3a080300 	bcc	2014c0 <__bss_end__+0xb8478>
     8bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8c0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     8c4:	34000018 	strcc	r0, [r0], #-24	; 0xffffffe8
     8c8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     8cc:	0b3a0e03 	bleq	e840e0 <__bss_end__+0xd3b098>
     8d0:	0b390b3b 	bleq	e435c4 <__bss_end__+0xcfa57c>
     8d4:	13491927 	movtne	r1, #39207	; 0x9927
     8d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     8dc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     8e0:	00130119 	andseq	r0, r3, r9, lsl r1
     8e4:	002e3500 	eoreq	r3, lr, r0, lsl #10
     8e8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     8ec:	0b3b0b3a 	bleq	ec35dc <__bss_end__+0xd7a594>
     8f0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     8f4:	01111349 	tsteq	r1, r9, asr #6
     8f8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     8fc:	00194297 	mulseq	r9, r7, r2
     900:	002e3600 	eoreq	r3, lr, r0, lsl #12
     904:	0b3a0e03 	bleq	e84118 <__bss_end__+0xd3b0d0>
     908:	0b390b3b 	bleq	e435fc <__bss_end__+0xcfa5b4>
     90c:	13491927 	movtne	r1, #39207	; 0x9927
     910:	06120111 			; <UNDEFINED> instruction: 0x06120111
     914:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     918:	37000019 	smladcc	r0, r9, r0, r0
     91c:	0e03012e 	adfeqsp	f0, f3, #0.5
     920:	0b3b0b3a 	bleq	ec3610 <__bss_end__+0xd7a5c8>
     924:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     928:	06120111 			; <UNDEFINED> instruction: 0x06120111
     92c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     930:	00130119 	andseq	r0, r3, r9, lsl r1
     934:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
     938:	0b3a0e03 	bleq	e8414c <__bss_end__+0xd3b104>
     93c:	0b390b3b 	bleq	e43630 <__bss_end__+0xcfa5e8>
     940:	01111927 	tsteq	r1, r7, lsr #18
     944:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     948:	01194297 			; <UNDEFINED> instruction: 0x01194297
     94c:	39000013 	stmdbcc	r0, {r0, r1, r4}
     950:	0e03012e 	adfeqsp	f0, f3, #0.5
     954:	0b3b0b3a 	bleq	ec3644 <__bss_end__+0xd7a5fc>
     958:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     95c:	01111349 	tsteq	r1, r9, asr #6
     960:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     964:	01194297 			; <UNDEFINED> instruction: 0x01194297
     968:	3a000013 	bcc	9bc <errno+0x9b8>
     96c:	08030005 	stmdaeq	r3, {r0, r2}
     970:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     974:	13490b39 	movtne	r0, #39737	; 0x9b39
     978:	00001802 	andeq	r1, r0, r2, lsl #16
     97c:	03002e3b 	movweq	r2, #3643	; 0xe3b
     980:	3b0b3a0e 	blcc	2cf1c0 <__bss_end__+0x186178>
     984:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     988:	11134919 	tstne	r3, r9, lsl r9
     98c:	40061201 	andmi	r1, r6, r1, lsl #4
     990:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     994:	01000000 	mrseq	r0, (UNDEF: 0)
     998:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     99c:	0e030b13 	vmoveq.32	d3[0], r0
     9a0:	01110e1b 	tsteq	r1, fp, lsl lr
     9a4:	17100612 			; <UNDEFINED> instruction: 0x17100612
     9a8:	16020000 	strne	r0, [r2], -r0
     9ac:	3a0e0300 	bcc	3815b4 <__bss_end__+0x23856c>
     9b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9b4:	0013490b 	andseq	r4, r3, fp, lsl #18
     9b8:	000f0300 	andeq	r0, pc, r0, lsl #6
     9bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     9c0:	15040000 	strne	r0, [r4, #-0]
     9c4:	00192700 	andseq	r2, r9, r0, lsl #14
     9c8:	01010500 	tsteq	r1, r0, lsl #10
     9cc:	13011349 	movwne	r1, #4937	; 0x1349
     9d0:	21060000 	mrscs	r0, (UNDEF: 6)
     9d4:	07000000 	streq	r0, [r0, -r0]
     9d8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     9dc:	0b3b0b3a 	bleq	ec36cc <__bss_end__+0xd7a684>
     9e0:	13490b39 	movtne	r0, #39737	; 0x9b39
     9e4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     9e8:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
     9ec:	03193f01 	tsteq	r9, #1, 30
     9f0:	3b0b3a0e 	blcc	2cf230 <__bss_end__+0x1861e8>
     9f4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     9f8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     9fc:	96184006 	ldrls	r4, [r8], -r6
     a00:	13011942 	movwne	r1, #6466	; 0x1942
     a04:	34090000 	strcc	r0, [r9], #-0
     a08:	3a0e0300 	bcc	381610 <__bss_end__+0x2385c8>
     a0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a10:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a14:	0a000018 	beq	a7c <errno+0xa78>
     a18:	0111010b 	tsteq	r1, fp, lsl #2
     a1c:	00000612 	andeq	r0, r0, r2, lsl r6
     a20:	0300340b 	movweq	r3, #1035	; 0x40b
     a24:	3b0b3a08 	blcc	2cf24c <__bss_end__+0x186204>
     a28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a2c:	00180213 	andseq	r0, r8, r3, lsl r2
     a30:	00240c00 	eoreq	r0, r4, r0, lsl #24
     a34:	0b3e0b0b 	bleq	f83668 <__bss_end__+0xe3a620>
     a38:	00000803 	andeq	r0, r0, r3, lsl #16
     a3c:	3f012e0d 	svccc	0x00012e0d
     a40:	3a0e0319 	bcc	3816ac <__bss_end__+0x238664>
     a44:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a48:	1119270b 	tstne	r9, fp, lsl #14
     a4c:	40061201 	andmi	r1, r6, r1, lsl #4
     a50:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     a54:	0b0e0000 	bleq	380a5c <__bss_end__+0x237a14>
     a58:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     a5c:	00130106 	andseq	r0, r3, r6, lsl #2
     a60:	11010000 	mrsne	r0, (UNDEF: 1)
     a64:	130e2501 	movwne	r2, #58625	; 0xe501
     a68:	1b0e030b 	blne	38169c <__bss_end__+0x238654>
     a6c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     a70:	00171006 	andseq	r1, r7, r6
     a74:	00240200 	eoreq	r0, r4, r0, lsl #4
     a78:	0b3e0b0b 	bleq	f836ac <__bss_end__+0xe3a664>
     a7c:	00000e03 	andeq	r0, r0, r3, lsl #28
     a80:	0b002403 	bleq	9a94 <errno+0x9a90>
     a84:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     a88:	04000008 	streq	r0, [r0], #-8
     a8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     a90:	0b3b0b3a 	bleq	ec3780 <__bss_end__+0xd7a738>
     a94:	13490b39 	movtne	r0, #39737	; 0x9b39
     a98:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
     a9c:	03193f01 	tsteq	r9, #1, 30
     aa0:	3b0b3a0e 	blcc	2cf2e0 <__bss_end__+0x186298>
     aa4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     aa8:	11134919 	tstne	r3, r9, lsl r9
     aac:	40061201 	andmi	r1, r6, r1, lsl #4
     ab0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     ab4:	00001301 	andeq	r1, r0, r1, lsl #6
     ab8:	03000506 	movweq	r0, #1286	; 0x506
     abc:	3b0b3a0e 	blcc	2cf2fc <__bss_end__+0x1862b4>
     ac0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ac4:	00180213 	andseq	r0, r8, r3, lsl r2
     ac8:	00050700 	andeq	r0, r5, r0, lsl #14
     acc:	0b3a0803 	bleq	e82ae0 <__bss_end__+0xd39a98>
     ad0:	0b390b3b 	bleq	e437c4 <__bss_end__+0xcfa77c>
     ad4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     ad8:	34080000 	strcc	r0, [r8], #-0
     adc:	3a080300 	bcc	2016e4 <__bss_end__+0xb869c>
     ae0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ae4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ae8:	09000018 	stmdbeq	r0, {r3, r4}
     aec:	08030016 	stmdaeq	r3, {r1, r2, r4}
     af0:	0b3b0b3a 	bleq	ec37e0 <__bss_end__+0xd7a798>
     af4:	13490b39 	movtne	r0, #39737	; 0x9b39
     af8:	0f0a0000 	svceq	0x000a0000
     afc:	000b0b00 	andeq	r0, fp, r0, lsl #22
     b00:	000f0b00 	andeq	r0, pc, r0, lsl #22
     b04:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     b08:	01000000 	mrseq	r0, (UNDEF: 0)
     b0c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     b10:	0e030b13 	vmoveq.32	d3[0], r0
     b14:	01110e1b 	tsteq	r1, fp, lsl lr
     b18:	17100612 			; <UNDEFINED> instruction: 0x17100612
     b1c:	24020000 	strcs	r0, [r2], #-0
     b20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     b24:	000e030b 	andeq	r0, lr, fp, lsl #6
     b28:	00240300 	eoreq	r0, r4, r0, lsl #6
     b2c:	0b3e0b0b 	bleq	f83760 <__bss_end__+0xe3a718>
     b30:	00000803 	andeq	r0, r0, r3, lsl #16
     b34:	49002604 	stmdbmi	r0, {r2, r9, sl, sp}
     b38:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     b3c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     b40:	0b3b0b3a 	bleq	ec3830 <__bss_end__+0xd7a7e8>
     b44:	13490b39 	movtne	r0, #39737	; 0x9b39
     b48:	2e060000 	cdpcs	0, 0, cr0, cr6, cr0, {0}
     b4c:	03193f01 	tsteq	r9, #1, 30
     b50:	3b0b3a0e 	blcc	2cf390 <__bss_end__+0x186348>
     b54:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     b58:	11134919 	tstne	r3, r9, lsl r9
     b5c:	40061201 	andmi	r1, r6, r1, lsl #4
     b60:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     b64:	00001301 	andeq	r1, r0, r1, lsl #6
     b68:	03000507 	movweq	r0, #1287	; 0x507
     b6c:	3b0b3a0e 	blcc	2cf3ac <__bss_end__+0x186364>
     b70:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     b74:	00180213 	andseq	r0, r8, r3, lsl r2
     b78:	00050800 	andeq	r0, r5, r0, lsl #16
     b7c:	0b3a0803 	bleq	e82b90 <__bss_end__+0xd39b48>
     b80:	0b390b3b 	bleq	e43874 <__bss_end__+0xcfa82c>
     b84:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     b88:	34090000 	strcc	r0, [r9], #-0
     b8c:	3a080300 	bcc	201794 <__bss_end__+0xb874c>
     b90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b94:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     b98:	0a000018 	beq	c00 <errno+0xbfc>
     b9c:	08030016 	stmdaeq	r3, {r1, r2, r4}
     ba0:	0b3b0b3a 	bleq	ec3890 <__bss_end__+0xd7a848>
     ba4:	13490b39 	movtne	r0, #39737	; 0x9b39
     ba8:	0f0b0000 	svceq	0x000b0000
     bac:	000b0b00 	andeq	r0, fp, r0, lsl #22
     bb0:	00370c00 	eorseq	r0, r7, r0, lsl #24
     bb4:	00001349 	andeq	r1, r0, r9, asr #6
     bb8:	0b000f0d 	bleq	47f4 <errno+0x47f0>
     bbc:	0013490b 	andseq	r4, r3, fp, lsl #18
     bc0:	00260e00 	eoreq	r0, r6, r0, lsl #28
     bc4:	01000000 	mrseq	r0, (UNDEF: 0)
     bc8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     bcc:	0e030b13 	vmoveq.32	d3[0], r0
     bd0:	01110e1b 	tsteq	r1, fp, lsl lr
     bd4:	17100612 			; <UNDEFINED> instruction: 0x17100612
     bd8:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
     bdc:	03193f01 	tsteq	r9, #1, 30
     be0:	3b0b3a0e 	blcc	2cf420 <__bss_end__+0x1863d8>
     be4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     be8:	11134919 	tstne	r3, r9, lsl r9
     bec:	40061201 	andmi	r1, r6, r1, lsl #4
     bf0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     bf4:	00001301 	andeq	r1, r0, r1, lsl #6
     bf8:	03000503 	movweq	r0, #1283	; 0x503
     bfc:	3b0b3a0e 	blcc	2cf43c <__bss_end__+0x1863f4>
     c00:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c04:	00180213 	andseq	r0, r8, r3, lsl r2
     c08:	00180400 	andseq	r0, r8, r0, lsl #8
     c0c:	24050000 	strcs	r0, [r5], #-0
     c10:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     c14:	000e030b 	andeq	r0, lr, fp, lsl #6
     c18:	11010000 	mrsne	r0, (UNDEF: 1)
     c1c:	11061000 	mrsne	r1, (UNDEF: 6)
     c20:	03011201 	movweq	r1, #4609	; 0x1201
     c24:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
     c28:	0005130e 	andeq	r1, r5, lr, lsl #6
     c2c:	11010000 	mrsne	r0, (UNDEF: 1)
     c30:	130e2501 	movwne	r2, #58625	; 0xe501
     c34:	1b0e030b 	blne	381868 <__bss_end__+0x238820>
     c38:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     c3c:	00171006 	andseq	r1, r7, r6
     c40:	00240200 	eoreq	r0, r4, r0, lsl #4
     c44:	0b3e0b0b 	bleq	f83878 <__bss_end__+0xe3a830>
     c48:	00000e03 	andeq	r0, r0, r3, lsl #28
     c4c:	0b002403 	bleq	9c60 <errno+0x9c5c>
     c50:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     c54:	04000008 	streq	r0, [r0], #-8
     c58:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     c5c:	0b3b0b3a 	bleq	ec394c <__bss_end__+0xd7a904>
     c60:	13490b39 	movtne	r0, #39737	; 0x9b39
     c64:	04050000 	streq	r0, [r5], #-0
     c68:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
     c6c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     c70:	3b0b3a13 	blcc	2cf4c4 <__bss_end__+0x18647c>
     c74:	010b390b 	tsteq	fp, fp, lsl #18
     c78:	06000013 			; <UNDEFINED> instruction: 0x06000013
     c7c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     c80:	00000b1c 	andeq	r0, r0, ip, lsl fp
     c84:	49002607 	stmdbmi	r0, {r0, r1, r2, r9, sl, sp}
     c88:	08000013 	stmdaeq	r0, {r0, r1, r4}
     c8c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     c90:	0b3b0b3a 	bleq	ec3980 <__bss_end__+0xd7a938>
     c94:	13490b39 	movtne	r0, #39737	; 0x9b39
     c98:	00001802 	andeq	r1, r0, r2, lsl #16
     c9c:	49010109 	stmdbmi	r1, {r0, r3, r8}
     ca0:	00130113 	andseq	r0, r3, r3, lsl r1
     ca4:	00210a00 	eoreq	r0, r1, r0, lsl #20
     ca8:	0b2f1349 	bleq	bc59d4 <__bss_end__+0xa7c98c>
     cac:	130b0000 	movwne	r0, #45056	; 0xb000
     cb0:	0b0e0301 	bleq	3818bc <__bss_end__+0x238874>
     cb4:	3b0b3a0b 	blcc	2cf4e8 <__bss_end__+0x1864a0>
     cb8:	010b3905 	tsteq	fp, r5, lsl #18
     cbc:	0c000013 	stceq	0, cr0, [r0], {19}
     cc0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     cc4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cc8:	13490b39 	movtne	r0, #39737	; 0x9b39
     ccc:	00000b38 	andeq	r0, r0, r8, lsr fp
     cd0:	0300160d 	movweq	r1, #1549	; 0x60d
     cd4:	3b0b3a0e 	blcc	2cf514 <__bss_end__+0x1864cc>
     cd8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     cdc:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     ce0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     ce4:	0b3a050b 	bleq	e82118 <__bss_end__+0xd390d0>
     ce8:	0b390b3b 	bleq	e439dc <__bss_end__+0xcfa994>
     cec:	00001301 	andeq	r1, r0, r1, lsl #6
     cf0:	03000d0f 	movweq	r0, #3343	; 0xd0f
     cf4:	3b0b3a08 	blcc	2cf51c <__bss_end__+0x1864d4>
     cf8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     cfc:	000b3813 	andeq	r3, fp, r3, lsl r8
     d00:	000d1000 	andeq	r1, sp, r0
     d04:	0b3a0e03 	bleq	e84518 <__bss_end__+0xd3b4d0>
     d08:	0b390b3b 	bleq	e439fc <__bss_end__+0xcfa9b4>
     d0c:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     d10:	16110000 	ldrne	r0, [r1], -r0
     d14:	3a0e0300 	bcc	38191c <__bss_end__+0x2388d4>
     d18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d1c:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
     d20:	00000501 	andeq	r0, r0, r1, lsl #10
     d24:	03003412 	movweq	r3, #1042	; 0x412
     d28:	3b0b3a0e 	blcc	2cf568 <__bss_end__+0x186520>
     d2c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     d30:	3c193f13 	ldccc	15, cr3, [r9], {19}
     d34:	13000019 	movwne	r0, #25
     d38:	0b0b000f 	bleq	2c0d7c <__bss_end__+0x177d34>
     d3c:	00001349 	andeq	r1, r0, r9, asr #6
     d40:	3f002e14 	svccc	0x00002e14
     d44:	3a0e0319 	bcc	3819b0 <__bss_end__+0x238968>
     d48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d4c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     d50:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d54:	96184006 	ldrls	r4, [r8], -r6
     d58:	00001942 	andeq	r1, r0, r2, asr #18
     d5c:	0b000f15 	bleq	49b8 <errno+0x49b4>
     d60:	1600000b 	strne	r0, [r0], -fp
     d64:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
     d68:	0b3b0b3a 	bleq	ec3a58 <__bss_end__+0xd7aa10>
     d6c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     d70:	01111349 	tsteq	r1, r9, asr #6
     d74:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     d78:	00194296 	mulseq	r9, r6, r2
     d7c:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     d80:	0b3a0e03 	bleq	e84594 <__bss_end__+0xd3b54c>
     d84:	0b390b3b 	bleq	e43a78 <__bss_end__+0xcfaa30>
     d88:	13491927 	movtne	r1, #39207	; 0x9927
     d8c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     d90:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     d94:	18000019 	stmdane	r0, {r0, r3, r4}
     d98:	08030034 	stmdaeq	r3, {r2, r4, r5}
     d9c:	0b3b0b3a 	bleq	ec3a8c <__bss_end__+0xd7aa44>
     da0:	13490b39 	movtne	r0, #39737	; 0x9b39
     da4:	00001802 	andeq	r1, r0, r2, lsl #16
     da8:	01110100 	tsteq	r1, r0, lsl #2
     dac:	0b130e25 	bleq	4c4648 <__bss_end__+0x37b600>
     db0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     db4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     db8:	00001710 	andeq	r1, r0, r0, lsl r7
     dbc:	0b002402 	bleq	9dcc <errno+0x9dc8>
     dc0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     dc4:	0300000e 	movweq	r0, #14
     dc8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     dcc:	0b3b0b3a 	bleq	ec3abc <__bss_end__+0xd7aa74>
     dd0:	13490b39 	movtne	r0, #39737	; 0x9b39
     dd4:	24040000 	strcs	r0, [r4], #-0
     dd8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     ddc:	0008030b 	andeq	r0, r8, fp, lsl #6
     de0:	01040500 	tsteq	r4, r0, lsl #10
     de4:	0b3e0e03 	bleq	f845f8 <__bss_end__+0xe3b5b0>
     de8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     dec:	0b3b0b3a 	bleq	ec3adc <__bss_end__+0xd7aa94>
     df0:	13010b39 	movwne	r0, #6969	; 0x1b39
     df4:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     df8:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     dfc:	0700000b 	streq	r0, [r0, -fp]
     e00:	13490026 	movtne	r0, #36902	; 0x9026
     e04:	34080000 	strcc	r0, [r8], #-0
     e08:	3a0e0300 	bcc	381a10 <__bss_end__+0x2389c8>
     e0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e10:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e14:	09000018 	stmdbeq	r0, {r3, r4}
     e18:	13490101 	movtne	r0, #37121	; 0x9101
     e1c:	00001301 	andeq	r1, r0, r1, lsl #6
     e20:	4900210a 	stmdbmi	r0, {r1, r3, r8, sp}
     e24:	000b2f13 	andeq	r2, fp, r3, lsl pc
     e28:	01130b00 	tsteq	r3, r0, lsl #22
     e2c:	0b0b0e03 	bleq	2c4640 <__bss_end__+0x17b5f8>
     e30:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e34:	13010b39 	movwne	r0, #6969	; 0x1b39
     e38:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     e3c:	3a0e0300 	bcc	381a44 <__bss_end__+0x2389fc>
     e40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e44:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e48:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     e4c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     e50:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e54:	13490b39 	movtne	r0, #39737	; 0x9b39
     e58:	130e0000 	movwne	r0, #57344	; 0xe000
     e5c:	0b0e0301 	bleq	381a68 <__bss_end__+0x238a20>
     e60:	3b0b3a05 	blcc	2cf67c <__bss_end__+0x186634>
     e64:	010b390b 	tsteq	fp, fp, lsl #18
     e68:	0f000013 	svceq	0x00000013
     e6c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e70:	0b3b0b3a 	bleq	ec3b60 <__bss_end__+0xd7ab18>
     e74:	13490b39 	movtne	r0, #39737	; 0x9b39
     e78:	00000b38 	andeq	r0, r0, r8, lsr fp
     e7c:	03000d10 	movweq	r0, #3344	; 0xd10
     e80:	3b0b3a0e 	blcc	2cf6c0 <__bss_end__+0x186678>
     e84:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e88:	00053813 	andeq	r3, r5, r3, lsl r8
     e8c:	00161100 	andseq	r1, r6, r0, lsl #2
     e90:	0b3a0e03 	bleq	e846a4 <__bss_end__+0xd3b65c>
     e94:	0b390b3b 	bleq	e43b88 <__bss_end__+0xcfab40>
     e98:	01881349 	orreq	r1, r8, r9, asr #6
     e9c:	12000005 	andne	r0, r0, #5
     ea0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     ea4:	0b3b0b3a 	bleq	ec3b94 <__bss_end__+0xd7ab4c>
     ea8:	13490b39 	movtne	r0, #39737	; 0x9b39
     eac:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     eb0:	0f130000 	svceq	0x00130000
     eb4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     eb8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     ebc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     ec0:	0b3a0b0b 	bleq	e83af4 <__bss_end__+0xd3aaac>
     ec4:	0b390b3b 	bleq	e43bb8 <__bss_end__+0xcfab70>
     ec8:	00001301 	andeq	r1, r0, r1, lsl #6
     ecc:	03000d15 	movweq	r0, #3349	; 0xd15
     ed0:	3b0b3a0e 	blcc	2cf710 <__bss_end__+0x1866c8>
     ed4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ed8:	000b3813 	andeq	r3, fp, r3, lsl r8
     edc:	00341600 	eorseq	r1, r4, r0, lsl #12
     ee0:	0b3a1347 	bleq	e85c04 <__bss_end__+0xd3cbbc>
     ee4:	0b390b3b 	bleq	e43bd8 <__bss_end__+0xcfab90>
     ee8:	00001802 	andeq	r1, r0, r2, lsl #16
     eec:	03003417 	movweq	r3, #1047	; 0x417
     ef0:	3b0b3a0e 	blcc	2cf730 <__bss_end__+0x1866e8>
     ef4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     ef8:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     efc:	18000018 	stmdane	r0, {r3, r4}
     f00:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     f04:	0b3a0e03 	bleq	e84718 <__bss_end__+0xd3b6d0>
     f08:	0b390b3b 	bleq	e43bfc <__bss_end__+0xcfabb4>
     f0c:	13491927 	movtne	r1, #39207	; 0x9927
     f10:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f14:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     f18:	19000019 	stmdbne	r0, {r0, r3, r4}
     f1c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     f20:	0b3a0e03 	bleq	e84734 <__bss_end__+0xd3b6ec>
     f24:	0b390b3b 	bleq	e43c18 <__bss_end__+0xcfabd0>
     f28:	01111927 	tsteq	r1, r7, lsr #18
     f2c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     f30:	00194297 	mulseq	r9, r7, r2
     f34:	00051a00 	andeq	r1, r5, r0, lsl #20
     f38:	0b3a0803 	bleq	e82f4c <__bss_end__+0xd39f04>
     f3c:	0b390b3b 	bleq	e43c30 <__bss_end__+0xcfabe8>
     f40:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     f44:	01000000 	mrseq	r0, (UNDEF: 0)
     f48:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     f4c:	0e030b13 	vmoveq.32	d3[0], r0
     f50:	01110e1b 	tsteq	r1, fp, lsl lr
     f54:	17100612 			; <UNDEFINED> instruction: 0x17100612
     f58:	24020000 	strcs	r0, [r2], #-0
     f5c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     f60:	000e030b 	andeq	r0, lr, fp, lsl #6
     f64:	00240300 	eoreq	r0, r4, r0, lsl #6
     f68:	0b3e0b0b 	bleq	f83b9c <__bss_end__+0xe3ab54>
     f6c:	00000803 	andeq	r0, r0, r3, lsl #16
     f70:	03001604 	movweq	r1, #1540	; 0x604
     f74:	3b0b3a0e 	blcc	2cf7b4 <__bss_end__+0x18676c>
     f78:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     f7c:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     f80:	0b3e0104 	bleq	f81398 <__bss_end__+0xe38350>
     f84:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     f88:	0b3b0b3a 	bleq	ec3c78 <__bss_end__+0xd7ac30>
     f8c:	13010b39 	movwne	r0, #6969	; 0x1b39
     f90:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     f94:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     f98:	0700000d 	streq	r0, [r0, -sp]
     f9c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     fa0:	0000061c 	andeq	r0, r0, ip, lsl r6
     fa4:	03010408 	movweq	r0, #5128	; 0x1408
     fa8:	0b0b3e0e 	bleq	2d07e8 <__bss_end__+0x1877a0>
     fac:	3a13490b 	bcc	4d33e0 <__bss_end__+0x38a398>
     fb0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     fb4:	0013010b 	andseq	r0, r3, fp, lsl #2
     fb8:	00280900 	eoreq	r0, r8, r0, lsl #18
     fbc:	0b1c0e03 	bleq	7047d0 <__bss_end__+0x5bb788>
     fc0:	260a0000 	strcs	r0, [sl], -r0
     fc4:	00134900 	andseq	r4, r3, r0, lsl #18
     fc8:	00340b00 	eorseq	r0, r4, r0, lsl #22
     fcc:	0b3a0e03 	bleq	e847e0 <__bss_end__+0xd3b798>
     fd0:	0b390b3b 	bleq	e43cc4 <__bss_end__+0xcfac7c>
     fd4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     fd8:	010c0000 	mrseq	r0, (UNDEF: 12)
     fdc:	01134901 	tsteq	r3, r1, lsl #18
     fe0:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     fe4:	13490021 	movtne	r0, #36897	; 0x9021
     fe8:	00000b2f 	andeq	r0, r0, pc, lsr #22
     fec:	0301130e 	movweq	r1, #4878	; 0x130e
     ff0:	3a0b0b0e 	bcc	2c3c30 <__bss_end__+0x17abe8>
     ff4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ff8:	0013010b 	andseq	r0, r3, fp, lsl #2
     ffc:	000d0f00 	andeq	r0, sp, r0, lsl #30
    1000:	0b3a0e03 	bleq	e84814 <__bss_end__+0xd3b7cc>
    1004:	0b39053b 	bleq	e424f8 <__bss_end__+0xcf94b0>
    1008:	0b381349 	bleq	e05d34 <__bss_end__+0xcbccec>
    100c:	16100000 	ldrne	r0, [r0], -r0
    1010:	3a0e0300 	bcc	381c18 <__bss_end__+0x238bd0>
    1014:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1018:	0013490b 	andseq	r4, r3, fp, lsl #18
    101c:	01131100 	tsteq	r3, r0, lsl #2
    1020:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    1024:	0b3b0b3a 	bleq	ec3d14 <__bss_end__+0xd7accc>
    1028:	13010b39 	movwne	r0, #6969	; 0x1b39
    102c:	0d120000 	ldceq	0, cr0, [r2, #-0]
    1030:	3a080300 	bcc	201c38 <__bss_end__+0xb8bf0>
    1034:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1038:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    103c:	1300000b 	movwne	r0, #11
    1040:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1044:	0b3b0b3a 	bleq	ec3d34 <__bss_end__+0xd7acec>
    1048:	13490b39 	movtne	r0, #39737	; 0x9b39
    104c:	00000538 	andeq	r0, r0, r8, lsr r5
    1050:	03001614 	movweq	r1, #1556	; 0x614
    1054:	3b0b3a0e 	blcc	2cf894 <__bss_end__+0x18684c>
    1058:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    105c:	05018813 	streq	r8, [r1, #-2067]	; 0xfffff7ed
    1060:	34150000 	ldrcc	r0, [r5], #-0
    1064:	3a0e0300 	bcc	381c6c <__bss_end__+0x238c24>
    1068:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    106c:	3f13490b 	svccc	0x0013490b
    1070:	00193c19 	andseq	r3, r9, r9, lsl ip
    1074:	000f1600 	andeq	r1, pc, r0, lsl #12
    1078:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    107c:	0f170000 	svceq	0x00170000
    1080:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1084:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
    1088:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    108c:	0b3b0b3a 	bleq	ec3d7c <__bss_end__+0xd7ad34>
    1090:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1094:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1098:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    109c:	00130119 	andseq	r0, r3, r9, lsl r1
    10a0:	00051900 	andeq	r1, r5, r0, lsl #18
    10a4:	0b3a0803 	bleq	e830b8 <__bss_end__+0xd3a070>
    10a8:	0b390b3b 	bleq	e43d9c <__bss_end__+0xcfad54>
    10ac:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    10b0:	051a0000 	ldreq	r0, [sl, #-0]
    10b4:	3a0e0300 	bcc	381cbc <__bss_end__+0x238c74>
    10b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10bc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    10c0:	1b000018 	blne	1128 <errno+0x1124>
    10c4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    10c8:	0b3a0e03 	bleq	e848dc <__bss_end__+0xd3b894>
    10cc:	0b390b3b 	bleq	e43dc0 <__bss_end__+0xcfad78>
    10d0:	01111927 	tsteq	r1, r7, lsr #18
    10d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    10d8:	00194296 	mulseq	r9, r6, r2
    10dc:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
    10e0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    10e4:	0b3b0b3a 	bleq	ec3dd4 <__bss_end__+0xd7ad8c>
    10e8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    10ec:	01111349 	tsteq	r1, r9, asr #6
    10f0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    10f4:	01194296 			; <UNDEFINED> instruction: 0x01194296
    10f8:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    10fc:	0111010b 	tsteq	r1, fp, lsl #2
    1100:	00000612 	andeq	r0, r0, r2, lsl r6
    1104:	0300341e 	movweq	r3, #1054	; 0x41e
    1108:	3b0b3a08 	blcc	2cf930 <__bss_end__+0x1868e8>
    110c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1110:	00180213 	andseq	r0, r8, r3, lsl r2
    1114:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
    1118:	0b3a0e03 	bleq	e8492c <__bss_end__+0xd3b8e4>
    111c:	0b39053b 	bleq	e42610 <__bss_end__+0xcf95c8>
    1120:	01111927 	tsteq	r1, r7, lsr #18
    1124:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1128:	01194296 			; <UNDEFINED> instruction: 0x01194296
    112c:	20000013 	andcs	r0, r0, r3, lsl r0
    1130:	08030005 	stmdaeq	r3, {r0, r2}
    1134:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1138:	13490b39 	movtne	r0, #39737	; 0x9b39
    113c:	00001802 	andeq	r1, r0, r2, lsl #16
    1140:	03003421 	movweq	r3, #1057	; 0x421
    1144:	3b0b3a0e 	blcc	2cf984 <__bss_end__+0x18693c>
    1148:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    114c:	00180213 	andseq	r0, r8, r3, lsl r2
    1150:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    1154:	0b3a0e03 	bleq	e84968 <__bss_end__+0xd3b920>
    1158:	0b390b3b 	bleq	e43e4c <__bss_end__+0xcfae04>
    115c:	01111927 	tsteq	r1, r7, lsr #18
    1160:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1164:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1168:	00000013 	andeq	r0, r0, r3, lsl r0
    116c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1170:	030b130e 	movweq	r1, #45838	; 0xb30e
    1174:	110e1b0e 	tstne	lr, lr, lsl #22
    1178:	10061201 	andne	r1, r6, r1, lsl #4
    117c:	02000017 	andeq	r0, r0, #23
    1180:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1184:	0b3b0b3a 	bleq	ec3e74 <__bss_end__+0xd7ae2c>
    1188:	13490b39 	movtne	r0, #39737	; 0x9b39
    118c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1190:	24030000 	strcs	r0, [r3], #-0
    1194:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1198:	0008030b 	andeq	r0, r8, fp, lsl #6
    119c:	00160400 	andseq	r0, r6, r0, lsl #8
    11a0:	0b3a0e03 	bleq	e849b4 <__bss_end__+0xd3b96c>
    11a4:	0b390b3b 	bleq	e43e98 <__bss_end__+0xcfae50>
    11a8:	00001349 	andeq	r1, r0, r9, asr #6
    11ac:	0b002405 	bleq	a1c8 <errno+0xa1c4>
    11b0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    11b4:	0600000e 	streq	r0, [r0], -lr
    11b8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    11bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    11c0:	13490b39 	movtne	r0, #39737	; 0x9b39
    11c4:	13070000 	movwne	r0, #28672	; 0x7000
    11c8:	0b0e0301 	bleq	381dd4 <__bss_end__+0x238d8c>
    11cc:	3b0b3a0b 	blcc	2cfa00 <__bss_end__+0x1869b8>
    11d0:	0013010b 	andseq	r0, r3, fp, lsl #2
    11d4:	000d0800 	andeq	r0, sp, r0, lsl #16
    11d8:	13490e03 	movtne	r0, #40451	; 0x9e03
    11dc:	19340b38 	ldmdbne	r4!, {r3, r4, r5, r8, r9, fp}
    11e0:	0f090000 	svceq	0x00090000
    11e4:	000b0b00 	andeq	r0, fp, r0, lsl #22
    11e8:	00260a00 	eoreq	r0, r6, r0, lsl #20
    11ec:	00001349 	andeq	r1, r0, r9, asr #6
    11f0:	0300130b 	movweq	r1, #779	; 0x30b
    11f4:	00193c0e 	andseq	r3, r9, lr, lsl #24
    11f8:	000f0c00 	andeq	r0, pc, r0, lsl #24
    11fc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1200:	040d0000 	streq	r0, [sp], #-0
    1204:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
    1208:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    120c:	3b0b3a13 	blcc	2cfa60 <__bss_end__+0x186a18>
    1210:	010b390b 	tsteq	fp, fp, lsl #18
    1214:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1218:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    121c:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1220:	0300340f 	movweq	r3, #1039	; 0x40f
    1224:	3b0b3a0e 	blcc	2cfa64 <__bss_end__+0x186a1c>
    1228:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    122c:	00180213 	andseq	r0, r8, r3, lsl r2
    1230:	01011000 	mrseq	r1, (UNDEF: 1)
    1234:	13011349 	movwne	r1, #4937	; 0x1349
    1238:	21110000 	tstcs	r1, r0
    123c:	2f134900 	svccs	0x00134900
    1240:	1200000b 	andne	r0, r0, #11
    1244:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1248:	0b3a0b0b 	bleq	e83e7c <__bss_end__+0xd3ae34>
    124c:	0b39053b 	bleq	e42740 <__bss_end__+0xcf96f8>
    1250:	00001301 	andeq	r1, r0, r1, lsl #6
    1254:	03000d13 	movweq	r0, #3347	; 0xd13
    1258:	3b0b3a0e 	blcc	2cfa98 <__bss_end__+0x186a50>
    125c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1260:	000b3813 	andeq	r3, fp, r3, lsl r8
    1264:	01131400 	tsteq	r3, r0, lsl #8
    1268:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    126c:	0b3b0b3a 	bleq	ec3f5c <__bss_end__+0xd7af14>
    1270:	13010b39 	movwne	r0, #6969	; 0x1b39
    1274:	0d150000 	ldceq	0, cr0, [r5, #-0]
    1278:	3a080300 	bcc	201e80 <__bss_end__+0xb8e38>
    127c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1280:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1284:	1600000b 	strne	r0, [r0], -fp
    1288:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    128c:	0b3b0b3a 	bleq	ec3f7c <__bss_end__+0xd7af34>
    1290:	13490b39 	movtne	r0, #39737	; 0x9b39
    1294:	00000538 	andeq	r0, r0, r8, lsr r5
    1298:	03001617 	movweq	r1, #1559	; 0x617
    129c:	3b0b3a0e 	blcc	2cfadc <__bss_end__+0x186a94>
    12a0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    12a4:	05018813 	streq	r8, [r1, #-2067]	; 0xfffff7ed
    12a8:	13180000 	tstne	r8, #0
    12ac:	0b0e0301 	bleq	381eb8 <__bss_end__+0x238e70>
    12b0:	3b0b3a0b 	blcc	2cfae4 <__bss_end__+0x186a9c>
    12b4:	010b390b 	tsteq	fp, fp, lsl #18
    12b8:	19000013 	stmdbne	r0, {r0, r1, r4}
    12bc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    12c0:	0b3b0b3a 	bleq	ec3fb0 <__bss_end__+0xd7af68>
    12c4:	13490b39 	movtne	r0, #39737	; 0x9b39
    12c8:	00000b38 	andeq	r0, r0, r8, lsr fp
    12cc:	0000211a 	andeq	r2, r0, sl, lsl r1
    12d0:	01151b00 	tsteq	r5, r0, lsl #22
    12d4:	13491927 	movtne	r1, #39207	; 0x9927
    12d8:	00001301 	andeq	r1, r0, r1, lsl #6
    12dc:	4900051c 	stmdbmi	r0, {r2, r3, r4, r8, sl}
    12e0:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    12e4:	00000026 	andeq	r0, r0, r6, lsr #32
    12e8:	0300341e 	movweq	r3, #1054	; 0x41e
    12ec:	3b0b3a0e 	blcc	2cfb2c <__bss_end__+0x186ae4>
    12f0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    12f4:	00180213 	andseq	r0, r8, r3, lsl r2
    12f8:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
    12fc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1300:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1304:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1308:	06120111 			; <UNDEFINED> instruction: 0x06120111
    130c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1310:	00130119 	andseq	r0, r3, r9, lsl r1
    1314:	00052000 	andeq	r2, r5, r0
    1318:	0b3a0e03 	bleq	e84b2c <__bss_end__+0xd3bae4>
    131c:	0b39053b 	bleq	e42810 <__bss_end__+0xcf97c8>
    1320:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1324:	05210000 	streq	r0, [r1, #-0]!
    1328:	3a080300 	bcc	201f30 <__bss_end__+0xb8ee8>
    132c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1330:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1334:	22000018 	andcs	r0, r0, #24
    1338:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    133c:	0b3a0e03 	bleq	e84b50 <__bss_end__+0xd3bb08>
    1340:	0b39053b 	bleq	e42834 <__bss_end__+0xcf97ec>
    1344:	13491927 	movtne	r1, #39207	; 0x9927
    1348:	06120111 			; <UNDEFINED> instruction: 0x06120111
    134c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1350:	00130119 	andseq	r0, r3, r9, lsl r1
    1354:	00342300 	eorseq	r2, r4, r0, lsl #6
    1358:	13490e03 	movtne	r0, #40451	; 0x9e03
    135c:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    1360:	0b240000 	bleq	901368 <__bss_end__+0x7b8320>
    1364:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    1368:	25000006 	strcs	r0, [r0, #-6]
    136c:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1370:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1374:	13490b39 	movtne	r0, #39737	; 0x9b39
    1378:	00001802 	andeq	r1, r0, r2, lsl #16
    137c:	03012e26 	movweq	r2, #7718	; 0x1e26
    1380:	3b0b3a0e 	blcc	2cfbc0 <__bss_end__+0x186b78>
    1384:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1388:	11134919 	tstne	r3, r9, lsl r9
    138c:	40061201 	andmi	r1, r6, r1, lsl #4
    1390:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1394:	00001301 	andeq	r1, r0, r1, lsl #6
    1398:	11010b27 	tstne	r1, r7, lsr #22
    139c:	01061201 	tsteq	r6, r1, lsl #4
    13a0:	28000013 	stmdacs	r0, {r0, r1, r4}
    13a4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    13a8:	0b3a0e03 	bleq	e84bbc <__bss_end__+0xd3bb74>
    13ac:	0b39053b 	bleq	e428a0 <__bss_end__+0xcf9858>
    13b0:	13491927 	movtne	r1, #39207	; 0x9927
    13b4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    13b8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    13bc:	00130119 	andseq	r0, r3, r9, lsl r1
    13c0:	012e2900 			; <UNDEFINED> instruction: 0x012e2900
    13c4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    13c8:	0b3b0b3a 	bleq	ec40b8 <__bss_end__+0xd7b070>
    13cc:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    13d0:	01111349 	tsteq	r1, r9, asr #6
    13d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    13d8:	01194296 			; <UNDEFINED> instruction: 0x01194296
    13dc:	2a000013 	bcs	1430 <errno+0x142c>
    13e0:	08030005 	stmdaeq	r3, {r0, r2}
    13e4:	0b3b0b3a 	bleq	ec40d4 <__bss_end__+0xd7b08c>
    13e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    13ec:	00001802 	andeq	r1, r0, r2, lsl #16
    13f0:	0300342b 	movweq	r3, #1067	; 0x42b
    13f4:	3b0b3a08 	blcc	2cfc1c <__bss_end__+0x186bd4>
    13f8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13fc:	00180213 	andseq	r0, r8, r3, lsl r2
    1400:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    1404:	0b3a0e03 	bleq	e84c18 <__bss_end__+0xd3bbd0>
    1408:	0b390b3b 	bleq	e440fc <__bss_end__+0xcfb0b4>
    140c:	13491927 	movtne	r1, #39207	; 0x9927
    1410:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1414:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1418:	00130119 	andseq	r0, r3, r9, lsl r1
    141c:	00052d00 	andeq	r2, r5, r0, lsl #26
    1420:	0b3a0e03 	bleq	e84c34 <__bss_end__+0xd3bbec>
    1424:	0b390b3b 	bleq	e44118 <__bss_end__+0xcfb0d0>
    1428:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    142c:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    1430:	03193f00 	tsteq	r9, #0, 30
    1434:	3b0b3a0e 	blcc	2cfc74 <__bss_end__+0x186c2c>
    1438:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    143c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1440:	96184006 	ldrls	r4, [r8], -r6
    1444:	00001942 	andeq	r1, r0, r2, asr #18
    1448:	3f012e2f 	svccc	0x00012e2f
    144c:	3a0e0319 	bcc	3820b8 <__bss_end__+0x239070>
    1450:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1454:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1458:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    145c:	97184006 	ldrls	r4, [r8, -r6]
    1460:	13011942 	movwne	r1, #6466	; 0x1942
    1464:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    1468:	03193f00 	tsteq	r9, #0, 30
    146c:	3b0b3a0e 	blcc	2cfcac <__bss_end__+0x186c64>
    1470:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1474:	11134919 	tstne	r3, r9, lsl r9
    1478:	40061201 	andmi	r1, r6, r1, lsl #4
    147c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1480:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
    1484:	03193f01 	tsteq	r9, #1, 30
    1488:	3b0b3a0e 	blcc	2cfcc8 <__bss_end__+0x186c80>
    148c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1490:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1494:	96184006 	ldrls	r4, [r8], -r6
    1498:	13011942 	movwne	r1, #6466	; 0x1942
    149c:	01000000 	mrseq	r0, (UNDEF: 0)
    14a0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    14a4:	0e030b13 	vmoveq.32	d3[0], r0
    14a8:	01110e1b 	tsteq	r1, fp, lsl lr
    14ac:	17100612 			; <UNDEFINED> instruction: 0x17100612
    14b0:	16020000 	strne	r0, [r2], -r0
    14b4:	3a0e0300 	bcc	3820bc <__bss_end__+0x239074>
    14b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    14bc:	0013490b 	andseq	r4, r3, fp, lsl #18
    14c0:	01130300 	tsteq	r3, r0, lsl #6
    14c4:	0b0b0e03 	bleq	2c4cd8 <__bss_end__+0x17bc90>
    14c8:	0b3b0b3a 	bleq	ec41b8 <__bss_end__+0xd7b170>
    14cc:	00001301 	andeq	r1, r0, r1, lsl #6
    14d0:	03000d04 	movweq	r0, #3332	; 0xd04
    14d4:	3813490e 	ldmdacc	r3, {r1, r2, r3, r8, fp, lr}
    14d8:	0019340b 	andseq	r3, r9, fp, lsl #8
    14dc:	000f0500 	andeq	r0, pc, r0, lsl #10
    14e0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    14e4:	0b002406 	bleq	a504 <errno+0xa500>
    14e8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    14ec:	0700000e 	streq	r0, [r0, -lr]
    14f0:	0b0b0024 	bleq	2c1588 <__bss_end__+0x178540>
    14f4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    14f8:	16080000 	strne	r0, [r8], -r0
    14fc:	3a0e0300 	bcc	382104 <__bss_end__+0x2390bc>
    1500:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1504:	0013490b 	andseq	r4, r3, fp, lsl #18
    1508:	00130900 	andseq	r0, r3, r0, lsl #18
    150c:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    1510:	260a0000 	strcs	r0, [sl], -r0
    1514:	00134900 	andseq	r4, r3, r0, lsl #18
    1518:	00340b00 	eorseq	r0, r4, r0, lsl #22
    151c:	0b3a0e03 	bleq	e84d30 <__bss_end__+0xd3bce8>
    1520:	0b390b3b 	bleq	e44214 <__bss_end__+0xcfb1cc>
    1524:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1528:	0000193c 	andeq	r1, r0, ip, lsr r9
    152c:	0b000f0c 	bleq	5164 <errno+0x5160>
    1530:	0013490b 	andseq	r4, r3, fp, lsl #18
    1534:	01040d00 	tsteq	r4, r0, lsl #26
    1538:	0b0b0b3e 	bleq	2c4238 <__bss_end__+0x17b1f0>
    153c:	0b3a1349 	bleq	e86268 <__bss_end__+0xd3d220>
    1540:	0b390b3b 	bleq	e44234 <__bss_end__+0xcfb1ec>
    1544:	00001301 	andeq	r1, r0, r1, lsl #6
    1548:	0300280e 	movweq	r2, #2062	; 0x80e
    154c:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    1550:	00280f00 	eoreq	r0, r8, r0, lsl #30
    1554:	061c0e03 	ldreq	r0, [ip], -r3, lsl #28
    1558:	04100000 	ldreq	r0, [r0], #-0
    155c:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
    1560:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1564:	3b0b3a13 	blcc	2cfdb8 <__bss_end__+0x186d70>
    1568:	010b390b 	tsteq	fp, fp, lsl #18
    156c:	11000013 	tstne	r0, r3, lsl r0
    1570:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1574:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1578:	03003412 	movweq	r3, #1042	; 0x412
    157c:	3b0b3a0e 	blcc	2cfdbc <__bss_end__+0x186d74>
    1580:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1584:	00180213 	andseq	r0, r8, r3, lsl r2
    1588:	01011300 	mrseq	r1, SP_irq
    158c:	13011349 	movwne	r1, #4937	; 0x1349
    1590:	21140000 	tstcs	r4, r0
    1594:	2f134900 	svccs	0x00134900
    1598:	1500000b 	strne	r0, [r0, #-11]
    159c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    15a0:	0b3a0b0b 	bleq	e841d4 <__bss_end__+0xd3b18c>
    15a4:	0b39053b 	bleq	e42a98 <__bss_end__+0xcf9a50>
    15a8:	00001301 	andeq	r1, r0, r1, lsl #6
    15ac:	03000d16 	movweq	r0, #3350	; 0xd16
    15b0:	3b0b3a0e 	blcc	2cfdf0 <__bss_end__+0x186da8>
    15b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    15b8:	000b3813 	andeq	r3, fp, r3, lsl r8
    15bc:	01131700 	tsteq	r3, r0, lsl #14
    15c0:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    15c4:	0b3b0b3a 	bleq	ec42b4 <__bss_end__+0xd7b26c>
    15c8:	13010b39 	movwne	r0, #6969	; 0x1b39
    15cc:	0d180000 	ldceq	0, cr0, [r8, #-0]
    15d0:	3a080300 	bcc	2021d8 <__bss_end__+0xb9190>
    15d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15d8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    15dc:	1900000b 	stmdbne	r0, {r0, r1, r3}
    15e0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    15e4:	0b3b0b3a 	bleq	ec42d4 <__bss_end__+0xd7b28c>
    15e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    15ec:	00000538 	andeq	r0, r0, r8, lsr r5
    15f0:	0300161a 	movweq	r1, #1562	; 0x61a
    15f4:	3b0b3a0e 	blcc	2cfe34 <__bss_end__+0x186dec>
    15f8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    15fc:	05018813 	streq	r8, [r1, #-2067]	; 0xfffff7ed
    1600:	151b0000 	ldrne	r0, [fp, #-0]
    1604:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
    1608:	00130113 	andseq	r0, r3, r3, lsl r1
    160c:	00051c00 	andeq	r1, r5, r0, lsl #24
    1610:	00001349 	andeq	r1, r0, r9, asr #6
    1614:	4900211d 	stmdbmi	r0, {r0, r2, r3, r4, r8, sp}
    1618:	00052f13 	andeq	r2, r5, r3, lsl pc
    161c:	01131e00 	tsteq	r3, r0, lsl #28
    1620:	0b0b0e03 	bleq	2c4e34 <__bss_end__+0x17bdec>
    1624:	0b3b0b3a 	bleq	ec4314 <__bss_end__+0xd7b2cc>
    1628:	13010b39 	movwne	r0, #6969	; 0x1b39
    162c:	0d1f0000 	ldceq	0, cr0, [pc, #-0]	; 1634 <errno+0x1630>
    1630:	3a0e0300 	bcc	382238 <__bss_end__+0x2391f0>
    1634:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1638:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    163c:	2000000b 	andcs	r0, r0, fp
    1640:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1644:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1648:	13490b39 	movtne	r0, #39737	; 0x9b39
    164c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1650:	34210000 	strtcc	r0, [r1], #-0
    1654:	3a0e0300 	bcc	38225c <__bss_end__+0x239214>
    1658:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    165c:	3f13490b 	svccc	0x0013490b
    1660:	00180219 	andseq	r0, r8, r9, lsl r2
    1664:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    1668:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    166c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1670:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1674:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1678:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    167c:	00130119 	andseq	r0, r3, r9, lsl r1
    1680:	00342300 	eorseq	r2, r4, r0, lsl #6
    1684:	0b3a0803 	bleq	e83698 <__bss_end__+0xd3a650>
    1688:	0b39053b 	bleq	e42b7c <__bss_end__+0xcf9b34>
    168c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1690:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
    1694:	3a0e0301 	bcc	3822a0 <__bss_end__+0x239258>
    1698:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    169c:	1119270b 	tstne	r9, fp, lsl #14
    16a0:	40061201 	andmi	r1, r6, r1, lsl #4
    16a4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    16a8:	00001301 	andeq	r1, r0, r1, lsl #6
    16ac:	03000525 	movweq	r0, #1317	; 0x525
    16b0:	3b0b3a08 	blcc	2cfed8 <__bss_end__+0x186e90>
    16b4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    16b8:	00180213 	andseq	r0, r8, r3, lsl r2
    16bc:	002e2600 	eoreq	r2, lr, r0, lsl #12
    16c0:	0b3a0e03 	bleq	e84ed4 <__bss_end__+0xd3be8c>
    16c4:	0b39053b 	bleq	e42bb8 <__bss_end__+0xcf9b70>
    16c8:	01111927 	tsteq	r1, r7, lsr #18
    16cc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    16d0:	00194297 	mulseq	r9, r7, r2
    16d4:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    16d8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    16dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16e0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    16e4:	01111349 	tsteq	r1, r9, asr #6
    16e8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    16ec:	01194296 			; <UNDEFINED> instruction: 0x01194296
    16f0:	28000013 	stmdacs	r0, {r0, r1, r4}
    16f4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    16f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16fc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1700:	00001802 	andeq	r1, r0, r2, lsl #16
    1704:	00001829 	andeq	r1, r0, r9, lsr #16
    1708:	00342a00 	eorseq	r2, r4, r0, lsl #20
    170c:	0b3a0e03 	bleq	e84f20 <__bss_end__+0xd3bed8>
    1710:	0b39053b 	bleq	e42c04 <__bss_end__+0xcf9bbc>
    1714:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1718:	0b2b0000 	bleq	ac1720 <__bss_end__+0x9786d8>
    171c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    1720:	2c000006 	stccs	0, cr0, [r0], {6}
    1724:	0e03012e 	adfeqsp	f0, f3, #0.5
    1728:	0b3b0b3a 	bleq	ec4418 <__bss_end__+0xd7b3d0>
    172c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1730:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1734:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1738:	00130119 	andseq	r0, r3, r9, lsl r1
    173c:	00052d00 	andeq	r2, r5, r0, lsl #26
    1740:	0b3a0e03 	bleq	e84f54 <__bss_end__+0xd3bf0c>
    1744:	0b390b3b 	bleq	e44438 <__bss_end__+0xcfb3f0>
    1748:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    174c:	342e0000 	strtcc	r0, [lr], #-0
    1750:	3a080300 	bcc	202358 <__bss_end__+0xb9310>
    1754:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1758:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    175c:	2f000018 	svccs	0x00000018
    1760:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1764:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1768:	00001802 	andeq	r1, r0, r2, lsl #16
    176c:	3f012e30 	svccc	0x00012e30
    1770:	3a0e0319 	bcc	3823dc <__bss_end__+0x239394>
    1774:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1778:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    177c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1780:	96184006 	ldrls	r4, [r8], -r6
    1784:	13011942 	movwne	r1, #6466	; 0x1942
    1788:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
    178c:	3a0e0301 	bcc	382398 <__bss_end__+0x239350>
    1790:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1794:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1798:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    179c:	97184006 	ldrls	r4, [r8, -r6]
    17a0:	13011942 	movwne	r1, #6466	; 0x1942
    17a4:	05320000 	ldreq	r0, [r2, #-0]!
    17a8:	3a080300 	bcc	2023b0 <__bss_end__+0xb9368>
    17ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17b0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    17b4:	33000018 	movwcc	r0, #24
    17b8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    17bc:	0b3a0e03 	bleq	e84fd0 <__bss_end__+0xd3bf88>
    17c0:	0b390b3b 	bleq	e444b4 <__bss_end__+0xcfb46c>
    17c4:	13491927 	movtne	r1, #39207	; 0x9927
    17c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    17cc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    17d0:	00130119 	andseq	r0, r3, r9, lsl r1
    17d4:	012e3400 			; <UNDEFINED> instruction: 0x012e3400
    17d8:	0b3a0e03 	bleq	e84fec <__bss_end__+0xd3bfa4>
    17dc:	0b390b3b 	bleq	e444d0 <__bss_end__+0xcfb488>
    17e0:	13491927 	movtne	r1, #39207	; 0x9927
    17e4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    17e8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    17ec:	00130119 	andseq	r0, r3, r9, lsl r1
    17f0:	012e3500 			; <UNDEFINED> instruction: 0x012e3500
    17f4:	0b3a0e03 	bleq	e85008 <__bss_end__+0xd3bfc0>
    17f8:	0b39053b 	bleq	e42cec <__bss_end__+0xcf9ca4>
    17fc:	13491927 	movtne	r1, #39207	; 0x9927
    1800:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1804:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1808:	00130119 	andseq	r0, r3, r9, lsl r1
    180c:	012e3600 			; <UNDEFINED> instruction: 0x012e3600
    1810:	0b3a0e03 	bleq	e85024 <__bss_end__+0xd3bfdc>
    1814:	0b39053b 	bleq	e42d08 <__bss_end__+0xcf9cc0>
    1818:	01111927 	tsteq	r1, r7, lsr #18
    181c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1820:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1824:	37000013 	smladcc	r0, r3, r0, r0
    1828:	0e03012e 	adfeqsp	f0, f3, #0.5
    182c:	0b3b0b3a 	bleq	ec451c <__bss_end__+0xd7b4d4>
    1830:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1834:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1838:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    183c:	00130119 	andseq	r0, r3, r9, lsl r1
    1840:	002e3800 	eoreq	r3, lr, r0, lsl #16
    1844:	0b3a0e03 	bleq	e85058 <__bss_end__+0xd3c010>
    1848:	0b390b3b 	bleq	e4453c <__bss_end__+0xcfb4f4>
    184c:	13491927 	movtne	r1, #39207	; 0x9927
    1850:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1854:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1858:	39000019 	stmdbcc	r0, {r0, r3, r4}
    185c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1860:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1864:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1868:	01111349 	tsteq	r1, r9, asr #6
    186c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1870:	01194297 			; <UNDEFINED> instruction: 0x01194297
    1874:	3a000013 	bcc	18c8 <errno+0x18c4>
    1878:	0e03012e 	adfeqsp	f0, f3, #0.5
    187c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1880:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1884:	01111349 	tsteq	r1, r9, asr #6
    1888:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    188c:	00194296 	mulseq	r9, r6, r2
    1890:	11010000 	mrsne	r0, (UNDEF: 1)
    1894:	130e2501 	movwne	r2, #58625	; 0xe501
    1898:	1b0e030b 	blne	3824cc <__bss_end__+0x239484>
    189c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    18a0:	00171006 	andseq	r1, r7, r6
    18a4:	00160200 	andseq	r0, r6, r0, lsl #4
    18a8:	0b3a0e03 	bleq	e850bc <__bss_end__+0xd3c074>
    18ac:	0b390b3b 	bleq	e445a0 <__bss_end__+0xcfb558>
    18b0:	00001349 	andeq	r1, r0, r9, asr #6
    18b4:	03011303 	movweq	r1, #4867	; 0x1303
    18b8:	3a0b0b0e 	bcc	2c44f8 <__bss_end__+0x17b4b0>
    18bc:	010b3b0b 	tsteq	fp, fp, lsl #22
    18c0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    18c4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    18c8:	0b381349 	bleq	e065f4 <__bss_end__+0xcbd5ac>
    18cc:	00001934 	andeq	r1, r0, r4, lsr r9
    18d0:	0b000f05 	bleq	54ec <errno+0x54e8>
    18d4:	0600000b 	streq	r0, [r0], -fp
    18d8:	0b0b0024 	bleq	2c1970 <__bss_end__+0x178928>
    18dc:	0e030b3e 	vmoveq.16	d3[0], r0
    18e0:	24070000 	strcs	r0, [r7], #-0
    18e4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    18e8:	0008030b 	andeq	r0, r8, fp, lsl #6
    18ec:	00160800 	andseq	r0, r6, r0, lsl #16
    18f0:	0b3a0e03 	bleq	e85104 <__bss_end__+0xd3c0bc>
    18f4:	0b39053b 	bleq	e42de8 <__bss_end__+0xcf9da0>
    18f8:	00001349 	andeq	r1, r0, r9, asr #6
    18fc:	03001309 	movweq	r1, #777	; 0x309
    1900:	00193c0e 	andseq	r3, r9, lr, lsl #24
    1904:	00260a00 	eoreq	r0, r6, r0, lsl #20
    1908:	00001349 	andeq	r1, r0, r9, asr #6
    190c:	0300340b 	movweq	r3, #1035	; 0x40b
    1910:	3b0b3a0e 	blcc	2d0150 <__bss_end__+0x187108>
    1914:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1918:	3c193f13 	ldccc	15, cr3, [r9], {19}
    191c:	0c000019 	stceq	0, cr0, [r0], {25}
    1920:	0b0b000f 	bleq	2c1964 <__bss_end__+0x17891c>
    1924:	00001349 	andeq	r1, r0, r9, asr #6
    1928:	0301040d 	movweq	r0, #5133	; 0x140d
    192c:	0b0b3e0e 	bleq	2d116c <__bss_end__+0x188124>
    1930:	3a13490b 	bcc	4d3d64 <__bss_end__+0x38ad1c>
    1934:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1938:	0013010b 	andseq	r0, r3, fp, lsl #2
    193c:	00280e00 	eoreq	r0, r8, r0, lsl #28
    1940:	0b1c0e03 	bleq	705154 <__bss_end__+0x5bc10c>
    1944:	340f0000 	strcc	r0, [pc], #-0	; 194c <errno+0x1948>
    1948:	3a0e0300 	bcc	382550 <__bss_end__+0x239508>
    194c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1950:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1954:	10000018 	andne	r0, r0, r8, lsl r0
    1958:	13490101 	movtne	r0, #37121	; 0x9101
    195c:	00001301 	andeq	r1, r0, r1, lsl #6
    1960:	49002111 	stmdbmi	r0, {r0, r4, r8, sp}
    1964:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1968:	01131200 	tsteq	r3, r0, lsl #4
    196c:	0b0b0e03 	bleq	2c5180 <__bss_end__+0x17c138>
    1970:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1974:	13010b39 	movwne	r0, #6969	; 0x1b39
    1978:	0d130000 	ldceq	0, cr0, [r3, #-0]
    197c:	3a0e0300 	bcc	382584 <__bss_end__+0x23953c>
    1980:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1984:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1988:	1400000b 	strne	r0, [r0], #-11
    198c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1990:	0b3a050b 	bleq	e82dc4 <__bss_end__+0xd39d7c>
    1994:	0b390b3b 	bleq	e44688 <__bss_end__+0xcfb640>
    1998:	00001301 	andeq	r1, r0, r1, lsl #6
    199c:	03000d15 	movweq	r0, #3349	; 0xd15
    19a0:	3b0b3a08 	blcc	2d01c8 <__bss_end__+0x187180>
    19a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    19a8:	000b3813 	andeq	r3, fp, r3, lsl r8
    19ac:	000d1600 	andeq	r1, sp, r0, lsl #12
    19b0:	0b3a0e03 	bleq	e851c4 <__bss_end__+0xd3c17c>
    19b4:	0b390b3b 	bleq	e446a8 <__bss_end__+0xcfb660>
    19b8:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
    19bc:	16170000 	ldrne	r0, [r7], -r0
    19c0:	3a0e0300 	bcc	3825c8 <__bss_end__+0x239580>
    19c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19c8:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
    19cc:	00000501 	andeq	r0, r0, r1, lsl #10
    19d0:	3f012e18 	svccc	0x00012e18
    19d4:	3a0e0319 	bcc	382640 <__bss_end__+0x2395f8>
    19d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19dc:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    19e0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    19e4:	97184006 	ldrls	r4, [r8, -r6]
    19e8:	13011942 	movwne	r1, #6466	; 0x1942
    19ec:	05190000 	ldreq	r0, [r9, #-0]
    19f0:	3a080300 	bcc	2025f8 <__bss_end__+0xb95b0>
    19f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    19fc:	1a000018 	bne	1a64 <errno+0x1a60>
    1a00:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1a04:	19341349 	ldmdbne	r4!, {r0, r3, r6, r8, r9, ip}
    1a08:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    1a0c:	03193f01 	tsteq	r9, #1, 30
    1a10:	3b0b3a0e 	blcc	2d0250 <__bss_end__+0x187208>
    1a14:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1a18:	11134919 	tstne	r3, r9, lsl r9
    1a1c:	40061201 	andmi	r1, r6, r1, lsl #4
    1a20:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1a24:	00001301 	andeq	r1, r0, r1, lsl #6
    1a28:	03002e1c 	movweq	r2, #3612	; 0xe1c
    1a2c:	3b0b3a0e 	blcc	2d026c <__bss_end__+0x187224>
    1a30:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1a34:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1a38:	97184006 	ldrls	r4, [r8, -r6]
    1a3c:	00001942 	andeq	r1, r0, r2, asr #18
    1a40:	01110100 	tsteq	r1, r0, lsl #2
    1a44:	0b130e25 	bleq	4c52e0 <__bss_end__+0x37c298>
    1a48:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1a4c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1a50:	00001710 	andeq	r1, r0, r0, lsl r7
    1a54:	03001602 	movweq	r1, #1538	; 0x602
    1a58:	3b0b3a0e 	blcc	2d0298 <__bss_end__+0x187250>
    1a5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a60:	03000013 	movweq	r0, #19
    1a64:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1a68:	0b3a0b0b 	bleq	e8469c <__bss_end__+0xd3b654>
    1a6c:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1a70:	0d040000 	stceq	0, cr0, [r4, #-0]
    1a74:	490e0300 	stmdbmi	lr, {r8, r9}
    1a78:	340b3813 	strcc	r3, [fp], #-2067	; 0xfffff7ed
    1a7c:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    1a80:	0b0b000f 	bleq	2c1ac4 <__bss_end__+0x178a7c>
    1a84:	26060000 	strcs	r0, [r6], -r0
    1a88:	00134900 	andseq	r4, r3, r0, lsl #18
    1a8c:	00240700 	eoreq	r0, r4, r0, lsl #14
    1a90:	0b3e0b0b 	bleq	f846c4 <__bss_end__+0xe3b67c>
    1a94:	00000e03 	andeq	r0, r0, r3, lsl #28
    1a98:	0b002408 	bleq	aac0 <errno+0xaabc>
    1a9c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1aa0:	09000008 	stmdbeq	r0, {r3}
    1aa4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1aa8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1aac:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ab0:	130a0000 	movwne	r0, #40960	; 0xa000
    1ab4:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    1ab8:	0b000019 	bleq	1b24 <errno+0x1b20>
    1abc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1ac0:	0b3b0b3a 	bleq	ec47b0 <__bss_end__+0xd7b768>
    1ac4:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ac8:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1acc:	0f0c0000 	svceq	0x000c0000
    1ad0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1ad4:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1ad8:	0e030104 	adfeqs	f0, f3, f4
    1adc:	0b0b0b3e 	bleq	2c47dc <__bss_end__+0x17b794>
    1ae0:	0b3a1349 	bleq	e8680c <__bss_end__+0xd3d7c4>
    1ae4:	0b390b3b 	bleq	e447d8 <__bss_end__+0xcfb790>
    1ae8:	00001301 	andeq	r1, r0, r1, lsl #6
    1aec:	0300280e 	movweq	r2, #2062	; 0x80e
    1af0:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1af4:	00340f00 	eorseq	r0, r4, r0, lsl #30
    1af8:	0b3a0e03 	bleq	e8530c <__bss_end__+0xd3c2c4>
    1afc:	0b390b3b 	bleq	e447f0 <__bss_end__+0xcfb7a8>
    1b00:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1b04:	01100000 	tsteq	r0, r0
    1b08:	01134901 	tsteq	r3, r1, lsl #18
    1b0c:	11000013 	tstne	r0, r3, lsl r0
    1b10:	13490021 	movtne	r0, #36897	; 0x9021
    1b14:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1b18:	03011312 	movweq	r1, #4882	; 0x1312
    1b1c:	3a0b0b0e 	bcc	2c475c <__bss_end__+0x17b714>
    1b20:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b24:	0013010b 	andseq	r0, r3, fp, lsl #2
    1b28:	000d1300 	andeq	r1, sp, r0, lsl #6
    1b2c:	0b3a0e03 	bleq	e85340 <__bss_end__+0xd3c2f8>
    1b30:	0b39053b 	bleq	e43024 <__bss_end__+0xcf9fdc>
    1b34:	0b381349 	bleq	e06860 <__bss_end__+0xcbd818>
    1b38:	13140000 	tstne	r4, #0
    1b3c:	0b0e0301 	bleq	382748 <__bss_end__+0x239700>
    1b40:	3b0b3a05 	blcc	2d035c <__bss_end__+0x187314>
    1b44:	010b390b 	tsteq	fp, fp, lsl #18
    1b48:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1b4c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1b50:	0b3b0b3a 	bleq	ec4840 <__bss_end__+0xd7b7f8>
    1b54:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b58:	00000b38 	andeq	r0, r0, r8, lsr fp
    1b5c:	03000d16 	movweq	r0, #3350	; 0xd16
    1b60:	3b0b3a0e 	blcc	2d03a0 <__bss_end__+0x187358>
    1b64:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1b68:	00053813 	andeq	r3, r5, r3, lsl r8
    1b6c:	00161700 	andseq	r1, r6, r0, lsl #14
    1b70:	0b3a0e03 	bleq	e85384 <__bss_end__+0xd3c33c>
    1b74:	0b390b3b 	bleq	e44868 <__bss_end__+0xcfb820>
    1b78:	01881349 	orreq	r1, r8, r9, asr #6
    1b7c:	18000005 	stmdane	r0, {r0, r2}
    1b80:	00000021 	andeq	r0, r0, r1, lsr #32
    1b84:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
    1b88:	00062f13 	andeq	r2, r6, r3, lsl pc
    1b8c:	00341a00 	eorseq	r1, r4, r0, lsl #20
    1b90:	0b3a0e03 	bleq	e853a4 <__bss_end__+0xd3c35c>
    1b94:	0b390b3b 	bleq	e44888 <__bss_end__+0xcfb840>
    1b98:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1b9c:	02050188 	andeq	r0, r5, #136, 2	; 0x22
    1ba0:	1b000018 	blne	1c08 <errno+0x1c04>
    1ba4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1ba8:	0b3b0b3a 	bleq	ec4898 <__bss_end__+0xd7b850>
    1bac:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bb0:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1bb4:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1bb8:	03193f01 	tsteq	r9, #1, 30
    1bbc:	3b0b3a0e 	blcc	2d03fc <__bss_end__+0x1873b4>
    1bc0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1bc4:	11134919 	tstne	r3, r9, lsl r9
    1bc8:	40061201 	andmi	r1, r6, r1, lsl #4
    1bcc:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1bd0:	00001301 	andeq	r1, r0, r1, lsl #6
    1bd4:	0300051d 	movweq	r0, #1309	; 0x51d
    1bd8:	3b0b3a08 	blcc	2d0400 <__bss_end__+0x1873b8>
    1bdc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1be0:	00180213 	andseq	r0, r8, r3, lsl r2
    1be4:	00341e00 	eorseq	r1, r4, r0, lsl #28
    1be8:	13490e03 	movtne	r0, #40451	; 0x9e03
    1bec:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    1bf0:	341f0000 	ldrcc	r0, [pc], #-0	; 1bf8 <errno+0x1bf4>
    1bf4:	3a0e0300 	bcc	3827fc <__bss_end__+0x2397b4>
    1bf8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bfc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1c00:	20000018 	andcs	r0, r0, r8, lsl r0
    1c04:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1c08:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1c0c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c10:	00001802 	andeq	r1, r0, r2, lsl #16
    1c14:	3f012e21 	svccc	0x00012e21
    1c18:	3a0e0319 	bcc	382884 <__bss_end__+0x23983c>
    1c1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c20:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1c24:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1c28:	97184006 	ldrls	r4, [r8, -r6]
    1c2c:	13011942 	movwne	r1, #6466	; 0x1942
    1c30:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    1c34:	03193f01 	tsteq	r9, #1, 30
    1c38:	3b0b3a0e 	blcc	2d0478 <__bss_end__+0x187430>
    1c3c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1c40:	11134919 	tstne	r3, r9, lsl r9
    1c44:	40061201 	andmi	r1, r6, r1, lsl #4
    1c48:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1c4c:	00001301 	andeq	r1, r0, r1, lsl #6
    1c50:	03000523 	movweq	r0, #1315	; 0x523
    1c54:	3b0b3a08 	blcc	2d047c <__bss_end__+0x187434>
    1c58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c5c:	00180213 	andseq	r0, r8, r3, lsl r2
    1c60:	00052400 	andeq	r2, r5, r0, lsl #8
    1c64:	0b3a0e03 	bleq	e85478 <__bss_end__+0xd3c430>
    1c68:	0b390b3b 	bleq	e4495c <__bss_end__+0xcfb914>
    1c6c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1c70:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    1c74:	03193f01 	tsteq	r9, #1, 30
    1c78:	3b0b3a0e 	blcc	2d04b8 <__bss_end__+0x187470>
    1c7c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1c80:	11134919 	tstne	r3, r9, lsl r9
    1c84:	40061201 	andmi	r1, r6, r1, lsl #4
    1c88:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1c8c:	34260000 	strtcc	r0, [r6], #-0
    1c90:	3a080300 	bcc	202898 <__bss_end__+0xb9850>
    1c94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c98:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1c9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1ca0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1ca4:	030b130e 	movweq	r1, #45838	; 0xb30e
    1ca8:	110e1b0e 	tstne	lr, lr, lsl #22
    1cac:	10061201 	andne	r1, r6, r1, lsl #4
    1cb0:	02000017 	andeq	r0, r0, #23
    1cb4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1cb8:	0b3b0b3a 	bleq	ec49a8 <__bss_end__+0xd7b960>
    1cbc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1cc0:	13030000 	movwne	r0, #12288	; 0x3000
    1cc4:	0b0e0301 	bleq	3828d0 <__bss_end__+0x239888>
    1cc8:	3b0b3a0b 	blcc	2d04fc <__bss_end__+0x1874b4>
    1ccc:	0013010b 	andseq	r0, r3, fp, lsl #2
    1cd0:	000d0400 	andeq	r0, sp, r0, lsl #8
    1cd4:	13490e03 	movtne	r0, #40451	; 0x9e03
    1cd8:	19340b38 	ldmdbne	r4!, {r3, r4, r5, r8, r9, fp}
    1cdc:	0f050000 	svceq	0x00050000
    1ce0:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1ce4:	00240600 	eoreq	r0, r4, r0, lsl #12
    1ce8:	0b3e0b0b 	bleq	f8491c <__bss_end__+0xe3b8d4>
    1cec:	00000e03 	andeq	r0, r0, r3, lsl #28
    1cf0:	0b002407 	bleq	ad14 <errno+0xad10>
    1cf4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1cf8:	08000008 	stmdaeq	r0, {r3}
    1cfc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1d00:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d04:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d08:	13090000 	movwne	r0, #36864	; 0x9000
    1d0c:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    1d10:	0a000019 	beq	1d7c <errno+0x1d78>
    1d14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1d18:	0b3b0b3a 	bleq	ec4a08 <__bss_end__+0xd7b9c0>
    1d1c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d20:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1d24:	0f0b0000 	svceq	0x000b0000
    1d28:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1d2c:	0c000013 	stceq	0, cr0, [r0], {19}
    1d30:	13490026 	movtne	r0, #36902	; 0x9026
    1d34:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    1d38:	03193f01 	tsteq	r9, #1, 30
    1d3c:	3b0b3a0e 	blcc	2d057c <__bss_end__+0x187534>
    1d40:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1d44:	11134919 	tstne	r3, r9, lsl r9
    1d48:	40061201 	andmi	r1, r6, r1, lsl #4
    1d4c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1d50:	00001301 	andeq	r1, r0, r1, lsl #6
    1d54:	0300050e 	movweq	r0, #1294	; 0x50e
    1d58:	3b0b3a08 	blcc	2d0580 <__bss_end__+0x187538>
    1d5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1d60:	00180213 	andseq	r0, r8, r3, lsl r2
    1d64:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    1d68:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1d6c:	0b3b0b3a 	bleq	ec4a5c <__bss_end__+0xd7ba14>
    1d70:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1d74:	01111349 	tsteq	r1, r9, asr #6
    1d78:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1d7c:	00194297 	mulseq	r9, r7, r2
    1d80:	11010000 	mrsne	r0, (UNDEF: 1)
    1d84:	130e2501 	movwne	r2, #58625	; 0xe501
    1d88:	1b0e030b 	blne	3829bc <__bss_end__+0x239974>
    1d8c:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    1d90:	00171006 	andseq	r1, r7, r6
    1d94:	00160200 	andseq	r0, r6, r0, lsl #4
    1d98:	0b3a0e03 	bleq	e855ac <__bss_end__+0xd3c564>
    1d9c:	0b390b3b 	bleq	e44a90 <__bss_end__+0xcfba48>
    1da0:	00001349 	andeq	r1, r0, r9, asr #6
    1da4:	03011303 	movweq	r1, #4867	; 0x1303
    1da8:	3a0b0b0e 	bcc	2c49e8 <__bss_end__+0x17b9a0>
    1dac:	010b3b0b 	tsteq	fp, fp, lsl #22
    1db0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1db4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1db8:	0b381349 	bleq	e06ae4 <__bss_end__+0xcbda9c>
    1dbc:	00001934 	andeq	r1, r0, r4, lsr r9
    1dc0:	0b000f05 	bleq	59dc <errno+0x59d8>
    1dc4:	0600000b 	streq	r0, [r0], -fp
    1dc8:	0b0b0024 	bleq	2c1e60 <__bss_end__+0x178e18>
    1dcc:	0e030b3e 	vmoveq.16	d3[0], r0
    1dd0:	24070000 	strcs	r0, [r7], #-0
    1dd4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1dd8:	0008030b 	andeq	r0, r8, fp, lsl #6
    1ddc:	00160800 	andseq	r0, r6, r0, lsl #16
    1de0:	0b3a0e03 	bleq	e855f4 <__bss_end__+0xd3c5ac>
    1de4:	0b39053b 	bleq	e432d8 <__bss_end__+0xcfa290>
    1de8:	00001349 	andeq	r1, r0, r9, asr #6
    1dec:	03001309 	movweq	r1, #777	; 0x309
    1df0:	00193c0e 	andseq	r3, r9, lr, lsl #24
    1df4:	00340a00 	eorseq	r0, r4, r0, lsl #20
    1df8:	0b3a0e03 	bleq	e8560c <__bss_end__+0xd3c5c4>
    1dfc:	0b390b3b 	bleq	e44af0 <__bss_end__+0xcfbaa8>
    1e00:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1e04:	0000193c 	andeq	r1, r0, ip, lsr r9
    1e08:	0b000f0b 	bleq	5a3c <errno+0x5a38>
    1e0c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1e10:	00260c00 	eoreq	r0, r6, r0, lsl #24
    1e14:	00001349 	andeq	r1, r0, r9, asr #6
    1e18:	3e01040d 	cdpcc	4, 0, cr0, cr1, cr13, {0}
    1e1c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1e20:	3b0b3a13 	blcc	2d0674 <__bss_end__+0x18762c>
    1e24:	010b390b 	tsteq	fp, fp, lsl #18
    1e28:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1e2c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1e30:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1e34:	0300280f 	movweq	r2, #2063	; 0x80f
    1e38:	00061c0e 	andeq	r1, r6, lr, lsl #24
    1e3c:	01041000 	mrseq	r1, (UNDEF: 4)
    1e40:	0b3e0e03 	bleq	f85654 <__bss_end__+0xe3c60c>
    1e44:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1e48:	0b3b0b3a 	bleq	ec4b38 <__bss_end__+0xd7baf0>
    1e4c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1e50:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
    1e54:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1e58:	1200000b 	andne	r0, r0, #11
    1e5c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1e60:	0b3b0b3a 	bleq	ec4b50 <__bss_end__+0xd7bb08>
    1e64:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e68:	00001802 	andeq	r1, r0, r2, lsl #16
    1e6c:	49010113 	stmdbmi	r1, {r0, r1, r4, r8}
    1e70:	00130113 	andseq	r0, r3, r3, lsl r1
    1e74:	00211400 	eoreq	r1, r1, r0, lsl #8
    1e78:	0b2f1349 	bleq	bc6ba4 <__bss_end__+0xa7db5c>
    1e7c:	13150000 	tstne	r5, #0
    1e80:	0b0e0301 	bleq	382a8c <__bss_end__+0x239a44>
    1e84:	3b0b3a0b 	blcc	2d06b8 <__bss_end__+0x187670>
    1e88:	010b3905 	tsteq	fp, r5, lsl #18
    1e8c:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1e90:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1e94:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1e98:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e9c:	00000b38 	andeq	r0, r0, r8, lsr fp
    1ea0:	03011317 	movweq	r1, #4887	; 0x1317
    1ea4:	3a050b0e 	bcc	144ae4 <morecore_area+0xfbae4>
    1ea8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1eac:	0013010b 	andseq	r0, r3, fp, lsl #2
    1eb0:	000d1800 	andeq	r1, sp, r0, lsl #16
    1eb4:	0b3a0803 	bleq	e83ec8 <__bss_end__+0xd3ae80>
    1eb8:	0b390b3b 	bleq	e44bac <__bss_end__+0xcfbb64>
    1ebc:	0b381349 	bleq	e06be8 <__bss_end__+0xcbdba0>
    1ec0:	0d190000 	ldceq	0, cr0, [r9, #-0]
    1ec4:	3a0e0300 	bcc	382acc <__bss_end__+0x239a84>
    1ec8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ecc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1ed0:	1a000005 	bne	1eec <errno+0x1ee8>
    1ed4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1ed8:	0b3b0b3a 	bleq	ec4bc8 <__bss_end__+0xd7bb80>
    1edc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ee0:	00050188 	andeq	r0, r5, r8, lsl #3
    1ee4:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    1ee8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1eec:	0b3b0b3a 	bleq	ec4bdc <__bss_end__+0xd7bb94>
    1ef0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1ef4:	01111349 	tsteq	r1, r9, asr #6
    1ef8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1efc:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1f00:	1c000013 	stcne	0, cr0, [r0], {19}
    1f04:	08030005 	stmdaeq	r3, {r0, r2}
    1f08:	0b3b0b3a 	bleq	ec4bf8 <__bss_end__+0xd7bbb0>
    1f0c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1f10:	00001802 	andeq	r1, r0, r2, lsl #16
    1f14:	03002e1d 	movweq	r2, #3613	; 0xe1d
    1f18:	3b0b3a0e 	blcc	2d0758 <__bss_end__+0x187710>
    1f1c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1f20:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1f24:	96184006 	ldrls	r4, [r8], -r6
    1f28:	00001942 	andeq	r1, r0, r2, asr #18
    1f2c:	03012e1e 	movweq	r2, #7710	; 0x1e1e
    1f30:	3b0b3a0e 	blcc	2d0770 <__bss_end__+0x187728>
    1f34:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1f38:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1f3c:	97184006 	ldrls	r4, [r8, -r6]
    1f40:	00001942 	andeq	r1, r0, r2, asr #18
    1f44:	01110100 	tsteq	r1, r0, lsl #2
    1f48:	0b130e25 	bleq	4c57e4 <__bss_end__+0x37c79c>
    1f4c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1f50:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1f54:	00001710 	andeq	r1, r0, r0, lsl r7
    1f58:	0b002402 	bleq	af68 <errno+0xaf64>
    1f5c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1f60:	0300000e 	movweq	r0, #14
    1f64:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1f68:	0b3b0b3a 	bleq	ec4c58 <__bss_end__+0xd7bc10>
    1f6c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1f70:	24040000 	strcs	r0, [r4], #-0
    1f74:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1f78:	0008030b 	andeq	r0, r8, fp, lsl #6
    1f7c:	01040500 	tsteq	r4, r0, lsl #10
    1f80:	0b0b0b3e 	bleq	2c4c80 <__bss_end__+0x17bc38>
    1f84:	0b3a1349 	bleq	e86cb0 <__bss_end__+0xd3dc68>
    1f88:	0b390b3b 	bleq	e44c7c <__bss_end__+0xcfbc34>
    1f8c:	00001301 	andeq	r1, r0, r1, lsl #6
    1f90:	03002806 	movweq	r2, #2054	; 0x806
    1f94:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1f98:	00280700 	eoreq	r0, r8, r0, lsl #14
    1f9c:	061c0e03 	ldreq	r0, [ip], -r3, lsl #28
    1fa0:	28080000 	stmdacs	r8, {}	; <UNPREDICTABLE>
    1fa4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1fa8:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1fac:	0e030104 	adfeqs	f0, f3, f4
    1fb0:	0b0b0b3e 	bleq	2c4cb0 <__bss_end__+0x17bc68>
    1fb4:	0b3a1349 	bleq	e86ce0 <__bss_end__+0xd3dc98>
    1fb8:	0b390b3b 	bleq	e44cac <__bss_end__+0xcfbc64>
    1fbc:	00001301 	andeq	r1, r0, r1, lsl #6
    1fc0:	4900260a 	stmdbmi	r0, {r1, r3, r9, sl, sp}
    1fc4:	0b000013 	bleq	2018 <errno+0x2014>
    1fc8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1fcc:	0b3b0b3a 	bleq	ec4cbc <__bss_end__+0xd7bc74>
    1fd0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1fd4:	00001802 	andeq	r1, r0, r2, lsl #16
    1fd8:	4901010c 	stmdbmi	r1, {r2, r3, r8}
    1fdc:	00130113 	andseq	r0, r3, r3, lsl r1
    1fe0:	00210d00 	eoreq	r0, r1, r0, lsl #26
    1fe4:	0b2f1349 	bleq	bc6d10 <__bss_end__+0xa7dcc8>
    1fe8:	130e0000 	movwne	r0, #57344	; 0xe000
    1fec:	0b0e0301 	bleq	382bf8 <__bss_end__+0x239bb0>
    1ff0:	3b0b3a0b 	blcc	2d0824 <__bss_end__+0x1877dc>
    1ff4:	010b390b 	tsteq	fp, fp, lsl #18
    1ff8:	0f000013 	svceq	0x00000013
    1ffc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2000:	0b3b0b3a 	bleq	ec4cf0 <__bss_end__+0xd7bca8>
    2004:	13490b39 	movtne	r0, #39737	; 0x9b39
    2008:	00000b38 	andeq	r0, r0, r8, lsr fp
    200c:	03011310 	movweq	r1, #4880	; 0x1310
    2010:	3a0b0b0e 	bcc	2c4c50 <__bss_end__+0x17bc08>
    2014:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2018:	0013010b 	andseq	r0, r3, fp, lsl #2
    201c:	000d1100 	andeq	r1, sp, r0, lsl #2
    2020:	0b3a0e03 	bleq	e85834 <__bss_end__+0xd3c7ec>
    2024:	0b39053b 	bleq	e43518 <__bss_end__+0xcfa4d0>
    2028:	0b381349 	bleq	e06d54 <__bss_end__+0xcbdd0c>
    202c:	16120000 	ldrne	r0, [r2], -r0
    2030:	3a0e0300 	bcc	382c38 <__bss_end__+0x239bf0>
    2034:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2038:	0013490b 	andseq	r4, r3, fp, lsl #18
    203c:	01131300 	tsteq	r3, r0, lsl #6
    2040:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    2044:	0b3b0b3a 	bleq	ec4d34 <__bss_end__+0xd7bcec>
    2048:	13010b39 	movwne	r0, #6969	; 0x1b39
    204c:	0d140000 	ldceq	0, cr0, [r4, #-0]
    2050:	3a080300 	bcc	202c58 <__bss_end__+0xb9c10>
    2054:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2058:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    205c:	1500000b 	strne	r0, [r0, #-11]
    2060:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2064:	0b3b0b3a 	bleq	ec4d54 <__bss_end__+0xd7bd0c>
    2068:	13490b39 	movtne	r0, #39737	; 0x9b39
    206c:	00000538 	andeq	r0, r0, r8, lsr r5
    2070:	03001616 	movweq	r1, #1558	; 0x616
    2074:	3b0b3a0e 	blcc	2d08b4 <__bss_end__+0x18786c>
    2078:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    207c:	05018813 	streq	r8, [r1, #-2067]	; 0xfffff7ed
    2080:	34170000 	ldrcc	r0, [r7], #-0
    2084:	3a0e0300 	bcc	382c8c <__bss_end__+0x239c44>
    2088:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    208c:	3f13490b 	svccc	0x0013490b
    2090:	00193c19 	andseq	r3, r9, r9, lsl ip
    2094:	000f1800 	andeq	r1, pc, r0, lsl #16
    2098:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    209c:	0f190000 	svceq	0x00190000
    20a0:	000b0b00 	andeq	r0, fp, r0, lsl #22
    20a4:	00131a00 	andseq	r1, r3, r0, lsl #20
    20a8:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    20ac:	151b0000 	ldrne	r0, [fp, #-0]
    20b0:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
    20b4:	00130113 	andseq	r0, r3, r3, lsl r1
    20b8:	00051c00 	andeq	r1, r5, r0, lsl #24
    20bc:	00001349 	andeq	r1, r0, r9, asr #6
    20c0:	2701151d 	smladcs	r1, sp, r5, r1
    20c4:	00130119 	andseq	r0, r3, r9, lsl r1
    20c8:	01131e00 	tsteq	r3, r0, lsl #28
    20cc:	0b0b0803 	bleq	2c40e0 <__bss_end__+0x17b098>
    20d0:	0b3b0b3a 	bleq	ec4dc0 <__bss_end__+0xd7bd78>
    20d4:	13010b39 	movwne	r0, #6969	; 0x1b39
    20d8:	131f0000 	tstne	pc, #0
    20dc:	3a0b0b01 	bcc	2c4ce8 <__bss_end__+0x17bca0>
    20e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    20e4:	0013010b 	andseq	r0, r3, fp, lsl #2
    20e8:	01172000 	tsteq	r7, r0
    20ec:	0b3a0b0b 	bleq	e84d20 <__bss_end__+0xd3bcd8>
    20f0:	0b390b3b 	bleq	e44de4 <__bss_end__+0xcfbd9c>
    20f4:	00001301 	andeq	r1, r0, r1, lsl #6
    20f8:	03000d21 	movweq	r0, #3361	; 0xd21
    20fc:	3b0b3a0e 	blcc	2d093c <__bss_end__+0x1878f4>
    2100:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2104:	22000013 	andcs	r0, r0, #19
    2108:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    210c:	0b3b0b3a 	bleq	ec4dfc <__bss_end__+0xd7bdb4>
    2110:	13490b39 	movtne	r0, #39737	; 0x9b39
    2114:	0d230000 	stceq	0, cr0, [r3, #-0]
    2118:	38134900 	ldmdacc	r3, {r8, fp, lr}
    211c:	2400000b 	strcs	r0, [r0], #-11
    2120:	0b0b0113 	bleq	2c2574 <__bss_end__+0x17952c>
    2124:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2128:	13010b39 	movwne	r0, #6969	; 0x1b39
    212c:	34250000 	strtcc	r0, [r5], #-0
    2130:	3a080300 	bcc	202d38 <__bss_end__+0xb9cf0>
    2134:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2138:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    213c:	26000018 			; <UNDEFINED> instruction: 0x26000018
    2140:	00000021 	andeq	r0, r0, r1, lsr #32
    2144:	3f002e27 	svccc	0x00002e27
    2148:	3a0e0319 	bcc	382db4 <__bss_end__+0x239d6c>
    214c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2150:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2154:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2158:	96184006 	ldrls	r4, [r8], -r6
    215c:	00001942 	andeq	r1, r0, r2, asr #18
    2160:	3f012e28 	svccc	0x00012e28
    2164:	3a0e0319 	bcc	382dd0 <__bss_end__+0x239d88>
    2168:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    216c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2170:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2174:	96184006 	ldrls	r4, [r8], -r6
    2178:	13011942 	movwne	r1, #6466	; 0x1942
    217c:	05290000 	streq	r0, [r9, #-0]!
    2180:	3a0e0300 	bcc	382d88 <__bss_end__+0x239d40>
    2184:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2188:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    218c:	2a000018 	bcs	21f4 <errno+0x21f0>
    2190:	0111010b 	tsteq	r1, fp, lsl #2
    2194:	00000612 	andeq	r0, r0, r2, lsl r6
    2198:	0300342b 	movweq	r3, #1067	; 0x42b
    219c:	3b0b3a08 	blcc	2d09c4 <__bss_end__+0x18797c>
    21a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    21a4:	00180213 	andseq	r0, r8, r3, lsl r2
    21a8:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    21ac:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    21b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    21b4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    21b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    21bc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    21c0:	00130119 	andseq	r0, r3, r9, lsl r1
    21c4:	00052d00 	andeq	r2, r5, r0, lsl #26
    21c8:	0b3a0803 	bleq	e841dc <__bss_end__+0xd3b194>
    21cc:	0b39053b 	bleq	e436c0 <__bss_end__+0xcfa678>
    21d0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    21d4:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    21d8:	3a0e0301 	bcc	382de4 <__bss_end__+0x239d9c>
    21dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    21e0:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    21e4:	96184006 	ldrls	r4, [r8], -r6
    21e8:	13011942 	movwne	r1, #6466	; 0x1942
    21ec:	342f0000 	strtcc	r0, [pc], #-0	; 21f4 <errno+0x21f0>
    21f0:	3a0e0300 	bcc	382df8 <__bss_end__+0x239db0>
    21f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    21f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    21fc:	30000018 	andcc	r0, r0, r8, lsl r0
    2200:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2204:	0b3a0e03 	bleq	e85a18 <__bss_end__+0xd3c9d0>
    2208:	0b390b3b 	bleq	e44efc <__bss_end__+0xcfbeb4>
    220c:	13491927 	movtne	r1, #39207	; 0x9927
    2210:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2214:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2218:	00130119 	andseq	r0, r3, r9, lsl r1
    221c:	00053100 	andeq	r3, r5, r0, lsl #2
    2220:	0b3a0e03 	bleq	e85a34 <__bss_end__+0xd3c9ec>
    2224:	0b390b3b 	bleq	e44f18 <__bss_end__+0xcfbed0>
    2228:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    222c:	34320000 	ldrtcc	r0, [r2], #-0
    2230:	490e0300 	stmdbmi	lr, {r8, r9}
    2234:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    2238:	33000018 	movwcc	r0, #24
    223c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    2240:	0b3a0e03 	bleq	e85a54 <__bss_end__+0xd3ca0c>
    2244:	0b390b3b 	bleq	e44f38 <__bss_end__+0xcfbef0>
    2248:	01111927 	tsteq	r1, r7, lsr #18
    224c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2250:	00194297 	mulseq	r9, r7, r2
    2254:	012e3400 			; <UNDEFINED> instruction: 0x012e3400
    2258:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    225c:	0b3b0b3a 	bleq	ec4f4c <__bss_end__+0xd7bf04>
    2260:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2264:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2268:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    226c:	00130119 	andseq	r0, r3, r9, lsl r1
    2270:	012e3500 			; <UNDEFINED> instruction: 0x012e3500
    2274:	0b3a0e03 	bleq	e85a88 <__bss_end__+0xd3ca40>
    2278:	0b390b3b 	bleq	e44f6c <__bss_end__+0xcfbf24>
    227c:	13491927 	movtne	r1, #39207	; 0x9927
    2280:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2284:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2288:	00130119 	andseq	r0, r3, r9, lsl r1
    228c:	000a3600 	andeq	r3, sl, r0, lsl #12
    2290:	0b3a0e03 	bleq	e85aa4 <__bss_end__+0xd3ca5c>
    2294:	0b390b3b 	bleq	e44f88 <__bss_end__+0xcfbf40>
    2298:	00000111 	andeq	r0, r0, r1, lsl r1
    229c:	03012e37 	movweq	r2, #7735	; 0x1e37
    22a0:	3b0b3a0e 	blcc	2d0ae0 <__bss_end__+0x187a98>
    22a4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    22a8:	11134919 	tstne	r3, r9, lsl r9
    22ac:	40061201 	andmi	r1, r6, r1, lsl #4
    22b0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    22b4:	00001301 	andeq	r1, r0, r1, lsl #6
    22b8:	03000538 	movweq	r0, #1336	; 0x538
    22bc:	3b0b3a08 	blcc	2d0ae4 <__bss_end__+0x187a9c>
    22c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    22c4:	00180213 	andseq	r0, r8, r3, lsl r2
    22c8:	012e3900 			; <UNDEFINED> instruction: 0x012e3900
    22cc:	0b3a0e03 	bleq	e85ae0 <__bss_end__+0xd3ca98>
    22d0:	0b39053b 	bleq	e437c4 <__bss_end__+0xcfa77c>
    22d4:	13491927 	movtne	r1, #39207	; 0x9927
    22d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    22dc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    22e0:	00130119 	andseq	r0, r3, r9, lsl r1
    22e4:	012e3a00 			; <UNDEFINED> instruction: 0x012e3a00
    22e8:	0b3a0e03 	bleq	e85afc <__bss_end__+0xd3cab4>
    22ec:	0b390b3b 	bleq	e44fe0 <__bss_end__+0xcfbf98>
    22f0:	01111927 	tsteq	r1, r7, lsr #18
    22f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    22f8:	01194296 			; <UNDEFINED> instruction: 0x01194296
    22fc:	3b000013 	blcc	2350 <errno+0x234c>
    2300:	0e03012e 	adfeqsp	f0, f3, #0.5
    2304:	0b3b0b3a 	bleq	ec4ff4 <__bss_end__+0xd7bfac>
    2308:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    230c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2310:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2314:	00130119 	andseq	r0, r3, r9, lsl r1
    2318:	002e3c00 	eoreq	r3, lr, r0, lsl #24
    231c:	0b3a0e03 	bleq	e85b30 <__bss_end__+0xd3cae8>
    2320:	0b390b3b 	bleq	e45014 <__bss_end__+0xcfbfcc>
    2324:	13491927 	movtne	r1, #39207	; 0x9927
    2328:	06120111 			; <UNDEFINED> instruction: 0x06120111
    232c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2330:	3d000019 	stccc	0, cr0, [r0, #-100]	; 0xffffff9c
    2334:	0e03012e 	adfeqsp	f0, f3, #0.5
    2338:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    233c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2340:	01111349 	tsteq	r1, r9, asr #6
    2344:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2348:	01194297 			; <UNDEFINED> instruction: 0x01194297
    234c:	00000013 	andeq	r0, r0, r3, lsl r0
    2350:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2354:	030b130e 	movweq	r1, #45838	; 0xb30e
    2358:	110e1b0e 	tstne	lr, lr, lsl #22
    235c:	10061201 	andne	r1, r6, r1, lsl #4
    2360:	02000017 	andeq	r0, r0, #23
    2364:	0b0b0024 	bleq	2c23fc <__bss_end__+0x1793b4>
    2368:	0e030b3e 	vmoveq.16	d3[0], r0
    236c:	16030000 	strne	r0, [r3], -r0
    2370:	3a0e0300 	bcc	382f78 <__bss_end__+0x239f30>
    2374:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2378:	0013490b 	andseq	r4, r3, fp, lsl #18
    237c:	00240400 	eoreq	r0, r4, r0, lsl #8
    2380:	0b3e0b0b 	bleq	f84fb4 <__bss_end__+0xe3bf6c>
    2384:	00000803 	andeq	r0, r0, r3, lsl #16
    2388:	3e010405 	cdpcc	4, 0, cr0, cr1, cr5, {0}
    238c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2390:	3b0b3a13 	blcc	2d0be4 <__bss_end__+0x187b9c>
    2394:	010b390b 	tsteq	fp, fp, lsl #18
    2398:	06000013 			; <UNDEFINED> instruction: 0x06000013
    239c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    23a0:	00000d1c 	andeq	r0, r0, ip, lsl sp
    23a4:	03002807 	movweq	r2, #2055	; 0x807
    23a8:	00061c0e 	andeq	r1, r6, lr, lsl #24
    23ac:	01040800 	tsteq	r4, r0, lsl #16
    23b0:	0b3e0e03 	bleq	f85bc4 <__bss_end__+0xe3cb7c>
    23b4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    23b8:	0b3b0b3a 	bleq	ec50a8 <__bss_end__+0xd7c060>
    23bc:	13010b39 	movwne	r0, #6969	; 0x1b39
    23c0:	28090000 	stmdacs	r9, {}	; <UNPREDICTABLE>
    23c4:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    23c8:	0a00000b 	beq	23fc <errno+0x23f8>
    23cc:	13490026 	movtne	r0, #36902	; 0x9026
    23d0:	340b0000 	strcc	r0, [fp], #-0
    23d4:	3a0e0300 	bcc	382fdc <__bss_end__+0x239f94>
    23d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    23dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    23e0:	0c000018 	stceq	0, cr0, [r0], {24}
    23e4:	13490101 	movtne	r0, #37121	; 0x9101
    23e8:	00001301 	andeq	r1, r0, r1, lsl #6
    23ec:	4900210d 	stmdbmi	r0, {r0, r2, r3, r8, sp}
    23f0:	000b2f13 	andeq	r2, fp, r3, lsl pc
    23f4:	01130e00 	tsteq	r3, r0, lsl #28
    23f8:	0b0b0e03 	bleq	2c5c0c <__bss_end__+0x17cbc4>
    23fc:	0b3b0b3a 	bleq	ec50ec <__bss_end__+0xd7c0a4>
    2400:	13010b39 	movwne	r0, #6969	; 0x1b39
    2404:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 240c <errno+0x2408>
    2408:	3a0e0300 	bcc	383010 <__bss_end__+0x239fc8>
    240c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2410:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2414:	1000000b 	andne	r0, r0, fp
    2418:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    241c:	0b3a0b0b 	bleq	e85050 <__bss_end__+0xd3c008>
    2420:	0b39053b 	bleq	e43914 <__bss_end__+0xcfa8cc>
    2424:	00001301 	andeq	r1, r0, r1, lsl #6
    2428:	03000d11 	movweq	r0, #3345	; 0xd11
    242c:	3b0b3a0e 	blcc	2d0c6c <__bss_end__+0x187c24>
    2430:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2434:	000b3813 	andeq	r3, fp, r3, lsl r8
    2438:	00161200 	andseq	r1, r6, r0, lsl #4
    243c:	0b3a0e03 	bleq	e85c50 <__bss_end__+0xd3cc08>
    2440:	0b39053b 	bleq	e43934 <__bss_end__+0xcfa8ec>
    2444:	00001349 	andeq	r1, r0, r9, asr #6
    2448:	03011313 	movweq	r1, #4883	; 0x1313
    244c:	3a050b0e 	bcc	14508c <morecore_area+0xfc08c>
    2450:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2454:	0013010b 	andseq	r0, r3, fp, lsl #2
    2458:	000d1400 	andeq	r1, sp, r0, lsl #8
    245c:	0b3a0803 	bleq	e84470 <__bss_end__+0xd3b428>
    2460:	0b390b3b 	bleq	e45154 <__bss_end__+0xcfc10c>
    2464:	0b381349 	bleq	e07190 <__bss_end__+0xcbe148>
    2468:	0d150000 	ldceq	0, cr0, [r5, #-0]
    246c:	3a0e0300 	bcc	383074 <__bss_end__+0x23a02c>
    2470:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2474:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2478:	16000005 	strne	r0, [r0], -r5
    247c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2480:	0b3b0b3a 	bleq	ec5170 <__bss_end__+0xd7c128>
    2484:	13490b39 	movtne	r0, #39737	; 0x9b39
    2488:	00050188 	andeq	r0, r5, r8, lsl #3
    248c:	00341700 	eorseq	r1, r4, r0, lsl #14
    2490:	0b3a0e03 	bleq	e85ca4 <__bss_end__+0xd3cc5c>
    2494:	0b390b3b 	bleq	e45188 <__bss_end__+0xcfc140>
    2498:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    249c:	0000193c 	andeq	r1, r0, ip, lsr r9
    24a0:	0b000f18 	bleq	6108 <errno+0x6104>
    24a4:	0013490b 	andseq	r4, r3, fp, lsl #18
    24a8:	000f1900 	andeq	r1, pc, r0, lsl #18
    24ac:	00000b0b 	andeq	r0, r0, fp, lsl #22
    24b0:	0300131a 	movweq	r1, #794	; 0x31a
    24b4:	00193c0e 	andseq	r3, r9, lr, lsl #24
    24b8:	01151b00 	tsteq	r5, r0, lsl #22
    24bc:	13491927 	movtne	r1, #39207	; 0x9927
    24c0:	00001301 	andeq	r1, r0, r1, lsl #6
    24c4:	4900051c 	stmdbmi	r0, {r2, r3, r4, r8, sl}
    24c8:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    24cc:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    24d0:	00001301 	andeq	r1, r0, r1, lsl #6
    24d4:	0301131e 	movweq	r1, #4894	; 0x131e
    24d8:	3a0b0b08 	bcc	2c5100 <__bss_end__+0x17c0b8>
    24dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    24e0:	0013010b 	andseq	r0, r3, fp, lsl #2
    24e4:	01131f00 	tsteq	r3, r0, lsl #30
    24e8:	0b3a0b0b 	bleq	e8511c <__bss_end__+0xd3c0d4>
    24ec:	0b390b3b 	bleq	e451e0 <__bss_end__+0xcfc198>
    24f0:	00001301 	andeq	r1, r0, r1, lsl #6
    24f4:	0b011720 	bleq	4817c <mal+0x4c>
    24f8:	3b0b3a0b 	blcc	2d0d2c <__bss_end__+0x187ce4>
    24fc:	010b390b 	tsteq	fp, fp, lsl #18
    2500:	21000013 	tstcs	r0, r3, lsl r0
    2504:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2508:	0b3b0b3a 	bleq	ec51f8 <__bss_end__+0xd7c1b0>
    250c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2510:	0d220000 	stceq	0, cr0, [r2, #-0]
    2514:	3a080300 	bcc	20311c <__bss_end__+0xba0d4>
    2518:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    251c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2520:	000d2300 	andeq	r2, sp, r0, lsl #6
    2524:	0b381349 	bleq	e07250 <__bss_end__+0xcbe208>
    2528:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
    252c:	03193f01 	tsteq	r9, #1, 30
    2530:	3b0b3a0e 	blcc	2d0d70 <__bss_end__+0x187d28>
    2534:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2538:	11134919 	tstne	r3, r9, lsl r9
    253c:	40061201 	andmi	r1, r6, r1, lsl #4
    2540:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2544:	00001301 	andeq	r1, r0, r1, lsl #6
    2548:	03000525 	movweq	r0, #1317	; 0x525
    254c:	3b0b3a08 	blcc	2d0d74 <__bss_end__+0x187d2c>
    2550:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2554:	00180213 	andseq	r0, r8, r3, lsl r2
    2558:	00052600 	andeq	r2, r5, r0, lsl #12
    255c:	0b3a0e03 	bleq	e85d70 <__bss_end__+0xd3cd28>
    2560:	0b390b3b 	bleq	e45254 <__bss_end__+0xcfc20c>
    2564:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2568:	34270000 	strtcc	r0, [r7], #-0
    256c:	490e0300 	stmdbmi	lr, {r8, r9}
    2570:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    2574:	28000018 	stmdacs	r0, {r3, r4}
    2578:	08030034 	stmdaeq	r3, {r2, r4, r5}
    257c:	0b3b0b3a 	bleq	ec526c <__bss_end__+0xd7c224>
    2580:	13490b39 	movtne	r0, #39737	; 0x9b39
    2584:	00001802 	andeq	r1, r0, r2, lsl #16
    2588:	03012e29 	movweq	r2, #7721	; 0x1e29
    258c:	3b0b3a0e 	blcc	2d0dcc <__bss_end__+0x187d84>
    2590:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2594:	11134919 	tstne	r3, r9, lsl r9
    2598:	40061201 	andmi	r1, r6, r1, lsl #4
    259c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    25a0:	00001301 	andeq	r1, r0, r1, lsl #6
    25a4:	0300052a 	movweq	r0, #1322	; 0x52a
    25a8:	3b0b3a0e 	blcc	2d0de8 <__bss_end__+0x187da0>
    25ac:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    25b0:	00180213 	andseq	r0, r8, r3, lsl r2
    25b4:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    25b8:	0b3a0e03 	bleq	e85dcc <__bss_end__+0xd3cd84>
    25bc:	0b390b3b 	bleq	e452b0 <__bss_end__+0xcfc268>
    25c0:	13491927 	movtne	r1, #39207	; 0x9927
    25c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    25c8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    25cc:	00130119 	andseq	r0, r3, r9, lsl r1
    25d0:	010b2c00 	tsteq	fp, r0, lsl #24
    25d4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    25d8:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
    25dc:	3a0e0301 	bcc	3831e8 <__bss_end__+0x23a1a0>
    25e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25e4:	1119270b 	tstne	r9, fp, lsl #14
    25e8:	40061201 	andmi	r1, r6, r1, lsl #4
    25ec:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    25f0:	00001301 	andeq	r1, r0, r1, lsl #6
    25f4:	03000a2e 	movweq	r0, #2606	; 0xa2e
    25f8:	3b0b3a0e 	blcc	2d0e38 <__bss_end__+0x187df0>
    25fc:	110b390b 	tstne	fp, fp, lsl #18
    2600:	2f000001 	svccs	0x00000001
    2604:	0e03012e 	adfeqsp	f0, f3, #0.5
    2608:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    260c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2610:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2614:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2618:	00130119 	andseq	r0, r3, r9, lsl r1
    261c:	00053000 	andeq	r3, r5, r0
    2620:	0b3a0803 	bleq	e84634 <__bss_end__+0xd3b5ec>
    2624:	0b39053b 	bleq	e43b18 <__bss_end__+0xcfaad0>
    2628:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    262c:	34310000 	ldrtcc	r0, [r1], #-0
    2630:	3a0e0300 	bcc	383238 <__bss_end__+0x23a1f0>
    2634:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2638:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    263c:	32000018 	andcc	r0, r0, #24
    2640:	08030034 	stmdaeq	r3, {r2, r4, r5}
    2644:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2648:	13490b39 	movtne	r0, #39737	; 0x9b39
    264c:	00001802 	andeq	r1, r0, r2, lsl #16
    2650:	03012e33 	movweq	r2, #7731	; 0x1e33
    2654:	3b0b3a0e 	blcc	2d0e94 <__bss_end__+0x187e4c>
    2658:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    265c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2660:	97184006 	ldrls	r4, [r8, -r6]
    2664:	13011942 	movwne	r1, #6466	; 0x1942
    2668:	2e340000 	cdpcs	0, 3, cr0, cr4, cr0, {0}
    266c:	3a0e0300 	bcc	383274 <__bss_end__+0x23a22c>
    2670:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2674:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2678:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    267c:	97184006 	ldrls	r4, [r8, -r6]
    2680:	00001942 	andeq	r1, r0, r2, asr #18
    2684:	03012e35 	movweq	r2, #7733	; 0x1e35
    2688:	3b0b3a0e 	blcc	2d0ec8 <__bss_end__+0x187e80>
    268c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2690:	11134919 	tstne	r3, r9, lsl r9
    2694:	40061201 	andmi	r1, r6, r1, lsl #4
    2698:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    269c:	00001301 	andeq	r1, r0, r1, lsl #6
    26a0:	01110100 	tsteq	r1, r0, lsl #2
    26a4:	0b130e25 	bleq	4c5f40 <__bss_end__+0x37cef8>
    26a8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    26ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
    26b0:	00001710 	andeq	r1, r0, r0, lsl r7
    26b4:	0b002402 	bleq	b6c4 <errno+0xb6c0>
    26b8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    26bc:	0300000e 	movweq	r0, #14
    26c0:	0b0b0024 	bleq	2c2758 <__bss_end__+0x179710>
    26c4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    26c8:	26040000 	strcs	r0, [r4], -r0
    26cc:	00134900 	andseq	r4, r3, r0, lsl #18
    26d0:	00160500 	andseq	r0, r6, r0, lsl #10
    26d4:	0b3a0e03 	bleq	e85ee8 <__bss_end__+0xd3cea0>
    26d8:	0b390b3b 	bleq	e453cc <__bss_end__+0xcfc384>
    26dc:	00001349 	andeq	r1, r0, r9, asr #6
    26e0:	3e010406 	cdpcc	4, 0, cr0, cr1, cr6, {0}
    26e4:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    26e8:	3b0b3a13 	blcc	2d0f3c <__bss_end__+0x187ef4>
    26ec:	010b390b 	tsteq	fp, fp, lsl #18
    26f0:	07000013 	smladeq	r0, r3, r0, r0
    26f4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    26f8:	00000d1c 	andeq	r0, r0, ip, lsl sp
    26fc:	03002808 	movweq	r2, #2056	; 0x808
    2700:	00061c0e 	andeq	r1, r6, lr, lsl #24
    2704:	01040900 	tsteq	r4, r0, lsl #18
    2708:	0b3e0e03 	bleq	f85f1c <__bss_end__+0xe3ced4>
    270c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2710:	0b3b0b3a 	bleq	ec5400 <__bss_end__+0xd7c3b8>
    2714:	13010b39 	movwne	r0, #6969	; 0x1b39
    2718:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
    271c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    2720:	0b00000b 	bleq	2754 <errno+0x2750>
    2724:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2728:	0b3b0b3a 	bleq	ec5418 <__bss_end__+0xd7c3d0>
    272c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2730:	00001802 	andeq	r1, r0, r2, lsl #16
    2734:	4901010c 	stmdbmi	r1, {r2, r3, r8}
    2738:	00130113 	andseq	r0, r3, r3, lsl r1
    273c:	00210d00 	eoreq	r0, r1, r0, lsl #26
    2740:	0b2f1349 	bleq	bc746c <__bss_end__+0xa7e424>
    2744:	130e0000 	movwne	r0, #57344	; 0xe000
    2748:	0b0e0301 	bleq	383354 <__bss_end__+0x23a30c>
    274c:	3b0b3a0b 	blcc	2d0f80 <__bss_end__+0x187f38>
    2750:	010b3905 	tsteq	fp, r5, lsl #18
    2754:	0f000013 	svceq	0x00000013
    2758:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    275c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2760:	13490b39 	movtne	r0, #39737	; 0x9b39
    2764:	00000b38 	andeq	r0, r0, r8, lsr fp
    2768:	03001610 	movweq	r1, #1552	; 0x610
    276c:	3b0b3a0e 	blcc	2d0fac <__bss_end__+0x187f64>
    2770:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2774:	11000013 	tstne	r0, r3, lsl r0
    2778:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    277c:	0b3a050b 	bleq	e83bb0 <__bss_end__+0xd3ab68>
    2780:	0b390b3b 	bleq	e45474 <__bss_end__+0xcfc42c>
    2784:	00001301 	andeq	r1, r0, r1, lsl #6
    2788:	03000d12 	movweq	r0, #3346	; 0xd12
    278c:	3b0b3a08 	blcc	2d0fb4 <__bss_end__+0x187f6c>
    2790:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2794:	000b3813 	andeq	r3, fp, r3, lsl r8
    2798:	000d1300 	andeq	r1, sp, r0, lsl #6
    279c:	0b3a0e03 	bleq	e85fb0 <__bss_end__+0xd3cf68>
    27a0:	0b390b3b 	bleq	e45494 <__bss_end__+0xcfc44c>
    27a4:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
    27a8:	16140000 	ldrne	r0, [r4], -r0
    27ac:	3a0e0300 	bcc	3833b4 <__bss_end__+0x23a36c>
    27b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    27b4:	8813490b 	ldmdahi	r3, {r0, r1, r3, r8, fp, lr}
    27b8:	00000501 	andeq	r0, r0, r1, lsl #10
    27bc:	03003415 	movweq	r3, #1045	; 0x415
    27c0:	3b0b3a0e 	blcc	2d1000 <__bss_end__+0x187fb8>
    27c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    27c8:	3c193f13 	ldccc	15, cr3, [r9], {19}
    27cc:	16000019 			; <UNDEFINED> instruction: 0x16000019
    27d0:	0b0b000f 	bleq	2c2814 <__bss_end__+0x1797cc>
    27d4:	00001349 	andeq	r1, r0, r9, asr #6
    27d8:	49003517 	stmdbmi	r0, {r0, r1, r2, r4, r8, sl, ip, sp}
    27dc:	18000013 	stmdane	r0, {r0, r1, r4}
    27e0:	0b0b000f 	bleq	2c2824 <__bss_end__+0x1797dc>
    27e4:	13190000 	tstne	r9, #0
    27e8:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    27ec:	1a000019 	bne	2858 <errno+0x2854>
    27f0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    27f4:	0b3a0b0b 	bleq	e85428 <__bss_end__+0xd3c3e0>
    27f8:	0b390b3b 	bleq	e454ec <__bss_end__+0xcfc4a4>
    27fc:	00001301 	andeq	r1, r0, r1, lsl #6
    2800:	03000d1b 	movweq	r0, #3355	; 0xd1b
    2804:	3b0b3a0e 	blcc	2d1044 <__bss_end__+0x187ffc>
    2808:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    280c:	000b3813 	andeq	r3, fp, r3, lsl r8
    2810:	01151c00 	tsteq	r5, r0, lsl #24
    2814:	13491927 	movtne	r1, #39207	; 0x9927
    2818:	00001301 	andeq	r1, r0, r1, lsl #6
    281c:	4900051d 	stmdbmi	r0, {r0, r2, r3, r4, r8, sl}
    2820:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2824:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    2828:	00001301 	andeq	r1, r0, r1, lsl #6
    282c:	0b01131f 	bleq	474b0 <static_tls+0x34b0>
    2830:	3b0b3a0b 	blcc	2d1064 <__bss_end__+0x18801c>
    2834:	010b390b 	tsteq	fp, fp, lsl #18
    2838:	20000013 	andcs	r0, r0, r3, lsl r0
    283c:	0b0b0117 	bleq	2c2ca0 <__bss_end__+0x179c58>
    2840:	0b3b0b3a 	bleq	ec5530 <__bss_end__+0xd7c4e8>
    2844:	13010b39 	movwne	r0, #6969	; 0x1b39
    2848:	0d210000 	stceq	0, cr0, [r1, #-0]
    284c:	3a0e0300 	bcc	383454 <__bss_end__+0x23a40c>
    2850:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2854:	0013490b 	andseq	r4, r3, fp, lsl #18
    2858:	000d2200 	andeq	r2, sp, r0, lsl #4
    285c:	0b3a0803 	bleq	e84870 <__bss_end__+0xd3b828>
    2860:	0b390b3b 	bleq	e45554 <__bss_end__+0xcfc50c>
    2864:	00001349 	andeq	r1, r0, r9, asr #6
    2868:	49000d23 	stmdbmi	r0, {r0, r1, r5, r8, sl, fp}
    286c:	000b3813 	andeq	r3, fp, r3, lsl r8
    2870:	01132400 	tsteq	r3, r0, lsl #8
    2874:	0b3a0b0b 	bleq	e854a8 <__bss_end__+0xd3c460>
    2878:	0b39053b 	bleq	e43d6c <__bss_end__+0xcfad24>
    287c:	00001301 	andeq	r1, r0, r1, lsl #6
    2880:	00002625 	andeq	r2, r0, r5, lsr #12
    2884:	002e2600 	eoreq	r2, lr, r0, lsl #12
    2888:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    288c:	0b3b0b3a 	bleq	ec557c <__bss_end__+0xd7c534>
    2890:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2894:	01111349 	tsteq	r1, r9, asr #6
    2898:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    289c:	00194296 	mulseq	r9, r6, r2
    28a0:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    28a4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    28a8:	0b3b0b3a 	bleq	ec5598 <__bss_end__+0xd7c550>
    28ac:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    28b0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    28b4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    28b8:	00130119 	andseq	r0, r3, r9, lsl r1
    28bc:	00052800 	andeq	r2, r5, r0, lsl #16
    28c0:	0b3a0803 	bleq	e848d4 <__bss_end__+0xd3b88c>
    28c4:	0b390b3b 	bleq	e455b8 <__bss_end__+0xcfc570>
    28c8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    28cc:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    28d0:	03193f01 	tsteq	r9, #1, 30
    28d4:	3b0b3a0e 	blcc	2d1114 <__bss_end__+0x1880cc>
    28d8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    28dc:	11134919 	tstne	r3, r9, lsl r9
    28e0:	40061201 	andmi	r1, r6, r1, lsl #4
    28e4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    28e8:	00001301 	andeq	r1, r0, r1, lsl #6
    28ec:	0300052a 	movweq	r0, #1322	; 0x52a
    28f0:	3b0b3a0e 	blcc	2d1130 <__bss_end__+0x1880e8>
    28f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    28f8:	00180213 	andseq	r0, r8, r3, lsl r2
    28fc:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    2900:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2904:	0b3b0b3a 	bleq	ec55f4 <__bss_end__+0xd7c5ac>
    2908:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    290c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2910:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2914:	00130119 	andseq	r0, r3, r9, lsl r1
    2918:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    291c:	0b3a0e03 	bleq	e86130 <__bss_end__+0xd3d0e8>
    2920:	0b390b3b 	bleq	e45614 <__bss_end__+0xcfc5cc>
    2924:	13491927 	movtne	r1, #39207	; 0x9927
    2928:	06120111 			; <UNDEFINED> instruction: 0x06120111
    292c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2930:	00130119 	andseq	r0, r3, r9, lsl r1
    2934:	00342d00 	eorseq	r2, r4, r0, lsl #26
    2938:	0b3a0803 	bleq	e8494c <__bss_end__+0xd3b904>
    293c:	0b390b3b 	bleq	e45630 <__bss_end__+0xcfc5e8>
    2940:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2944:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    2948:	3a0e0301 	bcc	383554 <__bss_end__+0x23a50c>
    294c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2950:	1119270b 	tstne	r9, fp, lsl #14
    2954:	40061201 	andmi	r1, r6, r1, lsl #4
    2958:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    295c:	00001301 	andeq	r1, r0, r1, lsl #6
    2960:	11010b2f 	tstne	r1, pc, lsr #22
    2964:	00061201 	andeq	r1, r6, r1, lsl #4
    2968:	012e3000 			; <UNDEFINED> instruction: 0x012e3000
    296c:	0b3a0e03 	bleq	e86180 <__bss_end__+0xd3d138>
    2970:	0b39053b 	bleq	e43e64 <__bss_end__+0xcfae1c>
    2974:	01111927 	tsteq	r1, r7, lsr #18
    2978:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    297c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2980:	31000013 	tstcc	r0, r3, lsl r0
    2984:	08030005 	stmdaeq	r3, {r0, r2}
    2988:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    298c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2990:	00001802 	andeq	r1, r0, r2, lsl #16
    2994:	03003432 	movweq	r3, #1074	; 0x432
    2998:	3b0b3a0e 	blcc	2d11d8 <__bss_end__+0x188190>
    299c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    29a0:	00180213 	andseq	r0, r8, r3, lsl r2
    29a4:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
    29a8:	0b3a0e03 	bleq	e861bc <__bss_end__+0xd3d174>
    29ac:	0b390b3b 	bleq	e456a0 <__bss_end__+0xcfc658>
    29b0:	01111927 	tsteq	r1, r7, lsr #18
    29b4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    29b8:	00194297 	mulseq	r9, r7, r2
    29bc:	11010000 	mrsne	r0, (UNDEF: 1)
    29c0:	130e2501 	movwne	r2, #58625	; 0xe501
    29c4:	1b0e030b 	blne	3835f8 <__bss_end__+0x23a5b0>
    29c8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    29cc:	00171006 	andseq	r1, r7, r6
    29d0:	00240200 	eoreq	r0, r4, r0, lsl #4
    29d4:	0b3e0b0b 	bleq	f85608 <__bss_end__+0xe3c5c0>
    29d8:	00000e03 	andeq	r0, r0, r3, lsl #28
    29dc:	0b002403 	bleq	b9f0 <errno+0xb9ec>
    29e0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    29e4:	04000008 	streq	r0, [r0], #-8
    29e8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    29ec:	0b3b0b3a 	bleq	ec56dc <__bss_end__+0xd7c694>
    29f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    29f4:	04050000 	streq	r0, [r5], #-0
    29f8:	3e0e0301 	cdpcc	3, 0, cr0, cr14, cr1, {0}
    29fc:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2a00:	3b0b3a13 	blcc	2d1254 <__bss_end__+0x18820c>
    2a04:	010b390b 	tsteq	fp, fp, lsl #18
    2a08:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2a0c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    2a10:	00000b1c 	andeq	r0, r0, ip, lsl fp
    2a14:	49002607 	stmdbmi	r0, {r0, r1, r2, r9, sl, sp}
    2a18:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2a1c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2a20:	0b3b0b3a 	bleq	ec5710 <__bss_end__+0xd7c6c8>
    2a24:	13490b39 	movtne	r0, #39737	; 0x9b39
    2a28:	00001802 	andeq	r1, r0, r2, lsl #16
    2a2c:	3e010409 	cdpcc	4, 0, cr0, cr1, cr9, {0}
    2a30:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2a34:	3b0b3a13 	blcc	2d1288 <__bss_end__+0x188240>
    2a38:	010b390b 	tsteq	fp, fp, lsl #18
    2a3c:	0a000013 	beq	2a90 <errno+0x2a8c>
    2a40:	13490101 	movtne	r0, #37121	; 0x9101
    2a44:	00001301 	andeq	r1, r0, r1, lsl #6
    2a48:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    2a4c:	000b2f13 	andeq	r2, fp, r3, lsl pc
    2a50:	01130c00 	tsteq	r3, r0, lsl #24
    2a54:	0b0b0e03 	bleq	2c6268 <__bss_end__+0x17d220>
    2a58:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2a5c:	13010b39 	movwne	r0, #6969	; 0x1b39
    2a60:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    2a64:	3a0e0300 	bcc	38366c <__bss_end__+0x23a624>
    2a68:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2a6c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2a70:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    2a74:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2a78:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2a7c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2a80:	130f0000 	movwne	r0, #61440	; 0xf000
    2a84:	0b0e0301 	bleq	383690 <__bss_end__+0x23a648>
    2a88:	3b0b3a05 	blcc	2d12a4 <__bss_end__+0x18825c>
    2a8c:	010b390b 	tsteq	fp, fp, lsl #18
    2a90:	10000013 	andne	r0, r0, r3, lsl r0
    2a94:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    2a98:	0b3b0b3a 	bleq	ec5788 <__bss_end__+0xd7c740>
    2a9c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2aa0:	00000b38 	andeq	r0, r0, r8, lsr fp
    2aa4:	03000d11 	movweq	r0, #3345	; 0xd11
    2aa8:	3b0b3a0e 	blcc	2d12e8 <__bss_end__+0x1882a0>
    2aac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2ab0:	00053813 	andeq	r3, r5, r3, lsl r8
    2ab4:	00161200 	andseq	r1, r6, r0, lsl #4
    2ab8:	0b3a0e03 	bleq	e862cc <__bss_end__+0xd3d284>
    2abc:	0b390b3b 	bleq	e457b0 <__bss_end__+0xcfc768>
    2ac0:	01881349 	orreq	r1, r8, r9, asr #6
    2ac4:	13000005 	movwne	r0, #5
    2ac8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2acc:	0b3b0b3a 	bleq	ec57bc <__bss_end__+0xd7c774>
    2ad0:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ad4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2ad8:	0f140000 	svceq	0x00140000
    2adc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2ae0:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    2ae4:	0b0b000f 	bleq	2c2b28 <__bss_end__+0x179ae0>
    2ae8:	13160000 	tstne	r6, #0
    2aec:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    2af0:	17000019 	smladne	r0, r9, r0, r0
    2af4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2af8:	0b3a0b0b 	bleq	e8572c <__bss_end__+0xd3c6e4>
    2afc:	0b390b3b 	bleq	e457f0 <__bss_end__+0xcfc7a8>
    2b00:	00001301 	andeq	r1, r0, r1, lsl #6
    2b04:	03000d18 	movweq	r0, #3352	; 0xd18
    2b08:	3b0b3a0e 	blcc	2d1348 <__bss_end__+0x188300>
    2b0c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2b10:	000b3813 	andeq	r3, fp, r3, lsl r8
    2b14:	01151900 	tsteq	r5, r0, lsl #18
    2b18:	13491927 	movtne	r1, #39207	; 0x9927
    2b1c:	00001301 	andeq	r1, r0, r1, lsl #6
    2b20:	4900051a 	stmdbmi	r0, {r1, r3, r4, r8, sl}
    2b24:	1b000013 	blne	2b78 <errno+0x2b74>
    2b28:	0b0b0113 	bleq	2c2f7c <__bss_end__+0x179f34>
    2b2c:	0b3b0b3a 	bleq	ec581c <__bss_end__+0xd7c7d4>
    2b30:	13010b39 	movwne	r0, #6969	; 0x1b39
    2b34:	171c0000 	ldrne	r0, [ip, -r0]
    2b38:	3a0b0b01 	bcc	2c5744 <__bss_end__+0x17c6fc>
    2b3c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b40:	0013010b 	andseq	r0, r3, fp, lsl #2
    2b44:	000d1d00 	andeq	r1, sp, r0, lsl #26
    2b48:	0b3a0e03 	bleq	e8635c <__bss_end__+0xd3d314>
    2b4c:	0b390b3b 	bleq	e45840 <__bss_end__+0xcfc7f8>
    2b50:	00001349 	andeq	r1, r0, r9, asr #6
    2b54:	03000d1e 	movweq	r0, #3358	; 0xd1e
    2b58:	3b0b3a08 	blcc	2d1380 <__bss_end__+0x188338>
    2b5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2b60:	1f000013 	svcne	0x00000013
    2b64:	1349000d 	movtne	r0, #36877	; 0x900d
    2b68:	00000b38 	andeq	r0, r0, r8, lsr fp
    2b6c:	3f012e20 	svccc	0x00012e20
    2b70:	3a0e0319 	bcc	3837dc <__bss_end__+0x23a794>
    2b74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b78:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2b7c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2b80:	96184006 	ldrls	r4, [r8], -r6
    2b84:	13011942 	movwne	r1, #6466	; 0x1942
    2b88:	05210000 	streq	r0, [r1, #-0]!
    2b8c:	3a0e0300 	bcc	383794 <__bss_end__+0x23a74c>
    2b90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b94:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2b98:	22000018 	andcs	r0, r0, #24
    2b9c:	08030005 	stmdaeq	r3, {r0, r2}
    2ba0:	0b3b0b3a 	bleq	ec5890 <__bss_end__+0xd7c848>
    2ba4:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ba8:	00001802 	andeq	r1, r0, r2, lsl #16
    2bac:	03003423 	movweq	r3, #1059	; 0x423
    2bb0:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    2bb4:	00180219 	andseq	r0, r8, r9, lsl r2
    2bb8:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
    2bbc:	0b3a0e03 	bleq	e863d0 <__bss_end__+0xd3d388>
    2bc0:	0b390b3b 	bleq	e458b4 <__bss_end__+0xcfc86c>
    2bc4:	13491927 	movtne	r1, #39207	; 0x9927
    2bc8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2bcc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2bd0:	00130119 	andseq	r0, r3, r9, lsl r1
    2bd4:	11010000 	mrsne	r0, (UNDEF: 1)
    2bd8:	130e2501 	movwne	r2, #58625	; 0xe501
    2bdc:	1b0e030b 	blne	383810 <__bss_end__+0x23a7c8>
    2be0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    2be4:	00171006 	andseq	r1, r7, r6
    2be8:	00240200 	eoreq	r0, r4, r0, lsl #4
    2bec:	0b3e0b0b 	bleq	f85820 <__bss_end__+0xe3c7d8>
    2bf0:	00000e03 	andeq	r0, r0, r3, lsl #28
    2bf4:	03001603 	movweq	r1, #1539	; 0x603
    2bf8:	3b0b3a0e 	blcc	2d1438 <__bss_end__+0x1883f0>
    2bfc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2c00:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    2c04:	13490035 	movtne	r0, #36917	; 0x9035
    2c08:	24050000 	strcs	r0, [r5], #-0
    2c0c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2c10:	0008030b 	andeq	r0, r8, fp, lsl #6
    2c14:	00260600 	eoreq	r0, r6, r0, lsl #12
    2c18:	00001349 	andeq	r1, r0, r9, asr #6
    2c1c:	0b000f07 	bleq	6840 <errno+0x683c>
    2c20:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    2c24:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2c28:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2c2c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2c30:	13090000 	movwne	r0, #36864	; 0x9000
    2c34:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    2c38:	0a000019 	beq	2ca4 <errno+0x2ca0>
    2c3c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2c40:	0b3b0b3a 	bleq	ec5930 <__bss_end__+0xd7c8e8>
    2c44:	13490b39 	movtne	r0, #39737	; 0x9b39
    2c48:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2c4c:	0f0b0000 	svceq	0x000b0000
    2c50:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2c54:	0c000013 	stceq	0, cr0, [r0], {19}
    2c58:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2c5c:	0b3a0b0b 	bleq	e85890 <__bss_end__+0xd3c848>
    2c60:	0b39053b 	bleq	e44154 <__bss_end__+0xcfb10c>
    2c64:	00001301 	andeq	r1, r0, r1, lsl #6
    2c68:	03000d0d 	movweq	r0, #3341	; 0xd0d
    2c6c:	3b0b3a0e 	blcc	2d14ac <__bss_end__+0x188464>
    2c70:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2c74:	000b3813 	andeq	r3, fp, r3, lsl r8
    2c78:	01130e00 	tsteq	r3, r0, lsl #28
    2c7c:	0b0b0e03 	bleq	2c6490 <__bss_end__+0x17d448>
    2c80:	0b3b0b3a 	bleq	ec5970 <__bss_end__+0xd7c928>
    2c84:	13010b39 	movwne	r0, #6969	; 0x1b39
    2c88:	0d0f0000 	stceq	0, cr0, [pc, #-0]	; 2c90 <errno+0x2c8c>
    2c8c:	3a080300 	bcc	203894 <__bss_end__+0xba84c>
    2c90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c94:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2c98:	1000000b 	andne	r0, r0, fp
    2c9c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2ca0:	0b3b0b3a 	bleq	ec5990 <__bss_end__+0xd7c948>
    2ca4:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ca8:	00000b38 	andeq	r0, r0, r8, lsr fp
    2cac:	03010411 	movweq	r0, #5137	; 0x1411
    2cb0:	0b0b3e0e 	bleq	2d24f0 <__bss_end__+0x1894a8>
    2cb4:	3a13490b 	bcc	4d50e8 <__bss_end__+0x38c0a0>
    2cb8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2cbc:	0013010b 	andseq	r0, r3, fp, lsl #2
    2cc0:	00281200 	eoreq	r1, r8, r0, lsl #4
    2cc4:	0b1c0e03 	bleq	7064d8 <__bss_end__+0x5bd490>
    2cc8:	15130000 	ldrne	r0, [r3, #-0]
    2ccc:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
    2cd0:	00130113 	andseq	r0, r3, r3, lsl r1
    2cd4:	00051400 	andeq	r1, r5, r0, lsl #8
    2cd8:	00001349 	andeq	r1, r0, r9, asr #6
    2cdc:	27011515 	smladcs	r1, r5, r5, r1
    2ce0:	00130119 	andseq	r0, r3, r9, lsl r1
    2ce4:	01131600 	tsteq	r3, r0, lsl #12
    2ce8:	0b3a0b0b 	bleq	e8591c <__bss_end__+0xd3c8d4>
    2cec:	0b390b3b 	bleq	e459e0 <__bss_end__+0xcfc998>
    2cf0:	00001301 	andeq	r1, r0, r1, lsl #6
    2cf4:	0b011717 	bleq	48958 <buf+0x400>
    2cf8:	3b0b3a0b 	blcc	2d152c <__bss_end__+0x1884e4>
    2cfc:	010b390b 	tsteq	fp, fp, lsl #18
    2d00:	18000013 	stmdane	r0, {r0, r1, r4}
    2d04:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2d08:	0b3b0b3a 	bleq	ec59f8 <__bss_end__+0xd7c9b0>
    2d0c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2d10:	0d190000 	ldceq	0, cr0, [r9, #-0]
    2d14:	3a080300 	bcc	20391c <__bss_end__+0xba8d4>
    2d18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d1c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2d20:	000d1a00 	andeq	r1, sp, r0, lsl #20
    2d24:	0b381349 	bleq	e07a50 <__bss_end__+0xcbea08>
    2d28:	131b0000 	tstne	fp, #0
    2d2c:	3a0b0b01 	bcc	2c5938 <__bss_end__+0x17c8f0>
    2d30:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d34:	0013010b 	andseq	r0, r3, fp, lsl #2
    2d38:	00261c00 	eoreq	r1, r6, r0, lsl #24
    2d3c:	011d0000 	tsteq	sp, r0
    2d40:	01134901 	tsteq	r3, r1, lsl #18
    2d44:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2d48:	13490021 	movtne	r0, #36897	; 0x9021
    2d4c:	00000b2f 	andeq	r0, r0, pc, lsr #22
    2d50:	0300341f 	movweq	r3, #1055	; 0x41f
    2d54:	3b0b3a0e 	blcc	2d1594 <__bss_end__+0x18854c>
    2d58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2d5c:	00180213 	andseq	r0, r8, r3, lsl r2
    2d60:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
    2d64:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2d68:	0b3b0b3a 	bleq	ec5a58 <__bss_end__+0xd7ca10>
    2d6c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2d70:	01111349 	tsteq	r1, r9, asr #6
    2d74:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2d78:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2d7c:	21000013 	tstcs	r0, r3, lsl r0
    2d80:	08030005 	stmdaeq	r3, {r0, r2}
    2d84:	0b3b0b3a 	bleq	ec5a74 <__bss_end__+0xd7ca2c>
    2d88:	13490b39 	movtne	r0, #39737	; 0x9b39
    2d8c:	00001802 	andeq	r1, r0, r2, lsl #16
    2d90:	03000522 	movweq	r0, #1314	; 0x522
    2d94:	3b0b3a0e 	blcc	2d15d4 <__bss_end__+0x18858c>
    2d98:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2d9c:	00180213 	andseq	r0, r8, r3, lsl r2
    2da0:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
    2da4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2da8:	0b3b0b3a 	bleq	ec5a98 <__bss_end__+0xd7ca50>
    2dac:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2db0:	01111349 	tsteq	r1, r9, asr #6
    2db4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2db8:	00194296 	mulseq	r9, r6, r2
    2dbc:	00342400 	eorseq	r2, r4, r0, lsl #8
    2dc0:	0b3a0803 	bleq	e84dd4 <__bss_end__+0xd3bd8c>
    2dc4:	0b390b3b 	bleq	e45ab8 <__bss_end__+0xcfca70>
    2dc8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2dcc:	01000000 	mrseq	r0, (UNDEF: 0)
    2dd0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2dd4:	0e030b13 	vmoveq.32	d3[0], r0
    2dd8:	01110e1b 	tsteq	r1, fp, lsl lr
    2ddc:	17100612 			; <UNDEFINED> instruction: 0x17100612
    2de0:	24020000 	strcs	r0, [r2], #-0
    2de4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2de8:	000e030b 	andeq	r0, lr, fp, lsl #6
    2dec:	00160300 	andseq	r0, r6, r0, lsl #6
    2df0:	0b3a0e03 	bleq	e86604 <__bss_end__+0xd3d5bc>
    2df4:	0b390b3b 	bleq	e45ae8 <__bss_end__+0xcfcaa0>
    2df8:	00001349 	andeq	r1, r0, r9, asr #6
    2dfc:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
    2e00:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2e04:	0b0b0024 	bleq	2c2e9c <__bss_end__+0x179e54>
    2e08:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2e0c:	26060000 	strcs	r0, [r6], -r0
    2e10:	00134900 	andseq	r4, r3, r0, lsl #18
    2e14:	000f0700 	andeq	r0, pc, r0, lsl #14
    2e18:	00000b0b 	andeq	r0, r0, fp, lsl #22
    2e1c:	03001608 	movweq	r1, #1544	; 0x608
    2e20:	3b0b3a0e 	blcc	2d1660 <__bss_end__+0x188618>
    2e24:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2e28:	09000013 	stmdbeq	r0, {r0, r1, r4}
    2e2c:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    2e30:	0000193c 	andeq	r1, r0, ip, lsr r9
    2e34:	0300340a 	movweq	r3, #1034	; 0x40a
    2e38:	3b0b3a0e 	blcc	2d1678 <__bss_end__+0x188630>
    2e3c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e40:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2e44:	0b000019 	bleq	2eb0 <errno+0x2eac>
    2e48:	0b0b000f 	bleq	2c2e8c <__bss_end__+0x179e44>
    2e4c:	00001349 	andeq	r1, r0, r9, asr #6
    2e50:	0301130c 	movweq	r1, #4876	; 0x130c
    2e54:	3a0b0b0e 	bcc	2c5a94 <__bss_end__+0x17ca4c>
    2e58:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2e5c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2e60:	000d0d00 	andeq	r0, sp, r0, lsl #26
    2e64:	0b3a0e03 	bleq	e86678 <__bss_end__+0xd3d630>
    2e68:	0b39053b 	bleq	e4435c <__bss_end__+0xcfb314>
    2e6c:	0b381349 	bleq	e07b98 <__bss_end__+0xcbeb50>
    2e70:	130e0000 	movwne	r0, #57344	; 0xe000
    2e74:	0b0e0301 	bleq	383a80 <__bss_end__+0x23aa38>
    2e78:	3b0b3a0b 	blcc	2d16ac <__bss_end__+0x188664>
    2e7c:	010b390b 	tsteq	fp, fp, lsl #18
    2e80:	0f000013 	svceq	0x00000013
    2e84:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    2e88:	0b3b0b3a 	bleq	ec5b78 <__bss_end__+0xd7cb30>
    2e8c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2e90:	00000b38 	andeq	r0, r0, r8, lsr fp
    2e94:	03000d10 	movweq	r0, #3344	; 0xd10
    2e98:	3b0b3a0e 	blcc	2d16d8 <__bss_end__+0x188690>
    2e9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2ea0:	000b3813 	andeq	r3, fp, r3, lsl r8
    2ea4:	01041100 	mrseq	r1, (UNDEF: 20)
    2ea8:	0b3e0e03 	bleq	f866bc <__bss_end__+0xe3d674>
    2eac:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2eb0:	0b3b0b3a 	bleq	ec5ba0 <__bss_end__+0xd7cb58>
    2eb4:	13010b39 	movwne	r0, #6969	; 0x1b39
    2eb8:	28120000 	ldmdacs	r2, {}	; <UNPREDICTABLE>
    2ebc:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    2ec0:	1300000b 	movwne	r0, #11
    2ec4:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    2ec8:	13011349 	movwne	r1, #4937	; 0x1349
    2ecc:	05140000 	ldreq	r0, [r4, #-0]
    2ed0:	00134900 	andseq	r4, r3, r0, lsl #18
    2ed4:	01151500 	tsteq	r5, r0, lsl #10
    2ed8:	13011927 	movwne	r1, #6439	; 0x1927
    2edc:	13160000 	tstne	r6, #0
    2ee0:	3a0b0b01 	bcc	2c5aec <__bss_end__+0x17caa4>
    2ee4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ee8:	0013010b 	andseq	r0, r3, fp, lsl #2
    2eec:	01171700 	tsteq	r7, r0, lsl #14
    2ef0:	0b3a0b0b 	bleq	e85b24 <__bss_end__+0xd3cadc>
    2ef4:	0b390b3b 	bleq	e45be8 <__bss_end__+0xcfcba0>
    2ef8:	00001301 	andeq	r1, r0, r1, lsl #6
    2efc:	03000d18 	movweq	r0, #3352	; 0xd18
    2f00:	3b0b3a0e 	blcc	2d1740 <__bss_end__+0x1886f8>
    2f04:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2f08:	19000013 	stmdbne	r0, {r0, r1, r4}
    2f0c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    2f10:	0b3b0b3a 	bleq	ec5c00 <__bss_end__+0xd7cbb8>
    2f14:	13490b39 	movtne	r0, #39737	; 0x9b39
    2f18:	0d1a0000 	ldceq	0, cr0, [sl, #-0]
    2f1c:	38134900 	ldmdacc	r3, {r8, fp, lr}
    2f20:	1b00000b 	blne	2f54 <errno+0x2f50>
    2f24:	0b0b0113 	bleq	2c3378 <__bss_end__+0x17a330>
    2f28:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2f2c:	13010b39 	movwne	r0, #6969	; 0x1b39
    2f30:	261c0000 	ldrcs	r0, [ip], -r0
    2f34:	1d000000 	stcne	0, cr0, [r0, #-0]
    2f38:	13490101 	movtne	r0, #37121	; 0x9101
    2f3c:	00001301 	andeq	r1, r0, r1, lsl #6
    2f40:	4900211e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sp}
    2f44:	000b2f13 	andeq	r2, fp, r3, lsl pc
    2f48:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
    2f4c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2f50:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2f54:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2f58:	01111349 	tsteq	r1, r9, asr #6
    2f5c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2f60:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2f64:	20000013 	andcs	r0, r0, r3, lsl r0
    2f68:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2f6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2f70:	13490b39 	movtne	r0, #39737	; 0x9b39
    2f74:	00001802 	andeq	r1, r0, r2, lsl #16
    2f78:	03000521 	movweq	r0, #1313	; 0x521
    2f7c:	3b0b3a08 	blcc	2d17a4 <__bss_end__+0x18875c>
    2f80:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2f84:	00180213 	andseq	r0, r8, r3, lsl r2
    2f88:	00342200 	eorseq	r2, r4, r0, lsl #4
    2f8c:	13490e03 	movtne	r0, #40451	; 0x9e03
    2f90:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    2f94:	34230000 	strtcc	r0, [r3], #-0
    2f98:	3a0e0300 	bcc	383ba0 <__bss_end__+0x23ab58>
    2f9c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2fa0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2fa4:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
    2fa8:	0e03012e 	adfeqsp	f0, f3, #0.5
    2fac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2fb0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2fb4:	01111349 	tsteq	r1, r9, asr #6
    2fb8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    2fbc:	01194296 			; <UNDEFINED> instruction: 0x01194296
    2fc0:	25000013 	strcs	r0, [r0, #-19]	; 0xffffffed
    2fc4:	0e03012e 	adfeqsp	f0, f3, #0.5
    2fc8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2fcc:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2fd0:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2fd4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2fd8:	00130119 	andseq	r0, r3, r9, lsl r1
    2fdc:	00342600 	eorseq	r2, r4, r0, lsl #12
    2fe0:	0b3a0803 	bleq	e84ff4 <__bss_end__+0xd3bfac>
    2fe4:	0b39053b 	bleq	e444d8 <__bss_end__+0xcfb490>
    2fe8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2fec:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    2ff0:	3a0e0301 	bcc	383bfc <__bss_end__+0x23abb4>
    2ff4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ff8:	1119270b 	tstne	r9, fp, lsl #14
    2ffc:	40061201 	andmi	r1, r6, r1, lsl #4
    3000:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3004:	00001301 	andeq	r1, r0, r1, lsl #6
    3008:	03000528 	movweq	r0, #1320	; 0x528
    300c:	3b0b3a08 	blcc	2d1834 <__bss_end__+0x1887ec>
    3010:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3014:	00180213 	andseq	r0, r8, r3, lsl r2
    3018:	00342900 	eorseq	r2, r4, r0, lsl #18
    301c:	0b3a0e03 	bleq	e86830 <__bss_end__+0xd3d7e8>
    3020:	0b390b3b 	bleq	e45d14 <__bss_end__+0xcfcccc>
    3024:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3028:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
    302c:	03193f01 	tsteq	r9, #1, 30
    3030:	3b0b3a0e 	blcc	2d1870 <__bss_end__+0x188828>
    3034:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    3038:	11134919 	tstne	r3, r9, lsl r9
    303c:	40061201 	andmi	r1, r6, r1, lsl #4
    3040:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3044:	00001301 	andeq	r1, r0, r1, lsl #6
    3048:	0300342b 	movweq	r3, #1067	; 0x42b
    304c:	3b0b3a08 	blcc	2d1874 <__bss_end__+0x18882c>
    3050:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3054:	00180213 	andseq	r0, r8, r3, lsl r2
    3058:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    305c:	0b3a0e03 	bleq	e86870 <__bss_end__+0xd3d828>
    3060:	0b390b3b 	bleq	e45d54 <__bss_end__+0xcfcd0c>
    3064:	01111927 	tsteq	r1, r7, lsr #18
    3068:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    306c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3070:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    3074:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    3078:	0b3b0b3a 	bleq	ec5d68 <__bss_end__+0xd7cd20>
    307c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3080:	00001802 	andeq	r1, r0, r2, lsl #16
    3084:	03012e2e 	movweq	r2, #7726	; 0x1e2e
    3088:	3b0b3a0e 	blcc	2d18c8 <__bss_end__+0x188880>
    308c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    3090:	11134919 	tstne	r3, r9, lsl r9
    3094:	40061201 	andmi	r1, r6, r1, lsl #4
    3098:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    309c:	00001301 	andeq	r1, r0, r1, lsl #6
    30a0:	03012e2f 	movweq	r2, #7727	; 0x1e2f
    30a4:	3b0b3a0e 	blcc	2d18e4 <__bss_end__+0x18889c>
    30a8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    30ac:	11134919 	tstne	r3, r9, lsl r9
    30b0:	40061201 	andmi	r1, r6, r1, lsl #4
    30b4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    30b8:	00001301 	andeq	r1, r0, r1, lsl #6
    30bc:	01110100 	tsteq	r1, r0, lsl #2
    30c0:	0b130e25 	bleq	4c695c <__bss_end__+0x37d914>
    30c4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    30c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    30cc:	00001710 	andeq	r1, r0, r0, lsl r7
    30d0:	03001602 	movweq	r1, #1538	; 0x602
    30d4:	3b0b3a0e 	blcc	2d1914 <__bss_end__+0x1888cc>
    30d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    30dc:	03000013 	movweq	r0, #19
    30e0:	13490035 	movtne	r0, #36917	; 0x9035
    30e4:	24040000 	strcs	r0, [r4], #-0
    30e8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    30ec:	000e030b 	andeq	r0, lr, fp, lsl #6
    30f0:	00240500 	eoreq	r0, r4, r0, lsl #10
    30f4:	0b3e0b0b 	bleq	f85d28 <__bss_end__+0xe3cce0>
    30f8:	00000803 	andeq	r0, r0, r3, lsl #16
    30fc:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    3100:	07000013 	smladeq	r0, r3, r0, r0
    3104:	0b0b000f 	bleq	2c3148 <__bss_end__+0x17a100>
    3108:	16080000 	strne	r0, [r8], -r0
    310c:	3a0e0300 	bcc	383d14 <__bss_end__+0x23accc>
    3110:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3114:	0013490b 	andseq	r4, r3, fp, lsl #18
    3118:	00130900 	andseq	r0, r3, r0, lsl #18
    311c:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    3120:	340a0000 	strcc	r0, [sl], #-0
    3124:	3a0e0300 	bcc	383d2c <__bss_end__+0x23ace4>
    3128:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    312c:	3f13490b 	svccc	0x0013490b
    3130:	00193c19 	andseq	r3, r9, r9, lsl ip
    3134:	000f0b00 	andeq	r0, pc, r0, lsl #22
    3138:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    313c:	130c0000 	movwne	r0, #49152	; 0xc000
    3140:	0b0e0301 	bleq	383d4c <__bss_end__+0x23ad04>
    3144:	3b0b3a0b 	blcc	2d1978 <__bss_end__+0x188930>
    3148:	010b3905 	tsteq	fp, r5, lsl #18
    314c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    3150:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    3154:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3158:	13490b39 	movtne	r0, #39737	; 0x9b39
    315c:	00000b38 	andeq	r0, r0, r8, lsr fp
    3160:	0301130e 	movweq	r1, #4878	; 0x130e
    3164:	3a0b0b0e 	bcc	2c5da4 <__bss_end__+0x17cd5c>
    3168:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    316c:	0013010b 	andseq	r0, r3, fp, lsl #2
    3170:	000d0f00 	andeq	r0, sp, r0, lsl #30
    3174:	0b3a0803 	bleq	e85188 <__bss_end__+0xd3c140>
    3178:	0b390b3b 	bleq	e45e6c <__bss_end__+0xcfce24>
    317c:	0b381349 	bleq	e07ea8 <__bss_end__+0xcbee60>
    3180:	0d100000 	ldceq	0, cr0, [r0, #-0]
    3184:	3a0e0300 	bcc	383d8c <__bss_end__+0x23ad44>
    3188:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    318c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    3190:	1100000b 	tstne	r0, fp
    3194:	0e030104 	adfeqs	f0, f3, f4
    3198:	0b0b0b3e 	bleq	2c5e98 <__bss_end__+0x17ce50>
    319c:	0b3a1349 	bleq	e87ec8 <__bss_end__+0xd3ee80>
    31a0:	0b390b3b 	bleq	e45e94 <__bss_end__+0xcfce4c>
    31a4:	00001301 	andeq	r1, r0, r1, lsl #6
    31a8:	03002812 	movweq	r2, #2066	; 0x812
    31ac:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    31b0:	01151300 	tsteq	r5, r0, lsl #6
    31b4:	13491927 	movtne	r1, #39207	; 0x9927
    31b8:	00001301 	andeq	r1, r0, r1, lsl #6
    31bc:	49000514 	stmdbmi	r0, {r2, r4, r8, sl}
    31c0:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    31c4:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    31c8:	00001301 	andeq	r1, r0, r1, lsl #6
    31cc:	0b011316 	bleq	47e2c <static_tls+0x3e2c>
    31d0:	3b0b3a0b 	blcc	2d1a04 <__bss_end__+0x1889bc>
    31d4:	010b390b 	tsteq	fp, fp, lsl #18
    31d8:	17000013 	smladne	r0, r3, r0, r0
    31dc:	0b0b0117 	bleq	2c3640 <__bss_end__+0x17a5f8>
    31e0:	0b3b0b3a 	bleq	ec5ed0 <__bss_end__+0xd7ce88>
    31e4:	13010b39 	movwne	r0, #6969	; 0x1b39
    31e8:	0d180000 	ldceq	0, cr0, [r8, #-0]
    31ec:	3a0e0300 	bcc	383df4 <__bss_end__+0x23adac>
    31f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    31f4:	0013490b 	andseq	r4, r3, fp, lsl #18
    31f8:	000d1900 	andeq	r1, sp, r0, lsl #18
    31fc:	0b3a0803 	bleq	e85210 <__bss_end__+0xd3c1c8>
    3200:	0b390b3b 	bleq	e45ef4 <__bss_end__+0xcfceac>
    3204:	00001349 	andeq	r1, r0, r9, asr #6
    3208:	49000d1a 	stmdbmi	r0, {r1, r3, r4, r8, sl, fp}
    320c:	000b3813 	andeq	r3, fp, r3, lsl r8
    3210:	01131b00 	tsteq	r3, r0, lsl #22
    3214:	0b3a0b0b 	bleq	e85e48 <__bss_end__+0xd3ce00>
    3218:	0b39053b 	bleq	e4470c <__bss_end__+0xcfb6c4>
    321c:	00001301 	andeq	r1, r0, r1, lsl #6
    3220:	0000261c 	andeq	r2, r0, ip, lsl r6
    3224:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    3228:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    322c:	0b3b0b3a 	bleq	ec5f1c <__bss_end__+0xd7ced4>
    3230:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3234:	01111349 	tsteq	r1, r9, asr #6
    3238:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    323c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    3240:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    3244:	08030005 	stmdaeq	r3, {r0, r2}
    3248:	0b3b0b3a 	bleq	ec5f38 <__bss_end__+0xd7cef0>
    324c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3250:	00001802 	andeq	r1, r0, r2, lsl #16
    3254:	0300051f 	movweq	r0, #1311	; 0x51f
    3258:	3b0b3a0e 	blcc	2d1a98 <__bss_end__+0x188a50>
    325c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3260:	00180213 	andseq	r0, r8, r3, lsl r2
    3264:	00342000 	eorseq	r2, r4, r0
    3268:	0b3a0e03 	bleq	e86a7c <__bss_end__+0xd3da34>
    326c:	0b390b3b 	bleq	e45f60 <__bss_end__+0xcfcf18>
    3270:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3274:	0b210000 	bleq	84327c <__bss_end__+0x6fa234>
    3278:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    327c:	22000006 	andcs	r0, r0, #6
    3280:	08030034 	stmdaeq	r3, {r2, r4, r5}
    3284:	0b3b0b3a 	bleq	ec5f74 <__bss_end__+0xd7cf2c>
    3288:	13490b39 	movtne	r0, #39737	; 0x9b39
    328c:	00001802 	andeq	r1, r0, r2, lsl #16
    3290:	01110100 	tsteq	r1, r0, lsl #2
    3294:	0b130e25 	bleq	4c6b30 <__bss_end__+0x37dae8>
    3298:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    329c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    32a0:	00001710 	andeq	r1, r0, r0, lsl r7
    32a4:	0b002402 	bleq	c2b4 <errno+0xc2b0>
    32a8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    32ac:	0300000e 	movweq	r0, #14
    32b0:	0b0b0024 	bleq	2c3348 <__bss_end__+0x17a300>
    32b4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    32b8:	16040000 	strne	r0, [r4], -r0
    32bc:	3a0e0300 	bcc	383ec4 <__bss_end__+0x23ae7c>
    32c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    32c4:	0013490b 	andseq	r4, r3, fp, lsl #18
    32c8:	000f0500 	andeq	r0, pc, r0, lsl #10
    32cc:	00000b0b 	andeq	r0, r0, fp, lsl #22
    32d0:	03001606 	movweq	r1, #1542	; 0x606
    32d4:	3b0b3a0e 	blcc	2d1b14 <__bss_end__+0x188acc>
    32d8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    32dc:	07000013 	smladeq	r0, r3, r0, r0
    32e0:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    32e4:	0000193c 	andeq	r1, r0, ip, lsr r9
    32e8:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
    32ec:	09000013 	stmdbeq	r0, {r0, r1, r4}
    32f0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    32f4:	0b3b0b3a 	bleq	ec5fe4 <__bss_end__+0xd7cf9c>
    32f8:	13490b39 	movtne	r0, #39737	; 0x9b39
    32fc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    3300:	0f0a0000 	svceq	0x000a0000
    3304:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    3308:	0b000013 	bleq	335c <errno+0x3358>
    330c:	0e030104 	adfeqs	f0, f3, f4
    3310:	0b0b0b3e 	bleq	2c6010 <__bss_end__+0x17cfc8>
    3314:	0b3a1349 	bleq	e88040 <__bss_end__+0xd3eff8>
    3318:	0b390b3b 	bleq	e4600c <__bss_end__+0xcfcfc4>
    331c:	00001301 	andeq	r1, r0, r1, lsl #6
    3320:	0300280c 	movweq	r2, #2060	; 0x80c
    3324:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    3328:	01130d00 	tsteq	r3, r0, lsl #26
    332c:	0b3a0b0b 	bleq	e85f60 <__bss_end__+0xd3cf18>
    3330:	0b390b3b 	bleq	e46024 <__bss_end__+0xcfcfdc>
    3334:	00001301 	andeq	r1, r0, r1, lsl #6
    3338:	03000d0e 	movweq	r0, #3342	; 0xd0e
    333c:	3b0b3a0e 	blcc	2d1b7c <__bss_end__+0x188b34>
    3340:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3344:	000b3813 	andeq	r3, fp, r3, lsl r8
    3348:	000d0f00 	andeq	r0, sp, r0, lsl #30
    334c:	0b3a0803 	bleq	e85360 <__bss_end__+0xd3c318>
    3350:	0b390b3b 	bleq	e46044 <__bss_end__+0xcfcffc>
    3354:	0b381349 	bleq	e08080 <__bss_end__+0xcbf038>
    3358:	17100000 	ldrne	r0, [r0, -r0]
    335c:	3a0b0b01 	bcc	2c5f68 <__bss_end__+0x17cf20>
    3360:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3364:	0013010b 	andseq	r0, r3, fp, lsl #2
    3368:	000d1100 	andeq	r1, sp, r0, lsl #2
    336c:	0b3a0e03 	bleq	e86b80 <__bss_end__+0xd3db38>
    3370:	0b390b3b 	bleq	e46064 <__bss_end__+0xcfd01c>
    3374:	00001349 	andeq	r1, r0, r9, asr #6
    3378:	03000d12 	movweq	r0, #3346	; 0xd12
    337c:	3b0b3a08 	blcc	2d1ba4 <__bss_end__+0x188b5c>
    3380:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3384:	13000013 	movwne	r0, #19
    3388:	1349000d 	movtne	r0, #36877	; 0x900d
    338c:	00000b38 	andeq	r0, r0, r8, lsr fp
    3390:	27011514 	smladcs	r1, r4, r5, r1
    3394:	01134919 	tsteq	r3, r9, lsl r9
    3398:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    339c:	13490005 	movtne	r0, #36869	; 0x9005
    33a0:	13160000 	tstne	r6, #0
    33a4:	0b0e0301 	bleq	383fb0 <__bss_end__+0x23af68>
    33a8:	3b0b3a0b 	blcc	2d1bdc <__bss_end__+0x188b94>
    33ac:	010b390b 	tsteq	fp, fp, lsl #18
    33b0:	17000013 	smladne	r0, r3, r0, r0
    33b4:	0b3e0104 	bleq	f837cc <__bss_end__+0xe3a784>
    33b8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    33bc:	0b3b0b3a 	bleq	ec60ac <__bss_end__+0xd7d064>
    33c0:	13010b39 	movwne	r0, #6969	; 0x1b39
    33c4:	01180000 	tsteq	r8, r0
    33c8:	01134901 	tsteq	r3, r1, lsl #18
    33cc:	19000013 	stmdbne	r0, {r0, r1, r4}
    33d0:	13490021 	movtne	r0, #36897	; 0x9021
    33d4:	00000b2f 	andeq	r0, r0, pc, lsr #22
    33d8:	0300341a 	movweq	r3, #1050	; 0x41a
    33dc:	3b0b3a0e 	blcc	2d1c1c <__bss_end__+0x188bd4>
    33e0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    33e4:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    33e8:	1b000018 	blne	3450 <errno+0x344c>
    33ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    33f0:	0b3b0b3a 	bleq	ec60e0 <__bss_end__+0xd7d098>
    33f4:	13490b39 	movtne	r0, #39737	; 0x9b39
    33f8:	00001802 	andeq	r1, r0, r2, lsl #16
    33fc:	03012e1c 	movweq	r2, #7708	; 0x1e1c
    3400:	3b0b3a0e 	blcc	2d1c40 <__bss_end__+0x188bf8>
    3404:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    3408:	11134919 	tstne	r3, r9, lsl r9
    340c:	40061201 	andmi	r1, r6, r1, lsl #4
    3410:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3414:	00001301 	andeq	r1, r0, r1, lsl #6
    3418:	0300051d 	movweq	r0, #1309	; 0x51d
    341c:	3b0b3a0e 	blcc	2d1c5c <__bss_end__+0x188c14>
    3420:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3424:	00180213 	andseq	r0, r8, r3, lsl r2
    3428:	00341e00 	eorseq	r1, r4, r0, lsl #28
    342c:	13490e03 	movtne	r0, #40451	; 0x9e03
    3430:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    3434:	0b1f0000 	bleq	7c343c <__bss_end__+0x67a3f4>
    3438:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    343c:	20000006 	andcs	r0, r0, r6
    3440:	08030034 	stmdaeq	r3, {r2, r4, r5}
    3444:	0b3b0b3a 	bleq	ec6134 <__bss_end__+0xd7d0ec>
    3448:	13490b39 	movtne	r0, #39737	; 0x9b39
    344c:	00001802 	andeq	r1, r0, r2, lsl #16
    3450:	00002621 	andeq	r2, r0, r1, lsr #12
    3454:	00052200 	andeq	r2, r5, r0, lsl #4
    3458:	0b3a0803 	bleq	e8546c <__bss_end__+0xd3c424>
    345c:	0b390b3b 	bleq	e46150 <__bss_end__+0xcfd108>
    3460:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3464:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    3468:	3a0e0301 	bcc	384074 <__bss_end__+0x23b02c>
    346c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3470:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    3474:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    3478:	97184006 	ldrls	r4, [r8, -r6]
    347c:	00001942 	andeq	r1, r0, r2, asr #18
    3480:	01110100 	tsteq	r1, r0, lsl #2
    3484:	0b130e25 	bleq	4c6d20 <__bss_end__+0x37dcd8>
    3488:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    348c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3490:	00001710 	andeq	r1, r0, r0, lsl r7
    3494:	0b002402 	bleq	c4a4 <errno+0xc4a0>
    3498:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    349c:	0300000e 	movweq	r0, #14
    34a0:	0b0b0024 	bleq	2c3538 <__bss_end__+0x17a4f0>
    34a4:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    34a8:	16040000 	strne	r0, [r4], -r0
    34ac:	3a0e0300 	bcc	3840b4 <__bss_end__+0x23b06c>
    34b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    34b4:	0013490b 	andseq	r4, r3, fp, lsl #18
    34b8:	000f0500 	andeq	r0, pc, r0, lsl #10
    34bc:	00000b0b 	andeq	r0, r0, fp, lsl #22
    34c0:	03001606 	movweq	r1, #1542	; 0x606
    34c4:	3b0b3a0e 	blcc	2d1d04 <__bss_end__+0x188cbc>
    34c8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    34cc:	07000013 	smladeq	r0, r3, r0, r0
    34d0:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    34d4:	0000193c 	andeq	r1, r0, ip, lsr r9
    34d8:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
    34dc:	09000013 	stmdbeq	r0, {r0, r1, r4}
    34e0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    34e4:	0b3b0b3a 	bleq	ec61d4 <__bss_end__+0xd7d18c>
    34e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    34ec:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    34f0:	0f0a0000 	svceq	0x000a0000
    34f4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    34f8:	0b000013 	bleq	354c <errno+0x3548>
    34fc:	0e030104 	adfeqs	f0, f3, f4
    3500:	0b0b0b3e 	bleq	2c6200 <__bss_end__+0x17d1b8>
    3504:	0b3a1349 	bleq	e88230 <__bss_end__+0xd3f1e8>
    3508:	0b390b3b 	bleq	e461fc <__bss_end__+0xcfd1b4>
    350c:	00001301 	andeq	r1, r0, r1, lsl #6
    3510:	0300280c 	movweq	r2, #2060	; 0x80c
    3514:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    3518:	01130d00 	tsteq	r3, r0, lsl #26
    351c:	0b3a0b0b 	bleq	e86150 <__bss_end__+0xd3d108>
    3520:	0b390b3b 	bleq	e46214 <__bss_end__+0xcfd1cc>
    3524:	00001301 	andeq	r1, r0, r1, lsl #6
    3528:	03000d0e 	movweq	r0, #3342	; 0xd0e
    352c:	3b0b3a0e 	blcc	2d1d6c <__bss_end__+0x188d24>
    3530:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3534:	000b3813 	andeq	r3, fp, r3, lsl r8
    3538:	000d0f00 	andeq	r0, sp, r0, lsl #30
    353c:	0b3a0803 	bleq	e85550 <__bss_end__+0xd3c508>
    3540:	0b390b3b 	bleq	e46234 <__bss_end__+0xcfd1ec>
    3544:	0b381349 	bleq	e08270 <__bss_end__+0xcbf228>
    3548:	17100000 	ldrne	r0, [r0, -r0]
    354c:	3a0b0b01 	bcc	2c6158 <__bss_end__+0x17d110>
    3550:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3554:	0013010b 	andseq	r0, r3, fp, lsl #2
    3558:	000d1100 	andeq	r1, sp, r0, lsl #2
    355c:	0b3a0e03 	bleq	e86d70 <__bss_end__+0xd3dd28>
    3560:	0b390b3b 	bleq	e46254 <__bss_end__+0xcfd20c>
    3564:	00001349 	andeq	r1, r0, r9, asr #6
    3568:	03000d12 	movweq	r0, #3346	; 0xd12
    356c:	3b0b3a08 	blcc	2d1d94 <__bss_end__+0x188d4c>
    3570:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3574:	13000013 	movwne	r0, #19
    3578:	1349000d 	movtne	r0, #36877	; 0x900d
    357c:	00000b38 	andeq	r0, r0, r8, lsr fp
    3580:	27011514 	smladcs	r1, r4, r5, r1
    3584:	01134919 	tsteq	r3, r9, lsl r9
    3588:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    358c:	13490005 	movtne	r0, #36869	; 0x9005
    3590:	13160000 	tstne	r6, #0
    3594:	0b0e0301 	bleq	3841a0 <__bss_end__+0x23b158>
    3598:	3b0b3a0b 	blcc	2d1dcc <__bss_end__+0x188d84>
    359c:	010b390b 	tsteq	fp, fp, lsl #18
    35a0:	17000013 	smladne	r0, r3, r0, r0
    35a4:	0b3e0104 	bleq	f839bc <__bss_end__+0xe3a974>
    35a8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    35ac:	0b3b0b3a 	bleq	ec629c <__bss_end__+0xd7d254>
    35b0:	13010b39 	movwne	r0, #6969	; 0x1b39
    35b4:	01180000 	tsteq	r8, r0
    35b8:	01134901 	tsteq	r3, r1, lsl #18
    35bc:	19000013 	stmdbne	r0, {r0, r1, r4}
    35c0:	13490021 	movtne	r0, #36897	; 0x9021
    35c4:	00000b2f 	andeq	r0, r0, pc, lsr #22
    35c8:	0300341a 	movweq	r3, #1050	; 0x41a
    35cc:	3b0b3a0e 	blcc	2d1e0c <__bss_end__+0x188dc4>
    35d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    35d4:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    35d8:	1b000018 	blne	3640 <errno+0x363c>
    35dc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    35e0:	0b3b0b3a 	bleq	ec62d0 <__bss_end__+0xd7d288>
    35e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    35e8:	00001802 	andeq	r1, r0, r2, lsl #16
    35ec:	03012e1c 	movweq	r2, #7708	; 0x1e1c
    35f0:	3b0b3a0e 	blcc	2d1e30 <__bss_end__+0x188de8>
    35f4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    35f8:	11134919 	tstne	r3, r9, lsl r9
    35fc:	40061201 	andmi	r1, r6, r1, lsl #4
    3600:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3604:	00001301 	andeq	r1, r0, r1, lsl #6
    3608:	0300051d 	movweq	r0, #1309	; 0x51d
    360c:	3b0b3a0e 	blcc	2d1e4c <__bss_end__+0x188e04>
    3610:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3614:	00180213 	andseq	r0, r8, r3, lsl r2
    3618:	00341e00 	eorseq	r1, r4, r0, lsl #28
    361c:	13490e03 	movtne	r0, #40451	; 0x9e03
    3620:	18021934 	stmdane	r2, {r2, r4, r5, r8, fp, ip}
    3624:	0b1f0000 	bleq	7c362c <__bss_end__+0x67a5e4>
    3628:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    362c:	20000006 	andcs	r0, r0, r6
    3630:	08030034 	stmdaeq	r3, {r2, r4, r5}
    3634:	0b3b0b3a 	bleq	ec6324 <__bss_end__+0xd7d2dc>
    3638:	13490b39 	movtne	r0, #39737	; 0x9b39
    363c:	00001802 	andeq	r1, r0, r2, lsl #16
    3640:	00002621 	andeq	r2, r0, r1, lsr #12
    3644:	00052200 	andeq	r2, r5, r0, lsl #4
    3648:	0b3a0803 	bleq	e8565c <__bss_end__+0xd3c614>
    364c:	0b390b3b 	bleq	e46340 <__bss_end__+0xcfd2f8>
    3650:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3654:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    3658:	3a0e0301 	bcc	384264 <__bss_end__+0x23b21c>
    365c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3660:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    3664:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    3668:	97184006 	ldrls	r4, [r8, -r6]
    366c:	00001942 	andeq	r1, r0, r2, asr #18
    3670:	01110100 	tsteq	r1, r0, lsl #2
    3674:	0b130e25 	bleq	4c6f10 <__bss_end__+0x37dec8>
    3678:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    367c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3680:	00001710 	andeq	r1, r0, r0, lsl r7
    3684:	0b002402 	bleq	c694 <errno+0xc690>
    3688:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    368c:	0300000e 	movweq	r0, #14
    3690:	0b0b0024 	bleq	2c3728 <__bss_end__+0x17a6e0>
    3694:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    3698:	16040000 	strne	r0, [r4], -r0
    369c:	3a0e0300 	bcc	3842a4 <__bss_end__+0x23b25c>
    36a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    36a4:	0013490b 	andseq	r4, r3, fp, lsl #18
    36a8:	000f0500 	andeq	r0, pc, r0, lsl #10
    36ac:	00000b0b 	andeq	r0, r0, fp, lsl #22
    36b0:	03001606 	movweq	r1, #1542	; 0x606
    36b4:	3b0b3a0e 	blcc	2d1ef4 <__bss_end__+0x188eac>
    36b8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    36bc:	07000013 	smladeq	r0, r3, r0, r0
    36c0:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    36c4:	0000193c 	andeq	r1, r0, ip, lsr r9
    36c8:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
    36cc:	09000013 	stmdbeq	r0, {r0, r1, r4}
    36d0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    36d4:	0b3b0b3a 	bleq	ec63c4 <__bss_end__+0xd7d37c>
    36d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    36dc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    36e0:	0f0a0000 	svceq	0x000a0000
    36e4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    36e8:	0b000013 	bleq	373c <errno+0x3738>
    36ec:	0e030104 	adfeqs	f0, f3, f4
    36f0:	0b0b0b3e 	bleq	2c63f0 <__bss_end__+0x17d3a8>
    36f4:	0b3a1349 	bleq	e88420 <__bss_end__+0xd3f3d8>
    36f8:	0b390b3b 	bleq	e463ec <__bss_end__+0xcfd3a4>
    36fc:	00001301 	andeq	r1, r0, r1, lsl #6
    3700:	0300280c 	movweq	r2, #2060	; 0x80c
    3704:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    3708:	01130d00 	tsteq	r3, r0, lsl #26
    370c:	0b3a0b0b 	bleq	e86340 <__bss_end__+0xd3d2f8>
    3710:	0b390b3b 	bleq	e46404 <__bss_end__+0xcfd3bc>
    3714:	00001301 	andeq	r1, r0, r1, lsl #6
    3718:	03000d0e 	movweq	r0, #3342	; 0xd0e
    371c:	3b0b3a0e 	blcc	2d1f5c <__bss_end__+0x188f14>
    3720:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3724:	000b3813 	andeq	r3, fp, r3, lsl r8
    3728:	000d0f00 	andeq	r0, sp, r0, lsl #30
    372c:	0b3a0803 	bleq	e85740 <__bss_end__+0xd3c6f8>
    3730:	0b390b3b 	bleq	e46424 <__bss_end__+0xcfd3dc>
    3734:	0b381349 	bleq	e08460 <__bss_end__+0xcbf418>
    3738:	17100000 	ldrne	r0, [r0, -r0]
    373c:	3a0b0b01 	bcc	2c6348 <__bss_end__+0x17d300>
    3740:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3744:	0013010b 	andseq	r0, r3, fp, lsl #2
    3748:	000d1100 	andeq	r1, sp, r0, lsl #2
    374c:	0b3a0e03 	bleq	e86f60 <__bss_end__+0xd3df18>
    3750:	0b390b3b 	bleq	e46444 <__bss_end__+0xcfd3fc>
    3754:	00001349 	andeq	r1, r0, r9, asr #6
    3758:	03000d12 	movweq	r0, #3346	; 0xd12
    375c:	3b0b3a08 	blcc	2d1f84 <__bss_end__+0x188f3c>
    3760:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3764:	13000013 	movwne	r0, #19
    3768:	1349000d 	movtne	r0, #36877	; 0x900d
    376c:	00000b38 	andeq	r0, r0, r8, lsr fp
    3770:	27011514 	smladcs	r1, r4, r5, r1
    3774:	01134919 	tsteq	r3, r9, lsl r9
    3778:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    377c:	13490005 	movtne	r0, #36869	; 0x9005
    3780:	13160000 	tstne	r6, #0
    3784:	0b0e0301 	bleq	384390 <__bss_end__+0x23b348>
    3788:	3b0b3a0b 	blcc	2d1fbc <__bss_end__+0x188f74>
    378c:	010b390b 	tsteq	fp, fp, lsl #18
    3790:	17000013 	smladne	r0, r3, r0, r0
    3794:	13490101 	movtne	r0, #37121	; 0x9101
    3798:	00001301 	andeq	r1, r0, r1, lsl #6
    379c:	49002118 	stmdbmi	r0, {r3, r4, r8, sp}
    37a0:	000b2f13 	andeq	r2, fp, r3, lsl pc
    37a4:	00341900 	eorseq	r1, r4, r0, lsl #18
    37a8:	0b3a0e03 	bleq	e86fbc <__bss_end__+0xd3df74>
    37ac:	0b390b3b 	bleq	e464a0 <__bss_end__+0xcfd458>
    37b0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    37b4:	00001802 	andeq	r1, r0, r2, lsl #16
    37b8:	0300341a 	movweq	r3, #1050	; 0x41a
    37bc:	3b0b3a0e 	blcc	2d1ffc <__bss_end__+0x188fb4>
    37c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    37c4:	00180213 	andseq	r0, r8, r3, lsl r2
    37c8:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    37cc:	0b3a0e03 	bleq	e86fe0 <__bss_end__+0xd3df98>
    37d0:	0b390b3b 	bleq	e464c4 <__bss_end__+0xcfd47c>
    37d4:	13491927 	movtne	r1, #39207	; 0x9927
    37d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    37dc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    37e0:	00130119 	andseq	r0, r3, r9, lsl r1
    37e4:	00051c00 	andeq	r1, r5, r0, lsl #24
    37e8:	0b3a0e03 	bleq	e86ffc <__bss_end__+0xd3dfb4>
    37ec:	0b390b3b 	bleq	e464e0 <__bss_end__+0xcfd498>
    37f0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    37f4:	341d0000 	ldrcc	r0, [sp], #-0
    37f8:	490e0300 	stmdbmi	lr, {r8, r9}
    37fc:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
    3800:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    3804:	08030034 	stmdaeq	r3, {r2, r4, r5}
    3808:	0b3b0b3a 	bleq	ec64f8 <__bss_end__+0xd7d4b0>
    380c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3810:	00001802 	andeq	r1, r0, r2, lsl #16
    3814:	0000261f 	andeq	r2, r0, pc, lsl r6
    3818:	00052000 	andeq	r2, r5, r0
    381c:	0b3a0803 	bleq	e85830 <__bss_end__+0xd3c7e8>
    3820:	0b390b3b 	bleq	e46514 <__bss_end__+0xcfd4cc>
    3824:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3828:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    382c:	3a0e0301 	bcc	384438 <__bss_end__+0x23b3f0>
    3830:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3834:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    3838:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    383c:	97184006 	ldrls	r4, [r8, -r6]
    3840:	00001942 	andeq	r1, r0, r2, asr #18
    3844:	01110100 	tsteq	r1, r0, lsl #2
    3848:	0b130e25 	bleq	4c70e4 <__bss_end__+0x37e09c>
    384c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    3850:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3854:	00001710 	andeq	r1, r0, r0, lsl r7
    3858:	03001602 	movweq	r1, #1538	; 0x602
    385c:	3b0b3a0e 	blcc	2d209c <__bss_end__+0x189054>
    3860:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3864:	03000013 	movweq	r0, #19
    3868:	0b0b0024 	bleq	2c3900 <__bss_end__+0x17a8b8>
    386c:	0e030b3e 	vmoveq.16	d3[0], r0
    3870:	24040000 	strcs	r0, [r4], #-0
    3874:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    3878:	0008030b 	andeq	r0, r8, fp, lsl #6
    387c:	000f0500 	andeq	r0, pc, r0, lsl #10
    3880:	00000b0b 	andeq	r0, r0, fp, lsl #22
    3884:	03001606 	movweq	r1, #1542	; 0x606
    3888:	3b0b3a0e 	blcc	2d20c8 <__bss_end__+0x189080>
    388c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3890:	07000013 	smladeq	r0, r3, r0, r0
    3894:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    3898:	0000193c 	andeq	r1, r0, ip, lsr r9
    389c:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
    38a0:	09000013 	stmdbeq	r0, {r0, r1, r4}
    38a4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    38a8:	0b3b0b3a 	bleq	ec6598 <__bss_end__+0xd7d550>
    38ac:	13490b39 	movtne	r0, #39737	; 0x9b39
    38b0:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    38b4:	0f0a0000 	svceq	0x000a0000
    38b8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    38bc:	0b000013 	bleq	3910 <errno+0x390c>
    38c0:	0e030104 	adfeqs	f0, f3, f4
    38c4:	0b0b0b3e 	bleq	2c65c4 <__bss_end__+0x17d57c>
    38c8:	0b3a1349 	bleq	e885f4 <__bss_end__+0xd3f5ac>
    38cc:	0b390b3b 	bleq	e465c0 <__bss_end__+0xcfd578>
    38d0:	00001301 	andeq	r1, r0, r1, lsl #6
    38d4:	0300280c 	movweq	r2, #2060	; 0x80c
    38d8:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    38dc:	01130d00 	tsteq	r3, r0, lsl #26
    38e0:	0b3a0b0b 	bleq	e86514 <__bss_end__+0xd3d4cc>
    38e4:	0b390b3b 	bleq	e465d8 <__bss_end__+0xcfd590>
    38e8:	00001301 	andeq	r1, r0, r1, lsl #6
    38ec:	03000d0e 	movweq	r0, #3342	; 0xd0e
    38f0:	3b0b3a0e 	blcc	2d2130 <__bss_end__+0x1890e8>
    38f4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    38f8:	000b3813 	andeq	r3, fp, r3, lsl r8
    38fc:	000d0f00 	andeq	r0, sp, r0, lsl #30
    3900:	0b3a0803 	bleq	e85914 <__bss_end__+0xd3c8cc>
    3904:	0b390b3b 	bleq	e465f8 <__bss_end__+0xcfd5b0>
    3908:	0b381349 	bleq	e08634 <__bss_end__+0xcbf5ec>
    390c:	17100000 	ldrne	r0, [r0, -r0]
    3910:	3a0b0b01 	bcc	2c651c <__bss_end__+0x17d4d4>
    3914:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3918:	0013010b 	andseq	r0, r3, fp, lsl #2
    391c:	000d1100 	andeq	r1, sp, r0, lsl #2
    3920:	0b3a0e03 	bleq	e87134 <__bss_end__+0xd3e0ec>
    3924:	0b390b3b 	bleq	e46618 <__bss_end__+0xcfd5d0>
    3928:	00001349 	andeq	r1, r0, r9, asr #6
    392c:	03000d12 	movweq	r0, #3346	; 0xd12
    3930:	3b0b3a08 	blcc	2d2158 <__bss_end__+0x189110>
    3934:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3938:	13000013 	movwne	r0, #19
    393c:	1349000d 	movtne	r0, #36877	; 0x900d
    3940:	00000b38 	andeq	r0, r0, r8, lsr fp
    3944:	27011514 	smladcs	r1, r4, r5, r1
    3948:	01134919 	tsteq	r3, r9, lsl r9
    394c:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    3950:	13490005 	movtne	r0, #36869	; 0x9005
    3954:	13160000 	tstne	r6, #0
    3958:	0b0e0301 	bleq	384564 <__bss_end__+0x23b51c>
    395c:	3b0b3a0b 	blcc	2d2190 <__bss_end__+0x189148>
    3960:	010b390b 	tsteq	fp, fp, lsl #18
    3964:	17000013 	smladne	r0, r3, r0, r0
    3968:	0b0b0013 	bleq	2c39bc <__bss_end__+0x17a974>
    396c:	0b3b0b3a 	bleq	ec665c <__bss_end__+0xd7d614>
    3970:	00000b39 	andeq	r0, r0, r9, lsr fp
    3974:	03003418 	movweq	r3, #1048	; 0x418
    3978:	3b0b3a0e 	blcc	2d21b8 <__bss_end__+0x189170>
    397c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3980:	00180213 	andseq	r0, r8, r3, lsl r2
    3984:	01011900 	tsteq	r1, r0, lsl #18
    3988:	13011349 	movwne	r1, #4937	; 0x1349
    398c:	211a0000 	tstcs	sl, r0
    3990:	1b000000 	blne	3998 <errno+0x3994>
    3994:	13490021 	movtne	r0, #36897	; 0x9021
    3998:	00000b2f 	andeq	r0, r0, pc, lsr #22
    399c:	0300341c 	movweq	r3, #1052	; 0x41c
    39a0:	3b0b3a0e 	blcc	2d21e0 <__bss_end__+0x189198>
    39a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    39a8:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    39ac:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    39b0:	0e03012e 	adfeqsp	f0, f3, #0.5
    39b4:	0b3b0b3a 	bleq	ec66a4 <__bss_end__+0xd7d65c>
    39b8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    39bc:	01111349 	tsteq	r1, r9, asr #6
    39c0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    39c4:	01194296 			; <UNDEFINED> instruction: 0x01194296
    39c8:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    39cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    39d0:	0b3b0b3a 	bleq	ec66c0 <__bss_end__+0xd7d678>
    39d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    39d8:	00001802 	andeq	r1, r0, r2, lsl #16
    39dc:	0300341f 	movweq	r3, #1055	; 0x41f
    39e0:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    39e4:	00180219 	andseq	r0, r8, r9, lsl r2
    39e8:	010b2000 	mrseq	r2, (UNDEF: 11)
    39ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
    39f0:	01000000 	mrseq	r0, (UNDEF: 0)
    39f4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    39f8:	0e030b13 	vmoveq.32	d3[0], r0
    39fc:	01110e1b 	tsteq	r1, fp, lsl lr
    3a00:	17100612 			; <UNDEFINED> instruction: 0x17100612
    3a04:	24020000 	strcs	r0, [r2], #-0
    3a08:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    3a0c:	000e030b 	andeq	r0, lr, fp, lsl #6
    3a10:	00160300 	andseq	r0, r6, r0, lsl #6
    3a14:	0b3a0e03 	bleq	e87228 <__bss_end__+0xd3e1e0>
    3a18:	0b390b3b 	bleq	e4670c <__bss_end__+0xcfd6c4>
    3a1c:	00001349 	andeq	r1, r0, r9, asr #6
    3a20:	0b002404 	bleq	ca38 <errno+0xca34>
    3a24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    3a28:	05000008 	streq	r0, [r0, #-8]
    3a2c:	13490026 	movtne	r0, #36902	; 0x9026
    3a30:	13060000 	movwne	r0, #24576	; 0x6000
    3a34:	0b0e0301 	bleq	384640 <__bss_end__+0x23b5f8>
    3a38:	3b0b3a0b 	blcc	2d226c <__bss_end__+0x189224>
    3a3c:	010b390b 	tsteq	fp, fp, lsl #18
    3a40:	07000013 	smladeq	r0, r3, r0, r0
    3a44:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    3a48:	0b3b0b3a 	bleq	ec6738 <__bss_end__+0xd7d6f0>
    3a4c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3a50:	00000b38 	andeq	r0, r0, r8, lsr fp
    3a54:	03000d08 	movweq	r0, #3336	; 0xd08
    3a58:	3b0b3a08 	blcc	2d2280 <__bss_end__+0x189238>
    3a5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3a60:	000b3813 	andeq	r3, fp, r3, lsl r8
    3a64:	01010900 	tsteq	r1, r0, lsl #18
    3a68:	13011349 	movwne	r1, #4937	; 0x1349
    3a6c:	210a0000 	mrscs	r0, (UNDEF: 10)
    3a70:	37134900 	ldrcc	r4, [r3, -r0, lsl #18]
    3a74:	0b00000b 	bleq	3aa8 <errno+0x3aa4>
    3a78:	0b0b000f 	bleq	2c3abc <__bss_end__+0x17aa74>
    3a7c:	00001349 	andeq	r1, r0, r9, asr #6
    3a80:	3f012e0c 	svccc	0x00012e0c
    3a84:	3a0e0319 	bcc	3846f0 <__bss_end__+0x23b6a8>
    3a88:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3a8c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    3a90:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    3a94:	96184006 	ldrls	r4, [r8], -r6
    3a98:	13011942 	movwne	r1, #6466	; 0x1942
    3a9c:	050d0000 	streq	r0, [sp, #-0]
    3aa0:	3a080300 	bcc	2046a8 <__bss_end__+0xbb660>
    3aa4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3aa8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3aac:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
    3ab0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    3ab4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3ab8:	13490b39 	movtne	r0, #39737	; 0x9b39
    3abc:	00001802 	andeq	r1, r0, r2, lsl #16
    3ac0:	0300340f 	movweq	r3, #1039	; 0x40f
    3ac4:	3b0b3a08 	blcc	2d22ec <__bss_end__+0x1892a4>
    3ac8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3acc:	00180213 	andseq	r0, r8, r3, lsl r2
    3ad0:	00341000 	eorseq	r1, r4, r0
    3ad4:	0b3a0e03 	bleq	e872e8 <__bss_end__+0xd3e2a0>
    3ad8:	0b39053b 	bleq	e44fcc <__bss_end__+0xcfbf84>
    3adc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3ae0:	26110000 	ldrcs	r0, [r1], -r0
    3ae4:	12000000 	andne	r0, r0, #0
    3ae8:	0111010b 	tsteq	r1, fp, lsl #2
    3aec:	00000612 	andeq	r0, r0, r2, lsl r6
    3af0:	03012e13 	movweq	r2, #7699	; 0x1e13
    3af4:	3b0b3a0e 	blcc	2d2334 <__bss_end__+0x1892ec>
    3af8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    3afc:	11134919 	tstne	r3, r9, lsl r9
    3b00:	40061201 	andmi	r1, r6, r1, lsl #4
    3b04:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3b08:	00001301 	andeq	r1, r0, r1, lsl #6
    3b0c:	03000a14 	movweq	r0, #2580	; 0xa14
    3b10:	3b0b3a0e 	blcc	2d2350 <__bss_end__+0x189308>
    3b14:	110b3905 	tstne	fp, r5, lsl #18
    3b18:	15000001 	strne	r0, [r0, #-1]
    3b1c:	0111010b 	tsteq	r1, fp, lsl #2
    3b20:	13010612 	movwne	r0, #5650	; 0x1612
    3b24:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    3b28:	03193f01 	tsteq	r9, #1, 30
    3b2c:	3b0b3a0e 	blcc	2d236c <__bss_end__+0x189324>
    3b30:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    3b34:	11134919 	tstne	r3, r9, lsl r9
    3b38:	40061201 	andmi	r1, r6, r1, lsl #4
    3b3c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3b40:	00001301 	andeq	r1, r0, r1, lsl #6
    3b44:	03000517 	movweq	r0, #1303	; 0x517
    3b48:	3b0b3a08 	blcc	2d2370 <__bss_end__+0x189328>
    3b4c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3b50:	00180213 	andseq	r0, r8, r3, lsl r2
    3b54:	00051800 	andeq	r1, r5, r0, lsl #16
    3b58:	0b3a0e03 	bleq	e8736c <__bss_end__+0xd3e324>
    3b5c:	0b390b3b 	bleq	e46850 <__bss_end__+0xcfd808>
    3b60:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3b64:	34190000 	ldrcc	r0, [r9], #-0
    3b68:	3a0e0300 	bcc	384770 <__bss_end__+0x23b728>
    3b6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3b70:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3b74:	1a000018 	bne	3bdc <errno+0x3bd8>
    3b78:	0e03012e 	adfeqsp	f0, f3, #0.5
    3b7c:	0b3b0b3a 	bleq	ec686c <__bss_end__+0xd7d824>
    3b80:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3b84:	01111349 	tsteq	r1, r9, asr #6
    3b88:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3b8c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    3b90:	1b000013 	blne	3be4 <errno+0x3be0>
    3b94:	08030034 	stmdaeq	r3, {r2, r4, r5}
    3b98:	0b3b0b3a 	bleq	ec6888 <__bss_end__+0xd7d840>
    3b9c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3ba0:	00001802 	andeq	r1, r0, r2, lsl #16
    3ba4:	03000a1c 	movweq	r0, #2588	; 0xa1c
    3ba8:	3b0b3a0e 	blcc	2d23e8 <__bss_end__+0x1893a0>
    3bac:	110b390b 	tstne	fp, fp, lsl #18
    3bb0:	1d000001 	stcne	0, cr0, [r0, #-4]
    3bb4:	0e03012e 	adfeqsp	f0, f3, #0.5
    3bb8:	0b3b0b3a 	bleq	ec68a8 <__bss_end__+0xd7d860>
    3bbc:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3bc0:	01111349 	tsteq	r1, r9, asr #6
    3bc4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3bc8:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3bcc:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    3bd0:	0e03012e 	adfeqsp	f0, f3, #0.5
    3bd4:	0b3b0b3a 	bleq	ec68c4 <__bss_end__+0xd7d87c>
    3bd8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3bdc:	01111349 	tsteq	r1, r9, asr #6
    3be0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3be4:	00194297 	mulseq	r9, r7, r2
    3be8:	11010000 	mrsne	r0, (UNDEF: 1)
    3bec:	130e2501 	movwne	r2, #58625	; 0xe501
    3bf0:	1b0e030b 	blne	384824 <__bss_end__+0x23b7dc>
    3bf4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    3bf8:	00171006 	andseq	r1, r7, r6
    3bfc:	00240200 	eoreq	r0, r4, r0, lsl #4
    3c00:	0b3e0b0b 	bleq	f86834 <__bss_end__+0xe3d7ec>
    3c04:	00000e03 	andeq	r0, r0, r3, lsl #28
    3c08:	03001603 	movweq	r1, #1539	; 0x603
    3c0c:	3b0b3a0e 	blcc	2d244c <__bss_end__+0x189404>
    3c10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3c14:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    3c18:	0b0b0024 	bleq	2c3cb0 <__bss_end__+0x17ac68>
    3c1c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    3c20:	26050000 	strcs	r0, [r5], -r0
    3c24:	00134900 	andseq	r4, r3, r0, lsl #18
    3c28:	01130600 	tsteq	r3, r0, lsl #12
    3c2c:	0b0b0e03 	bleq	2c7440 <__bss_end__+0x17e3f8>
    3c30:	0b3b0b3a 	bleq	ec6920 <__bss_end__+0xd7d8d8>
    3c34:	13010b39 	movwne	r0, #6969	; 0x1b39
    3c38:	0d070000 	stceq	0, cr0, [r7, #-0]
    3c3c:	3a0e0300 	bcc	384844 <__bss_end__+0x23b7fc>
    3c40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3c44:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    3c48:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    3c4c:	0b0b000f 	bleq	2c3c90 <__bss_end__+0x17ac48>
    3c50:	00001349 	andeq	r1, r0, r9, asr #6
    3c54:	3f012e09 	svccc	0x00012e09
    3c58:	3a0e0319 	bcc	3848c4 <__bss_end__+0x23b87c>
    3c5c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3c60:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    3c64:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    3c68:	96184006 	ldrls	r4, [r8], -r6
    3c6c:	13011942 	movwne	r1, #6466	; 0x1942
    3c70:	050a0000 	streq	r0, [sl, #-0]
    3c74:	3a080300 	bcc	20487c <__bss_end__+0xbb834>
    3c78:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3c7c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3c80:	0b000018 	bleq	3ce8 <errno+0x3ce4>
    3c84:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    3c88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3c8c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3c90:	00001802 	andeq	r1, r0, r2, lsl #16
    3c94:	11010b0c 	tstne	r1, ip, lsl #22
    3c98:	00061201 	andeq	r1, r6, r1, lsl #4
    3c9c:	00340d00 	eorseq	r0, r4, r0, lsl #26
    3ca0:	0b3a0e03 	bleq	e874b4 <__bss_end__+0xd3e46c>
    3ca4:	0b39053b 	bleq	e45198 <__bss_end__+0xcfc150>
    3ca8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3cac:	260e0000 	strcs	r0, [lr], -r0
    3cb0:	0f000000 	svceq	0x00000000
    3cb4:	0b0b000f 	bleq	2c3cf8 <__bss_end__+0x17acb0>
    3cb8:	34100000 	ldrcc	r0, [r0], #-0
    3cbc:	3a080300 	bcc	2048c4 <__bss_end__+0xbb87c>
    3cc0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3cc4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3cc8:	11000018 	tstne	r0, r8, lsl r0
    3ccc:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    3cd0:	0b3a0e03 	bleq	e874e4 <__bss_end__+0xd3e49c>
    3cd4:	0b390b3b 	bleq	e469c8 <__bss_end__+0xcfd980>
    3cd8:	13491927 	movtne	r1, #39207	; 0x9927
    3cdc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3ce0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    3ce4:	00130119 	andseq	r0, r3, r9, lsl r1
    3ce8:	00051200 	andeq	r1, r5, r0, lsl #4
    3cec:	0b3a0803 	bleq	e85d00 <__bss_end__+0xd3ccb8>
    3cf0:	0b390b3b 	bleq	e469e4 <__bss_end__+0xcfd99c>
    3cf4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3cf8:	05130000 	ldreq	r0, [r3, #-0]
    3cfc:	3a0e0300 	bcc	384904 <__bss_end__+0x23b8bc>
    3d00:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3d04:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3d08:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
    3d0c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    3d10:	0b3b0b3a 	bleq	ec6a00 <__bss_end__+0xd7d9b8>
    3d14:	13490b39 	movtne	r0, #39737	; 0x9b39
    3d18:	00001802 	andeq	r1, r0, r2, lsl #16
    3d1c:	03003415 	movweq	r3, #1045	; 0x415
    3d20:	3b0b3a08 	blcc	2d2548 <__bss_end__+0x189500>
    3d24:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3d28:	00180213 	andseq	r0, r8, r3, lsl r2
    3d2c:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    3d30:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3d34:	0b3b0b3a 	bleq	ec6a24 <__bss_end__+0xd7d9dc>
    3d38:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3d3c:	01111349 	tsteq	r1, r9, asr #6
    3d40:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3d44:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3d48:	17000013 	smladne	r0, r3, r0, r0
    3d4c:	0e03012e 	adfeqsp	f0, f3, #0.5
    3d50:	0b3b0b3a 	bleq	ec6a40 <__bss_end__+0xd7d9f8>
    3d54:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3d58:	01111349 	tsteq	r1, r9, asr #6
    3d5c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3d60:	01194296 			; <UNDEFINED> instruction: 0x01194296
    3d64:	18000013 	stmdane	r0, {r0, r1, r4}
    3d68:	0e03012e 	adfeqsp	f0, f3, #0.5
    3d6c:	0b3b0b3a 	bleq	ec6a5c <__bss_end__+0xd7da14>
    3d70:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3d74:	01111349 	tsteq	r1, r9, asr #6
    3d78:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3d7c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3d80:	19000013 	stmdbne	r0, {r0, r1, r4}
    3d84:	0e03012e 	adfeqsp	f0, f3, #0.5
    3d88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3d8c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3d90:	01111349 	tsteq	r1, r9, asr #6
    3d94:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3d98:	01194296 			; <UNDEFINED> instruction: 0x01194296
    3d9c:	1a000013 	bne	3df0 <errno+0x3dec>
    3da0:	0e03012e 	adfeqsp	f0, f3, #0.5
    3da4:	0b3b0b3a 	bleq	ec6a94 <__bss_end__+0xd7da4c>
    3da8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3dac:	01111349 	tsteq	r1, r9, asr #6
    3db0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    3db4:	00194297 	mulseq	r9, r7, r2
    3db8:	11010000 	mrsne	r0, (UNDEF: 1)
    3dbc:	130e2501 	movwne	r2, #58625	; 0xe501
    3dc0:	1b0e030b 	blne	3849f4 <__bss_end__+0x23b9ac>
    3dc4:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    3dc8:	00171006 	andseq	r1, r7, r6
    3dcc:	00160200 	andseq	r0, r6, r0, lsl #4
    3dd0:	0b3a0e03 	bleq	e875e4 <__bss_end__+0xd3e59c>
    3dd4:	0b390b3b 	bleq	e46ac8 <__bss_end__+0xcfda80>
    3dd8:	00001349 	andeq	r1, r0, r9, asr #6
    3ddc:	0b002403 	bleq	cdf0 <errno+0xcdec>
    3de0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    3de4:	0400000e 	streq	r0, [r0], #-14
    3de8:	13490026 	movtne	r0, #36902	; 0x9026
    3dec:	13050000 	movwne	r0, #20480	; 0x5000
    3df0:	0b0e0301 	bleq	3849fc <__bss_end__+0x23b9b4>
    3df4:	3b0b3a0b 	blcc	2d2628 <__bss_end__+0x1895e0>
    3df8:	0013010b 	andseq	r0, r3, fp, lsl #2
    3dfc:	000d0600 	andeq	r0, sp, r0, lsl #12
    3e00:	13490e03 	movtne	r0, #40451	; 0x9e03
    3e04:	19340b38 	ldmdbne	r4!, {r3, r4, r5, r8, r9, fp}
    3e08:	0f070000 	svceq	0x00070000
    3e0c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    3e10:	00240800 	eoreq	r0, r4, r0, lsl #16
    3e14:	0b3e0b0b 	bleq	f86a48 <__bss_end__+0xe3da00>
    3e18:	00000803 	andeq	r0, r0, r3, lsl #16
    3e1c:	03001609 	movweq	r1, #1545	; 0x609
    3e20:	3b0b3a0e 	blcc	2d2660 <__bss_end__+0x189618>
    3e24:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3e28:	0a000013 	beq	3e7c <errno+0x3e78>
    3e2c:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    3e30:	0000193c 	andeq	r1, r0, ip, lsr r9
    3e34:	0300340b 	movweq	r3, #1035	; 0x40b
    3e38:	3b0b3a0e 	blcc	2d2678 <__bss_end__+0x189630>
    3e3c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3e40:	3c193f13 	ldccc	15, cr3, [r9], {19}
    3e44:	0c000019 	stceq	0, cr0, [r0], {25}
    3e48:	0b0b000f 	bleq	2c3e8c <__bss_end__+0x17ae44>
    3e4c:	00001349 	andeq	r1, r0, r9, asr #6
    3e50:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
    3e54:	00130113 	andseq	r0, r3, r3, lsl r1
    3e58:	00210e00 	eoreq	r0, r1, r0, lsl #28
    3e5c:	0b2f1349 	bleq	bc8b88 <__bss_end__+0xa7fb40>
    3e60:	130f0000 	movwne	r0, #61440	; 0xf000
    3e64:	0b0e0301 	bleq	384a70 <__bss_end__+0x23ba28>
    3e68:	3b0b3a0b 	blcc	2d269c <__bss_end__+0x189654>
    3e6c:	010b390b 	tsteq	fp, fp, lsl #18
    3e70:	10000013 	andne	r0, r0, r3, lsl r0
    3e74:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    3e78:	0b3b0b3a 	bleq	ec6b68 <__bss_end__+0xd7db20>
    3e7c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3e80:	00000b38 	andeq	r0, r0, r8, lsr fp
    3e84:	03000d11 	movweq	r0, #3345	; 0xd11
    3e88:	3b0b3a0e 	blcc	2d26c8 <__bss_end__+0x189680>
    3e8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3e90:	000b3813 	andeq	r3, fp, r3, lsl r8
    3e94:	01151200 	tsteq	r5, r0, lsl #4
    3e98:	13011927 	movwne	r1, #6439	; 0x1927
    3e9c:	05130000 	ldreq	r0, [r3, #-0]
    3ea0:	00134900 	andseq	r4, r3, r0, lsl #18
    3ea4:	00341400 	eorseq	r1, r4, r0, lsl #8
    3ea8:	0b3a0e03 	bleq	e876bc <__bss_end__+0xd3e674>
    3eac:	0b390b3b 	bleq	e46ba0 <__bss_end__+0xcfdb58>
    3eb0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3eb4:	34150000 	ldrcc	r0, [r5], #-0
    3eb8:	3a134700 	bcc	4d5ac0 <__bss_end__+0x38ca78>
    3ebc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3ec0:	0018020b 	andseq	r0, r8, fp, lsl #4
    3ec4:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    3ec8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    3ecc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3ed0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3ed4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3ed8:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    3edc:	00130119 	andseq	r0, r3, r9, lsl r1
    3ee0:	00051700 	andeq	r1, r5, r0, lsl #14
    3ee4:	0b3a0803 	bleq	e85ef8 <__bss_end__+0xd3ceb0>
    3ee8:	0b39053b 	bleq	e453dc <__bss_end__+0xcfc394>
    3eec:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    3ef0:	05180000 	ldreq	r0, [r8, #-0]
    3ef4:	3a0e0300 	bcc	384afc <__bss_end__+0x23bab4>
    3ef8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3efc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3f00:	19000018 	stmdbne	r0, {r3, r4}
    3f04:	00000018 	andeq	r0, r0, r8, lsl r0
    3f08:	0300341a 	movweq	r3, #1050	; 0x41a
    3f0c:	3b0b3a08 	blcc	2d2734 <__bss_end__+0x1896ec>
    3f10:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3f14:	00180213 	andseq	r0, r8, r3, lsl r2
    3f18:	00261b00 	eoreq	r1, r6, r0, lsl #22
    3f1c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    3f20:	03193f01 	tsteq	r9, #1, 30
    3f24:	3b0b3a0e 	blcc	2d2764 <__bss_end__+0x18971c>
    3f28:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    3f2c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    3f30:	97184006 	ldrls	r4, [r8, -r6]
    3f34:	13011942 	movwne	r1, #6466	; 0x1942
    3f38:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    3f3c:	3a0e0301 	bcc	384b48 <__bss_end__+0x23bb00>
    3f40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3f44:	1119270b 	tstne	r9, fp, lsl #14
    3f48:	40061201 	andmi	r1, r6, r1, lsl #4
    3f4c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    3f50:	00001301 	andeq	r1, r0, r1, lsl #6
    3f54:	0300341e 	movweq	r3, #1054	; 0x41e
    3f58:	3b0b3a0e 	blcc	2d2798 <__bss_end__+0x189750>
    3f5c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3f60:	00180213 	andseq	r0, r8, r3, lsl r2
    3f64:	010b1f00 	tsteq	fp, r0, lsl #30
    3f68:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3f6c:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
    3f70:	3a0e0301 	bcc	384b7c <__bss_end__+0x23bb34>
    3f74:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3f78:	1119270b 	tstne	r9, fp, lsl #14
    3f7c:	40061201 	andmi	r1, r6, r1, lsl #4
    3f80:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    3f84:	00001301 	andeq	r1, r0, r1, lsl #6
    3f88:	03012e21 	movweq	r2, #7713	; 0x1e21
    3f8c:	3b0b3a0e 	blcc	2d27cc <__bss_end__+0x189784>
    3f90:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    3f94:	11134919 	tstne	r3, r9, lsl r9
    3f98:	40061201 	andmi	r1, r6, r1, lsl #4
    3f9c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    3fa0:	00001301 	andeq	r1, r0, r1, lsl #6
    3fa4:	03012e22 	movweq	r2, #7714	; 0x1e22
    3fa8:	3b0b3a0e 	blcc	2d27e8 <__bss_end__+0x1897a0>
    3fac:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    3fb0:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    3fb4:	96184006 	ldrls	r4, [r8], -r6
    3fb8:	13011942 	movwne	r1, #6466	; 0x1942
    3fbc:	05230000 	streq	r0, [r3, #-0]!
    3fc0:	3a080300 	bcc	204bc8 <__bss_end__+0xbbb80>
    3fc4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3fc8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    3fcc:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
    3fd0:	0e03012e 	adfeqsp	f0, f3, #0.5
    3fd4:	0b3b0b3a 	bleq	ec6cc4 <__bss_end__+0xd7dc7c>
    3fd8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    3fdc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3fe0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    3fe4:	00000019 	andeq	r0, r0, r9, lsl r0
    3fe8:	10001101 	andne	r1, r0, r1, lsl #2
    3fec:	03065506 	movweq	r5, #25862	; 0x6506
    3ff0:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    3ff4:	0005130e 	andeq	r1, r5, lr, lsl #6
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000008e 	andeq	r0, r0, lr, lsl #1
       4:	00750003 	rsbseq	r0, r5, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2f010000 	svccs	0x00010000
      1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
      20:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
      24:	6f647679 	svcvs	0x00647679
      28:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
      2c:	2f346c65 	svccs	0x00346c65
      30:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
      34:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
      38:	6169726f 	cmnvs	r9, pc, ror #4
      3c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
      40:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
      44:	2f747365 	svccs	0x00747365
      48:	6a6f7270 	bvs	1bdca10 <__bss_end__+0x1a939c8>
      4c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
      50:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
      54:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
      58:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
      5c:	7472632f 	ldrbtvc	r6, [r2], #-815	; 0xfffffcd1
      60:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
      64:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
      68:	612f6863 			; <UNDEFINED> instruction: 0x612f6863
      6c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
      70:	00003233 	andeq	r3, r0, r3, lsr r2
      74:	30747263 	rsbscc	r7, r4, r3, ror #4
      78:	0100532e 	tsteq	r0, lr, lsr #6
      7c:	00000000 	andeq	r0, r0, r0
      80:	01440205 	cmpeq	r4, r5, lsl #4
      84:	0a030001 	beq	c0090 <morecore_area+0x77090>
      88:	2f302f01 	svccs	0x00302f01
      8c:	00020232 	andeq	r0, r2, r2, lsr r2
      90:	009b0101 	addseq	r0, fp, r1, lsl #2
      94:	00030000 	andeq	r0, r3, r0
      98:	00000075 	andeq	r0, r0, r5, ror r0
      9c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
      a0:	0101000d 	tsteq	r1, sp
      a4:	00000101 	andeq	r0, r0, r1, lsl #2
      a8:	00000100 	andeq	r0, r0, r0, lsl #2
      ac:	6f682f01 	svcvs	0x00682f01
      b0:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
      b4:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
      b8:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
      bc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
      c0:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
      c4:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
      c8:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
      cc:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
      d0:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
      d4:	73656669 	cmnvc	r5, #110100480	; 0x6900000
      d8:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
      dc:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
      e0:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
      e4:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
      e8:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      ec:	632f656d 			; <UNDEFINED> instruction: 0x632f656d
      f0:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
      f4:	5f346c65 	svcpl	0x00346c65
      f8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
      fc:	7261612f 	rsbvc	r6, r1, #-1073741813	; 0xc000000b
     100:	32336863 	eorscc	r6, r3, #6488064	; 0x630000
     104:	72630000 	rsbvc	r0, r3, #0
     108:	532e6974 			; <UNDEFINED> instruction: 0x532e6974
     10c:	00000100 	andeq	r0, r0, r0, lsl #2
     110:	02050000 	andeq	r0, r5, #0
     114:	00010118 	andeq	r0, r1, r8, lsl r1
     118:	2f010a03 	svccs	0x00010a03
     11c:	01000202 	tsteq	r0, r2, lsl #4
     120:	02050001 	andeq	r0, r5, #1
     124:	00027648 	andeq	r7, r2, r8, asr #12
     128:	2f011003 	svccs	0x00011003
     12c:	01000202 	tsteq	r0, r2, lsl #4
     130:	0000da01 	andeq	sp, r0, r1, lsl #20
     134:	bc000300 	stclt	3, cr0, [r0], {-0}
     138:	02000000 	andeq	r0, r0, #0
     13c:	0d0efb01 	vstreq	d15, [lr, #-4]
     140:	01010100 	mrseq	r0, (UNDEF: 17)
     144:	00000001 	andeq	r0, r0, r1
     148:	01000001 	tsteq	r0, r1
     14c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 98 <errno+0x94>
     150:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     154:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     158:	2f676e6f 	svccs	0x00676e6f
     15c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     160:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     164:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     168:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     16c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     170:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     174:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     178:	6c65682f 	stclvs	8, cr6, [r5], #-188	; 0xffffff44
     17c:	772d6f6c 	strvc	r6, [sp, -ip, ror #30]!
     180:	646c726f 	strbtvs	r7, [ip], #-623	; 0xfffffd91
     184:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     188:	73756d00 	cmnvc	r5, #0, 26
     18c:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
     190:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
     194:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     198:	706d6574 	rsbvc	r6, sp, r4, ror r5
     19c:	6174732f 	cmnvs	r4, pc, lsr #6
     1a0:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     1a4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     1a8:	6d006564 	cfstr32vs	mvfx6, [r0, #-400]	; 0xfffffe70
     1ac:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
     1b0:	2f636269 	svccs	0x00636269
     1b4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     1b8:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
     1bc:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
     1c0:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
     1c4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     1c8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     1cc:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
     1d0:	6d000073 	stcvs	0, cr0, [r0, #-460]	; 0xfffffe34
     1d4:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     1d8:	00010063 	andeq	r0, r1, r3, rrx
     1dc:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     1e0:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     1e4:	00000200 	andeq	r0, r0, r0, lsl #4
     1e8:	746c6c61 	strbtvc	r6, [ip], #-3169	; 0xfffff39f
     1ec:	73657079 	cmnvc	r5, #121	; 0x79
     1f0:	0300682e 	movweq	r6, #2094	; 0x82e
     1f4:	05000000 	streq	r0, [r0, #-0]
     1f8:	02050022 	andeq	r0, r5, #34	; 0x22
     1fc:	000101e8 	andeq	r0, r1, r8, ror #3
     200:	9f050516 	svcls	0x00050516
     204:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
     208:	06022f01 	streq	r2, [r2], -r1, lsl #30
     20c:	92010100 	andls	r0, r1, #0, 2
     210:	03000000 	movweq	r0, #0
     214:	00007a00 	andeq	r7, r0, r0, lsl #20
     218:	fb010200 	blx	40a22 <__stack_base+0xa22>
     21c:	01000d0e 	tsteq	r0, lr, lsl #26
     220:	00010101 	andeq	r0, r1, r1, lsl #2
     224:	00010000 	andeq	r0, r1, r0
     228:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
     22c:	2f656d6f 	svccs	0x00656d6f
     230:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     234:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     238:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     23c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     240:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     244:	6f747574 	svcvs	0x00747574
     248:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     24c:	616d2d73 	smcvs	53971	; 0xd2d3
     250:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     254:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
     258:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     25c:	2f737463 	svccs	0x00737463
     260:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     264:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     268:	2f656d69 	svccs	0x00656d69
     26c:	2f747263 	svccs	0x00747263
     270:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     274:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
     278:	61612f68 	cmnvs	r1, r8, ror #30
     27c:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
     280:	73000032 	movwvc	r0, #50	; 0x32
     284:	5f346c65 	svcpl	0x00346c65
     288:	30747263 	rsbscc	r7, r4, r3, ror #4
     28c:	0100532e 	tsteq	r0, lr, lsr #6
     290:	00000000 	andeq	r0, r0, r0
     294:	02180205 	andseq	r0, r8, #1342177280	; 0x50000000
     298:	0c030001 	stceq	0, cr0, [r3], {1}
     29c:	2a312f01 	bcs	c4bea8 <__bss_end__+0xb02e60>
     2a0:	01000202 	tsteq	r0, r2, lsl #4
     2a4:	0001b801 	andeq	fp, r1, r1, lsl #16
     2a8:	7a000300 	bvc	eb0 <errno+0xeac>
     2ac:	02000001 	andeq	r0, r0, #1
     2b0:	0d0efb01 	vstreq	d15, [lr, #-4]
     2b4:	01010100 	mrseq	r0, (UNDEF: 17)
     2b8:	00000001 	andeq	r0, r0, r1
     2bc:	01000001 	tsteq	r0, r1
     2c0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 20c <errno+0x208>
     2c4:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     2c8:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     2cc:	2f676e6f 	svccs	0x00676e6f
     2d0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     2d4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     2d8:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     2dc:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     2e0:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     2e4:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     2e8:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     2ec:	6f72702f 	svcvs	0x0072702f
     2f0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     2f4:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     2f8:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     2fc:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     300:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
     304:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
     308:	2f656d6f 	svccs	0x00656d6f
     30c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     310:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     314:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     318:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     31c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     320:	6f747574 	svcvs	0x00747574
     324:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     328:	616d2d73 	smcvs	53971	; 0xd2d3
     32c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     330:	6b2f7473 	blvs	bdd504 <__bss_end__+0xa944bc>
     334:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     338:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
     33c:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
     340:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
     344:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     348:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
     34c:	6c00346c 	cfstrsvs	mvf3, [r0], {108}	; 0x6c
     350:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
     354:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
     358:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     35c:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     360:	00346c65 	eorseq	r6, r4, r5, ror #24
     364:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2b0 <errno+0x2ac>
     368:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     36c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     370:	2f676e6f 	svccs	0x00676e6f
     374:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     378:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     37c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     380:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     384:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     388:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     38c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     390:	6f72702f 	svcvs	0x0072702f
     394:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     398:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     39c:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     3a0:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     3a4:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
     3a8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     3ac:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
     3b0:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     3b4:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     3b8:	63000065 	movwvs	r0, #101	; 0x65
     3bc:	2e317472 	mrccs	4, 1, r7, cr1, cr2, {3}
     3c0:	00010063 	andeq	r0, r1, r3, rrx
     3c4:	6d697300 	stclvs	3, cr7, [r9, #-0]
     3c8:	5f656c70 	svcpl	0x00656c70
     3cc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     3d0:	00682e73 	rsbeq	r2, r8, r3, ror lr
     3d4:	6f000002 	svcvs	0x00000002
     3d8:	63656a62 	cmnvs	r5, #401408	; 0x62000
     3dc:	70797474 	rsbsvc	r7, r9, r4, ror r4
     3e0:	00682e65 	rsbeq	r2, r8, r5, ror #28
     3e4:	73000002 	movwvc	r0, #2
     3e8:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
     3ec:	79745f64 	ldmdbvc	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     3f0:	5f736570 	svcpl	0x00736570
     3f4:	2e6e6567 	cdpcs	5, 6, cr6, cr14, cr7, {3}
     3f8:	00030068 	andeq	r0, r3, r8, rrx
     3fc:	61687300 	cmnvs	r8, r0, lsl #6
     400:	5f646572 	svcpl	0x00646572
     404:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     408:	00682e73 	rsbeq	r2, r8, r3, ror lr
     40c:	61000002 	tstvs	r0, r2
     410:	2e767875 	mrccs	8, 3, r7, cr6, cr5, {3}
     414:	00040068 	andeq	r0, r4, r8, rrx
     418:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
     41c:	6f697463 	svcvs	0x00697463
     420:	682e736e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
     424:	00000200 	andeq	r0, r0, r0, lsl #4
     428:	00010500 	andeq	r0, r1, r0, lsl #10
     42c:	02280205 	eoreq	r0, r8, #1342177280	; 0x50000000
     430:	18030001 	stmdane	r3, {r0}
     434:	84130501 	ldrhi	r0, [r3], #-1281	; 0xfffffaff
     438:	05691805 	strbeq	r1, [r9, #-2053]!	; 0xfffff7fb
     43c:	18056924 	stmdane	r5, {r2, r5, r8, fp, sp, lr}
     440:	67090566 	strvs	r0, [r9, -r6, ror #10]
     444:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
     448:	10052f0d 	andne	r2, r5, sp, lsl #30
     44c:	9e0b0565 	cfsh32ls	mvfx0, mvfx11, #53
     450:	05502e05 	ldrbeq	r2, [r0, #-3589]	; 0xfffff1fb
     454:	05056613 	streq	r6, [r5, #-1555]	; 0xfffff9ed
     458:	f3010568 	vrshl.u8	q0, q12, <illegal reg q0.5>
     45c:	01000602 	tsteq	r0, r2, lsl #12
     460:	00019901 	andeq	r9, r1, r1, lsl #18
     464:	7b000300 	blvc	106c <errno+0x1068>
     468:	02000001 	andeq	r0, r0, #1
     46c:	0d0efb01 	vstreq	d15, [lr, #-4]
     470:	01010100 	mrseq	r0, (UNDEF: 17)
     474:	00000001 	andeq	r0, r0, r1
     478:	01000001 	tsteq	r0, r1
     47c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3c8 <errno+0x3c4>
     480:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     484:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     488:	2f676e6f 	svccs	0x00676e6f
     48c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     490:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     494:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     498:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     49c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     4a0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     4a4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     4a8:	6f72702f 	svcvs	0x0072702f
     4ac:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     4b0:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     4b4:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     4b8:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     4bc:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
     4c0:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
     4c4:	2f656d6f 	svccs	0x00656d6f
     4c8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     4cc:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     4d0:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     4d4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     4d8:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     4dc:	6f747574 	svcvs	0x00747574
     4e0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     4e4:	616d2d73 	smcvs	53971	; 0xd2d3
     4e8:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     4ec:	6b2f7473 	blvs	bdd6c0 <__bss_end__+0xa94678>
     4f0:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
     4f4:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
     4f8:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
     4fc:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
     500:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     504:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
     508:	6c00346c 	cfstrsvs	mvf3, [r0], {108}	; 0x6c
     50c:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
     510:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
     514:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     518:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     51c:	00346c65 	eorseq	r6, r4, r5, ror #24
     520:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 46c <errno+0x468>
     524:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     528:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     52c:	2f676e6f 	svccs	0x00676e6f
     530:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     534:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     538:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     53c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     540:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     544:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     548:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     54c:	6f72702f 	svcvs	0x0072702f
     550:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     554:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     558:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     55c:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     560:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
     564:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     568:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
     56c:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     570:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     574:	73000065 	movwvc	r0, #101	; 0x65
     578:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     57c:	0100632e 	tsteq	r0, lr, lsr #6
     580:	69730000 	ldmdbvs	r3!, {}^	; <UNPREDICTABLE>
     584:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
     588:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     58c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     590:	00000200 	andeq	r0, r0, r0, lsl #4
     594:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
     598:	79747463 	ldmdbvc	r4!, {r0, r1, r5, r6, sl, ip, sp, lr}^
     59c:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
     5a0:	00000200 	andeq	r0, r0, r0, lsl #4
     5a4:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
     5a8:	745f6465 	ldrbvc	r6, [pc], #-1125	; 5b0 <errno+0x5ac>
     5ac:	73657079 	cmnvc	r5, #121	; 0x79
     5b0:	6e65675f 	mcrvs	7, 3, r6, cr5, cr15, {2}
     5b4:	0300682e 	movweq	r6, #2094	; 0x82e
     5b8:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
     5bc:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
     5c0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     5c4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     5c8:	00000200 	andeq	r0, r0, r0, lsl #4
     5cc:	76787561 	ldrbtvc	r7, [r8], -r1, ror #10
     5d0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     5d4:	75660000 	strbvc	r0, [r6, #-0]!
     5d8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
     5dc:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
     5e0:	00020068 	andeq	r0, r2, r8, rrx
     5e4:	01050000 	mrseq	r0, (UNDEF: 5)
     5e8:	e0020500 	and	r0, r2, r0, lsl #10
     5ec:	03000102 	movweq	r0, #258	; 0x102
     5f0:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
     5f4:	0105a0d7 	ldrdeq	sl, [r5, -r7]
     5f8:	000602f3 	strdeq	r0, [r6], -r3
     5fc:	026a0101 	rsbeq	r0, sl, #1073741824	; 0x40000000
     600:	00030000 	andeq	r0, r3, r0
     604:	00000220 	andeq	r0, r0, r0, lsr #4
     608:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     60c:	0101000d 	tsteq	r1, sp
     610:	00000101 	andeq	r0, r0, r1, lsl #2
     614:	00000100 	andeq	r0, r0, r0, lsl #2
     618:	6f682f01 	svcvs	0x00682f01
     61c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
     620:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
     624:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
     628:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     62c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
     630:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
     634:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
     638:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
     63c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
     640:	73656669 	cmnvc	r5, #110100480	; 0x6900000
     644:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
     648:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
     64c:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
     650:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     654:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     658:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
     65c:	2f006372 	svccs	0x00006372
     660:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     664:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
     668:	6f647679 	svcvs	0x00647679
     66c:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
     670:	2f346c65 	svccs	0x00346c65
     674:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     678:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
     67c:	6169726f 	cmnvs	r9, pc, ror #4
     680:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
     684:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
     688:	2f747365 	svccs	0x00747365
     68c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     690:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 504 <errno+0x500>
     694:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
     698:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
     69c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     6a0:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     6a4:	00346c65 	eorseq	r6, r4, r5, ror #24
     6a8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
     6ac:	2f346c65 	svccs	0x00346c65
     6b0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     6b4:	2f656475 	svccs	0x00656475
     6b8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     6bc:	6f682f00 	svcvs	0x00682f00
     6c0:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
     6c4:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
     6c8:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
     6cc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     6d0:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
     6d4:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
     6d8:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
     6dc:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
     6e0:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
     6e4:	73656669 	cmnvc	r5, #110100480	; 0x6900000
     6e8:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
     6ec:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
     6f0:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
     6f4:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     6f8:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     6fc:	692f656d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     700:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     704:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     708:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     70c:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     710:	2f00656d 	svccs	0x0000656d
     714:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     718:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
     71c:	6f647679 	svcvs	0x00647679
     720:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
     724:	2f346c65 	svccs	0x00346c65
     728:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     72c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
     730:	6169726f 	cmnvs	r9, pc, ror #4
     734:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
     738:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
     73c:	2f747365 	svccs	0x00747365
     740:	6a6f7270 	bvs	1bdd108 <__bss_end__+0x1a940c0>
     744:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
     748:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     74c:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
     750:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     754:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     758:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     75c:	646f6d2f 	strbtvs	r6, [pc], #-3375	; 764 <errno+0x760>
     760:	32332f65 	eorscc	r2, r3, #404	; 0x194
     764:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     768:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
     76c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     770:	646f6d2f 	strbtvs	r6, [pc], #-3375	; 778 <errno+0x774>
     774:	73000065 	movwvc	r0, #101	; 0x65
     778:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     77c:	6f6f725f 	svcvs	0x006f725f
     780:	00632e74 	rsbeq	r2, r3, r4, ror lr
     784:	73000001 	movwvc	r0, #1
     788:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
     78c:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     790:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     794:	00020068 	andeq	r0, r2, r8, rrx
     798:	6a626f00 	bvs	189c3a0 <__bss_end__+0x1753358>
     79c:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
     7a0:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
     7a4:	00020068 	andeq	r0, r2, r8, rrx
     7a8:	61687300 	cmnvs	r8, r0, lsl #6
     7ac:	5f646572 	svcpl	0x00646572
     7b0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     7b4:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
     7b8:	00682e6e 	rsbeq	r2, r8, lr, ror #28
     7bc:	73000003 	movwvc	r0, #3
     7c0:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
     7c4:	79745f64 	ldmdbvc	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     7c8:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     7cc:	00020068 	andeq	r0, r2, r8, rrx
     7d0:	70797400 	rsbsvc	r7, r9, r0, lsl #8
     7d4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     7d8:	00000200 	andeq	r0, r0, r0, lsl #4
     7dc:	746f6f62 	strbtvc	r6, [pc], #-3938	; 7e4 <errno+0x7e0>
     7e0:	6f666e69 	svcvs	0x00666e69
     7e4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     7e8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     7ec:	00000200 	andeq	r0, r0, r0, lsl #4
     7f0:	76787561 	ldrbtvc	r7, [r8], -r1, ror #10
     7f4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     7f8:	74730000 	ldrbtvc	r0, [r3], #-0
     7fc:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     800:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     804:	6c650000 	stclvs	0, cr0, [r5], #-0
     808:	00682e66 	rsbeq	r2, r8, r6, ror #28
     80c:	65000004 	strvs	r0, [r0, #-4]
     810:	682e666c 	stmdavs	lr!, {r2, r3, r5, r6, r9, sl, sp, lr}
     814:	00000500 	andeq	r0, r0, r0, lsl #10
     818:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     81c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     820:	00682e73 	rsbeq	r2, r8, r3, ror lr
     824:	00000002 	andeq	r0, r0, r2
     828:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     82c:	01033c02 	tsteq	r3, r2, lsl #24
     830:	01250300 			; <UNDEFINED> instruction: 0x01250300
     834:	67831b05 	strvs	r1, [r3, r5, lsl #22]
     838:	08056767 	stmdaeq	r5, {r0, r1, r2, r5, r6, r8, r9, sl, sp, lr}
     83c:	05660c03 	strbeq	r0, [r6, #-3075]!	; 0xfffff3fd
     840:	13056715 	movwne	r6, #22293	; 0x5715
     844:	4d0e054b 	cfstr32mi	mvfx0, [lr, #-300]	; 0xfffffed4
     848:	25081f05 	strcs	r1, [r8, #-3845]	; 0xfffff0fb
     84c:	05610e05 	strbeq	r0, [r1, #-3589]!	; 0xfffff1fb
     850:	0e05341e 	cfmvdlreq	mvd5, r3
     854:	05667a03 	strbeq	r7, [r6, #-2563]!	; 0xfffff5fd
     858:	660e0307 	strvs	r0, [lr], -r7, lsl #6
     85c:	24030505 	strcs	r0, [r3], #-1285	; 0xfffffafb
     860:	05014e02 	streq	r4, [r1, #-3586]	; 0xfffff1fe
     864:	02590801 	subseq	r0, r9, #65536	; 0x10000
     868:	01010006 	tsteq	r1, r6
     86c:	00000859 	andeq	r0, r0, r9, asr r8
     870:	044e0003 	strbeq	r0, [lr], #-3
     874:	01020000 	mrseq	r0, (UNDEF: 2)
     878:	000d0efb 	strdeq	r0, [sp], -fp
     87c:	01010101 	tsteq	r1, r1, lsl #2
     880:	01000000 	mrseq	r0, (UNDEF: 0)
     884:	2f010000 	svccs	0x00010000
     888:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     88c:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
     890:	6f647679 	svcvs	0x00647679
     894:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
     898:	2f346c65 	svccs	0x00346c65
     89c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     8a0:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
     8a4:	6169726f 	cmnvs	r9, pc, ror #4
     8a8:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
     8ac:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
     8b0:	2f747365 	svccs	0x00747365
     8b4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
     8b8:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 72c <errno+0x728>
     8bc:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
     8c0:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
     8c4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     8c8:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     8cc:	00346c65 	eorseq	r6, r4, r5, ror #24
     8d0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 81c <errno+0x818>
     8d4:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     8d8:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     8dc:	2f676e6f 	svccs	0x00676e6f
     8e0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     8e4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     8e8:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     8ec:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     8f0:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     8f4:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     8f8:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     8fc:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
     900:	2f6c656e 	svccs	0x006c656e
     904:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
     908:	2f346c65 	svccs	0x00346c65
     90c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     910:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
     914:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
     918:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     91c:	61612f65 	cmnvs	r1, r5, ror #30
     920:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
     924:	65732f32 	ldrbvs	r2, [r3, #-3890]!	; 0xfffff0ce
     928:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     92c:	5f346c65 	svcpl	0x00346c65
     930:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     934:	6f682f00 	svcvs	0x00682f00
     938:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
     93c:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
     940:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
     944:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     948:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
     94c:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
     950:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
     954:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
     958:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
     95c:	73656669 	cmnvc	r5, #110100480	; 0x6900000
     960:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
     964:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     968:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     96c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     970:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
     974:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
     978:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     97c:	72612f65 	rsbvc	r2, r1, #404	; 0x194
     980:	65732f6d 	ldrbvs	r2, [r3, #-3949]!	; 0xfffff093
     984:	612f346c 			; <UNDEFINED> instruction: 0x612f346c
     988:	00686372 	rsbeq	r6, r8, r2, ror r3
     98c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 8d8 <errno+0x8d4>
     990:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     994:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     998:	2f676e6f 	svccs	0x00676e6f
     99c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     9a0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     9a4:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     9a8:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     9ac:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     9b0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     9b4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     9b8:	6f72702f 	svcvs	0x0072702f
     9bc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     9c0:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     9c4:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     9c8:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     9cc:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
     9d0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     9d4:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
     9d8:	615f346c 	cmpvs	pc, ip, ror #8
     9dc:	2f686372 	svccs	0x00686372
     9e0:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
     9e4:	2f323368 	svccs	0x00323368
     9e8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     9ec:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     9f0:	00656d69 	rsbeq	r6, r5, r9, ror #26
     9f4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 940 <errno+0x93c>
     9f8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     9fc:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     a00:	2f676e6f 	svccs	0x00676e6f
     a04:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     a08:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     a0c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     a10:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     a14:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     a18:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     a1c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     a20:	6f72702f 	svcvs	0x0072702f
     a24:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     a28:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     a2c:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     a30:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     a34:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
     a38:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
     a3c:	2f656d6f 	svccs	0x00656d6f
     a40:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     a44:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     a48:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     a4c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     a50:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     a54:	6f747574 	svcvs	0x00747574
     a58:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     a5c:	616d2d73 	smcvs	53971	; 0xd2d3
     a60:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     a64:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
     a68:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     a6c:	2f737463 	svccs	0x00737463
     a70:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     a74:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     a78:	2f656d69 	svccs	0x00656d69
     a7c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     a80:	2f656475 	svccs	0x00656475
     a84:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     a88:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     a8c:	00656d69 	rsbeq	r6, r5, r9, ror #26
     a90:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
     a94:	2f346c65 	svccs	0x00346c65
     a98:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     a9c:	2f656475 	svccs	0x00656475
     aa0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     aa4:	62696c00 	rsbvs	r6, r9, #0, 24
     aa8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     aac:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     ab0:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
     ab4:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
     ab8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     abc:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
     ac0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     ac4:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
     ac8:	2f346c65 	svccs	0x00346c65
     acc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     ad0:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
     ad4:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
     ad8:	2f656d6f 	svccs	0x00656d6f
     adc:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     ae0:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     ae4:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     ae8:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     aec:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     af0:	6f747574 	svcvs	0x00747574
     af4:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     af8:	616d2d73 	smcvs	53971	; 0xd2d3
     afc:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     b00:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
     b04:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     b08:	2f737463 	svccs	0x00737463
     b0c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     b10:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     b14:	2f656d69 	svccs	0x00656d69
     b18:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     b1c:	00656475 	rsbeq	r6, r5, r5, ror r4
     b20:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; a6c <errno+0xa68>
     b24:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     b28:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     b2c:	2f676e6f 	svccs	0x00676e6f
     b30:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     b34:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     b38:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     b3c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     b40:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     b44:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     b48:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     b4c:	6f72702f 	svcvs	0x0072702f
     b50:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     b54:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     b58:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     b5c:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     b60:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
     b64:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     b68:	6f6d2f65 	svcvs	0x006d2f65
     b6c:	332f6564 			; <UNDEFINED> instruction: 0x332f6564
     b70:	65732f32 	ldrbvs	r2, [r3, #-3890]!	; 0xfffff0ce
     b74:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     b78:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     b7c:	6f6d2f65 	svcvs	0x006d2f65
     b80:	00006564 	andeq	r6, r0, r4, ror #10
     b84:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     b88:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     b8c:	00682e73 	rsbeq	r2, r8, r3, ror lr
     b90:	73000001 	movwvc	r0, #1
     b94:	61637379 	smcvs	14137	; 0x3739
     b98:	2e736c6c 	cdpcs	12, 7, cr6, cr3, cr12, {3}
     b9c:	00020068 	andeq	r0, r2, r8, rrx
     ba0:	73797300 	cmnvc	r9, #0, 6
     ba4:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
     ba8:	00682e73 	rsbeq	r2, r8, r3, ror lr
     bac:	74000003 	strvc	r0, [r0], #-3
     bb0:	61657268 	cmnvs	r5, r8, ror #4
     bb4:	72615f64 	rsbvc	r5, r1, #100, 30	; 0x190
     bb8:	682e6863 	stmdavs	lr!, {r0, r1, r5, r6, fp, sp, lr}
     bbc:	00000400 	andeq	r0, r0, r0, lsl #8
     bc0:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
     bc4:	00050063 	andeq	r0, r5, r3, rrx
     bc8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     bcc:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     bd0:	00060068 	andeq	r0, r6, r8, rrx
     bd4:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     bd8:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     bdc:	00060068 	andeq	r0, r6, r8, rrx
     be0:	6d697300 	stclvs	3, cr7, [r9, #-0]
     be4:	5f656c70 	svcpl	0x00656c70
     be8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     bec:	00682e73 	rsbeq	r2, r8, r3, ror lr
     bf0:	6f000001 	svcvs	0x00000001
     bf4:	63656a62 	cmnvs	r5, #401408	; 0x62000
     bf8:	70797474 	rsbsvc	r7, r9, r4, ror r4
     bfc:	00682e65 	rsbeq	r2, r8, r5, ror #28
     c00:	6f000001 	svcvs	0x00000001
     c04:	63656a62 	cmnvs	r5, #401408	; 0x62000
     c08:	70797474 	rsbsvc	r7, r9, r4, ror r4
     c0c:	00682e65 	rsbeq	r2, r8, r5, ror #28
     c10:	63000002 	movwvs	r0, #2
     c14:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
     c18:	73746e61 	cmnvc	r4, #1552	; 0x610
     c1c:	0100682e 	tsteq	r0, lr, lsr #16
     c20:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
     c24:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
     c28:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     c2c:	675f7365 	ldrbvs	r7, [pc, -r5, ror #6]
     c30:	682e6e65 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
     c34:	00000700 	andeq	r0, r0, r0, lsl #14
     c38:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
     c3c:	745f6465 	ldrbvc	r6, [pc], #-1125	; c44 <errno+0xc40>
     c40:	73657079 	cmnvc	r5, #121	; 0x79
     c44:	0100682e 	tsteq	r0, lr, lsr #16
     c48:	79740000 	ldmdbvc	r4!, {}^	; <UNPREDICTABLE>
     c4c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     c50:	00010068 	andeq	r0, r1, r8, rrx
     c54:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
     c58:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
     c5c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
     c60:	00070068 	andeq	r0, r7, r8, rrx
     c64:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
     c68:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
     c6c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
     c70:	00080068 	andeq	r0, r8, r8, rrx
     c74:	6f6f6200 	svcvs	0x006f6200
     c78:	666e6974 			; <UNDEFINED> instruction: 0x666e6974
     c7c:	79745f6f 	ldmdbvc	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     c80:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     c84:	00010068 	andeq	r0, r1, r8, rrx
     c88:	78756100 	ldmdavc	r5!, {r8, sp, lr}^
     c8c:	00682e76 	rsbeq	r2, r8, r6, ror lr
     c90:	73000006 	movwvc	r0, #6
     c94:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     c98:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     c9c:	682e656d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
     ca0:	00000900 	andeq	r0, r0, r0, lsl #18
     ca4:	2e666c65 	cdpcs	12, 6, cr6, cr6, cr5, {3}
     ca8:	00060068 	andeq	r0, r6, r8, rrx
     cac:	666c6500 	strbtvs	r6, [ip], -r0, lsl #10
     cb0:	0a00682e 	beq	1ad70 <fdt_get_string+0x1c0>
     cb4:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     cb8:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
     cbc:	00682e6c 	rsbeq	r2, r8, ip, ror #28
     cc0:	00000007 	andeq	r0, r0, r7
     cc4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     cc8:	0104b802 	tsteq	r4, r2, lsl #16
     ccc:	01290300 			; <UNDEFINED> instruction: 0x01290300
     cd0:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
     cd4:	02048301 	andeq	r8, r4, #67108864	; 0x4000000
     cd8:	6600e903 	strvs	lr, [r0], -r3, lsl #18
     cdc:	2fd71805 	svccs	0x00d71805
     ce0:	05312905 	ldreq	r2, [r1, #-2309]!	; 0xfffff6fb
     ce4:	29054a18 	stmdbcs	r5, {r3, r4, r9, fp, lr}
     ce8:	18054b2f 	stmdane	r5, {r0, r1, r2, r3, r5, r8, r9, fp, lr}
     cec:	2f29054a 	svccs	0x0029054a
     cf0:	324a1805 	subcc	r1, sl, #327680	; 0x50000
     cf4:	052f0505 	streq	r0, [pc, #-1285]!	; 7f7 <errno+0x7f3>
     cf8:	1005350f 	andne	r3, r5, pc, lsl #10
     cfc:	4b110567 	blmi	4422a0 <__bss_end__+0x2f9258>
     d00:	05676767 	strbeq	r6, [r7, #-1895]!	; 0xfffff899
     d04:	03046701 	movweq	r6, #18177	; 0x4701
     d08:	8203cb03 	andhi	ip, r3, #3072	; 0xc00
     d0c:	059f1405 	ldreq	r1, [pc, #1029]	; 1119 <errno+0x1115>
     d10:	0f056605 	svceq	0x00056605
     d14:	4b4b4b68 	blmi	12d3abc <__bss_end__+0x118aa74>
     d18:	05054b4b 	streq	r4, [r5, #-2891]	; 0xfffff4b5
     d1c:	0201054c 	andeq	r0, r1, #76, 10	; 0x13000000
     d20:	04041322 	streq	r1, [r4], #-802	; 0xfffffcde
     d24:	667b8a03 	ldrbtvs	r8, [fp], -r3, lsl #20
     d28:	05680505 	strbeq	r0, [r8, #-1285]!	; 0xfffffafb
     d2c:	01054b0c 	tsteq	r5, ip, lsl #22
     d30:	0505852f 	streq	r8, [r5, #-1327]	; 0xfffffad1
     d34:	4b010583 	blmi	42348 <__stack_base+0x2348>
     d38:	05820d03 	streq	r0, [r2, #3331]	; 0xd03
     d3c:	01058305 	tsteq	r5, r5, lsl #6
     d40:	660a034b 	strvs	r0, [sl], -fp, asr #6
     d44:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
     d48:	05044b01 	streq	r4, [r4, #-2817]	; 0xfffff4ff
     d4c:	054a3803 	strbeq	r3, [sl, #-2051]	; 0xfffff7fd
     d50:	01054b0f 	tsteq	r5, pc, lsl #22
     d54:	0f058567 	svceq	0x00058567
     d58:	6701054b 	strvs	r0, [r1, -fp, asr #10]
     d5c:	4b0f0585 	blmi	3c2378 <__bss_end__+0x279330>
     d60:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     d64:	054b0f05 	strbeq	r0, [fp, #-3845]	; 0xfffff0fb
     d68:	05856701 	streq	r6, [r5, #1793]	; 0x701
     d6c:	01054b0f 	tsteq	r5, pc, lsl #22
     d70:	0f058567 	svceq	0x00058567
     d74:	6701054b 	strvs	r0, [r1, -fp, asr #10]
     d78:	4b130585 	blmi	4c2394 <__bss_end__+0x37934c>
     d7c:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     d80:	05500f05 	ldrbeq	r0, [r0, #-3845]	; 0xfffff0fb
     d84:	01056628 	tsteq	r5, r8, lsr #12
     d88:	08058583 	stmdaeq	r5, {r0, r1, r7, r8, sl, pc}
     d8c:	67100583 	ldrvs	r0, [r0, -r3, lsl #11]
     d90:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
     d94:	01054c0c 	tsteq	r5, ip, lsl #24
     d98:	08056967 	stmdaeq	r5, {r0, r1, r2, r5, r6, r8, fp, sp, lr}
     d9c:	67100583 	ldrvs	r0, [r0, -r3, lsl #11]
     da0:	054d2605 	strbeq	r2, [sp, #-1541]	; 0xfffff9fb
     da4:	10056708 	andne	r6, r5, r8, lsl #14
     da8:	4d050567 	cfstr32mi	mvfx0, [r5, #-412]	; 0xfffffe64
     dac:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
     db0:	20056608 	andcs	r6, r5, r8, lsl #12
     db4:	661b054b 	ldrvs	r0, [fp], -fp, asr #10
     db8:	05852105 	streq	r2, [r5, #261]	; 0x105
     dbc:	0805850c 	stmdaeq	r5, {r2, r3, r8, sl, pc}
     dc0:	00260566 	eoreq	r0, r6, r6, ror #10
     dc4:	4a010402 	bmi	41dd4 <__stack_base+0x1dd4>
     dc8:	02002005 	andeq	r2, r0, #5
     dcc:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
     dd0:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
     dd4:	41054a02 	tstmi	r5, r2, lsl #20
     dd8:	02040200 	andeq	r0, r4, #0, 4
     ddc:	4d090566 	cfstr32mi	mvfx0, [r9, #-408]	; 0xfffffe68
     de0:	24080f05 	strcs	r0, [r8], #-3845	; 0xfffff0fb
     de4:	85670105 	strbhi	r0, [r7, #-261]!	; 0xfffffefb
     de8:	05831a05 	streq	r1, [r3, #2565]	; 0xa05
     dec:	0c058311 	stceq	3, cr8, [r5], {17}
     df0:	2f010583 	svccs	0x00010583
     df4:	831e0585 	tsthi	lr, #557842432	; 0x21400000
     df8:	05831505 	streq	r1, [r3, #1285]	; 0x505
     dfc:	0105830c 	tsteq	r5, ip, lsl #6
     e00:	0c05852f 	cfstr32eq	mvfx8, [r5], {47}	; 0x2f
     e04:	66080583 	strvs	r0, [r8], -r3, lsl #11
     e08:	054b1305 	strbeq	r1, [fp, #-773]	; 0xfffffcfb
     e0c:	05056610 	streq	r6, [r5, #-1552]	; 0xfffff9f0
     e10:	34080569 	strcc	r0, [r8], #-1385	; 0xfffffa97
     e14:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
     e18:	056e4b01 	strbeq	r4, [lr, #-2817]!	; 0xfffff4ff
     e1c:	2005d72c 	andcs	sp, r5, ip, lsr #14
     e20:	6730054b 	ldrvs	r0, [r0, -fp, asr #10]!
     e24:	2f661805 	svccs	0x00661805
     e28:	05850805 	streq	r0, [r5, #2053]	; 0x805
     e2c:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     e30:	1b058201 	blne	16163c <__bss_end__+0x185f4>
     e34:	01040200 	mrseq	r0, R12_usr
     e38:	67100566 	ldrvs	r0, [r0, -r6, ror #10]
     e3c:	054d1f05 	strbeq	r1, [sp, #-3845]	; 0xfffff0fb
     e40:	05056714 	streq	r6, [r5, #-1812]	; 0xfffff8ec
     e44:	840c0584 	strhi	r0, [ip], #-1412	; 0xfffffa7c
     e48:	6e2f0105 	sufvse	f0, f7, f5
     e4c:	2fd70505 	svccs	0x00d70505
     e50:	2f08054b 	svccs	0x0008054b
     e54:	05670905 	strbeq	r0, [r7, #-2309]!	; 0xfffff6fb
     e58:	0e058405 	cdpeq	4, 0, cr8, cr5, cr5, {0}
     e5c:	83838330 	orrhi	r8, r3, #48, 6	; 0xc0000000
     e60:	05840505 	streq	r0, [r4, #1285]	; 0x505
     e64:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
     e68:	0b058316 	bleq	161ac8 <__bss_end__+0x18a80>
     e6c:	2f0d0584 	svccs	0x000d0584
     e70:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
     e74:	1e054b25 	vmlane.f64	d4, d5, d21
     e78:	690d054a 	stmdbvs	sp, {r1, r3, r6, r8, sl}
     e7c:	05610b05 	strbeq	r0, [r1, #-2821]!	; 0xfffff4fb
     e80:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     e84:	11056601 	tstne	r5, r1, lsl #12
     e88:	01040200 	mrseq	r0, R12_usr
     e8c:	5101054a 	tstpl	r1, sl, asr #10
     e90:	830e0585 	movwhi	r0, #58757	; 0xe585
     e94:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
     e98:	18052f15 	stmdane	r5, {r0, r2, r4, r8, r9, sl, fp, sp}
     e9c:	2e090582 	cfsh32cs	mvfx0, mvfx9, #-62
     ea0:	28022b05 	stmdacs	r2, {r0, r2, r8, r9, fp, sp}
     ea4:	82330514 	eorshi	r0, r3, #20, 10	; 0x5000000
     ea8:	054a2505 	strbeq	r2, [sl, #-1285]	; 0xfffffafb
     eac:	2c05670d 	stccs	7, cr6, [r5], {13}
     eb0:	82340531 	eorshi	r0, r4, #205520896	; 0xc400000
     eb4:	054a2605 	strbeq	r2, [sl, #-1541]	; 0xfffff9fb
     eb8:	2e05670d 	cdpcs	7, 0, cr6, cr5, cr13, {0}
     ebc:	82360531 	eorshi	r0, r6, #205520896	; 0xc400000
     ec0:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
     ec4:	2b05670d 	blcs	15ab00 <__bss_end__+0x11ab8>
     ec8:	821c0531 	andshi	r0, ip, #205520896	; 0xc400000
     ecc:	054b1005 	strbeq	r1, [fp, #-5]
     ed0:	3505691a 	strcc	r6, [r5, #-2330]	; 0xfffff6e6
     ed4:	4a2b0583 	bmi	ac24e8 <__bss_end__+0x9794a0>
     ed8:	05672405 	strbeq	r2, [r7, #-1029]!	; 0xfffffbfb
     edc:	3105830d 	tstcc	r5, sp, lsl #6
     ee0:	82390531 	eorshi	r0, r9, #205520896	; 0xc400000
     ee4:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
     ee8:	2a05670d 	bcs	15ab24 <__bss_end__+0x11adc>
     eec:	82320531 	eorshi	r0, r2, #205520896	; 0xc400000
     ef0:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
     ef4:	0531670d 	ldreq	r6, [r1, #-1805]!	; 0xfffff8f3
     ef8:	4a700311 	bmi	1c01b44 <__bss_end__+0x1ab8afc>
     efc:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
     f00:	6f030204 	svcvs	0x00030204
     f04:	0019052e 	andseq	r0, r9, lr, lsr #10
     f08:	66010402 	strvs	r0, [r1], -r2, lsl #8
     f0c:	02001c05 	andeq	r1, r0, #1280	; 0x500
     f10:	05820104 	streq	r0, [r2, #260]	; 0x104
     f14:	04020005 	streq	r0, [r2], #-5
     f18:	01052e01 	tsteq	r5, r1, lsl #28
     f1c:	a14a2403 	cmpge	sl, r3, lsl #8
     f20:	05671d05 	strbeq	r1, [r7, #-3333]!	; 0xfffff2fb
     f24:	2f054a05 	svccs	0x00054a05
     f28:	6637052f 	ldrtvs	r0, [r7], -pc, lsr #10
     f2c:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
     f30:	09054b17 	stmdbeq	r5, {r0, r1, r2, r4, r8, r9, fp, lr}
     f34:	4c0d054a 	cfstr32mi	mvfx0, [sp], {74}	; 0x4a
     f38:	4305304b 	movwmi	r3, #20555	; 0x504b
     f3c:	02040200 	andeq	r0, r4, #0, 4
     f40:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
     f44:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
     f48:	05056601 	streq	r6, [r5, #-1537]	; 0xfffff9ff
     f4c:	01040200 	mrseq	r0, R12_usr
     f50:	03010566 	movweq	r0, #5478	; 0x1566
     f54:	0585660a 	streq	r6, [r5, #1546]	; 0x60a
     f58:	15058324 	strne	r8, [r5, #-804]	; 0xfffffcdc
     f5c:	2e13054a 	cfmac32cs	mvfx0, mvfx3, mvfx10
     f60:	05670f05 	strbeq	r0, [r7, #-3845]!	; 0xfffff0fb
     f64:	1f054a08 	svcne	0x00054a08
     f68:	4a17054b 	bmi	5c249c <__bss_end__+0x479454>
     f6c:	84200584 	strthi	r0, [r0], #-1412	; 0xfffffa7c
     f70:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
     f74:	0200671b 	andeq	r6, r0, #7077888	; 0x6c0000
     f78:	08060104 	stmdaeq	r6, {r2, r8}
     f7c:	04020090 	streq	r0, [r2], #-144	; 0xffffff70
     f80:	00200802 	eoreq	r0, r0, r2, lsl #16
     f84:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
     f88:	02001905 	andeq	r1, r0, #81920	; 0x14000
     f8c:	4a060404 	bmi	181fa4 <__bss_end__+0x38f5c>
     f90:	02001b05 	andeq	r1, r0, #5120	; 0x1400
     f94:	05670404 	strbeq	r0, [r7, #-1028]!	; 0xfffffbfc
     f98:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     f9c:	053c0804 	ldreq	r0, [ip, #-2052]!	; 0xfffff7fc
     fa0:	04020001 	streq	r0, [r2], #-1
     fa4:	05696a04 	strbeq	r6, [r9, #-2564]!	; 0xfffff5fc
     fa8:	08054b10 	stmdaeq	r5, {r4, r8, r9, fp, lr}
     fac:	4b090566 	blmi	24254c <__bss_end__+0xf9504>
     fb0:	4d680105 	stfmie	f0, [r8, #-20]!	; 0xffffffec
     fb4:	05831a05 	streq	r1, [r3, #2565]	; 0xa05
     fb8:	05056726 	streq	r6, [r5, #-1830]	; 0xfffff8da
     fbc:	bb270566 	bllt	9c255c <__bss_end__+0x879514>
     fc0:	05661405 	strbeq	r1, [r6, #-1029]!	; 0xfffffbfb
     fc4:	4005672a 	andmi	r6, r5, sl, lsr #14
     fc8:	66050566 	strvs	r0, [r5], -r6, ror #10
     fcc:	05a01f05 	streq	r1, [r0, #3845]!	; 0xf05
     fd0:	1c056708 	stcne	7, cr6, [r5], {8}
     fd4:	661a0567 	ldrvs	r0, [sl], -r7, ror #10
     fd8:	694c0105 	stmdbvs	ip, {r0, r2, r8}^
     fdc:	05831b05 	streq	r1, [r3, #2821]	; 0xb05
     fe0:	02004e0c 	andeq	r4, r0, #12, 28	; 0xc0
     fe4:	08060104 	stmdaeq	r6, {r2, r8}
     fe8:	04020090 	streq	r0, [r2], #-144	; 0xffffff70
     fec:	00200802 	eoreq	r0, r0, r2, lsl #16
     ff0:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
     ff4:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
     ff8:	4b060404 	blmi	182010 <__bss_end__+0x38fc8>
     ffc:	831b0569 	tsthi	fp, #440401920	; 0x1a400000
    1000:	054f0e05 	strbeq	r0, [pc, #-3589]	; 203 <errno+0x1ff>
    1004:	0105680c 	tsteq	r5, ip, lsl #16
    1008:	0c05852f 	cfstr32eq	mvfx8, [r5], {47}	; 0x2f
    100c:	bb010583 	bllt	42620 <__stack_base+0x2620>
    1010:	860c056b 	strhi	r0, [ip], -fp, ror #10
    1014:	85300105 	ldrhi	r0, [r0, #-261]!	; 0xfffffefb
    1018:	00a00e05 	adceq	r0, r0, r5, lsl #28
    101c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1020:	02005808 	andeq	r5, r0, #8, 16	; 0x80000
    1024:	20080204 	andcs	r0, r8, r4, lsl #4
    1028:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    102c:	000c052e 	andeq	r0, ip, lr, lsr #10
    1030:	06040402 	streq	r0, [r4], -r2, lsl #8
    1034:	000e054a 	andeq	r0, lr, sl, asr #10
    1038:	4c040402 	cfstrsmi	mvf0, [r4], {2}
    103c:	01040200 	mrseq	r0, R12_usr
    1040:	00580806 	subseq	r0, r8, r6, lsl #16
    1044:	08020402 	stmdaeq	r2, {r1, sl}
    1048:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    104c:	0c052e04 	stceq	14, cr2, [r5], {4}
    1050:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1054:	0e054a06 	vmlaeq.f32	s8, s10, s12
    1058:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    105c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    1060:	58080601 	stmdapl	r8, {r0, r9, sl}
    1064:	02040200 	andeq	r0, r4, #0, 4
    1068:	02002008 	andeq	r2, r0, #8
    106c:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    1070:	0402000c 	streq	r0, [r2], #-12
    1074:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    1078:	04020001 	streq	r0, [r2], #-1
    107c:	05692f04 	strbeq	r2, [r9, #-3844]!	; 0xfffff0fc
    1080:	05834b13 	streq	r4, [r3, #2835]	; 0xb13
    1084:	19058318 	stmdbne	r5, {r3, r4, r8, r9, pc}
    1088:	831b0583 	tsthi	fp, #549453824	; 0x20c00000
    108c:	3c081905 			; <UNDEFINED> instruction: 0x3c081905
    1090:	036a0105 	cmneq	sl, #1073741825	; 0x40000001
    1094:	0f054a09 	svceq	0x00054a09
    1098:	670c054b 	strvs	r0, [ip, -fp, asr #10]
    109c:	02000f05 	andeq	r0, r0, #5, 30
    10a0:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    10a4:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    10a8:	0c054a02 			; <UNDEFINED> instruction: 0x0c054a02
    10ac:	02040200 	andeq	r0, r4, #0, 4
    10b0:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    10b4:	004a0603 	subeq	r0, sl, r3, lsl #12
    10b8:	4a040402 	bmi	1020c8 <morecore_area+0xb90c8>
    10bc:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    10c0:	2f060704 	svccs	0x00060704
    10c4:	01000402 	tsteq	r0, r2, lsl #8
    10c8:	0000fb01 	andeq	pc, r0, r1, lsl #22
    10cc:	63000300 	movwvs	r0, #768	; 0x300
    10d0:	02000000 	andeq	r0, r0, #0
    10d4:	0d0efb01 	vstreq	d15, [lr, #-4]
    10d8:	01010100 	mrseq	r0, (UNDEF: 17)
    10dc:	00000001 	andeq	r0, r0, r1
    10e0:	01000001 	tsteq	r0, r1
    10e4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1030 <errno+0x102c>
    10e8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    10ec:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    10f0:	2f676e6f 	svccs	0x00676e6f
    10f4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    10f8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    10fc:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    1100:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1104:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    1108:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    110c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    1110:	6f72702f 	svcvs	0x0072702f
    1114:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1118:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    111c:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1120:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1124:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
    1128:	69000063 	stmdbvs	r0, {r0, r1, r5, r6}
    112c:	2e74696e 	vsubcs.f16	s13, s8, s29	; <UNPREDICTABLE>
    1130:	00010063 	andeq	r0, r1, r3, rrx
    1134:	01050000 	mrseq	r0, (UNDEF: 5)
    1138:	a4020500 	strge	r0, [r2], #-1280	; 0xfffffb00
    113c:	03000113 	movweq	r0, #275	; 0x113
    1140:	0b05011c 	bleq	1415b8 <morecore_area+0xf85b8>
    1144:	9c090569 	cfstr32ls	mvfx0, [r9], {105}	; 0x69
    1148:	054d0e05 	strbeq	r0, [sp, #-3589]	; 0xfffff1fb
    114c:	1e054a05 	vmlane.f32	s8, s10, s10
    1150:	03040200 	movweq	r0, #16896	; 0x4200
    1154:	0009052f 	andeq	r0, r9, pc, lsr #10
    1158:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
    115c:	02002d05 	andeq	r2, r0, #320	; 0x140
    1160:	052d0304 	streq	r0, [sp, #-772]!	; 0xfffffcfc
    1164:	04020005 	streq	r0, [r2], #-5
    1168:	05856601 	streq	r6, [r5, #1537]	; 0x601
    116c:	0905310b 	stmdbeq	r5, {r0, r1, r3, r8, ip, sp}
    1170:	4d0e059c 	cfstr32mi	mvfx0, [lr, #-624]	; 0xfffffd90
    1174:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    1178:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    117c:	09052f03 	stmdbeq	r5, {r0, r1, r8, r9, sl, fp, sp}
    1180:	03040200 	movweq	r0, #16896	; 0x4200
    1184:	002a0582 	eoreq	r0, sl, r2, lsl #11
    1188:	2d030402 	cfstrscs	mvf0, [r3, #-8]
    118c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1190:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    1194:	05858501 	streq	r8, [r5, #1281]	; 0x501
    1198:	0905690b 	stmdbeq	r5, {r0, r1, r3, r8, fp, sp, lr}
    119c:	4d0e059c 	cfstr32mi	mvfx0, [lr, #-624]	; 0xfffffd90
    11a0:	05660505 	strbeq	r0, [r6, #-1285]!	; 0xfffffafb
    11a4:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    11a8:	09052f03 	stmdbeq	r5, {r0, r1, r8, r9, sl, fp, sp}
    11ac:	03040200 	movweq	r0, #16896	; 0x4200
    11b0:	002f0582 	eoreq	r0, pc, r2, lsl #11
    11b4:	2d030402 	cfstrscs	mvf0, [r3, #-8]
    11b8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    11bc:	69660104 	stmdbvs	r6!, {r2, r8}^
    11c0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    11c4:	01010006 	tsteq	r1, r6
    11c8:	00000211 	andeq	r0, r0, r1, lsl r2
    11cc:	00d30003 	sbcseq	r0, r3, r3
    11d0:	01020000 	mrseq	r0, (UNDEF: 2)
    11d4:	000d0efb 	strdeq	r0, [sp], -fp
    11d8:	01010101 	tsteq	r1, r1, lsl #2
    11dc:	01000000 	mrseq	r0, (UNDEF: 0)
    11e0:	2f010000 	svccs	0x00010000
    11e4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    11e8:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    11ec:	6f647679 	svcvs	0x00647679
    11f0:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    11f4:	2f346c65 	svccs	0x00346c65
    11f8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    11fc:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    1200:	6169726f 	cmnvs	r9, pc, ror #4
    1204:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    1208:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    120c:	2f747365 	svccs	0x00747365
    1210:	6a6f7270 	bvs	1bddbd8 <__bss_end__+0x1a94b90>
    1214:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    1218:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    121c:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
    1220:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1224:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1228:	6f682f00 	svcvs	0x00682f00
    122c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    1230:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    1234:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    1238:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    123c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    1240:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    1244:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    1248:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    124c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    1250:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    1254:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    1258:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    125c:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    1260:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
    1264:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1268:	692f656d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    126c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1270:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    1274:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
    1278:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    127c:	0000656d 	andeq	r6, r0, sp, ror #10
    1280:	736d656d 	cmnvc	sp, #457179136	; 0x1b400000
    1284:	632e7465 			; <UNDEFINED> instruction: 0x632e7465
    1288:	00000100 	andeq	r0, r0, r0, lsl #2
    128c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1290:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1294:	00000200 	andeq	r0, r0, r0, lsl #4
    1298:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    129c:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    12a0:	00000200 	andeq	r0, r0, r0, lsl #4
    12a4:	00010500 	andeq	r0, r1, r0, lsl #10
    12a8:	14e80205 	strbtne	r0, [r8], #517	; 0x205
    12ac:	1b030001 	blne	c12b8 <morecore_area+0x782b8>
    12b0:	bb140501 	bllt	5026bc <__bss_end__+0x3b9674>
    12b4:	05510805 	ldrbeq	r0, [r1, #-2053]	; 0xfffff7fb
    12b8:	0d056710 	stceq	7, cr6, [r5, #-64]	; 0xffffffc0
    12bc:	8215054c 	andshi	r0, r5, #76, 10	; 0x13000000
    12c0:	05660d05 	strbeq	r0, [r6, #-3333]!	; 0xfffff2fb
    12c4:	08052e0a 	stmdaeq	r5, {r1, r3, r9, sl, fp, sp}
    12c8:	6710054b 	ldrvs	r0, [r0, -fp, asr #10]
    12cc:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
    12d0:	06058215 			; <UNDEFINED> instruction: 0x06058215
    12d4:	4a0d0566 	bmi	342874 <__bss_end__+0x1f982c>
    12d8:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    12dc:	15052f0d 	strne	r2, [r5, #-3853]	; 0xfffff0f3
    12e0:	66060582 	strvs	r0, [r6], -r2, lsl #11
    12e4:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    12e8:	08052e0a 	stmdaeq	r5, {r1, r3, r9, sl, fp, sp}
    12ec:	6710052f 	ldrvs	r0, [r0, -pc, lsr #10]
    12f0:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
    12f4:	06058215 			; <UNDEFINED> instruction: 0x06058215
    12f8:	4a0d0566 	bmi	342898 <__bss_end__+0x1f9850>
    12fc:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    1300:	10052f08 	andne	r2, r5, r8, lsl #30
    1304:	520a0567 	andpl	r0, sl, #432013312	; 0x19c00000
    1308:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    130c:	834b2e07 	movthi	r2, #48647	; 0xbe07
    1310:	6c230583 	cfstr32vs	mvfx0, [r3], #-524	; 0xfffffdf4
    1314:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    1318:	14058a15 	strne	r8, [r5], #-2581	; 0xfffff5eb
    131c:	82190567 	andshi	r0, r9, #432013312	; 0x19c00000
    1320:	054b0805 	strbeq	r0, [fp, #-2053]	; 0xfffff7fb
    1324:	054c6710 	strbeq	r6, [ip, #-1808]	; 0xfffff8f0
    1328:	10054a15 	andne	r4, r5, r5, lsl sl
    132c:	4a15054b 	bmi	542860 <__bss_end__+0x3f9818>
    1330:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    1334:	1405821a 	strne	r8, [r5], #-538	; 0xfffffde6
    1338:	8219054b 	andshi	r0, r9, #314572800	; 0x12c00000
    133c:	054b0805 	strbeq	r0, [fp, #-2053]	; 0xfffff7fb
    1340:	054c6710 	strbeq	r6, [ip, #-1808]	; 0xfffff8f0
    1344:	10054a16 	andne	r4, r5, r6, lsl sl
    1348:	4a16054b 	bmi	58287c <__bss_end__+0x439834>
    134c:	054b1005 	strbeq	r1, [fp, #-5]
    1350:	10054a16 	andne	r4, r5, r6, lsl sl
    1354:	4a16054b 	bmi	582888 <__bss_end__+0x439840>
    1358:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    135c:	1405821a 	strne	r8, [r5], #-538	; 0xfffffde6
    1360:	821a054b 	andshi	r0, sl, #314572800	; 0x12c00000
    1364:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    1368:	1405821a 	strne	r8, [r5], #-538	; 0xfffffde6
    136c:	821a054b 	andshi	r0, sl, #314572800	; 0x12c00000
    1370:	05500f05 	ldrbeq	r0, [r0, #-3845]	; 0xfffff0fb
    1374:	07052e28 	streq	r2, [r5, -r8, lsr #28]
    1378:	05834b2e 	streq	r4, [r3, #2862]	; 0xb2e
    137c:	16058813 			; <UNDEFINED> instruction: 0x16058813
    1380:	661f0566 	ldrvs	r0, [pc], -r6, ror #10
    1384:	05820905 	streq	r0, [r2, #2309]	; 0x905
    1388:	19056705 	stmdbne	r5, {r0, r2, r8, r9, sl, sp, lr}
    138c:	02040200 	andeq	r0, r4, #0, 4
    1390:	0014052f 	andseq	r0, r4, pc, lsr #10
    1394:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    1398:	02001905 	andeq	r1, r0, #81920	; 0x14000
    139c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    13a0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    13a4:	1a054b02 	bne	153fb4 <__bss_end__+0xaf6c>
    13a8:	02040200 	andeq	r0, r4, #0, 4
    13ac:	0014054a 	andseq	r0, r4, sl, asr #10
    13b0:	4b020402 	blmi	823c0 <morecore_area+0x393c0>
    13b4:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    13b8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    13bc:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    13c0:	20054602 	andcs	r4, r5, r2, lsl #12
    13c4:	02040200 	andeq	r0, r4, #0, 4
    13c8:	00050566 	andeq	r0, r5, r6, ror #10
    13cc:	66010402 	strvs	r0, [r1], -r2, lsl #8
    13d0:	0d030c05 	stceq	12, cr0, [r3, #-20]	; 0xffffffec
    13d4:	2f010566 	svccs	0x00010566
    13d8:	01000802 	tsteq	r0, r2, lsl #16
    13dc:	0006bc01 	andeq	fp, r6, r1, lsl #24
    13e0:	d3000300 	movwle	r0, #768	; 0x300
    13e4:	02000000 	andeq	r0, r0, #0
    13e8:	0d0efb01 	vstreq	d15, [lr, #-4]
    13ec:	01010100 	mrseq	r0, (UNDEF: 17)
    13f0:	00000001 	andeq	r0, r0, r1
    13f4:	01000001 	tsteq	r0, r1
    13f8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1344 <errno+0x1340>
    13fc:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    1400:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    1404:	2f676e6f 	svccs	0x00676e6f
    1408:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    140c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1410:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    1414:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1418:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    141c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1420:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    1424:	6f72702f 	svcvs	0x0072702f
    1428:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    142c:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    1430:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1434:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1438:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
    143c:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
    1440:	2f656d6f 	svccs	0x00656d6f
    1444:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1448:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    144c:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1450:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1454:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1458:	6f747574 	svcvs	0x00747574
    145c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1460:	616d2d73 	smcvs	53971	; 0xd2d3
    1464:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1468:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    146c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    1470:	2f737463 	svccs	0x00737463
    1474:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1478:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    147c:	2f656d69 	svccs	0x00656d69
    1480:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1484:	2f656475 	svccs	0x00656475
    1488:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    148c:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    1490:	00656d69 	rsbeq	r6, r5, r9, ror #26
    1494:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    1498:	2e797063 	cdpcs	0, 7, cr7, cr9, cr3, {3}
    149c:	00010063 	andeq	r0, r1, r3, rrx
    14a0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    14a4:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    14a8:	00020068 	andeq	r0, r2, r8, rrx
    14ac:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    14b0:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    14b4:	00020068 	andeq	r0, r2, r8, rrx
    14b8:	01050000 	mrseq	r0, (UNDEF: 5)
    14bc:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
    14c0:	03000118 	movweq	r0, #280	; 0x118
    14c4:	1405011b 	strne	r0, [r5], #-283	; 0xfffffee5
    14c8:	4b1a05bb 	blmi	682bbc <__bss_end__+0x539b74>
    14cc:	0f030505 	svceq	0x00030505
    14d0:	0012054a 	andseq	r0, r2, sl, asr #10
    14d4:	2f030402 	svccs	0x00030402
    14d8:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    14dc:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
    14e0:	04020010 	streq	r0, [r2], #-16
    14e4:	0e056603 	cfmadd32eq	mvax0, mvfx6, mvfx5, mvfx3
    14e8:	03040200 	movweq	r0, #16896	; 0x4200
    14ec:	0030052e 	eorseq	r0, r0, lr, lsr #10
    14f0:	2d030402 	cfstrscs	mvf0, [r3, #-8]
    14f4:	02000c05 	andeq	r0, r0, #1280	; 0x500
    14f8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    14fc:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    1500:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1504:	01040200 	mrseq	r0, R12_usr
    1508:	0029052e 	eoreq	r0, r9, lr, lsr #10
    150c:	4a020402 	bmi	8251c <morecore_area+0x3951c>
    1510:	056a0905 	strbeq	r0, [sl, #-2309]!	; 0xfffff6fb
    1514:	08052e22 	stmdaeq	r5, {r1, r5, r9, sl, fp, sp}
    1518:	4b09052e 	blmi	2429d8 <__bss_end__+0xf9990>
    151c:	02001f05 	andeq	r1, r0, #5, 30
    1520:	052f0204 	streq	r0, [pc, #-516]!	; 1324 <errno+0x1320>
    1524:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1528:	2a054a02 	bcs	153d38 <__bss_end__+0xacf0>
    152c:	02040200 	andeq	r0, r4, #0, 4
    1530:	0018054b 	andseq	r0, r8, fp, asr #10
    1534:	4a020402 	bmi	82544 <morecore_area+0x39544>
    1538:	02001f05 	andeq	r1, r0, #5, 30
    153c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1540:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1544:	2a052e02 	bcs	14cd54 <__bss_end__+0x3d0c>
    1548:	02040200 	andeq	r0, r4, #0, 4
    154c:	0018052f 	andseq	r0, r8, pc, lsr #10
    1550:	4a020402 	bmi	82560 <morecore_area+0x39560>
    1554:	02001f05 	andeq	r1, r0, #5, 30
    1558:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    155c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1560:	2b052e02 	blcs	14cd70 <__bss_end__+0x3d28>
    1564:	02040200 	andeq	r0, r4, #0, 4
    1568:	0018052f 	andseq	r0, r8, pc, lsr #10
    156c:	4a020402 	bmi	8257c <morecore_area+0x3957c>
    1570:	02002005 	andeq	r2, r0, #5
    1574:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1578:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    157c:	1b052e02 	blne	14cd8c <__bss_end__+0x3d44>
    1580:	02040200 	andeq	r0, r4, #0, 4
    1584:	0024052a 	eoreq	r0, r4, sl, lsr #10
    1588:	66020402 	strvs	r0, [r2], -r2, lsl #8
    158c:	02002d05 	andeq	r2, r0, #320	; 0x140
    1590:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    1594:	04020009 	streq	r0, [r2], #-9
    1598:	0f056601 	svceq	0x00056601
    159c:	4a0c056c 	bmi	302b54 <__bss_end__+0x1b9b0c>
    15a0:	054b1f05 	strbeq	r1, [fp, #-3845]	; 0xfffff0fb
    15a4:	2a054a1d 	bcs	153e20 <__bss_end__+0xadd8>
    15a8:	4a18054b 	bmi	602adc <__bss_end__+0x4b9a94>
    15ac:	054a1f05 	strbeq	r1, [sl, #-3845]	; 0xfffff0fb
    15b0:	0f052e1d 	svceq	0x00052e1d
    15b4:	0568672f 	strbeq	r6, [r8, #-1839]!	; 0xfffff8d1
    15b8:	1f054a0c 	svcne	0x00054a0c
    15bc:	4a1d054b 	bmi	742af0 <__bss_end__+0x5f9aa8>
    15c0:	674b0f05 	strbvs	r0, [fp, -r5, lsl #30]
    15c4:	4a0c0568 	bmi	302b6c <__bss_end__+0x1b9b24>
    15c8:	054b1605 	strbeq	r1, [fp, #-1541]	; 0xfffff9fb
    15cc:	1405660f 	strne	r6, [r5], #-1551	; 0xfffff9f1
    15d0:	2e120566 	cfmsc32cs	mvfx0, mvfx2, mvfx6
    15d4:	052f1605 	streq	r1, [pc, #-1541]!	; fd7 <errno+0xfd3>
    15d8:	1405660f 	strne	r6, [r5], #-1551	; 0xfffff9f1
    15dc:	2e120566 	cfmsc32cs	mvfx0, mvfx2, mvfx6
    15e0:	05300f05 	ldreq	r0, [r0, #-3845]!	; 0xfffff0fb
    15e4:	12054a0c 	andne	r4, r5, #12, 20	; 0xc000
    15e8:	4a10054b 	bmi	402b1c <__bss_end__+0x2b9ad4>
    15ec:	4d08054c 	cfstr32mi	mvfx0, [r8, #-304]	; 0xfffffed0
    15f0:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    15f4:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    15f8:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    15fc:	12052e01 	andne	r2, r5, #1, 28
    1600:	01040200 	mrseq	r0, R12_usr
    1604:	054a062e 	strbeq	r0, [sl, #-1582]	; 0xfffff9d2
    1608:	05d8060f 	ldrbeq	r0, [r8, #1551]	; 0x60f
    160c:	0f056716 	svceq	0x00056716
    1610:	66140566 	ldrvs	r0, [r4], -r6, ror #10
    1614:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    1618:	0f052f16 	svceq	0x00052f16
    161c:	66140566 	ldrvs	r0, [r4], -r6, ror #10
    1620:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    1624:	0f052f16 	svceq	0x00052f16
    1628:	66140566 	ldrvs	r0, [r4], -r6, ror #10
    162c:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    1630:	0d052f0f 	stceq	15, cr2, [r5, #-60]	; 0xffffffc4
    1634:	00200567 	eoreq	r0, r0, r7, ror #10
    1638:	2f020402 	svccs	0x00020402
    163c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    1640:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1644:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    1648:	32054b02 	andcc	r4, r5, #2048	; 0x800
    164c:	02040200 	andeq	r0, r4, #0, 4
    1650:	002d054a 	eoreq	r0, sp, sl, asr #10
    1654:	4a020402 	bmi	82664 <morecore_area+0x39664>
    1658:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    165c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1660:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1664:	13054b02 	movwne	r4, #23298	; 0x5b02
    1668:	02040200 	andeq	r0, r4, #0, 4
    166c:	0026054a 	eoreq	r0, r6, sl, asr #10
    1670:	4b020402 	blmi	82680 <morecore_area+0x39680>
    1674:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    1678:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    167c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    1680:	2d054a02 	vstrcs	s8, [r5, #-8]
    1684:	02040200 	andeq	r0, r4, #0, 4
    1688:	0021054a 	eoreq	r0, r1, sl, asr #10
    168c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1690:	02002005 	andeq	r2, r0, #5
    1694:	052f0204 	streq	r0, [pc, #-516]!	; 1498 <errno+0x1494>
    1698:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    169c:	26054a02 	strcs	r4, [r5], -r2, lsl #20
    16a0:	02040200 	andeq	r0, r4, #0, 4
    16a4:	0032054b 	eorseq	r0, r2, fp, asr #10
    16a8:	4a020402 	bmi	826b8 <morecore_area+0x396b8>
    16ac:	02001c05 	andeq	r1, r0, #1280	; 0x500
    16b0:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    16b4:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    16b8:	21054a02 	tstcs	r5, r2, lsl #20
    16bc:	02040200 	andeq	r0, r4, #0, 4
    16c0:	0020052e 	eoreq	r0, r0, lr, lsr #10
    16c4:	2f020402 	svccs	0x00020402
    16c8:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    16cc:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    16d0:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    16d4:	33054b02 	movwcc	r4, #23298	; 0x5b02
    16d8:	02040200 	andeq	r0, r4, #0, 4
    16dc:	001c054a 	andseq	r0, ip, sl, asr #10
    16e0:	4a020402 	bmi	826f0 <morecore_area+0x396f0>
    16e4:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    16e8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    16ec:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    16f0:	1f052e02 	svcne	0x00052e02
    16f4:	02040200 	andeq	r0, r4, #0, 4
    16f8:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    16fc:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    1700:	31056602 	tstcc	r5, r2, lsl #12
    1704:	02040200 	andeq	r0, r4, #0, 4
    1708:	000d0566 	andeq	r0, sp, r6, ror #10
    170c:	66010402 	strvs	r0, [r1], -r2, lsl #8
    1710:	05660a03 	strbeq	r0, [r6, #-2563]!	; 0xfffff5fd
    1714:	1605300f 	strne	r3, [r5], -pc
    1718:	660f0567 	strvs	r0, [pc], -r7, ror #10
    171c:	05661405 	strbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    1720:	16052e12 			; <UNDEFINED> instruction: 0x16052e12
    1724:	660f052f 	strvs	r0, [pc], -pc, lsr #10
    1728:	05661405 	strbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    172c:	0f052e12 	svceq	0x00052e12
    1730:	670d052f 	strvs	r0, [sp, -pc, lsr #10]
    1734:	02002005 	andeq	r2, r0, #5
    1738:	052f0204 	streq	r0, [pc, #-516]!	; 153c <errno+0x1538>
    173c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1740:	26054a02 	strcs	r4, [r5], -r2, lsl #20
    1744:	02040200 	andeq	r0, r4, #0, 4
    1748:	0032054b 	eorseq	r0, r2, fp, asr #10
    174c:	4a020402 	bmi	8275c <morecore_area+0x3975c>
    1750:	02002d05 	andeq	r2, r0, #320	; 0x140
    1754:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1758:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    175c:	20052e02 	andcs	r2, r5, r2, lsl #28
    1760:	02040200 	andeq	r0, r4, #0, 4
    1764:	0013054b 	andseq	r0, r3, fp, asr #10
    1768:	4a020402 	bmi	82778 <morecore_area+0x39778>
    176c:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1770:	054b0204 	strbeq	r0, [fp, #-516]	; 0xfffffdfc
    1774:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    1778:	1c054a02 			; <UNDEFINED> instruction: 0x1c054a02
    177c:	02040200 	andeq	r0, r4, #0, 4
    1780:	002d054a 	eoreq	r0, sp, sl, asr #10
    1784:	4a020402 	bmi	82794 <morecore_area+0x39794>
    1788:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    178c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1790:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1794:	13052f02 	movwne	r2, #24322	; 0x5f02
    1798:	02040200 	andeq	r0, r4, #0, 4
    179c:	0026054a 	eoreq	r0, r6, sl, asr #10
    17a0:	4b020402 	blmi	827b0 <morecore_area+0x397b0>
    17a4:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    17a8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    17ac:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    17b0:	2d054a02 	vstrcs	s8, [r5, #-8]
    17b4:	02040200 	andeq	r0, r4, #0, 4
    17b8:	0021054a 	eoreq	r0, r1, sl, asr #10
    17bc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    17c0:	02002005 	andeq	r2, r0, #5
    17c4:	052f0204 	streq	r0, [pc, #-516]!	; 15c8 <errno+0x15c4>
    17c8:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    17cc:	27054a02 	strcs	r4, [r5, -r2, lsl #20]
    17d0:	02040200 	andeq	r0, r4, #0, 4
    17d4:	0033054b 	eorseq	r0, r3, fp, asr #10
    17d8:	4a020402 	bmi	827e8 <morecore_area+0x397e8>
    17dc:	02001c05 	andeq	r1, r0, #1280	; 0x500
    17e0:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    17e4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    17e8:	22054a02 	andcs	r4, r5, #8192	; 0x2000
    17ec:	02040200 	andeq	r0, r4, #0, 4
    17f0:	001f052e 	andseq	r0, pc, lr, lsr #10
    17f4:	03020402 	movweq	r0, #9218	; 0x2402
    17f8:	28052e78 	stmdacs	r5, {r3, r4, r5, r6, r9, sl, fp, sp}
    17fc:	02040200 	andeq	r0, r4, #0, 4
    1800:	00310566 	eorseq	r0, r1, r6, ror #10
    1804:	66020402 	strvs	r0, [r2], -r2, lsl #8
    1808:	02000d05 	andeq	r0, r0, #320	; 0x140
    180c:	03660104 	cmneq	r6, #4, 2
    1810:	0f05660a 	svceq	0x0005660a
    1814:	67160530 			; <UNDEFINED> instruction: 0x67160530
    1818:	05660f05 	strbeq	r0, [r6, #-3845]!	; 0xfffff0fb
    181c:	12056614 	andne	r6, r5, #20, 12	; 0x1400000
    1820:	2f0f052e 	svccs	0x000f052e
    1824:	05670d05 	strbeq	r0, [r7, #-3333]!	; 0xfffff2fb
    1828:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    182c:	13052f02 	movwne	r2, #24322	; 0x5f02
    1830:	02040200 	andeq	r0, r4, #0, 4
    1834:	0026054a 	eoreq	r0, r6, sl, asr #10
    1838:	4b020402 	blmi	82848 <morecore_area+0x39848>
    183c:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    1840:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1844:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    1848:	21054a02 	tstcs	r5, r2, lsl #20
    184c:	02040200 	andeq	r0, r4, #0, 4
    1850:	0020052e 	eoreq	r0, r0, lr, lsr #10
    1854:	4b020402 	blmi	82864 <morecore_area+0x39864>
    1858:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    185c:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    1860:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    1864:	31054b02 	tstcc	r5, r2, lsl #22
    1868:	02040200 	andeq	r0, r4, #0, 4
    186c:	001c054a 	andseq	r0, ip, sl, asr #10
    1870:	4a020402 	bmi	82880 <morecore_area+0x39880>
    1874:	02002c05 	andeq	r2, r0, #1280	; 0x500
    1878:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    187c:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    1880:	20052e02 	andcs	r2, r5, r2, lsl #28
    1884:	02040200 	andeq	r0, r4, #0, 4
    1888:	0013052f 	andseq	r0, r3, pc, lsr #10
    188c:	4a020402 	bmi	8289c <morecore_area+0x3989c>
    1890:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1894:	054b0204 	strbeq	r0, [fp, #-516]	; 0xfffffdfc
    1898:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    189c:	1c054a02 			; <UNDEFINED> instruction: 0x1c054a02
    18a0:	02040200 	andeq	r0, r4, #0, 4
    18a4:	002c054a 	eoreq	r0, ip, sl, asr #10
    18a8:	4a020402 	bmi	828b8 <morecore_area+0x398b8>
    18ac:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    18b0:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    18b4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    18b8:	13052f02 	movwne	r2, #24322	; 0x5f02
    18bc:	02040200 	andeq	r0, r4, #0, 4
    18c0:	0027054a 	eoreq	r0, r7, sl, asr #10
    18c4:	4b020402 	blmi	828d4 <morecore_area+0x398d4>
    18c8:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    18cc:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    18d0:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    18d4:	2d054a02 	vstrcs	s8, [r5, #-8]
    18d8:	02040200 	andeq	r0, r4, #0, 4
    18dc:	0022054a 	eoreq	r0, r2, sl, asr #10
    18e0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    18e4:	02001f05 	andeq	r1, r0, #5, 30
    18e8:	78030204 	stmdavc	r3, {r2, r9}
    18ec:	0028052e 	eoreq	r0, r8, lr, lsr #10
    18f0:	66020402 	strvs	r0, [r2], -r2, lsl #8
    18f4:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    18f8:	05660204 	strbeq	r0, [r6, #-516]!	; 0xfffffdfc
    18fc:	0402000d 	streq	r0, [r2], #-13
    1900:	0a036601 	beq	db10c <morecore_area+0x9210c>
    1904:	30050566 	andcc	r0, r5, r6, ror #10
    1908:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    190c:	12054a08 	andne	r4, r5, #8, 20	; 0x8000
    1910:	660b054b 	strvs	r0, [fp], -fp, asr #10
    1914:	05661005 	strbeq	r1, [r6, #-5]!
    1918:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    191c:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1920:	05661005 	strbeq	r1, [r6, #-5]!
    1924:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1928:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    192c:	05661005 	strbeq	r1, [r6, #-5]!
    1930:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1934:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1938:	05661005 	strbeq	r1, [r6, #-5]!
    193c:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1940:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1944:	05661005 	strbeq	r1, [r6, #-5]!
    1948:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    194c:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1950:	05661005 	strbeq	r1, [r6, #-5]!
    1954:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1958:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    195c:	05661005 	strbeq	r1, [r6, #-5]!
    1960:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1964:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1968:	05661005 	strbeq	r1, [r6, #-5]!
    196c:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1970:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1974:	05661005 	strbeq	r1, [r6, #-5]!
    1978:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    197c:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1980:	05661005 	strbeq	r1, [r6, #-5]!
    1984:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1988:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    198c:	05661005 	strbeq	r1, [r6, #-5]!
    1990:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1994:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1998:	05661005 	strbeq	r1, [r6, #-5]!
    199c:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    19a0:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    19a4:	05661005 	strbeq	r1, [r6, #-5]!
    19a8:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    19ac:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    19b0:	05661005 	strbeq	r1, [r6, #-5]!
    19b4:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    19b8:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    19bc:	05661005 	strbeq	r1, [r6, #-5]!
    19c0:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    19c4:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    19c8:	05661005 	strbeq	r1, [r6, #-5]!
    19cc:	0b052e0e 	bleq	14d20c <__bss_end__+0x41c4>
    19d0:	4a080530 	bmi	202e98 <__bss_end__+0xb9e50>
    19d4:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    19d8:	1005660b 	andne	r6, r5, fp, lsl #12
    19dc:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    19e0:	052f1205 	streq	r1, [pc, #-517]!	; 17e3 <errno+0x17df>
    19e4:	1005660b 	andne	r6, r5, fp, lsl #12
    19e8:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    19ec:	052f1205 	streq	r1, [pc, #-517]!	; 17ef <errno+0x17eb>
    19f0:	1005660b 	andne	r6, r5, fp, lsl #12
    19f4:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    19f8:	052f1205 	streq	r1, [pc, #-517]!	; 17fb <errno+0x17f7>
    19fc:	1005660b 	andne	r6, r5, fp, lsl #12
    1a00:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    1a04:	052f1205 	streq	r1, [pc, #-517]!	; 1807 <errno+0x1803>
    1a08:	1005660b 	andne	r6, r5, fp, lsl #12
    1a0c:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    1a10:	052f1205 	streq	r1, [pc, #-517]!	; 1813 <errno+0x180f>
    1a14:	1005660b 	andne	r6, r5, fp, lsl #12
    1a18:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    1a1c:	052f1205 	streq	r1, [pc, #-517]!	; 181f <errno+0x181b>
    1a20:	1005660b 	andne	r6, r5, fp, lsl #12
    1a24:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    1a28:	052f1205 	streq	r1, [pc, #-517]!	; 182b <errno+0x1827>
    1a2c:	1005660b 	andne	r6, r5, fp, lsl #12
    1a30:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    1a34:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
    1a38:	12054a08 	andne	r4, r5, #8, 20	; 0x8000
    1a3c:	660b054b 	strvs	r0, [fp], -fp, asr #10
    1a40:	05661005 	strbeq	r1, [r6, #-5]!
    1a44:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1a48:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1a4c:	05661005 	strbeq	r1, [r6, #-5]!
    1a50:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1a54:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1a58:	05661005 	strbeq	r1, [r6, #-5]!
    1a5c:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    1a60:	660b052f 	strvs	r0, [fp], -pc, lsr #10
    1a64:	05661005 	strbeq	r1, [r6, #-5]!
    1a68:	0b052e0e 	bleq	14d2a8 <__bss_end__+0x4260>
    1a6c:	4a080530 	bmi	202f34 <__bss_end__+0xb9eec>
    1a70:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    1a74:	1005660b 	andne	r6, r5, fp, lsl #12
    1a78:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    1a7c:	052f1205 	streq	r1, [pc, #-517]!	; 187f <errno+0x187b>
    1a80:	1005660b 	andne	r6, r5, fp, lsl #12
    1a84:	2e0e0566 	cfsh32cs	mvfx0, mvfx14, #54
    1a88:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
    1a8c:	0e054a08 	vmlaeq.f32	s8, s10, s16
    1a90:	4a0c054b 	bmi	302fc4 <__bss_end__+0x1b9f7c>
    1a94:	3501054c 	strcc	r0, [r1, #-1356]	; 0xfffffab4
    1a98:	01000802 	tsteq	r0, r2, lsl #16
    1a9c:	00008201 	andeq	r8, r0, r1, lsl #4
    1aa0:	67000300 	strvs	r0, [r0, -r0, lsl #6]
    1aa4:	02000000 	andeq	r0, r0, #0
    1aa8:	0d0efb01 	vstreq	d15, [lr, #-4]
    1aac:	01010100 	mrseq	r0, (UNDEF: 17)
    1ab0:	00000001 	andeq	r0, r0, r1
    1ab4:	01000001 	tsteq	r0, r1
    1ab8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1a04 <errno+0x1a00>
    1abc:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    1ac0:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    1ac4:	2f676e6f 	svccs	0x00676e6f
    1ac8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1acc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1ad0:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    1ad4:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1ad8:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    1adc:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1ae0:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    1ae4:	6f72702f 	svcvs	0x0072702f
    1ae8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1aec:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    1af0:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1af4:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1af8:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
    1afc:	76000063 	strvc	r0, [r0], -r3, rrx
    1b00:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    1b04:	2e6c6c61 	cdpcs	12, 6, cr6, cr12, cr1, {3}
    1b08:	00010063 	andeq	r0, r1, r3, rrx
    1b0c:	01050000 	mrseq	r0, (UNDEF: 5)
    1b10:	d8020500 	stmdale	r2, {r8, sl}
    1b14:	1a000122 	bne	1fa4 <errno+0x1fa0>
    1b18:	05670c05 	strbeq	r0, [r7, #-3077]!	; 0xfffff3fb
    1b1c:	0a022f01 	beq	8d728 <morecore_area+0x44728>
    1b20:	98010100 	stmdals	r1, {r8}
    1b24:	03000000 	movweq	r0, #0
    1b28:	00008000 	andeq	r8, r0, r0
    1b2c:	fb010200 	blx	42336 <__stack_base+0x2336>
    1b30:	01000d0e 	tsteq	r0, lr, lsl #26
    1b34:	00010101 	andeq	r0, r1, r1, lsl #2
    1b38:	00010000 	andeq	r0, r1, r0
    1b3c:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    1b40:	2f656d6f 	svccs	0x00656d6f
    1b44:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1b48:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1b4c:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1b50:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1b54:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1b58:	6f747574 	svcvs	0x00747574
    1b5c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1b60:	616d2d73 	smcvs	53971	; 0xd2d3
    1b64:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1b68:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    1b6c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    1b70:	2f737463 	svccs	0x00737463
    1b74:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1b78:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    1b7c:	2f656d69 	svccs	0x00656d69
    1b80:	2f637273 	svccs	0x00637273
    1b84:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1b88:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    1b8c:	61612f68 	cmnvs	r1, r8, ror #30
    1b90:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
    1b94:	5f000032 	svcpl	0x00000032
    1b98:	6165615f 	cmnvs	r5, pc, asr r1
    1b9c:	725f6962 	subsvc	r6, pc, #1605632	; 0x188000
    1ba0:	5f646165 	svcpl	0x00646165
    1ba4:	532e7074 			; <UNDEFINED> instruction: 0x532e7074
    1ba8:	00000100 	andeq	r0, r0, r0, lsl #2
    1bac:	02050000 	andeq	r0, r5, #0
    1bb0:	000122fc 	strdeq	r2, [r1], -ip
    1bb4:	2f012603 	svccs	0x00012603
    1bb8:	02022f2f 	andeq	r2, r2, #47, 30	; 0xbc
    1bbc:	48010100 	stmdami	r1, {r8}
    1bc0:	03000002 	movweq	r0, #2
    1bc4:	00021400 	andeq	r1, r2, r0, lsl #8
    1bc8:	fb010200 	blx	423d2 <__stack_base+0x23d2>
    1bcc:	01000d0e 	tsteq	r0, lr, lsl #26
    1bd0:	00010101 	andeq	r0, r1, r1, lsl #2
    1bd4:	00010000 	andeq	r0, r1, r0
    1bd8:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    1bdc:	2f656d6f 	svccs	0x00656d6f
    1be0:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1be4:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1be8:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1bec:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1bf0:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1bf4:	6f747574 	svcvs	0x00747574
    1bf8:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1bfc:	616d2d73 	smcvs	53971	; 0xd2d3
    1c00:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1c04:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    1c08:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    1c0c:	2f737463 	svccs	0x00737463
    1c10:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1c14:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    1c18:	2f656d69 	svccs	0x00656d69
    1c1c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1c20:	2f656475 	svccs	0x00656475
    1c24:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1c28:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    1c2c:	61612f68 	cmnvs	r1, r8, ror #30
    1c30:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
    1c34:	65732f32 	ldrbvs	r2, [r3, #-3890]!	; 0xfffff0ce
    1c38:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1c3c:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1c40:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
    1c44:	2f656d6f 	svccs	0x00656d6f
    1c48:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1c4c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1c50:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1c54:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1c58:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1c5c:	6f747574 	svcvs	0x00747574
    1c60:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1c64:	616d2d73 	smcvs	53971	; 0xd2d3
    1c68:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1c6c:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    1c70:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    1c74:	2f737463 	svccs	0x00737463
    1c78:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1c7c:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    1c80:	2f656d69 	svccs	0x00656d69
    1c84:	2f637273 	svccs	0x00637273
    1c88:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1c8c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    1c90:	61612f68 	cmnvs	r1, r8, ror #30
    1c94:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
    1c98:	682f0032 	stmdavs	pc!, {r1, r4, r5}	; <UNPREDICTABLE>
    1c9c:	2f656d6f 	svccs	0x00656d6f
    1ca0:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1ca4:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1ca8:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1cac:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1cb0:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1cb4:	6f747574 	svcvs	0x00747574
    1cb8:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1cbc:	616d2d73 	smcvs	53971	; 0xd2d3
    1cc0:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1cc4:	6b2f7473 	blvs	bdee98 <__bss_end__+0xa95e50>
    1cc8:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1ccc:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    1cd0:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    1cd4:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
    1cd8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1cdc:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    1ce0:	6c00346c 	cfstrsvs	mvf3, [r0], {108}	; 0x6c
    1ce4:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    1ce8:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
    1cec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1cf0:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    1cf4:	00346c65 	eorseq	r6, r4, r5, ror #24
    1cf8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1c44 <errno+0x1c40>
    1cfc:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    1d00:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    1d04:	2f676e6f 	svccs	0x00676e6f
    1d08:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1d0c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1d10:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    1d14:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1d18:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    1d1c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1d20:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    1d24:	6f72702f 	svcvs	0x0072702f
    1d28:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1d2c:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    1d30:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1d34:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1d38:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    1d3c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1d40:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    1d44:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1d48:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1d4c:	74000065 	strvc	r0, [r0], #-101	; 0xffffff9b
    1d50:	61657268 	cmnvs	r5, r8, ror #4
    1d54:	72615f64 	rsbvc	r5, r1, #100, 30	; 0x190
    1d58:	682e6863 	stmdavs	lr!, {r0, r1, r5, r6, fp, sp, lr}
    1d5c:	00000100 	andeq	r0, r0, r0, lsl #2
    1d60:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
    1d64:	5f696261 	svcpl	0x00696261
    1d68:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1d6c:	5f70745f 	svcpl	0x0070745f
    1d70:	00632e63 	rsbeq	r2, r3, r3, ror #28
    1d74:	73000002 	movwvc	r0, #2
    1d78:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    1d7c:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d80:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1d84:	00030068 	andeq	r0, r3, r8, rrx
    1d88:	6a626f00 	bvs	189d990 <__bss_end__+0x1754948>
    1d8c:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
    1d90:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    1d94:	00030068 	andeq	r0, r3, r8, rrx
    1d98:	61687300 	cmnvs	r8, r0, lsl #6
    1d9c:	5f646572 	svcpl	0x00646572
    1da0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    1da4:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
    1da8:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    1dac:	73000004 	movwvc	r0, #4
    1db0:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    1db4:	79745f64 	ldmdbvc	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1db8:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1dbc:	00030068 	andeq	r0, r3, r8, rrx
    1dc0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1dc4:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1dc8:	00050068 	andeq	r0, r5, r8, rrx
    1dcc:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
    1dd0:	6f697463 	svcvs	0x00697463
    1dd4:	682e736e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
    1dd8:	00000300 	andeq	r0, r0, r0, lsl #6
    1ddc:	00010500 	andeq	r0, r1, r0, lsl #10
    1de0:	230c0205 	movwcs	r0, #49669	; 0xc205
    1de4:	0e030001 	cdpeq	0, 0, cr0, cr3, cr1, {0}
    1de8:	68050501 	stmdavs	r5, {r0, r8, sl}
    1dec:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
    1df0:	1e032f01 	cdpne	15, 0, cr2, cr3, cr1, {0}
    1df4:	4b0c0582 	blmi	303404 <__bss_end__+0x1ba3bc>
    1df8:	044b0105 	strbeq	r0, [fp], #-261	; 0xfffffefb
    1dfc:	4a580302 	bmi	1602a0c <__bss_end__+0x14b99c4>
    1e00:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    1e04:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    1e08:	35010100 	strcc	r0, [r1, #-256]	; 0xffffff00
    1e0c:	03000002 	movweq	r0, #2
    1e10:	00021100 	andeq	r1, r2, r0, lsl #2
    1e14:	fb010200 	blx	4261e <__stack_base+0x261e>
    1e18:	01000d0e 	tsteq	r0, lr, lsl #26
    1e1c:	00010101 	andeq	r0, r1, r1, lsl #2
    1e20:	00010000 	andeq	r0, r1, r0
    1e24:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    1e28:	2f656d6f 	svccs	0x00656d6f
    1e2c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1e30:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1e34:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1e38:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1e3c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1e40:	6f747574 	svcvs	0x00747574
    1e44:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1e48:	616d2d73 	smcvs	53971	; 0xd2d3
    1e4c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1e50:	6b2f7473 	blvs	bdf024 <__bss_end__+0xa95fdc>
    1e54:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1e58:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    1e5c:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    1e60:	72732f34 	rsbsvc	r2, r3, #52, 30	; 0xd0
    1e64:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
    1e68:	2f656d6f 	svccs	0x00656d6f
    1e6c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1e70:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1e74:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1e78:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1e7c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1e80:	6f747574 	svcvs	0x00747574
    1e84:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1e88:	616d2d73 	smcvs	53971	; 0xd2d3
    1e8c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1e90:	6b2f7473 	blvs	bdf064 <__bss_end__+0xa9601c>
    1e94:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    1e98:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    1e9c:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    1ea0:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
    1ea4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1ea8:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    1eac:	2f00346c 	svccs	0x0000346c
    1eb0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    1eb4:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    1eb8:	6f647679 	svcvs	0x00647679
    1ebc:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    1ec0:	2f346c65 	svccs	0x00346c65
    1ec4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1ec8:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    1ecc:	6169726f 	cmnvs	r9, pc, ror #4
    1ed0:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    1ed4:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    1ed8:	2f747365 	svccs	0x00747365
    1edc:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    1ee0:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 1d54 <errno+0x1d50>
    1ee4:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    1ee8:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1eec:	5f346c65 	svcpl	0x00346c65
    1ef0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    1ef4:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    1ef8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1efc:	7261612f 	rsbvc	r6, r1, #-1073741813	; 0xc000000b
    1f00:	32336863 	eorscc	r6, r3, #6488064	; 0x630000
    1f04:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1f08:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    1f0c:	615f346c 	cmpvs	pc, ip, ror #8
    1f10:	00686372 	rsbeq	r6, r8, r2, ror r3
    1f14:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    1f18:	2f346c65 	svccs	0x00346c65
    1f1c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1f20:	2f656475 	svccs	0x00656475
    1f24:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1f28:	62696c00 	rsbvs	r6, r9, #0, 24
    1f2c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1f30:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1f34:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    1f38:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    1f3c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1f40:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    1f44:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    1f48:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    1f4c:	2f346c65 	svccs	0x00346c65
    1f50:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1f54:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    1f58:	73000068 	movwvc	r0, #104	; 0x68
    1f5c:	5f346c65 	svcpl	0x00346c65
    1f60:	746f6f62 	strbtvc	r6, [pc], #-3938	; 1f68 <errno+0x1f64>
    1f64:	6f666e69 	svcvs	0x00666e69
    1f68:	0100632e 	tsteq	r0, lr, lsr #6
    1f6c:	69730000 	ldmdbvs	r3!, {}^	; <UNPREDICTABLE>
    1f70:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1f74:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1f78:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1f7c:	00000200 	andeq	r0, r0, r0, lsl #4
    1f80:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1f84:	79747463 	ldmdbvc	r4!, {r0, r1, r5, r6, sl, ip, sp, lr}^
    1f88:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    1f8c:	00000200 	andeq	r0, r0, r0, lsl #4
    1f90:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    1f94:	79747463 	ldmdbvc	r4!, {r0, r1, r5, r6, sl, ip, sp, lr}^
    1f98:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    1f9c:	00000300 	andeq	r0, r0, r0, lsl #6
    1fa0:	736e6f63 	cmnvc	lr, #396	; 0x18c
    1fa4:	746e6174 	strbtvc	r6, [lr], #-372	; 0xfffffe8c
    1fa8:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1fac:	73000002 	movwvc	r0, #2
    1fb0:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    1fb4:	79745f64 	ldmdbvc	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1fb8:	5f736570 	svcpl	0x00736570
    1fbc:	2e6e6567 	cdpcs	5, 6, cr6, cr14, cr7, {3}
    1fc0:	00040068 	andeq	r0, r4, r8, rrx
    1fc4:	61687300 	cmnvs	r8, r0, lsl #6
    1fc8:	5f646572 	svcpl	0x00646572
    1fcc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    1fd0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1fd4:	74000002 	strvc	r0, [r0], #-2
    1fd8:	73657079 	cmnvc	r5, #121	; 0x79
    1fdc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1fe0:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1fe4:	61636f76 	smcvs	14070	; 0x36f6
    1fe8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1fec:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    1ff0:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    1ff4:	61636f76 	smcvs	14070	; 0x36f6
    1ff8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1ffc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    2000:	6f620000 	svcvs	0x00620000
    2004:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
    2008:	745f6f66 	ldrbvc	r6, [pc], #-3942	; 2010 <errno+0x200c>
    200c:	73657079 	cmnvc	r5, #121	; 0x79
    2010:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2014:	75660000 	strbvc	r0, [r6, #-0]!
    2018:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    201c:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
    2020:	00020068 	andeq	r0, r2, r8, rrx
    2024:	01050000 	mrseq	r0, (UNDEF: 5)
    2028:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
    202c:	03000123 	movweq	r0, #291	; 0x123
    2030:	0e050114 	mcreq	1, 0, r0, cr5, cr4, {0}
    2034:	83010583 	movwhi	r0, #5507	; 0x1583
    2038:	4b0c0585 	blmi	303654 <__bss_end__+0x1ba60c>
    203c:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    2040:	01010008 	tsteq	r1, r8
    2044:	000002e2 	andeq	r0, r0, r2, ror #5
    2048:	02500003 	subseq	r0, r0, #3
    204c:	01020000 	mrseq	r0, (UNDEF: 2)
    2050:	000d0efb 	strdeq	r0, [sp], -fp
    2054:	01010101 	tsteq	r1, r1, lsl #2
    2058:	01000000 	mrseq	r0, (UNDEF: 0)
    205c:	2f010000 	svccs	0x00010000
    2060:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    2064:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    2068:	6f647679 	svcvs	0x00647679
    206c:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    2070:	2f346c65 	svccs	0x00346c65
    2074:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2078:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    207c:	6169726f 	cmnvs	r9, pc, ror #4
    2080:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    2084:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    2088:	2f747365 	svccs	0x00747365
    208c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2090:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 1f04 <errno+0x1f00>
    2094:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    2098:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    209c:	5f346c65 	svcpl	0x00346c65
    20a0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    20a4:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    20a8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    20ac:	7261612f 	rsbvc	r6, r1, #-1073741813	; 0xc000000b
    20b0:	32336863 	eorscc	r6, r3, #6488064	; 0x630000
    20b4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    20b8:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    20bc:	615f346c 	cmpvs	pc, ip, ror #8
    20c0:	00686372 	rsbeq	r6, r8, r2, ror r3
    20c4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2010 <errno+0x200c>
    20c8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    20cc:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    20d0:	2f676e6f 	svccs	0x00676e6f
    20d4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    20d8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    20dc:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    20e0:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    20e4:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    20e8:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    20ec:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    20f0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    20f4:	2f6c656e 	svccs	0x006c656e
    20f8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    20fc:	2f346c65 	svccs	0x00346c65
    2100:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    2104:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    2108:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    210c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    2110:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2114:	72612f34 	rsbvc	r2, r1, #52, 30	; 0xd0
    2118:	2f006863 	svccs	0x00006863
    211c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    2120:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    2124:	6f647679 	svcvs	0x00647679
    2128:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    212c:	2f346c65 	svccs	0x00346c65
    2130:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2134:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    2138:	6169726f 	cmnvs	r9, pc, ror #4
    213c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    2140:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    2144:	2f747365 	svccs	0x00747365
    2148:	6a6f7270 	bvs	1bdeb10 <__bss_end__+0x1a95ac8>
    214c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    2150:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2154:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    2158:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    215c:	2f736c61 	svccs	0x00736c61
    2160:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    2164:	74346c65 	ldrtvc	r6, [r4], #-3173	; 0xfffff39b
    2168:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    216c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    2170:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2174:	6f682f00 	svcvs	0x00682f00
    2178:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    217c:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    2180:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    2184:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2188:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    218c:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    2190:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    2194:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    2198:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    219c:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    21a0:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    21a4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    21a8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    21ac:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    21b0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    21b4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    21b8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    21bc:	696c0034 	stmdbvs	ip!, {r2, r4, r5}^
    21c0:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    21c4:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
    21c8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    21cc:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    21d0:	6d00346c 	cfstrsvs	mvf3, [r0, #-432]	; 0xfffffe50
    21d4:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    21d8:	2f636269 	svccs	0x00636269
    21dc:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    21e0:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    21e4:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    21e8:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    21ec:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    21f0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    21f4:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    21f8:	73000073 	movwvc	r0, #115	; 0x73
    21fc:	61637379 	smcvs	14137	; 0x3739
    2200:	2e736c6c 	cdpcs	12, 7, cr6, cr3, cr12, {3}
    2204:	00010068 	andeq	r0, r1, r8, rrx
    2208:	73797300 	cmnvc	r9, #0, 6
    220c:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    2210:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2214:	63000002 	movwvs	r0, #2
    2218:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    221c:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    2220:	2e73726f 	cdpcs	2, 7, cr7, cr3, cr15, {3}
    2224:	00030063 	andeq	r0, r3, r3, rrx
    2228:	6d697300 	stclvs	3, cr7, [r9, #-0]
    222c:	5f656c70 	svcpl	0x00656c70
    2230:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2234:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2238:	6f000004 	svcvs	0x00000004
    223c:	63656a62 	cmnvs	r5, #401408	; 0x62000
    2240:	70797474 	rsbsvc	r7, r9, r4, ror r4
    2244:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2248:	73000004 	movwvc	r0, #4
    224c:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    2250:	79745f64 	ldmdbvc	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2254:	5f736570 	svcpl	0x00736570
    2258:	2e6e6567 	cdpcs	5, 6, cr6, cr14, cr7, {3}
    225c:	00050068 	andeq	r0, r5, r8, rrx
    2260:	61687300 	cmnvs	r8, r0, lsl #6
    2264:	5f646572 	svcpl	0x00646572
    2268:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    226c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2270:	61000004 	tstvs	r0, r4
    2274:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    2278:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    227c:	00060068 	andeq	r0, r6, r8, rrx
    2280:	73797300 	cmnvc	r9, #0, 6
    2284:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    2288:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    228c:	75660000 	strbvc	r0, [r6, #-0]!
    2290:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    2294:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
    2298:	00040068 	andeq	r0, r4, r8, rrx
    229c:	01050000 	mrseq	r0, (UNDEF: 5)
    22a0:	b8020500 	stmdalt	r2, {r8, sl}
    22a4:	03000123 	movweq	r0, #291	; 0x123
    22a8:	05010194 	streq	r0, [r1, #-404]	; 0xfffffe6c
    22ac:	052fd718 	streq	sp, [pc, #-1816]!	; 1b9c <errno+0x1b98>
    22b0:	18053129 	stmdane	r5, {r0, r3, r5, r8, ip, sp}
    22b4:	2f29054a 	svccs	0x0029054a
    22b8:	4a18054b 	bmi	6037ec <__bss_end__+0x4ba7a4>
    22bc:	052f2905 	streq	r2, [pc, #-2309]!	; 19bf <errno+0x19bb>
    22c0:	05324a18 	ldreq	r4, [r2, #-2584]!	; 0xfffff5e8
    22c4:	0f052f05 	svceq	0x00052f05
    22c8:	67100535 			; <UNDEFINED> instruction: 0x67100535
    22cc:	674b1105 	strbvs	r1, [fp, -r5, lsl #2]
    22d0:	01056767 	tsteq	r5, r7, ror #14
    22d4:	03020467 	movweq	r0, #9319	; 0x2467
    22d8:	05820391 	streq	r0, [r2, #913]	; 0x391
    22dc:	4b4b9f0f 	blmi	12e9f20 <__bss_end__+0x11a0ed8>
    22e0:	054b4b4b 	strbeq	r4, [fp, #-2891]	; 0xfffff4b5
    22e4:	01054c05 	tsteq	r5, r5, lsl #24
    22e8:	04132202 	ldreq	r2, [r3], #-514	; 0xfffffdfe
    22ec:	7bc70303 	blvc	ff1c2f00 <__bss_end__+0xff079eb8>
    22f0:	a00b0566 	andge	r0, fp, r6, ror #10
    22f4:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    22f8:	20054a05 	andcs	r4, r5, r5, lsl #20
    22fc:	03040200 	movweq	r0, #16896	; 0x4200
    2300:	0009052f 	andeq	r0, r9, pc, lsr #10
    2304:	66030402 	strvs	r0, [r3], -r2, lsl #8
    2308:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    230c:	05650304 	strbeq	r0, [r5, #-772]!	; 0xfffffcfc
    2310:	04020005 	streq	r0, [r2], #-5
    2314:	0c056601 	stceq	6, cr6, [r5], {1}
    2318:	2f010586 	svccs	0x00010586
    231c:	4b050569 	blmi	1438c8 <morecore_area+0xfa8c8>
    2320:	4e670105 	powmis	f0, f7, f5
    2324:	000802a2 	andeq	r0, r8, r2, lsr #5
    2328:	0a560101 	beq	1582734 <__bss_end__+0x14396ec>
    232c:	00030000 	andeq	r0, r3, r0
    2330:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2334:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2338:	0101000d 	tsteq	r1, sp
    233c:	00000101 	andeq	r0, r0, r1, lsl #2
    2340:	00000100 	andeq	r0, r0, r0, lsl #2
    2344:	6f682f01 	svcvs	0x00682f01
    2348:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    234c:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    2350:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    2354:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2358:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    235c:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    2360:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    2364:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    2368:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    236c:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    2370:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    2374:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    2378:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    237c:	5f344c65 	svcpl	0x00344c65
    2380:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    2384:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2388:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    238c:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    2390:	73797363 	cmnvc	r9, #-1946157055	; 0x8c000001
    2394:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2398:	73756d00 	cmnvc	r5, #0, 26
    239c:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    23a0:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    23a4:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    23a8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    23ac:	6174732f 	cmnvs	r4, pc, lsr #6
    23b0:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    23b4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    23b8:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    23bc:	00737469 	rsbseq	r7, r3, r9, ror #8
    23c0:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    23c4:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    23c8:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    23cc:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    23d0:	2f706d65 	svccs	0x00706d65
    23d4:	67617473 			; <UNDEFINED> instruction: 0x67617473
    23d8:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    23dc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    23e0:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
    23e4:	2f656d6f 	svccs	0x00656d6f
    23e8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    23ec:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    23f0:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    23f4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    23f8:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    23fc:	6f747574 	svcvs	0x00747574
    2400:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    2404:	616d2d73 	smcvs	53971	; 0xd2d3
    2408:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    240c:	6b2f7473 	blvs	bdf5e0 <__bss_end__+0xa96598>
    2410:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2414:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    2418:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    241c:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
    2420:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2424:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    2428:	2f00346c 	svccs	0x0000346c
    242c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    2430:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    2434:	6f647679 	svcvs	0x00647679
    2438:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    243c:	2f346c65 	svccs	0x00346c65
    2440:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2444:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    2448:	6169726f 	cmnvs	r9, pc, ror #4
    244c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    2450:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    2454:	2f747365 	svccs	0x00747365
    2458:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    245c:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 22d0 <errno+0x22cc>
    2460:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    2464:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    2468:	5f346c65 	svcpl	0x00346c65
    246c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    2470:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    2474:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2478:	7261612f 	rsbvc	r6, r1, #-1073741813	; 0xc000000b
    247c:	32336863 	eorscc	r6, r3, #6488064	; 0x630000
    2480:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2484:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    2488:	615f346c 	cmpvs	pc, ip, ror #8
    248c:	00686372 	rsbeq	r6, r8, r2, ror r3
    2490:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    2494:	2f346c65 	svccs	0x00346c65
    2498:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    249c:	2f656475 	svccs	0x00656475
    24a0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    24a4:	62696c00 	rsbvs	r6, r9, #0, 24
    24a8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    24ac:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    24b0:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    24b4:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    24b8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    24bc:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    24c0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    24c4:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    24c8:	2f346c65 	svccs	0x00346c65
    24cc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    24d0:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    24d4:	756d0068 	strbvc	r0, [sp, #-104]!	; 0xffffff98
    24d8:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    24dc:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    24e0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    24e4:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    24e8:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    24ec:	2f656761 	svccs	0x00656761
    24f0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    24f4:	2f656475 	svccs	0x00656475
    24f8:	00737973 	rsbseq	r7, r3, r3, ror r9
    24fc:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2448 <errno+0x2444>
    2500:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    2504:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    2508:	2f676e6f 	svccs	0x00676e6f
    250c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2510:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2514:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    2518:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    251c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    2520:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2524:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    2528:	6f72702f 	svcvs	0x0072702f
    252c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    2530:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    2534:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    2538:	2f736269 	svccs	0x00736269
    253c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2540:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2544:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2548:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    254c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    2550:	2f00736c 	svccs	0x0000736c
    2554:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    2558:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    255c:	6f647679 	svcvs	0x00647679
    2560:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    2564:	2f346c65 	svccs	0x00346c65
    2568:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    256c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    2570:	6169726f 	cmnvs	r9, pc, ror #4
    2574:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    2578:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    257c:	2f747365 	svccs	0x00747365
    2580:	6a6f7270 	bvs	1bdef48 <__bss_end__+0x1a95f00>
    2584:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    2588:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    258c:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    2590:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 2410 <errno+0x240c>
    2594:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    2598:	7376346c 	cmnvc	r6, #108, 8	; 0x6c000000
    259c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    25a0:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    25a4:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    25a8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    25ac:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    25b0:	73762f6d 	cmnvc	r6, #436	; 0x1b4
    25b4:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    25b8:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    25bc:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    25c0:	2f656d6f 	svccs	0x00656d6f
    25c4:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    25c8:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    25cc:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    25d0:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    25d4:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    25d8:	6f747574 	svcvs	0x00747574
    25dc:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    25e0:	616d2d73 	smcvs	53971	; 0xd2d3
    25e4:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    25e8:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    25ec:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    25f0:	2f737463 	svccs	0x00737463
    25f4:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    25f8:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    25fc:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2600:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    2604:	69747534 	ldmdbvs	r4!, {r2, r4, r5, r8, sl, ip, sp, lr}^
    2608:	692f736c 	stmdbvs	pc!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
    260c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2610:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    2614:	75346c65 	ldrvc	r6, [r4, #-3173]!	; 0xfffff39b
    2618:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    261c:	6f682f00 	svcvs	0x00682f00
    2620:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    2624:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    2628:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    262c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2630:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    2634:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    2638:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    263c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    2640:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    2644:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    2648:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    264c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    2650:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    2654:	5f344c65 	svcpl	0x00344c65
    2658:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    265c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2660:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2664:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    2668:	73797363 	cmnvc	r9, #-1946157055	; 0x8c000001
    266c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2670:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2674:	73756d2f 	cmnvc	r5, #3008	; 0xbc0
    2678:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    267c:	682f0073 	stmdavs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
    2680:	2f656d6f 	svccs	0x00656d6f
    2684:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    2688:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    268c:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    2690:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    2694:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    2698:	6f747574 	svcvs	0x00747574
    269c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    26a0:	616d2d73 	smcvs	53971	; 0xd2d3
    26a4:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    26a8:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    26ac:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    26b0:	2f737463 	svccs	0x00737463
    26b4:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    26b8:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    26bc:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    26c0:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    26c4:	73756d34 	cmnvc	r5, #52, 26	; 0xd00
    26c8:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    26cc:	6e692f73 	mcrvs	15, 3, r2, cr9, cr3, {3}
    26d0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    26d4:	73000065 	movwvc	r0, #101	; 0x65
    26d8:	695f7379 	ldmdbvs	pc, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    26dc:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    26e0:	61000001 	tstvs	r0, r1
    26e4:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    26e8:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    26ec:	00020068 	andeq	r0, r2, r8, rrx
    26f0:	72726500 	rsbsvc	r6, r2, #0, 10
    26f4:	682e6f6e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    26f8:	00000300 	andeq	r0, r0, r0, lsl #6
    26fc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    2700:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    2704:	75000003 	strvc	r0, [r0, #-3]
    2708:	7473696e 	ldrbtvc	r6, [r3], #-2414	; 0xfffff692
    270c:	00682e64 	rsbeq	r2, r8, r4, ror #28
    2710:	73000003 	movwvc	r0, #3
    2714:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    2718:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    271c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    2720:	00040068 	andeq	r0, r4, r8, rrx
    2724:	6a626f00 	bvs	189e32c <__bss_end__+0x17552e4>
    2728:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
    272c:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    2730:	00040068 	andeq	r0, r4, r8, rrx
    2734:	6a626f00 	bvs	189e33c <__bss_end__+0x17552f4>
    2738:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
    273c:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    2740:	00050068 	andeq	r0, r5, r8, rrx
    2744:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
    2748:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
    274c:	682e7374 	stmdavs	lr!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    2750:	00000400 	andeq	r0, r0, r0, lsl #8
    2754:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    2758:	745f6465 	ldrbvc	r6, [pc], #-1125	; 2760 <errno+0x275c>
    275c:	73657079 	cmnvc	r5, #121	; 0x79
    2760:	6e65675f 	mcrvs	7, 3, r6, cr5, cr15, {2}
    2764:	0600682e 	streq	r6, [r0], -lr, lsr #16
    2768:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    276c:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    2770:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    2774:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    2778:	00000400 	andeq	r0, r0, r0, lsl #8
    277c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    2780:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2784:	00682e73 	rsbeq	r2, r8, r3, ror lr
    2788:	69000004 	stmdbvs	r0, {r2}
    278c:	636f766e 	cmnvs	pc, #115343360	; 0x6e00000
    2790:	6f697461 	svcvs	0x00697461
    2794:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    2798:	69000006 	stmdbvs	r0, {r1, r2}
    279c:	636f766e 	cmnvs	pc, #115343360	; 0x6e00000
    27a0:	6f697461 	svcvs	0x00697461
    27a4:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    27a8:	72000007 	andvc	r0, r0, #7
    27ac:	756f7365 	strbvc	r7, [pc, #-869]!	; 244f <errno+0x244b>
    27b0:	2e656372 	mcrcs	3, 3, r6, cr5, cr2, {3}
    27b4:	00080068 	andeq	r0, r8, r8, rrx
    27b8:	5f667a00 	svcpl	0x00667a00
    27bc:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
    27c0:	00090068 	andeq	r0, r9, r8, rrx
    27c4:	67617000 	strbvs	r7, [r1, -r0]!
    27c8:	00682e65 	rsbeq	r2, r8, r5, ror #28
    27cc:	7300000a 	movwvc	r0, #10
    27d0:	72657274 	rsbvc	r7, r5, #116, 4	; 0x40000007
    27d4:	2e726f72 	mrccs	15, 3, r6, cr2, cr2, {3}
    27d8:	000b0068 	andeq	r0, fp, r8, rrx
    27dc:	2e6f6900 	vmulcs.f16	s13, s30, s0	; <UNPREDICTABLE>
    27e0:	000c0068 	andeq	r0, ip, r8, rrx
    27e4:	63726100 	cmnvs	r2, #0, 2
    27e8:	74735f68 	ldrbtvc	r5, [r3], #-3944	; 0xfffff098
    27ec:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    27f0:	000d0068 	andeq	r0, sp, r8, rrx
    27f4:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    27f8:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    27fc:	003e6e69 	eorseq	r6, lr, r9, ror #28
    2800:	00000000 	andeq	r0, r0, r0
    2804:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2808:	0125a402 			; <UNDEFINED> instruction: 0x0125a402
    280c:	01380300 	teqeq	r8, r0, lsl #6
    2810:	05830505 	streq	r0, [r3, #1285]	; 0x505
    2814:	18056621 	stmdane	r5, {r0, r5, r9, sl, sp, lr}
    2818:	d705054b 	strle	r0, [r5, -fp, asr #10]
    281c:	02040200 	andeq	r0, r4, #0, 4
    2820:	1205f206 	andne	pc, r5, #1610612736	; 0x60000000
    2824:	01040200 	mrseq	r0, R12_usr
    2828:	2805f306 	stmdacs	r5, {r1, r2, r8, r9, ip, sp, lr, pc}
    282c:	01040200 	mrseq	r0, R12_usr
    2830:	000105f2 	strdeq	r0, [r1], -r2
    2834:	4b010402 	blmi	43844 <__stack_base+0x3844>
    2838:	4b1d0569 	blmi	743de4 <__bss_end__+0x5fad9c>
    283c:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
    2840:	18054b10 	stmdane	r5, {r4, r8, r9, fp, lr}
    2844:	d719054d 	ldrle	r0, [r9, -sp, asr #10]
    2848:	3d080105 	stfccs	f0, [r8, #-20]	; 0xffffffec
    284c:	830f0585 	movwhi	r0, #62853	; 0xf585
    2850:	00661905 	rsbeq	r1, r6, r5, lsl #18
    2854:	06010402 	streq	r0, [r1], -r2, lsl #8
    2858:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    285c:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    2860:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    2864:	04020001 	streq	r0, [r2], #-1
    2868:	852f0607 	strhi	r0, [pc, #-1543]!	; 2269 <errno+0x2265>
    286c:	05671005 	strbeq	r1, [r7, #-5]!
    2870:	1205f20e 	andne	pc, r5, #-536870912	; 0xe0000000
    2874:	66080567 	strvs	r0, [r8], -r7, ror #10
    2878:	054b1005 	strbeq	r1, [fp, #-5]
    287c:	15054d1c 	strne	r4, [r5, #-3356]	; 0xfffff2e4
    2880:	9e130582 	cdpls	5, 1, cr0, cr3, cr2, {4}
    2884:	05671705 	strbeq	r1, [r7, #-1797]!	; 0xfffff8fb
    2888:	09056608 	stmdbeq	r5, {r3, r9, sl, sp, lr}
    288c:	9f10054b 	svcls	0x0010054b
    2890:	054d1905 	strbeq	r1, [sp, #-2309]	; 0xfffff6fb
    2894:	0505850e 	streq	r8, [r5, #-1294]	; 0xfffffaf2
    2898:	0009054a 	andeq	r0, r9, sl, asr #10
    289c:	2f030402 	svccs	0x00030402
    28a0:	02002f05 	andeq	r2, r0, #5, 30
    28a4:	05490304 	strbeq	r0, [r9, #-772]	; 0xfffffcfc
    28a8:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    28ac:	05056601 	streq	r6, [r5, #-1537]	; 0xfffff9ff
    28b0:	01040200 	mrseq	r0, R12_usr
    28b4:	6a0c0566 	bvs	303e54 <__bss_end__+0x1bae0c>
    28b8:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    28bc:	05831f05 	streq	r1, [r3, #3845]	; 0xf05
    28c0:	12056609 	andne	r6, r5, #9437184	; 0x900000
    28c4:	66080569 	strvs	r0, [r8], -r9, ror #10
    28c8:	054b0d05 	strbeq	r0, [fp, #-3333]	; 0xfffff2fb
    28cc:	14054a0c 	strne	r4, [r5], #-2572	; 0xfffff5f4
    28d0:	4f23054b 	svcmi	0x0023054b
    28d4:	05bb0805 	ldreq	r0, [fp, #2053]!	; 0x805
    28d8:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    28dc:	9e060104 	adflss	f0, f6, f4
    28e0:	08061005 	stmdaeq	r6, {r0, r2, ip}
    28e4:	4d250575 	cfstr32mi	mvfx0, [r5, #-468]!	; 0xfffffe2c
    28e8:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
    28ec:	09059f08 	stmdbeq	r5, {r3, r8, r9, sl, fp, ip, pc}
    28f0:	02004b67 	andeq	r4, r0, #105472	; 0x19c00
    28f4:	9e060104 	adflss	f0, f6, f4
    28f8:	08061005 	stmdaeq	r6, {r0, r2, ip}
    28fc:	4e050575 	cfrshl64mi	mvdx5, mvdx5, r0
    2900:	05662e05 	strbeq	r2, [r6, #-3589]!	; 0xfffff1fb
    2904:	08838205 	stmeq	r3, {r0, r2, r9, pc}
    2908:	0e059f3f 	mcreq	15, 0, r9, cr5, cr15, {1}
    290c:	831305a1 	tsthi	r3, #675282944	; 0x28400000
    2910:	05850d05 	streq	r0, [r5, #3333]	; 0xd05
    2914:	0505850e 	streq	r8, [r5, #-1294]	; 0xfffffaf2
    2918:	00090582 	andeq	r0, r9, r2, lsl #11
    291c:	2f030402 	svccs	0x00030402
    2920:	02002d05 	andeq	r2, r0, #320	; 0x140
    2924:	05490304 	strbeq	r0, [r9, #-772]	; 0xfffffcfc
    2928:	04020005 	streq	r0, [r2], #-5
    292c:	0c056601 	stceq	6, cr6, [r5], {1}
    2930:	2f010585 	svccs	0x00010585
    2934:	4b120569 	blmi	483ee0 <__bss_end__+0x33ae98>
    2938:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
    293c:	0c054b0d 			; <UNDEFINED> instruction: 0x0c054b0d
    2940:	4b14054a 	blmi	503e70 <__bss_end__+0x3bae28>
    2944:	054e0c05 	strbeq	r0, [lr, #-3077]	; 0xfffff3fb
    2948:	054d4b01 	strbeq	r4, [sp, #-2817]	; 0xfffff4ff
    294c:	02008305 	andeq	r8, r0, #335544320	; 0x14000000
    2950:	ba060104 	blt	182d68 <__bss_end__+0x39d20>
    2954:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2958:	000c0566 	andeq	r0, ip, r6, ror #10
    295c:	06030402 	streq	r0, [r3], -r2, lsl #8
    2960:	001505f3 			; <UNDEFINED> instruction: 0x001505f3
    2964:	66030402 	strvs	r0, [r3], -r2, lsl #8
    2968:	02000c05 	andeq	r0, r0, #1280	; 0x500
    296c:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
    2970:	04020001 	streq	r0, [r2], #-1
    2974:	05692f03 	strbeq	r2, [r9, #-3843]!	; 0xfffff0fd
    2978:	0c059f0b 	stceq	15, cr9, [r5], {11}
    297c:	8301054b 	movwhi	r0, #5451	; 0x154b
    2980:	bc0b0569 	cfstr32lt	mvfx0, [fp], {105}	; 0x69
    2984:	05680805 	strbeq	r0, [r8, #-2053]!	; 0xfffff7fb
    2988:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    298c:	9e060104 	adflss	f0, f6, f4
    2990:	00e50806 	rsceq	r0, r5, r6, lsl #16
    2994:	06020402 	streq	r0, [r2], -r2, lsl #8
    2998:	00100566 	andseq	r0, r0, r6, ror #10
    299c:	06010402 	streq	r0, [r1], -r2, lsl #8
    29a0:	4e1105f3 	mrcmi	5, 0, r0, cr1, cr3, {7}
    29a4:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    29a8:	1c056608 	stcne	6, cr6, [r5], {8}
    29ac:	01040200 	mrseq	r0, R12_usr
    29b0:	9f10054a 	svcls	0x0010054a
    29b4:	91080c05 	tstls	r8, r5, lsl #24
    29b8:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    29bc:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    29c0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    29c4:	1405ba01 	strne	fp, [r5], #-2561	; 0xfffff5ff
    29c8:	0808054b 	stmdaeq	r8, {r0, r1, r3, r6, r8, sl}
    29cc:	670905af 	strvs	r0, [r9, -pc, lsr #11]
    29d0:	01040200 	mrseq	r0, R12_usr
    29d4:	10059e06 	andne	r9, r5, r6, lsl #28
    29d8:	05ad0806 	streq	r0, [sp, #2054]!	; 0x806
    29dc:	08054c0e 	stmdaeq	r5, {r1, r2, r3, sl, fp, lr}
    29e0:	6709054b 	strvs	r0, [r9, -fp, asr #10]
    29e4:	01040200 	mrseq	r0, R12_usr
    29e8:	10059e06 	andne	r9, r5, r6, lsl #28
    29ec:	05750806 	ldrbeq	r0, [r5, #-2054]!	; 0xfffff7fa
    29f0:	13054d1a 	movwne	r4, #23834	; 0x5d1a
    29f4:	67110567 	ldrvs	r0, [r1, -r7, ror #10]
    29f8:	05820f05 	streq	r0, [r2, #3845]	; 0xf05
    29fc:	08054b0d 	stmdaeq	r5, {r0, r2, r3, r8, r9, fp, lr}
    2a00:	4b09054a 	blmi	243f30 <__bss_end__+0xfaee8>
    2a04:	01040200 	mrseq	r0, R12_usr
    2a08:	08069e06 	stmdaeq	r6, {r1, r2, r9, sl, fp, ip, pc}
    2a0c:	4b100575 	blmi	403fe8 <__bss_end__+0x2bafa0>
    2a10:	054c1705 	strbeq	r1, [ip, #-1797]	; 0xfffff8fb
    2a14:	13056714 	movwne	r6, #22292	; 0x5714
    2a18:	67160567 	ldrvs	r0, [r6, -r7, ror #10]
    2a1c:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
    2a20:	04020001 	streq	r0, [r2], #-1
    2a24:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    2a28:	09058311 	stmdbeq	r5, {r0, r4, r8, r9, pc}
    2a2c:	9f0c059f 	svcls	0x000c059f
    2a30:	9f0105a0 	svcls	0x000105a0
    2a34:	83090569 	movwhi	r0, #38249	; 0x9569
    2a38:	059f1105 	ldreq	r1, [pc, #261]	; 2b45 <errno+0x2b41>
    2a3c:	0c059f09 	stceq	15, cr9, [r5], {9}
    2a40:	a008059f 	mulge	r8, pc, r5	; <UNPREDICTABLE>
    2a44:	00670905 	rsbeq	r0, r7, r5, lsl #18
    2a48:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a4c:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    2a50:	0c057508 	cfstr32eq	mvfx7, [r5], {8}
    2a54:	9f01054d 	svcls	0x0001054d
    2a58:	83090569 	movwhi	r0, #38249	; 0x9569
    2a5c:	059f0805 	ldreq	r0, [pc, #2053]	; 3269 <errno+0x3265>
    2a60:	0a056709 	beq	15c68c <__bss_end__+0x13644>
    2a64:	660805f6 			; <UNDEFINED> instruction: 0x660805f6
    2a68:	054b1005 	strbeq	r1, [fp, #-5]
    2a6c:	0c054d1a 	stceq	13, cr4, [r5], {26}
    2a70:	4a080568 	bmi	204018 <__bss_end__+0xbafd0>
    2a74:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    2a78:	0c058405 	cfstrseq	mvf8, [r5], {5}
    2a7c:	2f01054b 	svccs	0x0001054b
    2a80:	8312056c 	tsthi	r2, #108, 10	; 0x1b000000
    2a84:	05831105 	streq	r1, [r3, #261]	; 0x105
    2a88:	0105830c 	tsteq	r5, ip, lsl #6
    2a8c:	0905872f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, sl, pc}
    2a90:	9f130583 	svcls	0x00130583
    2a94:	059f0905 	ldreq	r0, [pc, #2309]	; 33a1 <errno+0x339d>
    2a98:	0d05a00f 	stceq	0, cr10, [r5, #-60]	; 0xffffffc4
    2a9c:	4d080567 	cfstr32mi	mvfx0, [r8, #-412]	; 0xfffffe64
    2aa0:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    2aa4:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    2aa8:	0e056710 	mcreq	7, 0, r6, cr5, cr0, {0}
    2aac:	4a05054f 	bmi	143ff0 <morecore_area+0xfaff0>
    2ab0:	052f1e05 	streq	r1, [pc, #-3589]!	; 1cb3 <errno+0x1caf>
    2ab4:	10058221 	andne	r8, r5, r1, lsr #4
    2ab8:	4a0d052e 	bmi	343f78 <__bss_end__+0x1faf30>
    2abc:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
    2ac0:	2205bb14 	andcs	fp, r5, #20, 22	; 0x5000
    2ac4:	02040200 	andeq	r0, r4, #0, 4
    2ac8:	00050547 	andeq	r0, r5, r7, asr #10
    2acc:	66010402 	strvs	r0, [r1], -r2, lsl #8
    2ad0:	058a0805 	streq	r0, [sl, #2053]	; 0x805
    2ad4:	08056710 	stmdaeq	r5, {r4, r8, r9, sl, sp, lr}
    2ad8:	0021054e 	eoreq	r0, r1, lr, asr #10
    2adc:	66010402 	strvs	r0, [r1], -r2, lsl #8
    2ae0:	056a1205 	strbeq	r1, [sl, #-517]!	; 0xfffffdfb
    2ae4:	1d054a09 	vstrne	s8, [r5, #-36]	; 0xffffffdc
    2ae8:	6610052f 	ldrvs	r0, [r0], -pc, lsr #10
    2aec:	054b1b05 	strbeq	r1, [fp, #-2821]	; 0xfffff4fb
    2af0:	1505821e 	strne	r8, [r5, #-542]	; 0xfffffde2
    2af4:	8418052e 	ldrhi	r0, [r8], #-1326	; 0xfffffad2
    2af8:	05662705 	strbeq	r2, [r6, #-1797]!	; 0xfffff8fb
    2afc:	38058218 	stmdacc	r5, {r3, r4, r9, pc}
    2b00:	8218052e 	andshi	r0, r8, #192937984	; 0xb800000
    2b04:	05821505 	streq	r1, [r2, #1285]	; 0x505
    2b08:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    2b0c:	09056202 	stmdbeq	r5, {r1, r9, sp, lr}
    2b10:	01040200 	mrseq	r0, R12_usr
    2b14:	06820666 	streq	r0, [r2], r6, ror #12
    2b18:	f60c0536 			; <UNDEFINED> instruction: 0xf60c0536
    2b1c:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    2b20:	05840905 	streq	r0, [r4, #2309]	; 0x905
    2b24:	0c059f0b 	stceq	15, cr9, [r5], {11}
    2b28:	a012059f 	mulsge	r2, pc, r5	; <UNPREDICTABLE>
    2b2c:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
    2b30:	0569bb01 	strbeq	fp, [r9, #-2817]!	; 0xfffff4ff
    2b34:	13058309 	movwne	r8, #21257	; 0x5309
    2b38:	9f09059f 	svcls	0x0009059f
    2b3c:	05a10805 	streq	r0, [r1, #2053]!	; 0x805
    2b40:	0a056709 	beq	15c76c <__bss_end__+0x13724>
    2b44:	660805f6 			; <UNDEFINED> instruction: 0x660805f6
    2b48:	054b1005 	strbeq	r1, [fp, #-5]
    2b4c:	1105501f 	tstne	r5, pc, lsl r0
    2b50:	4a080567 	bmi	2040f4 <__bss_end__+0xbb0ac>
    2b54:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    2b58:	0a05f517 	beq	17ffbc <__bss_end__+0x36f74>
    2b5c:	4b0c0567 	blmi	304100 <__bss_end__+0x1bb0b8>
    2b60:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    2b64:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
    2b68:	2b052f04 	blcs	14e780 <__bss_end__+0x5738>
    2b6c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2b70:	0022054a 	eoreq	r0, r2, sl, asr #10
    2b74:	4a040402 	bmi	103b84 <morecore_area+0xbab84>
    2b78:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2b7c:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    2b80:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2b84:	20052f04 	andcs	r2, r5, r4, lsl #30
    2b88:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2b8c:	00180582 	andseq	r0, r8, r2, lsl #11
    2b90:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    2b94:	02002f05 	andeq	r2, r0, #5, 30
    2b98:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    2b9c:	0402000e 	streq	r0, [r2], #-14
    2ba0:	13056604 	movwne	r6, #22020	; 0x5604
    2ba4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2ba8:	0009052f 	andeq	r0, r9, pc, lsr #10
    2bac:	82040402 	andhi	r0, r4, #33554432	; 0x2000000
    2bb0:	02002805 	andeq	r2, r0, #327680	; 0x50000
    2bb4:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    2bb8:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    2bbc:	09054a04 	stmdbeq	r5, {r2, r9, fp, lr}
    2bc0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2bc4:	0030054a 	eorseq	r0, r0, sl, asr #10
    2bc8:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    2bcc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    2bd0:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    2bd4:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    2bd8:	0e056704 	cdpeq	7, 0, cr6, cr5, cr4, {0}
    2bdc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2be0:	42052108 	andmi	r2, r5, #8, 2
    2be4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2be8:	0005057d 	andeq	r0, r5, sp, ror r5
    2bec:	66010402 	strvs	r0, [r1], -r2, lsl #8
    2bf0:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    2bf4:	05820304 	streq	r0, [r2, #772]	; 0x304
    2bf8:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    2bfc:	1c054a03 			; <UNDEFINED> instruction: 0x1c054a03
    2c00:	03040200 	movweq	r0, #16896	; 0x4200
    2c04:	6d0c0582 	cfstr32vs	mvfx0, [ip, #-520]	; 0xfffffdf8
    2c08:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    2c0c:	05830905 	streq	r0, [r3, #2309]	; 0x905
    2c10:	0c059f0b 	stceq	15, cr9, [r5], {11}
    2c14:	a012059f 	mulsge	r2, pc, r5	; <UNPREDICTABLE>
    2c18:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
    2c1c:	0569bb01 	strbeq	fp, [r9, #-2817]!	; 0xfffff4ff
    2c20:	059f8309 	ldreq	r8, [pc, #777]	; 2f31 <errno+0x2f2d>
    2c24:	1005a208 	andne	sl, r5, r8, lsl #4
    2c28:	4c050567 	cfstr32mi	mvfx0, [r5], {103}	; 0x67
    2c2c:	69f40105 	ldmibvs	r4!, {r0, r2, r8}^
    2c30:	05830b05 	streq	r0, [r3, #2821]	; 0xb05
    2c34:	1a059f09 	bne	16a860 <__bss_end__+0x21818>
    2c38:	9f14059f 	svcls	0x0014059f
    2c3c:	059f0905 	ldreq	r0, [pc, #2309]	; 3549 <errno+0x3545>
    2c40:	0c054f08 	stceq	15, cr4, [r5], {8}
    2c44:	67210567 	strvs	r0, [r1, -r7, ror #10]!
    2c48:	850c05d9 	strhi	r0, [ip, #-1497]	; 0xfffffa27
    2c4c:	05671a05 	strbeq	r1, [r7, #-2565]!	; 0xfffff5fb
    2c50:	10054a25 	andne	r4, r5, r5, lsr #20
    2c54:	6711059e 			; <UNDEFINED> instruction: 0x6711059e
    2c58:	05842c05 	streq	r2, [r4, #3077]	; 0xc05
    2c5c:	1a054a37 	bne	155540 <__bss_end__+0xc4f8>
    2c60:	86090582 	strhi	r0, [r9], -r2, lsl #11
    2c64:	05f50c05 	ldrbeq	r0, [r5, #3077]!	; 0xc05
    2c68:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    2c6c:	24059f29 	strcs	r9, [r5], #-3881	; 0xfffff0d7
    2c70:	02040200 	andeq	r0, r4, #0, 4
    2c74:	000c0566 	andeq	r0, ip, r6, ror #10
    2c78:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
    2c7c:	02002905 	andeq	r2, r0, #81920	; 0x14000
    2c80:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
    2c84:	0c056723 	stceq	7, cr6, [r5], {35}	; 0x23
    2c88:	00290582 	eoreq	r0, r9, r2, lsl #11
    2c8c:	65050402 	strvs	r0, [r5, #-1026]	; 0xfffffbfe
    2c90:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2c94:	01054a06 	tsteq	r5, r6, lsl #20
    2c98:	08040200 	stmdaeq	r4, {r9}
    2c9c:	05853006 	streq	r3, [r5, #6]
    2ca0:	0b058309 	bleq	1638cc <__bss_end__+0x1a884>
    2ca4:	d709059f 			; <UNDEFINED> instruction: 0xd709059f
    2ca8:	05a00a05 	streq	r0, [r0, #2565]!	; 0xa05
    2cac:	10056608 	andne	r6, r5, r8, lsl #12
    2cb0:	4d1f054b 	cfldr32mi	mvfx0, [pc, #-300]	; 2b8c <errno+0x2b88>
    2cb4:	05670805 	strbeq	r0, [r7, #-2053]!	; 0xfffff7fb
    2cb8:	11056710 	tstne	r5, r0, lsl r7
    2cbc:	4a08054d 	bmi	2041f8 <__bss_end__+0xbb1b0>
    2cc0:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    2cc4:	0905f817 	stmdbeq	r5, {r0, r1, r2, r4, fp, ip, sp, lr, pc}
    2cc8:	4b050568 	blmi	144270 <morecore_area+0xfb270>
    2ccc:	92081405 	andls	r1, r8, #83886080	; 0x5000000
    2cd0:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    2cd4:	0e053023 	cdpeq	0, 0, cr3, cr5, cr3, {1}
    2cd8:	9e0c054a 	cfsh32ls	mvfx0, mvfx12, #42
    2cdc:	054b1405 	strbeq	r1, [fp, #-1029]	; 0xfffffbfb
    2ce0:	27054c1d 	smladcs	r5, sp, ip, r4
    2ce4:	4a14054a 	bmi	504214 <__bss_end__+0x3bb1cc>
    2ce8:	052f0905 	streq	r0, [pc, #-2309]!	; 23eb <errno+0x23e7>
    2cec:	1405300c 	strne	r3, [r5], #-12
    2cf0:	4c1d0584 	cfldr32mi	mvfx0, [sp], {132}	; 0x84
    2cf4:	054a2405 	strbeq	r2, [sl, #-1029]	; 0xfffffbfb
    2cf8:	09054a14 	stmdbeq	r5, {r2, r4, r9, fp, lr}
    2cfc:	3010052f 	andscc	r0, r0, pc, lsr #10
    2d00:	054d0805 	strbeq	r0, [sp, #-2053]	; 0xfffff7fb
    2d04:	24056710 	strcs	r6, [r5], #-1808	; 0xfffff8f0
    2d08:	4a1b054c 	bmi	6c4240 <__bss_end__+0x57b1f8>
    2d0c:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    2d10:	16054b10 			; <UNDEFINED> instruction: 0x16054b10
    2d14:	a00c054d 	andge	r0, ip, sp, asr #10
    2d18:	6b2f0105 	blvs	bc3134 <__bss_end__+0xa7a0ec>
    2d1c:	05830905 	streq	r0, [r3, #2309]	; 0x905
    2d20:	059f9f0e 	ldreq	r9, [pc, #3854]	; 3c36 <errno+0x3c32>
    2d24:	09059f0c 	stmdbeq	r5, {r2, r3, r8, r9, sl, fp, ip, pc}
    2d28:	a610059f 			; <UNDEFINED> instruction: 0xa610059f
    2d2c:	05f30805 	ldrbeq	r0, [r3, #2053]!	; 0x805
    2d30:	08056810 	stmdaeq	r5, {r4, fp, sp, lr}
    2d34:	671305bc 			; <UNDEFINED> instruction: 0x671305bc
    2d38:	05661105 	strbeq	r1, [r6, #-261]!	; 0xfffffefb
    2d3c:	01054c0c 	tsteq	r5, ip, lsl #24
    2d40:	1105852f 	tstne	r5, pc, lsr #10
    2d44:	9f090583 	svcls	0x00090583
    2d48:	05a00805 	streq	r0, [r0, #2053]!	; 0x805
    2d4c:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    2d50:	12056601 	andne	r6, r5, #1048576	; 0x100000
    2d54:	9f0c0567 	svcls	0x000c0567
    2d58:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    2d5c:	10054c09 	andne	r4, r5, r9, lsl #24
    2d60:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
    2d64:	01040200 	mrseq	r0, R12_usr
    2d68:	0c059e06 	stceq	14, cr9, [r5], {6}
    2d6c:	05c90806 	strbeq	r0, [r9, #2054]	; 0x806
    2d70:	056a2f01 	strbeq	r2, [sl, #-3841]!	; 0xfffff0ff
    2d74:	1605bb19 			; <UNDEFINED> instruction: 0x1605bb19
    2d78:	83180583 	tsthi	r8, #549453824	; 0x20c00000
    2d7c:	02830105 	addeq	r0, r3, #1073741825	; 0x40000001
    2d80:	01010008 	tsteq	r1, r8
    2d84:	0000078f 	andeq	r0, r0, pc, lsl #15
    2d88:	04060003 	streq	r0, [r6], #-3
    2d8c:	01020000 	mrseq	r0, (UNDEF: 2)
    2d90:	000d0efb 	strdeq	r0, [sp], -fp
    2d94:	01010101 	tsteq	r1, r1, lsl #2
    2d98:	01000000 	mrseq	r0, (UNDEF: 0)
    2d9c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    2da0:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    2da4:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
    2da8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2dac:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    2db0:	00346c65 	eorseq	r6, r4, r5, ror #24
    2db4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2d00 <errno+0x2cfc>
    2db8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    2dbc:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    2dc0:	2f676e6f 	svccs	0x00676e6f
    2dc4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2dc8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2dcc:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    2dd0:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2dd4:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    2dd8:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2ddc:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    2de0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    2de4:	2f6c656e 	svccs	0x006c656e
    2de8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    2dec:	2f346c65 	svccs	0x00346c65
    2df0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2df4:	2f656475 	svccs	0x00656475
    2df8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2dfc:	6f682f00 	svcvs	0x00682f00
    2e00:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    2e04:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    2e08:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    2e0c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2e10:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    2e14:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    2e18:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    2e1c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    2e20:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    2e24:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    2e28:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    2e2c:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    2e30:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2e34:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2e38:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2e3c:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    2e40:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    2e44:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2e48:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    2e4c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    2e50:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    2e54:	2f346c65 	svccs	0x00346c65
    2e58:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2e5c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    2e60:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    2e64:	2f656d6f 	svccs	0x00656d6f
    2e68:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    2e6c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    2e70:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    2e74:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    2e78:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    2e7c:	6f747574 	svcvs	0x00747574
    2e80:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    2e84:	616d2d73 	smcvs	53971	; 0xd2d3
    2e88:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    2e8c:	6b2f7473 	blvs	be0060 <__bss_end__+0xa97018>
    2e90:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2e94:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    2e98:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    2e9c:	72612f34 	rsbvc	r2, r1, #52, 30	; 0xd0
    2ea0:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    2ea4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2ea8:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    2eac:	732f6d72 			; <UNDEFINED> instruction: 0x732f6d72
    2eb0:	2f346c65 	svccs	0x00346c65
    2eb4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    2eb8:	62696c00 	rsbvs	r6, r9, #0, 24
    2ebc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2ec0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2ec4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2ec8:	746e692f 	strbtvc	r6, [lr], #-2351	; 0xfffff6d1
    2ecc:	61667265 	cmnvs	r6, r5, ror #4
    2ed0:	00736563 	rsbseq	r6, r3, r3, ror #10
    2ed4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2e20 <errno+0x2e1c>
    2ed8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    2edc:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    2ee0:	2f676e6f 	svccs	0x00676e6f
    2ee4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2ee8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2eec:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    2ef0:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2ef4:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    2ef8:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2efc:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    2f00:	6f72702f 	svcvs	0x0072702f
    2f04:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    2f08:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    2f0c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    2f10:	2f736269 	svccs	0x00736269
    2f14:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    2f18:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    2f1c:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    2f20:	2f737973 	svccs	0x00737973
    2f24:	00637273 	rsbeq	r7, r3, r3, ror r2
    2f28:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    2f2c:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    2f30:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    2f34:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    2f38:	2f706d65 	svccs	0x00706d65
    2f3c:	67617473 			; <UNDEFINED> instruction: 0x67617473
    2f40:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    2f44:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2f48:	69622f65 	stmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2f4c:	6d007374 	stcvs	3, cr7, [r0, #-464]	; 0xfffffe30
    2f50:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    2f54:	2f636269 	svccs	0x00636269
    2f58:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    2f5c:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    2f60:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    2f64:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    2f68:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2f6c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2f70:	62696c00 	rsbvs	r6, r9, #0, 24
    2f74:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2f78:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2f7c:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    2f80:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    2f84:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2f88:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    2f8c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    2f90:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    2f94:	2f346c65 	svccs	0x00346c65
    2f98:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2f9c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    2fa0:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    2fa4:	2f656d6f 	svccs	0x00656d6f
    2fa8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    2fac:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    2fb0:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    2fb4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    2fb8:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    2fbc:	6f747574 	svcvs	0x00747574
    2fc0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    2fc4:	616d2d73 	smcvs	53971	; 0xd2d3
    2fc8:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    2fcc:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    2fd0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    2fd4:	2f737463 	svccs	0x00737463
    2fd8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    2fdc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    2fe0:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2fe4:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    2fe8:	692f736c 	stmdbvs	pc!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
    2fec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2ff0:	752f6564 	strvc	r6, [pc, #-1380]!	; 2a94 <errno+0x2a90>
    2ff4:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    2ff8:	6f682f00 	svcvs	0x00682f00
    2ffc:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3000:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    3004:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    3008:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    300c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3010:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    3014:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    3018:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    301c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3020:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    3024:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    3028:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    302c:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    3030:	5f344c65 	svcpl	0x00344c65
    3034:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3038:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    303c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3040:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    3044:	73797363 	cmnvc	r9, #-1946157055	; 0x8c000001
    3048:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    304c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3050:	73756d2f 	cmnvc	r5, #3008	; 0xbc0
    3054:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    3058:	73000073 	movwvc	r0, #115	; 0x73
    305c:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    3060:	79745f64 	ldmdbvc	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    3064:	5f736570 	svcpl	0x00736570
    3068:	2e6e6567 	cdpcs	5, 6, cr6, cr14, cr7, {3}
    306c:	00010068 	andeq	r0, r1, r8, rrx
    3070:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
    3074:	6f697463 	svcvs	0x00697463
    3078:	682e736e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
    307c:	00000200 	andeq	r0, r0, r0, lsl #4
    3080:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    3084:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    3088:	0300682e 	movweq	r6, #2094	; 0x82e
    308c:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    3090:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    3094:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    3098:	00000400 	andeq	r0, r0, r0, lsl #8
    309c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    30a0:	696c635f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
    30a4:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
    30a8:	00050068 	andeq	r0, r5, r8, rrx
    30ac:	79737600 	ldmdbvc	r3!, {r9, sl, ip, sp, lr}^
    30b0:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    30b4:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    30b8:	61000006 	tstvs	r0, r6
    30bc:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    30c0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    30c4:	00070068 	andeq	r0, r7, r8, rrx
    30c8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    30cc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    30d0:	00000800 	andeq	r0, r0, r0, lsl #16
    30d4:	706d6973 	rsbvc	r6, sp, r3, ror r9
    30d8:	745f656c 	ldrbvc	r6, [pc], #-1388	; 30e0 <errno+0x30dc>
    30dc:	73657079 	cmnvc	r5, #121	; 0x79
    30e0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    30e4:	626f0000 	rsbvs	r0, pc, #0
    30e8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    30ec:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    30f0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    30f4:	626f0000 	rsbvs	r0, pc, #0
    30f8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    30fc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    3100:	0300682e 	movweq	r6, #2094	; 0x82e
    3104:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    3108:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    310c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    3110:	65000001 	strvs	r0, [r0, #-1]
    3114:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    3118:	00682e73 	rsbeq	r2, r8, r3, ror lr
    311c:	63000002 	movwvs	r0, #2
    3120:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    3124:	73746e61 	cmnvc	r4, #1552	; 0x610
    3128:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    312c:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    3130:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    3134:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    3138:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    313c:	00000200 	andeq	r0, r0, r0, lsl #4
    3140:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    3144:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3148:	69000002 	stmdbvs	r0, {r1}
    314c:	636f766e 	cmnvs	pc, #115343360	; 0x6e00000
    3150:	6f697461 	svcvs	0x00697461
    3154:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    3158:	69000001 	stmdbvs	r0, {r0}
    315c:	636f766e 	cmnvs	pc, #115343360	; 0x6e00000
    3160:	6f697461 	svcvs	0x00697461
    3164:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    3168:	7a000009 	bvc	3194 <errno+0x3190>
    316c:	6f6c5f66 	svcvs	0x006c5f66
    3170:	00682e67 	rsbeq	r2, r8, r7, ror #28
    3174:	7600000a 	strvc	r0, [r0], -sl
    3178:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    317c:	2e6c6c61 	cdpcs	12, 6, cr6, cr12, cr1, {3}
    3180:	000b0068 	andeq	r0, fp, r8, rrx
    3184:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    3188:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    318c:	003e6e69 	eorseq	r6, lr, r9, ror #28
    3190:	00000000 	andeq	r0, r0, r0
    3194:	05006f05 	streq	r6, [r0, #-3845]	; 0xfffff0fb
    3198:	013be802 	teqeq	fp, r2, lsl #16
    319c:	02bd0300 	adcseq	r0, sp, #0, 6
    31a0:	da050501 	ble	1445ac <morecore_area+0xfb5ac>
    31a4:	01040200 	mrseq	r0, R12_usr
    31a8:	f3069e06 	vcge.f32	d9, d6, d6
    31ac:	01040200 	mrseq	r0, R12_usr
    31b0:	f3068206 	vhsub.u8	d8, d6, d6
    31b4:	01040200 	mrseq	r0, R12_usr
    31b8:	f3068206 	vhsub.u8	d8, d6, d6
    31bc:	01040200 	mrseq	r0, R12_usr
    31c0:	09058206 	stmdbeq	r5, {r1, r2, r9, pc}
    31c4:	2205f506 	andcs	pc, r5, #25165824	; 0x1800000
    31c8:	6609054b 	strvs	r0, [r9], -fp, asr #10
    31cc:	052f1e05 	streq	r1, [pc, #-3589]!	; 23cf <errno+0x23cb>
    31d0:	1c056609 	stcne	6, cr6, [r5], {9}
    31d4:	4a09052f 	bmi	244698 <__bss_end__+0xfb650>
    31d8:	052a1f05 	streq	r1, [sl, #-3845]!	; 0xfffff0fb
    31dc:	0105340c 	tsteq	r5, ip, lsl #8
    31e0:	0341052f 	movteq	r0, #5423	; 0x152f
    31e4:	22056612 	andcs	r6, r5, #18874368	; 0x1200000
    31e8:	2e090584 	cfsh32cs	mvfx0, mvfx9, #-60
    31ec:	054f0c05 	strbeq	r0, [pc, #-3077]	; 25ef <errno+0x25eb>
    31f0:	42052f01 	andmi	r2, r5, #1, 30
    31f4:	8200ed03 	andhi	lr, r0, #3, 26	; 0xc0
    31f8:	05842205 	streq	r2, [r4, #517]	; 0x205
    31fc:	0c052e09 	stceq	14, cr2, [r5], {9}
    3200:	2f01054f 	svccs	0x0001054f
    3204:	cd030204 	sfmgt	f0, 4, [r3, #-16]
    3208:	0c05827c 	sfmeq	f0, 1, [r5], {124}	; 0x7c
    320c:	8301054b 	movwhi	r0, #5451	; 0x154b
    3210:	9f05056e 	svcls	0x0005056e
    3214:	054a2105 	strbeq	r2, [sl, #-261]	; 0xfffffefb
    3218:	03049f01 	movweq	r9, #20225	; 0x4f01
    321c:	6600df03 	strvs	sp, [r0], -r3, lsl #30
    3220:	2fd71805 	svccs	0x00d71805
    3224:	05312905 	ldreq	r2, [r1, #-2309]!	; 0xfffff6fb
    3228:	29054a18 	stmdbcs	r5, {r3, r4, r9, fp, lr}
    322c:	18054b2f 	stmdane	r5, {r0, r1, r2, r3, r5, r8, r9, fp, lr}
    3230:	2f29054a 	svccs	0x0029054a
    3234:	324a1805 	subcc	r1, sl, #327680	; 0x50000
    3238:	052f0505 	streq	r0, [pc, #-1285]!	; 2d3b <errno+0x2d37>
    323c:	1005350f 	andne	r3, r5, pc, lsl #10
    3240:	4b110567 	blmi	4447e4 <__bss_end__+0x2fb79c>
    3244:	05676767 	strbeq	r6, [r7, #-1895]!	; 0xfffff899
    3248:	04046701 	streq	r6, [r4], #-1793	; 0xfffff8ff
    324c:	05820e03 	streq	r0, [r2, #3587]	; 0xe03
    3250:	4b4bd80f 	blmi	12f9294 <__bss_end__+0x11b024c>
    3254:	4d08054b 	cfstr32mi	mvfx0, [r8, #-300]	; 0xfffffed4
    3258:	02001d05 	andeq	r1, r0, #320	; 0x140
    325c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    3260:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    3264:	10056601 	andne	r6, r5, r1, lsl #12
    3268:	4a0e054b 	bmi	38479c <__bss_end__+0x23b754>
    326c:	05300805 	ldreq	r0, [r0, #-2053]!	; 0xfffff7fb
    3270:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    3274:	1a056601 	bne	15ca80 <__bss_end__+0x13a38>
    3278:	01040200 	mrseq	r0, R12_usr
    327c:	4b100566 	blmi	40481c <__bss_end__+0x2bb7d4>
    3280:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    3284:	1d053008 	stcne	0, cr3, [r5, #-32]	; 0xffffffe0
    3288:	01040200 	mrseq	r0, R12_usr
    328c:	001a0566 	andseq	r0, sl, r6, ror #10
    3290:	66010402 	strvs	r0, [r1], -r2, lsl #8
    3294:	054b1005 	strbeq	r1, [fp, #-5]
    3298:	08054a0e 	stmdaeq	r5, {r1, r2, r3, r9, fp, lr}
    329c:	001d0530 	andseq	r0, sp, r0, lsr r5
    32a0:	66010402 	strvs	r0, [r1], -r2, lsl #8
    32a4:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    32a8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    32ac:	0e054b10 	vmoveq.32	d5[0], r4
    32b0:	3105054a 	tstcc	r5, sl, asr #10
    32b4:	24020805 	strcs	r0, [r2], #-2053	; 0xfffff7fb
    32b8:	670e0515 	smladvs	lr, r5, r5, r0
    32bc:	05680805 	strbeq	r0, [r8, #-2053]!	; 0xfffff7fb
    32c0:	0805670e 	stmdaeq	r5, {r1, r2, r3, r8, r9, sl, sp, lr}
    32c4:	670e0568 	strvs	r0, [lr, -r8, ror #10]
    32c8:	05680805 	strbeq	r0, [r8, #-2053]!	; 0xfffff7fb
    32cc:	0c05670e 	stceq	7, cr6, [r5], {14}
    32d0:	2f010569 	svccs	0x00010569
    32d4:	6602dd03 	strvs	sp, [r2], -r3, lsl #26
    32d8:	4b9f0f05 	blmi	fe7c6ef4 <__bss_end__+0xfe67deac>
    32dc:	4b4b4b4b 	blmi	12d6010 <__bss_end__+0x118cfc8>
    32e0:	054c0505 	strbeq	r0, [ip, #-1285]	; 0xfffffafb
    32e4:	13220201 			; <UNDEFINED> instruction: 0x13220201
    32e8:	95030504 	strls	r0, [r3, #-1284]	; 0xfffffafc
    32ec:	1b056619 	blne	15cb58 <__bss_end__+0x13b10>
    32f0:	de0605a0 	cfsh32le	mvfx0, mvfx6, #-48
    32f4:	054b4b4b 	strbeq	r4, [fp, #-2891]	; 0xfffff4b5
    32f8:	18054d0f 	stmdane	r5, {r0, r1, r2, r3, r8, sl, fp, lr}
    32fc:	05057608 	streq	r7, [r5, #-1544]	; 0xfffff9f8
    3300:	67030569 	strvs	r0, [r3, -r9, ror #10]
    3304:	05838383 	streq	r8, [r3, #899]	; 0x383
    3308:	01058a09 	tsteq	r5, r9, lsl #20
    330c:	0306042f 	movweq	r0, #25647	; 0x642f
    3310:	056662a5 	strbeq	r6, [r6, #-677]!	; 0xfffffd5b
    3314:	0905830b 	stmdbeq	r5, {r0, r1, r3, r8, r9, pc}
    3318:	6608059f 			; <UNDEFINED> instruction: 0x6608059f
    331c:	004b0905 	subeq	r0, fp, r5, lsl #18
    3320:	06010402 	streq	r0, [r1], -r2, lsl #8
    3324:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    3328:	18057508 	stmdane	r5, {r3, r8, sl, ip, sp, lr}
    332c:	054a0c03 	strbeq	r0, [sl, #-3075]	; 0xfffff3fd
    3330:	0d058308 	stceq	3, cr8, [r5, #-32]	; 0xffffffe0
    3334:	d60c0568 	strle	r0, [ip], -r8, ror #10
    3338:	054b0d05 	strbeq	r0, [fp, #-3333]	; 0xfffff2fb
    333c:	1e05a223 	cdpne	2, 0, cr10, cr5, cr3, {1}
    3340:	830c0583 	movwhi	r0, #50563	; 0xc583
    3344:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    3348:	05830a05 	streq	r0, [r3, #2565]	; 0xa05
    334c:	01059f0c 	tsteq	r5, ip, lsl #30
    3350:	0a058667 	beq	164cf4 <__bss_end__+0x1bcac>
    3354:	9f090583 	svcls	0x00090583
    3358:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
    335c:	02004b09 	andeq	r4, r0, #9216	; 0x2400
    3360:	9e060104 	adflss	f0, f6, f4
    3364:	08061005 	stmdaeq	r6, {r0, r2, ip}
    3368:	4c230575 	cfstr32mi	mvfx0, [r3], #-468	; 0xfffffe2c
    336c:	05831e05 	streq	r1, [r3, #3589]	; 0xe05
    3370:	0105830c 	tsteq	r5, ip, lsl #6
    3374:	0a05692f 	beq	15d838 <__bss_end__+0x147f0>
    3378:	9f0c0583 	svcls	0x000c0583
    337c:	86670105 	strbthi	r0, [r7], -r5, lsl #2
    3380:	05831005 	streq	r1, [r3, #5]
    3384:	09059f13 	stmdbeq	r5, {r0, r1, r4, r8, r9, sl, fp, ip, pc}
    3388:	a00d059f 	mulge	sp, pc, r5	; <UNPREDICTABLE>
    338c:	054c0e05 	strbeq	r0, [ip, #-3589]	; 0xfffff1fb
    3390:	28054a05 	stmdacs	r5, {r0, r2, r9, fp, lr}
    3394:	8216052f 	andshi	r0, r6, #197132288	; 0xbc00000
    3398:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    339c:	23054a09 	movwcs	r4, #23049	; 0x5a09
    33a0:	03040200 	movweq	r0, #16896	; 0x4200
    33a4:	000d0530 	andeq	r0, sp, r0, lsr r5
    33a8:	66030402 	strvs	r0, [r3], -r2, lsl #8
    33ac:	02001005 	andeq	r1, r0, #5
    33b0:	05680304 	strbeq	r0, [r8, #-772]!	; 0xfffffcfc
    33b4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    33b8:	20056203 	andcs	r6, r5, r3, lsl #4
    33bc:	01040200 	mrseq	r0, R12_usr
    33c0:	00230566 	eoreq	r0, r3, r6, ror #10
    33c4:	82010402 	andhi	r0, r1, #33554432	; 0x2000000
    33c8:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    33cc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    33d0:	04020009 	streq	r0, [r2], #-9
    33d4:	22052e01 	andcs	r2, r5, #1, 28
    33d8:	02040200 	andeq	r0, r4, #0, 4
    33dc:	00050548 	andeq	r0, r5, r8, asr #10
    33e0:	66010402 	strvs	r0, [r1], -r2, lsl #8
    33e4:	0a030c05 	beq	c6400 <morecore_area+0x7d400>
    33e8:	2f010582 	svccs	0x00010582
    33ec:	6600ce03 	strvs	ip, [r0], -r3, lsl #28
    33f0:	05830e05 	streq	r0, [r3, #3589]	; 0xe05
    33f4:	24054a05 	strcs	r4, [r5], #-2565	; 0xfffff5fb
    33f8:	820c052f 	andhi	r0, ip, #197132288	; 0xbc00000
    33fc:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    3400:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    3404:	17054802 	strne	r4, [r5, -r2, lsl #16]
    3408:	01040200 	mrseq	r0, R12_usr
    340c:	00050566 	andeq	r0, r5, r6, ror #10
    3410:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3414:	054f0c05 	strbeq	r0, [pc, #-3077]	; 2817 <errno+0x2813>
    3418:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    341c:	0805a011 	stmdaeq	r5, {r0, r4, sp, pc}
    3420:	4b15052e 	blmi	5448e0 <__bss_end__+0x3fb898>
    3424:	05670c05 	strbeq	r0, [r7, #-3077]!	; 0xfffff3fb
    3428:	0200670d 	andeq	r6, r0, #3407872	; 0x340000
    342c:	9e060104 	adflss	f0, f6, f4
    3430:	03040200 	movweq	r0, #16896	; 0x4200
    3434:	f506e408 			; <UNDEFINED> instruction: 0xf506e408
    3438:	05d72d05 	ldrbeq	r2, [r7, #3333]	; 0xd05
    343c:	2005f40d 	andcs	pc, r5, sp, lsl #8
    3440:	a00c059f 	mulge	ip, pc, r5	; <UNPREDICTABLE>
    3444:	6e2f0105 	sufvse	f0, f7, f5
    3448:	05680b05 	strbeq	r0, [r8, #-2821]!	; 0xfffff4fb
    344c:	02009f05 	andeq	r9, r0, #5, 30
    3450:	9e060204 	cdpls	2, 0, cr0, cr6, cr4, {0}
    3454:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    3458:	f8060104 			; <UNDEFINED> instruction: 0xf8060104
    345c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3460:	009f0104 	addseq	r0, pc, r4, lsl #2
    3464:	06020402 	streq	r0, [r2], -r2, lsl #8
    3468:	000b059e 	muleq	fp, lr, r5
    346c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3470:	000505f4 	strdeq	r0, [r5], -r4
    3474:	9f010402 	svcls	0x00010402
    3478:	02040200 	andeq	r0, r4, #0, 4
    347c:	01059e06 	tsteq	r5, r6, lsl #28
    3480:	0f03f306 	svceq	0x0003f306
    3484:	85050566 	strhi	r0, [r5, #-1382]	; 0xfffffa9a
    3488:	05bb0c05 	ldreq	r0, [fp, #3077]!	; 0xc05
    348c:	09054a05 	stmdbeq	r5, {r0, r2, r9, fp, lr}
    3490:	03040200 	movweq	r0, #16896	; 0x4200
    3494:	001a052f 	andseq	r0, sl, pc, lsr #10
    3498:	b9030402 	stmdblt	r3, {r1, sl}
    349c:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    34a0:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    34a4:	04020005 	streq	r0, [r2], #-5
    34a8:	01058201 	tsteq	r5, r1, lsl #4
    34ac:	05058a4d 	streq	r8, [r5, #-2637]	; 0xfffff5b3
    34b0:	4c080584 	cfstr32mi	mvfx0, [r8], {132}	; 0x84
    34b4:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    34b8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    34bc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    34c0:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    34c4:	670c054b 	strvs	r0, [ip, -fp, asr #10]
    34c8:	05670d05 	strbeq	r0, [r7, #-3333]!	; 0xfffff2fb
    34cc:	11054c14 	tstne	r5, r4, lsl ip
    34d0:	033c054c 	teqeq	ip, #76, 10	; 0x13000000
    34d4:	1105d679 	tstne	r5, r9, ror r6
    34d8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    34dc:	0905a108 	stmdbeq	r5, {r3, r8, sp, pc}
    34e0:	4c100567 	cfldr32mi	mvfx0, [r0], {103}	; 0x67
    34e4:	840c054d 	strhi	r0, [ip], #-1357	; 0xfffffab3
    34e8:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    34ec:	032f0104 			; <UNDEFINED> instruction: 0x032f0104
    34f0:	0f059e0c 	svceq	0x00059e0c
    34f4:	9f01054b 	svcls	0x0001054b
    34f8:	05821303 	streq	r1, [r2, #771]	; 0x303
    34fc:	01058317 	tsteq	r5, r7, lsl r3
    3500:	1505869f 	strne	r8, [r5, #-1695]	; 0xfffff961
    3504:	9f050567 	svcls	0x00050567
    3508:	054a3705 	strbeq	r3, [sl, #-1797]	; 0xfffff8fb
    350c:	05834a05 	streq	r4, [r3, #2565]	; 0xa05
    3510:	08024b01 	stmdaeq	r2, {r0, r8, r9, fp, lr}
    3514:	55010100 	strpl	r0, [r1, #-256]	; 0xffffff00
    3518:	03000002 	movweq	r0, #2
    351c:	0001ff00 	andeq	pc, r1, r0, lsl #30
    3520:	fb010200 	blx	43d2a <__stack_base+0x3d2a>
    3524:	01000d0e 	tsteq	r0, lr, lsl #26
    3528:	00010101 	andeq	r0, r1, r1, lsl #2
    352c:	00010000 	andeq	r0, r1, r0
    3530:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    3534:	2f656d6f 	svccs	0x00656d6f
    3538:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    353c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    3540:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    3544:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    3548:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    354c:	6f747574 	svcvs	0x00747574
    3550:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    3554:	616d2d73 	smcvs	53971	; 0xd2d3
    3558:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    355c:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    3560:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    3564:	2f737463 	svccs	0x00737463
    3568:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    356c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    3570:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    3574:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    3578:	73756d34 	cmnvc	r5, #52, 26	; 0xd00
    357c:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    3580:	72732f73 	rsbsvc	r2, r3, #460	; 0x1cc
    3584:	756d0063 	strbvc	r0, [sp, #-99]!	; 0xffffff9d
    3588:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    358c:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    3590:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    3594:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    3598:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    359c:	2f656761 	svccs	0x00656761
    35a0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    35a4:	2f656475 	svccs	0x00656475
    35a8:	73746962 	cmnvc	r4, #1605632	; 0x188000
    35ac:	73756d00 	cmnvc	r5, #0, 26
    35b0:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    35b4:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    35b8:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    35bc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    35c0:	6174732f 	cmnvs	r4, pc, lsr #6
    35c4:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    35c8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    35cc:	2f006564 	svccs	0x00006564
    35d0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    35d4:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    35d8:	6f647679 	svcvs	0x00647679
    35dc:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    35e0:	2f346c65 	svccs	0x00346c65
    35e4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    35e8:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    35ec:	6169726f 	cmnvs	r9, pc, ror #4
    35f0:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    35f4:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    35f8:	2f747365 	svccs	0x00747365
    35fc:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    3600:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 3474 <errno+0x3470>
    3604:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    3608:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
    360c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    3610:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    3614:	00346c65 	eorseq	r6, r4, r5, ror #24
    3618:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    361c:	2f346c65 	svccs	0x00346c65
    3620:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3624:	2f656475 	svccs	0x00656475
    3628:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    362c:	6f682f00 	svcvs	0x00682f00
    3630:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3634:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    3638:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    363c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3640:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3644:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    3648:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    364c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    3650:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3654:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    3658:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    365c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    3660:	752f7374 	strvc	r7, [pc, #-884]!	; 32f4 <errno+0x32f0>
    3664:	5f6c6974 	svcpl	0x006c6974
    3668:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    366c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3670:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    3674:	6e692f73 	mcrvs	15, 3, r2, cr9, cr3, {3}
    3678:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    367c:	74752f65 	ldrbtvc	r2, [r5], #-3941	; 0xfffff09b
    3680:	00736c69 	rsbseq	r6, r3, r9, ror #24
    3684:	73797300 	cmnvc	r9, #0, 6
    3688:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
    368c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    3690:	61000001 	tstvs	r0, r1
    3694:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    3698:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    369c:	00020068 	andeq	r0, r2, r8, rrx
    36a0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    36a4:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    36a8:	00000300 	andeq	r0, r0, r0, lsl #6
    36ac:	706d6973 	rsbvc	r6, sp, r3, ror r9
    36b0:	745f656c 	ldrbvc	r6, [pc], #-1388	; 36b8 <errno+0x36b4>
    36b4:	73657079 	cmnvc	r5, #121	; 0x79
    36b8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    36bc:	626f0000 	rsbvs	r0, pc, #0
    36c0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    36c4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    36c8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    36cc:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    36d0:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    36d4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    36d8:	675f7365 	ldrbvs	r7, [pc, -r5, ror #6]
    36dc:	682e6e65 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
    36e0:	00000500 	andeq	r0, r0, r0, lsl #10
    36e4:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    36e8:	745f6465 	ldrbvc	r6, [pc], #-1125	; 36f0 <errno+0x36ec>
    36ec:	73657079 	cmnvc	r5, #121	; 0x79
    36f0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    36f4:	75660000 	strbvc	r0, [r6, #-0]!
    36f8:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    36fc:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
    3700:	00040068 	andeq	r0, r4, r8, rrx
    3704:	5f667a00 	svcpl	0x00667a00
    3708:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
    370c:	00060068 	andeq	r0, r6, r8, rrx
    3710:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    3714:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    3718:	003e6e69 	eorseq	r6, lr, r9, ror #28
    371c:	00000000 	andeq	r0, r0, r0
    3720:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3724:	01495c02 	cmpeq	r9, r2, lsl #24
    3728:	010f0300 	mrseq	r0, SP_hyp
    372c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    3730:	054f0104 	strbeq	r0, [pc, #-260]	; 3634 <errno+0x3630>
    3734:	05053201 	streq	r3, [r5, #-513]	; 0xfffffdff
    3738:	33010583 	movwcc	r0, #5507	; 0x1583
    373c:	05840c05 	streq	r0, [r4, #3077]	; 0xc05
    3740:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    3744:	0105840c 	tsteq	r5, ip, lsl #8
    3748:	0c05852f 	cfstr32eq	mvfx8, [r5], {47}	; 0x2f
    374c:	2f010584 	svccs	0x00010584
    3750:	84050585 	strhi	r0, [r5], #-1413	; 0xfffffa7b
    3754:	052f0c05 	streq	r0, [pc, #-3077]!	; 2b57 <errno+0x2b53>
    3758:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    375c:	0c058405 	cfstrseq	mvf8, [r5], {5}
    3760:	2f01052f 	svccs	0x0001052f
    3764:	840c0569 	strhi	r0, [ip], #-1385	; 0xfffffa97
    3768:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    376c:	01010008 	tsteq	r1, r8
    3770:	000005cc 	andeq	r0, r0, ip, asr #11
    3774:	05210003 	streq	r0, [r1, #-3]!
    3778:	01020000 	mrseq	r0, (UNDEF: 2)
    377c:	000d0efb 	strdeq	r0, [sp], -fp
    3780:	01010101 	tsteq	r1, r1, lsl #2
    3784:	01000000 	mrseq	r0, (UNDEF: 0)
    3788:	2f010000 	svccs	0x00010000
    378c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    3790:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    3794:	6f647679 	svcvs	0x00647679
    3798:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    379c:	2f346c65 	svccs	0x00346c65
    37a0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    37a4:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    37a8:	6169726f 	cmnvs	r9, pc, ror #4
    37ac:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    37b0:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    37b4:	2f747365 	svccs	0x00747365
    37b8:	6a6f7270 	bvs	1be0180 <__bss_end__+0x1a97138>
    37bc:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    37c0:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    37c4:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    37c8:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 3648 <errno+0x3644>
    37cc:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    37d0:	756d346c 	strbvc	r3, [sp, #-1132]!	; 0xfffffb94
    37d4:	73636c73 	cmnvc	r3, #29440	; 0x7300
    37d8:	732f7379 			; <UNDEFINED> instruction: 0x732f7379
    37dc:	6d006372 	stcvs	3, cr6, [r0, #-456]	; 0xfffffe38
    37e0:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    37e4:	2f636269 	svccs	0x00636269
    37e8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    37ec:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    37f0:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    37f4:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    37f8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    37fc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3800:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    3804:	756d0073 	strbvc	r0, [sp, #-115]!	; 0xffffff8d
    3808:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    380c:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    3810:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    3814:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    3818:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    381c:	2f656761 	svccs	0x00656761
    3820:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3824:	00656475 	rsbeq	r6, r5, r5, ror r4
    3828:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3774 <errno+0x3770>
    382c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    3830:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    3834:	2f676e6f 	svccs	0x00676e6f
    3838:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    383c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3840:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    3844:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    3848:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    384c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3850:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    3854:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3858:	2f6c656e 	svccs	0x006c656e
    385c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3860:	2f346c65 	svccs	0x00346c65
    3864:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3868:	2f656475 	svccs	0x00656475
    386c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3870:	6f682f00 	svcvs	0x00682f00
    3874:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3878:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    387c:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    3880:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3884:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3888:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    388c:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    3890:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    3894:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3898:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    389c:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    38a0:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    38a4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    38a8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    38ac:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    38b0:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    38b4:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    38b8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    38bc:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    38c0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    38c4:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    38c8:	2f346c65 	svccs	0x00346c65
    38cc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    38d0:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    38d4:	696c0068 	stmdbvs	ip!, {r3, r5, r6}^
    38d8:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    38dc:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
    38e0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    38e4:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    38e8:	6c00346c 	cfstrsvs	mvf3, [r0], {108}	; 0x6c
    38ec:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    38f0:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    38f4:	5f346c65 	svcpl	0x00346c65
    38f8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    38fc:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    3900:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3904:	7261612f 	rsbvc	r6, r1, #-1073741813	; 0xc000000b
    3908:	32336863 	eorscc	r6, r3, #6488064	; 0x630000
    390c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3910:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3914:	615f346c 	cmpvs	pc, ip, ror #8
    3918:	00686372 	rsbeq	r6, r8, r2, ror r3
    391c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3868 <errno+0x3864>
    3920:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    3924:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    3928:	2f676e6f 	svccs	0x00676e6f
    392c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3930:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3934:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    3938:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    393c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    3940:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3944:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    3948:	6f72702f 	svcvs	0x0072702f
    394c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    3950:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    3954:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    3958:	2f736269 	svccs	0x00736269
    395c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    3960:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    3964:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3968:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    396c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    3970:	2f00736c 	svccs	0x0000736c
    3974:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    3978:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    397c:	6f647679 	svcvs	0x00647679
    3980:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    3984:	2f346c65 	svccs	0x00346c65
    3988:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    398c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    3990:	6169726f 	cmnvs	r9, pc, ror #4
    3994:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    3998:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    399c:	2f747365 	svccs	0x00747365
    39a0:	6a6f7270 	bvs	1be0368 <__bss_end__+0x1a97320>
    39a4:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    39a8:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    39ac:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    39b0:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 3830 <errno+0x382c>
    39b4:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    39b8:	6b76346c 	blvs	1d90b70 <__bss_end__+0x1c47b28>
    39bc:	65732f61 	ldrbvs	r2, [r3, #-3937]!	; 0xfffff09f
    39c0:	615f346c 	cmpvs	pc, ip, ror #8
    39c4:	5f686372 	svcpl	0x00686372
    39c8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    39cc:	2f656475 	svccs	0x00656475
    39d0:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    39d4:	2f323368 	svccs	0x00323368
    39d8:	2f616b76 	svccs	0x00616b76
    39dc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    39e0:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    39e4:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    39e8:	2f656d6f 	svccs	0x00656d6f
    39ec:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    39f0:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    39f4:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    39f8:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    39fc:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    3a00:	6f747574 	svcvs	0x00747574
    3a04:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    3a08:	616d2d73 	smcvs	53971	; 0xd2d3
    3a0c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    3a10:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    3a14:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    3a18:	2f737463 	svccs	0x00737463
    3a1c:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    3a20:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    3a24:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    3a28:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    3a2c:	616b7634 	cmnvs	fp, r4, lsr r6
    3a30:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    3a34:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    3a38:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3a3c:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    3a40:	6b762f6d 	blvs	1d8f7fc <__bss_end__+0x1c467b4>
    3a44:	72612f61 	rsbvc	r2, r1, #388	; 0x184
    3a48:	2f006863 	svccs	0x00006863
    3a4c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    3a50:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    3a54:	6f647679 	svcvs	0x00647679
    3a58:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    3a5c:	2f346c65 	svccs	0x00346c65
    3a60:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3a64:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    3a68:	6169726f 	cmnvs	r9, pc, ror #4
    3a6c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    3a70:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    3a74:	2f747365 	svccs	0x00747365
    3a78:	6a6f7270 	bvs	1be0440 <__bss_end__+0x1a973f8>
    3a7c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    3a80:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    3a84:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    3a88:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 3908 <errno+0x3904>
    3a8c:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    3a90:	6b76346c 	blvs	1d90c48 <__bss_end__+0x1c47c00>
    3a94:	6e692f61 	cdpvs	15, 6, cr2, cr9, cr1, {3}
    3a98:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3a9c:	6b762f65 	blvs	1d8f838 <__bss_end__+0x1c467f0>
    3aa0:	682f0061 	stmdavs	pc!, {r0, r5, r6}	; <UNPREDICTABLE>
    3aa4:	2f656d6f 	svccs	0x00656d6f
    3aa8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    3aac:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    3ab0:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    3ab4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    3ab8:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    3abc:	6f747574 	svcvs	0x00747574
    3ac0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    3ac4:	616d2d73 	smcvs	53971	; 0xd2d3
    3ac8:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    3acc:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    3ad0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    3ad4:	2f737463 	svccs	0x00737463
    3ad8:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    3adc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    3ae0:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    3ae4:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    3ae8:	70737634 	rsbsvc	r7, r3, r4, lsr r6
    3aec:	2f656361 	svccs	0x00656361
    3af0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    3af4:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    3af8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3afc:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    3b00:	7073762f 	rsbsvc	r7, r3, pc, lsr #12
    3b04:	2f656361 	svccs	0x00656361
    3b08:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    3b0c:	6f682f00 	svcvs	0x00682f00
    3b10:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3b14:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    3b18:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    3b1c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3b20:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3b24:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    3b28:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    3b2c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    3b30:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3b34:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    3b38:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    3b3c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    3b40:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    3b44:	5f344c65 	svcpl	0x00344c65
    3b48:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3b4c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3b50:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3b54:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    3b58:	6e692f73 	mcrvs	15, 3, r2, cr9, cr3, {3}
    3b5c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3b60:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    3b64:	7475346c 	ldrbtvc	r3, [r5], #-1132	; 0xfffffb94
    3b68:	00736c69 	rsbseq	r6, r3, r9, ror #24
    3b6c:	73797300 	cmnvc	r9, #0, 6
    3b70:	726f6d5f 	rsbvc	r6, pc, #6080	; 0x17c0
    3b74:	726f6365 	rsbvc	r6, pc, #-1811939327	; 0x94000001
    3b78:	00632e65 	rsbeq	r2, r3, r5, ror #28
    3b7c:	61000001 	tstvs	r0, r1
    3b80:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    3b84:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    3b88:	00020068 	andeq	r0, r2, r8, rrx
    3b8c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    3b90:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    3b94:	00000300 	andeq	r0, r0, r0, lsl #6
    3b98:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    3b9c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    3ba0:	73000003 	movwvc	r0, #3
    3ba4:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    3ba8:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    3bac:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    3bb0:	00040068 	andeq	r0, r4, r8, rrx
    3bb4:	6a626f00 	bvs	189f7bc <__bss_end__+0x1756774>
    3bb8:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
    3bbc:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    3bc0:	00040068 	andeq	r0, r4, r8, rrx
    3bc4:	6a626f00 	bvs	189f7cc <__bss_end__+0x1756784>
    3bc8:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
    3bcc:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    3bd0:	00050068 	andeq	r0, r5, r8, rrx
    3bd4:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
    3bd8:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
    3bdc:	682e7374 	stmdavs	lr!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    3be0:	00000400 	andeq	r0, r0, r0, lsl #8
    3be4:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    3be8:	745f6465 	ldrbvc	r6, [pc], #-1125	; 3bf0 <errno+0x3bec>
    3bec:	73657079 	cmnvc	r5, #121	; 0x79
    3bf0:	6e65675f 	mcrvs	7, 3, r6, cr5, cr15, {2}
    3bf4:	0600682e 	streq	r6, [r0], -lr, lsr #16
    3bf8:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    3bfc:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    3c00:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    3c04:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    3c08:	00000400 	andeq	r0, r0, r0, lsl #8
    3c0c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    3c10:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3c14:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3c18:	69000004 	stmdbvs	r0, {r2}
    3c1c:	636f766e 	cmnvs	pc, #115343360	; 0x6e00000
    3c20:	6f697461 	svcvs	0x00697461
    3c24:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    3c28:	69000006 	stmdbvs	r0, {r1, r2}
    3c2c:	636f766e 	cmnvs	pc, #115343360	; 0x6e00000
    3c30:	6f697461 	svcvs	0x00697461
    3c34:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    3c38:	7a000007 	bvc	3c5c <errno+0x3c58>
    3c3c:	6f6c5f66 	svcvs	0x006c5f66
    3c40:	00682e67 	rsbeq	r2, r8, r7, ror #28
    3c44:	6b000008 	blvs	3c6c <errno+0x3c68>
    3c48:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    3c4c:	745f7463 	ldrbvc	r7, [pc], #-1123	; 3c54 <errno+0x3c50>
    3c50:	0900682e 	stmdbeq	r0, {r1, r2, r3, r5, fp, sp, lr}
    3c54:	6f6b0000 	svcvs	0x006b0000
    3c58:	63656a62 	cmnvs	r5, #401408	; 0x62000
    3c5c:	2e745f74 	mrccs	15, 3, r5, cr4, cr4, {3}
    3c60:	000a0068 	andeq	r0, sl, r8, rrx
    3c64:	626f6b00 	rsbvs	r6, pc, #0, 22
    3c68:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    3c6c:	682e745f 	stmdavs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    3c70:	00000b00 	andeq	r0, r0, r0, lsl #22
    3c74:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    3c78:	0c00682e 	stceq	8, cr6, [r0], {46}	; 0x2e
    3c7c:	74730000 	ldrbtvc	r0, [r3], #-0
    3c80:	72726572 	rsbsvc	r6, r2, #478150656	; 0x1c800000
    3c84:	682e726f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    3c88:	00000d00 	andeq	r0, r0, r0, lsl #26
    3c8c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    3c90:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    3c94:	00003e6e 	andeq	r3, r0, lr, ror #28
    3c98:	05000000 	streq	r0, [r0, #-0]
    3c9c:	02050001 	andeq	r0, r5, #1
    3ca0:	00014a54 	andeq	r4, r1, r4, asr sl
    3ca4:	05012c03 	streq	r2, [r1, #-3075]	; 0xfffff3fd
    3ca8:	0805850f 	stmdaeq	r5, {r0, r1, r2, r3, r8, sl, pc}
    3cac:	670d05a1 	strvs	r0, [sp, -r1, lsr #11]
    3cb0:	059f1705 	ldreq	r1, [pc, #1797]	; 43bd <errno+0x43b9>
    3cb4:	3205660f 	andcc	r6, r5, #15728640	; 0xf00000
    3cb8:	01040200 	mrseq	r0, R12_usr
    3cbc:	00260566 	eoreq	r0, r6, r6, ror #10
    3cc0:	4a010402 	bmi	44cd0 <static_tls+0xcd0>
    3cc4:	05671d05 	strbeq	r1, [r7, #-3333]!	; 0xfffff2fb
    3cc8:	05a0820d 	streq	r8, [r0, #525]!	; 0x20d
    3ccc:	01054d0c 	tsteq	r5, ip, lsl #26
    3cd0:	0f05872f 	svceq	0x0005872f
    3cd4:	4a0805d7 	bmi	205438 <__bss_end__+0xbc3f0>
    3cd8:	054c2305 	strbeq	r2, [ip, #-773]	; 0xfffffcfb
    3cdc:	1405d60c 	strne	sp, [r5], #-1548	; 0xfffff9f4
    3ce0:	4d160567 	cfldr32mi	mvfx0, [r6, #-412]	; 0xfffffe64
    3ce4:	05f31005 	ldrbeq	r1, [r3, #5]!
    3ce8:	01058405 	tsteq	r5, r5, lsl #8
    3cec:	050569f4 	streq	r6, [r5, #-2548]	; 0xfffff60c
    3cf0:	03010583 	movweq	r0, #5507	; 0x1583
    3cf4:	05f201ff 	ldrbeq	r0, [r2, #511]!	; 0x1ff
    3cf8:	0105840c 	tsteq	r5, ip, lsl #8
    3cfc:	0b05852f 	bleq	1651c0 <__bss_end__+0x1c178>
    3d00:	9f0c0583 	svcls	0x000c0583
    3d04:	9f9f0905 	svcls	0x009f0905
    3d08:	9f0b059f 	svcls	0x000b059f
    3d0c:	05d70c05 	ldrbeq	r0, [r7, #3077]	; 0xc05
    3d10:	693d0801 	ldmdbvs	sp!, {r0, fp}
    3d14:	05830b05 	streq	r0, [r3, #2821]	; 0xb05
    3d18:	09059f0c 	stmdbeq	r5, {r2, r3, r8, r9, sl, fp, ip, pc}
    3d1c:	059f9f9f 	ldreq	r9, [pc, #3999]	; 4cc3 <errno+0x4cbf>
    3d20:	0c059f0b 	stceq	15, cr9, [r5], {11}
    3d24:	080105d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl}
    3d28:	050569c9 	streq	r6, [r5, #-2505]	; 0xfffff637
    3d2c:	04020083 	streq	r0, [r2], #-131	; 0xffffff7d
    3d30:	059e0601 	ldreq	r0, [lr, #1537]	; 0x601
    3d34:	ca08060c 	bgt	20556c <__bss_end__+0xbc524>
    3d38:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    3d3c:	01010006 	tsteq	r1, r6
    3d40:	0000010d 	andeq	r0, r0, sp, lsl #2
    3d44:	00e70003 	rsceq	r0, r7, r3
    3d48:	01020000 	mrseq	r0, (UNDEF: 2)
    3d4c:	000d0efb 	strdeq	r0, [sp], -fp
    3d50:	01010101 	tsteq	r1, r1, lsl #2
    3d54:	01000000 	mrseq	r0, (UNDEF: 0)
    3d58:	2f010000 	svccs	0x00010000
    3d5c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    3d60:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    3d64:	6f647679 	svcvs	0x00647679
    3d68:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    3d6c:	2f346c65 	svccs	0x00346c65
    3d70:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3d74:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    3d78:	6169726f 	cmnvs	r9, pc, ror #4
    3d7c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    3d80:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    3d84:	2f747365 	svccs	0x00747365
    3d88:	6a6f7270 	bvs	1be0750 <__bss_end__+0x1a97708>
    3d8c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    3d90:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    3d94:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    3d98:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 3c18 <errno+0x3c14>
    3d9c:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    3da0:	756d346c 	strbvc	r3, [sp, #-1132]!	; 0xfffffb94
    3da4:	73636c73 	cmnvc	r3, #29440	; 0x7300
    3da8:	732f7379 			; <UNDEFINED> instruction: 0x732f7379
    3dac:	6d006372 	stcvs	3, cr6, [r0, #-456]	; 0xfffffe38
    3db0:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    3db4:	2f636269 	svccs	0x00636269
    3db8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    3dbc:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    3dc0:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    3dc4:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    3dc8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3dcc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3dd0:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    3dd4:	756d0073 	strbvc	r0, [sp, #-115]!	; 0xffffff8d
    3dd8:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    3ddc:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    3de0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    3de4:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    3de8:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    3dec:	2f656761 	svccs	0x00656761
    3df0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    3df4:	00656475 	rsbeq	r6, r5, r5, ror r4
    3df8:	73797300 	cmnvc	r9, #0, 6
    3dfc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    3e00:	2e646165 	powcssz	f6, f4, f5
    3e04:	00010063 	andeq	r0, r1, r3, rrx
    3e08:	6c6c6100 	stfvse	f6, [ip], #-0
    3e0c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    3e10:	00682e73 	rsbeq	r2, r8, r3, ror lr
    3e14:	73000002 	movwvc	r0, #2
    3e18:	6f696474 	svcvs	0x00696474
    3e1c:	0300682e 	movweq	r6, #2094	; 0x82e
    3e20:	623c0000 	eorsvs	r0, ip, #0
    3e24:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    3e28:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    3e2c:	00000000 	andeq	r0, r0, r0
    3e30:	00260500 	eoreq	r0, r6, r0, lsl #10
    3e34:	4e1c0205 	cdpmi	2, 1, cr0, cr12, cr5, {0}
    3e38:	09030001 	stmdbeq	r3, {r0}
    3e3c:	880c0501 	stmdahi	ip, {r0, r8, sl}
    3e40:	052f0105 	streq	r0, [pc, #-261]!	; 3d43 <errno+0x3d3f>
    3e44:	0c058426 	cfstrseq	mvf8, [r5], {38}	; 0x26
    3e48:	2f010583 	svccs	0x00010583
    3e4c:	01000802 	tsteq	r0, r2, lsl #16
    3e50:	0002bf01 	andeq	fp, r2, r1, lsl #30
    3e54:	82000300 	andhi	r0, r0, #0, 6
    3e58:	02000002 	andeq	r0, r0, #2
    3e5c:	0d0efb01 	vstreq	d15, [lr, #-4]
    3e60:	01010100 	mrseq	r0, (UNDEF: 17)
    3e64:	00000001 	andeq	r0, r0, r1
    3e68:	01000001 	tsteq	r0, r1
    3e6c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3db8 <errno+0x3db4>
    3e70:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    3e74:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    3e78:	2f676e6f 	svccs	0x00676e6f
    3e7c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3e80:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3e84:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    3e88:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    3e8c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    3e90:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3e94:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    3e98:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    3e9c:	2f6c656e 	svccs	0x006c656e
    3ea0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3ea4:	2f346c65 	svccs	0x00346c65
    3ea8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3eac:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    3eb0:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    3eb4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3eb8:	61612f65 	cmnvs	r1, r5, ror #30
    3ebc:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
    3ec0:	65732f32 	ldrbvs	r2, [r3, #-3890]!	; 0xfffff0ce
    3ec4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    3ec8:	5f346c65 	svcpl	0x00346c65
    3ecc:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    3ed0:	6f682f00 	svcvs	0x00682f00
    3ed4:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3ed8:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    3edc:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    3ee0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3ee4:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3ee8:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    3eec:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    3ef0:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    3ef4:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3ef8:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    3efc:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    3f00:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3f04:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3f08:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3f0c:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    3f10:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    3f14:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3f18:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    3f1c:	65732f6d 	ldrbvs	r2, [r3, #-3949]!	; 0xfffff093
    3f20:	612f346c 			; <UNDEFINED> instruction: 0x612f346c
    3f24:	00686372 	rsbeq	r6, r8, r2, ror r3
    3f28:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3e74 <errno+0x3e70>
    3f2c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    3f30:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    3f34:	2f676e6f 	svccs	0x00676e6f
    3f38:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3f3c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3f40:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    3f44:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    3f48:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    3f4c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3f50:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    3f54:	6f72702f 	svcvs	0x0072702f
    3f58:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    3f5c:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    3f60:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    3f64:	2f736269 	svccs	0x00736269
    3f68:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3f6c:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    3f70:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    3f74:	2f737973 	svccs	0x00737973
    3f78:	00637273 	rsbeq	r7, r3, r3, ror r2
    3f7c:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    3f80:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    3f84:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    3f88:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    3f8c:	2f706d65 	svccs	0x00706d65
    3f90:	67617473 			; <UNDEFINED> instruction: 0x67617473
    3f94:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    3f98:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    3f9c:	69622f65 	stmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    3fa0:	6d007374 	stcvs	3, cr7, [r0, #-464]	; 0xfffffe30
    3fa4:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    3fa8:	2f636269 	svccs	0x00636269
    3fac:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    3fb0:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    3fb4:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    3fb8:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    3fbc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3fc0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3fc4:	6f682f00 	svcvs	0x00682f00
    3fc8:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3fcc:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    3fd0:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    3fd4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3fd8:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3fdc:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    3fe0:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    3fe4:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    3fe8:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3fec:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    3ff0:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    3ff4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    3ff8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3ffc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4000:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4004:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4008:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    400c:	696c0034 	stmdbvs	ip!, {r2, r4, r5}^
    4010:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    4014:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
    4018:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    401c:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    4020:	0000346c 	andeq	r3, r0, ip, ror #8
    4024:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    4028:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    402c:	0100682e 	tsteq	r0, lr, lsr #16
    4030:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    4034:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    4038:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    403c:	00000200 	andeq	r0, r0, r0, lsl #4
    4040:	5f737973 	svcpl	0x00737973
    4044:	6c656979 			; <UNDEFINED> instruction: 0x6c656979
    4048:	00632e64 	rsbeq	r2, r3, r4, ror #28
    404c:	61000003 	tstvs	r0, r3
    4050:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    4054:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    4058:	00040068 	andeq	r0, r4, r8, rrx
    405c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    4060:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    4064:	00000500 	andeq	r0, r0, r0, lsl #10
    4068:	706d6973 	rsbvc	r6, sp, r3, ror r9
    406c:	745f656c 	ldrbvc	r6, [pc], #-1388	; 4074 <errno+0x4070>
    4070:	73657079 	cmnvc	r5, #121	; 0x79
    4074:	0600682e 	streq	r6, [r0], -lr, lsr #16
    4078:	626f0000 	rsbvs	r0, pc, #0
    407c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    4080:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    4084:	0600682e 	streq	r6, [r0], -lr, lsr #16
    4088:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    408c:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    4090:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    4094:	675f7365 	ldrbvs	r7, [pc, -r5, ror #6]
    4098:	682e6e65 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
    409c:	00000700 	andeq	r0, r0, r0, lsl #14
    40a0:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    40a4:	745f6465 	ldrbvc	r6, [pc], #-1125	; 40ac <errno+0x40a8>
    40a8:	73657079 	cmnvc	r5, #121	; 0x79
    40ac:	0600682e 	streq	r6, [r0], -lr, lsr #16
    40b0:	75660000 	strbvc	r0, [r6, #-0]!
    40b4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    40b8:	2e736e6f 	cdpcs	14, 7, cr6, cr3, cr15, {3}
    40bc:	00060068 	andeq	r0, r6, r8, rrx
    40c0:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    40c4:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    40c8:	003e6e69 	eorseq	r6, lr, r9, ror #28
    40cc:	73000000 	movwvc	r0, #0
    40d0:	61637379 	smcvs	14137	; 0x3739
    40d4:	682e6c6c 	stmdavs	lr!, {r2, r3, r5, r6, sl, fp, sp, lr}
    40d8:	00000700 	andeq	r0, r0, r0, lsl #14
    40dc:	00010500 	andeq	r0, r1, r0, lsl #10
    40e0:	4e640205 	cdpmi	2, 6, cr0, cr4, cr5, {0}
    40e4:	d6030001 	strle	r0, [r3], -r1
    40e8:	18050101 	stmdane	r5, {r0, r8}
    40ec:	2f050583 	svccs	0x00050583
    40f0:	04330105 	ldrteq	r0, [r3], #-261	; 0xfffffefb
    40f4:	028a0302 	addeq	r0, sl, #134217728	; 0x8000000
    40f8:	4b050582 	blmi	145708 <morecore_area+0xfc708>
    40fc:	1301054b 	movwne	r0, #5451	; 0x154b
    4100:	a2030304 	andge	r0, r3, #4, 6	; 0x10000000
    4104:	05054a7c 	streq	r4, [r5, #-2684]	; 0xfffff584
    4108:	2f0c0583 	svccs	0x000c0583
    410c:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    4110:	01010006 	tsteq	r1, r6
    4114:	00000eab 	andeq	r0, r0, fp, lsr #29
    4118:	09690003 	stmdbeq	r9!, {r0, r1}^
    411c:	01020000 	mrseq	r0, (UNDEF: 2)
    4120:	000d0efb 	strdeq	r0, [sp], -fp
    4124:	01010101 	tsteq	r1, r1, lsl #2
    4128:	01000000 	mrseq	r0, (UNDEF: 0)
    412c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    4130:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    4134:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
    4138:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    413c:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    4140:	00346c65 	eorseq	r6, r4, r5, ror #24
    4144:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 4090 <errno+0x408c>
    4148:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    414c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    4150:	2f676e6f 	svccs	0x00676e6f
    4154:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4158:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    415c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    4160:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    4164:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    4168:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    416c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    4170:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    4174:	2f6c656e 	svccs	0x006c656e
    4178:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    417c:	2f346c65 	svccs	0x00346c65
    4180:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4184:	2f656475 	svccs	0x00656475
    4188:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    418c:	6f682f00 	svcvs	0x00682f00
    4190:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    4194:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    4198:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    419c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    41a0:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    41a4:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    41a8:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    41ac:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    41b0:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    41b4:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    41b8:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    41bc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    41c0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    41c4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    41c8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    41cc:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    41d0:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    41d4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    41d8:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    41dc:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    41e0:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    41e4:	2f346c65 	svccs	0x00346c65
    41e8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    41ec:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    41f0:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    41f4:	2f656d6f 	svccs	0x00656d6f
    41f8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    41fc:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    4200:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    4204:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    4208:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    420c:	6f747574 	svcvs	0x00747574
    4210:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    4214:	616d2d73 	smcvs	53971	; 0xd2d3
    4218:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    421c:	6b2f7473 	blvs	be13f0 <__bss_end__+0xa983a8>
    4220:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    4224:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    4228:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    422c:	72612f34 	rsbvc	r2, r1, #52, 30	; 0xd0
    4230:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    4234:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4238:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    423c:	732f6d72 			; <UNDEFINED> instruction: 0x732f6d72
    4240:	2f346c65 	svccs	0x00346c65
    4244:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4248:	62696c00 	rsbvs	r6, r9, #0, 24
    424c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4250:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4254:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4258:	746e692f 	strbtvc	r6, [lr], #-2351	; 0xfffff6d1
    425c:	61667265 	cmnvs	r6, r5, ror #4
    4260:	00736563 	rsbseq	r6, r3, r3, ror #10
    4264:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 41b0 <errno+0x41ac>
    4268:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    426c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    4270:	2f676e6f 	svccs	0x00676e6f
    4274:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4278:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    427c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    4280:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    4284:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    4288:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    428c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    4290:	6f72702f 	svcvs	0x0072702f
    4294:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    4298:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    429c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    42a0:	2f736269 	svccs	0x00736269
    42a4:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    42a8:	64346c65 	ldrtvs	r6, [r4], #-3173	; 0xfffff39b
    42ac:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
    42b0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    42b4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    42b8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    42bc:	62656434 	rsbvs	r6, r5, #52, 8	; 0x34000000
    42c0:	2f006775 	svccs	0x00006775
    42c4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    42c8:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    42cc:	6f647679 	svcvs	0x00647679
    42d0:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    42d4:	2f346c65 	svccs	0x00346c65
    42d8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    42dc:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    42e0:	6169726f 	cmnvs	r9, pc, ror #4
    42e4:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    42e8:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    42ec:	2f747365 	svccs	0x00747365
    42f0:	6a6f7270 	bvs	1be0cb8 <__bss_end__+0x1a97c70>
    42f4:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    42f8:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    42fc:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    4300:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 4180 <errno+0x417c>
    4304:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    4308:	6b76346c 	blvs	1d914c0 <__bss_end__+0x1c48478>
    430c:	6e692f61 	cdpvs	15, 6, cr2, cr9, cr1, {3}
    4310:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4314:	6b762f65 	blvs	1d900b0 <__bss_end__+0x1c47068>
    4318:	682f0061 	stmdavs	pc!, {r0, r5, r6}	; <UNPREDICTABLE>
    431c:	2f656d6f 	svccs	0x00656d6f
    4320:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    4324:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    4328:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    432c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    4330:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    4334:	6f747574 	svcvs	0x00747574
    4338:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    433c:	616d2d73 	smcvs	53971	; 0xd2d3
    4340:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    4344:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    4348:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    434c:	2f737463 	svccs	0x00737463
    4350:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    4354:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    4358:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    435c:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    4360:	70737634 	rsbsvc	r7, r3, r4, lsr r6
    4364:	2f656361 	svccs	0x00656361
    4368:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    436c:	2f656475 	svccs	0x00656475
    4370:	61707376 	cmnvs	r0, r6, ror r3
    4374:	2f006563 	svccs	0x00006563
    4378:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    437c:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4380:	6f647679 	svcvs	0x00647679
    4384:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    4388:	2f346c65 	svccs	0x00346c65
    438c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4390:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    4394:	6169726f 	cmnvs	r9, pc, ror #4
    4398:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    439c:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    43a0:	2f747365 	svccs	0x00747365
    43a4:	6a6f7270 	bvs	1be0d6c <__bss_end__+0x1a97d24>
    43a8:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    43ac:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    43b0:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    43b4:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 4234 <errno+0x4230>
    43b8:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    43bc:	6c70346c 	cfldrdvs	mvd3, [r0], #-432	; 0xfffffe50
    43c0:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    43c4:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    43c8:	72732f74 	rsbsvc	r2, r3, #116, 30	; 0x1d0
    43cc:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    43d0:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    43d4:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    43d8:	615f346c 	cmpvs	pc, ip, ror #8
    43dc:	5f686372 	svcpl	0x00686372
    43e0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    43e4:	2f656475 	svccs	0x00656475
    43e8:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    43ec:	2f323368 	svccs	0x00323368
    43f0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    43f4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    43f8:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    43fc:	6c006863 	stcvs	8, cr6, [r0], {99}	; 0x63
    4400:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    4404:	612f346c 			; <UNDEFINED> instruction: 0x612f346c
    4408:	5f686372 	svcpl	0x00686372
    440c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4410:	2f656475 	svccs	0x00656475
    4414:	2f6d7261 	svccs	0x006d7261
    4418:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    441c:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    4420:	756d0068 	strbvc	r0, [sp, #-104]!	; 0xffffff98
    4424:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    4428:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    442c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    4430:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    4434:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    4438:	2f656761 	svccs	0x00656761
    443c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4440:	2f656475 	svccs	0x00656475
    4444:	73746962 	cmnvc	r4, #1605632	; 0x188000
    4448:	73756d00 	cmnvc	r5, #0, 26
    444c:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    4450:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    4454:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    4458:	706d6574 	rsbvc	r6, sp, r4, ror r5
    445c:	6174732f 	cmnvs	r4, pc, lsr #6
    4460:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    4464:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4468:	2f006564 	svccs	0x00006564
    446c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    4470:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4474:	6f647679 	svcvs	0x00647679
    4478:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    447c:	2f346c65 	svccs	0x00346c65
    4480:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4484:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    4488:	6169726f 	cmnvs	r9, pc, ror #4
    448c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    4490:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    4494:	2f747365 	svccs	0x00747365
    4498:	6a6f7270 	bvs	1be0e60 <__bss_end__+0x1a97e18>
    449c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    44a0:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    44a4:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    44a8:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 4328 <errno+0x4324>
    44ac:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    44b0:	2f736c69 	svccs	0x00736c69
    44b4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    44b8:	2f656475 	svccs	0x00656475
    44bc:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    44c0:	682f0073 	stmdavs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
    44c4:	2f656d6f 	svccs	0x00656d6f
    44c8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    44cc:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    44d0:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    44d4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    44d8:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    44dc:	6f747574 	svcvs	0x00747574
    44e0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    44e4:	616d2d73 	smcvs	53971	; 0xd2d3
    44e8:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    44ec:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    44f0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    44f4:	2f737463 	svccs	0x00737463
    44f8:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    44fc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    4500:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4504:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    4508:	6d697334 	stclvs	3, cr7, [r9, #-208]!	; 0xffffff30
    450c:	2f656c70 	svccs	0x00656c70
    4510:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4514:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    4518:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    451c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    4520:	6d69732f 	stclvs	3, cr7, [r9, #-188]!	; 0xffffff44
    4524:	2f656c70 	svccs	0x00656c70
    4528:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    452c:	6f682f00 	svcvs	0x00682f00
    4530:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    4534:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    4538:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    453c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    4540:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    4544:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    4548:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    454c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    4550:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    4554:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    4558:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    455c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    4560:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    4564:	5f344c65 	svcpl	0x00344c65
    4568:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    456c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4570:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4574:	706d6973 	rsbvc	r6, sp, r3, ror r9
    4578:	692f656c 	stmdbvs	pc!, {r2, r3, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    457c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    4580:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    4584:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    4588:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
    458c:	2f656d6f 	svccs	0x00656d6f
    4590:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    4594:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    4598:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    459c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    45a0:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    45a4:	6f747574 	svcvs	0x00747574
    45a8:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    45ac:	616d2d73 	smcvs	53971	; 0xd2d3
    45b0:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    45b4:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    45b8:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    45bc:	2f737463 	svccs	0x00737463
    45c0:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    45c4:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    45c8:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    45cc:	616c7062 	cmnvs	ip, r2, rrx
    45d0:	70757374 	rsbsvc	r7, r5, r4, ror r3
    45d4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    45d8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    45dc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    45e0:	616c702f 	cmnvs	ip, pc, lsr #32
    45e4:	70757374 	rsbsvc	r7, r5, r4, ror r3
    45e8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    45ec:	6f682f00 	svcvs	0x00682f00
    45f0:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    45f4:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    45f8:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    45fc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    4600:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    4604:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    4608:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    460c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    4610:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    4614:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    4618:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    461c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    4620:	752f7374 	strvc	r7, [pc, #-884]!	; 42b4 <errno+0x42b0>
    4624:	5f6c6974 	svcpl	0x006c6974
    4628:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    462c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4630:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    4634:	70707573 	rsbsvc	r7, r0, r3, ror r5
    4638:	2f74726f 	svccs	0x0074726f
    463c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4640:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    4644:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4648:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    464c:	616c702f 	cmnvs	ip, pc, lsr #32
    4650:	70757374 	rsbsvc	r7, r5, r4, ror r3
    4654:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4658:	6f682f00 	svcvs	0x00682f00
    465c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    4660:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    4664:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    4668:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    466c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    4670:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    4674:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    4678:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    467c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    4680:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    4684:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    4688:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    468c:	752f7374 	strvc	r7, [pc, #-884]!	; 4320 <errno+0x431c>
    4690:	5f6c6974 	svcpl	0x006c6974
    4694:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    4698:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    469c:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    46a0:	70707573 	rsbsvc	r7, r0, r3, ror r5
    46a4:	2f74726f 	svccs	0x0074726f
    46a8:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    46ac:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    46b0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    46b4:	6e797a2f 	vaddvs.f32	s15, s18, s31
    46b8:	30303771 	eorscc	r3, r0, r1, ror r7
    46bc:	6c702f30 	ldclvs	15, cr2, [r0], #-192	; 0xffffff40
    46c0:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    46c4:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    46c8:	6c702f74 	ldclvs	15, cr2, [r0], #-464	; 0xfffffe30
    46cc:	2f007461 	svccs	0x00007461
    46d0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    46d4:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    46d8:	6f647679 	svcvs	0x00647679
    46dc:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    46e0:	2f346c65 	svccs	0x00346c65
    46e4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    46e8:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    46ec:	6169726f 	cmnvs	r9, pc, ror #4
    46f0:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    46f4:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    46f8:	2f747365 	svccs	0x00747365
    46fc:	6a6f7270 	bvs	1be10c4 <__bss_end__+0x1a9807c>
    4700:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    4704:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    4708:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    470c:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 458c <errno+0x4588>
    4710:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    4714:	6b76346c 	blvs	1d918cc <__bss_end__+0x1c48884>
    4718:	65732f61 	ldrbvs	r2, [r3, #-3937]!	; 0xfffff09f
    471c:	615f346c 	cmpvs	pc, ip, ror #8
    4720:	5f686372 	svcpl	0x00686372
    4724:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    4728:	2f656475 	svccs	0x00656475
    472c:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    4730:	2f323368 	svccs	0x00323368
    4734:	2f616b76 	svccs	0x00616b76
    4738:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    473c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    4740:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    4744:	2f656d6f 	svccs	0x00656d6f
    4748:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    474c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    4750:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    4754:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    4758:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    475c:	6f747574 	svcvs	0x00747574
    4760:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    4764:	616d2d73 	smcvs	53971	; 0xd2d3
    4768:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    476c:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    4770:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    4774:	2f737463 	svccs	0x00737463
    4778:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    477c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    4780:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4784:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    4788:	616b7634 	cmnvs	fp, r4, lsr r6
    478c:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    4790:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    4794:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4798:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    479c:	6b762f6d 	blvs	1d90558 <__bss_end__+0x1c47510>
    47a0:	72612f61 	rsbvc	r2, r1, #388	; 0x184
    47a4:	2f006863 	svccs	0x00006863
    47a8:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    47ac:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    47b0:	6f647679 	svcvs	0x00647679
    47b4:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    47b8:	2f346c65 	svccs	0x00346c65
    47bc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    47c0:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    47c4:	6169726f 	cmnvs	r9, pc, ror #4
    47c8:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    47cc:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    47d0:	2f747365 	svccs	0x00747365
    47d4:	6a6f7270 	bvs	1be119c <__bss_end__+0x1a98154>
    47d8:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    47dc:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    47e0:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    47e4:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 4664 <errno+0x4660>
    47e8:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    47ec:	7376346c 	cmnvc	r6, #108, 8	; 0x6c000000
    47f0:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    47f4:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    47f8:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    47fc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4800:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    4804:	73762f6d 	cmnvc	r6, #436	; 0x1b4
    4808:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    480c:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    4810:	73000068 	movwvc	r0, #104	; 0x68
    4814:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    4818:	79745f64 	ldmdbvc	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    481c:	5f736570 	svcpl	0x00736570
    4820:	2e6e6567 	cdpcs	5, 6, cr6, cr14, cr7, {3}
    4824:	00010068 	andeq	r0, r1, r8, rrx
    4828:	6e756600 	cdpvs	6, 7, cr6, cr5, cr0, {0}
    482c:	6f697463 	svcvs	0x00697463
    4830:	682e736e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}
    4834:	00000200 	andeq	r0, r0, r0, lsl #4
    4838:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    483c:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    4840:	0300682e 	movweq	r6, #2094	; 0x82e
    4844:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    4848:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    484c:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    4850:	00000400 	andeq	r0, r0, r0, lsl #8
    4854:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4858:	696c635f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
    485c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
    4860:	00050068 	andeq	r0, r5, r8, rrx
    4864:	62656400 	rsbvs	r6, r5, #0, 8
    4868:	682e6775 	stmdavs	lr!, {r0, r2, r4, r5, r6, r8, r9, sl, sp, lr}
    486c:	00000600 	andeq	r0, r0, r0, lsl #12
    4870:	2e616b76 	vmovcs.8	d1[7], r6
    4874:	00070068 	andeq	r0, r7, r8, rrx
    4878:	67617000 	strbvs	r7, [r1, -r0]!
    487c:	00682e65 	rsbeq	r2, r8, r5, ror #28
    4880:	76000008 	strvc	r0, [r0], -r8
    4884:	63617073 	cmnvs	r1, #115	; 0x73
    4888:	00682e65 	rsbeq	r2, r8, r5, ror #28
    488c:	63000008 	movwvs	r0, #8
    4890:	706f7061 	rsbvc	r7, pc, r1, rrx
    4894:	00682e73 	rsbeq	r2, r8, r3, ror lr
    4898:	63000007 	movwvs	r0, #7
    489c:	6f6d6d6f 	svcvs	0x006d6d6f
    48a0:	00632e6e 	rsbeq	r2, r3, lr, ror #28
    48a4:	73000009 	movwvc	r0, #9
    48a8:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    48ac:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    48b0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    48b4:	00020068 	andeq	r0, r2, r8, rrx
    48b8:	70797400 	rsbsvc	r7, r9, r0, lsl #8
    48bc:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    48c0:	00000400 	andeq	r0, r0, r0, lsl #8
    48c4:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    48c8:	2e6c6c61 	cdpcs	12, 6, cr6, cr12, cr1, {3}
    48cc:	00010068 	andeq	r0, r1, r8, rrx
    48d0:	6a626f00 	bvs	18a04d8 <__bss_end__+0x1757490>
    48d4:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
    48d8:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    48dc:	00020068 	andeq	r0, r2, r8, rrx
    48e0:	6a626f00 	bvs	18a04e8 <__bss_end__+0x17574a0>
    48e4:	74746365 	ldrbtvc	r6, [r4], #-869	; 0xfffffc9b
    48e8:	2e657079 	mcrcs	0, 3, r7, cr5, cr9, {3}
    48ec:	00030068 	andeq	r0, r3, r8, rrx
    48f0:	72726500 	rsbsvc	r6, r2, #0, 10
    48f4:	2e73726f 	cdpcs	2, 7, cr7, cr3, cr15, {3}
    48f8:	00020068 	andeq	r0, r2, r8, rrx
    48fc:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
    4900:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
    4904:	682e7374 	stmdavs	lr!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    4908:	00000200 	andeq	r0, r0, r0, lsl #4
    490c:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    4910:	745f6465 	ldrbvc	r6, [pc], #-1125	; 4918 <errno+0x4914>
    4914:	73657079 	cmnvc	r5, #121	; 0x79
    4918:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    491c:	79740000 	ldmdbvc	r4!, {}^	; <UNPREDICTABLE>
    4920:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    4924:	00020068 	andeq	r0, r2, r8, rrx
    4928:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
    492c:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    4930:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    4934:	00010068 	andeq	r0, r1, r8, rrx
    4938:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
    493c:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    4940:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    4944:	000a0068 	andeq	r0, sl, r8, rrx
    4948:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
    494c:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    4950:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    4954:	000b0068 	andeq	r0, fp, r8, rrx
    4958:	6f6f6200 	svcvs	0x006f6200
    495c:	666e6974 			; <UNDEFINED> instruction: 0x666e6974
    4960:	79745f6f 	ldmdbvc	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4964:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    4968:	00020068 	andeq	r0, r2, r8, rrx
    496c:	6c6c6100 	stfvse	f6, [ip], #-0
    4970:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    4974:	00682e73 	rsbeq	r2, r8, r3, ror lr
    4978:	7300000c 	movwvc	r0, #12
    497c:	6f696474 	svcvs	0x00696474
    4980:	0d00682e 	stceq	8, cr6, [r0, #-184]	; 0xffffff48
    4984:	72660000 	rsbvc	r0, r6, #0
    4988:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    498c:	2e79636e 	cdpcs	3, 7, cr6, cr9, cr14, {3}
    4990:	000e0068 	andeq	r0, lr, r8, rrx
    4994:	5f667a00 	svcpl	0x00667a00
    4998:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
    499c:	000e0068 	andeq	r0, lr, r8, rrx
    49a0:	70736300 	rsbsvc	r6, r3, r0, lsl #6
    49a4:	70656361 	rsbvc	r6, r5, r1, ror #6
    49a8:	5f687461 	svcpl	0x00687461
    49ac:	00682e74 	rsbeq	r2, r8, r4, ror lr
    49b0:	73000007 	movwvc	r0, #7
    49b4:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    49b8:	00682e65 	rsbeq	r2, r8, r5, ror #28
    49bc:	7300000f 	movwvc	r0, #15
    49c0:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    49c4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    49c8:	65000010 	strvs	r0, [r0, #-16]
    49cc:	6f6e7272 	svcvs	0x006e7272
    49d0:	0d00682e 	stceq	8, cr6, [r0, #-184]	; 0xffffff48
    49d4:	72690000 	rsbvc	r0, r9, #0
    49d8:	00682e71 	rsbeq	r2, r8, r1, ror lr
    49dc:	69000011 	stmdbvs	r0, {r0, r4}
    49e0:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    49e4:	63000011 	movwvs	r0, #17
    49e8:	6b636f6c 	blvs	18e07a0 <__bss_end__+0x1797758>
    49ec:	1200682e 	andne	r6, r0, #3014656	; 0x2e0000
    49f0:	6c630000 	stclvs	0, cr0, [r3], #-0
    49f4:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
    49f8:	00130068 	andseq	r0, r3, r8, rrx
    49fc:	696e7500 	stmdbvs	lr!, {r8, sl, ip, sp, lr}^
    4a00:	2e647473 	mcrcs	4, 3, r7, cr4, cr3, {3}
    4a04:	000d0068 	andeq	r0, sp, r8, rrx
    4a08:	78756d00 	ldmdavc	r5!, {r8, sl, fp, sp, lr}^
    4a0c:	1200682e 	andne	r6, r0, #3014656	; 0x2e0000
    4a10:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    4a14:	66726574 			; <UNDEFINED> instruction: 0x66726574
    4a18:	5f656361 	svcpl	0x00656361
    4a1c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    4a20:	00682e73 	rsbeq	r2, r8, r3, ror lr
    4a24:	69000011 	stmdbvs	r0, {r0, r4}
    4a28:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    4a2c:	65636166 	strbvs	r6, [r3, #-358]!	; 0xfffffe9a
    4a30:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    4a34:	72747369 	rsbsvc	r7, r4, #-1543503871	; 0xa4000001
    4a38:	6f697461 	svcvs	0x00697461
    4a3c:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    4a40:	6b000011 	blvs	4a8c <errno+0x4a88>
    4a44:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    4a48:	745f7463 	ldrbvc	r7, [pc], #-1123	; 4a50 <errno+0x4a4c>
    4a4c:	1400682e 	strne	r6, [r0], #-2094	; 0xfffff7d2
    4a50:	6f6b0000 	svcvs	0x006b0000
    4a54:	63656a62 	cmnvs	r5, #401408	; 0x62000
    4a58:	2e745f74 	mrccs	15, 3, r5, cr4, cr4, {3}
    4a5c:	00150068 	andseq	r0, r5, r8, rrx
    4a60:	626f6b00 	rsbvs	r6, pc, #0, 22
    4a64:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    4a68:	682e745f 	stmdavs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    4a6c:	00000700 	andeq	r0, r0, r0, lsl #14
    4a70:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    4a74:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    4a78:	00000700 	andeq	r0, r0, r0, lsl #14
    4a7c:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    4a80:	1600682e 	strne	r6, [r0], -lr, lsr #16
    4a84:	05000000 	streq	r0, [r0, #-0]
    4a88:	05000184 	streq	r0, [r0, #-388]	; 0xfffffe7c
    4a8c:	014ec802 	cmpeq	lr, r2, lsl #16
    4a90:	00fa0300 	rscseq	r0, sl, r0, lsl #6
    4a94:	da050501 	ble	145ea0 <morecore_area+0xfcea0>
    4a98:	01040200 	mrseq	r0, R12_usr
    4a9c:	f3068206 	vhsub.u8	d8, d6, d6
    4aa0:	01040200 	mrseq	r0, R12_usr
    4aa4:	f3068206 	vhsub.u8	d8, d6, d6
    4aa8:	01040200 	mrseq	r0, R12_usr
    4aac:	f3068206 	vhsub.u8	d8, d6, d6
    4ab0:	01040200 	mrseq	r0, R12_usr
    4ab4:	27058206 	strcs	r8, [r5, -r6, lsl #4]
    4ab8:	0905f506 	stmdbeq	r5, {r1, r2, r8, sl, ip, sp, lr, pc}
    4abc:	2f22054a 	svccs	0x0022054a
    4ac0:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    4ac4:	09052f21 	stmdbeq	r5, {r0, r5, r8, r9, sl, fp, sp}
    4ac8:	2f220566 	svccs	0x00220566
    4acc:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    4ad0:	0c052a1d 			; <UNDEFINED> instruction: 0x0c052a1d
    4ad4:	2f010534 	svccs	0x00010534
    4ad8:	b3036f05 	movwlt	r6, #16133	; 0x3f05
    4adc:	05056601 	streq	r6, [r5, #-1537]	; 0xfffff9ff
    4ae0:	040200da 	streq	r0, [r2], #-218	; 0xffffff26
    4ae4:	069e0601 	ldreq	r0, [lr], r1, lsl #12
    4ae8:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    4aec:	06820601 	streq	r0, [r2], r1, lsl #12
    4af0:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    4af4:	06820601 	streq	r0, [r2], r1, lsl #12
    4af8:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    4afc:	05820601 	streq	r0, [r2, #1537]	; 0x601
    4b00:	05f50609 	ldrbeq	r0, [r5, #1545]!	; 0x609
    4b04:	09054b22 	stmdbeq	r5, {r1, r5, r8, r9, fp, lr}
    4b08:	2f1e0566 	svccs	0x001e0566
    4b0c:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    4b10:	09052f1c 	stmdbeq	r5, {r2, r3, r4, r8, r9, sl, fp, sp}
    4b14:	2a1f054a 	bcs	7c6044 <__bss_end__+0x67cffc>
    4b18:	05340c05 	ldreq	r0, [r4, #-3077]!	; 0xfffff3fb
    4b1c:	41052f01 	tstmi	r5, r1, lsl #30
    4b20:	05661203 	strbeq	r1, [r6, #-515]!	; 0xfffffdfd
    4b24:	09058422 	stmdbeq	r5, {r1, r5, sl, pc}
    4b28:	4f0c052e 	svcmi	0x000c052e
    4b2c:	052f0105 	streq	r0, [pc, #-261]!	; 4a2f <errno+0x4a2b>
    4b30:	00ed0342 	rsceq	r0, sp, r2, asr #6
    4b34:	84220582 	strthi	r0, [r2], #-1410	; 0xfffffa7e
    4b38:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    4b3c:	01054f0c 	tsteq	r5, ip, lsl #30
    4b40:	0302042f 	movweq	r0, #9263	; 0x242f
    4b44:	05827ccd 	streq	r7, [r2, #3277]	; 0xccd
    4b48:	01054b0c 	tsteq	r5, ip, lsl #22
    4b4c:	05056e83 	streq	r6, [r5, #-3715]	; 0xfffff17d
    4b50:	4a21059f 	bmi	8461d4 <__bss_end__+0x6fd18c>
    4b54:	039f0105 	orrseq	r0, pc, #1073741825	; 0x40000001
    4b58:	05056617 	streq	r6, [r5, #-1559]	; 0xfffff9e9
    4b5c:	4a2c059f 	bmi	b061e0 <__bss_end__+0x9bd198>
    4b60:	04830105 	streq	r0, [r3], #261	; 0x105
    4b64:	00c60303 	sbceq	r0, r6, r3, lsl #6
    4b68:	d7180566 	ldrle	r0, [r8, -r6, ror #10]
    4b6c:	3129052f 			; <UNDEFINED> instruction: 0x3129052f
    4b70:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    4b74:	054b2f29 	strbeq	r2, [fp, #-3881]	; 0xfffff0d7
    4b78:	29054a18 	stmdbcs	r5, {r3, r4, r9, fp, lr}
    4b7c:	4a18052f 	bmi	606040 <__bss_end__+0x4bcff8>
    4b80:	2f050532 	svccs	0x00050532
    4b84:	05350f05 	ldreq	r0, [r5, #-3845]!	; 0xfffff0fb
    4b88:	11056710 	tstne	r5, r0, lsl r7
    4b8c:	6767674b 	strbvs	r6, [r7, -fp, asr #14]!
    4b90:	04670105 	strbteq	r0, [r7], #-261	; 0xfffffefb
    4b94:	820e0304 	andhi	r0, lr, #4, 6	; 0x10000000
    4b98:	4bd80f05 	blmi	ff6087b4 <__bss_end__+0xff4bf76c>
    4b9c:	08054b4b 	stmdaeq	r5, {r0, r1, r3, r6, r8, r9, fp, lr}
    4ba0:	001d054d 	andseq	r0, sp, sp, asr #10
    4ba4:	66010402 	strvs	r0, [r1], -r2, lsl #8
    4ba8:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    4bac:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    4bb0:	0e054b10 	vmoveq.32	d5[0], r4
    4bb4:	3008054a 	andcc	r0, r8, sl, asr #10
    4bb8:	02001d05 	andeq	r1, r0, #320	; 0x140
    4bbc:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    4bc0:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    4bc4:	10056601 	andne	r6, r5, r1, lsl #12
    4bc8:	4a0e054b 	bmi	3860fc <__bss_end__+0x23d0b4>
    4bcc:	05300805 	ldreq	r0, [r0, #-2053]!	; 0xfffff7fb
    4bd0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    4bd4:	1a056601 	bne	15e3e0 <__bss_end__+0x15398>
    4bd8:	01040200 	mrseq	r0, R12_usr
    4bdc:	4b100566 	blmi	40617c <__bss_end__+0x2bd134>
    4be0:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    4be4:	1d053008 	stcne	0, cr3, [r5, #-32]	; 0xffffffe0
    4be8:	01040200 	mrseq	r0, R12_usr
    4bec:	001a0566 	andseq	r0, sl, r6, ror #10
    4bf0:	66010402 	strvs	r0, [r1], -r2, lsl #8
    4bf4:	054b1005 	strbeq	r1, [fp, #-5]
    4bf8:	05054a0e 	streq	r4, [r5, #-2574]	; 0xfffff5f2
    4bfc:	02080531 	andeq	r0, r8, #205520896	; 0xc400000
    4c00:	0e051524 	cfsh32eq	mvfx1, mvfx5, #20
    4c04:	68080567 	stmdavs	r8, {r0, r1, r2, r5, r6, r8, sl}
    4c08:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    4c0c:	0e056808 	cdpeq	8, 0, cr6, cr5, cr8, {0}
    4c10:	68080567 	stmdavs	r8, {r0, r1, r2, r5, r6, r8, sl}
    4c14:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    4c18:	0105690c 	tsteq	r5, ip, lsl #18
    4c1c:	038a032f 	orreq	r0, sl, #-1140850688	; 0xbc000000
    4c20:	830f0566 	movwhi	r0, #62822	; 0xf566
    4c24:	4b4b4b4b 	blmi	12d7958 <__bss_end__+0x118e910>
    4c28:	054c0505 	strbeq	r0, [ip, #-1285]	; 0xfffffafb
    4c2c:	1322020c 			; <UNDEFINED> instruction: 0x1322020c
    4c30:	042f0105 	strteq	r0, [pc], #-261	; 4c38 <errno+0x4c34>
    4c34:	666e0305 	strbtvs	r0, [lr], -r5, lsl #6
    4c38:	05d81b05 	ldrbeq	r1, [r8, #2821]	; 0xb05
    4c3c:	0605de02 	streq	sp, [r5], -r2, lsl #28
    4c40:	4b140569 	blmi	5061ec <__bss_end__+0x3bd1a4>
    4c44:	2f2e0605 	svccs	0x002e0605
    4c48:	4d0f054b 	cfstr32mi	mvfx0, [pc, #-300]	; 4b24 <errno+0x4b20>
    4c4c:	76081805 	strvc	r1, [r8], -r5, lsl #16
    4c50:	05690505 	strbeq	r0, [r9, #-1285]!	; 0xfffffafb
    4c54:	83836703 	orrhi	r6, r3, #786432	; 0xc0000
    4c58:	8a090583 	bhi	24626c <__bss_end__+0xfd224>
    4c5c:	032f0105 			; <UNDEFINED> instruction: 0x032f0105
    4c60:	1b056611 	blne	15e4ac <__bss_end__+0x15464>
    4c64:	de060584 	cfsh32le	mvfx0, mvfx6, #-60
    4c68:	054b4b4b 	strbeq	r4, [fp, #-2891]	; 0xfffff4b5
    4c6c:	18054d0f 	stmdane	r5, {r0, r1, r2, r3, r8, sl, fp, lr}
    4c70:	05057608 	streq	r7, [r5, #-1544]	; 0xfffff9f8
    4c74:	67030569 	strvs	r0, [r3, -r9, ror #10]
    4c78:	05838383 	streq	r8, [r3, #899]	; 0x383
    4c7c:	01058a09 	tsteq	r5, r9, lsl #20
    4c80:	1990032f 	ldmibne	r0, {r0, r1, r2, r3, r5, r8, r9}
    4c84:	d81b0566 	ldmdale	fp, {r1, r2, r5, r6, r8, sl}
    4c88:	05de0605 	ldrbeq	r0, [lr, #1541]	; 0x605
    4c8c:	06054b0f 	streq	r4, [r5], -pc, lsl #22
    4c90:	054b2f2e 	strbeq	r2, [fp, #-3886]	; 0xfffff0d2
    4c94:	18054d0f 	stmdane	r5, {r0, r1, r2, r3, r8, sl, fp, lr}
    4c98:	05057608 	streq	r7, [r5, #-1544]	; 0xfffff9f8
    4c9c:	67030569 	strvs	r0, [r3, -r9, ror #10]
    4ca0:	05838383 	streq	r8, [r3, #899]	; 0x383
    4ca4:	01058a09 	tsteq	r5, r9, lsl #20
    4ca8:	0306042f 	movweq	r0, #25647	; 0x642f
    4cac:	056661ac 	strbeq	r6, [r6, #-428]!	; 0xfffffe54
    4cb0:	0f058412 	svceq	0x00058412
    4cb4:	86010566 	strhi	r0, [r1], -r6, ror #10
    4cb8:	fd030704 	stc2	7, cr0, [r3, #-16]
    4cbc:	08056600 	stmdaeq	r5, {r9, sl, sp, lr}
    4cc0:	670905bc 			; <UNDEFINED> instruction: 0x670905bc
    4cc4:	01040200 	mrseq	r0, R12_usr
    4cc8:	02009e06 	andeq	r9, r0, #6, 28	; 0x60
    4ccc:	74080304 	strvc	r0, [r8], #-772	; 0xfffffcfc
    4cd0:	f5060805 			; <UNDEFINED> instruction: 0xf5060805
    4cd4:	00670905 	rsbeq	r0, r7, r5, lsl #18
    4cd8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4cdc:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    4ce0:	05740803 	ldrbeq	r0, [r4, #-2051]!	; 0xfffff7fd
    4ce4:	05f5060d 	ldrbeq	r0, [r5, #1549]!	; 0x60d
    4ce8:	09054a08 	stmdbeq	r5, {r3, r9, fp, lr}
    4cec:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    4cf0:	009e0601 	addseq	r0, lr, r1, lsl #12
    4cf4:	08030402 	stmdaeq	r3, {r1, sl}
    4cf8:	06080574 			; <UNDEFINED> instruction: 0x06080574
    4cfc:	4a0505f5 	bmi	1464d8 <morecore_area+0xfd4d8>
    4d00:	039f0105 	orrseq	r0, pc, #1073741825	; 0x40000001
    4d04:	09056612 	stmdbeq	r5, {r1, r4, r9, sl, sp, lr}
    4d08:	660805a0 	strvs	r0, [r8], -r0, lsr #11
    4d0c:	004b0905 	subeq	r0, fp, r5, lsl #18
    4d10:	06010402 	streq	r0, [r1], -r2, lsl #8
    4d14:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    4d18:	05740803 	ldrbeq	r0, [r4, #-2051]!	; 0xfffff7fd
    4d1c:	05f7060d 	ldrbeq	r0, [r7, #1549]!	; 0x60d
    4d20:	09054a08 	stmdbeq	r5, {r3, r9, fp, lr}
    4d24:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    4d28:	009e0601 	addseq	r0, lr, r1, lsl #12
    4d2c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4d30:	08057508 	stmdaeq	r5, {r3, r8, sl, ip, sp, lr}
    4d34:	4a050531 	bmi	146200 <morecore_area+0xfd200>
    4d38:	05b70905 	ldreq	r0, [r7, #2309]!	; 0x905
    4d3c:	08043201 	stmdaeq	r4, {r0, r9, ip, sp}
    4d40:	4a7ec703 	bmi	1fb6954 <__bss_end__+0x1e6d90c>
    4d44:	05830e05 	streq	r0, [r3, #3589]	; 0xe05
    4d48:	0c054a05 			; <UNDEFINED> instruction: 0x0c054a05
    4d4c:	670d0530 	smladxvs	sp, r0, r5, r0
    4d50:	02040200 	andeq	r0, r4, #0, 4
    4d54:	05580806 	ldrbeq	r0, [r8, #-2054]	; 0xfffff7fa
    4d58:	05f40629 	ldrbeq	r0, [r4, #1577]!	; 0x629
    4d5c:	1405820c 	strne	r8, [r5], #-524	; 0xfffffdf4
    4d60:	00520567 	subseq	r0, r2, r7, ror #10
    4d64:	03020402 	movweq	r0, #9218	; 0x2402
    4d68:	05054a7a 	streq	r4, [r5, #-2682]	; 0xfffff586
    4d6c:	01040200 	mrseq	r0, R12_usr
    4d70:	004c0566 	subeq	r0, ip, r6, ror #10
    4d74:	66030402 	strvs	r0, [r3], -r2, lsl #8
    4d78:	02002d05 	andeq	r2, r0, #320	; 0x140
    4d7c:	05820304 	streq	r0, [r2, #772]	; 0x304
    4d80:	660a030c 	strvs	r0, [sl], -ip, lsl #6
    4d84:	042f0105 	strteq	r0, [pc], #-261	; 4d8c <errno+0x4d88>
    4d88:	04890309 	streq	r0, [r9], #777	; 0x309
    4d8c:	d7080566 	strle	r0, [r8, -r6, ror #10]
    4d90:	00670905 	rsbeq	r0, r7, r5, lsl #18
    4d94:	06010402 	streq	r0, [r1], -r2, lsl #8
    4d98:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    4d9c:	0f057508 	svceq	0x00057508
    4da0:	4a08054c 	bmi	2062d8 <__bss_end__+0xbd290>
    4da4:	004b0905 	subeq	r0, fp, r5, lsl #18
    4da8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4dac:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    4db0:	08057508 	stmdaeq	r5, {r3, r8, sl, ip, sp, lr}
    4db4:	6709054c 	strvs	r0, [r9, -ip, asr #10]
    4db8:	01040200 	mrseq	r0, R12_usr
    4dbc:	10059e06 	andne	r9, r5, r6, lsl #28
    4dc0:	05750806 	ldrbeq	r0, [r5, #-2054]!	; 0xfffff7fa
    4dc4:	09054c0a 	stmdbeq	r5, {r1, r3, sl, fp, lr}
    4dc8:	4a080566 	bmi	206368 <__bss_end__+0xbd320>
    4dcc:	004b0905 	subeq	r0, fp, r5, lsl #18
    4dd0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4dd4:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    4dd8:	1205ad08 	andne	sl, r5, #8, 26	; 0x200
    4ddc:	4a0c054d 	bmi	306318 <__bss_end__+0x1bd2d0>
    4de0:	76080105 	strvc	r0, [r8], -r5, lsl #2
    4de4:	f1030a04 			; <UNDEFINED> instruction: 0xf1030a04
    4de8:	0c05667b 	stceq	6, cr6, [r5], {123}	; 0x7b
    4dec:	85270583 	strhi	r0, [r7, #-1411]!	; 0xfffffa7d
    4df0:	05470c05 	strbeq	r0, [r7, #-3077]	; 0xfffff3fb
    4df4:	0b048701 	bleq	126a00 <morecore_area+0xdda00>
    4df8:	05661803 	strbeq	r1, [r6, #-2051]!	; 0xfffff7fd
    4dfc:	1f05851c 	svcne	0x0005851c
    4e00:	66080566 	strvs	r0, [r8], -r6, ror #10
    4e04:	054d1205 	strbeq	r1, [sp, #-517]	; 0xfffffdfb
    4e08:	0805660f 	stmdaeq	r5, {r0, r1, r2, r3, r9, sl, sp, lr}
    4e0c:	680c052e 	stmdavs	ip, {r1, r2, r3, r5, r8, sl}
    4e10:	862f0105 	strthi	r0, [pc], -r5, lsl #2
    4e14:	05d71005 	ldrbeq	r1, [r7, #5]
    4e18:	1405840f 	strne	r8, [r5], #-1039	; 0xfffffbf1
    4e1c:	6608054d 	strvs	r0, [r8], -sp, asr #10
    4e20:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4e24:	054c0104 	strbeq	r0, [ip, #-260]	; 0xfffffefc
    4e28:	0b05310d 	bleq	151264 <__bss_end__+0x821c>
    4e2c:	2f0805f2 	svccs	0x000805f2
    4e30:	05691605 	strbeq	r1, [r9, #-1541]!	; 0xfffff9fb
    4e34:	0d052e10 	stceq	14, cr2, [r5, #-64]	; 0xffffffc0
    4e38:	84090568 	strhi	r0, [r9], #-1384	; 0xfffffa98
    4e3c:	e3080b05 	movw	r0, #35589	; 0x8b05
    4e40:	05450905 	strbeq	r0, [r5, #-2309]	; 0xfffff6fb
    4e44:	2e0f0308 	cdpcs	3, 0, cr0, cr15, cr8, {0}
    4e48:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4e4c:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    4e50:	02003005 	andeq	r3, r0, #5
    4e54:	66060204 	strvs	r0, [r6], -r4, lsl #4
    4e58:	02000c05 	andeq	r0, r0, #1280	; 0x500
    4e5c:	f4060104 	vst4.8	{d0,d2,d4,d6}, [r6], r4
    4e60:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    4e64:	6a2f0104 	bvs	bc527c <__bss_end__+0xa7c234>
    4e68:	05d71005 	ldrbeq	r1, [r7, #5]
    4e6c:	0b05870d 	bleq	166aa8 <__bss_end__+0x1da60>
    4e70:	2f0805f2 	svccs	0x000805f2
    4e74:	00670905 	rsbeq	r0, r7, r5, lsl #18
    4e78:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e7c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    4e80:	05740803 	ldrbeq	r0, [r4, #-2051]!	; 0xfffff7fd
    4e84:	05f5060d 	ldrbeq	r0, [r5, #1549]!	; 0x60d
    4e88:	132a0208 			; <UNDEFINED> instruction: 0x132a0208
    4e8c:	00670905 	rsbeq	r0, r7, r5, lsl #18
    4e90:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e94:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    4e98:	05740803 	ldrbeq	r0, [r4, #-2051]!	; 0xfffff7fd
    4e9c:	05f50616 	ldrbeq	r0, [r5, #1558]!	; 0x616
    4ea0:	0c052e10 	stceq	14, cr2, [r5], {16}
    4ea4:	2f010568 	svccs	0x00010568
    4ea8:	d716056a 	ldrle	r0, [r6, -sl, ror #10]
    4eac:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
    4eb0:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    4eb4:	10054a01 	andne	r4, r5, r1, lsl #20
    4eb8:	081d059f 	ldmdaeq	sp, {r0, r1, r2, r3, r4, r7, r8, sl}
    4ebc:	660f0521 	strvs	r0, [pc], -r1, lsr #10
    4ec0:	02003805 	andeq	r3, r0, #327680	; 0x50000
    4ec4:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    4ec8:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    4ecc:	10056601 	andne	r6, r5, r1, lsl #12
    4ed0:	0805054b 	stmdaeq	r5, {r0, r1, r3, r6, r8, sl}
    4ed4:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    4ed8:	01056701 	tsteq	r5, r1, lsl #14
    4edc:	12056d2f 	andne	r6, r5, #3008	; 0xbc0
    4ee0:	83090568 	movwhi	r0, #38248	; 0x9568
    4ee4:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
    4ee8:	089f4c09 	ldmeq	pc, {r0, r3, sl, fp, lr}	; <UNPREDICTABLE>
    4eec:	14056721 	strne	r6, [r5], #-1825	; 0xfffff8df
    4ef0:	0d052108 	stfeqs	f2, [r5, #-32]	; 0xffffffe0
    4ef4:	84010583 	strhi	r0, [r1], #-1411	; 0xfffffa7d
    4ef8:	05854b6a 	streq	r4, [r5, #2922]	; 0xb6a
    4efc:	16058309 	strne	r8, [r5], -r9, lsl #6
    4f00:	6608054b 	strvs	r0, [r8], -fp, asr #10
    4f04:	054b1005 	strbeq	r1, [fp, #-5]
    4f08:	08054c0b 	stmdaeq	r5, {r0, r1, r3, sl, fp, lr}
    4f0c:	67160567 	ldrvs	r0, [r6, -r7, ror #10]
    4f10:	05840c05 	streq	r0, [r4, #3077]	; 0xc05
    4f14:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    4f18:	16056709 	strne	r6, [r5], -r9, lsl #14
    4f1c:	6608054b 	strvs	r0, [r8], -fp, asr #10
    4f20:	054b1005 	strbeq	r1, [fp, #-5]
    4f24:	059f4c05 	ldreq	r4, [pc, #3077]	; 5b31 <errno+0x5b2d>
    4f28:	0c05a112 	stfeqd	f2, [r5], {18}
    4f2c:	05820c03 	streq	r0, [r2, #3075]	; 0xc03
    4f30:	056c2f01 	strbeq	r2, [ip, #-3841]!	; 0xfffff0ff
    4f34:	1605bb09 	strne	fp, [r5], -r9, lsl #22
    4f38:	6608054b 	strvs	r0, [r8], -fp, asr #10
    4f3c:	054b1005 	strbeq	r1, [fp, #-5]
    4f40:	08054c16 	stmdaeq	r5, {r1, r2, r4, sl, fp, lr}
    4f44:	4b090566 	blmi	2464e4 <__bss_end__+0xfd49c>
    4f48:	f71205d7 			; <UNDEFINED> instruction: 0xf71205d7
    4f4c:	10030c05 	andne	r0, r3, r5, lsl #24
    4f50:	2f010582 	svccs	0x00010582
    4f54:	67090569 	strvs	r0, [r9, -r9, ror #10]
    4f58:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
    4f5c:	053f0809 	ldreq	r0, [pc, #-2057]!	; 475b <errno+0x4757>
    4f60:	16053119 			; <UNDEFINED> instruction: 0x16053119
    4f64:	8309054d 	movwhi	r0, #38221	; 0x954d
    4f68:	67190567 	ldrvs	r0, [r9, -r7, ror #10]
    4f6c:	0d030905 	vstreq.16	s0, [r3, #-10]	; <UNPREDICTABLE>
    4f70:	0105304a 	tsteq	r5, sl, asr #32
    4f74:	16056d30 			; <UNDEFINED> instruction: 0x16056d30
    4f78:	66080583 	strvs	r0, [r8], -r3, lsl #11
    4f7c:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    4f80:	01053005 	tsteq	r5, r5
    4f84:	11056d4b 	tstne	r5, fp, asr #26
    4f88:	4a05059f 	bmi	14660c <morecore_area+0xfd60c>
    4f8c:	02001c05 	andeq	r1, r0, #1280	; 0x500
    4f90:	052f0304 	streq	r0, [pc, #-772]!	; 4c94 <errno+0x4c90>
    4f94:	04020009 	streq	r0, [r2], #-9
    4f98:	24058203 	strcs	r8, [r5], #-515	; 0xfffffdfd
    4f9c:	03040200 	movweq	r0, #16896	; 0x4200
    4fa0:	00050549 	andeq	r0, r5, r9, asr #10
    4fa4:	66010402 	strvs	r0, [r1], -r2, lsl #8
    4fa8:	05850c05 	streq	r0, [r5, #3077]	; 0xc05
    4fac:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    4fb0:	08054b16 	stmdaeq	r5, {r1, r2, r4, r8, r9, fp, lr}
    4fb4:	4b090566 	blmi	246554 <__bss_end__+0xfd50c>
    4fb8:	05300c05 	ldreq	r0, [r0, #-3077]!	; 0xfffff3fb
    4fbc:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    4fc0:	eb010100 	bl	453c8 <static_tls+0x13c8>
    4fc4:	0300000d 	movweq	r0, #13
    4fc8:	0007d200 	andeq	sp, r7, r0, lsl #4
    4fcc:	fb010200 	blx	457d6 <static_tls+0x17d6>
    4fd0:	01000d0e 	tsteq	r0, lr, lsl #26
    4fd4:	00010101 	andeq	r0, r1, r1, lsl #2
    4fd8:	00010000 	andeq	r0, r1, r0
    4fdc:	696c0100 	stmdbvs	ip!, {r8}^
    4fe0:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    4fe4:	6e692f34 	mcrvs	15, 3, r2, cr9, cr4, {1}
    4fe8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    4fec:	65732f65 	ldrbvs	r2, [r3, #-3941]!	; 0xfffff09b
    4ff0:	2f00346c 	svccs	0x0000346c
    4ff4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    4ff8:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4ffc:	6f647679 	svcvs	0x00647679
    5000:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    5004:	2f346c65 	svccs	0x00346c65
    5008:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    500c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    5010:	6169726f 	cmnvs	r9, pc, ror #4
    5014:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    5018:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    501c:	2f747365 	svccs	0x00747365
    5020:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    5024:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 4e98 <errno+0x4e94>
    5028:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    502c:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
    5030:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5034:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    5038:	00346c65 	eorseq	r6, r4, r5, ror #24
    503c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 4f88 <errno+0x4f84>
    5040:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    5044:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    5048:	2f676e6f 	svccs	0x00676e6f
    504c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5050:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5054:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    5058:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    505c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    5060:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    5064:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    5068:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    506c:	2f6c656e 	svccs	0x006c656e
    5070:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    5074:	2f346c65 	svccs	0x00346c65
    5078:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    507c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    5080:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    5084:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5088:	61612f65 	cmnvs	r1, r5, ror #30
    508c:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
    5090:	65732f32 	ldrbvs	r2, [r3, #-3890]!	; 0xfffff0ce
    5094:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    5098:	5f346c65 	svcpl	0x00346c65
    509c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    50a0:	6f682f00 	svcvs	0x00682f00
    50a4:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    50a8:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    50ac:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    50b0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    50b4:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    50b8:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    50bc:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    50c0:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    50c4:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    50c8:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    50cc:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    50d0:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    50d4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    50d8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    50dc:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    50e0:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    50e4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    50e8:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    50ec:	65732f6d 	ldrbvs	r2, [r3, #-3949]!	; 0xfffff093
    50f0:	612f346c 			; <UNDEFINED> instruction: 0x612f346c
    50f4:	00686372 	rsbeq	r6, r8, r2, ror r3
    50f8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    50fc:	2f346c65 	svccs	0x00346c65
    5100:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5104:	2f656475 	svccs	0x00656475
    5108:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    510c:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    5110:	2f007365 	svccs	0x00007365
    5114:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    5118:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    511c:	6f647679 	svcvs	0x00647679
    5120:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    5124:	2f346c65 	svccs	0x00346c65
    5128:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    512c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    5130:	6169726f 	cmnvs	r9, pc, ror #4
    5134:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    5138:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    513c:	2f747365 	svccs	0x00747365
    5140:	6a6f7270 	bvs	1be1b08 <__bss_end__+0x1a98ac0>
    5144:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    5148:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    514c:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    5150:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 4fd0 <errno+0x4fcc>
    5154:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    5158:	6973346c 	ldmdbvs	r3!, {r2, r3, r5, r6, sl, ip, sp}^
    515c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    5160:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5164:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5168:	6d69732f 	stclvs	3, cr7, [r9, #-188]!	; 0xffffff44
    516c:	00656c70 	rsbeq	r6, r5, r0, ror ip
    5170:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 50bc <errno+0x50b8>
    5174:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    5178:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    517c:	2f676e6f 	svccs	0x00676e6f
    5180:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5184:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5188:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    518c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    5190:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    5194:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    5198:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    519c:	6f72702f 	svcvs	0x0072702f
    51a0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    51a4:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    51a8:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    51ac:	2f736269 	svccs	0x00736269
    51b0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    51b4:	64346c65 	ldrtvs	r6, [r4], #-3173	; 0xfffff39b
    51b8:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
    51bc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    51c0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    51c4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    51c8:	62656434 	rsbvs	r6, r5, #52, 8	; 0x34000000
    51cc:	2f006775 	svccs	0x00006775
    51d0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    51d4:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    51d8:	6f647679 	svcvs	0x00647679
    51dc:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    51e0:	2f346c65 	svccs	0x00346c65
    51e4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    51e8:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    51ec:	6169726f 	cmnvs	r9, pc, ror #4
    51f0:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    51f4:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    51f8:	2f747365 	svccs	0x00747365
    51fc:	6a6f7270 	bvs	1be1bc4 <__bss_end__+0x1a98b7c>
    5200:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    5204:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    5208:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    520c:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 508c <errno+0x5088>
    5210:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    5214:	6b76346c 	blvs	1d923cc <__bss_end__+0x1c49384>
    5218:	6e692f61 	cdpvs	15, 6, cr2, cr9, cr1, {3}
    521c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5220:	6b762f65 	blvs	1d90fbc <__bss_end__+0x1c47f74>
    5224:	682f0061 	stmdavs	pc!, {r0, r5, r6}	; <UNPREDICTABLE>
    5228:	2f656d6f 	svccs	0x00656d6f
    522c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    5230:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    5234:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    5238:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    523c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    5240:	6f747574 	svcvs	0x00747574
    5244:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    5248:	616d2d73 	smcvs	53971	; 0xd2d3
    524c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    5250:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    5254:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    5258:	2f737463 	svccs	0x00737463
    525c:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    5260:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    5264:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    5268:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    526c:	616b7634 	cmnvs	fp, r4, lsr r6
    5270:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5274:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    5278:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    527c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5280:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    5284:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    5288:	762f3233 			; <UNDEFINED> instruction: 0x762f3233
    528c:	732f616b 			; <UNDEFINED> instruction: 0x732f616b
    5290:	5f346c65 	svcpl	0x00346c65
    5294:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    5298:	6f682f00 	svcvs	0x00682f00
    529c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    52a0:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    52a4:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    52a8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    52ac:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    52b0:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    52b4:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    52b8:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    52bc:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    52c0:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    52c4:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    52c8:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    52cc:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    52d0:	5f344c65 	svcpl	0x00344c65
    52d4:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    52d8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    52dc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    52e0:	2f616b76 	svccs	0x00616b76
    52e4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    52e8:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    52ec:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    52f0:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    52f4:	616b762f 	cmnvs	fp, pc, lsr #12
    52f8:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    52fc:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    5300:	2f656d6f 	svccs	0x00656d6f
    5304:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    5308:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    530c:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    5310:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    5314:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    5318:	6f747574 	svcvs	0x00747574
    531c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    5320:	616d2d73 	smcvs	53971	; 0xd2d3
    5324:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    5328:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    532c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    5330:	2f737463 	svccs	0x00737463
    5334:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    5338:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    533c:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    5340:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    5344:	70737634 	rsbsvc	r7, r3, r4, lsr r6
    5348:	2f656361 	svccs	0x00656361
    534c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5350:	2f656475 	svccs	0x00656475
    5354:	61707376 	cmnvs	r0, r6, ror r3
    5358:	2f006563 	svccs	0x00006563
    535c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    5360:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    5364:	6f647679 	svcvs	0x00647679
    5368:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    536c:	2f346c65 	svccs	0x00346c65
    5370:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5374:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    5378:	6169726f 	cmnvs	r9, pc, ror #4
    537c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    5380:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    5384:	2f747365 	svccs	0x00747365
    5388:	6a6f7270 	bvs	1be1d50 <__bss_end__+0x1a98d08>
    538c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    5390:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    5394:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    5398:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 5218 <errno+0x5214>
    539c:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    53a0:	6c70346c 	cfldrdvs	mvd3, [r0], #-432	; 0xfffffe50
    53a4:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    53a8:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    53ac:	72732f74 	rsbsvc	r2, r3, #116, 30	; 0x1d0
    53b0:	696c0063 	stmdbvs	ip!, {r0, r1, r5, r6}^
    53b4:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    53b8:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    53bc:	615f346c 	cmpvs	pc, ip, ror #8
    53c0:	5f686372 	svcpl	0x00686372
    53c4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    53c8:	2f656475 	svccs	0x00656475
    53cc:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    53d0:	2f323368 	svccs	0x00323368
    53d4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    53d8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    53dc:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    53e0:	6d006863 	stcvs	8, cr6, [r0, #-396]	; 0xfffffe74
    53e4:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    53e8:	2f636269 	svccs	0x00636269
    53ec:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    53f0:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    53f4:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    53f8:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    53fc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5400:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5404:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    5408:	756d0073 	strbvc	r0, [sp, #-115]!	; 0xffffff8d
    540c:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    5410:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    5414:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    5418:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    541c:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    5420:	2f656761 	svccs	0x00656761
    5424:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5428:	00656475 	rsbeq	r6, r5, r5, ror r4
    542c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 5378 <errno+0x5374>
    5430:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    5434:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    5438:	2f676e6f 	svccs	0x00676e6f
    543c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5440:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5444:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    5448:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    544c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    5450:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    5454:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    5458:	6f72702f 	svcvs	0x0072702f
    545c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    5460:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    5464:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    5468:	2f736269 	svccs	0x00736269
    546c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    5470:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    5474:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5478:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    547c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    5480:	2f00736c 	svccs	0x0000736c
    5484:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    5488:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    548c:	6f647679 	svcvs	0x00647679
    5490:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    5494:	2f346c65 	svccs	0x00346c65
    5498:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    549c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    54a0:	6169726f 	cmnvs	r9, pc, ror #4
    54a4:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    54a8:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    54ac:	2f747365 	svccs	0x00747365
    54b0:	6a6f7270 	bvs	1be1e78 <__bss_end__+0x1a98e30>
    54b4:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    54b8:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    54bc:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    54c0:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 5340 <errno+0x533c>
    54c4:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    54c8:	6973346c 	ldmdbvs	r3!, {r2, r3, r5, r6, sl, ip, sp}^
    54cc:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    54d0:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    54d4:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    54d8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    54dc:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    54e0:	69732f6d 	ldmdbvs	r3!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    54e4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    54e8:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    54ec:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    54f0:	2f656d6f 	svccs	0x00656d6f
    54f4:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    54f8:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    54fc:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    5500:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    5504:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    5508:	6f747574 	svcvs	0x00747574
    550c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    5510:	616d2d73 	smcvs	53971	; 0xd2d3
    5514:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    5518:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    551c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    5520:	2f737463 	svccs	0x00737463
    5524:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    5528:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    552c:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    5530:	616c7062 	cmnvs	ip, r2, rrx
    5534:	70757374 	rsbsvc	r7, r5, r4, ror r3
    5538:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    553c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5540:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5544:	616c702f 	cmnvs	ip, pc, lsr #32
    5548:	70757374 	rsbsvc	r7, r5, r4, ror r3
    554c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    5550:	6f682f00 	svcvs	0x00682f00
    5554:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    5558:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    555c:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    5560:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5564:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    5568:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    556c:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    5570:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    5574:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    5578:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    557c:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    5580:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    5584:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    5588:	5f344c65 	svcpl	0x00344c65
    558c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    5590:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5594:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5598:	61707376 	cmnvs	r0, r6, ror r3
    559c:	612f6563 			; <UNDEFINED> instruction: 0x612f6563
    55a0:	5f686372 	svcpl	0x00686372
    55a4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    55a8:	2f656475 	svccs	0x00656475
    55ac:	2f6d7261 	svccs	0x006d7261
    55b0:	61707376 	cmnvs	r0, r6, ror r3
    55b4:	612f6563 			; <UNDEFINED> instruction: 0x612f6563
    55b8:	00686372 	rsbeq	r6, r8, r2, ror r3
    55bc:	61687300 	cmnvs	r8, r0, lsl #6
    55c0:	5f646572 	svcpl	0x00646572
    55c4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    55c8:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
    55cc:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    55d0:	66000001 	strvs	r0, [r0], -r1
    55d4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    55d8:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    55dc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    55e0:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    55e4:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    55e8:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    55ec:	00000300 	andeq	r0, r0, r0, lsl #6
    55f0:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    55f4:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    55f8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    55fc:	65730000 	ldrbvs	r0, [r3, #-0]!
    5600:	635f346c 	cmpvs	pc, #108, 8	; 0x6c000000
    5604:	6e65696c 	vnmulvs.f16	s13, s10, s25	; <UNPREDICTABLE>
    5608:	00682e74 	rsbeq	r2, r8, r4, ror lr
    560c:	73000005 	movwvc	r0, #5
    5610:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    5614:	00682e65 	rsbeq	r2, r8, r5, ror #28
    5618:	64000006 	strvs	r0, [r0], #-6
    561c:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
    5620:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    5624:	6b760000 	blvs	1d8562c <__bss_end__+0x1c3c5e4>
    5628:	00682e61 	rsbeq	r2, r8, r1, ror #28
    562c:	6b000008 	blvs	5654 <errno+0x5650>
    5630:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    5634:	745f7463 	ldrbvc	r7, [pc], #-1123	; 563c <errno+0x5638>
    5638:	0900682e 	stmdbeq	r0, {r1, r2, r3, r5, fp, sp, lr}
    563c:	6f6b0000 	svcvs	0x006b0000
    5640:	63656a62 	cmnvs	r5, #401408	; 0x62000
    5644:	2e745f74 	mrccs	15, 3, r5, cr4, cr4, {3}
    5648:	000a0068 	andeq	r0, sl, r8, rrx
    564c:	626f6b00 	rsbvs	r6, pc, #0, 22
    5650:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    5654:	682e745f 	stmdavs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    5658:	00000800 	andeq	r0, r0, r0, lsl #16
    565c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    5660:	682e7463 	stmdavs	lr!, {r0, r1, r5, r6, sl, ip, sp, lr}
    5664:	00000800 	andeq	r0, r0, r0, lsl #16
    5668:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    566c:	0b00682e 	bleq	1f72c <__fwritex+0xac>
    5670:	73760000 	cmnvc	r6, #0
    5674:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    5678:	0b00682e 	bleq	1f738 <__fwritex+0xb8>
    567c:	65640000 	strbvs	r0, [r4, #-0]!
    5680:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    5684:	0c00632e 	stceq	3, cr6, [r0], {46}	; 0x2e
    5688:	69730000 	ldmdbvs	r3!, {}^	; <UNPREDICTABLE>
    568c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    5690:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    5694:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    5698:	00000200 	andeq	r0, r0, r0, lsl #4
    569c:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    56a0:	79747463 	ldmdbvc	r4!, {r0, r1, r5, r6, sl, ip, sp, lr}^
    56a4:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    56a8:	00000200 	andeq	r0, r0, r0, lsl #4
    56ac:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    56b0:	79747463 	ldmdbvc	r4!, {r0, r1, r5, r6, sl, ip, sp, lr}^
    56b4:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    56b8:	00000300 	andeq	r0, r0, r0, lsl #6
    56bc:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    56c0:	79747463 	ldmdbvc	r4!, {r0, r1, r5, r6, sl, ip, sp, lr}^
    56c4:	682e6570 	stmdavs	lr!, {r4, r5, r6, r8, sl, sp, lr}
    56c8:	00000400 	andeq	r0, r0, r0, lsl #8
    56cc:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    56d0:	2e6c6c61 	cdpcs	12, 6, cr6, cr12, cr1, {3}
    56d4:	00010068 	andeq	r0, r1, r8, rrx
    56d8:	72726500 	rsbsvc	r6, r2, #0, 10
    56dc:	2e73726f 	cdpcs	2, 7, cr7, cr3, cr15, {3}
    56e0:	00020068 	andeq	r0, r2, r8, rrx
    56e4:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
    56e8:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
    56ec:	682e7374 	stmdavs	lr!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    56f0:	00000200 	andeq	r0, r0, r0, lsl #4
    56f4:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    56f8:	745f6465 	ldrbvc	r6, [pc], #-1125	; 5700 <errno+0x56fc>
    56fc:	73657079 	cmnvc	r5, #121	; 0x79
    5700:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5704:	79740000 	ldmdbvc	r4!, {}^	; <UNPREDICTABLE>
    5708:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    570c:	00020068 	andeq	r0, r2, r8, rrx
    5710:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
    5714:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    5718:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    571c:	00010068 	andeq	r0, r1, r8, rrx
    5720:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
    5724:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    5728:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    572c:	000d0068 	andeq	r0, sp, r8, rrx
    5730:	6c6c6100 	stfvse	f6, [ip], #-0
    5734:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    5738:	00682e73 	rsbeq	r2, r8, r3, ror lr
    573c:	7300000e 	movwvc	r0, #14
    5740:	6f696474 	svcvs	0x00696474
    5744:	0f00682e 	svceq	0x0000682e
    5748:	667a0000 	ldrbtvs	r0, [sl], -r0
    574c:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    5750:	1000682e 	andne	r6, r0, lr, lsr #16
    5754:	73630000 	cmnvc	r3, #0
    5758:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    575c:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
    5760:	682e745f 	stmdavs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    5764:	00000800 	andeq	r0, r0, r0, lsl #16
    5768:	706d6973 	rsbvc	r6, sp, r3, ror r9
    576c:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
    5770:	00001100 	andeq	r1, r0, r0, lsl #2
    5774:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    5778:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    577c:	6900000f 	stmdbvs	r0, {r0, r1, r2, r3}
    5780:	682e7172 	stmdavs	lr!, {r1, r4, r5, r6, r8, ip, sp, lr}
    5784:	00001200 	andeq	r1, r0, r0, lsl #4
    5788:	73696e75 	cmnvc	r9, #1872	; 0x750
    578c:	682e6474 	stmdavs	lr!, {r2, r4, r5, r6, sl, sp, lr}
    5790:	00000f00 	andeq	r0, r0, r0, lsl #30
    5794:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    5798:	1300682e 	movwne	r6, #2094	; 0x82e
    579c:	05000000 	streq	r0, [r0, #-0]
    57a0:	05000184 	streq	r0, [r0, #-388]	; 0xfffffe7c
    57a4:	01656402 	cmneq	r5, r2, lsl #8
    57a8:	00fa0300 	rscseq	r0, sl, r0, lsl #6
    57ac:	da050501 	ble	146bb8 <morecore_area+0xfdbb8>
    57b0:	01040200 	mrseq	r0, R12_usr
    57b4:	f3068206 	vhsub.u8	d8, d6, d6
    57b8:	01040200 	mrseq	r0, R12_usr
    57bc:	f3068206 	vhsub.u8	d8, d6, d6
    57c0:	01040200 	mrseq	r0, R12_usr
    57c4:	f3068206 	vhsub.u8	d8, d6, d6
    57c8:	01040200 	mrseq	r0, R12_usr
    57cc:	27058206 	strcs	r8, [r5, -r6, lsl #4]
    57d0:	0905f506 	stmdbeq	r5, {r1, r2, r8, sl, ip, sp, lr, pc}
    57d4:	2f22054a 	svccs	0x0022054a
    57d8:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    57dc:	09052f21 	stmdbeq	r5, {r0, r5, r8, r9, sl, fp, sp}
    57e0:	2f220566 	svccs	0x00220566
    57e4:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    57e8:	0c052a1d 			; <UNDEFINED> instruction: 0x0c052a1d
    57ec:	2f010534 	svccs	0x00010534
    57f0:	b3036f05 	movwlt	r6, #16133	; 0x3f05
    57f4:	05056601 	streq	r6, [r5, #-1537]	; 0xfffff9ff
    57f8:	040200da 	streq	r0, [r2], #-218	; 0xffffff26
    57fc:	069e0601 	ldreq	r0, [lr], r1, lsl #12
    5800:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    5804:	06820601 	streq	r0, [r2], r1, lsl #12
    5808:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    580c:	06820601 	streq	r0, [r2], r1, lsl #12
    5810:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    5814:	05820601 	streq	r0, [r2, #1537]	; 0x601
    5818:	05f50609 	ldrbeq	r0, [r5, #1545]!	; 0x609
    581c:	09054b22 	stmdbeq	r5, {r1, r5, r8, r9, fp, lr}
    5820:	2f1e0566 	svccs	0x001e0566
    5824:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    5828:	09052f1c 	stmdbeq	r5, {r2, r3, r4, r8, r9, sl, fp, sp}
    582c:	2a1f054a 	bcs	7c6d5c <__bss_end__+0x67dd14>
    5830:	05340c05 	ldreq	r0, [r4, #-3077]!	; 0xfffff3fb
    5834:	41052f01 	tstmi	r5, r1, lsl #30
    5838:	05661203 	strbeq	r1, [r6, #-515]!	; 0xfffffdfd
    583c:	09058422 	stmdbeq	r5, {r1, r5, sl, pc}
    5840:	4f0c052e 	svcmi	0x000c052e
    5844:	052f0105 	streq	r0, [pc, #-261]!	; 5747 <errno+0x5743>
    5848:	00ed0342 	rsceq	r0, sp, r2, asr #6
    584c:	84220582 	strthi	r0, [r2], #-1410	; 0xfffffa7e
    5850:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    5854:	01054f0c 	tsteq	r5, ip, lsl #30
    5858:	0302042f 	movweq	r0, #9263	; 0x242f
    585c:	05827ccd 	streq	r7, [r2, #3277]	; 0xccd
    5860:	01054b0c 	tsteq	r5, ip, lsl #22
    5864:	05056e83 	streq	r6, [r5, #-3715]	; 0xfffff17d
    5868:	4a21059f 	bmi	846eec <__bss_end__+0x6fdea4>
    586c:	049f0105 	ldreq	r0, [pc], #261	; 5874 <errno+0x5870>
    5870:	00df0303 	sbcseq	r0, pc, r3, lsl #6
    5874:	d7180566 	ldrle	r0, [r8, -r6, ror #10]
    5878:	3129052f 			; <UNDEFINED> instruction: 0x3129052f
    587c:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    5880:	054b2f29 	strbeq	r2, [fp, #-3881]	; 0xfffff0d7
    5884:	29054a18 	stmdbcs	r5, {r3, r4, r9, fp, lr}
    5888:	4a18052f 	bmi	606d4c <__bss_end__+0x4bdd04>
    588c:	2f050532 	svccs	0x00050532
    5890:	05350f05 	ldreq	r0, [r5, #-3845]!	; 0xfffff0fb
    5894:	11056710 	tstne	r5, r0, lsl r7
    5898:	6767674b 	strbvs	r6, [r7, -fp, asr #14]!
    589c:	04670105 	strbteq	r0, [r7], #-261	; 0xfffffefb
    58a0:	820e0304 	andhi	r0, lr, #4, 6	; 0x10000000
    58a4:	4bd80f05 	blmi	ff6094c0 <__bss_end__+0xff4c0478>
    58a8:	08054b4b 	stmdaeq	r5, {r0, r1, r3, r6, r8, r9, fp, lr}
    58ac:	001d054d 	andseq	r0, sp, sp, asr #10
    58b0:	66010402 	strvs	r0, [r1], -r2, lsl #8
    58b4:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    58b8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    58bc:	0e054b10 	vmoveq.32	d5[0], r4
    58c0:	3008054a 	andcc	r0, r8, sl, asr #10
    58c4:	02001d05 	andeq	r1, r0, #320	; 0x140
    58c8:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    58cc:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    58d0:	10056601 	andne	r6, r5, r1, lsl #12
    58d4:	4a0e054b 	bmi	386e08 <__bss_end__+0x23ddc0>
    58d8:	05300805 	ldreq	r0, [r0, #-2053]!	; 0xfffff7fb
    58dc:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    58e0:	1a056601 	bne	15f0ec <__bss_end__+0x160a4>
    58e4:	01040200 	mrseq	r0, R12_usr
    58e8:	4b100566 	blmi	406e88 <__bss_end__+0x2bde40>
    58ec:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    58f0:	1d053008 	stcne	0, cr3, [r5, #-32]	; 0xffffffe0
    58f4:	01040200 	mrseq	r0, R12_usr
    58f8:	001a0566 	andseq	r0, sl, r6, ror #10
    58fc:	66010402 	strvs	r0, [r1], -r2, lsl #8
    5900:	054b1005 	strbeq	r1, [fp, #-5]
    5904:	05054a0e 	streq	r4, [r5, #-2574]	; 0xfffff5f2
    5908:	02080531 	andeq	r0, r8, #205520896	; 0xc400000
    590c:	0e051524 	cfsh32eq	mvfx1, mvfx5, #20
    5910:	68080567 	stmdavs	r8, {r0, r1, r2, r5, r6, r8, sl}
    5914:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    5918:	0e056808 	cdpeq	8, 0, cr6, cr5, cr8, {0}
    591c:	68080567 	stmdavs	r8, {r0, r1, r2, r5, r6, r8, sl}
    5920:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    5924:	0105690c 	tsteq	r5, ip, lsl #18
    5928:	038a032f 	orreq	r0, sl, #-1140850688	; 0xbc000000
    592c:	830f0566 	movwhi	r0, #62822	; 0xf566
    5930:	4b4b4b4b 	blmi	12d8664 <__bss_end__+0x118f61c>
    5934:	054c0505 	strbeq	r0, [ip, #-1285]	; 0xfffffafb
    5938:	1322020c 			; <UNDEFINED> instruction: 0x1322020c
    593c:	042f0105 	strteq	r0, [pc], #-261	; 5944 <errno+0x5940>
    5940:	19d60305 	ldmibne	r6, {r0, r2, r8, r9}^
    5944:	d81b0566 	ldmdale	fp, {r1, r2, r5, r6, r8, sl}
    5948:	05de0605 	ldrbeq	r0, [lr, #1541]	; 0x605
    594c:	06054b0f 	streq	r4, [r5], -pc, lsl #22
    5950:	054b2f2e 	strbeq	r2, [fp, #-3886]	; 0xfffff0d2
    5954:	18054d0f 	stmdane	r5, {r0, r1, r2, r3, r8, sl, fp, lr}
    5958:	05057608 	streq	r7, [r5, #-1544]	; 0xfffff9f8
    595c:	67030569 	strvs	r0, [r3, -r9, ror #10]
    5960:	05838383 	streq	r8, [r3, #899]	; 0x383
    5964:	01058a09 	tsteq	r5, r9, lsl #20
    5968:	0306042f 	movweq	r0, #25647	; 0x642f
    596c:	056663be 	strbeq	r6, [r6, #-958]!	; 0xfffffc42
    5970:	0905f308 	stmdbeq	r5, {r3, r8, r9, ip, sp, lr, pc}
    5974:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5978:	059e0601 	ldreq	r0, [lr, #1537]	; 0x601
    597c:	75080610 	strvc	r0, [r8, #-1552]	; 0xfffff9f0
    5980:	054c1d05 	strbeq	r1, [ip, #-3333]	; 0xfffff2fb
    5984:	09054a08 	stmdbeq	r5, {r3, r9, fp, lr}
    5988:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    598c:	059e0601 	ldreq	r0, [lr, #1537]	; 0x601
    5990:	c9080610 	stmdbgt	r8, {r4, r9, sl}
    5994:	054c1f05 	strbeq	r1, [ip, #-3845]	; 0xfffff0fb
    5998:	53054a0c 	movwpl	r4, #23052	; 0x5a0c
    599c:	2e0c0582 	cfsh32cs	mvfx0, mvfx12, #-62
    59a0:	04bb0105 	ldrteq	r0, [fp], #261	; 0x105
    59a4:	7de40307 	stclvc	3, cr0, [r4, #28]!
    59a8:	8412059e 	ldrhi	r0, [r2], #-1438	; 0xfffffa62
    59ac:	05660f05 	strbeq	r0, [r6, #-3845]!	; 0xfffff0fb
    59b0:	08048601 	stmdaeq	r4, {r0, r9, sl, pc}
    59b4:	6600e903 	strvs	lr, [r0], -r3, lsl #18
    59b8:	059f0805 	ldreq	r0, [pc, #2053]	; 61c5 <errno+0x61c1>
    59bc:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    59c0:	9e060104 	adflss	f0, f6, f4
    59c4:	08061005 	stmdaeq	r6, {r0, r2, ip}
    59c8:	4d080575 	cfstr32mi	mvfx0, [r8, #-468]	; 0xfffffe2c
    59cc:	00670905 	rsbeq	r0, r7, r5, lsl #18
    59d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    59d4:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    59d8:	0d057508 	cfstr32eq	mvfx7, [r5, #-32]	; 0xffffffe0
    59dc:	4a08054d 	bmi	206f18 <__bss_end__+0xbded0>
    59e0:	004b0905 	subeq	r0, fp, r5, lsl #18
    59e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    59e8:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    59ec:	0f057508 	svceq	0x00057508
    59f0:	4a0c054d 	bmi	306f2c <__bss_end__+0x1bdee4>
    59f4:	69bb0105 	ldmibvs	fp!, {r0, r2, r8}
    59f8:	05bc0805 	ldreq	r0, [ip, #2053]!	; 0x805
    59fc:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    5a00:	9e060104 	adflss	f0, f6, f4
    5a04:	03040200 	movweq	r0, #16896	; 0x4200
    5a08:	08057408 	stmdaeq	r5, {r3, sl, ip, sp, lr}
    5a0c:	0905f506 	stmdbeq	r5, {r1, r2, r8, sl, ip, sp, lr, pc}
    5a10:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5a14:	009e0601 	addseq	r0, lr, r1, lsl #12
    5a18:	08030402 	stmdaeq	r3, {r1, sl}
    5a1c:	060d0574 			; <UNDEFINED> instruction: 0x060d0574
    5a20:	4a0805f5 	bmi	2071fc <__bss_end__+0xbe1b4>
    5a24:	004b0905 	subeq	r0, fp, r5, lsl #18
    5a28:	06010402 	streq	r0, [r1], -r2, lsl #8
    5a2c:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    5a30:	05740803 	ldrbeq	r0, [r4, #-2051]!	; 0xfffff7fd
    5a34:	05f50608 	ldrbeq	r0, [r5, #1544]!	; 0x608
    5a38:	01054a05 	tsteq	r5, r5, lsl #20
    5a3c:	6612039f 			; <UNDEFINED> instruction: 0x6612039f
    5a40:	05a00905 	streq	r0, [r0, #2309]!	; 0x905
    5a44:	09056608 	stmdbeq	r5, {r3, r9, sl, sp, lr}
    5a48:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    5a4c:	009e0601 	addseq	r0, lr, r1, lsl #12
    5a50:	08030402 	stmdaeq	r3, {r1, sl}
    5a54:	060d0574 			; <UNDEFINED> instruction: 0x060d0574
    5a58:	4a0805f7 	bmi	20723c <__bss_end__+0xbe1f4>
    5a5c:	004b0905 	subeq	r0, fp, r5, lsl #18
    5a60:	06010402 	streq	r0, [r1], -r2, lsl #8
    5a64:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    5a68:	75080601 	strvc	r0, [r8, #-1537]	; 0xfffff9ff
    5a6c:	05310805 	ldreq	r0, [r1, #-2053]!	; 0xfffff7fb
    5a70:	09054a05 	stmdbeq	r5, {r0, r2, r9, fp, lr}
    5a74:	320105b7 	andcc	r0, r1, #767557632	; 0x2dc00000
    5a78:	054a1e03 	strbeq	r1, [sl, #-3587]	; 0xfffff1fd
    5a7c:	0905d708 	stmdbeq	r5, {r3, r8, r9, sl, ip, lr, pc}
    5a80:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5a84:	059e0601 	ldreq	r0, [lr, #1537]	; 0x601
    5a88:	75080610 	strvc	r0, [r8, #-1552]	; 0xfffff9f0
    5a8c:	054d0805 	strbeq	r0, [sp, #-2053]	; 0xfffff7fb
    5a90:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    5a94:	9e060104 	adflss	f0, f6, f4
    5a98:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5a9c:	4d0d0575 	cfstr32mi	mvfx0, [sp, #-468]	; 0xfffffe2c
    5aa0:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    5aa4:	02004b09 	andeq	r4, r0, #9216	; 0x2400
    5aa8:	9e060104 	adflss	f0, f6, f4
    5aac:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5ab0:	4d0f0575 	cfstr32mi	mvfx0, [pc, #-468]	; 58e4 <errno+0x58e0>
    5ab4:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    5ab8:	6a590801 	bvs	1647ac4 <__bss_end__+0x14fea7c>
    5abc:	05d70805 	ldrbeq	r0, [r7, #2053]	; 0x805
    5ac0:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    5ac4:	9e060104 	adflss	f0, f6, f4
    5ac8:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5acc:	4c080575 	cfstr32mi	mvfx0, [r8], {117}	; 0x75
    5ad0:	00670905 	rsbeq	r0, r7, r5, lsl #18
    5ad4:	06010402 	streq	r0, [r1], -r2, lsl #8
    5ad8:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    5adc:	0d057508 	cfstr32eq	mvfx7, [r5, #-32]	; 0xffffffe0
    5ae0:	4a08054c 	bmi	207018 <__bss_end__+0xbdfd0>
    5ae4:	004b0905 	subeq	r0, fp, r5, lsl #18
    5ae8:	06010402 	streq	r0, [r1], -r2, lsl #8
    5aec:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    5af0:	0f057508 	svceq	0x00057508
    5af4:	4a0c054d 	bmi	307030 <__bss_end__+0x1bdfe8>
    5af8:	59080105 	stmdbpl	r8, {r0, r2, r8}
    5afc:	d7080569 	strle	r0, [r8, -r9, ror #10]
    5b00:	00670905 	rsbeq	r0, r7, r5, lsl #18
    5b04:	06010402 	streq	r0, [r1], -r2, lsl #8
    5b08:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    5b0c:	75080601 	strvc	r0, [r8, #-1537]	; 0xfffff9ff
    5b10:	05310d05 	ldreq	r0, [r1, #-3333]!	; 0xfffff2fb
    5b14:	09054a08 	stmdbeq	r5, {r3, r9, fp, lr}
    5b18:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
    5b1c:	009e0601 	addseq	r0, lr, r1, lsl #12
    5b20:	08030402 	stmdaeq	r3, {r1, sl}
    5b24:	06080574 			; <UNDEFINED> instruction: 0x06080574
    5b28:	4a0505f8 	bmi	147310 <morecore_area+0xfe310>
    5b2c:	75030905 	strvc	r0, [r3, #-2309]	; 0xfffff6fb
    5b30:	030105d6 	movweq	r0, #5590	; 0x15d6
    5b34:	09042e0c 	stmdbeq	r4, {r2, r3, r9, sl, fp, sp}
    5b38:	4a7e8e03 	bmi	1fa934c <__bss_end__+0x1e60304>
    5b3c:	059f0505 	ldreq	r0, [pc, #1285]	; 6049 <errno+0x6045>
    5b40:	14056809 	strne	r6, [r5], #-2057	; 0xfffff7f7
    5b44:	054c4cd8 	strbeq	r4, [ip, #-3288]	; 0xfffff328
    5b48:	02004e09 	andeq	r4, r0, #9, 28	; 0x90
    5b4c:	9e060104 	adflss	f0, f6, f4
    5b50:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5b54:	30010575 	andcc	r0, r1, r5, ror r5
    5b58:	6e030a04 	vmlavs.f32	s0, s6, s8
    5b5c:	9f050566 	svcls	0x00050566
    5b60:	76081005 	strvc	r1, [r8], -r5
    5b64:	4d09054c 	cfstr32mi	mvfx0, [r9, #-304]	; 0xfffffed0
    5b68:	4cd81405 	cfldrdmi	mvd1, [r8], {5}
    5b6c:	a110054c 	tstge	r0, ip, asr #10
    5b70:	04840105 	streq	r0, [r4], #261	; 0x105
    5b74:	660e030b 	strvs	r0, [lr], -fp, lsl #6
    5b78:	e8081005 	stmda	r8, {r0, r2, ip}
    5b7c:	4c4c4c4c 	mcrrmi	12, 4, r4, ip, cr12
    5b80:	4a0c034c 	bmi	3068b8 <__bss_end__+0x1bd870>
    5b84:	04840105 	streq	r0, [r4], #261	; 0x105
    5b88:	7fbb030c 	svcvc	0x00bb030c
    5b8c:	d7090566 	strle	r0, [r9, -r6, ror #10]
    5b90:	054b0805 	strbeq	r0, [fp, #-2053]	; 0xfffff7fb
    5b94:	09056716 	stmdbeq	r5, {r1, r2, r4, r8, r9, sl, sp, lr}
    5b98:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5b9c:	009e0601 	addseq	r0, lr, r1, lsl #12
    5ba0:	06010402 	streq	r0, [r1], -r2, lsl #8
    5ba4:	0d05ad08 	stceq	13, cr10, [r5, #-32]	; 0xffffffe0
    5ba8:	9f090531 	svcls	0x00090531
    5bac:	059e0805 	ldreq	r0, [lr, #2053]	; 0x805
    5bb0:	09054b16 	stmdbeq	r5, {r1, r2, r4, r8, r9, fp, lr}
    5bb4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5bb8:	009e0601 	addseq	r0, lr, r1, lsl #12
    5bbc:	06010402 	streq	r0, [r1], -r2, lsl #8
    5bc0:	0505ad08 	streq	sl, [r5, #-3336]	; 0xfffff2f8
    5bc4:	bc080532 	cfstr32lt	mvfx0, [r8], {50}	; 0x32
    5bc8:	05671105 	strbeq	r1, [r7, #-261]!	; 0xfffffefb
    5bcc:	0559080d 	ldrbeq	r0, [r9, #-2061]	; 0xfffff7f3
    5bd0:	0d059e0c 	stceq	14, cr9, [r5, #-48]	; 0xffffffd0
    5bd4:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    5bd8:	009e0601 	addseq	r0, lr, r1, lsl #12
    5bdc:	06010402 	streq	r0, [r1], -r2, lsl #8
    5be0:	05142402 	ldreq	r2, [r4, #-1026]	; 0xfffffbfe
    5be4:	0d053111 	stfeqs	f3, [r5, #-68]	; 0xffffffbc
    5be8:	0c055908 			; <UNDEFINED> instruction: 0x0c055908
    5bec:	4b0d059e 	blmi	34726c <__bss_end__+0x1fe224>
    5bf0:	01040200 	mrseq	r0, R12_usr
    5bf4:	02009e06 	andeq	r9, r0, #6, 28	; 0x60
    5bf8:	02060104 	andeq	r0, r6, #4, 2
    5bfc:	12051428 	andne	r1, r5, #40, 8	; 0x28000000
    5c00:	67170532 			; <UNDEFINED> instruction: 0x67170532
    5c04:	05670c05 	strbeq	r0, [r7, #-3077]!	; 0xfffff3fb
    5c08:	4a610309 	bmi	1846834 <__bss_end__+0x16fd7ec>
    5c0c:	030d0551 	movweq	r0, #54609	; 0xd551
    5c10:	05514a0b 	ldrbeq	r4, [r1, #-2571]	; 0xfffff5f5
    5c14:	2e09030f 	cdpcs	3, 0, cr0, cr9, cr15, {0}
    5c18:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    5c1c:	05054b09 	streq	r4, [r5, #-2825]	; 0xfffff4f7
    5c20:	830c05a1 	movwhi	r0, #50593	; 0xc5a1
    5c24:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    5c28:	6a2f0104 	bvs	bc6040 <__bss_end__+0xa7cff8>
    5c2c:	05d70c05 	ldrbeq	r0, [r7, #3077]	; 0xc05
    5c30:	033d0801 	teqeq	sp, #65536	; 0x10000
    5c34:	05056610 	streq	r6, [r5, #-1552]	; 0xfffff9f0
    5c38:	bc0d05a0 	cfstr32lt	mvfx0, [sp], {160}	; 0xa0
    5c3c:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    5c40:	02004b09 	andeq	r4, r0, #9216	; 0x2400
    5c44:	9e060104 	adflss	f0, f6, f4
    5c48:	08060505 	stmdaeq	r6, {r0, r2, r8, sl}
    5c4c:	4a330595 	bmi	cc72a8 <__bss_end__+0xb7e260>
    5c50:	682e0505 	stmdavs	lr!, {r0, r2, r8, sl}
    5c54:	0309059f 	movweq	r0, #38303	; 0x959f
    5c58:	05200879 	streq	r0, [r0, #-2169]!	; 0xfffff787
    5c5c:	e1033601 	tst	r3, r1, lsl #12
    5c60:	0c054a00 			; <UNDEFINED> instruction: 0x0c054a00
    5c64:	080105d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl}
    5c68:	030d045a 	movweq	r0, #54362	; 0xd45a
    5c6c:	05667eba 	strbeq	r7, [r6, #-3770]!	; 0xfffff146
    5c70:	0505830e 	streq	r8, [r5, #-782]	; 0xfffffcf2
    5c74:	300c054a 	andcc	r0, ip, sl, asr #10
    5c78:	00670d05 	rsbeq	r0, r7, r5, lsl #26
    5c7c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5c80:	29055808 	stmdbcs	r5, {r3, fp, ip, lr}
    5c84:	0c05f406 	cfstrseq	mvf15, [r5], {6}
    5c88:	67140582 	ldrvs	r0, [r4, -r2, lsl #11]
    5c8c:	02005205 	andeq	r5, r0, #1342177280	; 0x50000000
    5c90:	7a030204 	bvc	c64a8 <morecore_area+0x7d4a8>
    5c94:	0005054a 	andeq	r0, r5, sl, asr #10
    5c98:	66010402 	strvs	r0, [r1], -r2, lsl #8
    5c9c:	02004c05 	andeq	r4, r0, #1280	; 0x500
    5ca0:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
    5ca4:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    5ca8:	0c058203 	sfmeq	f0, 1, [r5], {3}
    5cac:	05660a03 	strbeq	r0, [r6, #-2563]!	; 0xfffff5fd
    5cb0:	0e042f01 	cdpeq	15, 0, cr2, cr4, cr1, {0}
    5cb4:	66048903 	strvs	r8, [r4], -r3, lsl #18
    5cb8:	05d70805 	ldrbeq	r0, [r7, #2053]	; 0x805
    5cbc:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    5cc0:	9e060104 	adflss	f0, f6, f4
    5cc4:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5cc8:	4c0f0575 	cfstr32mi	mvfx0, [pc], {117}	; 0x75
    5ccc:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    5cd0:	02004b09 	andeq	r4, r0, #9216	; 0x2400
    5cd4:	9e060104 	adflss	f0, f6, f4
    5cd8:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5cdc:	4c080575 	cfstr32mi	mvfx0, [r8], {117}	; 0x75
    5ce0:	00670905 	rsbeq	r0, r7, r5, lsl #18
    5ce4:	06010402 	streq	r0, [r1], -r2, lsl #8
    5ce8:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    5cec:	0a057508 	beq	163114 <__bss_end__+0x1a0cc>
    5cf0:	6609054c 	strvs	r0, [r9], -ip, asr #10
    5cf4:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    5cf8:	02004b09 	andeq	r4, r0, #9216	; 0x2400
    5cfc:	9e060104 	adflss	f0, f6, f4
    5d00:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5d04:	4d1205ad 	cfldr32mi	mvfx0, [r2, #-692]	; 0xfffffd4c
    5d08:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    5d0c:	04760801 	ldrbteq	r0, [r6], #-2049	; 0xfffff7ff
    5d10:	7bd4030f 	blvc	ff506954 <__bss_end__+0xff3bd90c>
    5d14:	da110566 	ble	4472b4 <__bss_end__+0x2fe26c>
    5d18:	059f0805 	ldreq	r0, [pc, #2053]	; 6525 <errno+0x6521>
    5d1c:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    5d20:	9e060104 	adflss	f0, f6, f4
    5d24:	08061005 	stmdaeq	r6, {r0, r2, ip}
    5d28:	4d050575 	cfstr32mi	mvfx0, [r5, #-468]	; 0xfffffe2c
    5d2c:	0402009f 	streq	r0, [r2], #-159	; 0xffffff61
    5d30:	05820602 	streq	r0, [r2, #1538]	; 0x602
    5d34:	0402000c 	streq	r0, [r2], #-12
    5d38:	05f30601 	ldrbeq	r0, [r3, #1537]!	; 0x601
    5d3c:	04020008 	streq	r0, [r2], #-8
    5d40:	38054a01 	stmdacc	r5, {r0, r9, fp, lr}
    5d44:	4a11054b 	bmi	447278 <__bss_end__+0x2fe230>
    5d48:	74080f05 	strvc	r0, [r8], #-3845	; 0xfffff0fb
    5d4c:	054c1105 	strbeq	r1, [ip, #-261]	; 0xfffffefb
    5d50:	0905d908 	stmdbeq	r5, {r3, r8, fp, ip, lr, pc}
    5d54:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    5d58:	069e0601 	ldreq	r0, [lr], r1, lsl #12
    5d5c:	0c057508 	cfstr32eq	mvfx7, [r5], {8}
    5d60:	00010584 	andeq	r0, r1, r4, lsl #11
    5d64:	2f010402 	svccs	0x00010402
    5d68:	d8110569 	ldmdale	r1, {r0, r3, r5, r6, r8, sl}
    5d6c:	05bb0805 	ldreq	r0, [fp, #2053]!	; 0x805
    5d70:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    5d74:	9e060104 	adflss	f0, f6, f4
    5d78:	08060c05 	stmdaeq	r6, {r0, r2, sl, fp}
    5d7c:	2f0105af 	svccs	0x000105af
    5d80:	d80d0569 	stmdale	sp, {r0, r3, r5, r6, r8, sl}
    5d84:	05ba0b05 	ldreq	r0, [sl, #2821]!	; 0xb05
    5d88:	10052f08 	andne	r2, r5, r8, lsl #30
    5d8c:	4c130567 	cfldr32mi	mvfx0, [r3], {103}	; 0x67
    5d90:	052e3a05 	streq	r3, [lr, #-2565]!	; 0xfffff5fb
    5d94:	08054a13 	stmdaeq	r5, {r0, r1, r4, r9, fp, lr}
    5d98:	05132402 	ldreq	r2, [r3, #-1026]	; 0xfffffbfe
    5d9c:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    5da0:	9e060104 	adflss	f0, f6, f4
    5da4:	05ad0806 	streq	r0, [sp, #2054]!	; 0x806
    5da8:	0105680c 	tsteq	r5, ip, lsl #16
    5dac:	0006022f 	andeq	r0, r6, pc, lsr #4
    5db0:	078f0101 	streq	r0, [pc, r1, lsl #2]
    5db4:	00030000 	andeq	r0, r3, r0
    5db8:	00000688 	andeq	r0, r0, r8, lsl #13
    5dbc:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    5dc0:	0101000d 	tsteq	r1, sp
    5dc4:	00000101 	andeq	r0, r0, r1, lsl #2
    5dc8:	00000100 	andeq	r0, r0, r0, lsl #2
    5dcc:	6f682f01 	svcvs	0x00682f01
    5dd0:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    5dd4:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    5dd8:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    5ddc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5de0:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    5de4:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    5de8:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    5dec:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    5df0:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    5df4:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    5df8:	656b2f74 	strbvs	r2, [fp, #-3956]!	; 0xfffff08c
    5dfc:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    5e00:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5e04:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5e08:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5e0c:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    5e10:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    5e14:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5e18:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    5e1c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    5e20:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    5e24:	2f346c65 	svccs	0x00346c65
    5e28:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5e2c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    5e30:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
    5e34:	2f656d6f 	svccs	0x00656d6f
    5e38:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    5e3c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    5e40:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    5e44:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    5e48:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    5e4c:	6f747574 	svcvs	0x00747574
    5e50:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    5e54:	616d2d73 	smcvs	53971	; 0xd2d3
    5e58:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    5e5c:	6b2f7473 	blvs	be3030 <__bss_end__+0xa99fe8>
    5e60:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    5e64:	696c2f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    5e68:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    5e6c:	72612f34 	rsbvc	r2, r1, #52, 30	; 0xd0
    5e70:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    5e74:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5e78:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    5e7c:	732f6d72 			; <UNDEFINED> instruction: 0x732f6d72
    5e80:	2f346c65 	svccs	0x00346c65
    5e84:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    5e88:	6f682f00 	svcvs	0x00682f00
    5e8c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    5e90:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    5e94:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    5e98:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5e9c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    5ea0:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    5ea4:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    5ea8:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    5eac:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    5eb0:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    5eb4:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    5eb8:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    5ebc:	752f7374 	strvc	r7, [pc, #-884]!	; 5b50 <errno+0x5b4c>
    5ec0:	5f6c6974 	svcpl	0x006c6974
    5ec4:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    5ec8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5ecc:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    5ed0:	70707573 	rsbsvc	r7, r0, r3, ror r5
    5ed4:	2f74726f 	svccs	0x0074726f
    5ed8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5edc:	2f656475 	svccs	0x00656475
    5ee0:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    5ee4:	70707573 	rsbsvc	r7, r0, r3, ror r5
    5ee8:	0074726f 	rsbseq	r7, r4, pc, ror #4
    5eec:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 5e38 <errno+0x5e34>
    5ef0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    5ef4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    5ef8:	2f676e6f 	svccs	0x00676e6f
    5efc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5f00:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5f04:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    5f08:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    5f0c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    5f10:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    5f14:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    5f18:	6f72702f 	svcvs	0x0072702f
    5f1c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    5f20:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    5f24:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    5f28:	2f736269 	svccs	0x00736269
    5f2c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    5f30:	70346c65 	eorsvc	r6, r4, r5, ror #24
    5f34:	7374616c 	cmnvc	r4, #108, 2
    5f38:	6f707075 	svcvs	0x00707075
    5f3c:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    5f40:	2f006372 	svccs	0x00006372
    5f44:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    5f48:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    5f4c:	6f647679 	svcvs	0x00647679
    5f50:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    5f54:	2f346c65 	svccs	0x00346c65
    5f58:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5f5c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    5f60:	6169726f 	cmnvs	r9, pc, ror #4
    5f64:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    5f68:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    5f6c:	2f747365 	svccs	0x00747365
    5f70:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    5f74:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 5de8 <errno+0x5de4>
    5f78:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    5f7c:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
    5f80:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5f84:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    5f88:	00346c65 	eorseq	r6, r4, r5, ror #24
    5f8c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    5f90:	2f346c65 	svccs	0x00346c65
    5f94:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5f98:	2f656475 	svccs	0x00656475
    5f9c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5fa0:	62696c00 	rsbvs	r6, r9, #0, 24
    5fa4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5fa8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    5fac:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    5fb0:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    5fb4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    5fb8:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    5fbc:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    5fc0:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
    5fc4:	2f346c65 	svccs	0x00346c65
    5fc8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    5fcc:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    5fd0:	756d0068 	strbvc	r0, [sp, #-104]!	; 0xffffff98
    5fd4:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    5fd8:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    5fdc:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    5fe0:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    5fe4:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    5fe8:	2f656761 	svccs	0x00656761
    5fec:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5ff0:	2f656475 	svccs	0x00656475
    5ff4:	73746962 	cmnvc	r4, #1605632	; 0x188000
    5ff8:	73756d00 	cmnvc	r5, #0, 26
    5ffc:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    6000:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    6004:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    6008:	706d6574 	rsbvc	r6, sp, r4, ror r5
    600c:	6174732f 	cmnvs	r4, pc, lsr #6
    6010:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    6014:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6018:	2f006564 	svccs	0x00006564
    601c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    6020:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    6024:	6f647679 	svcvs	0x00647679
    6028:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    602c:	2f346c65 	svccs	0x00346c65
    6030:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6034:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    6038:	6169726f 	cmnvs	r9, pc, ror #4
    603c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    6040:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    6044:	2f747365 	svccs	0x00747365
    6048:	6a6f7270 	bvs	1be2a10 <__bss_end__+0x1a999c8>
    604c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    6050:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    6054:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    6058:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 5ed8 <errno+0x5ed4>
    605c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    6060:	2f736c69 	svccs	0x00736c69
    6064:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6068:	2f656475 	svccs	0x00656475
    606c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    6070:	682f0073 	stmdavs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
    6074:	2f656d6f 	svccs	0x00656d6f
    6078:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    607c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    6080:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    6084:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    6088:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    608c:	6f747574 	svcvs	0x00747574
    6090:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    6094:	616d2d73 	smcvs	53971	; 0xd2d3
    6098:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    609c:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    60a0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    60a4:	2f737463 	svccs	0x00737463
    60a8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    60ac:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    60b0:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    60b4:	616c7062 	cmnvs	ip, r2, rrx
    60b8:	70757374 	rsbsvc	r7, r5, r4, ror r3
    60bc:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    60c0:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    60c4:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    60c8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    60cc:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    60d0:	6c702f6d 	ldclvs	15, cr2, [r0], #-436	; 0xfffffe4c
    60d4:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    60d8:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    60dc:	682f0074 	stmdavs	pc!, {r2, r4, r5, r6}	; <UNPREDICTABLE>
    60e0:	2f656d6f 	svccs	0x00656d6f
    60e4:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    60e8:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    60ec:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    60f0:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    60f4:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    60f8:	6f747574 	svcvs	0x00747574
    60fc:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    6100:	616d2d73 	smcvs	53971	; 0xd2d3
    6104:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    6108:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    610c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    6110:	2f737463 	svccs	0x00737463
    6114:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    6118:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    611c:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    6120:	616c7062 	cmnvs	ip, r2, rrx
    6124:	70757374 	rsbsvc	r7, r5, r4, ror r3
    6128:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    612c:	616c702f 	cmnvs	ip, pc, lsr #32
    6130:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    6134:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6138:	797a2f65 	ldmdbvc	sl!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    613c:	3037716e 	eorscc	r7, r7, lr, ror #2
    6140:	702f3030 	eorvc	r3, pc, r0, lsr r0	; <UNPREDICTABLE>
    6144:	7374616c 	cmnvc	r4, #108, 2
    6148:	6f707075 	svcvs	0x00707075
    614c:	702f7472 	eorvc	r7, pc, r2, ror r4	; <UNPREDICTABLE>
    6150:	0074616c 	rsbseq	r6, r4, ip, ror #2
    6154:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 60a0 <errno+0x609c>
    6158:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    615c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    6160:	2f676e6f 	svccs	0x00676e6f
    6164:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6168:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    616c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    6170:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    6174:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    6178:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    617c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    6180:	6f72702f 	svcvs	0x0072702f
    6184:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    6188:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    618c:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    6190:	2f736269 	svccs	0x00736269
    6194:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    6198:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
    619c:	732f616b 			; <UNDEFINED> instruction: 0x732f616b
    61a0:	5f346c65 	svcpl	0x00346c65
    61a4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    61a8:	636e695f 	cmnvs	lr, #1556480	; 0x17c000
    61ac:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    61b0:	7261612f 	rsbvc	r6, r1, #-1073741813	; 0xc000000b
    61b4:	32336863 	eorscc	r6, r3, #6488064	; 0x630000
    61b8:	616b762f 	cmnvs	fp, pc, lsr #12
    61bc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    61c0:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    61c4:	2f006863 	svccs	0x00006863
    61c8:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    61cc:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    61d0:	6f647679 	svcvs	0x00647679
    61d4:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    61d8:	2f346c65 	svccs	0x00346c65
    61dc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    61e0:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    61e4:	6169726f 	cmnvs	r9, pc, ror #4
    61e8:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    61ec:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    61f0:	2f747365 	svccs	0x00747365
    61f4:	6a6f7270 	bvs	1be2bbc <__bss_end__+0x1a99b74>
    61f8:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    61fc:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    6200:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    6204:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 6084 <errno+0x6080>
    6208:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    620c:	6b76346c 	blvs	1d933c4 <__bss_end__+0x1c4a37c>
    6210:	72612f61 	rsbvc	r2, r1, #388	; 0x184
    6214:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    6218:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    621c:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    6220:	762f6d72 			; <UNDEFINED> instruction: 0x762f6d72
    6224:	612f616b 			; <UNDEFINED> instruction: 0x612f616b
    6228:	00686372 	rsbeq	r6, r8, r2, ror r3
    622c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 6178 <errno+0x6174>
    6230:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    6234:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    6238:	2f676e6f 	svccs	0x00676e6f
    623c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6240:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6244:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    6248:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    624c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    6250:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6254:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    6258:	6f72702f 	svcvs	0x0072702f
    625c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    6260:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    6264:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    6268:	2f736269 	svccs	0x00736269
    626c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    6270:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
    6274:	692f616b 	stmdbvs	pc!, {r0, r1, r3, r5, r6, r8, sp, lr}	; <UNPREDICTABLE>
    6278:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    627c:	762f6564 	strtvc	r6, [pc], -r4, ror #10
    6280:	0000616b 	andeq	r6, r0, fp, ror #2
    6284:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    6288:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    628c:	0100682e 	tsteq	r0, lr, lsr #16
    6290:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    6294:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    6298:	682e736c 	stmdavs	lr!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}
    629c:	00000200 	andeq	r0, r0, r0, lsl #4
    62a0:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    62a4:	2e766564 	cdpcs	5, 7, cr6, cr6, cr4, {3}
    62a8:	00030068 	andeq	r0, r3, r8, rrx
    62ac:	72657300 	rsbvc	r7, r5, #0, 6
    62b0:	2e6c6169 	powcsez	f6, f4, #1.0
    62b4:	00040063 	andeq	r0, r4, r3, rrx
    62b8:	6d697300 	stclvs	3, cr7, [r9, #-0]
    62bc:	5f656c70 	svcpl	0x00656c70
    62c0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    62c4:	00682e73 	rsbeq	r2, r8, r3, ror lr
    62c8:	6f000005 	svcvs	0x00000005
    62cc:	63656a62 	cmnvs	r5, #401408	; 0x62000
    62d0:	70797474 	rsbsvc	r7, r9, r4, ror r4
    62d4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    62d8:	6f000005 	svcvs	0x00000005
    62dc:	63656a62 	cmnvs	r5, #401408	; 0x62000
    62e0:	70797474 	rsbsvc	r7, r9, r4, ror r4
    62e4:	00682e65 	rsbeq	r2, r8, r5, ror #28
    62e8:	63000001 	movwvs	r0, #1
    62ec:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    62f0:	73746e61 	cmnvc	r4, #1552	; 0x610
    62f4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    62f8:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    62fc:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    6300:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    6304:	675f7365 	ldrbvs	r7, [pc, -r5, ror #6]
    6308:	682e6e65 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
    630c:	00000600 	andeq	r0, r0, r0, lsl #12
    6310:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    6314:	745f6465 	ldrbvc	r6, [pc], #-1125	; 631c <errno+0x6318>
    6318:	73657079 	cmnvc	r5, #121	; 0x79
    631c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6320:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    6324:	61636f76 	smcvs	14070	; 0x36f6
    6328:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    632c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    6330:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    6334:	61636f76 	smcvs	14070	; 0x36f6
    6338:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    633c:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    6340:	6c610000 	stclvs	0, cr0, [r1], #-0
    6344:	7079746c 	rsbsvc	r7, r9, ip, ror #8
    6348:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    634c:	00000800 	andeq	r0, r0, r0, lsl #16
    6350:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    6354:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    6358:	00682e73 	rsbeq	r2, r8, r3, ror lr
    635c:	73000005 	movwvc	r0, #5
    6360:	6f696474 	svcvs	0x00696474
    6364:	0900682e 	stmdbeq	r0, {r1, r2, r3, r5, fp, sp, lr}
    6368:	72660000 	rsbvc	r0, r6, #0
    636c:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    6370:	2e79636e 	cdpcs	3, 7, cr6, cr9, cr14, {3}
    6374:	000a0068 	andeq	r0, sl, r8, rrx
    6378:	5f667a00 	svcpl	0x00667a00
    637c:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
    6380:	000a0068 	andeq	r0, sl, r8, rrx
    6384:	72726500 	rsbsvc	r6, r2, #0, 10
    6388:	682e6f6e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    638c:	00000900 	andeq	r0, r0, r0, lsl #18
    6390:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    6394:	00000300 	andeq	r0, r0, r0, lsl #6
    6398:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    639c:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    63a0:	6300000b 	movwvs	r0, #11
    63a4:	6b636f6c 	blvs	18e215c <__bss_end__+0x1799114>
    63a8:	0c00682e 	stceq	8, cr6, [r0], {46}	; 0x2e
    63ac:	6e750000 	cdpvs	0, 7, cr0, cr5, cr0, {0}
    63b0:	64747369 	ldrbtvs	r7, [r4], #-873	; 0xfffffc97
    63b4:	0900682e 	stmdbeq	r0, {r1, r2, r3, r5, fp, sp, lr}
    63b8:	756d0000 	strbvc	r0, [sp, #-0]!
    63bc:	00682e78 	rsbeq	r2, r8, r8, ror lr
    63c0:	6900000b 	stmdbvs	r0, {r0, r1, r3}
    63c4:	682e7172 	stmdavs	lr!, {r1, r4, r5, r6, r8, ip, sp, lr}
    63c8:	00000300 	andeq	r0, r0, r0, lsl #6
    63cc:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    63d0:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    63d4:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    63d8:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    63dc:	00030068 	andeq	r0, r3, r8, rrx
    63e0:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    63e4:	61667265 	cmnvs	r6, r5, ror #4
    63e8:	725f6563 	subsvc	r6, pc, #415236096	; 0x18c00000
    63ec:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    63f0:	74617274 	strbtvc	r7, [r1], #-628	; 0xfffffd8c
    63f4:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    63f8:	00030068 	andeq	r0, r3, r8, rrx
    63fc:	72657300 	rsbvc	r7, r5, #0, 6
    6400:	2e6c6169 	powcsez	f6, f4, #1.0
    6404:	000c0068 	andeq	r0, ip, r8, rrx
    6408:	626f6b00 	rsbvs	r6, pc, #0, 22
    640c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    6410:	682e745f 	stmdavs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    6414:	00000d00 	andeq	r0, r0, r0, lsl #26
    6418:	6a626f6b 	bvs	18a21cc <__bss_end__+0x1759184>
    641c:	5f746365 	svcpl	0x00746365
    6420:	00682e74 	rsbeq	r2, r8, r4, ror lr
    6424:	6b00000e 	blvs	6464 <errno+0x6460>
    6428:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    642c:	745f7463 	ldrbvc	r7, [pc], #-1123	; 6434 <errno+0x6430>
    6430:	0f00682e 	svceq	0x0000682e
    6434:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    6438:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    643c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    6440:	00000006 	andeq	r0, r0, r6
    6444:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6448:	0181fc02 	orreq	pc, r1, r2, lsl #24
    644c:	01940300 	orrseq	r0, r4, r0, lsl #6
    6450:	d7180501 	ldrle	r0, [r8, -r1, lsl #10]
    6454:	3129052f 			; <UNDEFINED> instruction: 0x3129052f
    6458:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    645c:	054b2f29 	strbeq	r2, [fp, #-3881]	; 0xfffff0d7
    6460:	29054a18 	stmdbcs	r5, {r3, r4, r9, fp, lr}
    6464:	4a18052f 	bmi	607928 <__bss_end__+0x4be8e0>
    6468:	2f050532 	svccs	0x00050532
    646c:	05350f05 	ldreq	r0, [r5, #-3845]!	; 0xfffff0fb
    6470:	11056710 	tstne	r5, r0, lsl r7
    6474:	6767674b 	strbvs	r6, [r7, -fp, asr #14]!
    6478:	04670105 	strbteq	r0, [r7], #-261	; 0xfffffefb
    647c:	03910302 	orrseq	r0, r1, #134217728	; 0x8000000
    6480:	9f0f0582 	svcls	0x000f0582
    6484:	4b4b4b4b 	blmi	12d91b8 <__bss_end__+0x1190170>
    6488:	4c05054b 	cfstr32mi	mvfx0, [r5], {75}	; 0x4b
    648c:	22020105 	andcs	r0, r2, #1073741825	; 0x40000001
    6490:	03030413 	movweq	r0, #13331	; 0x3413
    6494:	05667c9d 	strbeq	r7, [r6, #-3229]!	; 0xfffff363
    6498:	0402000e 	streq	r0, [r2], #-14
    649c:	1005a101 	andne	sl, r5, r1, lsl #2
    64a0:	01040200 	mrseq	r0, R12_usr
    64a4:	000f0567 	andeq	r0, pc, r7, ror #10
    64a8:	4a010402 	bmi	474b8 <static_tls+0x34b8>
    64ac:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    64b0:	05f30104 	ldrbeq	r0, [r3, #260]!	; 0x104
    64b4:	058a6701 	streq	r6, [sl, #1793]	; 0x701
    64b8:	0b05850c 	bleq	1678f0 <__bss_end__+0x1e8a8>
    64bc:	f31e054a 	vrshl.u16	q0, q5, q7
    64c0:	01040200 	mrseq	r0, R12_usr
    64c4:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    64c8:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    64cc:	042f0601 	strteq	r0, [pc], #-1537	; 64d4 <errno+0x64d0>
    64d0:	7f970304 	svcvc	0x00970304
    64d4:	d80c0566 	stmdale	ip, {r1, r2, r5, r6, r8, sl}
    64d8:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    64dc:	05054b0f 	streq	r4, [r5, #-2831]	; 0xfffff4f1
    64e0:	0020054a 	eoreq	r0, r0, sl, asr #10
    64e4:	2f030402 	svccs	0x00030402
    64e8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    64ec:	05660304 	strbeq	r0, [r6, #-772]!	; 0xfffffcfc
    64f0:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    64f4:	05056503 	streq	r6, [r5, #-1283]	; 0xfffffafd
    64f8:	01040200 	mrseq	r0, R12_usr
    64fc:	890c0566 	stmdbhi	ip, {r1, r2, r5, r6, r8, sl}
    6500:	6e2f0105 	sufvse	f0, f7, f5
    6504:	05830d05 	streq	r0, [r3, #3333]	; 0xd05
    6508:	05858301 	streq	r8, [r5, #769]	; 0x301
    650c:	08058409 	stmdaeq	r5, {r0, r3, sl, pc}
    6510:	4d1b05ba 	cfldr32mi	mvfx0, [fp, #-744]	; 0xfffffd18
    6514:	05681805 	strbeq	r1, [r8, #-2053]!	; 0xfffff7fb
    6518:	1005d711 	andne	sp, r5, r1, lsl r7
    651c:	01054c9f 			; <UNDEFINED> instruction: 0x01054c9f
    6520:	01040200 	mrseq	r0, R12_usr
    6524:	09056930 	stmdbeq	r5, {r4, r5, r8, fp, sp, lr}
    6528:	66080583 	strvs	r0, [r8], -r3, lsl #11
    652c:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    6530:	0569bc01 	strbeq	fp, [r9, #-3073]!	; 0xfffff3ff
    6534:	08054b09 	stmdaeq	r5, {r0, r3, r8, r9, fp, lr}
    6538:	4b100566 	blmi	407ad8 <__bss_end__+0x2bea90>
    653c:	300105d8 	ldrdcc	r0, [r1], -r8
    6540:	01000402 	tsteq	r0, r2, lsl #8
    6544:	00067701 	andeq	r7, r6, r1, lsl #14
    6548:	c4000300 	strgt	r0, [r0], #-768	; 0xfffffd00
    654c:	02000005 	andeq	r0, r0, #5
    6550:	0d0efb01 	vstreq	d15, [lr, #-4]
    6554:	01010100 	mrseq	r0, (UNDEF: 17)
    6558:	00000001 	andeq	r0, r0, r1
    655c:	01000001 	tsteq	r0, r1
    6560:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 64ac <errno+0x64a8>
    6564:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    6568:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    656c:	2f676e6f 	svccs	0x00676e6f
    6570:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6574:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6578:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    657c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    6580:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    6584:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6588:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    658c:	6f72702f 	svcvs	0x0072702f
    6590:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    6594:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    6598:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    659c:	2f736269 	svccs	0x00736269
    65a0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    65a4:	73346c65 	teqvc	r4, #25856	; 0x6500
    65a8:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    65ac:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    65b0:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    65b4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    65b8:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    65bc:	732f6d72 			; <UNDEFINED> instruction: 0x732f6d72
    65c0:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    65c4:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    65c8:	2f006863 	svccs	0x00006863
    65cc:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    65d0:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    65d4:	6f647679 	svcvs	0x00647679
    65d8:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    65dc:	2f346c65 	svccs	0x00346c65
    65e0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    65e4:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    65e8:	6169726f 	cmnvs	r9, pc, ror #4
    65ec:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    65f0:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    65f4:	2f747365 	svccs	0x00747365
    65f8:	6a6f7270 	bvs	1be2fc0 <__bss_end__+0x1a99f78>
    65fc:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    6600:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    6604:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    6608:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 6488 <errno+0x6484>
    660c:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    6610:	6c70346c 	cfldrdvs	mvd3, [r0], #-432	; 0xfffffe50
    6614:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    6618:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    661c:	72732f74 	rsbsvc	r2, r3, #116, 30	; 0x1d0
    6620:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    6624:	612f6863 			; <UNDEFINED> instruction: 0x612f6863
    6628:	2f006d72 	svccs	0x00006d72
    662c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    6630:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    6634:	6f647679 	svcvs	0x00647679
    6638:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    663c:	2f346c65 	svccs	0x00346c65
    6640:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6644:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    6648:	6169726f 	cmnvs	r9, pc, ror #4
    664c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    6650:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    6654:	2f747365 	svccs	0x00747365
    6658:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    665c:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 64d0 <errno+0x64cc>
    6660:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    6664:	692f346c 	stmdbvs	pc!, {r2, r3, r5, r6, sl, ip, sp}	; <UNPREDICTABLE>
    6668:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    666c:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    6670:	00346c65 	eorseq	r6, r4, r5, ror #24
    6674:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 65c0 <errno+0x65bc>
    6678:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    667c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    6680:	2f676e6f 	svccs	0x00676e6f
    6684:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6688:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    668c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    6690:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    6694:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    6698:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    669c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    66a0:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    66a4:	2f6c656e 	svccs	0x006c656e
    66a8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    66ac:	2f346c65 	svccs	0x00346c65
    66b0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    66b4:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    66b8:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    66bc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    66c0:	61612f65 	cmnvs	r1, r5, ror #30
    66c4:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
    66c8:	65732f32 	ldrbvs	r2, [r3, #-3890]!	; 0xfffff0ce
    66cc:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    66d0:	5f346c65 	svcpl	0x00346c65
    66d4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    66d8:	62696c00 	rsbvs	r6, r9, #0, 24
    66dc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    66e0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    66e4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    66e8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    66ec:	696c0034 	stmdbvs	ip!, {r2, r4, r5}^
    66f0:	6c657362 	stclvs	3, cr7, [r5], #-392	; 0xfffffe78
    66f4:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    66f8:	615f346c 	cmpvs	pc, ip, ror #8
    66fc:	5f686372 	svcpl	0x00686372
    6700:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6704:	2f656475 	svccs	0x00656475
    6708:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    670c:	2f323368 	svccs	0x00323368
    6710:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6714:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6718:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    671c:	6d006863 	stcvs	8, cr6, [r0, #-396]	; 0xfffffe74
    6720:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    6724:	2f636269 	svccs	0x00636269
    6728:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    672c:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    6730:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    6734:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    6738:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    673c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6740:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    6744:	756d0073 	strbvc	r0, [sp, #-115]!	; 0xffffff8d
    6748:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    674c:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    6750:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    6754:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    6758:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    675c:	2f656761 	svccs	0x00656761
    6760:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6764:	00656475 	rsbeq	r6, r5, r5, ror r4
    6768:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 66b4 <errno+0x66b0>
    676c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    6770:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    6774:	2f676e6f 	svccs	0x00676e6f
    6778:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    677c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6780:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    6784:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    6788:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    678c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6790:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    6794:	6f72702f 	svcvs	0x0072702f
    6798:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    679c:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    67a0:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    67a4:	2f736269 	svccs	0x00736269
    67a8:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    67ac:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    67b0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    67b4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    67b8:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    67bc:	2f00736c 	svccs	0x0000736c
    67c0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    67c4:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    67c8:	6f647679 	svcvs	0x00647679
    67cc:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    67d0:	2f346c65 	svccs	0x00346c65
    67d4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    67d8:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    67dc:	6169726f 	cmnvs	r9, pc, ror #4
    67e0:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    67e4:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    67e8:	2f747365 	svccs	0x00747365
    67ec:	6a6f7270 	bvs	1be31b4 <__bss_end__+0x1a9a16c>
    67f0:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    67f4:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    67f8:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    67fc:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 667c <errno+0x6678>
    6800:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    6804:	6b76346c 	blvs	1d939bc <__bss_end__+0x1c4a974>
    6808:	6e692f61 	cdpvs	15, 6, cr2, cr9, cr1, {3}
    680c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6810:	6b762f65 	blvs	1d925ac <__bss_end__+0x1c49564>
    6814:	682f0061 	stmdavs	pc!, {r0, r5, r6}	; <UNPREDICTABLE>
    6818:	2f656d6f 	svccs	0x00656d6f
    681c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    6820:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    6824:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    6828:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    682c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    6830:	6f747574 	svcvs	0x00747574
    6834:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    6838:	616d2d73 	smcvs	53971	; 0xd2d3
    683c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    6840:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    6844:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    6848:	2f737463 	svccs	0x00737463
    684c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    6850:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    6854:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    6858:	616c7062 	cmnvs	ip, r2, rrx
    685c:	70757374 	rsbsvc	r7, r5, r4, ror r3
    6860:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    6864:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    6868:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    686c:	616c702f 	cmnvs	ip, pc, lsr #32
    6870:	70757374 	rsbsvc	r7, r5, r4, ror r3
    6874:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    6878:	6f682f00 	svcvs	0x00682f00
    687c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    6880:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    6884:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    6888:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    688c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    6890:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    6894:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    6898:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    689c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    68a0:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    68a4:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    68a8:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    68ac:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    68b0:	5f344c65 	svcpl	0x00344c65
    68b4:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    68b8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    68bc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    68c0:	2f616b76 	svccs	0x00616b76
    68c4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    68c8:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    68cc:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    68d0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    68d4:	61612f65 	cmnvs	r1, r5, ror #30
    68d8:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
    68dc:	6b762f32 	blvs	1d925ac <__bss_end__+0x1c49564>
    68e0:	65732f61 	ldrbvs	r2, [r3, #-3937]!	; 0xfffff09f
    68e4:	615f346c 	cmpvs	pc, ip, ror #8
    68e8:	00686372 	rsbeq	r6, r8, r2, ror r3
    68ec:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 6838 <errno+0x6834>
    68f0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    68f4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    68f8:	2f676e6f 	svccs	0x00676e6f
    68fc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6900:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6904:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    6908:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    690c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    6910:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6914:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    6918:	6f72702f 	svcvs	0x0072702f
    691c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    6920:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    6924:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    6928:	2f736269 	svccs	0x00736269
    692c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    6930:	76346c65 	ldrtvc	r6, [r4], -r5, ror #24
    6934:	612f616b 			; <UNDEFINED> instruction: 0x612f616b
    6938:	5f686372 	svcpl	0x00686372
    693c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6940:	2f656475 	svccs	0x00656475
    6944:	2f6d7261 	svccs	0x006d7261
    6948:	2f616b76 	svccs	0x00616b76
    694c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    6950:	6f682f00 	svcvs	0x00682f00
    6954:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    6958:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    695c:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    6960:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6964:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    6968:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    696c:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    6970:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    6974:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    6978:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    697c:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    6980:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    6984:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    6988:	5f344c65 	svcpl	0x00344c65
    698c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    6990:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    6994:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6998:	61707376 	cmnvs	r0, r6, ror r3
    699c:	612f6563 			; <UNDEFINED> instruction: 0x612f6563
    69a0:	5f686372 	svcpl	0x00686372
    69a4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    69a8:	2f656475 	svccs	0x00656475
    69ac:	2f6d7261 	svccs	0x006d7261
    69b0:	61707376 	cmnvs	r0, r6, ror r3
    69b4:	612f6563 			; <UNDEFINED> instruction: 0x612f6563
    69b8:	00686372 	rsbeq	r6, r8, r2, ror r3
    69bc:	6d697300 	stclvs	3, cr7, [r9, #-0]
    69c0:	2e656c70 	mcrcs	12, 3, r6, cr5, cr0, {3}
    69c4:	00010068 	andeq	r0, r1, r8, rrx
    69c8:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
    69cc:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
    69d0:	00020063 	andeq	r0, r2, r3, rrx
    69d4:	6d697300 	stclvs	3, cr7, [r9, #-0]
    69d8:	5f656c70 	svcpl	0x00656c70
    69dc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    69e0:	00682e73 	rsbeq	r2, r8, r3, ror lr
    69e4:	6f000003 	svcvs	0x00000003
    69e8:	63656a62 	cmnvs	r5, #401408	; 0x62000
    69ec:	70797474 	rsbsvc	r7, r9, r4, ror r4
    69f0:	00682e65 	rsbeq	r2, r8, r5, ror #28
    69f4:	6f000003 	svcvs	0x00000003
    69f8:	63656a62 	cmnvs	r5, #401408	; 0x62000
    69fc:	70797474 	rsbsvc	r7, r9, r4, ror r4
    6a00:	00682e65 	rsbeq	r2, r8, r5, ror #28
    6a04:	65000004 	strvs	r0, [r0, #-4]
    6a08:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    6a0c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    6a10:	63000003 	movwvs	r0, #3
    6a14:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    6a18:	73746e61 	cmnvc	r4, #1552	; 0x610
    6a1c:	0300682e 	movweq	r6, #2094	; 0x82e
    6a20:	68730000 	ldmdavs	r3!, {}^	; <UNPREDICTABLE>
    6a24:	64657261 	strbtvs	r7, [r5], #-609	; 0xfffffd9f
    6a28:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    6a2c:	675f7365 	ldrbvs	r7, [pc, -r5, ror #6]
    6a30:	682e6e65 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
    6a34:	00000500 	andeq	r0, r0, r0, lsl #10
    6a38:	72616873 	rsbvc	r6, r1, #7536640	; 0x730000
    6a3c:	745f6465 	ldrbvc	r6, [pc], #-1125	; 6a44 <errno+0x6a40>
    6a40:	73657079 	cmnvc	r5, #121	; 0x79
    6a44:	0300682e 	movweq	r6, #2094	; 0x82e
    6a48:	79740000 	ldmdbvc	r4!, {}^	; <UNPREDICTABLE>
    6a4c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    6a50:	00030068 	andeq	r0, r3, r8, rrx
    6a54:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
    6a58:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    6a5c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    6a60:	00050068 	andeq	r0, r5, r8, rrx
    6a64:	766e6900 	strbtvc	r6, [lr], -r0, lsl #18
    6a68:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    6a6c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    6a70:	00060068 	andeq	r0, r6, r8, rrx
    6a74:	6c6c6100 	stfvse	f6, [ip], #-0
    6a78:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    6a7c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    6a80:	66000007 	strvs	r0, [r0], -r7
    6a84:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
    6a88:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    6a8c:	0300682e 	movweq	r6, #2094	; 0x82e
    6a90:	74730000 	ldrbtvc	r0, [r3], #-0
    6a94:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    6a98:	00080068 	andeq	r0, r8, r8, rrx
    6a9c:	5f667a00 	svcpl	0x00667a00
    6aa0:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
    6aa4:	00090068 	andeq	r0, r9, r8, rrx
    6aa8:	70736300 	rsbsvc	r6, r3, r0, lsl #6
    6aac:	70656361 	rsbvc	r6, r5, r1, ror #6
    6ab0:	5f687461 	svcpl	0x00687461
    6ab4:	00682e74 	rsbeq	r2, r8, r4, ror lr
    6ab8:	6500000a 	strvs	r0, [r0, #-10]
    6abc:	6f6e7272 	svcvs	0x006e7272
    6ac0:	0800682e 	stmdaeq	r0, {r1, r2, r3, r5, fp, sp, lr}
    6ac4:	72690000 	rsbvc	r0, r9, #0
    6ac8:	00682e71 	rsbeq	r2, r8, r1, ror lr
    6acc:	7500000b 	strvc	r0, [r0, #-11]
    6ad0:	7473696e 	ldrbtvc	r6, [r3], #-2414	; 0xfffff692
    6ad4:	00682e64 	rsbeq	r2, r8, r4, ror #28
    6ad8:	6b000008 	blvs	6b00 <errno+0x6afc>
    6adc:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    6ae0:	745f7463 	ldrbvc	r7, [pc], #-1123	; 6ae8 <errno+0x6ae4>
    6ae4:	0c00682e 	stceq	8, cr6, [r0], {46}	; 0x2e
    6ae8:	6f6b0000 	svcvs	0x006b0000
    6aec:	63656a62 	cmnvs	r5, #401408	; 0x62000
    6af0:	2e745f74 	mrccs	15, 3, r5, cr4, cr4, {3}
    6af4:	000d0068 	andeq	r0, sp, r8, rrx
    6af8:	626f6b00 	rsbvs	r6, pc, #0, 22
    6afc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    6b00:	682e745f 	stmdavs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    6b04:	00000a00 	andeq	r0, r0, r0, lsl #20
    6b08:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    6b0c:	0e00682e 	cdpeq	8, 0, cr6, cr0, cr14, {1}
    6b10:	05000000 	streq	r0, [r0, #-0]
    6b14:	02050001 	andeq	r0, r5, #1
    6b18:	000185b8 			; <UNDEFINED> instruction: 0x000185b8
    6b1c:	0100ca03 	tsteq	r0, r3, lsl #20
    6b20:	05f30805 	ldrbeq	r0, [r3, #2053]!	; 0x805
    6b24:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    6b28:	9e060104 	adflss	f0, f6, f4
    6b2c:	08061005 	stmdaeq	r6, {r0, r2, ip}
    6b30:	08054c75 	stmdaeq	r5, {r0, r2, r4, r5, r6, sl, fp, lr}
    6b34:	4b09054a 	blmi	248064 <__bss_end__+0xff01c>
    6b38:	01040200 	mrseq	r0, R12_usr
    6b3c:	10059e06 	andne	r9, r5, r6, lsl #28
    6b40:	05750806 	ldrbeq	r0, [r5, #-2054]!	; 0xfffff7fa
    6b44:	0c054d12 	stceq	13, cr4, [r5], {18}
    6b48:	825b054a 	subshi	r0, fp, #310378496	; 0x12800000
    6b4c:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    6b50:	a2210801 	eorge	r0, r1, #65536	; 0x10000
    6b54:	05d70805 	ldrbeq	r0, [r7, #2053]	; 0x805
    6b58:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    6b5c:	9e060104 	adflss	f0, f6, f4
    6b60:	08061005 	stmdaeq	r6, {r0, r2, ip}
    6b64:	08054c75 	stmdaeq	r5, {r0, r2, r4, r5, r6, sl, fp, lr}
    6b68:	4b09054a 	blmi	248098 <__bss_end__+0xff050>
    6b6c:	01040200 	mrseq	r0, R12_usr
    6b70:	10059e06 	andne	r9, r5, r6, lsl #28
    6b74:	05750806 	ldrbeq	r0, [r5, #-2054]!	; 0xfffff7fa
    6b78:	0c054d12 	stceq	13, cr4, [r5], {18}
    6b7c:	825e054a 	subshi	r0, lr, #310378496	; 0x12800000
    6b80:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    6b84:	04210801 	strteq	r0, [r1], #-2049	; 0xfffff7ff
    6b88:	7fa60302 	svcvc	0x00a60302
    6b8c:	bb100566 	bllt	40812c <__bss_end__+0x2bf0e4>
    6b90:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    6b94:	5a05a045 	bpl	16ecb0 <__bss_end__+0x25c68>
    6b98:	4a10054a 	bmi	4080c8 <__bss_end__+0x2bf080>
    6b9c:	ae084505 	cfsh32ge	mvfx4, mvfx8, #5
    6ba0:	054a5605 	strbeq	r5, [sl, #-1541]	; 0xfffff9fb
    6ba4:	10054a68 	andne	r4, r5, r8, ror #20
    6ba8:	0809054a 	stmdaeq	r9, {r1, r3, r6, r8, sl}
    6bac:	040200ae 	streq	r0, [r2], #-174	; 0xffffff52
    6bb0:	059e0601 	ldreq	r0, [lr, #1537]	; 0x601
    6bb4:	75080610 	strvc	r0, [r8, #-1552]	; 0xfffff9f0
    6bb8:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    6bbc:	01010006 	tsteq	r1, r6
    6bc0:	00000405 	andeq	r0, r0, r5, lsl #8
    6bc4:	03970003 	orrseq	r0, r7, #3
    6bc8:	01020000 	mrseq	r0, (UNDEF: 2)
    6bcc:	000d0efb 	strdeq	r0, [sp], -fp
    6bd0:	01010101 	tsteq	r1, r1, lsl #2
    6bd4:	01000000 	mrseq	r0, (UNDEF: 0)
    6bd8:	2f010000 	svccs	0x00010000
    6bdc:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    6be0:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    6be4:	6f647679 	svcvs	0x00647679
    6be8:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    6bec:	2f346c65 	svccs	0x00346c65
    6bf0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6bf4:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    6bf8:	6169726f 	cmnvs	r9, pc, ror #4
    6bfc:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    6c00:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    6c04:	2f747365 	svccs	0x00747365
    6c08:	6a6f7270 	bvs	1be35d0 <__bss_end__+0x1a9a588>
    6c0c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    6c10:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    6c14:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    6c18:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 6a98 <errno+0x6a94>
    6c1c:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    6c20:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    6c24:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    6c28:	72732f74 	rsbsvc	r2, r3, #116, 30	; 0x1d0
    6c2c:	616d2f63 	cmnvs	sp, r3, ror #30
    6c30:	7a2f6863 	bvc	be0dc4 <__bss_end__+0xa97d7c>
    6c34:	00716e79 	rsbseq	r6, r1, r9, ror lr
    6c38:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    6c3c:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    6c40:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    6c44:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    6c48:	2f706d65 	svccs	0x00706d65
    6c4c:	67617473 			; <UNDEFINED> instruction: 0x67617473
    6c50:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    6c54:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6c58:	69622f65 	stmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    6c5c:	6d007374 	stcvs	3, cr7, [r0, #-464]	; 0xfffffe30
    6c60:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    6c64:	2f636269 	svccs	0x00636269
    6c68:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    6c6c:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    6c70:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    6c74:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    6c78:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    6c7c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6c80:	6f682f00 	svcvs	0x00682f00
    6c84:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    6c88:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    6c8c:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    6c90:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6c94:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    6c98:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    6c9c:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    6ca0:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    6ca4:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    6ca8:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    6cac:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    6cb0:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    6cb4:	752f7374 	strvc	r7, [pc, #-884]!	; 6948 <errno+0x6944>
    6cb8:	5f6c6974 	svcpl	0x006c6974
    6cbc:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    6cc0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    6cc4:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    6cc8:	6e692f73 	mcrvs	15, 3, r2, cr9, cr3, {3}
    6ccc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6cd0:	74752f65 	ldrbtvc	r2, [r5], #-3941	; 0xfffff09b
    6cd4:	00736c69 	rsbseq	r6, r3, r9, ror #24
    6cd8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 6c24 <errno+0x6c20>
    6cdc:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    6ce0:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    6ce4:	2f676e6f 	svccs	0x00676e6f
    6ce8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6cec:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6cf0:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    6cf4:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    6cf8:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    6cfc:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6d00:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    6d04:	6f72702f 	svcvs	0x0072702f
    6d08:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    6d0c:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    6d10:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    6d14:	2f736269 	svccs	0x00736269
    6d18:	7062696c 	rsbvc	r6, r2, ip, ror #18
    6d1c:	7374616c 	cmnvc	r4, #108, 2
    6d20:	6f707075 	svcvs	0x00707075
    6d24:	692f7472 	stmdbvs	pc!, {r1, r4, r5, r6, sl, ip, sp, lr}	; <UNPREDICTABLE>
    6d28:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6d2c:	702f6564 	eorvc	r6, pc, r4, ror #10
    6d30:	7374616c 	cmnvc	r4, #108, 2
    6d34:	6f707075 	svcvs	0x00707075
    6d38:	2f007472 	svccs	0x00007472
    6d3c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    6d40:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    6d44:	6f647679 	svcvs	0x00647679
    6d48:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    6d4c:	2f346c65 	svccs	0x00346c65
    6d50:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6d54:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    6d58:	6169726f 	cmnvs	r9, pc, ror #4
    6d5c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    6d60:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    6d64:	2f747365 	svccs	0x00747365
    6d68:	6a6f7270 	bvs	1be3730 <__bss_end__+0x1a9a6e8>
    6d6c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    6d70:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    6d74:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    6d78:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 6bf8 <errno+0x6bf4>
    6d7c:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    6d80:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    6d84:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    6d88:	72612f74 	rsbvc	r2, r1, #116, 30	; 0x1d0
    6d8c:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    6d90:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6d94:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    6d98:	702f6d72 	eorvc	r6, pc, r2, ror sp	; <UNPREDICTABLE>
    6d9c:	7374616c 	cmnvc	r4, #108, 2
    6da0:	6f707075 	svcvs	0x00707075
    6da4:	2f007472 	svccs	0x00007472
    6da8:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    6dac:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    6db0:	6f647679 	svcvs	0x00647679
    6db4:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    6db8:	2f346c65 	svccs	0x00346c65
    6dbc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6dc0:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    6dc4:	6169726f 	cmnvs	r9, pc, ror #4
    6dc8:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    6dcc:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    6dd0:	2f747365 	svccs	0x00747365
    6dd4:	6a6f7270 	bvs	1be379c <__bss_end__+0x1a9a754>
    6dd8:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    6ddc:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    6de0:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    6de4:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 6c64 <errno+0x6c60>
    6de8:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    6dec:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    6df0:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    6df4:	6c702f74 	ldclvs	15, cr2, [r0], #-464	; 0xfffffe30
    6df8:	695f7461 	ldmdbvs	pc, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    6dfc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6e00:	7a2f6564 	bvc	be0398 <__bss_end__+0xa97350>
    6e04:	37716e79 			; <UNDEFINED> instruction: 0x37716e79
    6e08:	2f303030 	svccs	0x00303030
    6e0c:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    6e10:	70707573 	rsbsvc	r7, r0, r3, ror r5
    6e14:	2f74726f 	svccs	0x0074726f
    6e18:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    6e1c:	6f682f00 	svcvs	0x00682f00
    6e20:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    6e24:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    6e28:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    6e2c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6e30:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    6e34:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    6e38:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    6e3c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    6e40:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    6e44:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    6e48:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    6e4c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    6e50:	752f7374 	strvc	r7, [pc, #-884]!	; 6ae4 <errno+0x6ae0>
    6e54:	5f6c6974 	svcpl	0x006c6974
    6e58:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    6e5c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    6e60:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    6e64:	70707573 	rsbsvc	r7, r0, r3, ror r5
    6e68:	2f74726f 	svccs	0x0074726f
    6e6c:	2f637273 	svccs	0x00637273
    6e70:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6e74:	6e797a2f 	vaddvs.f32	s15, s18, s31
    6e78:	2e2e2f71 	mcrcs	15, 1, r2, cr14, cr1, {3}
    6e7c:	002e2e2f 	eoreq	r2, lr, pc, lsr #28
    6e80:	61686300 	cmnvs	r8, r0, lsl #6
    6e84:	76656472 			; <UNDEFINED> instruction: 0x76656472
    6e88:	0100632e 	tsteq	r0, lr, lsr #6
    6e8c:	6c610000 	stclvs	0, cr0, [r1], #-0
    6e90:	7079746c 	rsbsvc	r7, r9, ip, ror #8
    6e94:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    6e98:	00000200 	andeq	r0, r0, r0, lsl #4
    6e9c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    6ea0:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    6ea4:	66000003 	strvs	r0, [r0], -r3
    6ea8:	75716572 	ldrbvc	r6, [r1, #-1394]!	; 0xfffffa8e
    6eac:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    6eb0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6eb4:	667a0000 	ldrbtvs	r0, [sl], -r0
    6eb8:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    6ebc:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6ec0:	72650000 	rsbvc	r0, r5, #0
    6ec4:	2e6f6e72 	mcrcs	14, 3, r6, cr15, cr2, {3}
    6ec8:	00030068 	andeq	r0, r3, r8, rrx
    6ecc:	2e6f6900 	vmulcs.f16	s13, s30, s0	; <UNPREDICTABLE>
    6ed0:	00050068 	andeq	r0, r5, r8, rrx
    6ed4:	6f6c6300 	svcvs	0x006c6300
    6ed8:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    6edc:	00000600 	andeq	r0, r0, r0, lsl #12
    6ee0:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    6ee4:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    6ee8:	75000007 	strvc	r0, [r0, #-7]
    6eec:	7473696e 	ldrbtvc	r6, [r3], #-2414	; 0xfffff692
    6ef0:	00682e64 	rsbeq	r2, r8, r4, ror #28
    6ef4:	6d000003 	stcvs	0, cr0, [r0, #-12]
    6ef8:	682e7875 	stmdavs	lr!, {r0, r2, r4, r5, r6, fp, ip, sp, lr}
    6efc:	00000600 	andeq	r0, r0, r0, lsl #12
    6f00:	2e717269 	cdpcs	2, 7, cr7, cr1, cr9, {3}
    6f04:	00050068 	andeq	r0, r5, r8, rrx
    6f08:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    6f0c:	61667265 	cmnvs	r6, r5, ror #4
    6f10:	745f6563 	ldrbvc	r6, [pc], #-1379	; 6f18 <errno+0x6f14>
    6f14:	73657079 	cmnvc	r5, #121	; 0x79
    6f18:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6f1c:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    6f20:	66726574 			; <UNDEFINED> instruction: 0x66726574
    6f24:	5f656361 	svcpl	0x00656361
    6f28:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    6f2c:	61727473 	cmnvs	r2, r3, ror r4
    6f30:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    6f34:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6f38:	68630000 	stmdavs	r3!, {}^	; <UNPREDICTABLE>
    6f3c:	65647261 	strbvs	r7, [r4, #-609]!	; 0xfffffd9f
    6f40:	00682e76 	rsbeq	r2, r8, r6, ror lr
    6f44:	73000005 	movwvc	r0, #5
    6f48:	61697265 	cmnvs	r9, r5, ror #4
    6f4c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    6f50:	63000007 	movwvs	r0, #7
    6f54:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
    6f58:	682e7665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}
    6f5c:	00000800 	andeq	r0, r0, r0, lsl #16
    6f60:	00510500 	subseq	r0, r1, r0, lsl #10
    6f64:	891c0205 	ldmdbhi	ip, {r0, r2, r9}
    6f68:	20030001 	andcs	r0, r3, r1
    6f6c:	bc0c0501 	cfstr32lt	mvfx0, [ip], {1}
    6f70:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    6f74:	0c052f18 	stceq	15, cr2, [r5], {24}
    6f78:	672005d6 			; <UNDEFINED> instruction: 0x672005d6
    6f7c:	05f23205 	ldrbeq	r3, [r2, #517]!	; 0x205
    6f80:	45056615 	strmi	r6, [r5, #-1557]	; 0xfffff9eb
    6f84:	040200f2 	streq	r0, [r2], #-242	; 0xffffff0e
    6f88:	004a0601 	subeq	r0, sl, r1, lsl #12
    6f8c:	4a020402 	bmi	87f9c <morecore_area+0x3ef9c>
    6f90:	02002c05 	andeq	r2, r0, #1280	; 0x500
    6f94:	48060204 	stmdami	r6, {r2, r9}
    6f98:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    6f9c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    6fa0:	01056b0c 	tsteq	r5, ip, lsl #22
    6fa4:	08056a2f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r9, fp, sp, lr}
    6fa8:	671005bc 			; <UNDEFINED> instruction: 0x671005bc
    6fac:	054d0b05 	strbeq	r0, [sp, #-2821]	; 0xfffff4fb
    6fb0:	31054c0c 	tstcc	r5, ip, lsl #24
    6fb4:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    6fb8:	004a0601 	subeq	r0, sl, r1, lsl #12
    6fbc:	4a020402 	bmi	87fcc <morecore_area+0x3efcc>
    6fc0:	2f060105 	svccs	0x00060105
    6fc4:	01000602 	tsteq	r0, r2, lsl #12
    6fc8:	0006d801 	andeq	sp, r6, r1, lsl #16
    6fcc:	a2000300 	andge	r0, r0, #0, 6
    6fd0:	02000003 	andeq	r0, r0, #3
    6fd4:	0d0efb01 	vstreq	d15, [lr, #-4]
    6fd8:	01010100 	mrseq	r0, (UNDEF: 17)
    6fdc:	00000001 	andeq	r0, r0, r1
    6fe0:	01000001 	tsteq	r0, r1
    6fe4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 6f30 <errno+0x6f2c>
    6fe8:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    6fec:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    6ff0:	2f676e6f 	svccs	0x00676e6f
    6ff4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    6ff8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    6ffc:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    7000:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    7004:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    7008:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    700c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    7010:	6f72702f 	svcvs	0x0072702f
    7014:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    7018:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    701c:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    7020:	2f736269 	svccs	0x00736269
    7024:	7062696c 	rsbvc	r6, r2, ip, ror #18
    7028:	7374616c 	cmnvc	r4, #108, 2
    702c:	6f707075 	svcvs	0x00707075
    7030:	692f7472 	stmdbvs	pc!, {r1, r4, r5, r6, sl, ip, sp, lr}	; <UNPREDICTABLE>
    7034:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7038:	702f6564 	eorvc	r6, pc, r4, ror #10
    703c:	7374616c 	cmnvc	r4, #108, 2
    7040:	6f707075 	svcvs	0x00707075
    7044:	2f007472 	svccs	0x00007472
    7048:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    704c:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    7050:	6f647679 	svcvs	0x00647679
    7054:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    7058:	2f346c65 	svccs	0x00346c65
    705c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    7060:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    7064:	6169726f 	cmnvs	r9, pc, ror #4
    7068:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    706c:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    7070:	2f747365 	svccs	0x00747365
    7074:	6a6f7270 	bvs	1be3a3c <__bss_end__+0x1a9a9f4>
    7078:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    707c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    7080:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    7084:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 6f04 <errno+0x6f00>
    7088:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    708c:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    7090:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    7094:	72732f74 	rsbsvc	r2, r3, #116, 30	; 0x1d0
    7098:	616d2f63 	cmnvs	sp, r3, ror #30
    709c:	7a2f6863 	bvc	be1230 <__bss_end__+0xa981e8>
    70a0:	2f716e79 	svccs	0x00716e79
    70a4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    70a8:	682f002e 	stmdavs	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    70ac:	2f656d6f 	svccs	0x00656d6f
    70b0:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    70b4:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    70b8:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    70bc:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    70c0:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    70c4:	6f747574 	svcvs	0x00747574
    70c8:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    70cc:	616d2d73 	smcvs	53971	; 0xd2d3
    70d0:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    70d4:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    70d8:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    70dc:	2f737463 	svccs	0x00737463
    70e0:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    70e4:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    70e8:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    70ec:	616c7062 	cmnvs	ip, r2, rrx
    70f0:	70757374 	rsbsvc	r7, r5, r4, ror r3
    70f4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    70f8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    70fc:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
    7100:	797a2f68 	ldmdbvc	sl!, {r3, r5, r6, r8, r9, sl, fp, sp}^
    7104:	6d00716e 	stfvss	f7, [r0, #-440]	; 0xfffffe48
    7108:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    710c:	2f636269 	svccs	0x00636269
    7110:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    7114:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    7118:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    711c:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    7120:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    7124:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7128:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    712c:	756d0073 	strbvc	r0, [sp, #-115]!	; 0xffffff8d
    7130:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    7134:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    7138:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    713c:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    7140:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    7144:	2f656761 	svccs	0x00656761
    7148:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    714c:	00656475 	rsbeq	r6, r5, r5, ror r4
    7150:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 709c <errno+0x7098>
    7154:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    7158:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    715c:	2f676e6f 	svccs	0x00676e6f
    7160:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    7164:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    7168:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    716c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    7170:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    7174:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    7178:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    717c:	6f72702f 	svcvs	0x0072702f
    7180:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    7184:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    7188:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    718c:	2f736269 	svccs	0x00736269
    7190:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    7194:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    7198:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    719c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    71a0:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    71a4:	2f00736c 	svccs	0x0000736c
    71a8:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    71ac:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    71b0:	6f647679 	svcvs	0x00647679
    71b4:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    71b8:	2f346c65 	svccs	0x00346c65
    71bc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    71c0:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    71c4:	6169726f 	cmnvs	r9, pc, ror #4
    71c8:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    71cc:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    71d0:	2f747365 	svccs	0x00747365
    71d4:	6a6f7270 	bvs	1be3b9c <__bss_end__+0x1a9ab54>
    71d8:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    71dc:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    71e0:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    71e4:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 7064 <errno+0x7060>
    71e8:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    71ec:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    71f0:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    71f4:	72612f74 	rsbvc	r2, r1, #116, 30	; 0x1d0
    71f8:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    71fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7200:	612f6564 			; <UNDEFINED> instruction: 0x612f6564
    7204:	702f6d72 	eorvc	r6, pc, r2, ror sp	; <UNPREDICTABLE>
    7208:	7374616c 	cmnvc	r4, #108, 2
    720c:	6f707075 	svcvs	0x00707075
    7210:	2f007472 	svccs	0x00007472
    7214:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    7218:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    721c:	6f647679 	svcvs	0x00647679
    7220:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    7224:	2f346c65 	svccs	0x00346c65
    7228:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    722c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    7230:	6169726f 	cmnvs	r9, pc, ror #4
    7234:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    7238:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    723c:	2f747365 	svccs	0x00747365
    7240:	6a6f7270 	bvs	1be3c08 <__bss_end__+0x1a9abc0>
    7244:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    7248:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    724c:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    7250:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 70d0 <errno+0x70cc>
    7254:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    7258:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    725c:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    7260:	6c702f74 	ldclvs	15, cr2, [r0], #-464	; 0xfffffe30
    7264:	695f7461 	ldmdbvs	pc, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    7268:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    726c:	7a2f6564 	bvc	be0804 <__bss_end__+0xa977bc>
    7270:	37716e79 			; <UNDEFINED> instruction: 0x37716e79
    7274:	2f303030 	svccs	0x00303030
    7278:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    727c:	70707573 	rsbsvc	r7, r0, r3, ror r5
    7280:	2f74726f 	svccs	0x0074726f
    7284:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    7288:	6f690000 	svcvs	0x00690000
    728c:	0100682e 	tsteq	r0, lr, lsr #16
    7290:	68630000 	stmdavs	r3!, {}^	; <UNPREDICTABLE>
    7294:	65647261 	strbvs	r7, [r4, #-609]!	; 0xfffffd9f
    7298:	00682e76 	rsbeq	r2, r8, r6, ror lr
    729c:	73000002 	movwvc	r0, #2
    72a0:	61697265 	cmnvs	r9, r5, ror #4
    72a4:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    72a8:	61000003 	tstvs	r0, r3
    72ac:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    72b0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    72b4:	00040068 	andeq	r0, r4, r8, rrx
    72b8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    72bc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    72c0:	00000500 	andeq	r0, r0, r0, lsl #10
    72c4:	71657266 	cmnvc	r5, r6, ror #4
    72c8:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
    72cc:	00682e79 	rsbeq	r2, r8, r9, ror lr
    72d0:	7a000006 	bvc	72f0 <errno+0x72ec>
    72d4:	6f6c5f66 	svcvs	0x006c5f66
    72d8:	00682e67 	rsbeq	r2, r8, r7, ror #28
    72dc:	65000006 	strvs	r0, [r0, #-6]
    72e0:	6f6e7272 	svcvs	0x006e7272
    72e4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    72e8:	6c630000 	stclvs	0, cr0, [r3], #-0
    72ec:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
    72f0:	00070068 	andeq	r0, r7, r8, rrx
    72f4:	6f6c6300 	svcvs	0x006c6300
    72f8:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    72fc:	00000800 	andeq	r0, r0, r0, lsl #16
    7300:	73696e75 	cmnvc	r9, #1872	; 0x750
    7304:	682e6474 	stmdavs	lr!, {r2, r4, r5, r6, sl, sp, lr}
    7308:	00000500 	andeq	r0, r0, r0, lsl #10
    730c:	2e78756d 	cdpcs	5, 7, cr7, cr8, cr13, {3}
    7310:	00070068 	andeq	r0, r7, r8, rrx
    7314:	71726900 	cmnvc	r2, r0, lsl #18
    7318:	0100682e 	tsteq	r0, lr, lsr #16
    731c:	6e690000 	cdpvs	0, 6, cr0, cr9, cr0, {0}
    7320:	66726574 			; <UNDEFINED> instruction: 0x66726574
    7324:	5f656361 	svcpl	0x00656361
    7328:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    732c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7330:	69000001 	stmdbvs	r0, {r0}
    7334:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    7338:	65636166 	strbvs	r6, [r3, #-358]!	; 0xfffffe9a
    733c:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    7340:	72747369 	rsbsvc	r7, r4, #-1543503871	; 0xa4000001
    7344:	6f697461 	svcvs	0x00697461
    7348:	00682e6e 	rsbeq	r2, r8, lr, ror #28
    734c:	63000001 	movwvs	r0, #1
    7350:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
    7354:	682e7665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}
    7358:	00000100 	andeq	r0, r0, r0, lsl #2
    735c:	69726573 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
    7360:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    7364:	00000800 	andeq	r0, r0, r0, lsl #16
    7368:	69726573 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
    736c:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    7370:	00000100 	andeq	r0, r0, r0, lsl #2
    7374:	00010500 	andeq	r0, r1, r0, lsl #10
    7378:	8a5c0205 	bhi	1707b94 <__bss_end__+0x15beb4c>
    737c:	cd030001 	stcgt	0, cr0, [r3, #-4]
    7380:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    7384:	040200d7 	streq	r0, [r2], #-215	; 0xffffff29
    7388:	00660602 	rsbeq	r0, r6, r2, lsl #12
    738c:	06010402 	streq	r0, [r1], -r2, lsl #8
    7390:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    7394:	05820602 	streq	r0, [r2, #1538]	; 0x602
    7398:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    739c:	05f30601 	ldrbeq	r0, [r3, #1537]!	; 0x601
    73a0:	0402000c 	streq	r0, [r2], #-12
    73a4:	01054a01 	tsteq	r5, r1, lsl #20
    73a8:	01040200 	mrseq	r0, R12_usr
    73ac:	02042108 	andeq	r2, r4, #8, 2
    73b0:	05664703 	strbeq	r4, [r6, #-1795]!	; 0xfffff8fd
    73b4:	13059f0c 	movwne	r9, #24332	; 0x5f0c
    73b8:	470c0569 	strmi	r0, [ip, -r9, ror #10]
    73bc:	04c00105 	strbeq	r0, [r0], #261	; 0x105
    73c0:	01820303 	orreq	r0, r2, r3, lsl #6
    73c4:	830c0566 	movwhi	r0, #50534	; 0xc566
    73c8:	864b0105 	strbhi	r0, [fp], -r5, lsl #2
    73cc:	9f830e05 	svcls	0x00830e05
    73d0:	869f0105 	ldrhi	r0, [pc], r5, lsl #2
    73d4:	9f830e05 	svcls	0x00830e05
    73d8:	869f0105 	ldrhi	r0, [pc], r5, lsl #2
    73dc:	05831e05 	streq	r1, [r3, #3589]	; 0xe05
    73e0:	0e056709 	cdpeq	7, 0, cr6, cr5, cr9, {0}
    73e4:	670f054c 	strvs	r0, [pc, -ip, asr #10]
    73e8:	1405686d 	strne	r6, [r5], #-2157	; 0xfffff793
    73ec:	2e08054a 	cfsh32cs	mvfx0, mvfx8, #42
    73f0:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    73f4:	11054a0b 	tstne	r5, fp, lsl #20
    73f8:	4a170533 	bmi	5c88cc <__bss_end__+0x47f884>
    73fc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    7400:	0f054b17 	svceq	0x00054b17
    7404:	680c056a 	stmdavs	ip, {r1, r3, r5, r6, r8, sl}
    7408:	6b2f0105 	blvs	bc7824 <__bss_end__+0xa7e7dc>
    740c:	059f0905 	ldreq	r0, [pc, #2309]	; 7d19 <errno+0x7d15>
    7410:	0e054b1e 	vmoveq.32	d5[0], r4
    7414:	670f0568 	strvs	r0, [pc, -r8, ror #10]
    7418:	05680805 	strbeq	r0, [r8, #-2053]!	; 0xfffff7fb
    741c:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    7420:	20056601 	andcs	r6, r5, r1, lsl #12
    7424:	01040200 	mrseq	r0, R12_usr
    7428:	0013054a 	andseq	r0, r3, sl, asr #10
    742c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7430:	4a18054e 	bmi	608970 <__bss_end__+0x4bf928>
    7434:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    7438:	05674c18 	strbeq	r4, [r7, #-3096]!	; 0xfffff3e8
    743c:	0c056811 	stceq	8, cr6, [r5], {17}
    7440:	35160545 	ldrcc	r0, [r6, #-1349]	; 0xfffffabb
    7444:	054a1b05 	strbeq	r1, [sl, #-2821]	; 0xfffff4fb
    7448:	14052e0f 	strne	r2, [r5], #-3599	; 0xfffff1f1
    744c:	670d054b 	strvs	r0, [sp, -fp, asr #10]
    7450:	054d0b05 	strbeq	r0, [sp, #-2821]	; 0xfffff4fb
    7454:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    7458:	16052e01 	strne	r2, [r5], -r1, lsl #28
    745c:	01040200 	mrseq	r0, R12_usr
    7460:	000b054a 	andeq	r0, fp, sl, asr #10
    7464:	4a010402 	bmi	48474 <mal+0x344>
    7468:	054c0f05 	strbeq	r0, [ip, #-3845]	; 0xfffff0fb
    746c:	0105680c 	tsteq	r5, ip, lsl #16
    7470:	1e056a2f 	vmlane.f32	s12, s10, s31
    7474:	670f0583 	strvs	r0, [pc, -r3, lsl #11]
    7478:	03670105 	cmneq	r7, #1073741825	; 0x40000001
    747c:	05056611 	streq	r6, [r5, #-1553]	; 0xfffff9ef
    7480:	040200d8 	streq	r0, [r2], #-216	; 0xffffff28
    7484:	00660602 	rsbeq	r0, r6, r2, lsl #12
    7488:	06010402 	streq	r0, [r1], -r2, lsl #8
    748c:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    7490:	00660602 	rsbeq	r0, r6, r2, lsl #12
    7494:	06010402 	streq	r0, [r1], -r2, lsl #8
    7498:	040200f3 	streq	r0, [r2], #-243	; 0xffffff0d
    749c:	05660602 	strbeq	r0, [r6, #-1538]!	; 0xfffff9fe
    74a0:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    74a4:	05f60601 	ldrbeq	r0, [r6, #1537]!	; 0x601
    74a8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    74ac:	08054d01 	stmdaeq	r5, {r0, r8, sl, fp, lr}
    74b0:	01040200 	mrseq	r0, R12_usr
    74b4:	671005f2 			; <UNDEFINED> instruction: 0x671005f2
    74b8:	05670d05 	strbeq	r0, [r7, #-3333]!	; 0xfffff2fb
    74bc:	0f05f410 	svceq	0x0005f410
    74c0:	4a05056a 	bmi	148a70 <morecore_area+0xffa70>
    74c4:	052f1205 	streq	r1, [pc, #-517]!	; 72c7 <errno+0x72c3>
    74c8:	1a052e22 	bne	152d58 <__bss_end__+0x9d10>
    74cc:	4a0c054a 	bmi	3089fc <__bss_end__+0x1bf9b4>
    74d0:	00260583 	eoreq	r0, r6, r3, lsl #11
    74d4:	66010402 	strvs	r0, [r1], -r2, lsl #8
    74d8:	056a1905 	strbeq	r1, [sl, #-2309]!	; 0xfffff6fb
    74dc:	1f052e27 	svcne	0x00052e27
    74e0:	4a13054a 	bmi	4c8a10 <__bss_end__+0x37f9c8>
    74e4:	05841205 	streq	r1, [r4, #517]	; 0x205
    74e8:	1f052e0c 	svcne	0x00052e0c
    74ec:	2e180567 	cfmsc32cs	mvfx0, mvfx8, mvfx7
    74f0:	05842405 	streq	r2, [r4, #1029]	; 0x405
    74f4:	0c052e18 	stceq	14, cr2, [r5], {24}
    74f8:	831d0569 	tsthi	sp, #440401920	; 0x1a400000
    74fc:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    7500:	13056714 	movwne	r6, #22292	; 0x5714
    7504:	4d100567 	cfldr32mi	mvfx0, [r0, #-412]	; 0xfffffe64
    7508:	6e030d05 	cdpvs	13, 0, cr0, cr3, cr5, {0}
    750c:	004b0582 	subeq	r0, fp, r2, lsl #11
    7510:	2b020402 	blcs	88520 <morecore_area+0x3f520>
    7514:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7518:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    751c:	82160311 	andshi	r0, r6, #1140850688	; 0x44000000
    7520:	05330c05 	ldreq	r0, [r3, #-3077]!	; 0xfffff3fb
    7524:	09032f01 	stmdbeq	r3, {r0, r8, r9, sl, fp, sp}
    7528:	9f1e0566 	svcls	0x001e0566
    752c:	4b670e05 	blmi	19cad48 <__bss_end__+0x1881d00>
    7530:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
    7534:	a123080e 			; <UNDEFINED> instruction: 0xa123080e
    7538:	05a10905 	streq	r0, [r1, #2309]!	; 0x905
    753c:	12052e08 	andne	r2, r5, #8, 28	; 0x80
    7540:	1305bc4b 	movwne	fp, #23627	; 0x5c4b
    7544:	0e0567a1 	cdpeq	7, 0, cr6, cr5, cr1, {5}
    7548:	9f0b0569 	svcls	0x000b0569
    754c:	02001005 	andeq	r1, r0, #5
    7550:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    7554:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    7558:	0b054a01 	bleq	159d64 <__bss_end__+0x10d1c>
    755c:	01040200 	mrseq	r0, R12_usr
    7560:	4d05052e 	cfstr32mi	mvfx0, [r5, #-184]	; 0xffffff48
    7564:	4b01054d 	blmi	48aa0 <bootinfo+0x20>
    7568:	d71e056e 	ldrle	r0, [lr, -lr, ror #10]
    756c:	676a0805 	strbvs	r0, [sl, -r5, lsl #16]!
    7570:	67670c05 	strbvs	r0, [r7, -r5, lsl #24]!
    7574:	05830f05 	streq	r0, [r3, #3845]	; 0xf05
    7578:	0567670c 	strbeq	r6, [r7, #-1804]!	; 0xfffff8f4
    757c:	0c05830f 	stceq	3, cr8, [r5], {15}
    7580:	84100567 	ldrhi	r0, [r0], #-1383	; 0xfffffa99
    7584:	054d0805 	strbeq	r0, [sp, #-2053]	; 0xfffff7fb
    7588:	0f05670c 	svceq	0x0005670c
    758c:	670c0583 	strvs	r0, [ip, -r3, lsl #11]
    7590:	85100567 	ldrhi	r0, [r0, #-1383]	; 0xfffffa99
    7594:	054d0805 	strbeq	r0, [sp, #-2053]	; 0xfffff7fb
    7598:	0f05670c 	svceq	0x0005670c
    759c:	670c0583 	strvs	r0, [ip, -r3, lsl #11]
    75a0:	850f0567 	strhi	r0, [pc, #-1383]	; 7041 <errno+0x703d>
    75a4:	67670c05 	strbvs	r0, [r7, -r5, lsl #24]!
    75a8:	05841005 	streq	r1, [r4, #5]
    75ac:	05054d0e 	streq	r4, [r5, #-3342]	; 0xfffff2f2
    75b0:	680c056d 	stmdavs	ip, {r0, r2, r3, r5, r6, r8, sl}
    75b4:	6e2f0105 	sufvse	f0, f7, f5
    75b8:	00d70505 	sbcseq	r0, r7, r5, lsl #10
    75bc:	06020402 	streq	r0, [r2], -r2, lsl #8
    75c0:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    75c4:	05f40601 	ldrbeq	r0, [r4, #1537]!	; 0x601
    75c8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    75cc:	02008501 	andeq	r8, r0, #4194304	; 0x400000
    75d0:	00670104 	rsbeq	r0, r7, r4, lsl #2
    75d4:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    75d8:	01040200 	mrseq	r0, R12_usr
    75dc:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
    75e0:	02008301 	andeq	r8, r0, #67108864	; 0x4000000
    75e4:	00830104 	addeq	r0, r3, r4, lsl #2
    75e8:	83010402 	movwhi	r0, #5122	; 0x1402
    75ec:	01040200 	mrseq	r0, R12_usr
    75f0:	000105d8 	ldrdeq	r0, [r1], -r8
    75f4:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    75f8:	831e056a 	tsthi	lr, #444596224	; 0x1a800000
    75fc:	056d0505 	strbeq	r0, [sp, #-1285]!	; 0xfffffafb
    7600:	059ff510 	ldreq	pc, [pc, #1296]	; 7b18 <errno+0x7b14>
    7604:	9f9fa10f 	svcls	0x009fa10f
    7608:	054a1505 	strbeq	r1, [sl, #-1285]	; 0xfffffafb
    760c:	10052e08 	andne	r2, r5, r8, lsl #28
    7610:	4e0e054b 	cfsh32mi	mvfx0, mvfx14, #43
    7614:	9f05059f 	svcls	0x0005059f
    7618:	4b0e054b 	blmi	388b4c <__bss_end__+0x23fb04>
    761c:	12059f9f 	andne	r9, r5, #636	; 0x27c
    7620:	a31005a1 	tstge	r0, #675282944	; 0x28400000
    7624:	05680c05 	strbeq	r0, [r8, #-3077]!	; 0xfffff3fb
    7628:	056c2f01 	strbeq	r2, [ip, #-3841]!	; 0xfffff0ff
    762c:	0200bb05 	andeq	fp, r0, #5120	; 0x1400
    7630:	66060204 	strvs	r0, [r6], -r4, lsl #4
    7634:	01040200 	mrseq	r0, R12_usr
    7638:	0200f306 	andeq	pc, r0, #402653184	; 0x18000000
    763c:	66060204 	strvs	r0, [r6], -r4, lsl #4
    7640:	01040200 	mrseq	r0, R12_usr
    7644:	0200f306 	andeq	pc, r0, #402653184	; 0x18000000
    7648:	66060204 	strvs	r0, [r6], -r4, lsl #4
    764c:	01040200 	mrseq	r0, R12_usr
    7650:	f2090306 	vcgt.s8	d0, d9, d6
    7654:	02000c05 	andeq	r0, r0, #1280	; 0x500
    7658:	05d80104 	ldrbeq	r0, [r8, #260]	; 0x104
    765c:	04020001 	streq	r0, [r2], #-1
    7660:	056c6801 	strbeq	r6, [ip, #-2049]!	; 0xfffff7ff
    7664:	0200bb05 	andeq	fp, r0, #5120	; 0x1400
    7668:	66060204 	strvs	r0, [r6], -r4, lsl #4
    766c:	01040200 	mrseq	r0, R12_usr
    7670:	0200f306 	andeq	pc, r0, #402653184	; 0x18000000
    7674:	66060204 	strvs	r0, [r6], -r4, lsl #4
    7678:	01040200 	mrseq	r0, R12_usr
    767c:	0200f306 	andeq	pc, r0, #402653184	; 0x18000000
    7680:	66060204 	strvs	r0, [r6], -r4, lsl #4
    7684:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    7688:	f5060104 			; <UNDEFINED> instruction: 0xf5060104
    768c:	02000805 	andeq	r0, r0, #327680	; 0x50000
    7690:	05830104 	streq	r0, [r3, #260]	; 0x104
    7694:	05056710 	streq	r6, [r5, #-1808]	; 0xfffff8f0
    7698:	080c054d 	stmdaeq	ip, {r0, r2, r3, r6, r8, sl}
    769c:	67010522 	strvs	r0, [r1, -r2, lsr #10]
    76a0:	01000602 	tsteq	r0, r2, lsl #12
    76a4:	00039f01 	andeq	r9, r3, r1, lsl #30
    76a8:	1c000300 	stcne	3, cr0, [r0], {-0}
    76ac:	02000003 	andeq	r0, r0, #3
    76b0:	0d0efb01 	vstreq	d15, [lr, #-4]
    76b4:	01010100 	mrseq	r0, (UNDEF: 17)
    76b8:	00000001 	andeq	r0, r0, r1
    76bc:	01000001 	tsteq	r0, r1
    76c0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 760c <errno+0x7608>
    76c4:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    76c8:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    76cc:	2f676e6f 	svccs	0x00676e6f
    76d0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    76d4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    76d8:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    76dc:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    76e0:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    76e4:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    76e8:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    76ec:	6f72702f 	svcvs	0x0072702f
    76f0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    76f4:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    76f8:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    76fc:	2f736269 	svccs	0x00736269
    7700:	7062696c 	rsbvc	r6, r2, ip, ror #18
    7704:	7374616c 	cmnvc	r4, #108, 2
    7708:	6f707075 	svcvs	0x00707075
    770c:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    7710:	6d006372 	stcvs	3, cr6, [r0, #-456]	; 0xfffffe38
    7714:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    7718:	2f636269 	svccs	0x00636269
    771c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    7720:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    7724:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    7728:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    772c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    7730:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7734:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    7738:	756d0073 	strbvc	r0, [sp, #-115]!	; 0xffffff8d
    773c:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    7740:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    7744:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    7748:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    774c:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    7750:	2f656761 	svccs	0x00656761
    7754:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7758:	00656475 	rsbeq	r6, r5, r5, ror r4
    775c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 76a8 <errno+0x76a4>
    7760:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    7764:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    7768:	2f676e6f 	svccs	0x00676e6f
    776c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    7770:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    7774:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    7778:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    777c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    7780:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    7784:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    7788:	6f72702f 	svcvs	0x0072702f
    778c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    7790:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    7794:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    7798:	2f736269 	svccs	0x00736269
    779c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    77a0:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    77a4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    77a8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    77ac:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    77b0:	2f00736c 	svccs	0x0000736c
    77b4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    77b8:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    77bc:	6f647679 	svcvs	0x00647679
    77c0:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    77c4:	2f346c65 	svccs	0x00346c65
    77c8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    77cc:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    77d0:	6169726f 	cmnvs	r9, pc, ror #4
    77d4:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    77d8:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    77dc:	2f747365 	svccs	0x00747365
    77e0:	6a6f7270 	bvs	1be41a8 <__bss_end__+0x1a9b160>
    77e4:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    77e8:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    77ec:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    77f0:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 7670 <errno+0x766c>
    77f4:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    77f8:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    77fc:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    7800:	6e692f74 	mcrvs	15, 3, r2, cr9, cr4, {3}
    7804:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7808:	6c702f65 	ldclvs	15, cr2, [r0], #-404	; 0xfffffe6c
    780c:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    7810:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    7814:	682f0074 	stmdavs	pc!, {r2, r4, r5, r6}	; <UNPREDICTABLE>
    7818:	2f656d6f 	svccs	0x00656d6f
    781c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    7820:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    7824:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    7828:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    782c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    7830:	6f747574 	svcvs	0x00747574
    7834:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    7838:	616d2d73 	smcvs	53971	; 0xd2d3
    783c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    7840:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    7844:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    7848:	2f737463 	svccs	0x00737463
    784c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    7850:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    7854:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    7858:	616c7062 	cmnvs	ip, r2, rrx
    785c:	70757374 	rsbsvc	r7, r5, r4, ror r3
    7860:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    7864:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    7868:	6e695f68 	cdpvs	15, 6, cr5, cr9, cr8, {3}
    786c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7870:	72612f65 	rsbvc	r2, r1, #404	; 0x194
    7874:	6c702f6d 	ldclvs	15, cr2, [r0], #-436	; 0xfffffe4c
    7878:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    787c:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    7880:	682f0074 	stmdavs	pc!, {r2, r4, r5, r6}	; <UNPREDICTABLE>
    7884:	2f656d6f 	svccs	0x00656d6f
    7888:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    788c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    7890:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    7894:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    7898:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    789c:	6f747574 	svcvs	0x00747574
    78a0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    78a4:	616d2d73 	smcvs	53971	; 0xd2d3
    78a8:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    78ac:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    78b0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    78b4:	2f737463 	svccs	0x00737463
    78b8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    78bc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    78c0:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    78c4:	616c7062 	cmnvs	ip, r2, rrx
    78c8:	70757374 	rsbsvc	r7, r5, r4, ror r3
    78cc:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    78d0:	616c702f 	cmnvs	ip, pc, lsr #32
    78d4:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    78d8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    78dc:	797a2f65 	ldmdbvc	sl!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    78e0:	3037716e 	eorscc	r7, r7, lr, ror #2
    78e4:	702f3030 	eorvc	r3, pc, r0, lsr r0	; <UNPREDICTABLE>
    78e8:	7374616c 	cmnvc	r4, #108, 2
    78ec:	6f707075 	svcvs	0x00707075
    78f0:	702f7472 	eorvc	r7, pc, r2, ror r4	; <UNPREDICTABLE>
    78f4:	0074616c 	rsbseq	r6, r4, ip, ror #2
    78f8:	72657300 	rsbvc	r7, r5, #0, 6
    78fc:	2e6c6169 	powcsez	f6, f4, #1.0
    7900:	00010063 	andeq	r0, r1, r3, rrx
    7904:	6c6c6100 	stfvse	f6, [ip], #-0
    7908:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    790c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7910:	73000002 	movwvc	r0, #2
    7914:	6f696474 	svcvs	0x00696474
    7918:	0300682e 	movweq	r6, #2094	; 0x82e
    791c:	72660000 	rsbvc	r0, r6, #0
    7920:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    7924:	2e79636e 	cdpcs	3, 7, cr6, cr9, cr14, {3}
    7928:	00040068 	andeq	r0, r4, r8, rrx
    792c:	5f667a00 	svcpl	0x00667a00
    7930:	2e676f6c 	cdpcs	15, 6, cr6, cr7, cr12, {3}
    7934:	00040068 	andeq	r0, r4, r8, rrx
    7938:	72726500 	rsbsvc	r6, r2, #0, 10
    793c:	682e6f6e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    7940:	00000300 	andeq	r0, r0, r0, lsl #6
    7944:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    7948:	00000500 	andeq	r0, r0, r0, lsl #10
    794c:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    7950:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    7954:	63000006 	movwvs	r0, #6
    7958:	6b636f6c 	blvs	18e3710 <__bss_end__+0x179a6c8>
    795c:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    7960:	6e750000 	cdpvs	0, 7, cr0, cr5, cr0, {0}
    7964:	64747369 	ldrbtvs	r7, [r4], #-873	; 0xfffffc97
    7968:	0300682e 	movweq	r6, #2094	; 0x82e
    796c:	756d0000 	strbvc	r0, [sp, #-0]!
    7970:	00682e78 	rsbeq	r2, r8, r8, ror lr
    7974:	69000006 	stmdbvs	r0, {r1, r2}
    7978:	682e7172 	stmdavs	lr!, {r1, r4, r5, r6, r8, ip, sp, lr}
    797c:	00000500 	andeq	r0, r0, r0, lsl #10
    7980:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    7984:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    7988:	79745f65 	ldmdbvc	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    798c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7990:	00050068 	andeq	r0, r5, r8, rrx
    7994:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    7998:	61667265 	cmnvs	r6, r5, ror #4
    799c:	725f6563 	subsvc	r6, pc, #415236096	; 0x18c00000
    79a0:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    79a4:	74617274 	strbtvc	r7, [r1], #-628	; 0xfffffd8c
    79a8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    79ac:	00050068 	andeq	r0, r5, r8, rrx
    79b0:	61686300 	cmnvs	r8, r0, lsl #6
    79b4:	76656472 			; <UNDEFINED> instruction: 0x76656472
    79b8:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    79bc:	65730000 	ldrbvs	r0, [r3, #-0]!
    79c0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    79c4:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    79c8:	05000000 	streq	r0, [r0, #-0]
    79cc:	02050001 	andeq	r0, r5, #1
    79d0:	000196a4 	andeq	r9, r1, r4, lsr #13
    79d4:	05011103 	streq	r1, [r1, #-259]	; 0xfffffefd
    79d8:	0e05d71a 	mcreq	7, 0, sp, cr5, cr10, {0}
    79dc:	4a05054b 	bmi	148f10 <morecore_area+0xfff10>
    79e0:	052f2105 	streq	r2, [pc, #-261]!	; 78e3 <errno+0x78df>
    79e4:	0c05820d 	sfmeq	f0, 1, [r5], {13}
    79e8:	4b140582 	blmi	508ff8 <__bss_end__+0x3bffb0>
    79ec:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    79f0:	05480204 	strbeq	r0, [r8, #-516]	; 0xfffffdfc
    79f4:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    79f8:	05056601 	streq	r6, [r5, #-1537]	; 0xfffff9ff
    79fc:	01040200 	mrseq	r0, R12_usr
    7a00:	6b0c052e 	blvs	308ec0 <__bss_end__+0x1bfe78>
    7a04:	6e2f0105 	sufvse	f0, f7, f5
    7a08:	05d70b05 	ldrbeq	r0, [r7, #2821]	; 0xb05
    7a0c:	05054b0e 	streq	r4, [r5, #-2830]	; 0xfffff4f2
    7a10:	2f13054a 	svccs	0x0013054a
    7a14:	05670c05 	strbeq	r0, [r7, #-3077]!	; 0xfffff3fb
    7a18:	0d056714 	stceq	7, cr6, [r5, #-80]	; 0xffffffb0
    7a1c:	02040200 	andeq	r0, r4, #0, 4
    7a20:	0011054c 	andseq	r0, r1, ip, asr #10
    7a24:	66020402 	strvs	r0, [r2], -r2, lsl #8
    7a28:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    7a2c:	05610204 	strbeq	r0, [r1, #-516]!	; 0xfffffdfc
    7a30:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    7a34:	05056601 	streq	r6, [r5, #-1537]	; 0xfffff9ff
    7a38:	01040200 	mrseq	r0, R12_usr
    7a3c:	6d0c052e 	cfstr32vs	mvfx0, [ip, #-184]	; 0xffffff48
    7a40:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    7a44:	01010006 	tsteq	r1, r6
    7a48:	000003f8 	strdeq	r0, [r0], -r8
    7a4c:	02b00003 	adcseq	r0, r0, #3
    7a50:	01020000 	mrseq	r0, (UNDEF: 2)
    7a54:	000d0efb 	strdeq	r0, [sp], -fp
    7a58:	01010101 	tsteq	r1, r1, lsl #2
    7a5c:	01000000 	mrseq	r0, (UNDEF: 0)
    7a60:	2f010000 	svccs	0x00010000
    7a64:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    7a68:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    7a6c:	6f647679 	svcvs	0x00647679
    7a70:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    7a74:	2f346c65 	svccs	0x00346c65
    7a78:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    7a7c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    7a80:	6169726f 	cmnvs	r9, pc, ror #4
    7a84:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    7a88:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    7a8c:	2f747365 	svccs	0x00747365
    7a90:	6a6f7270 	bvs	1be4458 <__bss_end__+0x1a9b410>
    7a94:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    7a98:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    7a9c:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    7aa0:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 7920 <errno+0x791c>
    7aa4:	64666269 	strbtvs	r6, [r6], #-617	; 0xfffffd97
    7aa8:	002e2f74 	eoreq	r2, lr, r4, ror pc
    7aac:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 79f8 <errno+0x79f4>
    7ab0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    7ab4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    7ab8:	2f676e6f 	svccs	0x00676e6f
    7abc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    7ac0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    7ac4:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    7ac8:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    7acc:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    7ad0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    7ad4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    7ad8:	6f72702f 	svcvs	0x0072702f
    7adc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    7ae0:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    7ae4:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    7ae8:	2f736269 	svccs	0x00736269
    7aec:	7062696c 	rsbvc	r6, r2, ip, ror #18
    7af0:	7374616c 	cmnvc	r4, #108, 2
    7af4:	6f707075 	svcvs	0x00707075
    7af8:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    7afc:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
    7b00:	2f686372 	svccs	0x00686372
    7b04:	2f6d7261 	svccs	0x006d7261
    7b08:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
    7b0c:	2f706968 	svccs	0x00706968
    7b10:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7b14:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7b18:	6f682f00 	svcvs	0x00682f00
    7b1c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    7b20:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    7b24:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    7b28:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    7b2c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    7b30:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    7b34:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    7b38:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    7b3c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    7b40:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    7b44:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    7b48:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    7b4c:	752f7374 	strvc	r7, [pc, #-884]!	; 77e0 <errno+0x77dc>
    7b50:	5f6c6974 	svcpl	0x006c6974
    7b54:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    7b58:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7b5c:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    7b60:	70707573 	rsbsvc	r7, r0, r3, ror r5
    7b64:	2f74726f 	svccs	0x0074726f
    7b68:	2f637273 	svccs	0x00637273
    7b6c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    7b70:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    7b74:	7172692f 	cmnvc	r2, pc, lsr #18
    7b78:	70696863 	rsbvc	r6, r9, r3, ror #16
    7b7c:	73756d00 	cmnvc	r5, #0, 26
    7b80:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    7b84:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    7b88:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    7b8c:	706d6574 	rsbvc	r6, sp, r4, ror r5
    7b90:	6174732f 	cmnvs	r4, pc, lsr #6
    7b94:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    7b98:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7b9c:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    7ba0:	00737469 	rsbseq	r7, r3, r9, ror #8
    7ba4:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    7ba8:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    7bac:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    7bb0:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    7bb4:	2f706d65 	svccs	0x00706d65
    7bb8:	67617473 			; <UNDEFINED> instruction: 0x67617473
    7bbc:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    7bc0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7bc4:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
    7bc8:	2f656d6f 	svccs	0x00656d6f
    7bcc:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    7bd0:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    7bd4:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    7bd8:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    7bdc:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    7be0:	6f747574 	svcvs	0x00747574
    7be4:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    7be8:	616d2d73 	smcvs	53971	; 0xd2d3
    7bec:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    7bf0:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    7bf4:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    7bf8:	2f737463 	svccs	0x00737463
    7bfc:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    7c00:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    7c04:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    7c08:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    7c0c:	692f736c 	stmdbvs	pc!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
    7c10:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7c14:	752f6564 	strvc	r6, [pc, #-1380]!	; 76b8 <errno+0x76b4>
    7c18:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    7c1c:	6f682f00 	svcvs	0x00682f00
    7c20:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    7c24:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    7c28:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    7c2c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    7c30:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    7c34:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    7c38:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    7c3c:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    7c40:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    7c44:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    7c48:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    7c4c:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    7c50:	752f7374 	strvc	r7, [pc, #-884]!	; 78e4 <errno+0x78e0>
    7c54:	5f6c6974 	svcpl	0x006c6974
    7c58:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    7c5c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7c60:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    7c64:	70707573 	rsbsvc	r7, r0, r3, ror r5
    7c68:	2f74726f 	svccs	0x0074726f
    7c6c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7c70:	2f656475 	svccs	0x00656475
    7c74:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    7c78:	70707573 	rsbsvc	r7, r0, r3, ror r5
    7c7c:	0074726f 	rsbseq	r7, r4, pc, ror #4
    7c80:	62696c00 	rsbvs	r6, r9, #0, 24
    7c84:	5f746466 	svcpl	0x00746466
    7c88:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
    7c8c:	00010068 	andeq	r0, r1, r8, rrx
    7c90:	62696c00 	rsbvs	r6, r9, #0, 24
    7c94:	2e746466 	cdpcs	4, 7, cr6, cr4, cr6, {3}
    7c98:	00010068 	andeq	r0, r1, r8, rrx
    7c9c:	71726900 	cmnvc	r2, r0, lsl #18
    7ca0:	70696863 	rsbvc	r6, r9, r3, ror #16
    7ca4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    7ca8:	69670000 	stmdbvs	r7!, {}^	; <UNPREDICTABLE>
    7cac:	00632e63 	rsbeq	r2, r3, r3, ror #28
    7cb0:	61000003 	tstvs	r0, r3
    7cb4:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    7cb8:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7cbc:	00040068 	andeq	r0, r4, r8, rrx
    7cc0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    7cc4:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    7cc8:	00000500 	andeq	r0, r0, r0, lsl #10
    7ccc:	6c5f667a 	mrrcvs	6, 7, r6, pc, cr10	; <UNPREDICTABLE>
    7cd0:	682e676f 	stmdavs	lr!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    7cd4:	00000600 	andeq	r0, r0, r0, lsl #12
    7cd8:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    7cdc:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    7ce0:	69000005 	stmdbvs	r0, {r0, r2}
    7ce4:	682e7172 	stmdavs	lr!, {r1, r4, r5, r6, r8, ip, sp, lr}
    7ce8:	00000700 	andeq	r0, r0, r0, lsl #14
    7cec:	73696e75 	cmnvc	r9, #1872	; 0x750
    7cf0:	682e6474 	stmdavs	lr!, {r2, r4, r5, r6, sl, sp, lr}
    7cf4:	00000500 	andeq	r0, r0, r0, lsl #10
    7cf8:	2e746466 	cdpcs	4, 7, cr6, cr4, cr6, {3}
    7cfc:	00070068 	andeq	r0, r7, r8, rrx
    7d00:	01050000 	mrseq	r0, (UNDEF: 5)
    7d04:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    7d08:	03000197 	movweq	r0, #407	; 0x197
    7d0c:	050100de 	streq	r0, [r1, #-222]	; 0xffffff22
    7d10:	0905831d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, pc}
    7d14:	0105e408 	tsteq	r5, r8, lsl #8
    7d18:	0302042f 	movweq	r0, #9263	; 0x242f
    7d1c:	058200c7 	streq	r0, [r2, #199]	; 0xc7
    7d20:	09058502 	stmdbeq	r5, {r1, r8, sl, pc}
    7d24:	8301059f 	movwhi	r0, #5535	; 0x159f
    7d28:	91030304 	tstls	r3, r4, lsl #6
    7d2c:	0505667f 	streq	r6, [r5, #-1663]	; 0xfffff981
    7d30:	040200d7 	streq	r0, [r2], #-215	; 0xffffff29
    7d34:	00660602 	rsbeq	r0, r6, r2, lsl #12
    7d38:	66030402 	strvs	r0, [r3], -r2, lsl #8
    7d3c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7d40:	0402009e 	streq	r0, [r2], #-158	; 0xffffff62
    7d44:	05c80806 	strbeq	r0, [r8, #2054]	; 0x806
    7d48:	05f30623 	ldrbeq	r0, [r3, #1571]!	; 0x623
    7d4c:	1605d708 	strne	sp, [r5], -r8, lsl #14
    7d50:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
    7d54:	054d1705 	strbeq	r1, [sp, #-1797]	; 0xfffff8fb
    7d58:	1605d708 	strne	sp, [r5], -r8, lsl #14
    7d5c:	67100567 	ldrvs	r0, [r0, -r7, ror #10]
    7d60:	054d0c05 	strbeq	r0, [sp, #-3077]	; 0xfffff3fb
    7d64:	04042f01 	streq	r2, [r4], #-3841	; 0xfffff0ff
    7d68:	05665703 	strbeq	r5, [r6, #-1795]!	; 0xfffff8fd
    7d6c:	0905d70a 	stmdbeq	r5, {r1, r3, r8, r9, sl, ip, lr, pc}
    7d70:	4b23054b 	blmi	8c92a4 <__bss_end__+0x78025c>
    7d74:	00bb0505 	adcseq	r0, fp, r5, lsl #10
    7d78:	06020402 	streq	r0, [r2], -r2, lsl #8
    7d7c:	00200566 	eoreq	r0, r0, r6, ror #10
    7d80:	06010402 	streq	r0, [r1], -r2, lsl #8
    7d84:	000905f3 	strdeq	r0, [r9], -r3
    7d88:	4a010402 	bmi	48d98 <bootinfo+0x318>
    7d8c:	02003805 	andeq	r3, r0, #327680	; 0x50000
    7d90:	05300104 	ldreq	r0, [r0, #-260]!	; 0xfffffefc
    7d94:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
    7d98:	02002e01 	andeq	r2, r0, #1, 28
    7d9c:	82060204 	andhi	r0, r6, #4, 4	; 0x40000000
    7da0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    7da4:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
    7da8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7dac:	0005052f 	andeq	r0, r5, pc, lsr #10
    7db0:	a0040402 	andge	r0, r4, r2, lsl #8
    7db4:	02040200 	andeq	r0, r4, #0, 4
    7db8:	0e05d606 	cfmadd32eq	mvax0, mvfx13, mvfx5, mvfx6
    7dbc:	01040200 	mrseq	r0, R12_usr
    7dc0:	0505f406 	streq	pc, [r5, #-1030]	; 0xfffffbfa
    7dc4:	01040200 	mrseq	r0, R12_usr
    7dc8:	2f12054a 	svccs	0x0012054a
    7dcc:	05f33105 	ldrbeq	r3, [r3, #261]!	; 0x105
    7dd0:	1505663a 	strne	r6, [r5, #-1594]	; 0xfffff9c6
    7dd4:	6717052e 	ldrvs	r0, [r7, -lr, lsr #10]
    7dd8:	4b4b1205 	blmi	12cc5f4 <__bss_end__+0x11835ac>
    7ddc:	054b0d05 	strbeq	r0, [fp, #-3333]	; 0xfffff2fb
    7de0:	11052e0c 	tstne	r5, ip, lsl #28
    7de4:	9e3f054b 	cdpls	5, 3, cr0, cr15, cr11, {2}
    7de8:	05661005 	strbeq	r1, [r6, #-5]!
    7dec:	054c6918 	strbeq	r6, [ip, #-2328]	; 0xfffff6e8
    7df0:	18059f13 	stmdane	r5, {r0, r1, r4, r8, r9, sl, fp, ip, pc}
    7df4:	671305bc 			; <UNDEFINED> instruction: 0x671305bc
    7df8:	00a04405 	adceq	r4, r0, r5, lsl #8
    7dfc:	06010402 	streq	r0, [r1], -r2, lsl #8
    7e00:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    7e04:	23054a02 	movwcs	r4, #23042	; 0x5a02
    7e08:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7e0c:	1d052e06 	stcne	14, cr2, [r5, #-24]	; 0xffffffe8
    7e10:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7e14:	0015054a 	andseq	r0, r5, sl, asr #10
    7e18:	2f040402 	svccs	0x00040402
    7e1c:	02000c05 	andeq	r0, r0, #1280	; 0x500
    7e20:	c9080404 	stmdbgt	r8, {r2, sl}
    7e24:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    7e28:	4a6b032a 	bmi	1ac8ad8 <__bss_end__+0x197fa90>
    7e2c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7e30:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    7e34:	8219030c 	andshi	r0, r9, #12, 6	; 0x30000000
    7e38:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    7e3c:	022f0104 	eoreq	r0, pc, #4, 2
    7e40:	01010006 	tsteq	r1, r6
    7e44:	0000044c 	andeq	r0, r0, ip, asr #8
    7e48:	02b20003 	adcseq	r0, r2, #3
    7e4c:	01020000 	mrseq	r0, (UNDEF: 2)
    7e50:	000d0efb 	strdeq	r0, [sp], -fp
    7e54:	01010101 	tsteq	r1, r1, lsl #2
    7e58:	01000000 	mrseq	r0, (UNDEF: 0)
    7e5c:	2f010000 	svccs	0x00010000
    7e60:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    7e64:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    7e68:	6f647679 	svcvs	0x00647679
    7e6c:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    7e70:	2f346c65 	svccs	0x00346c65
    7e74:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    7e78:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    7e7c:	6169726f 	cmnvs	r9, pc, ror #4
    7e80:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    7e84:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    7e88:	2f747365 	svccs	0x00747365
    7e8c:	6a6f7270 	bvs	1be4854 <__bss_end__+0x1a9b80c>
    7e90:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    7e94:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    7e98:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    7e9c:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 7d1c <errno+0x7d18>
    7ea0:	64666269 	strbtvs	r6, [r6], #-617	; 0xfffffd97
    7ea4:	002e2f74 	eoreq	r2, lr, r4, ror pc
    7ea8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 7df4 <errno+0x7df0>
    7eac:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    7eb0:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    7eb4:	2f676e6f 	svccs	0x00676e6f
    7eb8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    7ebc:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    7ec0:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    7ec4:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    7ec8:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    7ecc:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    7ed0:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    7ed4:	6f72702f 	svcvs	0x0072702f
    7ed8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    7edc:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    7ee0:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    7ee4:	2f736269 	svccs	0x00736269
    7ee8:	7062696c 	rsbvc	r6, r2, ip, ror #18
    7eec:	7374616c 	cmnvc	r4, #108, 2
    7ef0:	6f707075 	svcvs	0x00707075
    7ef4:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    7ef8:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
    7efc:	2f686372 	svccs	0x00686372
    7f00:	2f6d7261 	svccs	0x006d7261
    7f04:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
    7f08:	2f706968 	svccs	0x00706968
    7f0c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7f10:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7f14:	6f682f00 	svcvs	0x00682f00
    7f18:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    7f1c:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    7f20:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    7f24:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    7f28:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    7f2c:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    7f30:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    7f34:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    7f38:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    7f3c:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    7f40:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    7f44:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    7f48:	752f7374 	strvc	r7, [pc, #-884]!	; 7bdc <errno+0x7bd8>
    7f4c:	5f6c6974 	svcpl	0x006c6974
    7f50:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    7f54:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7f58:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    7f5c:	70707573 	rsbsvc	r7, r0, r3, ror r5
    7f60:	2f74726f 	svccs	0x0074726f
    7f64:	2f637273 	svccs	0x00637273
    7f68:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    7f6c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    7f70:	7172692f 	cmnvc	r2, pc, lsr #18
    7f74:	70696863 	rsbvc	r6, r9, r3, ror #16
    7f78:	73756d00 	cmnvc	r5, #0, 26
    7f7c:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    7f80:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    7f84:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    7f88:	706d6574 	rsbvc	r6, sp, r4, ror r5
    7f8c:	6174732f 	cmnvs	r4, pc, lsr #6
    7f90:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    7f94:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7f98:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    7f9c:	00737469 	rsbseq	r7, r3, r9, ror #8
    7fa0:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    7fa4:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    7fa8:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    7fac:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    7fb0:	2f706d65 	svccs	0x00706d65
    7fb4:	67617473 			; <UNDEFINED> instruction: 0x67617473
    7fb8:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    7fbc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7fc0:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
    7fc4:	2f656d6f 	svccs	0x00656d6f
    7fc8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    7fcc:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    7fd0:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    7fd4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    7fd8:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    7fdc:	6f747574 	svcvs	0x00747574
    7fe0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    7fe4:	616d2d73 	smcvs	53971	; 0xd2d3
    7fe8:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    7fec:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    7ff0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    7ff4:	2f737463 	svccs	0x00737463
    7ff8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    7ffc:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    8000:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    8004:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    8008:	692f736c 	stmdbvs	pc!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
    800c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8010:	752f6564 	strvc	r6, [pc, #-1380]!	; 7ab4 <errno+0x7ab0>
    8014:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    8018:	6f682f00 	svcvs	0x00682f00
    801c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    8020:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    8024:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    8028:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    802c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    8030:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    8034:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    8038:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    803c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    8040:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    8044:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    8048:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    804c:	752f7374 	strvc	r7, [pc, #-884]!	; 7ce0 <errno+0x7cdc>
    8050:	5f6c6974 	svcpl	0x006c6974
    8054:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    8058:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    805c:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    8060:	70707573 	rsbsvc	r7, r0, r3, ror r5
    8064:	2f74726f 	svccs	0x0074726f
    8068:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    806c:	2f656475 	svccs	0x00656475
    8070:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    8074:	70707573 	rsbsvc	r7, r0, r3, ror r5
    8078:	0074726f 	rsbseq	r7, r4, pc, ror #4
    807c:	62696c00 	rsbvs	r6, r9, #0, 24
    8080:	5f746466 	svcpl	0x00746466
    8084:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
    8088:	00010068 	andeq	r0, r1, r8, rrx
    808c:	62696c00 	rsbvs	r6, r9, #0, 24
    8090:	2e746466 	cdpcs	4, 7, cr6, cr4, cr6, {3}
    8094:	00010068 	andeq	r0, r1, r8, rrx
    8098:	71726900 	cmnvc	r2, r0, lsl #18
    809c:	70696863 	rsbvc	r6, r9, r3, ror #16
    80a0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    80a4:	69670000 	stmdbvs	r7!, {}^	; <UNPREDICTABLE>
    80a8:	2e337663 	cfmsuba32cs	mvax3, mvax7, mvfx3, mvfx3
    80ac:	00030063 	andeq	r0, r3, r3, rrx
    80b0:	6c6c6100 	stfvse	f6, [ip], #-0
    80b4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    80b8:	00682e73 	rsbeq	r2, r8, r3, ror lr
    80bc:	73000004 	movwvc	r0, #4
    80c0:	6f696474 	svcvs	0x00696474
    80c4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    80c8:	667a0000 	ldrbtvs	r0, [sl], -r0
    80cc:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    80d0:	0600682e 	streq	r6, [r0], -lr, lsr #16
    80d4:	72650000 	rsbvc	r0, r5, #0
    80d8:	2e6f6e72 	mcrcs	14, 3, r6, cr15, cr2, {3}
    80dc:	00050068 	andeq	r0, r5, r8, rrx
    80e0:	71726900 	cmnvc	r2, r0, lsl #18
    80e4:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    80e8:	6e750000 	cdpvs	0, 7, cr0, cr5, cr0, {0}
    80ec:	64747369 	ldrbtvs	r7, [r4], #-873	; 0xfffffc97
    80f0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    80f4:	64660000 	strbtvs	r0, [r6], #-0
    80f8:	00682e74 	rsbeq	r2, r8, r4, ror lr
    80fc:	00000007 	andeq	r0, r0, r7
    8100:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8104:	019c0802 	orrseq	r0, ip, r2, lsl #16
    8108:	00de0300 	sbcseq	r0, lr, r0, lsl #6
    810c:	831d0501 	tsthi	sp, #4194304	; 0x400000
    8110:	e4080905 	str	r0, [r8], #-2309	; 0xfffff6fb
    8114:	042f0105 	strteq	r0, [pc], #-261	; 811c <errno+0x8118>
    8118:	00c70302 	sbceq	r0, r7, r2, lsl #6
    811c:	85020582 	strhi	r0, [r2, #-1410]	; 0xfffffa7e
    8120:	059f0905 	ldreq	r0, [pc, #2309]	; 8a2d <errno+0x8a29>
    8124:	03048301 	movweq	r8, #17153	; 0x4301
    8128:	667f9103 	ldrbtvs	r9, [pc], -r3, lsl #2
    812c:	00d70505 	sbcseq	r0, r7, r5, lsl #10
    8130:	06020402 	streq	r0, [r2], -r2, lsl #8
    8134:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    8138:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    813c:	009e0404 	addseq	r0, lr, r4, lsl #8
    8140:	08060402 	stmdaeq	r6, {r1, sl}
    8144:	062305c8 	strteq	r0, [r3], -r8, asr #11
    8148:	d70805f3 			; <UNDEFINED> instruction: 0xd70805f3
    814c:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
    8150:	17056710 	smladne	r5, r0, r7, r6
    8154:	d708054d 	strle	r0, [r8, -sp, asr #10]
    8158:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
    815c:	0c056710 	stceq	7, cr6, [r5], {16}
    8160:	2f01054d 	svccs	0x0001054d
    8164:	65030404 	strvs	r0, [r3, #-1028]	; 0xfffffbfc
    8168:	d70a0566 	strle	r0, [sl, -r6, ror #10]
    816c:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    8170:	05054b23 	streq	r4, [r5, #-2851]	; 0xfffff4dd
    8174:	040200bb 	streq	r0, [r2], #-187	; 0xffffff45
    8178:	05660602 	strbeq	r0, [r6, #-1538]!	; 0xfffff9fe
    817c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    8180:	05f30601 	ldrbeq	r0, [r3, #1537]!	; 0x601
    8184:	04020009 	streq	r0, [r2], #-9
    8188:	22054a01 	andcs	r4, r5, #4096	; 0x1000
    818c:	01040200 	mrseq	r0, R12_usr
    8190:	00080534 	andeq	r0, r8, r4, lsr r5
    8194:	9f010402 	svcls	0x00010402
    8198:	00670905 	rsbeq	r0, r7, r5, lsl #18
    819c:	06010402 	streq	r0, [r1], -r2, lsl #8
    81a0:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    81a4:	28057508 	stmdacs	r5, {r3, r8, sl, ip, sp, lr}
    81a8:	d708054c 	strle	r0, [r8, -ip, asr #10]
    81ac:	00670905 	rsbeq	r0, r7, r5, lsl #18
    81b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    81b4:	0610059e 			; <UNDEFINED> instruction: 0x0610059e
    81b8:	24057508 	strcs	r7, [r5], #-1288	; 0xfffffaf8
    81bc:	6708054c 	strvs	r0, [r8, -ip, asr #10]
    81c0:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    81c4:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    81c8:	02006709 	andeq	r6, r0, #2359296	; 0x240000
    81cc:	9e060104 	adflss	f0, f6, f4
    81d0:	08061005 	stmdaeq	r6, {r0, r2, ip}
    81d4:	4d350575 	cfldr32mi	mvfx0, [r5, #-468]!	; 0xfffffe2c
    81d8:	054a2605 	strbeq	r2, [sl, #-1541]	; 0xfffff9fb
    81dc:	052f4a09 	streq	r4, [pc, #-2569]!	; 77db <errno+0x77d7>
    81e0:	0200a005 	andeq	sl, r0, #5
    81e4:	d6060204 	strle	r0, [r6], -r4, lsl #4
    81e8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    81ec:	f4060104 	vst4.8	{d0,d2,d4,d6}, [r6], r4
    81f0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    81f4:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    81f8:	31052f12 	tstcc	r5, r2, lsl pc
    81fc:	663a05f3 			; <UNDEFINED> instruction: 0x663a05f3
    8200:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    8204:	054b6712 	strbeq	r6, [fp, #-1810]	; 0xfffff8ee
    8208:	054b4b19 	strbeq	r4, [fp, #-2841]	; 0xfffff4e7
    820c:	0c054c0d 	stceq	12, cr4, [r5], {13}
    8210:	4b11052e 	blmi	4496d0 <__bss_end__+0x300688>
    8214:	059e3f05 	ldreq	r3, [lr, #3845]	; 0xf05
    8218:	18056610 	stmdane	r5, {r4, r9, sl, sp, lr}
    821c:	13054c69 	movwne	r4, #23657	; 0x5c69
    8220:	9f18059f 	svcls	0x0018059f
    8224:	059f1005 	ldreq	r1, [pc, #5]	; 8231 <errno+0x822d>
    8228:	1805672d 	stmdane	r5, {r0, r2, r3, r5, r8, r9, sl, sp, lr}
    822c:	671305bd 			; <UNDEFINED> instruction: 0x671305bd
    8230:	059f1805 	ldreq	r1, [pc, #2053]	; 8a3d <errno+0x8a39>
    8234:	2d059f10 	stccs	15, cr9, [r5, #-64]	; 0xffffffc0
    8238:	a40c0567 	strge	r0, [ip], #-1383	; 0xfffffa99
    823c:	02002805 	andeq	r2, r0, #327680	; 0x50000
    8240:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    8244:	2705671b 	smladcs	r5, fp, r7, r6
    8248:	4a21054b 	bmi	84977c <__bss_end__+0x700734>
    824c:	054b1305 	strbeq	r1, [fp, #-773]	; 0xfffffcfb
    8250:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    8254:	0d056601 	stceq	6, cr6, [r5, #-4]
    8258:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
    825c:	069e0601 	ldreq	r0, [lr], r1, lsl #12
    8260:	02009208 	andeq	r9, r0, #8, 4	; 0x80000000
    8264:	9e060104 	adflss	f0, f6, f4
    8268:	08061405 	stmdaeq	r6, {r0, r2, sl, ip}
    826c:	4d150575 	cfldr32mi	mvfx0, [r5, #-468]	; 0xfffffe2c
    8270:	c9080c05 	stmdbgt	r8, {r0, r2, sl, fp}
    8274:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    8278:	4a54032a 	bmi	1508f28 <__bss_end__+0x13bfee0>
    827c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    8280:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    8284:	8230030c 	eorshi	r0, r0, #12, 6	; 0x30000000
    8288:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    828c:	022f0104 	eoreq	r0, pc, #4, 2
    8290:	01010006 	tsteq	r1, r6
    8294:	00000397 	muleq	r0, r7, r3
    8298:	02b20003 	adcseq	r0, r2, #3
    829c:	01020000 	mrseq	r0, (UNDEF: 2)
    82a0:	000d0efb 	strdeq	r0, [sp], -fp
    82a4:	01010101 	tsteq	r1, r1, lsl #2
    82a8:	01000000 	mrseq	r0, (UNDEF: 0)
    82ac:	2f010000 	svccs	0x00010000
    82b0:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    82b4:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    82b8:	6f647679 	svcvs	0x00647679
    82bc:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    82c0:	2f346c65 	svccs	0x00346c65
    82c4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    82c8:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    82cc:	6169726f 	cmnvs	r9, pc, ror #4
    82d0:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    82d4:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    82d8:	2f747365 	svccs	0x00747365
    82dc:	6a6f7270 	bvs	1be4ca4 <__bss_end__+0x1a9bc5c>
    82e0:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    82e4:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    82e8:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    82ec:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 816c <errno+0x8168>
    82f0:	64666269 	strbtvs	r6, [r6], #-617	; 0xfffffd97
    82f4:	002e2f74 	eoreq	r2, lr, r4, ror pc
    82f8:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 8244 <errno+0x8240>
    82fc:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    8300:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    8304:	2f676e6f 	svccs	0x00676e6f
    8308:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    830c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    8310:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    8314:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    8318:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    831c:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    8320:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    8324:	6f72702f 	svcvs	0x0072702f
    8328:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    832c:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    8330:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    8334:	2f736269 	svccs	0x00736269
    8338:	7062696c 	rsbvc	r6, r2, ip, ror #18
    833c:	7374616c 	cmnvc	r4, #108, 2
    8340:	6f707075 	svcvs	0x00707075
    8344:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    8348:	612f6372 			; <UNDEFINED> instruction: 0x612f6372
    834c:	2f686372 	svccs	0x00686372
    8350:	2f6d7261 	svccs	0x006d7261
    8354:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
    8358:	2f706968 	svccs	0x00706968
    835c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8360:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8364:	6f682f00 	svcvs	0x00682f00
    8368:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    836c:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    8370:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    8374:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    8378:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    837c:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    8380:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    8384:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    8388:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    838c:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    8390:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    8394:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    8398:	752f7374 	strvc	r7, [pc, #-884]!	; 802c <errno+0x8028>
    839c:	5f6c6974 	svcpl	0x006c6974
    83a0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    83a4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    83a8:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    83ac:	70707573 	rsbsvc	r7, r0, r3, ror r5
    83b0:	2f74726f 	svccs	0x0074726f
    83b4:	2f637273 	svccs	0x00637273
    83b8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    83bc:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    83c0:	7172692f 	cmnvc	r2, pc, lsr #18
    83c4:	70696863 	rsbvc	r6, r9, r3, ror #16
    83c8:	73756d00 	cmnvc	r5, #0, 26
    83cc:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    83d0:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    83d4:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    83d8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    83dc:	6174732f 	cmnvs	r4, pc, lsr #6
    83e0:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    83e4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    83e8:	622f6564 	eorvs	r6, pc, #100, 10	; 0x19000000
    83ec:	00737469 	rsbseq	r7, r3, r9, ror #8
    83f0:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    83f4:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    83f8:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    83fc:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    8400:	2f706d65 	svccs	0x00706d65
    8404:	67617473 			; <UNDEFINED> instruction: 0x67617473
    8408:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    840c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8410:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
    8414:	2f656d6f 	svccs	0x00656d6f
    8418:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    841c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    8420:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    8424:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    8428:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    842c:	6f747574 	svcvs	0x00747574
    8430:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    8434:	616d2d73 	smcvs	53971	; 0xd2d3
    8438:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    843c:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    8440:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    8444:	2f737463 	svccs	0x00737463
    8448:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    844c:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    8450:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    8454:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    8458:	692f736c 	stmdbvs	pc!, {r2, r3, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
    845c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8460:	752f6564 	strvc	r6, [pc, #-1380]!	; 7f04 <errno+0x7f00>
    8464:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    8468:	6f682f00 	svcvs	0x00682f00
    846c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    8470:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    8474:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    8478:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    847c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    8480:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    8484:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    8488:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    848c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    8490:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    8494:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    8498:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    849c:	752f7374 	strvc	r7, [pc, #-884]!	; 8130 <errno+0x812c>
    84a0:	5f6c6974 	svcpl	0x006c6974
    84a4:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    84a8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    84ac:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    84b0:	70707573 	rsbsvc	r7, r0, r3, ror r5
    84b4:	2f74726f 	svccs	0x0074726f
    84b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    84bc:	2f656475 	svccs	0x00656475
    84c0:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    84c4:	70707573 	rsbsvc	r7, r0, r3, ror r5
    84c8:	0074726f 	rsbseq	r7, r4, pc, ror #4
    84cc:	62696c00 	rsbvs	r6, r9, #0, 24
    84d0:	5f746466 	svcpl	0x00746466
    84d4:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
    84d8:	00010068 	andeq	r0, r1, r8, rrx
    84dc:	62696c00 	rsbvs	r6, r9, #0, 24
    84e0:	2e746466 	cdpcs	4, 7, cr6, cr4, cr6, {3}
    84e4:	00010068 	andeq	r0, r1, r8, rrx
    84e8:	71726900 	cmnvc	r2, r0, lsl #18
    84ec:	70696863 	rsbvc	r6, r9, r3, ror #16
    84f0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    84f4:	6d6f0000 	stclvs	0, cr0, [pc, #-0]	; 84fc <errno+0x84f8>
    84f8:	2e337061 	cdpcs	0, 3, cr7, cr3, cr1, {3}
    84fc:	00030063 	andeq	r0, r3, r3, rrx
    8500:	6c6c6100 	stfvse	f6, [ip], #-0
    8504:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    8508:	00682e73 	rsbeq	r2, r8, r3, ror lr
    850c:	73000004 	movwvc	r0, #4
    8510:	6f696474 	svcvs	0x00696474
    8514:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    8518:	667a0000 	ldrbtvs	r0, [sl], -r0
    851c:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    8520:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8524:	72650000 	rsbvc	r0, r5, #0
    8528:	2e6f6e72 	mcrcs	14, 3, r6, cr15, cr2, {3}
    852c:	00050068 	andeq	r0, r5, r8, rrx
    8530:	71726900 	cmnvc	r2, r0, lsl #18
    8534:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    8538:	6e750000 	cdpvs	0, 7, cr0, cr5, cr0, {0}
    853c:	64747369 	ldrbtvs	r7, [r4], #-873	; 0xfffffc97
    8540:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    8544:	64660000 	strbtvs	r0, [r6], #-0
    8548:	00682e74 	rsbeq	r2, r8, r4, ror lr
    854c:	00000007 	andeq	r0, r0, r7
    8550:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8554:	01a2bc02 			; <UNDEFINED> instruction: 0x01a2bc02
    8558:	00de0300 	sbcseq	r0, lr, r0, lsl #6
    855c:	831d0501 	tsthi	sp, #4194304	; 0x400000
    8560:	e4080905 	str	r0, [r8], #-2309	; 0xfffff6fb
    8564:	042f0105 	strteq	r0, [pc], #-261	; 856c <errno+0x8568>
    8568:	00c70302 	sbceq	r0, r7, r2, lsl #6
    856c:	85020582 	strhi	r0, [r2, #-1410]	; 0xfffffa7e
    8570:	059f0905 	ldreq	r0, [pc, #2309]	; 8e7d <errno+0x8e79>
    8574:	03048301 	movweq	r8, #17153	; 0x4301
    8578:	667f9103 	ldrbtvs	r9, [pc], -r3, lsl #2
    857c:	00d70505 	sbcseq	r0, r7, r5, lsl #10
    8580:	06020402 	streq	r0, [r2], -r2, lsl #8
    8584:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    8588:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    858c:	009e0404 	addseq	r0, lr, r4, lsl #8
    8590:	08060402 	stmdaeq	r6, {r1, sl}
    8594:	062305c8 	strteq	r0, [r3], -r8, asr #11
    8598:	d70805f3 			; <UNDEFINED> instruction: 0xd70805f3
    859c:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
    85a0:	17056710 	smladne	r5, r0, r7, r6
    85a4:	d708054d 	strle	r0, [r8, -sp, asr #10]
    85a8:	05671605 	strbeq	r1, [r7, #-1541]!	; 0xfffff9fb
    85ac:	0c056710 	stceq	7, cr6, [r5], {16}
    85b0:	2f01054d 	svccs	0x0001054d
    85b4:	45030404 	strmi	r0, [r3, #-1028]	; 0xfffffbfc
    85b8:	d70a0566 	strle	r0, [sl, -r6, ror #10]
    85bc:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    85c0:	05054b23 	streq	r4, [r5, #-2851]	; 0xfffff4dd
    85c4:	040200bb 	streq	r0, [r2], #-187	; 0xffffff45
    85c8:	05660602 	strbeq	r0, [r6, #-1538]!	; 0xfffff9fe
    85cc:	04020009 	streq	r0, [r2], #-9
    85d0:	05f30601 	ldrbeq	r0, [r3, #1537]!	; 0x601
    85d4:	04020008 	streq	r0, [r2], #-8
    85d8:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    85dc:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    85e0:	059e0601 	ldreq	r0, [lr, #1537]	; 0x601
    85e4:	75080610 	strvc	r0, [r8, #-1552]	; 0xfffff9f0
    85e8:	054c2705 	strbeq	r2, [ip, #-1797]	; 0xfffff8fb
    85ec:	05054a10 	streq	r4, [r5, #-2576]	; 0xfffff5f0
    85f0:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    85f4:	05660602 	strbeq	r0, [r6, #-1538]!	; 0xfffff9fe
    85f8:	0402000e 	streq	r0, [r2], #-14
    85fc:	05f30601 	ldrbeq	r0, [r3, #1537]!	; 0x601
    8600:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    8604:	053c0801 	ldreq	r0, [ip, #-2049]!	; 0xfffff7ff
    8608:	0402000e 	streq	r0, [r2], #-14
    860c:	11056601 	tstne	r5, r1, lsl #12
    8610:	01040200 	mrseq	r0, R12_usr
    8614:	0008052f 	andeq	r0, r8, pc, lsr #10
    8618:	08010402 	stmdaeq	r1, {r1, sl}
    861c:	671005c9 	ldrvs	r0, [r0, -r9, asr #11]
    8620:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    8624:	04020001 	streq	r0, [r2], #-1
    8628:	06022f01 	streq	r2, [r2], -r1, lsl #30
    862c:	c0010100 	andgt	r0, r1, r0, lsl #2
    8630:	03000002 	movweq	r0, #2
    8634:	00024d00 	andeq	r4, r2, r0, lsl #26
    8638:	fb010200 	blx	48e42 <bootinfo+0x3c2>
    863c:	01000d0e 	tsteq	r0, lr, lsl #26
    8640:	00010101 	andeq	r0, r1, r1, lsl #2
    8644:	00010000 	andeq	r0, r1, r0
    8648:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    864c:	2f656d6f 	svccs	0x00656d6f
    8650:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    8654:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    8658:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    865c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    8660:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    8664:	6f747574 	svcvs	0x00747574
    8668:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    866c:	616d2d73 	smcvs	53971	; 0xd2d3
    8670:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    8674:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    8678:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    867c:	2f737463 	svccs	0x00737463
    8680:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    8684:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    8688:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    868c:	616c7062 	cmnvs	ip, r2, rrx
    8690:	70757374 	rsbsvc	r7, r5, r4, ror r3
    8694:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    8698:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    869c:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    86a0:	72612f68 	rsbvc	r2, r1, #104, 30	; 0x1a0
    86a4:	72692f6d 	rsbvc	r2, r9, #436	; 0x1b4
    86a8:	69686371 	stmdbvs	r8!, {r0, r4, r5, r6, r8, r9, sp, lr}^
    86ac:	756d0070 	strbvc	r0, [sp, #-112]!	; 0xffffff90
    86b0:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    86b4:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    86b8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    86bc:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    86c0:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    86c4:	2f656761 	svccs	0x00656761
    86c8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    86cc:	2f656475 	svccs	0x00656475
    86d0:	73746962 	cmnvc	r4, #1605632	; 0x188000
    86d4:	73756d00 	cmnvc	r5, #0, 26
    86d8:	62696c6c 	rsbvs	r6, r9, #108, 24	; 0x6c00
    86dc:	75622f63 	strbvc	r2, [r2, #-3939]!	; 0xfffff09d
    86e0:	2d646c69 	stclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    86e4:	706d6574 	rsbvc	r6, sp, r4, ror r5
    86e8:	6174732f 	cmnvs	r4, pc, lsr #6
    86ec:	692f6567 	stmdbvs	pc!, {r0, r1, r2, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    86f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    86f4:	2f006564 	svccs	0x00006564
    86f8:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    86fc:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    8700:	6f647679 	svcvs	0x00647679
    8704:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    8708:	2f346c65 	svccs	0x00346c65
    870c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    8710:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    8714:	6169726f 	cmnvs	r9, pc, ror #4
    8718:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    871c:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    8720:	2f747365 	svccs	0x00747365
    8724:	6a6f7270 	bvs	1be50ec <__bss_end__+0x1a9c0a4>
    8728:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    872c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    8730:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    8734:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 85b4 <errno+0x85b0>
    8738:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    873c:	2f736c69 	svccs	0x00736c69
    8740:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    8744:	2f656475 	svccs	0x00656475
    8748:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    874c:	682f0073 	stmdavs	pc!, {r0, r1, r4, r5, r6}	; <UNPREDICTABLE>
    8750:	2f656d6f 	svccs	0x00656d6f
    8754:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    8758:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    875c:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    8760:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    8764:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    8768:	6f747574 	svcvs	0x00747574
    876c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    8770:	616d2d73 	smcvs	53971	; 0xd2d3
    8774:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    8778:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    877c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    8780:	2f737463 	svccs	0x00737463
    8784:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    8788:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    878c:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    8790:	616c7062 	cmnvs	ip, r2, rrx
    8794:	70757374 	rsbsvc	r7, r5, r4, ror r3
    8798:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    879c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    87a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    87a4:	616c702f 	cmnvs	ip, pc, lsr #32
    87a8:	70757374 	rsbsvc	r7, r5, r4, ror r3
    87ac:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    87b0:	6f682f00 	svcvs	0x00682f00
    87b4:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    87b8:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    87bc:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    87c0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    87c4:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    87c8:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    87cc:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    87d0:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    87d4:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    87d8:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    87dc:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    87e0:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    87e4:	752f7374 	strvc	r7, [pc, #-884]!	; 8478 <errno+0x8474>
    87e8:	5f6c6974 	svcpl	0x006c6974
    87ec:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    87f0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    87f4:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    87f8:	70707573 	rsbsvc	r7, r0, r3, ror r5
    87fc:	2f74726f 	svccs	0x0074726f
    8800:	2f637273 	svccs	0x00637273
    8804:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    8808:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    880c:	7172692f 	cmnvc	r2, pc, lsr #18
    8810:	70696863 	rsbvc	r6, r9, r3, ror #16
    8814:	2f2e2e2f 	svccs	0x002e2e2f
    8818:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    881c:	7400002e 	strvc	r0, [r0], #-46	; 0xffffffd2
    8820:	61726765 	cmnvs	r2, r5, ror #14
    8824:	0100632e 	tsteq	r0, lr, lsr #6
    8828:	6c610000 	stclvs	0, cr0, [r1], #-0
    882c:	7079746c 	rsbsvc	r7, r9, ip, ror #8
    8830:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    8834:	00000200 	andeq	r0, r0, r0, lsl #4
    8838:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    883c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    8840:	7a000003 	bvc	8854 <errno+0x8850>
    8844:	6f6c5f66 	svcvs	0x006c5f66
    8848:	00682e67 	rsbeq	r2, r8, r7, ror #28
    884c:	65000004 	strvs	r0, [r0, #-4]
    8850:	6f6e7272 	svcvs	0x006e7272
    8854:	0300682e 	movweq	r6, #2094	; 0x82e
    8858:	72690000 	rsbvc	r0, r9, #0
    885c:	00682e71 	rsbeq	r2, r8, r1, ror lr
    8860:	75000005 	strvc	r0, [r0, #-5]
    8864:	7473696e 	ldrbtvc	r6, [r3], #-2414	; 0xfffff692
    8868:	00682e64 	rsbeq	r2, r8, r4, ror #28
    886c:	66000003 	strvs	r0, [r0], -r3
    8870:	682e7464 	stmdavs	lr!, {r2, r5, r6, sl, ip, sp, lr}
    8874:	00000500 	andeq	r0, r0, r0, lsl #10
    8878:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
    887c:	2e706968 	vsubcs.f16	s13, s0, s17	; <UNPREDICTABLE>
    8880:	00060068 	andeq	r0, r6, r8, rrx
    8884:	01050000 	mrseq	r0, (UNDEF: 5)
    8888:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
    888c:	030001a6 	movweq	r0, #422	; 0x1a6
    8890:	19050119 	stmdbne	r5, {r0, r3, r4, r8}
    8894:	660505db 			; <UNDEFINED> instruction: 0x660505db
    8898:	052f2705 	streq	r2, [pc, #-1797]!	; 819b <errno+0x8197>
    889c:	09054a15 	stmdbeq	r5, {r0, r2, r4, r9, fp, lr}
    88a0:	3025054a 	eorcc	r0, r5, sl, asr #10
    88a4:	4b9e1405 	blmi	fe78d8c0 <__bss_end__+0xfe644878>
    88a8:	05a01105 	streq	r1, [r0, #261]!	; 0x105
    88ac:	1905f210 	stmdbne	r5, {r4, r9, ip, sp, lr, pc}
    88b0:	4a22054b 	bmi	889de4 <__bss_end__+0x740d9c>
    88b4:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    88b8:	0402006a 	streq	r0, [r2], #-106	; 0xffffff96
    88bc:	087a0302 	ldmdaeq	sl!, {r1, r8, r9}^
    88c0:	00430520 	subeq	r0, r3, r0, lsr #10
    88c4:	66010402 	strvs	r0, [r1], -r2, lsl #8
    88c8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    88cc:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    88d0:	0402005f 	streq	r0, [r2], #-95	; 0xffffffa1
    88d4:	05054902 	streq	r4, [r5, #-2306]	; 0xfffff6fe
    88d8:	01040200 	mrseq	r0, R12_usr
    88dc:	9e0b0366 	cdpls	3, 0, cr0, cr11, cr6, {3}
    88e0:	01040200 	mrseq	r0, R12_usr
    88e4:	0c059e06 	stceq	14, cr9, [r5], {6}
    88e8:	05750806 	ldrbeq	r0, [r5, #-2054]!	; 0xfffff7fa
    88ec:	06022f01 	streq	r2, [r2], -r1, lsl #30
    88f0:	da010100 	ble	48cf8 <bootinfo+0x278>
    88f4:	03000009 	movweq	r0, #9
    88f8:	00011e00 	andeq	r1, r1, r0, lsl #28
    88fc:	fb010200 	blx	49106 <morecore_area+0x106>
    8900:	01000d0e 	tsteq	r0, lr, lsl #26
    8904:	00010101 	andeq	r0, r1, r1, lsl #2
    8908:	00010000 	andeq	r0, r1, r0
    890c:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    8910:	2f656d6f 	svccs	0x00656d6f
    8914:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    8918:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    891c:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    8920:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    8924:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    8928:	6f747574 	svcvs	0x00747574
    892c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    8930:	616d2d73 	smcvs	53971	; 0xd2d3
    8934:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    8938:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    893c:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    8940:	2f737463 	svccs	0x00737463
    8944:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    8948:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    894c:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    8950:	74646662 	strbtvc	r6, [r4], #-1634	; 0xfffff99e
    8954:	6f682f00 	svcvs	0x00682f00
    8958:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    895c:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    8960:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    8964:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    8968:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    896c:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    8970:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    8974:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    8978:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    897c:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    8980:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    8984:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    8988:	752f7374 	strvc	r7, [pc, #-884]!	; 861c <errno+0x8618>
    898c:	5f6c6974 	svcpl	0x006c6974
    8990:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    8994:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    8998:	2f746466 	svccs	0x00746466
    899c:	756d002e 	strbvc	r0, [sp, #-46]!	; 0xffffffd2
    89a0:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    89a4:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    89a8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    89ac:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    89b0:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    89b4:	2f656761 	svccs	0x00656761
    89b8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    89bc:	2f656475 	svccs	0x00656475
    89c0:	73746962 	cmnvc	r4, #1605632	; 0x188000
    89c4:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    89c8:	74646662 	strbtvc	r6, [r4], #-1634	; 0xfffff99e
    89cc:	766e655f 			; <UNDEFINED> instruction: 0x766e655f
    89d0:	0100682e 	tsteq	r0, lr, lsr #16
    89d4:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    89d8:	74646662 	strbtvc	r6, [r4], #-1634	; 0xfffff99e
    89dc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    89e0:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    89e4:	74646662 	strbtvc	r6, [r4], #-1634	; 0xfffff99e
    89e8:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    89ec:	616e7265 	cmnvs	lr, r5, ror #4
    89f0:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    89f4:	66000001 	strvs	r0, [r0], -r1
    89f8:	725f7464 	subsvc	r7, pc, #100, 8	; 0x64000000
    89fc:	00632e6f 	rsbeq	r2, r3, pc, ror #28
    8a00:	61000001 	tstvs	r0, r1
    8a04:	79746c6c 	ldmdbvc	r4!, {r2, r3, r5, r6, sl, fp, sp, lr}^
    8a08:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    8a0c:	00030068 	andeq	r0, r3, r8, rrx
    8a10:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    8a14:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8a18:	05000000 	streq	r0, [r0, #-0]
    8a1c:	02050001 	andeq	r0, r5, #1
    8a20:	0001a77c 	andeq	sl, r1, ip, ror r7
    8a24:	0100de03 	tsteq	r0, r3, lsl #28
    8a28:	05831d05 	streq	r1, [r3, #3333]	; 0xd05
    8a2c:	05e40809 	strbeq	r0, [r4, #2057]!	; 0x809
    8a30:	05892f01 	streq	r2, [r9, #3841]	; 0xf01
    8a34:	0905831d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, pc}
    8a38:	1201c202 	andne	ip, r1, #536870912	; 0x20000000
    8a3c:	04d70105 	ldrbeq	r0, [r7], #261	; 0x105
    8a40:	823e0302 	eorshi	r0, lr, #134217728	; 0x8000000
    8a44:	05850205 	streq	r0, [r5, #517]	; 0x205
    8a48:	01059f09 	tsteq	r5, r9, lsl #30
    8a4c:	02056983 	andeq	r6, r5, #2146304	; 0x20c000
    8a50:	9f090585 	svcls	0x00090585
    8a54:	04bb0105 	ldrteq	r0, [fp], #261	; 0x105
    8a58:	7f960303 	svcvc	0x00960303
    8a5c:	9f1d0582 	svcls	0x001d0582
    8a60:	059e3405 	ldreq	r3, [lr, #1029]	; 0x405
    8a64:	056e8301 	strbeq	r8, [lr, #-769]!	; 0xfffffcff
    8a68:	2205a118 	andcs	sl, r5, #24, 2
    8a6c:	6a13059c 	bvs	4ca0e4 <__bss_end__+0x38109c>
    8a70:	04830105 	streq	r0, [r3], #261	; 0x105
    8a74:	66630304 	strbtvs	r0, [r3], -r4, lsl #6
    8a78:	05d81205 	ldrbeq	r1, [r8, #517]	; 0x205
    8a7c:	1105bc05 	tstne	r5, r5, lsl #24
    8a80:	01040200 	mrseq	r0, R12_usr
    8a84:	00090566 	andeq	r0, r9, r6, ror #10
    8a88:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    8a8c:	05680a05 	strbeq	r0, [r8, #-2565]!	; 0xfffff5fb
    8a90:	05054c06 	streq	r4, [r5, #-3078]	; 0xfffff3fa
    8a94:	4b0a05ba 	blmi	28a184 <__bss_end__+0x14113c>
    8a98:	054c0705 	strbeq	r0, [ip, #-1797]	; 0xfffff8fb
    8a9c:	0a058205 	beq	1692b8 <__bss_end__+0x20270>
    8aa0:	4b0c054b 	blmi	309fd4 <__bss_end__+0x1c0f8c>
    8aa4:	05ba0a05 	ldreq	r0, [sl, #2565]!	; 0xa05
    8aa8:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    8aac:	20054a01 	andcs	r4, r5, r1, lsl #20
    8ab0:	01040200 	mrseq	r0, R12_usr
    8ab4:	4b0a0582 	blmi	28a0c4 <__bss_end__+0x14107c>
    8ab8:	0001054c 	andeq	r0, r1, ip, asr #10
    8abc:	2f010402 	svccs	0x00010402
    8ac0:	bb230569 	bllt	8ca06c <__bss_end__+0x781024>
    8ac4:	059e2105 	ldreq	r2, [lr, #261]	; 0x105
    8ac8:	08052e0b 	stmdaeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    8acc:	6705054f 	strvs	r0, [r5, -pc, asr #10]
    8ad0:	05690605 	strbeq	r0, [r9, #-1541]!	; 0xfffff9fb
    8ad4:	05054b13 	streq	r4, [r5, #-2835]	; 0xfffff4ed
    8ad8:	6808059e 	stmdavs	r8, {r1, r2, r3, r4, r7, r8, sl}
    8adc:	689e0605 	ldmvs	lr, {r0, r2, r9, sl}
    8ae0:	05820505 	streq	r0, [r2, #1285]	; 0x505
    8ae4:	07058306 	streq	r8, [r5, -r6, lsl #6]
    8ae8:	9e060568 	cfsh32ls	mvfx0, mvfx6, #56
    8aec:	054b1505 	strbeq	r1, [fp, #-1285]	; 0xfffffafb
    8af0:	07059e12 	smladeq	r5, r2, lr, r9
    8af4:	4c09052e 	cfstr32mi	mvfx0, [r9], {46}	; 0x2e
    8af8:	059e2205 	ldreq	r2, [lr, #517]	; 0x205
    8afc:	0b054a07 	bleq	15b320 <__bss_end__+0x122d8>
    8b00:	9e240567 	cfsh64ls	mvdx0, mvdx4, #55
    8b04:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    8b08:	0c05680d 	stceq	8, cr6, [r5], {13}
    8b0c:	83060582 	movwhi	r0, #25986	; 0x6582
    8b10:	05671805 	strbeq	r1, [r7, #-2053]!	; 0xfffff7fb
    8b14:	15059e17 	strne	r9, [r5, #-3607]	; 0xfffff1e9
    8b18:	2e07052e 	cfsh32cs	mvfx0, mvfx7, #30
    8b1c:	054c0805 	strbeq	r0, [ip, #-2053]	; 0xfffff7fb
    8b20:	0a056606 	beq	162340 <__bss_end__+0x192f8>
    8b24:	4a080567 	bmi	20a0c8 <__bss_end__+0xc1080>
    8b28:	054c0705 	strbeq	r0, [ip, #-1797]	; 0xfffff8fb
    8b2c:	04054b03 	streq	r4, [r5], #-2819	; 0xfffff4fd
    8b30:	83060531 	movwhi	r0, #25905	; 0x6531
    8b34:	059f0505 	ldreq	r0, [pc, #1285]	; 9041 <errno+0x903d>
    8b38:	03056807 	movweq	r6, #22535	; 0x5807
    8b3c:	3105054b 	tstcc	r5, fp, asr #10
    8b40:	05670d05 	strbeq	r0, [r7, #-3333]!	; 0xfffff2fb
    8b44:	054b6609 	strbeq	r6, [fp, #-1545]	; 0xfffff9f7
    8b48:	4a5b0303 	bmi	16c975c <__bss_end__+0x1580714>
    8b4c:	4f04054e 	svcmi	0x0004054e
    8b50:	054d0505 	strbeq	r0, [sp, #-1285]	; 0xfffffafb
    8b54:	05055104 	streq	r5, [r5, #-260]	; 0xfffffefc
    8b58:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    8b5c:	05676709 	strbeq	r6, [r7, #-1801]!	; 0xfffff8f7
    8b60:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    8b64:	01059f09 	tsteq	r5, r9, lsl #30
    8b68:	12056a9f 	andne	r6, r5, #651264	; 0x9f000
    8b6c:	bc1c05d8 	cfldr32lt	mvfx0, [ip], {216}	; 0xd8
    8b70:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    8b74:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    8b78:	0402000b 	streq	r0, [r2], #-11
    8b7c:	20052e01 	andcs	r2, r5, r1, lsl #28
    8b80:	03040200 	movweq	r0, #16896	; 0x4200
    8b84:	001c0566 	andseq	r0, ip, r6, ror #10
    8b88:	ba030402 	blt	c9b98 <morecore_area+0x80b98>
    8b8c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    8b90:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    8b94:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    8b98:	692f0601 	stmdbvs	pc!, {r0, r9, sl}	; <UNPREDICTABLE>
    8b9c:	05830b05 	streq	r0, [r3, #2821]	; 0xb05
    8ba0:	06054d10 			; <UNDEFINED> instruction: 0x06054d10
    8ba4:	670b05a2 	strvs	r0, [fp, -r2, lsr #11]
    8ba8:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    8bac:	0d05670b 	stceq	7, cr6, [r5, #-44]	; 0xffffffd4
    8bb0:	8306054c 	movwhi	r0, #25932	; 0x654c
    8bb4:	83100569 	tsthi	r0, #440401920	; 0x1a400000
    8bb8:	05630405 	strbeq	r0, [r3, #-1029]!	; 0xfffffbfb
    8bbc:	2e750310 	mrccs	3, 3, r0, cr5, cr0, {0}
    8bc0:	059e3205 	ldreq	r3, [lr, #517]	; 0x205
    8bc4:	2e120301 	cdpcs	3, 1, cr0, cr2, cr1, {0}
    8bc8:	9f110569 	svcls	0x00110569
    8bcc:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    8bd0:	2a052f12 	bcs	154820 <__bss_end__+0xb7d8>
    8bd4:	4a06059e 	bmi	18a254 <__bss_end__+0x4120c>
    8bd8:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
    8bdc:	05059e10 	streq	r9, [r5, #-3600]	; 0xfffff1f0
    8be0:	4b0a052e 	blmi	28a0a0 <__bss_end__+0x141058>
    8be4:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    8be8:	10059e25 	andne	r9, r5, r5, lsr #28
    8bec:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
    8bf0:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
    8bf4:	01054b09 	tsteq	r5, r9, lsl #22
    8bf8:	02056983 	andeq	r6, r5, #2146304	; 0x20c000
    8bfc:	040200d9 	streq	r0, [r2], #-217	; 0xffffff27
    8c00:	05ba0601 	ldreq	r0, [sl, #1537]!	; 0x601
    8c04:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    8c08:	0a058305 	beq	169824 <__bss_end__+0x207dc>
    8c0c:	4c0d0567 	cfstr32mi	mvfx0, [sp], {103}	; 0x67
    8c10:	059e0b05 	ldreq	r0, [lr, #2821]	; 0xb05
    8c14:	08054b0a 	stmdaeq	r5, {r1, r3, r8, r9, fp, lr}
    8c18:	4b0905ba 	blmi	24a308 <__bss_end__+0x1012c0>
    8c1c:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
    8c20:	05860905 	streq	r0, [r6, #2309]	; 0x905
    8c24:	07054a02 	streq	r4, [r5, -r2, lsl #20]
    8c28:	ba06052f 	blt	18a0ec <__bss_end__+0x410a4>
    8c2c:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    8c30:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    8c34:	14054802 	strne	r4, [r5], #-2050	; 0xfffff7fe
    8c38:	01040200 	mrseq	r0, R12_usr
    8c3c:	00020566 	andeq	r0, r2, r6, ror #10
    8c40:	82010402 	andhi	r0, r1, #33554432	; 0x2000000
    8c44:	056a0905 	strbeq	r0, [sl, #-2309]!	; 0xfffff6fb
    8c48:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    8c4c:	0305a309 	movweq	sl, #21257	; 0x5309
    8c50:	bc1305bc 	cfldr32lt	mvfx0, [r3], {188}	; 0xbc
    8c54:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    8c58:	054c4b0c 	strbeq	r4, [ip, #-2828]	; 0xfffff4f4
    8c5c:	0a054d0b 	beq	15c090 <__bss_end__+0x13048>
    8c60:	4b02054c 	blmi	8a198 <morecore_area+0x41198>
    8c64:	05680905 	strbeq	r0, [r8, #-2309]!	; 0xfffff6fb
    8c68:	04020001 	streq	r0, [r2], #-1
    8c6c:	056a2f01 	strbeq	r2, [sl, #-3841]!	; 0xfffff0ff
    8c70:	0200d902 	andeq	sp, r0, #32768	; 0x8000
    8c74:	ba060104 	blt	18908c <__bss_end__+0x40044>
    8c78:	4c060d05 	stcmi	13, cr0, [r6], {5}
    8c7c:	054a0205 	strbeq	r0, [sl, #-517]	; 0xfffffdfb
    8c80:	0605310e 	streq	r3, [r5], -lr, lsl #2
    8c84:	4b0a052e 	blmi	28a144 <__bss_end__+0x1410fc>
    8c88:	05ba0705 	ldreq	r0, [sl, #1797]!	; 0x705
    8c8c:	10054b0b 	andne	r4, r5, fp, lsl #22
    8c90:	00020547 	andeq	r0, r2, r7, asr #10
    8c94:	b8010402 	stmdalt	r1, {r1, sl}
    8c98:	05671f05 	strbeq	r1, [r7, #-3845]!	; 0xfffff0fb
    8c9c:	0c052e15 	stceq	14, cr2, [r5], {21}
    8ca0:	2e050550 	cfrshl32cs	mvfx5, mvfx0, r0
    8ca4:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
    8ca8:	01054b09 	tsteq	r5, r9, lsl #22
    8cac:	01040200 	mrseq	r0, R12_usr
    8cb0:	3d056a2f 	vstrcc	s12, [r5, #-188]	; 0xffffff44
    8cb4:	660905bb 			; <UNDEFINED> instruction: 0x660905bb
    8cb8:	699f0105 	ldmibvs	pc, {r0, r2, r8}	; <UNPREDICTABLE>
    8cbc:	05bb1905 	ldreq	r1, [fp, #2309]!	; 0x905
    8cc0:	05672e0e 	strbeq	r2, [r7, #-3598]!	; 0xfffff1f2
    8cc4:	02054b06 	andeq	r4, r5, #6144	; 0x1800
    8cc8:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
    8ccc:	05ba0601 	ldreq	r0, [sl, #1537]!	; 0x601
    8cd0:	054d0606 	strbeq	r0, [sp, #-1542]	; 0xfffff9fa
    8cd4:	29054a05 	stmdbcs	r5, {r0, r2, r9, fp, lr}
    8cd8:	6613054b 	ldrvs	r0, [r3], -fp, asr #10
    8cdc:	67a00605 	strvs	r0, [r0, r5, lsl #12]!
    8ce0:	054c0705 	strbeq	r0, [ip, #-1797]	; 0xfffff8fb
    8ce4:	0b05f306 	bleq	185904 <__bss_end__+0x3c8bc>
    8ce8:	4b0c0567 	blmi	30a28c <__bss_end__+0x1c1244>
    8cec:	05840505 	streq	r0, [r4, #1285]	; 0x505
    8cf0:	05054d08 	streq	r4, [r5, #-3336]	; 0xfffff2f8
    8cf4:	67070532 	smladxvs	r7, r2, r5, r0
    8cf8:	05830c05 	streq	r0, [r3, #3077]	; 0xc05
    8cfc:	0905470a 	stmdbeq	r5, {r1, r3, r8, r9, sl, lr}
    8d00:	4f1a054a 	svcmi	0x001a054a
    8d04:	05660705 	strbeq	r0, [r6, #-1797]!	; 0xfffff8fb
    8d08:	05679f06 	strbeq	r9, [r7, #-3846]!	; 0xfffff0fa
    8d0c:	06054c0c 	streq	r4, [r5], -ip, lsl #24
    8d10:	670b05f3 			; <UNDEFINED> instruction: 0x670b05f3
    8d14:	054c0505 	strbeq	r0, [ip, #-1285]	; 0xfffffafb
    8d18:	4a700308 	bmi	1c09940 <__bss_end__+0x1ac08f8>
    8d1c:	13030905 	movwne	r0, #14597	; 0x3905
    8d20:	2f010582 	svccs	0x00010582
    8d24:	9f2c0569 	svcls	0x002c0569
    8d28:	05660905 	strbeq	r0, [r6, #-2309]!	; 0xfffff6fb
    8d2c:	05699f01 	strbeq	r9, [r9, #-3841]!	; 0xfffff0ff
    8d30:	0e05bb25 	vmlaeq.f64	d11, d5, d21
    8d34:	66050586 	strvs	r0, [r5], -r6, lsl #11
    8d38:	05671105 	strbeq	r1, [r7, #-261]!	; 0xfffffefb
    8d3c:	0a058206 	beq	16955c <__bss_end__+0x20514>
    8d40:	68060569 	stmdavs	r6, {r0, r3, r5, r6, r8, sl}
    8d44:	059e0505 	ldreq	r0, [lr, #1285]	; 0x505
    8d48:	0605510a 	streq	r5, [r5], -sl, lsl #2
    8d4c:	67080583 	strvs	r0, [r8, -r3, lsl #11]
    8d50:	054b0405 	strbeq	r0, [fp, #-1029]	; 0xfffffbfb
    8d54:	0505300b 	streq	r3, [r5, #-11]
    8d58:	670a0569 	strvs	r0, [sl, -r9, ror #10]
    8d5c:	05820805 	streq	r0, [r2, #2053]	; 0x805
    8d60:	04054c09 	streq	r4, [r5], #-3081	; 0xfffff3f7
    8d64:	054a6a03 	strbeq	r6, [sl, #-2563]	; 0xfffff5fd
    8d68:	2e190305 	cdpcs	3, 1, cr0, cr9, cr5, {0}
    8d6c:	05670805 	strbeq	r0, [r7, #-2053]!	; 0xfffff7fb
    8d70:	01056709 	tsteq	r5, r9, lsl #14
    8d74:	1005692f 	andne	r6, r5, pc, lsr #18
    8d78:	820505a1 	andhi	r0, r5, #675282944	; 0x28400000
    8d7c:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    8d80:	01054c09 	tsteq	r5, r9, lsl #24
    8d84:	10056983 	andne	r6, r5, r3, lsl #19
    8d88:	8205059f 	andhi	r0, r5, #666894336	; 0x27c00000
    8d8c:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    8d90:	01054c09 	tsteq	r5, r9, lsl #24
    8d94:	0d056b83 	vstreq	d6, [r5, #-524]	; 0xfffffdf4
    8d98:	820505be 	andhi	r0, r5, #796917760	; 0x2f800000
    8d9c:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    8da0:	0567670a 	strbeq	r6, [r7, #-1802]!	; 0xfffff8f6
    8da4:	05054d09 	streq	r4, [r5, #-3337]	; 0xfffff2f7
    8da8:	670b0584 	strvs	r0, [fp, -r4, lsl #11]
    8dac:	4cba0905 			; <UNDEFINED> instruction: 0x4cba0905
    8db0:	6b2f0105 	blvs	bc91cc <__bss_end__+0xa80184>
    8db4:	05be0605 	ldreq	r0, [lr, #1541]!	; 0x605
    8db8:	06059e05 	streq	r9, [r5], -r5, lsl #28
    8dbc:	670a054b 	strvs	r0, [sl, -fp, asr #10]
    8dc0:	4d090567 	cfstr32mi	mvfx0, [r9, #-412]	; 0xfffffe64
    8dc4:	6e9f0105 	fmlvse	f0, f7, f5
    8dc8:	05d71005 	ldrbeq	r1, [r7, #5]
    8dcc:	10058202 	andne	r8, r5, r2, lsl #4
    8dd0:	9e060533 	mcrls	5, 0, r0, cr6, cr3, {1}
    8dd4:	05670b05 	strbeq	r0, [r7, #-2821]!	; 0xfffff4fb
    8dd8:	1b054b04 	blne	15b9f0 <__bss_end__+0x129a8>
    8ddc:	9e070530 	cfmv64hrls	mvdx7, r0
    8de0:	05ba0605 	ldreq	r0, [sl, #1541]!	; 0x605
    8de4:	0e054c07 	cdpeq	12, 0, cr4, cr5, cr7, {0}
    8de8:	670b0567 	strvs	r0, [fp, -r7, ror #10]
    8dec:	75031105 	strvc	r1, [r3, #-261]	; 0xfffffefb
    8df0:	0002054a 	andeq	r0, r2, sl, asr #10
    8df4:	80010402 	andhi	r0, r1, r2, lsl #8
    8df8:	11030505 	tstne	r3, r5, lsl #10
    8dfc:	67090566 	strvs	r0, [r9, -r6, ror #10]
    8e00:	2f010567 	svccs	0x00010567
    8e04:	d906056d 	stmdble	r6, {r0, r2, r3, r5, r6, r8, sl}
    8e08:	059e0505 	ldreq	r0, [lr, #1285]	; 0x505
    8e0c:	0a054b06 	beq	15ba2c <__bss_end__+0x129e4>
    8e10:	09056767 	stmdbeq	r5, {r0, r1, r2, r5, r6, r8, r9, sl, sp, lr}
    8e14:	0801054d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl}
    8e18:	06056c3e 			; <UNDEFINED> instruction: 0x06056c3e
    8e1c:	650905d8 	strvs	r0, [r9, #-1496]	; 0xfffffa28
    8e20:	22080105 	andcs	r0, r8, #1073741825	; 0x40000001
    8e24:	da09056a 	ble	24a3d4 <__bss_end__+0x10138c>
    8e28:	3e080505 	cfsh32cc	mvfx0, mvfx8, #5
    8e2c:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    8e30:	05054d06 	streq	r4, [r5, #-3334]	; 0xfffff2fa
    8e34:	002a059e 	mlaeq	sl, lr, r5, r0
    8e38:	4a010402 	bmi	49e48 <morecore_area+0xe48>
    8e3c:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    8e40:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    8e44:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    8e48:	06052e01 	streq	r2, [r5], -r1, lsl #28
    8e4c:	02040200 	andeq	r0, r4, #0, 4
    8e50:	003f054b 	eorseq	r0, pc, fp, asr #10
    8e54:	9d020402 	cfstrsls	mvf0, [r2, #-8]
    8e58:	054c0a05 	strbeq	r0, [ip, #-2565]	; 0xfffff5fb
    8e5c:	09054a15 	stmdbeq	r5, {r0, r2, r4, r9, fp, lr}
    8e60:	0001054b 	andeq	r0, r1, fp, asr #10
    8e64:	4b010402 	blmi	49e74 <morecore_area+0xe74>
    8e68:	d909056a 	stmdble	r9, {r1, r3, r5, r6, r8, sl}
    8e6c:	059f0505 	ldreq	r0, [pc, #1285]	; 9379 <errno+0x9375>
    8e70:	0505670a 	streq	r6, [r5, #-1802]	; 0xfffff8f6
    8e74:	691e054b 	ldmdbvs	lr, {r0, r1, r3, r6, r8, sl}
    8e78:	059e0a05 	ldreq	r0, [lr, #2565]	; 0xa05
    8e7c:	0705bc06 	streq	fp, [r5, -r6, lsl #24]
    8e80:	670b0567 	strvs	r0, [fp, -r7, ror #10]
    8e84:	4c0a0567 	cfstr32mi	mvfx0, [sl], {103}	; 0x67
    8e88:	056a0605 	strbeq	r0, [sl, #-1541]!	; 0xfffff9fb
    8e8c:	29059e05 	stmdbcs	r5, {r0, r2, r9, sl, fp, ip, pc}
    8e90:	01040200 	mrseq	r0, R12_usr
    8e94:	003a054a 	eorseq	r0, sl, sl, asr #10
    8e98:	4a010402 	bmi	49ea8 <morecore_area+0xea8>
    8e9c:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    8ea0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    8ea4:	04020006 	streq	r0, [r2], #-6
    8ea8:	3e054b02 	vmlacc.f64	d4, d5, d2
    8eac:	02040200 	andeq	r0, r4, #0, 4
    8eb0:	4c0a059d 	cfstr32mi	mvfx0, [sl], {157}	; 0x9d
    8eb4:	054a1505 	strbeq	r1, [sl, #-1285]	; 0xfffffafb
    8eb8:	01054b09 	tsteq	r5, r9, lsl #22
    8ebc:	34056a4b 	strcc	r6, [r5], #-2635	; 0xfffff5b5
    8ec0:	660905d7 			; <UNDEFINED> instruction: 0x660905d7
    8ec4:	21080105 	tstcs	r8, r5, lsl #2
    8ec8:	a4080569 	strge	r0, [r8], #-1385	; 0xfffffa97
    8ecc:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
    8ed0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    8ed4:	0b056601 	bleq	1626e0 <__bss_end__+0x19698>
    8ed8:	01040200 	mrseq	r0, R12_usr
    8edc:	4b09052e 	blmi	24a39c <__bss_end__+0x101354>
    8ee0:	05d70605 	ldrbeq	r0, [r7, #1541]	; 0x605
    8ee4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    8ee8:	0c056601 	stceq	6, cr6, [r5], {1}
    8eec:	01040200 	mrseq	r0, R12_usr
    8ef0:	4b0b052e 	blmi	2ca3b0 <__bss_end__+0x181368>
    8ef4:	054d0905 	strbeq	r0, [sp, #-2309]	; 0xfffff6fb
    8ef8:	04020001 	streq	r0, [r2], #-1
    8efc:	056a6701 	strbeq	r6, [sl, #-1793]!	; 0xfffff8ff
    8f00:	0505bd10 	streq	fp, [r5, #-3344]	; 0xfffff2f0
    8f04:	670a059f 			; <UNDEFINED> instruction: 0x670a059f
    8f08:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    8f0c:	0569f301 	strbeq	pc, [r9, #-769]!	; 0xfffffcff	; <UNPREDICTABLE>
    8f10:	09059f2a 	stmdbeq	r5, {r1, r3, r5, r8, r9, sl, fp, ip, pc}
    8f14:	9f010566 	svcls	0x00010566
    8f18:	d7060569 	strle	r0, [r6, -r9, ror #10]
    8f1c:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
    8f20:	02004e02 	andeq	r4, r0, #2, 28
    8f24:	ba060104 	blt	18933c <__bss_end__+0x402f4>
    8f28:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    8f2c:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    8f30:	19054c0e 	stmdbne	r5, {r1, r2, r3, sl, fp, lr}
    8f34:	4a02054a 	bmi	8a464 <morecore_area+0x41464>
    8f38:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    8f3c:	05330104 	ldreq	r0, [r3, #-260]!	; 0xfffffefc
    8f40:	04020010 	streq	r0, [r2], #-16
    8f44:	04056701 	streq	r6, [r5], #-1793	; 0xfffff8ff
    8f48:	01040200 	mrseq	r0, R12_usr
    8f4c:	4b0a059e 	blmi	28a5cc <__bss_end__+0x141584>
    8f50:	05621105 	strbeq	r1, [r2, #-261]!	; 0xfffffefb
    8f54:	0e052e09 	cdpeq	14, 0, cr2, cr5, cr9, {0}
    8f58:	2e06056d 	cfsh32cs	mvfx0, mvfx6, #61
    8f5c:	05670b05 	strbeq	r0, [r7, #-2821]!	; 0xfffff4fb
    8f60:	0c05bb07 			; <UNDEFINED> instruction: 0x0c05bb07
    8f64:	4b0b0567 	blmi	2ca508 <__bss_end__+0x1814c0>
    8f68:	05660705 	strbeq	r0, [r6, #-1797]!	; 0xfffff8fb
    8f6c:	10056705 	andne	r6, r5, r5, lsl #14
    8f70:	4a05052e 	bmi	14a430 <__bss_end__+0x13e8>
    8f74:	05830705 	streq	r0, [r3, #1797]	; 0x705
    8f78:	0805830a 	stmdaeq	r5, {r1, r3, r8, r9, pc}
    8f7c:	4a0e0582 	bmi	38a58c <__bss_end__+0x241544>
    8f80:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    8f84:	0f056a06 	svceq	0x00056a06
    8f88:	2e070583 	cfsh32cs	mvfx0, mvfx7, #-61
    8f8c:	05670c05 	strbeq	r0, [r7, #-3077]!	; 0xfffff3fb
    8f90:	06054c07 	streq	r4, [r5], -r7, lsl #24
    8f94:	67070567 	strvs	r0, [r7, -r7, ror #10]
    8f98:	4b660b05 	blmi	198bbb4 <__bss_end__+0x1842b6c>
    8f9c:	65031005 	strvs	r1, [r3, #-5]
    8fa0:	0002054a 	andeq	r0, r2, sl, asr #10
    8fa4:	b8010402 	stmdalt	r1, {r1, sl}
    8fa8:	05671505 	strbeq	r1, [r7, #-1285]!	; 0xfffffafb
    8fac:	82200305 	eorhi	r0, r0, #335544320	; 0x14000000
    8fb0:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    8fb4:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    8fb8:	674b670a 	strbvs	r6, [fp, -sl, lsl #14]
    8fbc:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    8fc0:	04020001 	streq	r0, [r2], #-1
    8fc4:	056a2f01 	strbeq	r2, [sl, #-3841]!	; 0xfffff0ff
    8fc8:	0205d806 	andeq	sp, r5, #393216	; 0x60000
    8fcc:	0402004c 	streq	r0, [r2], #-76	; 0xffffffb4
    8fd0:	05ba0601 	ldreq	r0, [sl, #1537]!	; 0x601
    8fd4:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    8fd8:	0e05670a 	cdpeq	7, 0, cr6, cr5, cr10, {0}
    8fdc:	4a19054c 	bmi	64a514 <__bss_end__+0x5014cc>
    8fe0:	054a0205 	strbeq	r0, [sl, #-517]	; 0xfffffdfb
    8fe4:	0605310d 	streq	r3, [r5], -sp, lsl #2
    8fe8:	6714052e 	ldrvs	r0, [r4, -lr, lsr #10]
    8fec:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    8ff0:	10058307 	andne	r8, r5, r7, lsl #6
    8ff4:	68170567 	ldmdavs	r7, {r0, r1, r2, r5, r6, r8, sl}
    8ff8:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    8ffc:	054c670c 	strbeq	r6, [ip, #-1804]	; 0xfffff8f4
    9000:	4a750310 	bmi	1d49c48 <__bss_end__+0x1c00c00>
    9004:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
    9008:	05b80104 	ldreq	r0, [r8, #260]!	; 0x104
    900c:	05056715 	streq	r6, [r5, #-1813]	; 0xfffff8eb
    9010:	05821003 	streq	r1, [r2, #3]
    9014:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    9018:	0a056601 	beq	162824 <__bss_end__+0x197dc>
    901c:	05674b67 	strbeq	r4, [r7, #-2919]!	; 0xfffff499
    9020:	01054c09 	tsteq	r5, r9, lsl #24
    9024:	01040200 	mrseq	r0, R12_usr
    9028:	0805692f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r8, fp, sp, lr}
    902c:	bb0505a2 	bllt	14a6bc <__bss_end__+0x1674>
    9030:	00671a05 	rsbeq	r1, r7, r5, lsl #20
    9034:	06010402 	streq	r0, [r1], -r2, lsl #8
    9038:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    903c:	09054a02 	stmdbeq	r5, {r1, r9, fp, lr}
    9040:	01054b06 	tsteq	r5, r6, lsl #22
    9044:	01040200 	mrseq	r0, R12_usr
    9048:	1205692f 	andne	r6, r5, #770048	; 0xbc000
    904c:	8405059f 	strhi	r0, [r5], #-1439	; 0xfffffa61
    9050:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    9054:	01054b09 	tsteq	r5, r9, lsl #22
    9058:	02056bd8 	andeq	r6, r5, #216, 22	; 0x36000
    905c:	040200db 	streq	r0, [r2], #-219	; 0xffffff25
    9060:	05ba0601 	ldreq	r0, [sl, #1537]!	; 0x601
    9064:	05510610 	ldrbeq	r0, [r1, #-1552]	; 0xfffff9f0
    9068:	09059e02 	stmdbeq	r5, {r1, r9, sl, fp, ip, pc}
    906c:	bb060531 	bllt	18a538 <__bss_end__+0x414f0>
    9070:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    9074:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    9078:	0402000b 	streq	r0, [r2], #-11
    907c:	05672e01 	strbeq	r2, [r7, #-3585]!	; 0xfffff1ff
    9080:	0b05ba07 	bleq	1778a4 <__bss_end__+0x2e85c>
    9084:	4610054b 	ldrmi	r0, [r0], -fp, asr #10
    9088:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
    908c:	059c0104 	ldreq	r0, [ip, #260]	; 0x104
    9090:	66090309 	strvs	r0, [r9], -r9, lsl #6
    9094:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    9098:	692f0104 	stmdbvs	pc!, {r2, r8}	; <UNPREDICTABLE>
    909c:	05a10505 	streq	r0, [r1, #1285]!	; 0x505
    90a0:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    90a4:	0a056601 	beq	1628b0 <__bss_end__+0x19868>
    90a8:	4c020567 	cfstr32mi	mvfx0, [r2], {103}	; 0x67
    90ac:	01040200 	mrseq	r0, R12_usr
    90b0:	1005ba06 	andne	fp, r5, r6, lsl #20
    90b4:	02055206 	andeq	r5, r5, #1610612736	; 0x60000000
    90b8:	3107059e 			; <UNDEFINED> instruction: 0x3107059e
    90bc:	05820605 	streq	r0, [r2, #1541]	; 0x605
    90c0:	1005670b 	andne	r6, r5, fp, lsl #14
    90c4:	00020548 	andeq	r0, r2, r8, asr #10
    90c8:	9c010402 	cfstrsls	mvf0, [r1], {2}
    90cc:	056d0905 	strbeq	r0, [sp, #-2309]!	; 0xfffff6fb
    90d0:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    90d4:	0605bb0c 	streq	fp, [r5], -ip, lsl #22
    90d8:	31080566 	tstcc	r8, r6, ror #10
    90dc:	052f1f05 	streq	r1, [pc, #-3845]!	; 81df <errno+0x81db>
    90e0:	06054a07 	streq	r4, [r5], -r7, lsl #20
    90e4:	4b0b059e 	blmi	2ca764 <__bss_end__+0x18171c>
    90e8:	054b0705 	strbeq	r0, [fp, #-1797]	; 0xfffff8fb
    90ec:	0b05bb06 	bleq	177d0c <__bss_end__+0x2ecc4>
    90f0:	4b100567 	blmi	40a694 <__bss_end__+0x2c164c>
    90f4:	05661a05 	strbeq	r1, [r6, #-2565]!	; 0xfffff5fb
    90f8:	05672e0b 	strbeq	r2, [r7, #-3595]!	; 0xfffff1f5
    90fc:	66790308 	ldrbtvs	r0, [r9], -r8, lsl #6
    9100:	09030905 	stmdbeq	r3, {r0, r2, r8, fp}
    9104:	2f010582 	svccs	0x00010582
    9108:	bc0e0569 	cfstr32lt	mvfx0, [lr], {105}	; 0x69
    910c:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    9110:	0a05bb05 	beq	177d2c <__bss_end__+0x2ece4>
    9114:	4c0d0567 	cfstr32mi	mvfx0, [sp], {103}	; 0x67
    9118:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    911c:	1e056808 	cdpne	8, 0, cr6, cr5, cr8, {0}
    9120:	660c052f 	strvs	r0, [ip], -pc, lsr #10
    9124:	05822605 	streq	r2, [r2, #1541]	; 0x605
    9128:	0c052e0a 	stceq	14, cr2, [r5], {10}
    912c:	82060531 	andhi	r0, r6, #205520896	; 0xc400000
    9130:	05670b05 	strbeq	r0, [r7, #-2821]!	; 0xfffff4fb
    9134:	039f4c08 	orrseq	r4, pc, #8, 24	; 0x800
    9138:	09056678 	stmdbeq	r5, {r3, r4, r5, r6, r9, sl, sp, lr}
    913c:	05820b03 	streq	r0, [r2, #2819]	; 0xb03
    9140:	04020001 	streq	r0, [r2], #-1
    9144:	056a2f01 	strbeq	r2, [sl, #-3841]!	; 0xfffff0ff
    9148:	0905d713 	stmdbeq	r5, {r0, r1, r4, r8, r9, sl, ip, lr, pc}
    914c:	bb05054d 	bllt	14a688 <__bss_end__+0x1640>
    9150:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    9154:	17054c08 	strne	r4, [r5, -r8, lsl #24]
    9158:	2e060566 	cfsh32cs	mvfx0, mvfx6, #54
    915c:	052f0d05 	streq	r0, [pc, #-3333]!	; 845f <errno+0x845b>
    9160:	08054a06 	stmdaeq	r5, {r1, r2, r9, fp, lr}
    9164:	2f1e0568 	svccs	0x001e0568
    9168:	05660c05 	strbeq	r0, [r6, #-3077]!	; 0xfffff3fb
    916c:	0a058226 	beq	169a0c <__bss_end__+0x209c4>
    9170:	310c052e 	tstcc	ip, lr, lsr #10
    9174:	05820605 	streq	r0, [r2, #1541]	; 0x605
    9178:	0e05670b 	cdpeq	7, 0, cr6, cr5, cr11, {0}
    917c:	2e06054c 	cfsh32cs	mvfx0, mvfx6, #44
    9180:	02001805 	andeq	r1, r0, #327680	; 0x50000
    9184:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    9188:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    918c:	0b05ba01 	bleq	177998 <__bss_end__+0x2e950>
    9190:	4c08054b 	cfstr32mi	mvfx0, [r8], {75}	; 0x4b
    9194:	059f0605 	ldreq	r0, [pc, #1541]	; 97a1 <errno+0x979d>
    9198:	66750308 	ldrbtvs	r0, [r5], -r8, lsl #6
    919c:	0e030905 	vmlaeq.f16	s0, s6, s10	; <UNPREDICTABLE>
    91a0:	00010582 	andeq	r0, r1, r2, lsl #11
    91a4:	2f010402 	svccs	0x00010402
    91a8:	da09056b 	ble	24a75c <__bss_end__+0x101714>
    91ac:	05bb0505 	ldreq	r0, [fp, #1285]!	; 0x505
    91b0:	0a056706 	beq	162dd0 <__bss_end__+0x19d88>
    91b4:	0d056867 	stceq	8, cr6, [r5, #-412]	; 0xfffffe64
    91b8:	4a06054d 	bmi	18a6f4 <__bss_end__+0x416ac>
    91bc:	05680805 	strbeq	r0, [r8, #-2053]!	; 0xfffff7fb
    91c0:	0c052f1e 	stceq	15, cr2, [r5], {30}
    91c4:	82260566 	eorhi	r0, r6, #427819008	; 0x19800000
    91c8:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    91cc:	0605310c 	streq	r3, [r5], -ip, lsl #2
    91d0:	67070582 	strvs	r0, [r7, -r2, lsl #11]
    91d4:	68670b05 	stmdavs	r7!, {r0, r2, r8, r9, fp}^
    91d8:	054d0605 	strbeq	r0, [sp, #-1541]	; 0xfffff9fb
    91dc:	14056707 	strne	r6, [r5], #-1799	; 0xfffff8f9
    91e0:	4a0b0567 	bmi	2ca784 <__bss_end__+0x18173c>
    91e4:	4d08054c 	cfstr32mi	mvfx0, [r8, #-304]	; 0xfffffed0
    91e8:	059f0605 	ldreq	r0, [pc, #1541]	; 97f5 <errno+0x97f1>
    91ec:	666d0308 	strbtvs	r0, [sp], -r8, lsl #6
    91f0:	16030505 	strne	r0, [r3], -r5, lsl #10
    91f4:	67090582 	strvs	r0, [r9, -r2, lsl #11]
    91f8:	00010568 	andeq	r0, r1, r8, ror #10
    91fc:	2f010402 	svccs	0x00010402
    9200:	be09056a 	cfsh32lt	mvfx0, mvfx9, #58
    9204:	05d70505 	ldrbeq	r0, [r7, #1285]	; 0x505
    9208:	054c670a 	strbeq	r6, [ip, #-1802]	; 0xfffff8f6
    920c:	0105ba09 	tsteq	r5, r9, lsl #20
    9210:	01040200 	mrseq	r0, R12_usr
    9214:	02056a83 	andeq	r6, r5, #536576	; 0x83000
    9218:	040200bd 	streq	r0, [r2], #-189	; 0xffffff43
    921c:	05ba0601 	ldreq	r0, [sl, #1537]!	; 0x601
    9220:	05510610 	ldrbeq	r0, [r1, #-1552]	; 0xfffff9f0
    9224:	09059e02 	stmdbeq	r5, {r1, r9, sl, fp, ip, pc}
    9228:	9f060531 	svcls	0x00060531
    922c:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    9230:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    9234:	674b670b 	strbvs	r6, [fp, -fp, lsl #14]
    9238:	05451005 	strbeq	r1, [r5, #-5]
    923c:	04020002 	streq	r0, [r2], #-2
    9240:	09059c01 	stmdbeq	r5, {r0, sl, fp, ip, pc}
    9244:	05660a03 	strbeq	r0, [r6, #-2563]!	; 0xfffff5fd
    9248:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    924c:	0b05a10e 	bleq	17168c <__bss_end__+0x28644>
    9250:	4e05054c 	cfsh32mi	mvfx0, mvfx5, #44
    9254:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    9258:	06054b08 	streq	r4, [r5], -r8, lsl #22
    925c:	2f0a0566 	svccs	0x000a0566
    9260:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    9264:	10054b0a 	andne	r4, r5, sl, lsl #22
    9268:	9e05054b 	cfsh32ls	mvfx0, mvfx5, #43
    926c:	05670a05 	strbeq	r0, [r7, #-2565]!	; 0xfffff5fb
    9270:	05054c0f 	streq	r4, [r5, #-3087]	; 0xfffff3f1
    9274:	670a0567 	strvs	r0, [sl, -r7, ror #10]
    9278:	4b09054d 	blmi	24a7b4 <__bss_end__+0x10176c>
    927c:	05bc1205 	ldreq	r1, [ip, #517]!	; 0x205
    9280:	0b052e06 	bleq	154aa0 <__bss_end__+0xba58>
    9284:	0807054b 	stmdaeq	r7, {r0, r1, r3, r6, r8, sl}
    9288:	670c05eb 	strvs	r0, [ip, -fp, ror #11]
    928c:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    9290:	0e054d09 	cdpeq	13, 0, cr4, cr5, cr9, {0}
    9294:	2e070567 	cfsh32cs	mvfx0, mvfx7, #55
    9298:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
    929c:	0c054e07 	stceq	14, cr4, [r5], {7}
    92a0:	4b090567 	blmi	24a844 <__bss_end__+0x1017fc>
    92a4:	05670405 	strbeq	r0, [r7, #-1029]!	; 0xfffffbfb
    92a8:	0705310b 	streq	r3, [r5, -fp, lsl #2]
    92ac:	670c05bc 			; <UNDEFINED> instruction: 0x670c05bc
    92b0:	054e0b05 	strbeq	r0, [lr, #-2821]	; 0xfffff4fb
    92b4:	4a650304 	bmi	1949ecc <__bss_end__+0x1800e84>
    92b8:	034a0b03 	movteq	r0, #43779	; 0xab03
    92bc:	0a054a0d 	beq	15baf8 <__bss_end__+0x12ab0>
    92c0:	052e6003 	streq	r6, [lr, #-3]!
    92c4:	04020001 	streq	r0, [r2], #-1
    92c8:	2e260301 	cdpcs	3, 2, cr0, cr6, cr1, {0}
    92cc:	01000602 	tsteq	r0, r2, lsl #12
    92d0:	0004b601 	andeq	fp, r4, r1, lsl #12
    92d4:	1b000300 	blne	9edc <errno+0x9ed8>
    92d8:	02000001 	andeq	r0, r0, #1
    92dc:	0d0efb01 	vstreq	d15, [lr, #-4]
    92e0:	01010100 	mrseq	r0, (UNDEF: 17)
    92e4:	00000001 	andeq	r0, r0, r1
    92e8:	01000001 	tsteq	r0, r1
    92ec:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 9238 <errno+0x9234>
    92f0:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    92f4:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    92f8:	2f676e6f 	svccs	0x00676e6f
    92fc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    9300:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    9304:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    9308:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    930c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    9310:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    9314:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    9318:	6f72702f 	svcvs	0x0072702f
    931c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    9320:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    9324:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    9328:	2f736269 	svccs	0x00736269
    932c:	6662696c 	strbtvs	r6, [r2], -ip, ror #18
    9330:	2f007464 	svccs	0x00007464
    9334:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    9338:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    933c:	6f647679 	svcvs	0x00647679
    9340:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    9344:	2f346c65 	svccs	0x00346c65
    9348:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    934c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    9350:	6169726f 	cmnvs	r9, pc, ror #4
    9354:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    9358:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    935c:	2f747365 	svccs	0x00747365
    9360:	6a6f7270 	bvs	1be5d28 <__bss_end__+0x1a9cce0>
    9364:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    9368:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    936c:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    9370:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 91f0 <errno+0x91ec>
    9374:	64666269 	strbtvs	r6, [r6], #-617	; 0xfffffd97
    9378:	002e2f74 	eoreq	r2, lr, r4, ror pc
    937c:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    9380:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    9384:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    9388:	742d646c 	strtvc	r6, [sp], #-1132	; 0xfffffb94
    938c:	2f706d65 	svccs	0x00706d65
    9390:	67617473 			; <UNDEFINED> instruction: 0x67617473
    9394:	6e692f65 	cdpvs	15, 6, cr2, cr9, cr5, {3}
    9398:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    939c:	69622f65 	stmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    93a0:	00007374 	andeq	r7, r0, r4, ror r3
    93a4:	6662696c 	strbtvs	r6, [r2], -ip, ror #18
    93a8:	655f7464 	ldrbvs	r7, [pc, #-1124]	; 8f4c <errno+0x8f48>
    93ac:	682e766e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, ip, sp, lr}
    93b0:	00000100 	andeq	r0, r0, r0, lsl #2
    93b4:	6662696c 	strbtvs	r6, [r2], -ip, ror #18
    93b8:	682e7464 	stmdavs	lr!, {r2, r5, r6, sl, ip, sp, lr}
    93bc:	00000200 	andeq	r0, r0, r0, lsl #4
    93c0:	6662696c 	strbtvs	r6, [r2], -ip, ror #18
    93c4:	695f7464 	ldmdbvs	pc, {r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    93c8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    93cc:	2e6c616e 	powcsez	f6, f4, #0.5
    93d0:	00010068 	andeq	r0, r1, r8, rrx
    93d4:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    93d8:	0100632e 	tsteq	r0, lr, lsr #6
    93dc:	6c610000 	stclvs	0, cr0, [r1], #-0
    93e0:	7079746c 	rsbsvc	r7, r9, ip, ror #8
    93e4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    93e8:	00000300 	andeq	r0, r0, r0, lsl #6
    93ec:	2e746466 	cdpcs	4, 7, cr6, cr4, cr6, {3}
    93f0:	00020068 	andeq	r0, r2, r8, rrx
    93f4:	01050000 	mrseq	r0, (UNDEF: 5)
    93f8:	78020500 	stmdavc	r2, {r8, sl}
    93fc:	030001ca 	movweq	r0, #458	; 0x1ca
    9400:	050100de 	streq	r0, [r1, #-222]	; 0xffffff22
    9404:	0905831d 	stmdbeq	r5, {r0, r2, r3, r4, r8, r9, pc}
    9408:	0105e408 	tsteq	r5, r8, lsl #8
    940c:	0302042f 	movweq	r0, #9263	; 0x242f
    9410:	058200c7 	streq	r0, [r2, #199]	; 0xc7
    9414:	09058502 	stmdbeq	r5, {r1, r8, sl, pc}
    9418:	8301059f 	movwhi	r0, #5535	; 0x159f
    941c:	6600f703 	strvs	pc, [r0], -r3, lsl #14
    9420:	05830905 	streq	r0, [r3, #2309]	; 0x905
    9424:	0304f301 	movweq	pc, #17153	; 0x4301	; <UNPREDICTABLE>
    9428:	667ea503 	ldrbtvs	sl, [lr], -r3, lsl #10
    942c:	059f1d05 	ldreq	r1, [pc, #3333]	; a139 <errno+0xa135>
    9430:	01059e34 	tsteq	r5, r4, lsr lr
    9434:	03040483 	movweq	r0, #17539	; 0x4483
    9438:	06056675 			; <UNDEFINED> instruction: 0x06056675
    943c:	82050583 	andhi	r0, r5, #549453824	; 0x20c00000
    9440:	05840705 	streq	r0, [r4, #1797]	; 0x705
    9444:	0b059e06 	bleq	170c64 <__bss_end__+0x27c1c>
    9448:	4b07054b 	blmi	1ca97c <__bss_end__+0x81934>
    944c:	059e0605 	ldreq	r0, [lr, #1541]	; 0x605
    9450:	0d054b0b 	vstreq	d4, [r5, #-44]	; 0xffffffd4
    9454:	820c054b 	andhi	r0, ip, #314572800	; 0x12c00000
    9458:	05840705 	streq	r0, [r4, #1797]	; 0x705
    945c:	0b059e06 	bleq	170c7c <__bss_end__+0x27c34>
    9460:	4c0a054b 	cfstr32mi	mvfx0, [sl], {75}	; 0x4b
    9464:	054d0905 	strbeq	r0, [sp, #-2309]	; 0xfffff6fb
    9468:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    946c:	0200bb1a 	andeq	fp, r0, #26624	; 0x6800
    9470:	82060104 	andhi	r0, r6, #4, 2
    9474:	03040200 	movweq	r0, #16896	; 0x4200
    9478:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
    947c:	01054a04 	tsteq	r5, r4, lsl #20
    9480:	07040200 	streq	r0, [r4, -r0, lsl #4]
    9484:	05862f06 	streq	r2, [r6, #3846]	; 0xf06
    9488:	0505d707 	streq	sp, [r5, #-1799]	; 0xfffff8f9
    948c:	4b0a059e 	blmi	28ab0c <__bss_end__+0x141ac4>
    9490:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
    9494:	0a056605 	beq	162cb0 <__bss_end__+0x19c68>
    9498:	4b070567 	blmi	1caa3c <__bss_end__+0x819f4>
    949c:	05f20505 	ldrbeq	r0, [r2, #1285]!	; 0x505
    94a0:	09054b0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, lr}
    94a4:	2f01054b 	svccs	0x0001054b
    94a8:	83050569 	movwhi	r0, #21865	; 0x5569
    94ac:	4b670a05 	blmi	19cbcc8 <__bss_end__+0x1882c80>
    94b0:	4b674b67 	blmi	19dc254 <__bss_end__+0x189320c>
    94b4:	01054c67 	tsteq	r5, r7, ror #24
    94b8:	0605852f 	streq	r8, [r5], -pc, lsr #10
    94bc:	82050585 	andhi	r0, r5, #557842432	; 0x21400000
    94c0:	05830a05 	streq	r0, [r3, #2565]	; 0xa05
    94c4:	07054b0c 	streq	r4, [r5, -ip, lsl #22]
    94c8:	9e050567 	cfsh32ls	mvfx0, mvfx5, #55
    94cc:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
    94d0:	0a059e06 	beq	170cf0 <__bss_end__+0x27ca8>
    94d4:	4b06054b 	blmi	18aa08 <__bss_end__+0x419c0>
    94d8:	059e1905 	ldreq	r1, [lr, #2309]	; 0x905
    94dc:	0a059e05 	beq	170cf8 <__bss_end__+0x27cb0>
    94e0:	4c07054b 	cfstr32mi	mvfx0, [r7], {75}	; 0x4b
    94e4:	059e0505 	ldreq	r0, [lr, #1285]	; 0x505
    94e8:	0605670a 	streq	r6, [r5], -sl, lsl #14
    94ec:	4b0a059e 	blmi	28ab6c <__bss_end__+0x141b24>
    94f0:	054d0705 	strbeq	r0, [sp, #-1797]	; 0xfffff8fb
    94f4:	05c80805 	strbeq	r0, [r8, #2053]	; 0x805
    94f8:	06054b0a 	streq	r4, [r5], -sl, lsl #22
    94fc:	9e05054d 	cfsh32ls	mvfx0, mvfx5, #45
    9500:	054b0805 	strbeq	r0, [fp, #-2053]	; 0xfffff7fb
    9504:	05c80806 	strbeq	r0, [r8, #2054]	; 0x806
    9508:	08054c0b 	stmdaeq	r5, {r0, r1, r3, sl, fp, lr}
    950c:	0206054c 	andeq	r0, r6, #76, 10	; 0x13000000
    9510:	0b051228 	bleq	14ddb8 <__bss_end__+0x4d70>
    9514:	4e07054d 	cfsh32mi	mvfx0, mvfx7, #45
    9518:	28020505 	stmdacs	r2, {r0, r2, r8, sl}
    951c:	4c0a0512 	cfstr32mi	mvfx0, [sl], {18}
    9520:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    9524:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    9528:	1e05bb20 	vmlane.f64	d11, d5, d16
    952c:	2e0b059e 	mcrcs	5, 0, r0, cr11, cr14, {4}
    9530:	054c1105 	strbeq	r1, [ip, #-261]	; 0xfffffefb
    9534:	15052e05 	strne	r2, [r5, #-3589]	; 0xfffff1fb
    9538:	66060567 	strvs	r0, [r6], -r7, ror #10
    953c:	05671405 	strbeq	r1, [r7, #-1029]!	; 0xfffffbfb
    9540:	0605661d 			; <UNDEFINED> instruction: 0x0605661d
    9544:	4b0a059e 	blmi	28abc4 <__bss_end__+0x141b7c>
    9548:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    954c:	10059e05 	andne	r9, r5, r5, lsl #28
    9550:	6617054b 	ldrvs	r0, [r7], -fp, asr #10
    9554:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    9558:	1c054b13 			; <UNDEFINED> instruction: 0x1c054b13
    955c:	9e070566 	cfsh32ls	mvfx0, mvfx7, #54
    9560:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    9564:	01054c09 	tsteq	r5, r9, lsl #24
    9568:	06056983 	streq	r6, [r5], -r3, lsl #19
    956c:	4d0e05bd 	cfstr32mi	mvfx0, [lr, #-756]	; 0xfffffd0c
    9570:	05670905 	strbeq	r0, [r7, #-2309]!	; 0xfffff6fb
    9574:	0a059f05 	beq	171190 <__bss_end__+0x28148>
    9578:	4b080567 	blmi	20ab1c <__bss_end__+0xc1ad4>
    957c:	059f0905 	ldreq	r0, [pc, #2309]	; 9e89 <errno+0x9e85>
    9580:	0205680e 	andeq	r6, r5, #917504	; 0xe0000
    9584:	05142202 	ldreq	r2, [r4, #-514]	; 0xfffffdfe
    9588:	04020008 	streq	r0, [r2], #-8
    958c:	03053102 	movweq	r3, #20738	; 0x5102
    9590:	02040200 	andeq	r0, r4, #0, 4
    9594:	001205f3 			; <UNDEFINED> instruction: 0x001205f3
    9598:	66010402 	strvs	r0, [r1], -r2, lsl #8
    959c:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    95a0:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    95a4:	0b054b06 	bleq	15c1c4 <__bss_end__+0x1317c>
    95a8:	4e0a0567 	cfsh32mi	mvfx0, mvfx10, #55
    95ac:	059f0605 	ldreq	r0, [pc, #1541]	; 9bb9 <errno+0x9bb5>
    95b0:	0605670b 	streq	r6, [r5], -fp, lsl #14
    95b4:	9e04054d 	cfsh32ls	mvfx0, mvfx4, #45
    95b8:	052d0a05 	streq	r0, [sp, #-2565]!	; 0xfffff5fb
    95bc:	06056807 	streq	r6, [r5], -r7, lsl #16
    95c0:	0022059e 	mlaeq	r2, lr, r5, r0
    95c4:	4a010402 	bmi	4a5d4 <morecore_area+0x15d4>
    95c8:	02001f05 	andeq	r1, r0, #5, 30
    95cc:	059e0104 	ldreq	r0, [lr, #260]	; 0x104
    95d0:	04020010 	streq	r0, [r2], #-16
    95d4:	12054b02 	andne	r4, r5, #2048	; 0x800
    95d8:	02040200 	andeq	r0, r4, #0, 4
    95dc:	0010052e 	andseq	r0, r0, lr, lsr #10
    95e0:	9e020402 	cdpls	4, 0, cr0, cr2, cr2, {0}
    95e4:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    95e8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    95ec:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    95f0:	0b052d02 	bleq	154a00 <__bss_end__+0xb9b8>
    95f4:	6703054c 	strvs	r0, [r3, -ip, asr #10]
    95f8:	05360a05 	ldreq	r0, [r6, #-2565]!	; 0xfffff5fb
    95fc:	6f034703 	svcvs	0x00034703
    9600:	4a0c034a 	bmi	30a330 <__bss_end__+0x1c12e8>
    9604:	0b032f05 	bleq	d5220 <morecore_area+0x8c220>
    9608:	6607052e 	strvs	r0, [r7], -lr, lsr #10
    960c:	059e0505 	ldreq	r0, [lr, #1285]	; 0x505
    9610:	10054b0a 	andne	r4, r5, sl, lsl #22
    9614:	660e054c 	strvs	r0, [lr], -ip, asr #10
    9618:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    961c:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    9620:	05059f0e 	streq	r9, [r5, #-3854]	; 0xfffff0f2
    9624:	001e052e 	andseq	r0, lr, lr, lsr #10
    9628:	4a010402 	bmi	4a638 <morecore_area+0x1638>
    962c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    9630:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    9634:	06054b0a 	streq	r4, [r5], -sl, lsl #22
    9638:	4b0a05ba 	blmi	28ad28 <__bss_end__+0x141ce0>
    963c:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    9640:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    9644:	05059f0e 	streq	r9, [r5, #-3854]	; 0xfffff0f2
    9648:	001e052e 	andseq	r0, lr, lr, lsr #10
    964c:	4a010402 	bmi	4a65c <morecore_area+0x165c>
    9650:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    9654:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    9658:	06054b0a 	streq	r4, [r5], -sl, lsl #22
    965c:	4b0a05ba 	blmi	28ad4c <__bss_end__+0x141d04>
    9660:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    9664:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    9668:	0505bb06 	streq	fp, [r5, #-2822]	; 0xfffff4fa
    966c:	6715054d 	ldrvs	r0, [r5, -sp, asr #10]
    9670:	05821305 	streq	r1, [r2, #773]	; 0x305
    9674:	0b054a06 	bleq	15be94 <__bss_end__+0x12e4c>
    9678:	4d0a054b 	cfstr32mi	mvfx0, [sl, #-300]	; 0xfffffed4
    967c:	054b0905 	strbeq	r0, [fp, #-2309]	; 0xfffff6fb
    9680:	1a280207 	bne	a09ea4 <__bss_end__+0x8c0e5c>
    9684:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    9688:	04054a0d 	streq	r4, [r5], #-2573	; 0xfffff5f3
    968c:	31070567 	tstcc	r7, r7, ror #10
    9690:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    9694:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    9698:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    969c:	0e054a01 	vmlaeq.f32	s8, s10, s2
    96a0:	01040200 	mrseq	r0, R12_usr
    96a4:	0016052e 	andseq	r0, r6, lr, lsr #10
    96a8:	4a010402 	bmi	4a6b8 <morecore_area+0x16b8>
    96ac:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    96b0:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    96b4:	14054b0c 	strne	r4, [r5], #-2828	; 0xfffff4f4
    96b8:	2e07054e 	cfsh32cs	mvfx0, mvfx7, #46
    96bc:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    96c0:	2f052e08 	svccs	0x00052e08
    96c4:	01040200 	mrseq	r0, R12_usr
    96c8:	670c054a 	strvs	r0, [ip, -sl, asr #10]
    96cc:	0304054c 	movweq	r0, #17740	; 0x454c
    96d0:	054f4a74 	strbeq	r4, [pc, #-2676]	; 8c64 <errno+0x8c60>
    96d4:	2e090302 	cdpcs	3, 0, cr0, cr9, cr2, {0}
    96d8:	05680905 	strbeq	r0, [r8, #-2309]!	; 0xfffff6fb
    96dc:	04020001 	streq	r0, [r2], #-1
    96e0:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    96e4:	0b059f06 	bleq	171304 <__bss_end__+0x282bc>
    96e8:	bb05054c 	bllt	14ac20 <__bss_end__+0x1bd8>
    96ec:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    96f0:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    96f4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    96f8:	0a052e01 	beq	154f04 <__bss_end__+0xbebc>
    96fc:	4c09054b 	cfstr32mi	mvfx0, [r9], {75}	; 0x4b
    9700:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    9704:	692f0104 	stmdbvs	pc!, {r2, r8}	; <UNPREDICTABLE>
    9708:	059f0605 	ldreq	r0, [pc, #1541]	; 9d15 <errno+0x9d11>
    970c:	0605510c 	streq	r5, [r5], -ip, lsl #2
    9710:	001b05bb 			; <UNDEFINED> instruction: 0x001b05bb
    9714:	66010402 	strvs	r0, [r1], -r2, lsl #8
    9718:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
    971c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    9720:	11054b0b 	tstne	r5, fp, lsl #22
    9724:	2e02054b 	cfsh32cs	mvfx0, mvfx2, #43
    9728:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    972c:	04020001 	streq	r0, [r2], #-1
    9730:	05692f01 	strbeq	r2, [r9, #-3841]!	; 0xfffff0ff
    9734:	1605bb0c 	strne	fp, [r5], -ip, lsl #22
    9738:	2e060566 	cfsh32cs	mvfx0, mvfx6, #54
    973c:	052f2605 	streq	r2, [pc, #-1541]!	; 913f <errno+0x913b>
    9740:	0905660e 	stmdbeq	r5, {r1, r2, r3, r9, sl, sp, lr}
    9744:	4a020569 	bmi	8acf0 <morecore_area+0x41cf0>
    9748:	052f0705 	streq	r0, [pc, #-1797]!	; 904b <errno+0x9047>
    974c:	0b05ba06 	bleq	177f6c <__bss_end__+0x2ef24>
    9750:	001f054b 	andseq	r0, pc, fp, asr #10
    9754:	48020402 	stmdami	r2, {r1, sl}
    9758:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
    975c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    9760:	01058509 	tsteq	r5, r9, lsl #10
    9764:	0205692f 	andeq	r6, r5, #770048	; 0xbc000
    9768:	040200bb 	streq	r0, [r2], #-187	; 0xffffff45
    976c:	05ba0601 	ldreq	r0, [sl, #1537]!	; 0x601
    9770:	054c0606 	strbeq	r0, [ip, #-1542]	; 0xfffff9fa
    9774:	05059e19 	streq	r9, [r5, #-3609]	; 0xfffff1e7
    9778:	4b0a052e 	blmi	28ac38 <__bss_end__+0x141bf0>
    977c:	054c0205 	strbeq	r0, [ip, #-517]	; 0xfffffdfb
    9780:	05210809 	streq	r0, [r1, #-2057]!	; 0xfffff7f7
    9784:	06022f01 	streq	r2, [r2], -r1, lsl #30
    9788:	62010100 	andvs	r0, r1, #0, 2
    978c:	03000004 	movweq	r0, #4
    9790:	00015500 	andeq	r5, r1, r0, lsl #10
    9794:	fb010200 	blx	49f9e <morecore_area+0xf9e>
    9798:	01000d0e 	tsteq	r0, lr, lsl #26
    979c:	00010101 	andeq	r0, r1, r1, lsl #2
    97a0:	00010000 	andeq	r0, r1, r0
    97a4:	682f0100 	stmdavs	pc!, {r8}	; <UNPREDICTABLE>
    97a8:	2f656d6f 	svccs	0x00656d6f
    97ac:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    97b0:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    97b4:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    97b8:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    97bc:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    97c0:	6f747574 	svcvs	0x00747574
    97c4:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    97c8:	616d2d73 	smcvs	53971	; 0xd2d3
    97cc:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    97d0:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    97d4:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    97d8:	2f737463 	svccs	0x00737463
    97dc:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    97e0:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    97e4:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    97e8:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    97ec:	732f736c 			; <UNDEFINED> instruction: 0x732f736c
    97f0:	6d006372 	stcvs	3, cr6, [r0, #-456]	; 0xfffffe38
    97f4:	6c6c7375 	stclvs	3, cr7, [ip], #-468	; 0xfffffe2c
    97f8:	2f636269 	svccs	0x00636269
    97fc:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    9800:	65742d64 	ldrbvs	r2, [r4, #-3428]!	; 0xfffff29c
    9804:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    9808:	65676174 	strbvs	r6, [r7, #-372]!	; 0xfffffe8c
    980c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    9810:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    9814:	7469622f 	strbtvc	r6, [r9], #-559	; 0xfffffdd1
    9818:	756d0073 	strbvc	r0, [sp, #-115]!	; 0xffffff8d
    981c:	696c6c73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, sl, fp, sp, lr}^
    9820:	622f6362 	eorvs	r6, pc, #-2013265919	; 0x88000001
    9824:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    9828:	6d65742d 	cfstrdvs	mvd7, [r5, #-180]!	; 0xffffff4c
    982c:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    9830:	2f656761 	svccs	0x00656761
    9834:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    9838:	00656475 	rsbeq	r6, r5, r5, ror r4
    983c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 9788 <errno+0x9784>
    9840:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    9844:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    9848:	2f676e6f 	svccs	0x00676e6f
    984c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    9850:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    9854:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    9858:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    985c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    9860:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    9864:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    9868:	6f72702f 	svcvs	0x0072702f
    986c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    9870:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    9874:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    9878:	2f736269 	svccs	0x00736269
    987c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    9880:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    9884:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    9888:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    988c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    9890:	0000736c 	andeq	r7, r0, ip, ror #6
    9894:	6c5f667a 	mrrcvs	6, 7, r6, pc, cr10	; <UNPREDICTABLE>
    9898:	632e676f 			; <UNDEFINED> instruction: 0x632e676f
    989c:	00000100 	andeq	r0, r0, r0, lsl #2
    98a0:	746c6c61 	strbtvc	r6, [ip], #-3169	; 0xfffff39f
    98a4:	73657079 	cmnvc	r5, #121	; 0x79
    98a8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    98ac:	74730000 	ldrbtvc	r0, [r3], #-0
    98b0:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    98b4:	00030068 	andeq	r0, r3, r8, rrx
    98b8:	696e7500 	stmdbvs	lr!, {r8, sl, ip, sp, lr}^
    98bc:	2e647473 	mcrcs	4, 3, r7, cr4, cr3, {3}
    98c0:	00030068 	andeq	r0, r3, r8, rrx
    98c4:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    98c8:	00682e65 	rsbeq	r2, r8, r5, ror #28
    98cc:	7a000003 	bvc	98e0 <errno+0x98dc>
    98d0:	6f6c5f66 	svcvs	0x006c5f66
    98d4:	00682e67 	rsbeq	r2, r8, r7, ror #28
    98d8:	3c000004 	stccc	0, cr0, [r0], {4}
    98dc:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    98e0:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    98e4:	0000003e 	andeq	r0, r0, lr, lsr r0
    98e8:	01050000 	mrseq	r0, (UNDEF: 5)
    98ec:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    98f0:	030001d7 	movweq	r0, #471	; 0x1d7
    98f4:	050101e2 	streq	r0, [r1, #-482]	; 0xfffffe1e
    98f8:	18059f1e 	stmdane	r5, {r1, r2, r3, r4, r8, r9, sl, fp, ip, pc}
    98fc:	4a130566 	bmi	4cae9c <__bss_end__+0x381e54>
    9900:	054a0f05 	strbeq	r0, [sl, #-3845]	; 0xfffff0fb
    9904:	09054a25 	stmdbeq	r5, {r0, r2, r5, r9, fp, lr}
    9908:	4b01054a 	blmi	4ae38 <morecore_area+0x1e38>
    990c:	03020585 	movweq	r0, #9605	; 0x2585
    9910:	0b05820e 	bleq	16a150 <__bss_end__+0x21108>
    9914:	02052108 	andeq	r2, r5, #8, 2
    9918:	bc19054a 	cfldr32lt	mvfx0, [r9], {74}	; 0x4a
    991c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    9920:	059f6803 	ldreq	r6, [pc, #2051]	; a12b <errno+0xa127>
    9924:	05693001 	strbeq	r3, [r9, #-1]!
    9928:	1305830e 	movwne	r8, #21262	; 0x530e
    992c:	4a02054b 	bmi	8ae60 <morecore_area+0x41e60>
    9930:	05300e05 	ldreq	r0, [r0, #-3589]!	; 0xfffff1fb
    9934:	1c054a06 			; <UNDEFINED> instruction: 0x1c054a06
    9938:	01040200 	mrseq	r0, R12_usr
    993c:	0011054a 	andseq	r0, r1, sl, asr #10
    9940:	4a010402 	bmi	4a950 <morecore_area+0x1950>
    9944:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    9948:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    994c:	22056202 	andcs	r6, r5, #536870912	; 0x20000000
    9950:	01040200 	mrseq	r0, R12_usr
    9954:	00020566 	andeq	r0, r2, r6, ror #10
    9958:	4a010402 	bmi	4a968 <morecore_area+0x1968>
    995c:	05510905 	ldrbeq	r0, [r1, #-2309]	; 0xfffff6fb
    9960:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    9964:	15058a0c 	strne	r8, [r5, #-2572]	; 0xfffff5f4
    9968:	4a10054a 	bmi	40ae98 <__bss_end__+0x2c1e50>
    996c:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    9970:	05852f01 	streq	r2, [r5, #3841]	; 0xf01
    9974:	12059f05 	andne	r9, r5, #5, 30
    9978:	01040200 	mrseq	r0, R12_usr
    997c:	00200566 	eoreq	r0, r0, r6, ror #10
    9980:	4a010402 	bmi	4a990 <morecore_area+0x1990>
    9984:	02000c05 	andeq	r0, r0, #1280	; 0x500
    9988:	05f20104 	ldrbeq	r0, [r2, #260]!	; 0x104
    998c:	0a054c0f 	beq	15c9d0 <__bss_end__+0x13988>
    9990:	4c01054a 	cfstr32mi	mvfx0, [r1], {74}	; 0x4a
    9994:	82120385 	andshi	r0, r2, #335544322	; 0x14000002
    9998:	a0120585 	andsge	r0, r2, r5, lsl #11
    999c:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    99a0:	05054b0f 	streq	r4, [r5, #-2831]	; 0xfffff4f1
    99a4:	68030582 	stmdavs	r3, {r1, r7, r8, sl}
    99a8:	02003805 	andeq	r3, r0, #327680	; 0x50000
    99ac:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    99b0:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    99b4:	3d054a03 	vstrcc	s8, [r5, #-12]
    99b8:	03040200 	movweq	r0, #16896	; 0x4200
    99bc:	000c0566 	andeq	r0, ip, r6, ror #10
    99c0:	66010402 	strvs	r0, [r1], -r2, lsl #8
    99c4:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    99c8:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    99cc:	04020003 	streq	r0, [r2], #-3
    99d0:	27054a01 	strcs	r4, [r5, -r1, lsl #20]
    99d4:	02040200 	andeq	r0, r4, #0, 4
    99d8:	002d054a 	eoreq	r0, sp, sl, asr #10
    99dc:	4a020402 	bmi	8a9ec <morecore_area+0x419ec>
    99e0:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    99e4:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    99e8:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    99ec:	1a052e02 	bne	1551fc <__bss_end__+0xc1b4>
    99f0:	02040200 	andeq	r0, r4, #0, 4
    99f4:	4e0f052e 	cfsh32mi	mvfx0, mvfx15, #30
    99f8:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    99fc:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    9a00:	16056601 	strne	r6, [r5], -r1, lsl #12
    9a04:	01040200 	mrseq	r0, R12_usr
    9a08:	4c0a054a 	cfstr32mi	mvfx0, [sl], {74}	; 0x4a
    9a0c:	054a1805 	strbeq	r1, [sl, #-2053]	; 0xfffff7fb
    9a10:	22054a06 	andcs	r4, r5, #24576	; 0x6000
    9a14:	01040200 	mrseq	r0, R12_usr
    9a18:	002c054a 	eoreq	r0, ip, sl, asr #10
    9a1c:	4a010402 	bmi	4aa2c <morecore_area+0x1a2c>
    9a20:	02001c05 	andeq	r1, r0, #1280	; 0x500
    9a24:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    9a28:	0b054c08 	bleq	15ca50 <__bss_end__+0x13a08>
    9a2c:	660e054a 	strvs	r0, [lr], -sl, asr #10
    9a30:	054c0305 	strbeq	r0, [ip, #-773]	; 0xfffffcfb
    9a34:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    9a38:	33052e03 	movwcc	r2, #24067	; 0x5e03
    9a3c:	03040200 	movweq	r0, #16896	; 0x4200
    9a40:	003d054a 	eorseq	r0, sp, sl, asr #10
    9a44:	66030402 	strvs	r0, [r3], -r2, lsl #8
    9a48:	02000c05 	andeq	r0, r0, #1280	; 0x500
    9a4c:	05660104 	strbeq	r0, [r6, #-260]!	; 0xfffffefc
    9a50:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    9a54:	03054a01 	movweq	r4, #23041	; 0x5a01
    9a58:	01040200 	mrseq	r0, R12_usr
    9a5c:	0027054a 	eoreq	r0, r7, sl, asr #10
    9a60:	4a020402 	bmi	8aa70 <morecore_area+0x41a70>
    9a64:	02002d05 	andeq	r2, r0, #320	; 0x140
    9a68:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    9a6c:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    9a70:	23054a02 	movwcs	r4, #23042	; 0x5a02
    9a74:	02040200 	andeq	r0, r4, #0, 4
    9a78:	001a052e 	andseq	r0, sl, lr, lsr #10
    9a7c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    9a80:	054e1205 	strbeq	r1, [lr, #-517]	; 0xfffffdfb
    9a84:	09054a0d 	stmdbeq	r5, {r0, r2, r3, r9, fp, lr}
    9a88:	4a17054b 	bmi	5cafbc <__bss_end__+0x481f74>
    9a8c:	054a0505 	strbeq	r0, [sl, #-1285]	; 0xfffffafb
    9a90:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    9a94:	2b054a01 	blcs	15c2a0 <__bss_end__+0x13258>
    9a98:	01040200 	mrseq	r0, R12_usr
    9a9c:	001b054a 	andseq	r0, fp, sl, asr #10
    9aa0:	4a010402 	bmi	4aab0 <morecore_area+0x1ab0>
    9aa4:	054c0705 	strbeq	r0, [ip, #-1797]	; 0xfffff8fb
    9aa8:	0d054a0a 	vstreq	s8, [r5, #-40]	; 0xffffffd8
    9aac:	4c010566 	cfstr32mi	mvfx0, [r1], {102}	; 0x66
    9ab0:	d8060586 	stmdale	r6, {r1, r2, r7, r8, sl}
    9ab4:	24020205 	strcs	r0, [r2], #-517	; 0xfffffdfb
    9ab8:	67010514 	smladvs	r1, r4, r5, r0
    9abc:	bc12056a 	cfldr32lt	mvfx0, [r2], {106}	; 0x6a
    9ac0:	054a0d05 	strbeq	r0, [sl, #-3333]	; 0xfffff2fb
    9ac4:	02054b06 	andeq	r4, r5, #6144	; 0x1800
    9ac8:	01053d08 	tsteq	r5, r8, lsl #26
    9acc:	05056a67 	streq	r6, [r5, #-2663]	; 0xfffff599
    9ad0:	000d05bb 			; <UNDEFINED> instruction: 0x000d05bb
    9ad4:	66010402 	strvs	r0, [r1], -r2, lsl #8
    9ad8:	056a1705 	strbeq	r1, [sl, #-1797]!	; 0xfffff8fb
    9adc:	12054b1d 	andne	r4, r5, #29696	; 0x7400
    9ae0:	830e0584 	movwhi	r0, #58756	; 0xe584
    9ae4:	05672205 	strbeq	r2, [r7, #-517]!	; 0xfffffdfb
    9ae8:	0e054a2e 	vmlaeq.f32	s8, s10, s29
    9aec:	6720052e 	strvs	r0, [r0, -lr, lsr #10]!
    9af0:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    9af4:	05056709 	streq	r6, [r5, #-1801]	; 0xfffff8f7
    9af8:	6a08054a 	bvs	20b028 <__bss_end__+0xc1fe0>
    9afc:	4b300905 	blmi	c0bf18 <__bss_end__+0xac2ed0>
    9b00:	054b2405 	strbeq	r2, [fp, #-1029]	; 0xfffffbfb
    9b04:	3305663e 	movwcc	r6, #22078	; 0x563e
    9b08:	01040200 	mrseq	r0, R12_usr
    9b0c:	003e0566 	eorseq	r0, lr, r6, ror #10
    9b10:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    9b14:	02040200 	andeq	r0, r4, #0, 4
    9b18:	10056606 	andne	r6, r5, r6, lsl #12
    9b1c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    9b20:	03052e06 	movweq	r2, #24070	; 0x5e06
    9b24:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    9b28:	310f052e 	tstcc	pc, lr, lsr #10
    9b2c:	05671f05 	strbeq	r1, [r7, #-3845]!	; 0xfffff0fb
    9b30:	12058208 	andne	r8, r5, #8, 4	; 0x80000000
    9b34:	660b0566 	strvs	r0, [fp], -r6, ror #10
    9b38:	052f1905 	streq	r1, [pc, #-2309]!	; 923b <errno+0x9237>
    9b3c:	12054a08 	andne	r4, r5, #8, 20	; 0x8000
    9b40:	660b0566 	strvs	r0, [fp], -r6, ror #10
    9b44:	052f0f05 	streq	r0, [pc, #-3845]!	; 8c47 <errno+0x8c43>
    9b48:	02004a0d 	andeq	r4, r0, #53248	; 0xd000
    9b4c:	4a060104 	bmi	189f64 <__bss_end__+0x40f1c>
    9b50:	02040200 	andeq	r0, r4, #0, 4
    9b54:	000a054a 	andeq	r0, sl, sl, asr #10
    9b58:	06040402 	streq	r0, [r4], -r2, lsl #8
    9b5c:	000d052e 	andeq	r0, sp, lr, lsr #10
    9b60:	66040402 	strvs	r0, [r4], -r2, lsl #8
    9b64:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    9b68:	05450404 	strbeq	r0, [r5, #-1028]	; 0xfffffbfc
    9b6c:	04020003 	streq	r0, [r2], #-3
    9b70:	09056505 	stmdbeq	r5, {r0, r2, r8, sl, sp, lr}
    9b74:	3008058a 	andcc	r0, r8, sl, lsl #11
    9b78:	05660b05 	strbeq	r0, [r6, #-2821]!	; 0xfffff4fb
    9b7c:	0a054809 	beq	15bba8 <__bss_end__+0x12b60>
    9b80:	67030586 	strvs	r0, [r3, -r6, lsl #11]
    9b84:	6f030805 	svcvs	0x00030805
    9b88:	0303059e 	movweq	r0, #13726	; 0x359e
    9b8c:	0b039e73 	bleq	f1560 <morecore_area+0xa8560>
    9b90:	0301054a 	movweq	r0, #5450	; 0x154a
    9b94:	054d2e15 	strbeq	r2, [sp, #-3605]	; 0xfffff1eb
    9b98:	0105830f 	tsteq	r5, pc, lsl #6
    9b9c:	0e058583 	cfsh32eq	mvfx8, mvfx5, #-61
    9ba0:	83010583 	movwhi	r0, #5507	; 0x1583
    9ba4:	83150585 	tsthi	r5, #557842432	; 0x21400000
    9ba8:	85830105 	strhi	r0, [r3, #261]	; 0x105
    9bac:	05830e05 	streq	r0, [r3, #3589]	; 0xe05
    9bb0:	0f038301 	svceq	0x00038301
    9bb4:	d7020582 	strle	r0, [r2, -r2, lsl #11]
    9bb8:	674b3e08 	strbvs	r3, [fp, -r8, lsl #28]
    9bbc:	059f9f83 	ldreq	r9, [pc, #3971]	; ab47 <errno+0xab43>
    9bc0:	056abc01 	strbeq	fp, [sl, #-3073]!	; 0xfffff3ff
    9bc4:	3e08bb02 	vmlacc.f64	d11, d8, d2
    9bc8:	9f83674b 	svcls	0x0083674b
    9bcc:	a5bc0105 	ldrge	r0, [ip, #261]!	; 0x105
    9bd0:	08d70205 	ldmeq	r7, {r0, r2, r9}^
    9bd4:	83674b3e 	cmnhi	r7, #63488	; 0xf800
    9bd8:	05bb9f9f 	ldreq	r9, [fp, #3999]!	; 0xf9f
    9bdc:	056ba001 	strbeq	sl, [fp, #-1]!
    9be0:	3e08d702 	cdpcc	7, 0, cr13, cr8, cr2, {0}
    9be4:	9f83674b 	svcls	0x0083674b
    9be8:	a00105bb 			; <UNDEFINED> instruction: 0xa00105bb
    9bec:	01000602 	tsteq	r0, r2, lsl #12
    9bf0:	00009901 	andeq	r9, r0, r1, lsl #18
    9bf4:	75000300 	strvc	r0, [r0, #-768]	; 0xfffffd00
    9bf8:	02000000 	andeq	r0, r0, #0
    9bfc:	0d0efb01 	vstreq	d15, [lr, #-4]
    9c00:	01010100 	mrseq	r0, (UNDEF: 17)
    9c04:	00000001 	andeq	r0, r0, r1
    9c08:	01000001 	tsteq	r0, r1
    9c0c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 9b58 <errno+0x9b54>
    9c10:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    9c14:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    9c18:	2f676e6f 	svccs	0x00676e6f
    9c1c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    9c20:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    9c24:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    9c28:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    9c2c:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    9c30:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    9c34:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    9c38:	6f72702f 	svcvs	0x0072702f
    9c3c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    9c40:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    9c44:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    9c48:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    9c4c:	72632f65 	rsbvc	r2, r3, #404	; 0x194
    9c50:	65732f74 	ldrbvs	r2, [r3, #-3956]!	; 0xfffff08c
    9c54:	615f346c 	cmpvs	pc, ip, ror #8
    9c58:	2f686372 	svccs	0x00686372
    9c5c:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    9c60:	00323368 	eorseq	r3, r2, r8, ror #6
    9c64:	74726300 	ldrbtvc	r6, [r2], #-768	; 0xfffffd00
    9c68:	00532e6e 	subseq	r2, r3, lr, ror #28
    9c6c:	00000001 	andeq	r0, r0, r1
    9c70:	20020500 	andcs	r0, r2, r0, lsl #10
    9c74:	1a000101 	bne	a080 <errno+0xa07c>
    9c78:	0002022f 	andeq	r0, r2, pc, lsr #4
    9c7c:	05000101 	streq	r0, [r0, #-257]	; 0xfffffeff
    9c80:	02765002 	rsbseq	r5, r6, #2
    9c84:	010c0300 	mrseq	r0, LR_mon
    9c88:	0002022f 	andeq	r0, r2, pc, lsr #4
    9c8c:	Address 0x0000000000009c8c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
      18:	000101e8 	andeq	r0, r1, r8, ror #3
      1c:	00000030 	andeq	r0, r0, r0, lsr r0
      20:	8b080e42 	blhi	203930 <__bss_end__+0xba8e8>
      24:	42018e02 	andmi	r8, r1, #2, 28
      28:	52040b0c 	andpl	r0, r4, #12, 22	; 0x3000
      2c:	00080d0c 	andeq	r0, r8, ip, lsl #26
      30:	0000000c 	andeq	r0, r0, ip
      34:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      38:	7c020001 	stcvc	0, cr0, [r2], {1}
      3c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      40:	0000001c 	andeq	r0, r0, ip, lsl r0
      44:	00000030 	andeq	r0, r0, r0, lsr r0
      48:	00010228 	andeq	r0, r1, r8, lsr #4
      4c:	000000b8 	strheq	r0, [r0], -r8
      50:	8b080e42 	blhi	203960 <__bss_end__+0xba918>
      54:	42018e02 	andmi	r8, r1, #2, 28
      58:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
      5c:	080d0c56 	stmdaeq	sp, {r1, r2, r4, r6, sl, fp}
      60:	0000000c 	andeq	r0, r0, ip
      64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      68:	7c020001 	stcvc	0, cr0, [r2], {1}
      6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      70:	0000001c 	andeq	r0, r0, ip, lsl r0
      74:	00000060 	andeq	r0, r0, r0, rrx
      78:	000102e0 	andeq	r0, r1, r0, ror #5
      7c:	0000005c 	andeq	r0, r0, ip, asr r0
      80:	8b080e42 	blhi	203990 <__bss_end__+0xba948>
      84:	42018e02 	andmi	r8, r1, #2, 28
      88:	68040b0c 	stmdavs	r4, {r2, r3, r8, r9, fp}
      8c:	00080d0c 	andeq	r0, r8, ip, lsl #26
      90:	0000000c 	andeq	r0, r0, ip
      94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      98:	7c020001 	stcvc	0, cr0, [r2], {1}
      9c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      a0:	0000001c 	andeq	r0, r0, ip, lsl r0
      a4:	00000090 	muleq	r0, r0, r0
      a8:	0001033c 	andeq	r0, r1, ip, lsr r3
      ac:	0000017c 	andeq	r0, r0, ip, ror r1
      b0:	8b080e42 	blhi	2039c0 <__bss_end__+0xba978>
      b4:	42018e02 	andmi	r8, r1, #2, 28
      b8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
      bc:	080d0cb8 	stmdaeq	sp, {r3, r4, r5, r7, sl, fp}
      c0:	0000000c 	andeq	r0, r0, ip
      c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      c8:	7c020001 	stcvc	0, cr0, [r2], {1}
      cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      d0:	00000018 	andeq	r0, r0, r8, lsl r0
      d4:	000000c0 	andeq	r0, r0, r0, asr #1
      d8:	000104b8 			; <UNDEFINED> instruction: 0x000104b8
      dc:	00000024 	andeq	r0, r0, r4, lsr #32
      e0:	8b080e42 	blhi	2039f0 <__bss_end__+0xba9a8>
      e4:	42018e02 	andmi	r8, r1, #2, 28
      e8:	00040b0c 	andeq	r0, r4, ip, lsl #22
      ec:	00000028 	andeq	r0, r0, r8, lsr #32
      f0:	000000c0 	andeq	r0, r0, r0, asr #1
      f4:	000104dc 	ldrdeq	r0, [r1], -ip
      f8:	000000ac 	andeq	r0, r0, ip, lsr #1
      fc:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     100:	87038504 	strhi	r8, [r3, -r4, lsl #10]
     104:	42018b02 	andmi	r8, r1, #2048	; 0x800
     108:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     10c:	100d0c4e 	andne	r0, sp, lr, asr #24
     110:	c5c7cb42 	strbgt	ip, [r7, #2882]	; 0xb42
     114:	00000ec4 	andeq	r0, r0, r4, asr #29
     118:	0000001c 	andeq	r0, r0, ip, lsl r0
     11c:	000000c0 	andeq	r0, r0, r0, asr #1
     120:	00010588 	andeq	r0, r1, r8, lsl #11
     124:	000000ac 	andeq	r0, r0, ip, lsr #1
     128:	8b080e42 	blhi	203a38 <__bss_end__+0xba9f0>
     12c:	42018e02 	andmi	r8, r1, #2, 28
     130:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     134:	080d0c50 	stmdaeq	sp, {r4, r6, sl, fp}
     138:	0000001c 	andeq	r0, r0, ip, lsl r0
     13c:	000000c0 	andeq	r0, r0, r0, asr #1
     140:	00010634 	andeq	r0, r1, r4, lsr r6
     144:	00000028 	andeq	r0, r0, r8, lsr #32
     148:	8b040e42 	blhi	103a58 <morecore_area+0xbaa58>
     14c:	0b0d4201 	bleq	350958 <__bss_end__+0x207910>
     150:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     154:	00000ecb 	andeq	r0, r0, fp, asr #29
     158:	0000001c 	andeq	r0, r0, ip, lsl r0
     15c:	000000c0 	andeq	r0, r0, r0, asr #1
     160:	0001065c 	andeq	r0, r1, ip, asr r6
     164:	00000028 	andeq	r0, r0, r8, lsr #32
     168:	8b040e42 	blhi	103a78 <morecore_area+0xbaa78>
     16c:	0b0d4201 	bleq	350978 <__bss_end__+0x207930>
     170:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     174:	00000ecb 	andeq	r0, r0, fp, asr #29
     178:	0000001c 	andeq	r0, r0, ip, lsl r0
     17c:	000000c0 	andeq	r0, r0, r0, asr #1
     180:	00010684 	andeq	r0, r1, r4, lsl #13
     184:	00000024 	andeq	r0, r0, r4, lsr #32
     188:	8b080e42 	blhi	203a98 <__bss_end__+0xbaa50>
     18c:	42018e02 	andmi	r8, r1, #2, 28
     190:	4c040b0c 			; <UNDEFINED> instruction: 0x4c040b0c
     194:	00080d0c 	andeq	r0, r8, ip, lsl #26
     198:	00000018 	andeq	r0, r0, r8, lsl r0
     19c:	000000c0 	andeq	r0, r0, r0, asr #1
     1a0:	000106a8 	andeq	r0, r1, r8, lsr #13
     1a4:	00000018 	andeq	r0, r0, r8, lsl r0
     1a8:	8b080e42 	blhi	203ab8 <__bss_end__+0xbaa70>
     1ac:	42018e02 	andmi	r8, r1, #2, 28
     1b0:	00040b0c 	andeq	r0, r4, ip, lsl #22
     1b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     1b8:	000000c0 	andeq	r0, r0, r0, asr #1
     1bc:	000106c0 	andeq	r0, r1, r0, asr #13
     1c0:	00000024 	andeq	r0, r0, r4, lsr #32
     1c4:	8b040e42 	blhi	103ad4 <morecore_area+0xbaad4>
     1c8:	0b0d4201 	bleq	3509d4 <__bss_end__+0x20798c>
     1cc:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     1d0:	00000ecb 	andeq	r0, r0, fp, asr #29
     1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
     1d8:	000000c0 	andeq	r0, r0, r0, asr #1
     1dc:	000106e4 	andeq	r0, r1, r4, ror #13
     1e0:	00000024 	andeq	r0, r0, r4, lsr #32
     1e4:	8b040e42 	blhi	103af4 <morecore_area+0xbaaf4>
     1e8:	0b0d4201 	bleq	3509f4 <__bss_end__+0x2079ac>
     1ec:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     1f0:	00000ecb 	andeq	r0, r0, fp, asr #29
     1f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     1f8:	000000c0 	andeq	r0, r0, r0, asr #1
     1fc:	00010708 	andeq	r0, r1, r8, lsl #14
     200:	00000024 	andeq	r0, r0, r4, lsr #32
     204:	8b040e42 	blhi	103b14 <morecore_area+0xbab14>
     208:	0b0d4201 	bleq	350a14 <__bss_end__+0x2079cc>
     20c:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     210:	00000ecb 	andeq	r0, r0, fp, asr #29
     214:	0000001c 	andeq	r0, r0, ip, lsl r0
     218:	000000c0 	andeq	r0, r0, r0, asr #1
     21c:	0001072c 	andeq	r0, r1, ip, lsr #14
     220:	00000024 	andeq	r0, r0, r4, lsr #32
     224:	8b040e42 	blhi	103b34 <morecore_area+0xbab34>
     228:	0b0d4201 	bleq	350a34 <__bss_end__+0x2079ec>
     22c:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     230:	00000ecb 	andeq	r0, r0, fp, asr #29
     234:	0000001c 	andeq	r0, r0, ip, lsl r0
     238:	000000c0 	andeq	r0, r0, r0, asr #1
     23c:	00010750 	andeq	r0, r1, r0, asr r7
     240:	00000024 	andeq	r0, r0, r4, lsr #32
     244:	8b040e42 	blhi	103b54 <morecore_area+0xbab54>
     248:	0b0d4201 	bleq	350a54 <__bss_end__+0x207a0c>
     24c:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     250:	00000ecb 	andeq	r0, r0, fp, asr #29
     254:	0000001c 	andeq	r0, r0, ip, lsl r0
     258:	000000c0 	andeq	r0, r0, r0, asr #1
     25c:	00010774 	andeq	r0, r1, r4, ror r7
     260:	00000024 	andeq	r0, r0, r4, lsr #32
     264:	8b040e42 	blhi	103b74 <morecore_area+0xbab74>
     268:	0b0d4201 	bleq	350a74 <__bss_end__+0x207a2c>
     26c:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     270:	00000ecb 	andeq	r0, r0, fp, asr #29
     274:	0000001c 	andeq	r0, r0, ip, lsl r0
     278:	000000c0 	andeq	r0, r0, r0, asr #1
     27c:	00010798 	muleq	r1, r8, r7
     280:	00000024 	andeq	r0, r0, r4, lsr #32
     284:	8b040e42 	blhi	103b94 <morecore_area+0xbab94>
     288:	0b0d4201 	bleq	350a94 <__bss_end__+0x207a4c>
     28c:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     290:	00000ecb 	andeq	r0, r0, fp, asr #29
     294:	0000001c 	andeq	r0, r0, ip, lsl r0
     298:	000000c0 	andeq	r0, r0, r0, asr #1
     29c:	000107bc 			; <UNDEFINED> instruction: 0x000107bc
     2a0:	00000034 	andeq	r0, r0, r4, lsr r0
     2a4:	8b040e42 	blhi	103bb4 <morecore_area+0xbabb4>
     2a8:	0b0d4201 	bleq	350ab4 <__bss_end__+0x207a6c>
     2ac:	420d0d52 	andmi	r0, sp, #5248	; 0x1480
     2b0:	00000ecb 	andeq	r0, r0, fp, asr #29
     2b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2b8:	000000c0 	andeq	r0, r0, r0, asr #1
     2bc:	000107f0 	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
     2c0:	00000044 	andeq	r0, r0, r4, asr #32
     2c4:	8b080e42 	blhi	203bd4 <__bss_end__+0xbab8c>
     2c8:	42018e02 	andmi	r8, r1, #2, 28
     2cc:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
     2d0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     2d4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2d8:	000000c0 	andeq	r0, r0, r0, asr #1
     2dc:	00010834 	andeq	r0, r1, r4, lsr r8
     2e0:	00000108 	andeq	r0, r0, r8, lsl #2
     2e4:	8b080e42 	blhi	203bf4 <__bss_end__+0xbabac>
     2e8:	42018e02 	andmi	r8, r1, #2, 28
     2ec:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     2f0:	080d0c7c 	stmdaeq	sp, {r2, r3, r4, r5, r6, sl, fp}
     2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2f8:	000000c0 	andeq	r0, r0, r0, asr #1
     2fc:	0001093c 	andeq	r0, r1, ip, lsr r9
     300:	00000044 	andeq	r0, r0, r4, asr #32
     304:	8b040e42 	blhi	103c14 <morecore_area+0xbac14>
     308:	0b0d4201 	bleq	350b14 <__bss_end__+0x207acc>
     30c:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
     310:	00000ecb 	andeq	r0, r0, fp, asr #29
     314:	0000001c 	andeq	r0, r0, ip, lsl r0
     318:	000000c0 	andeq	r0, r0, r0, asr #1
     31c:	00010980 	andeq	r0, r1, r0, lsl #19
     320:	00000044 	andeq	r0, r0, r4, asr #32
     324:	8b040e42 	blhi	103c34 <morecore_area+0xbac34>
     328:	0b0d4201 	bleq	350b34 <__bss_end__+0x207aec>
     32c:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
     330:	00000ecb 	andeq	r0, r0, fp, asr #29
     334:	0000001c 	andeq	r0, r0, ip, lsl r0
     338:	000000c0 	andeq	r0, r0, r0, asr #1
     33c:	000109c4 	andeq	r0, r1, r4, asr #19
     340:	00000060 	andeq	r0, r0, r0, rrx
     344:	8b080e42 	blhi	203c54 <__bss_end__+0xbac0c>
     348:	42018e02 	andmi	r8, r1, #2, 28
     34c:	6a040b0c 	bvs	102f84 <morecore_area+0xb9f84>
     350:	00080d0c 	andeq	r0, r8, ip, lsl #26
     354:	0000001c 	andeq	r0, r0, ip, lsl r0
     358:	000000c0 	andeq	r0, r0, r0, asr #1
     35c:	00010a24 	andeq	r0, r1, r4, lsr #20
     360:	000000bc 	strheq	r0, [r0], -ip
     364:	8b080e42 	blhi	203c74 <__bss_end__+0xbac2c>
     368:	42018e02 	andmi	r8, r1, #2, 28
     36c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     370:	080d0c58 	stmdaeq	sp, {r3, r4, r6, sl, fp}
     374:	0000001c 	andeq	r0, r0, ip, lsl r0
     378:	000000c0 	andeq	r0, r0, r0, asr #1
     37c:	00010ae0 	andeq	r0, r1, r0, ror #21
     380:	0000009c 	muleq	r0, ip, r0
     384:	8b080e42 	blhi	203c94 <__bss_end__+0xbac4c>
     388:	42018e02 	andmi	r8, r1, #2, 28
     38c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     390:	080d0c48 	stmdaeq	sp, {r3, r6, sl, fp}
     394:	0000001c 	andeq	r0, r0, ip, lsl r0
     398:	000000c0 	andeq	r0, r0, r0, asr #1
     39c:	00010b7c 	andeq	r0, r1, ip, ror fp
     3a0:	00000080 	andeq	r0, r0, r0, lsl #1
     3a4:	8b040e42 	blhi	103cb4 <morecore_area+0xbacb4>
     3a8:	0b0d4201 	bleq	350bb4 <__bss_end__+0x207b6c>
     3ac:	420d0d78 	andmi	r0, sp, #120, 26	; 0x1e00
     3b0:	00000ecb 	andeq	r0, r0, fp, asr #29
     3b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     3b8:	000000c0 	andeq	r0, r0, r0, asr #1
     3bc:	00010bfc 	strdeq	r0, [r1], -ip
     3c0:	000001e4 	andeq	r0, r0, r4, ror #3
     3c4:	8b040e42 	blhi	103cd4 <morecore_area+0xbacd4>
     3c8:	0b0d4201 	bleq	350bd4 <__bss_end__+0x207b8c>
     3cc:	0d0dea02 	vstreq	s28, [sp, #-8]
     3d0:	000ecb42 	andeq	ip, lr, r2, asr #22
     3d4:	0000001c 	andeq	r0, r0, ip, lsl r0
     3d8:	000000c0 	andeq	r0, r0, r0, asr #1
     3dc:	00010de0 	andeq	r0, r1, r0, ror #27
     3e0:	00000088 	andeq	r0, r0, r8, lsl #1
     3e4:	8b080e42 	blhi	203cf4 <__bss_end__+0xbacac>
     3e8:	42018e02 	andmi	r8, r1, #2, 28
     3ec:	7e040b0c 	vmlavc.f64	d0, d4, d12
     3f0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     3f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     3f8:	000000c0 	andeq	r0, r0, r0, asr #1
     3fc:	00010e68 	andeq	r0, r1, r8, ror #28
     400:	00000124 	andeq	r0, r0, r4, lsr #2
     404:	8b080e42 	blhi	203d14 <__bss_end__+0xbaccc>
     408:	42018e02 	andmi	r8, r1, #2, 28
     40c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     410:	080d0c8c 	stmdaeq	sp, {r2, r3, r7, sl, fp}
     414:	00000018 	andeq	r0, r0, r8, lsl r0
     418:	000000c0 	andeq	r0, r0, r0, asr #1
     41c:	00010f8c 	andeq	r0, r1, ip, lsl #31
     420:	00000030 	andeq	r0, r0, r0, lsr r0
     424:	8b080e42 	blhi	203d34 <__bss_end__+0xbacec>
     428:	42018e02 	andmi	r8, r1, #2, 28
     42c:	00040b0c 	andeq	r0, r4, ip, lsl #22
     430:	0000001c 	andeq	r0, r0, ip, lsl r0
     434:	000000c0 	andeq	r0, r0, r0, asr #1
     438:	00010fbc 			; <UNDEFINED> instruction: 0x00010fbc
     43c:	000000bc 	strheq	r0, [r0], -ip
     440:	8b080e42 	blhi	203d50 <__bss_end__+0xbad08>
     444:	42018e02 	andmi	r8, r1, #2, 28
     448:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     44c:	080d0c58 	stmdaeq	sp, {r3, r4, r6, sl, fp}
     450:	0000001c 	andeq	r0, r0, ip, lsl r0
     454:	000000c0 	andeq	r0, r0, r0, asr #1
     458:	00011078 	andeq	r1, r1, r8, ror r0
     45c:	00000088 	andeq	r0, r0, r8, lsl #1
     460:	8b080e42 	blhi	203d70 <__bss_end__+0xbad28>
     464:	42018e02 	andmi	r8, r1, #2, 28
     468:	7e040b0c 	vmlavc.f64	d0, d4, d12
     46c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     470:	0000001c 	andeq	r0, r0, ip, lsl r0
     474:	000000c0 	andeq	r0, r0, r0, asr #1
     478:	00011100 	andeq	r1, r1, r0, lsl #2
     47c:	00000038 	andeq	r0, r0, r8, lsr r0
     480:	8b040e42 	blhi	103d90 <morecore_area+0xbad90>
     484:	0b0d4201 	bleq	350c90 <__bss_end__+0x207c48>
     488:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
     48c:	00000ecb 	andeq	r0, r0, fp, asr #29
     490:	0000001c 	andeq	r0, r0, ip, lsl r0
     494:	000000c0 	andeq	r0, r0, r0, asr #1
     498:	00011138 	andeq	r1, r1, r8, lsr r1
     49c:	00000034 	andeq	r0, r0, r4, lsr r0
     4a0:	8b080e42 	blhi	203db0 <__bss_end__+0xbad68>
     4a4:	42018e02 	andmi	r8, r1, #2, 28
     4a8:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
     4ac:	00080d0c 	andeq	r0, r8, ip, lsl #26
     4b0:	0000001c 	andeq	r0, r0, ip, lsl r0
     4b4:	000000c0 	andeq	r0, r0, r0, asr #1
     4b8:	0001116c 	andeq	r1, r1, ip, ror #2
     4bc:	00000024 	andeq	r0, r0, r4, lsr #32
     4c0:	8b040e42 	blhi	103dd0 <morecore_area+0xbadd0>
     4c4:	0b0d4201 	bleq	350cd0 <__bss_end__+0x207c88>
     4c8:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     4cc:	00000ecb 	andeq	r0, r0, fp, asr #29
     4d0:	00000020 	andeq	r0, r0, r0, lsr #32
     4d4:	000000c0 	andeq	r0, r0, r0, asr #1
     4d8:	00011190 	muleq	r1, r0, r1
     4dc:	00000144 	andeq	r0, r0, r4, asr #2
     4e0:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     4e4:	8e028b03 	vmlahi.f64	d8, d2, d3
     4e8:	0b0c4201 	bleq	310cf4 <__bss_end__+0x1c7cac>
     4ec:	0c9c0204 	lfmeq	f0, 4, [ip], {4}
     4f0:	00000c0d 	andeq	r0, r0, sp, lsl #24
     4f4:	00000018 	andeq	r0, r0, r8, lsl r0
     4f8:	000000c0 	andeq	r0, r0, r0, asr #1
     4fc:	000112d4 	ldrdeq	r1, [r1], -r4
     500:	00000084 	andeq	r0, r0, r4, lsl #1
     504:	8b080e42 	blhi	203e14 <__bss_end__+0xbadcc>
     508:	42018e02 	andmi	r8, r1, #2, 28
     50c:	00040b0c 	andeq	r0, r4, ip, lsl #22
     510:	00000018 	andeq	r0, r0, r8, lsl r0
     514:	000000c0 	andeq	r0, r0, r0, asr #1
     518:	00011358 	andeq	r1, r1, r8, asr r3
     51c:	0000004c 	andeq	r0, r0, ip, asr #32
     520:	8b080e42 	blhi	203e30 <__bss_end__+0xbade8>
     524:	42018e02 	andmi	r8, r1, #2, 28
     528:	00040b0c 	andeq	r0, r4, ip, lsl #22
     52c:	0000000c 	andeq	r0, r0, ip
     530:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     534:	7c020001 	stcvc	0, cr0, [r2], {1}
     538:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     53c:	0000001c 	andeq	r0, r0, ip, lsl r0
     540:	0000052c 	andeq	r0, r0, ip, lsr #10
     544:	000113a4 	andeq	r1, r1, r4, lsr #7
     548:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     54c:	8b080e42 	blhi	203e5c <__bss_end__+0xbae14>
     550:	42018e02 	andmi	r8, r1, #2, 28
     554:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     558:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
     55c:	0000001c 	andeq	r0, r0, ip, lsl r0
     560:	0000052c 	andeq	r0, r0, ip, lsr #10
     564:	00011474 	andeq	r1, r1, r4, ror r4
     568:	00000074 	andeq	r0, r0, r4, ror r0
     56c:	8b080e42 	blhi	203e7c <__bss_end__+0xbae34>
     570:	42018e02 	andmi	r8, r1, #2, 28
     574:	74040b0c 	strvc	r0, [r4], #-2828	; 0xfffff4f4
     578:	00080d0c 	andeq	r0, r8, ip, lsl #26
     57c:	0000000c 	andeq	r0, r0, ip
     580:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     584:	7c020001 	stcvc	0, cr0, [r2], {1}
     588:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     58c:	0000002c 	andeq	r0, r0, ip, lsr #32
     590:	0000057c 	andeq	r0, r0, ip, ror r5
     594:	000114e8 	andeq	r1, r1, r8, ror #9
     598:	0000038c 	andeq	r0, r0, ip, lsl #7
     59c:	84140e42 	ldrhi	r0, [r4], #-3650	; 0xfffff1be
     5a0:	86048505 	strhi	r8, [r4], -r5, lsl #10
     5a4:	8b028703 	blhi	a21b8 <morecore_area+0x591b8>
     5a8:	0b0c4201 	bleq	310db4 <__bss_end__+0x1c7d6c>
     5ac:	01be0304 			; <UNDEFINED> instruction: 0x01be0304
     5b0:	42140d0c 	andsmi	r0, r4, #12, 26	; 0x300
     5b4:	c5c6c7cb 	strbgt	ip, [r6, #1995]	; 0x7cb
     5b8:	00000ec4 	andeq	r0, r0, r4, asr #29
     5bc:	0000000c 	andeq	r0, r0, ip
     5c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5c4:	7c020001 	stcvc	0, cr0, [r2], {1}
     5c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5cc:	00000020 	andeq	r0, r0, r0, lsr #32
     5d0:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
     5d4:	00011874 	andeq	r1, r1, r4, ror r8
     5d8:	00000a64 	andeq	r0, r0, r4, ror #20
     5dc:	8b040e42 	blhi	103eec <morecore_area+0xbaeec>
     5e0:	0b0d4201 	bleq	350dec <__bss_end__+0x207da4>
     5e4:	0d052a03 	vstreq	s4, [r5, #-12]
     5e8:	0ecb420d 	cdpeq	2, 12, cr4, cr11, cr13, {0}
     5ec:	00000000 	andeq	r0, r0, r0
     5f0:	0000000c 	andeq	r0, r0, ip
     5f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5f8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     600:	00000030 	andeq	r0, r0, r0, lsr r0
     604:	000005f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     608:	000122d8 	ldrdeq	r2, [r1], -r8
     60c:	00000024 	andeq	r0, r0, r4, lsr #32
     610:	80100e42 	andshi	r0, r0, r2, asr #28
     614:	82038104 	andhi	r8, r3, #4, 2
     618:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
     61c:	058b140e 	streq	r1, [fp, #1038]	; 0x40e
     620:	460b0d42 	strmi	r0, [fp], -r2, asr #26
     624:	cb420d0d 	blgt	1083a60 <__bss_end__+0xf3aa18>
     628:	c342100e 	movtgt	r1, #8206	; 0x200e
     62c:	0ec0c1c2 	acseqdm	f4, f2
     630:	00000000 	andeq	r0, r0, r0
     634:	0000000c 	andeq	r0, r0, ip
     638:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     63c:	7c020001 	stcvc	0, cr0, [r2], {1}
     640:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     644:	0000001c 	andeq	r0, r0, ip, lsl r0
     648:	00000634 	andeq	r0, r0, r4, lsr r6
     64c:	0001230c 	andeq	r2, r1, ip, lsl #6
     650:	00000028 	andeq	r0, r0, r8, lsr #32
     654:	8b040e42 	blhi	103f64 <morecore_area+0xbaf64>
     658:	0b0d4201 	bleq	350e64 <__bss_end__+0x207e1c>
     65c:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
     660:	00000ecb 	andeq	r0, r0, fp, asr #29
     664:	00000018 	andeq	r0, r0, r8, lsl r0
     668:	00000634 	andeq	r0, r0, r4, lsr r6
     66c:	00012334 	andeq	r2, r1, r4, lsr r3
     670:	00000018 	andeq	r0, r0, r8, lsl r0
     674:	8b080e42 	blhi	203f84 <__bss_end__+0xbaf3c>
     678:	42018e02 	andmi	r8, r1, #2, 28
     67c:	00040b0c 	andeq	r0, r4, ip, lsl #22
     680:	00000018 	andeq	r0, r0, r8, lsl r0
     684:	00000634 	andeq	r0, r0, r4, lsr r6
     688:	0001234c 	andeq	r2, r1, ip, asr #6
     68c:	00000018 	andeq	r0, r0, r8, lsl r0
     690:	8b080e42 	blhi	203fa0 <__bss_end__+0xbaf58>
     694:	42018e02 	andmi	r8, r1, #2, 28
     698:	00040b0c 	andeq	r0, r4, ip, lsl #22
     69c:	0000000c 	andeq	r0, r0, ip
     6a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6a4:	7c020001 	stcvc	0, cr0, [r2], {1}
     6a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     6b0:	0000069c 	muleq	r0, ip, r6
     6b4:	00012364 	andeq	r2, r1, r4, ror #6
     6b8:	00000030 	andeq	r0, r0, r0, lsr r0
     6bc:	8b040e42 	blhi	103fcc <morecore_area+0xbafcc>
     6c0:	0b0d4201 	bleq	350ecc <__bss_end__+0x207e84>
     6c4:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     6c8:	00000ecb 	andeq	r0, r0, fp, asr #29
     6cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     6d0:	0000069c 	muleq	r0, ip, r6
     6d4:	00012394 	muleq	r1, r4, r3
     6d8:	00000024 	andeq	r0, r0, r4, lsr #32
     6dc:	8b040e42 	blhi	103fec <morecore_area+0xbafec>
     6e0:	0b0d4201 	bleq	350eec <__bss_end__+0x207ea4>
     6e4:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     6e8:	00000ecb 	andeq	r0, r0, fp, asr #29
     6ec:	0000000c 	andeq	r0, r0, ip
     6f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6f4:	7c020001 	stcvc	0, cr0, [r2], {1}
     6f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6fc:	00000028 	andeq	r0, r0, r8, lsr #32
     700:	000006ec 	andeq	r0, r0, ip, ror #13
     704:	000123b8 			; <UNDEFINED> instruction: 0x000123b8
     708:	000000ac 	andeq	r0, r0, ip, lsr #1
     70c:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     710:	87038504 	strhi	r8, [r3, -r4, lsl #10]
     714:	42018b02 	andmi	r8, r1, #2048	; 0x800
     718:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     71c:	100d0c4e 	andne	r0, sp, lr, asr #24
     720:	c5c7cb42 	strbgt	ip, [r7, #2882]	; 0xb42
     724:	00000ec4 	andeq	r0, r0, r4, asr #29
     728:	0000001c 	andeq	r0, r0, ip, lsl r0
     72c:	000006ec 	andeq	r0, r0, ip, ror #13
     730:	00012464 	andeq	r2, r1, r4, ror #8
     734:	00000094 	muleq	r0, r4, r0
     738:	8b080e42 	blhi	204048 <__bss_end__+0xbb000>
     73c:	42018e02 	andmi	r8, r1, #2, 28
     740:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     744:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
     748:	0000001c 	andeq	r0, r0, ip, lsl r0
     74c:	000006ec 	andeq	r0, r0, ip, ror #13
     750:	000124f8 	strdeq	r2, [r1], -r8
     754:	0000006c 	andeq	r0, r0, ip, rrx
     758:	8b080e42 	blhi	204068 <__bss_end__+0xbb020>
     75c:	42018e02 	andmi	r8, r1, #2, 28
     760:	70040b0c 	andvc	r0, r4, ip, lsl #22
     764:	00080d0c 	andeq	r0, r8, ip, lsl #26
     768:	00000018 	andeq	r0, r0, r8, lsl r0
     76c:	000006ec 	andeq	r0, r0, ip, ror #13
     770:	00012564 	andeq	r2, r1, r4, ror #10
     774:	0000001c 	andeq	r0, r0, ip, lsl r0
     778:	8b080e42 	blhi	204088 <__bss_end__+0xbb040>
     77c:	42018e02 	andmi	r8, r1, #2, 28
     780:	00040b0c 	andeq	r0, r4, ip, lsl #22
     784:	0000001c 	andeq	r0, r0, ip, lsl r0
     788:	000006ec 	andeq	r0, r0, ip, ror #13
     78c:	00012580 	andeq	r2, r1, r0, lsl #11
     790:	00000024 	andeq	r0, r0, r4, lsr #32
     794:	8b040e42 	blhi	1040a4 <morecore_area+0xbb0a4>
     798:	0b0d4201 	bleq	350fa4 <__bss_end__+0x207f5c>
     79c:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     7a0:	00000ecb 	andeq	r0, r0, fp, asr #29
     7a4:	0000000c 	andeq	r0, r0, ip
     7a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7ac:	7c020001 	stcvc	0, cr0, [r2], {1}
     7b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     7b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     7b8:	000007a4 	andeq	r0, r0, r4, lsr #15
     7bc:	000125a4 	andeq	r2, r1, r4, lsr #11
     7c0:	000000b4 	strheq	r0, [r0], -r4
     7c4:	8b080e42 	blhi	2040d4 <__bss_end__+0xbb08c>
     7c8:	42018e02 	andmi	r8, r1, #2, 28
     7cc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     7d0:	080d0c54 	stmdaeq	sp, {r2, r4, r6, sl, fp}
     7d4:	0000001c 	andeq	r0, r0, ip, lsl r0
     7d8:	000007a4 	andeq	r0, r0, r4, lsr #15
     7dc:	00012658 	andeq	r2, r1, r8, asr r6
     7e0:	00000078 	andeq	r0, r0, r8, ror r0
     7e4:	8b040e42 	blhi	1040f4 <morecore_area+0xbb0f4>
     7e8:	0b0d4201 	bleq	350ff4 <__bss_end__+0x207fac>
     7ec:	420d0d74 	andmi	r0, sp, #116, 26	; 0x1d00
     7f0:	00000ecb 	andeq	r0, r0, fp, asr #29
     7f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     7f8:	000007a4 	andeq	r0, r0, r4, lsr #15
     7fc:	000126d0 	ldrdeq	r2, [r1], -r0
     800:	00000050 	andeq	r0, r0, r0, asr r0
     804:	8b040e42 	blhi	104114 <morecore_area+0xbb114>
     808:	0b0d4201 	bleq	351014 <__bss_end__+0x207fcc>
     80c:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
     810:	00000ecb 	andeq	r0, r0, fp, asr #29
     814:	0000001c 	andeq	r0, r0, ip, lsl r0
     818:	000007a4 	andeq	r0, r0, r4, lsr #15
     81c:	00012720 	andeq	r2, r1, r0, lsr #14
     820:	0000010c 	andeq	r0, r0, ip, lsl #2
     824:	8b080e42 	blhi	204134 <__bss_end__+0xbb0ec>
     828:	42018e02 	andmi	r8, r1, #2, 28
     82c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     830:	080d0c80 	stmdaeq	sp, {r7, sl, fp}
     834:	00000020 	andeq	r0, r0, r0, lsr #32
     838:	000007a4 	andeq	r0, r0, r4, lsr #15
     83c:	0001282c 	andeq	r2, r1, ip, lsr #16
     840:	00000234 	andeq	r0, r0, r4, lsr r2
     844:	8b080e42 	blhi	204154 <__bss_end__+0xbb10c>
     848:	42018e02 	andmi	r8, r1, #2, 28
     84c:	03040b0c 	movweq	r0, #19212	; 0x4b0c
     850:	0d0c0114 	stfeqs	f0, [ip, #-80]	; 0xffffffb0
     854:	00000008 	andeq	r0, r0, r8
     858:	00000018 	andeq	r0, r0, r8, lsl r0
     85c:	000007a4 	andeq	r0, r0, r4, lsr #15
     860:	00012a60 	andeq	r2, r1, r0, ror #20
     864:	00000044 	andeq	r0, r0, r4, asr #32
     868:	8b080e42 	blhi	204178 <__bss_end__+0xbb130>
     86c:	42018e02 	andmi	r8, r1, #2, 28
     870:	00040b0c 	andeq	r0, r4, ip, lsl #22
     874:	0000001c 	andeq	r0, r0, ip, lsl r0
     878:	000007a4 	andeq	r0, r0, r4, lsr #15
     87c:	00012aa4 	andeq	r2, r1, r4, lsr #21
     880:	0000007c 	andeq	r0, r0, ip, ror r0
     884:	8b080e42 	blhi	204194 <__bss_end__+0xbb14c>
     888:	42018e02 	andmi	r8, r1, #2, 28
     88c:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
     890:	00080d0c 	andeq	r0, r8, ip, lsl #26
     894:	0000001c 	andeq	r0, r0, ip, lsl r0
     898:	000007a4 	andeq	r0, r0, r4, lsr #15
     89c:	00012b20 	andeq	r2, r1, r0, lsr #22
     8a0:	00000038 	andeq	r0, r0, r8, lsr r0
     8a4:	8b080e42 	blhi	2041b4 <__bss_end__+0xbb16c>
     8a8:	42018e02 	andmi	r8, r1, #2, 28
     8ac:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
     8b0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     8b4:	00000020 	andeq	r0, r0, r0, lsr #32
     8b8:	000007a4 	andeq	r0, r0, r4, lsr #15
     8bc:	00012b58 	andeq	r2, r1, r8, asr fp
     8c0:	00000318 	andeq	r0, r0, r8, lsl r3
     8c4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     8c8:	8e028b03 	vmlahi.f64	d8, d2, d3
     8cc:	0b0c4201 	bleq	3110d8 <__bss_end__+0x1c8090>
     8d0:	01860304 	orreq	r0, r6, r4, lsl #6
     8d4:	000c0d0c 	andeq	r0, ip, ip, lsl #26
     8d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     8dc:	000007a4 	andeq	r0, r0, r4, lsr #15
     8e0:	00012e70 	andeq	r2, r1, r0, ror lr
     8e4:	0000006c 	andeq	r0, r0, ip, rrx
     8e8:	8b080e42 	blhi	2041f8 <__bss_end__+0xbb1b0>
     8ec:	42018e02 	andmi	r8, r1, #2, 28
     8f0:	70040b0c 	andvc	r0, r4, ip, lsl #22
     8f4:	00080d0c 	andeq	r0, r8, ip, lsl #26
     8f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     8fc:	000007a4 	andeq	r0, r0, r4, lsr #15
     900:	00012edc 	ldrdeq	r2, [r1], -ip
     904:	000000d8 	ldrdeq	r0, [r0], -r8
     908:	8b080e42 	blhi	204218 <__bss_end__+0xbb1d0>
     90c:	42018e02 	andmi	r8, r1, #2, 28
     910:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     914:	080d0c66 	stmdaeq	sp, {r1, r2, r5, r6, sl, fp}
     918:	0000001c 	andeq	r0, r0, ip, lsl r0
     91c:	000007a4 	andeq	r0, r0, r4, lsr #15
     920:	00012fb4 			; <UNDEFINED> instruction: 0x00012fb4
     924:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     928:	8b080e42 	blhi	204238 <__bss_end__+0xbb1f0>
     92c:	42018e02 	andmi	r8, r1, #2, 28
     930:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     934:	080d0c52 	stmdaeq	sp, {r1, r4, r6, sl, fp}
     938:	0000001c 	andeq	r0, r0, ip, lsl r0
     93c:	000007a4 	andeq	r0, r0, r4, lsr #15
     940:	00013064 	andeq	r3, r1, r4, rrx
     944:	00000044 	andeq	r0, r0, r4, asr #32
     948:	8b040e42 	blhi	104258 <morecore_area+0xbb258>
     94c:	0b0d4201 	bleq	351158 <__bss_end__+0x208110>
     950:	420d0d5a 	andmi	r0, sp, #5760	; 0x1680
     954:	00000ecb 	andeq	r0, r0, fp, asr #29
     958:	00000020 	andeq	r0, r0, r0, lsr #32
     95c:	000007a4 	andeq	r0, r0, r4, lsr #15
     960:	000130a8 	andeq	r3, r1, r8, lsr #1
     964:	00000200 	andeq	r0, r0, r0, lsl #4
     968:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     96c:	8b038504 	blhi	e1d84 <morecore_area+0x98d84>
     970:	42018e02 	andmi	r8, r1, #2, 28
     974:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     978:	100d0cfa 	strdne	r0, [sp], -sl
     97c:	0000001c 	andeq	r0, r0, ip, lsl r0
     980:	000007a4 	andeq	r0, r0, r4, lsr #15
     984:	000132a8 	andeq	r3, r1, r8, lsr #5
     988:	00000080 	andeq	r0, r0, r0, lsl #1
     98c:	8b080e42 	blhi	20429c <__bss_end__+0xbb254>
     990:	42018e02 	andmi	r8, r1, #2, 28
     994:	7a040b0c 	bvc	1035cc <morecore_area+0xba5cc>
     998:	00080d0c 	andeq	r0, r8, ip, lsl #26
     99c:	00000020 	andeq	r0, r0, r0, lsr #32
     9a0:	000007a4 	andeq	r0, r0, r4, lsr #15
     9a4:	00013328 	andeq	r3, r1, r8, lsr #6
     9a8:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     9ac:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     9b0:	8b038504 	blhi	e1dc8 <morecore_area+0x98dc8>
     9b4:	42018e02 	andmi	r8, r1, #2, 28
     9b8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     9bc:	100d0cf2 	strdne	r0, [sp], -r2
     9c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     9c4:	000007a4 	andeq	r0, r0, r4, lsr #15
     9c8:	00013518 	andeq	r3, r1, r8, lsl r5
     9cc:	00000080 	andeq	r0, r0, r0, lsl #1
     9d0:	8b080e42 	blhi	2042e0 <__bss_end__+0xbb298>
     9d4:	42018e02 	andmi	r8, r1, #2, 28
     9d8:	7a040b0c 	bvc	103610 <morecore_area+0xba610>
     9dc:	00080d0c 	andeq	r0, r8, ip, lsl #26
     9e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     9e4:	000007a4 	andeq	r0, r0, r4, lsr #15
     9e8:	00013598 	muleq	r1, r8, r5
     9ec:	00000078 	andeq	r0, r0, r8, ror r0
     9f0:	8b080e42 	blhi	204300 <__bss_end__+0xbb2b8>
     9f4:	42018e02 	andmi	r8, r1, #2, 28
     9f8:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
     9fc:	00080d0c 	andeq	r0, r8, ip, lsl #26
     a00:	0000001c 	andeq	r0, r0, ip, lsl r0
     a04:	000007a4 	andeq	r0, r0, r4, lsr #15
     a08:	00013610 	andeq	r3, r1, r0, lsl r6
     a0c:	00000148 	andeq	r0, r0, r8, asr #2
     a10:	8b080e42 	blhi	204320 <__bss_end__+0xbb2d8>
     a14:	42018e02 	andmi	r8, r1, #2, 28
     a18:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     a1c:	080d0c9e 	stmdaeq	sp, {r1, r2, r3, r4, r7, sl, fp}
     a20:	0000001c 	andeq	r0, r0, ip, lsl r0
     a24:	000007a4 	andeq	r0, r0, r4, lsr #15
     a28:	00013758 	andeq	r3, r1, r8, asr r7
     a2c:	00000080 	andeq	r0, r0, r0, lsl #1
     a30:	8b040e42 	blhi	104340 <morecore_area+0xbb340>
     a34:	0b0d4201 	bleq	351240 <__bss_end__+0x2081f8>
     a38:	420d0d78 	andmi	r0, sp, #120, 26	; 0x1e00
     a3c:	00000ecb 	andeq	r0, r0, fp, asr #29
     a40:	0000001c 	andeq	r0, r0, ip, lsl r0
     a44:	000007a4 	andeq	r0, r0, r4, lsr #15
     a48:	000137d8 	ldrdeq	r3, [r1], -r8
     a4c:	000001e4 	andeq	r0, r0, r4, ror #3
     a50:	8b080e42 	blhi	204360 <__bss_end__+0xbb318>
     a54:	42018e02 	andmi	r8, r1, #2, 28
     a58:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     a5c:	080d0cec 	stmdaeq	sp, {r2, r3, r5, r6, r7, sl, fp}
     a60:	0000001c 	andeq	r0, r0, ip, lsl r0
     a64:	000007a4 	andeq	r0, r0, r4, lsr #15
     a68:	000139bc 			; <UNDEFINED> instruction: 0x000139bc
     a6c:	000000ec 	andeq	r0, r0, ip, ror #1
     a70:	8b080e42 	blhi	204380 <__bss_end__+0xbb338>
     a74:	42018e02 	andmi	r8, r1, #2, 28
     a78:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     a7c:	080d0c6e 	stmdaeq	sp, {r1, r2, r3, r5, r6, sl, fp}
     a80:	0000001c 	andeq	r0, r0, ip, lsl r0
     a84:	000007a4 	andeq	r0, r0, r4, lsr #15
     a88:	00013aa8 	andeq	r3, r1, r8, lsr #21
     a8c:	000000e8 	andeq	r0, r0, r8, ror #1
     a90:	8b080e42 	blhi	2043a0 <__bss_end__+0xbb358>
     a94:	42018e02 	andmi	r8, r1, #2, 28
     a98:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     a9c:	080d0c6e 	stmdaeq	sp, {r1, r2, r3, r5, r6, sl, fp}
     aa0:	0000001c 	andeq	r0, r0, ip, lsl r0
     aa4:	000007a4 	andeq	r0, r0, r4, lsr #15
     aa8:	00013b90 	muleq	r1, r0, fp
     aac:	00000058 	andeq	r0, r0, r8, asr r0
     ab0:	8b040e42 	blhi	1043c0 <morecore_area+0xbb3c0>
     ab4:	0b0d4201 	bleq	3512c0 <__bss_end__+0x208278>
     ab8:	420d0d64 	andmi	r0, sp, #100, 26	; 0x1900
     abc:	00000ecb 	andeq	r0, r0, fp, asr #29
     ac0:	0000000c 	andeq	r0, r0, ip
     ac4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ac8:	7c020001 	stcvc	0, cr0, [r2], {1}
     acc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ad0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ad4:	00000ac0 	andeq	r0, r0, r0, asr #21
     ad8:	00013be8 	andeq	r3, r1, r8, ror #23
     adc:	00000128 	andeq	r0, r0, r8, lsr #2
     ae0:	8b080e42 	blhi	2043f0 <__bss_end__+0xbb3a8>
     ae4:	42018e02 	andmi	r8, r1, #2, 28
     ae8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     aec:	080d0c8e 	stmdaeq	sp, {r1, r2, r3, r7, sl, fp}
     af0:	0000001c 	andeq	r0, r0, ip, lsl r0
     af4:	00000ac0 	andeq	r0, r0, r0, asr #21
     af8:	00013d10 	andeq	r3, r1, r0, lsl sp
     afc:	00000030 	andeq	r0, r0, r0, lsr r0
     b00:	8b040e42 	blhi	104410 <morecore_area+0xbb410>
     b04:	0b0d4201 	bleq	351310 <__bss_end__+0x2082c8>
     b08:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     b0c:	00000ecb 	andeq	r0, r0, fp, asr #29
     b10:	0000001c 	andeq	r0, r0, ip, lsl r0
     b14:	00000ac0 	andeq	r0, r0, r0, asr #21
     b18:	00013d40 	andeq	r3, r1, r0, asr #26
     b1c:	00000030 	andeq	r0, r0, r0, lsr r0
     b20:	8b040e42 	blhi	104430 <morecore_area+0xbb430>
     b24:	0b0d4201 	bleq	351330 <__bss_end__+0x2082e8>
     b28:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
     b2c:	00000ecb 	andeq	r0, r0, fp, asr #29
     b30:	00000018 	andeq	r0, r0, r8, lsl r0
     b34:	00000ac0 	andeq	r0, r0, r0, asr #21
     b38:	00013d70 	andeq	r3, r1, r0, ror sp
     b3c:	00000024 	andeq	r0, r0, r4, lsr #32
     b40:	8b080e42 	blhi	204450 <__bss_end__+0xbb408>
     b44:	42018e02 	andmi	r8, r1, #2, 28
     b48:	00040b0c 	andeq	r0, r4, ip, lsl #22
     b4c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b50:	00000ac0 	andeq	r0, r0, r0, asr #21
     b54:	00013d94 	muleq	r1, r4, sp
     b58:	0000003c 	andeq	r0, r0, ip, lsr r0
     b5c:	8b080e42 	blhi	20446c <__bss_end__+0xbb424>
     b60:	42018e02 	andmi	r8, r1, #2, 28
     b64:	58040b0c 	stmdapl	r4, {r2, r3, r8, r9, fp}
     b68:	00080d0c 	andeq	r0, r8, ip, lsl #26
     b6c:	00000028 	andeq	r0, r0, r8, lsr #32
     b70:	00000ac0 	andeq	r0, r0, r0, asr #21
     b74:	00013dd0 	ldrdeq	r3, [r1], -r0
     b78:	000000ac 	andeq	r0, r0, ip, lsr #1
     b7c:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     b80:	87038504 	strhi	r8, [r3, -r4, lsl #10]
     b84:	42018b02 	andmi	r8, r1, #2048	; 0x800
     b88:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     b8c:	100d0c4e 	andne	r0, sp, lr, asr #24
     b90:	c5c7cb42 	strbgt	ip, [r7, #2882]	; 0xb42
     b94:	00000ec4 	andeq	r0, r0, r4, asr #29
     b98:	0000001c 	andeq	r0, r0, ip, lsl r0
     b9c:	00000ac0 	andeq	r0, r0, r0, asr #21
     ba0:	00013e7c 	andeq	r3, r1, ip, ror lr
     ba4:	000001a4 	andeq	r0, r0, r4, lsr #3
     ba8:	8b080e42 	blhi	2044b8 <__bss_end__+0xbb470>
     bac:	42018e02 	andmi	r8, r1, #2, 28
     bb0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     bb4:	080d0ccc 	stmdaeq	sp, {r2, r3, r6, r7, sl, fp}
     bb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bbc:	00000ac0 	andeq	r0, r0, r0, asr #21
     bc0:	00014020 	andeq	r4, r1, r0, lsr #32
     bc4:	00000094 	muleq	r0, r4, r0
     bc8:	8b080e42 	blhi	2044d8 <__bss_end__+0xbb490>
     bcc:	42018e02 	andmi	r8, r1, #2, 28
     bd0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     bd4:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
     bd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bdc:	00000ac0 	andeq	r0, r0, r0, asr #21
     be0:	000140b4 	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
     be4:	000000e8 	andeq	r0, r0, r8, ror #1
     be8:	8b080e42 	blhi	2044f8 <__bss_end__+0xbb4b0>
     bec:	42018e02 	andmi	r8, r1, #2, 28
     bf0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     bf4:	080d0c6e 	stmdaeq	sp, {r1, r2, r3, r5, r6, sl, fp}
     bf8:	0000001c 	andeq	r0, r0, ip, lsl r0
     bfc:	00000ac0 	andeq	r0, r0, r0, asr #21
     c00:	0001419c 	muleq	r1, ip, r1
     c04:	00000108 	andeq	r0, r0, r8, lsl #2
     c08:	8b080e42 	blhi	204518 <__bss_end__+0xbb4d0>
     c0c:	42018e02 	andmi	r8, r1, #2, 28
     c10:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c14:	080d0c7e 	stmdaeq	sp, {r1, r2, r3, r4, r5, r6, sl, fp}
     c18:	0000001c 	andeq	r0, r0, ip, lsl r0
     c1c:	00000ac0 	andeq	r0, r0, r0, asr #21
     c20:	000142a4 	andeq	r4, r1, r4, lsr #5
     c24:	00000040 	andeq	r0, r0, r0, asr #32
     c28:	8b040e42 	blhi	104538 <morecore_area+0xbb538>
     c2c:	0b0d4201 	bleq	351438 <__bss_end__+0x2083f0>
     c30:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     c34:	00000ecb 	andeq	r0, r0, fp, asr #29
     c38:	0000001c 	andeq	r0, r0, ip, lsl r0
     c3c:	00000ac0 	andeq	r0, r0, r0, asr #21
     c40:	000142e4 	andeq	r4, r1, r4, ror #5
     c44:	000000b4 	strheq	r0, [r0], -r4
     c48:	8b080e42 	blhi	204558 <__bss_end__+0xbb510>
     c4c:	42018e02 	andmi	r8, r1, #2, 28
     c50:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c54:	080d0c54 	stmdaeq	sp, {r2, r4, r6, sl, fp}
     c58:	0000001c 	andeq	r0, r0, ip, lsl r0
     c5c:	00000ac0 	andeq	r0, r0, r0, asr #21
     c60:	00014398 	muleq	r1, r8, r3
     c64:	00000040 	andeq	r0, r0, r0, asr #32
     c68:	8b040e42 	blhi	104578 <morecore_area+0xbb578>
     c6c:	0b0d4201 	bleq	351478 <__bss_end__+0x208430>
     c70:	420d0d58 	andmi	r0, sp, #88, 26	; 0x1600
     c74:	00000ecb 	andeq	r0, r0, fp, asr #29
     c78:	0000001c 	andeq	r0, r0, ip, lsl r0
     c7c:	00000ac0 	andeq	r0, r0, r0, asr #21
     c80:	000143d8 	ldrdeq	r4, [r1], -r8
     c84:	00000100 	andeq	r0, r0, r0, lsl #2
     c88:	8b080e42 	blhi	204598 <__bss_end__+0xbb550>
     c8c:	42018e02 	andmi	r8, r1, #2, 28
     c90:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     c94:	080d0c7a 	stmdaeq	sp, {r1, r3, r4, r5, r6, sl, fp}
     c98:	0000001c 	andeq	r0, r0, ip, lsl r0
     c9c:	00000ac0 	andeq	r0, r0, r0, asr #21
     ca0:	000144d8 	ldrdeq	r4, [r1], -r8
     ca4:	0000006c 	andeq	r0, r0, ip, rrx
     ca8:	8b040e42 	blhi	1045b8 <morecore_area+0xbb5b8>
     cac:	0b0d4201 	bleq	3514b8 <__bss_end__+0x208470>
     cb0:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
     cb4:	00000ecb 	andeq	r0, r0, fp, asr #29
     cb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cbc:	00000ac0 	andeq	r0, r0, r0, asr #21
     cc0:	00014544 	andeq	r4, r1, r4, asr #10
     cc4:	00000120 	andeq	r0, r0, r0, lsr #2
     cc8:	8b080e42 	blhi	2045d8 <__bss_end__+0xbb590>
     ccc:	42018e02 	andmi	r8, r1, #2, 28
     cd0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     cd4:	080d0c8a 	stmdaeq	sp, {r1, r3, r7, sl, fp}
     cd8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cdc:	00000ac0 	andeq	r0, r0, r0, asr #21
     ce0:	00014664 	andeq	r4, r1, r4, ror #12
     ce4:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     ce8:	8b080e42 	blhi	2045f8 <__bss_end__+0xbb5b0>
     cec:	42018e02 	andmi	r8, r1, #2, 28
     cf0:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     cf4:	080d0c72 	stmdaeq	sp, {r1, r4, r5, r6, sl, fp}
     cf8:	0000001c 	andeq	r0, r0, ip, lsl r0
     cfc:	00000ac0 	andeq	r0, r0, r0, asr #21
     d00:	00014754 	andeq	r4, r1, r4, asr r7
     d04:	00000080 	andeq	r0, r0, r0, lsl #1
     d08:	8b080e42 	blhi	204618 <__bss_end__+0xbb5d0>
     d0c:	42018e02 	andmi	r8, r1, #2, 28
     d10:	7a040b0c 	bvc	103948 <morecore_area+0xba948>
     d14:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d18:	00000034 	andeq	r0, r0, r4, lsr r0
     d1c:	00000ac0 	andeq	r0, r0, r0, asr #21
     d20:	000147d4 	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
     d24:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     d28:	80100e42 	andshi	r0, r0, r2, asr #28
     d2c:	82038104 	andhi	r8, r3, #4, 2
     d30:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
     d34:	068b180e 	streq	r1, [fp], lr, lsl #16
     d38:	0c42058e 	cfstr64eq	mvdx0, [r2], {142}	; 0x8e
     d3c:	5c02140b 	cfstrspl	mvf1, [r2], {11}
     d40:	42180d0c 	andsmi	r0, r8, #12, 26	; 0x300
     d44:	100ecbce 	andne	ip, lr, lr, asr #23
     d48:	c1c2c342 	bicgt	ip, r2, r2, asr #6
     d4c:	00000ec0 	andeq	r0, r0, r0, asr #29
     d50:	0000001c 	andeq	r0, r0, ip, lsl r0
     d54:	00000ac0 	andeq	r0, r0, r0, asr #21
     d58:	000148a4 	andeq	r4, r1, r4, lsr #17
     d5c:	0000002c 	andeq	r0, r0, ip, lsr #32
     d60:	8b040e42 	blhi	104670 <morecore_area+0xbb670>
     d64:	0b0d4201 	bleq	351570 <__bss_end__+0x208528>
     d68:	420d0d4e 	andmi	r0, sp, #4992	; 0x1380
     d6c:	00000ecb 	andeq	r0, r0, fp, asr #29
     d70:	0000001c 	andeq	r0, r0, ip, lsl r0
     d74:	00000ac0 	andeq	r0, r0, r0, asr #21
     d78:	000148d0 	ldrdeq	r4, [r1], -r0
     d7c:	00000034 	andeq	r0, r0, r4, lsr r0
     d80:	8b080e42 	blhi	204690 <__bss_end__+0xbb648>
     d84:	42018e02 	andmi	r8, r1, #2, 28
     d88:	52040b0c 	andpl	r0, r4, #12, 22	; 0x3000
     d8c:	00080d0c 	andeq	r0, r8, ip, lsl #26
     d90:	00000020 	andeq	r0, r0, r0, lsr #32
     d94:	00000ac0 	andeq	r0, r0, r0, asr #21
     d98:	00014904 	andeq	r4, r1, r4, lsl #18
     d9c:	00000058 	andeq	r0, r0, r8, asr r0
     da0:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     da4:	8e028b03 	vmlahi.f64	d8, d2, d3
     da8:	0b0c4201 	bleq	3115b4 <__bss_end__+0x1c856c>
     dac:	0d0c6404 	cfstrseq	mvf6, [ip, #-16]
     db0:	0000000c 	andeq	r0, r0, ip
     db4:	0000000c 	andeq	r0, r0, ip
     db8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     dbc:	7c020001 	stcvc	0, cr0, [r2], {1}
     dc0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     dc4:	00000014 	andeq	r0, r0, r4, lsl r0
     dc8:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     dcc:	0001495c 	andeq	r4, r1, ip, asr r9
     dd0:	0000000c 	andeq	r0, r0, ip
     dd4:	8b040e42 	blhi	1046e4 <morecore_area+0xbb6e4>
     dd8:	0b0d4201 	bleq	3515e4 <__bss_end__+0x20859c>
     ddc:	00000018 	andeq	r0, r0, r8, lsl r0
     de0:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     de4:	00014968 	andeq	r4, r1, r8, ror #18
     de8:	00000014 	andeq	r0, r0, r4, lsl r0
     dec:	8b080e42 	blhi	2046fc <__bss_end__+0xbb6b4>
     df0:	42018e02 	andmi	r8, r1, #2, 28
     df4:	00040b0c 	andeq	r0, r4, ip, lsl #22
     df8:	0000001c 	andeq	r0, r0, ip, lsl r0
     dfc:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     e00:	0001497c 	andeq	r4, r1, ip, ror r9
     e04:	00000024 	andeq	r0, r0, r4, lsr #32
     e08:	8b040e42 	blhi	104718 <morecore_area+0xbb718>
     e0c:	0b0d4201 	bleq	351618 <__bss_end__+0x2085d0>
     e10:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     e14:	00000ecb 	andeq	r0, r0, fp, asr #29
     e18:	0000001c 	andeq	r0, r0, ip, lsl r0
     e1c:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     e20:	000149a0 	andeq	r4, r1, r0, lsr #19
     e24:	00000024 	andeq	r0, r0, r4, lsr #32
     e28:	8b040e42 	blhi	104738 <morecore_area+0xbb738>
     e2c:	0b0d4201 	bleq	351638 <__bss_end__+0x2085f0>
     e30:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     e34:	00000ecb 	andeq	r0, r0, fp, asr #29
     e38:	0000001c 	andeq	r0, r0, ip, lsl r0
     e3c:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     e40:	000149c4 	andeq	r4, r1, r4, asr #19
     e44:	00000024 	andeq	r0, r0, r4, lsr #32
     e48:	8b040e42 	blhi	104758 <morecore_area+0xbb758>
     e4c:	0b0d4201 	bleq	351658 <__bss_end__+0x208610>
     e50:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     e54:	00000ecb 	andeq	r0, r0, fp, asr #29
     e58:	0000001c 	andeq	r0, r0, ip, lsl r0
     e5c:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     e60:	000149e8 	andeq	r4, r1, r8, ror #19
     e64:	00000024 	andeq	r0, r0, r4, lsr #32
     e68:	8b080e42 	blhi	204778 <__bss_end__+0xbb730>
     e6c:	42018e02 	andmi	r8, r1, #2, 28
     e70:	4c040b0c 			; <UNDEFINED> instruction: 0x4c040b0c
     e74:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e78:	0000001c 	andeq	r0, r0, ip, lsl r0
     e7c:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     e80:	00014a0c 	andeq	r4, r1, ip, lsl #20
     e84:	00000024 	andeq	r0, r0, r4, lsr #32
     e88:	8b080e42 	blhi	204798 <__bss_end__+0xbb750>
     e8c:	42018e02 	andmi	r8, r1, #2, 28
     e90:	4c040b0c 			; <UNDEFINED> instruction: 0x4c040b0c
     e94:	00080d0c 	andeq	r0, r8, ip, lsl #26
     e98:	0000001c 	andeq	r0, r0, ip, lsl r0
     e9c:	00000db4 			; <UNDEFINED> instruction: 0x00000db4
     ea0:	00014a30 	andeq	r4, r1, r0, lsr sl
     ea4:	00000024 	andeq	r0, r0, r4, lsr #32
     ea8:	8b040e42 	blhi	1047b8 <morecore_area+0xbb7b8>
     eac:	0b0d4201 	bleq	3516b8 <__bss_end__+0x208670>
     eb0:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     eb4:	00000ecb 	andeq	r0, r0, fp, asr #29
     eb8:	0000000c 	andeq	r0, r0, ip
     ebc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ec0:	7c020001 	stcvc	0, cr0, [r2], {1}
     ec4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ec8:	0000001c 	andeq	r0, r0, ip, lsl r0
     ecc:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
     ed0:	00014a54 	andeq	r4, r1, r4, asr sl
     ed4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     ed8:	8b040e42 	blhi	1047e8 <morecore_area+0xbb7e8>
     edc:	0b0d4201 	bleq	3516e8 <__bss_end__+0x2086a0>
     ee0:	0d0d5002 	stceq	0, cr5, [sp, #-8]
     ee4:	000ecb42 	andeq	ip, lr, r2, asr #22
     ee8:	0000001c 	andeq	r0, r0, ip, lsl r0
     eec:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
     ef0:	00014b04 	andeq	r4, r1, r4, lsl #22
     ef4:	000000b8 	strheq	r0, [r0], -r8
     ef8:	8b080e42 	blhi	204808 <__bss_end__+0xbb7c0>
     efc:	42018e02 	andmi	r8, r1, #2, 28
     f00:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     f04:	080d0c56 	stmdaeq	sp, {r1, r2, r4, r6, sl, fp}
     f08:	00000018 	andeq	r0, r0, r8, lsl r0
     f0c:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
     f10:	00014bbc 			; <UNDEFINED> instruction: 0x00014bbc
     f14:	00000030 	andeq	r0, r0, r0, lsr r0
     f18:	8b080e42 	blhi	204828 <__bss_end__+0xbb7e0>
     f1c:	42018e02 	andmi	r8, r1, #2, 28
     f20:	00040b0c 	andeq	r0, r4, ip, lsl #22
     f24:	0000001c 	andeq	r0, r0, ip, lsl r0
     f28:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
     f2c:	00014bec 	andeq	r4, r1, ip, ror #23
     f30:	00000024 	andeq	r0, r0, r4, lsr #32
     f34:	8b040e42 	blhi	104844 <morecore_area+0xbb844>
     f38:	0b0d4201 	bleq	351744 <__bss_end__+0x2086fc>
     f3c:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     f40:	00000ecb 	andeq	r0, r0, fp, asr #29
     f44:	0000001c 	andeq	r0, r0, ip, lsl r0
     f48:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
     f4c:	00014c10 	andeq	r4, r1, r0, lsl ip
     f50:	000000c4 	andeq	r0, r0, r4, asr #1
     f54:	8b080e42 	blhi	204864 <__bss_end__+0xbb81c>
     f58:	42018e02 	andmi	r8, r1, #2, 28
     f5c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     f60:	080d0c5c 	stmdaeq	sp, {r2, r3, r4, r6, sl, fp}
     f64:	0000001c 	andeq	r0, r0, ip, lsl r0
     f68:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
     f6c:	00014cd4 	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
     f70:	000000d8 	ldrdeq	r0, [r0], -r8
     f74:	8b080e42 	blhi	204884 <__bss_end__+0xbb83c>
     f78:	42018e02 	andmi	r8, r1, #2, 28
     f7c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
     f80:	080d0c66 	stmdaeq	sp, {r1, r2, r5, r6, sl, fp}
     f84:	0000001c 	andeq	r0, r0, ip, lsl r0
     f88:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
     f8c:	00014dac 	andeq	r4, r1, ip, lsr #27
     f90:	00000070 	andeq	r0, r0, r0, ror r0
     f94:	8b080e42 	blhi	2048a4 <__bss_end__+0xbb85c>
     f98:	42018e02 	andmi	r8, r1, #2, 28
     f9c:	72040b0c 	andvc	r0, r4, #12, 22	; 0x3000
     fa0:	00080d0c 	andeq	r0, r8, ip, lsl #26
     fa4:	0000000c 	andeq	r0, r0, ip
     fa8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     fac:	7c020001 	stcvc	0, cr0, [r2], {1}
     fb0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     fb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     fb8:	00000fa4 	andeq	r0, r0, r4, lsr #31
     fbc:	00014e1c 	andeq	r4, r1, ip, lsl lr
     fc0:	00000024 	andeq	r0, r0, r4, lsr #32
     fc4:	8b040e42 	blhi	1048d4 <morecore_area+0xbb8d4>
     fc8:	0b0d4201 	bleq	3517d4 <__bss_end__+0x20878c>
     fcc:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     fd0:	00000ecb 	andeq	r0, r0, fp, asr #29
     fd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     fd8:	00000fa4 	andeq	r0, r0, r4, lsr #31
     fdc:	00014e40 	andeq	r4, r1, r0, asr #28
     fe0:	00000024 	andeq	r0, r0, r4, lsr #32
     fe4:	8b040e42 	blhi	1048f4 <morecore_area+0xbb8f4>
     fe8:	0b0d4201 	bleq	3517f4 <__bss_end__+0x2087ac>
     fec:	420d0d4a 	andmi	r0, sp, #4736	; 0x1280
     ff0:	00000ecb 	andeq	r0, r0, fp, asr #29
     ff4:	0000000c 	andeq	r0, r0, ip
     ff8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ffc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1000:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1004:	00000020 	andeq	r0, r0, r0, lsr #32
    1008:	00000ff4 	strdeq	r0, [r0], -r4
    100c:	00014e64 	andeq	r4, r1, r4, ror #28
    1010:	00000028 	andeq	r0, r0, r8, lsr #32
    1014:	87080e42 	strhi	r0, [r8, -r2, asr #28]
    1018:	42018b02 	andmi	r8, r1, #2048	; 0x800
    101c:	4c040b0c 			; <UNDEFINED> instruction: 0x4c040b0c
    1020:	42080d0c 	andmi	r0, r8, #12, 26	; 0x300
    1024:	000ec7cb 	andeq	ip, lr, fp, asr #15
    1028:	00000018 	andeq	r0, r0, r8, lsl r0
    102c:	00000ff4 	strdeq	r0, [r0], -r4
    1030:	00014e8c 	andeq	r4, r1, ip, lsl #29
    1034:	00000018 	andeq	r0, r0, r8, lsl r0
    1038:	8b080e42 	blhi	204948 <__bss_end__+0xbb900>
    103c:	42018e02 	andmi	r8, r1, #2, 28
    1040:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1044:	0000001c 	andeq	r0, r0, ip, lsl r0
    1048:	00000ff4 	strdeq	r0, [r0], -r4
    104c:	00014ea4 	andeq	r4, r1, r4, lsr #29
    1050:	00000024 	andeq	r0, r0, r4, lsr #32
    1054:	8b080e42 	blhi	204964 <__bss_end__+0xbb91c>
    1058:	42018e02 	andmi	r8, r1, #2, 28
    105c:	4c040b0c 			; <UNDEFINED> instruction: 0x4c040b0c
    1060:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1064:	0000000c 	andeq	r0, r0, ip
    1068:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    106c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1070:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1074:	0000001c 	andeq	r0, r0, ip, lsl r0
    1078:	00001064 	andeq	r1, r0, r4, rrx
    107c:	00014ec8 	andeq	r4, r1, r8, asr #29
    1080:	00000128 	andeq	r0, r0, r8, lsr #2
    1084:	8b080e42 	blhi	204994 <__bss_end__+0xbb94c>
    1088:	42018e02 	andmi	r8, r1, #2, 28
    108c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1090:	080d0c8e 	stmdaeq	sp, {r1, r2, r3, r7, sl, fp}
    1094:	0000001c 	andeq	r0, r0, ip, lsl r0
    1098:	00001064 	andeq	r1, r0, r4, rrx
    109c:	00014ff0 	strdeq	r4, [r1], -r0
    10a0:	00000128 	andeq	r0, r0, r8, lsr #2
    10a4:	8b080e42 	blhi	2049b4 <__bss_end__+0xbb96c>
    10a8:	42018e02 	andmi	r8, r1, #2, 28
    10ac:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    10b0:	080d0c8e 	stmdaeq	sp, {r1, r2, r3, r7, sl, fp}
    10b4:	0000001c 	andeq	r0, r0, ip, lsl r0
    10b8:	00001064 	andeq	r1, r0, r4, rrx
    10bc:	00015118 	andeq	r5, r1, r8, lsl r1
    10c0:	00000030 	andeq	r0, r0, r0, lsr r0
    10c4:	8b040e42 	blhi	1049d4 <morecore_area+0xbb9d4>
    10c8:	0b0d4201 	bleq	3518d4 <__bss_end__+0x20888c>
    10cc:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    10d0:	00000ecb 	andeq	r0, r0, fp, asr #29
    10d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    10d8:	00001064 	andeq	r1, r0, r4, rrx
    10dc:	00015148 	andeq	r5, r1, r8, asr #2
    10e0:	00000030 	andeq	r0, r0, r0, lsr r0
    10e4:	8b040e42 	blhi	1049f4 <morecore_area+0xbb9f4>
    10e8:	0b0d4201 	bleq	3518f4 <__bss_end__+0x2088ac>
    10ec:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    10f0:	00000ecb 	andeq	r0, r0, fp, asr #29
    10f4:	00000018 	andeq	r0, r0, r8, lsl r0
    10f8:	00001064 	andeq	r1, r0, r4, rrx
    10fc:	00015178 	andeq	r5, r1, r8, ror r1
    1100:	00000024 	andeq	r0, r0, r4, lsr #32
    1104:	8b080e42 	blhi	204a14 <__bss_end__+0xbb9cc>
    1108:	42018e02 	andmi	r8, r1, #2, 28
    110c:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1110:	0000001c 	andeq	r0, r0, ip, lsl r0
    1114:	00001064 	andeq	r1, r0, r4, rrx
    1118:	0001519c 	muleq	r1, ip, r1
    111c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1120:	8b080e42 	blhi	204a30 <__bss_end__+0xbb9e8>
    1124:	42018e02 	andmi	r8, r1, #2, 28
    1128:	58040b0c 	stmdapl	r4, {r2, r3, r8, r9, fp}
    112c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1130:	0000001c 	andeq	r0, r0, ip, lsl r0
    1134:	00001064 	andeq	r1, r0, r4, rrx
    1138:	000151d8 	ldrdeq	r5, [r1], -r8
    113c:	00000038 	andeq	r0, r0, r8, lsr r0
    1140:	8b080e42 	blhi	204a50 <__bss_end__+0xbba08>
    1144:	42018e02 	andmi	r8, r1, #2, 28
    1148:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    114c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1150:	00000028 	andeq	r0, r0, r8, lsr #32
    1154:	00001064 	andeq	r1, r0, r4, rrx
    1158:	00015210 	andeq	r5, r1, r0, lsl r2
    115c:	000000ac 	andeq	r0, r0, ip, lsr #1
    1160:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    1164:	87038504 	strhi	r8, [r3, -r4, lsl #10]
    1168:	42018b02 	andmi	r8, r1, #2048	; 0x800
    116c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1170:	100d0c4e 	andne	r0, sp, lr, asr #24
    1174:	c5c7cb42 	strbgt	ip, [r7, #2882]	; 0xb42
    1178:	00000ec4 	andeq	r0, r0, r4, asr #29
    117c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1180:	00001064 	andeq	r1, r0, r4, rrx
    1184:	000152bc 			; <UNDEFINED> instruction: 0x000152bc
    1188:	000001a4 	andeq	r0, r0, r4, lsr #3
    118c:	8b080e42 	blhi	204a9c <__bss_end__+0xbba54>
    1190:	42018e02 	andmi	r8, r1, #2, 28
    1194:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1198:	080d0ccc 	stmdaeq	sp, {r2, r3, r6, r7, sl, fp}
    119c:	0000001c 	andeq	r0, r0, ip, lsl r0
    11a0:	00001064 	andeq	r1, r0, r4, rrx
    11a4:	00015460 	andeq	r5, r1, r0, ror #8
    11a8:	0000008c 	andeq	r0, r0, ip, lsl #1
    11ac:	8b080e42 	blhi	204abc <__bss_end__+0xbba74>
    11b0:	42018e02 	andmi	r8, r1, #2, 28
    11b4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    11b8:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    11bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    11c0:	00001064 	andeq	r1, r0, r4, rrx
    11c4:	000154ec 	andeq	r5, r1, ip, ror #9
    11c8:	000000fc 	strdeq	r0, [r0], -ip
    11cc:	8b080e42 	blhi	204adc <__bss_end__+0xbba94>
    11d0:	42018e02 	andmi	r8, r1, #2, 28
    11d4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    11d8:	080d0c78 	stmdaeq	sp, {r3, r4, r5, r6, sl, fp}
    11dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    11e0:	00001064 	andeq	r1, r0, r4, rrx
    11e4:	000155e8 	andeq	r5, r1, r8, ror #11
    11e8:	000000e4 	andeq	r0, r0, r4, ror #1
    11ec:	8b080e42 	blhi	204afc <__bss_end__+0xbbab4>
    11f0:	42018e02 	andmi	r8, r1, #2, 28
    11f4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    11f8:	080d0c6c 	stmdaeq	sp, {r2, r3, r5, r6, sl, fp}
    11fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1200:	00001064 	andeq	r1, r0, r4, rrx
    1204:	000156cc 	andeq	r5, r1, ip, asr #13
    1208:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    120c:	8b080e42 	blhi	204b1c <__bss_end__+0xbbad4>
    1210:	42018e02 	andmi	r8, r1, #2, 28
    1214:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1218:	080d0c72 	stmdaeq	sp, {r1, r4, r5, r6, sl, fp}
    121c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1220:	00001064 	andeq	r1, r0, r4, rrx
    1224:	000157bc 			; <UNDEFINED> instruction: 0x000157bc
    1228:	00000038 	andeq	r0, r0, r8, lsr r0
    122c:	8b080e42 	blhi	204b3c <__bss_end__+0xbbaf4>
    1230:	42018e02 	andmi	r8, r1, #2, 28
    1234:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    1238:	00080d0c 	andeq	r0, r8, ip, lsl #26
    123c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1240:	00001064 	andeq	r1, r0, r4, rrx
    1244:	000157f4 	strdeq	r5, [r1], -r4
    1248:	00000194 	muleq	r0, r4, r1
    124c:	8b080e42 	blhi	204b5c <__bss_end__+0xbbb14>
    1250:	42018e02 	andmi	r8, r1, #2, 28
    1254:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1258:	080d0cc4 	stmdaeq	sp, {r2, r6, r7, sl, fp}
    125c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1260:	00001064 	andeq	r1, r0, r4, rrx
    1264:	00015988 	andeq	r5, r1, r8, lsl #19
    1268:	00000110 	andeq	r0, r0, r0, lsl r1
    126c:	8b080e42 	blhi	204b7c <__bss_end__+0xbbb34>
    1270:	42018e02 	andmi	r8, r1, #2, 28
    1274:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1278:	080d0c82 	stmdaeq	sp, {r1, r7, sl, fp}
    127c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1280:	00001064 	andeq	r1, r0, r4, rrx
    1284:	00015a98 	muleq	r1, r8, sl
    1288:	000000dc 	ldrdeq	r0, [r0], -ip
    128c:	8b080e42 	blhi	204b9c <__bss_end__+0xbbb54>
    1290:	42018e02 	andmi	r8, r1, #2, 28
    1294:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1298:	080d0c68 	stmdaeq	sp, {r3, r5, r6, sl, fp}
    129c:	00000020 	andeq	r0, r0, r0, lsr #32
    12a0:	00001064 	andeq	r1, r0, r4, rrx
    12a4:	00015b74 	andeq	r5, r1, r4, ror fp
    12a8:	000001dc 	ldrdeq	r0, [r0], -ip
    12ac:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    12b0:	8e028b03 	vmlahi.f64	d8, d2, d3
    12b4:	0b0c4201 	bleq	311ac0 <__bss_end__+0x1c8a78>
    12b8:	0ce80204 	sfmeq	f0, 2, [r8], #16
    12bc:	00000c0d 	andeq	r0, r0, sp, lsl #24
    12c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12c4:	00001064 	andeq	r1, r0, r4, rrx
    12c8:	00015d50 	andeq	r5, r1, r0, asr sp
    12cc:	00000044 	andeq	r0, r0, r4, asr #32
    12d0:	8b080e42 	blhi	204be0 <__bss_end__+0xbbb98>
    12d4:	42018e02 	andmi	r8, r1, #2, 28
    12d8:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    12dc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    12e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    12e4:	00001064 	andeq	r1, r0, r4, rrx
    12e8:	00015d94 	muleq	r1, r4, sp
    12ec:	00000060 	andeq	r0, r0, r0, rrx
    12f0:	8b040e42 	blhi	104c00 <morecore_area+0xbbc00>
    12f4:	0b0d4201 	bleq	351b00 <__bss_end__+0x208ab8>
    12f8:	420d0d68 	andmi	r0, sp, #104, 26	; 0x1a00
    12fc:	00000ecb 	andeq	r0, r0, fp, asr #29
    1300:	00000020 	andeq	r0, r0, r0, lsr #32
    1304:	00001064 	andeq	r1, r0, r4, rrx
    1308:	00015df4 	strdeq	r5, [r1], -r4
    130c:	00000134 	andeq	r0, r0, r4, lsr r1
    1310:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1314:	8e028b03 	vmlahi.f64	d8, d2, d3
    1318:	0b0c4201 	bleq	311b24 <__bss_end__+0x1c8adc>
    131c:	0c940204 	lfmeq	f0, 4, [r4], {4}
    1320:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1324:	00000020 	andeq	r0, r0, r0, lsr #32
    1328:	00001064 	andeq	r1, r0, r4, rrx
    132c:	00015f28 	andeq	r5, r1, r8, lsr #30
    1330:	000001a4 	andeq	r0, r0, r4, lsr #3
    1334:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1338:	8e028b03 	vmlahi.f64	d8, d2, d3
    133c:	0b0c4201 	bleq	311b48 <__bss_end__+0x1c8b00>
    1340:	0ccc0204 	sfmeq	f0, 2, [ip], {4}
    1344:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1348:	0000001c 	andeq	r0, r0, ip, lsl r0
    134c:	00001064 	andeq	r1, r0, r4, rrx
    1350:	000160cc 	andeq	r6, r1, ip, asr #1
    1354:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1358:	8b080e42 	blhi	204c68 <__bss_end__+0xbbc20>
    135c:	42018e02 	andmi	r8, r1, #2, 28
    1360:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1364:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
    1368:	0000001c 	andeq	r0, r0, ip, lsl r0
    136c:	00001064 	andeq	r1, r0, r4, rrx
    1370:	0001619c 	muleq	r1, ip, r1
    1374:	000000c4 	andeq	r0, r0, r4, asr #1
    1378:	8b080e42 	blhi	204c88 <__bss_end__+0xbbc40>
    137c:	42018e02 	andmi	r8, r1, #2, 28
    1380:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1384:	080d0c5c 	stmdaeq	sp, {r2, r3, r4, r6, sl, fp}
    1388:	0000001c 	andeq	r0, r0, ip, lsl r0
    138c:	00001064 	andeq	r1, r0, r4, rrx
    1390:	00016260 	andeq	r6, r1, r0, ror #4
    1394:	00000018 	andeq	r0, r0, r8, lsl r0
    1398:	8b040e42 	blhi	104ca8 <morecore_area+0xbbca8>
    139c:	0b0d4201 	bleq	351ba8 <__bss_end__+0x208b60>
    13a0:	420d0d44 	andmi	r0, sp, #68, 26	; 0x1100
    13a4:	00000ecb 	andeq	r0, r0, fp, asr #29
    13a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ac:	00001064 	andeq	r1, r0, r4, rrx
    13b0:	00016278 	andeq	r6, r1, r8, ror r2
    13b4:	0000006c 	andeq	r0, r0, ip, rrx
    13b8:	8b080e42 	blhi	204cc8 <__bss_end__+0xbbc80>
    13bc:	42018e02 	andmi	r8, r1, #2, 28
    13c0:	70040b0c 	andvc	r0, r4, ip, lsl #22
    13c4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    13c8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13cc:	00001064 	andeq	r1, r0, r4, rrx
    13d0:	000162e4 	andeq	r6, r1, r4, ror #5
    13d4:	00000078 	andeq	r0, r0, r8, ror r0
    13d8:	8b080e42 	blhi	204ce8 <__bss_end__+0xbbca0>
    13dc:	42018e02 	andmi	r8, r1, #2, 28
    13e0:	76040b0c 	strvc	r0, [r4], -ip, lsl #22
    13e4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    13e8:	0000001c 	andeq	r0, r0, ip, lsl r0
    13ec:	00001064 	andeq	r1, r0, r4, rrx
    13f0:	0001635c 	andeq	r6, r1, ip, asr r3
    13f4:	000000ac 	andeq	r0, r0, ip, lsr #1
    13f8:	8b080e42 	blhi	204d08 <__bss_end__+0xbbcc0>
    13fc:	42018e02 	andmi	r8, r1, #2, 28
    1400:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1404:	080d0c50 	stmdaeq	sp, {r4, r6, sl, fp}
    1408:	0000001c 	andeq	r0, r0, ip, lsl r0
    140c:	00001064 	andeq	r1, r0, r4, rrx
    1410:	00016408 	andeq	r6, r1, r8, lsl #8
    1414:	0000008c 	andeq	r0, r0, ip, lsl #1
    1418:	8b080e42 	blhi	204d28 <__bss_end__+0xbbce0>
    141c:	42018e02 	andmi	r8, r1, #2, 28
    1420:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1424:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    1428:	0000001c 	andeq	r0, r0, ip, lsl r0
    142c:	00001064 	andeq	r1, r0, r4, rrx
    1430:	00016494 	muleq	r1, r4, r4
    1434:	0000003c 	andeq	r0, r0, ip, lsr r0
    1438:	8b080e42 	blhi	204d48 <__bss_end__+0xbbd00>
    143c:	42018e02 	andmi	r8, r1, #2, 28
    1440:	58040b0c 	stmdapl	r4, {r2, r3, r8, r9, fp}
    1444:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1448:	0000001c 	andeq	r0, r0, ip, lsl r0
    144c:	00001064 	andeq	r1, r0, r4, rrx
    1450:	000164d0 	ldrdeq	r6, [r1], -r0
    1454:	00000064 	andeq	r0, r0, r4, rrx
    1458:	8b080e42 	blhi	204d68 <__bss_end__+0xbbd20>
    145c:	42018e02 	andmi	r8, r1, #2, 28
    1460:	6c040b0c 			; <UNDEFINED> instruction: 0x6c040b0c
    1464:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1468:	00000018 	andeq	r0, r0, r8, lsl r0
    146c:	00001064 	andeq	r1, r0, r4, rrx
    1470:	00016534 	andeq	r6, r1, r4, lsr r5
    1474:	00000030 	andeq	r0, r0, r0, lsr r0
    1478:	8b080e42 	blhi	204d88 <__bss_end__+0xbbd40>
    147c:	42018e02 	andmi	r8, r1, #2, 28
    1480:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1484:	0000000c 	andeq	r0, r0, ip
    1488:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    148c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1490:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1494:	0000001c 	andeq	r0, r0, ip, lsl r0
    1498:	00001484 	andeq	r1, r0, r4, lsl #9
    149c:	00016564 	andeq	r6, r1, r4, ror #10
    14a0:	00000128 	andeq	r0, r0, r8, lsr #2
    14a4:	8b080e42 	blhi	204db4 <__bss_end__+0xbbd6c>
    14a8:	42018e02 	andmi	r8, r1, #2, 28
    14ac:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    14b0:	080d0c8e 	stmdaeq	sp, {r1, r2, r3, r7, sl, fp}
    14b4:	0000001c 	andeq	r0, r0, ip, lsl r0
    14b8:	00001484 	andeq	r1, r0, r4, lsl #9
    14bc:	0001668c 	andeq	r6, r1, ip, lsl #13
    14c0:	00000128 	andeq	r0, r0, r8, lsr #2
    14c4:	8b080e42 	blhi	204dd4 <__bss_end__+0xbbd8c>
    14c8:	42018e02 	andmi	r8, r1, #2, 28
    14cc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    14d0:	080d0c8e 	stmdaeq	sp, {r1, r2, r3, r7, sl, fp}
    14d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    14d8:	00001484 	andeq	r1, r0, r4, lsl #9
    14dc:	000167b4 			; <UNDEFINED> instruction: 0x000167b4
    14e0:	00000030 	andeq	r0, r0, r0, lsr r0
    14e4:	8b040e42 	blhi	104df4 <morecore_area+0xbbdf4>
    14e8:	0b0d4201 	bleq	351cf4 <__bss_end__+0x208cac>
    14ec:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    14f0:	00000ecb 	andeq	r0, r0, fp, asr #29
    14f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    14f8:	00001484 	andeq	r1, r0, r4, lsl #9
    14fc:	000167e4 	andeq	r6, r1, r4, ror #15
    1500:	00000030 	andeq	r0, r0, r0, lsr r0
    1504:	8b040e42 	blhi	104e14 <morecore_area+0xbbe14>
    1508:	0b0d4201 	bleq	351d14 <__bss_end__+0x208ccc>
    150c:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    1510:	00000ecb 	andeq	r0, r0, fp, asr #29
    1514:	00000018 	andeq	r0, r0, r8, lsl r0
    1518:	00001484 	andeq	r1, r0, r4, lsl #9
    151c:	00016814 	andeq	r6, r1, r4, lsl r8
    1520:	00000024 	andeq	r0, r0, r4, lsr #32
    1524:	8b080e42 	blhi	204e34 <__bss_end__+0xbbdec>
    1528:	42018e02 	andmi	r8, r1, #2, 28
    152c:	00040b0c 	andeq	r0, r4, ip, lsl #22
    1530:	0000001c 	andeq	r0, r0, ip, lsl r0
    1534:	00001484 	andeq	r1, r0, r4, lsl #9
    1538:	00016838 	andeq	r6, r1, r8, lsr r8
    153c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1540:	8b080e42 	blhi	204e50 <__bss_end__+0xbbe08>
    1544:	42018e02 	andmi	r8, r1, #2, 28
    1548:	58040b0c 	stmdapl	r4, {r2, r3, r8, r9, fp}
    154c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1550:	00000028 	andeq	r0, r0, r8, lsr #32
    1554:	00001484 	andeq	r1, r0, r4, lsl #9
    1558:	00016874 	andeq	r6, r1, r4, ror r8
    155c:	000000ac 	andeq	r0, r0, ip, lsr #1
    1560:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    1564:	87038504 	strhi	r8, [r3, -r4, lsl #10]
    1568:	42018b02 	andmi	r8, r1, #2048	; 0x800
    156c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1570:	100d0c4e 	andne	r0, sp, lr, asr #24
    1574:	c5c7cb42 	strbgt	ip, [r7, #2882]	; 0xb42
    1578:	00000ec4 	andeq	r0, r0, r4, asr #29
    157c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1580:	00001484 	andeq	r1, r0, r4, lsl #9
    1584:	00016920 	andeq	r6, r1, r0, lsr #18
    1588:	000001a4 	andeq	r0, r0, r4, lsr #3
    158c:	8b080e42 	blhi	204e9c <__bss_end__+0xbbe54>
    1590:	42018e02 	andmi	r8, r1, #2, 28
    1594:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1598:	080d0ccc 	stmdaeq	sp, {r2, r3, r6, r7, sl, fp}
    159c:	0000001c 	andeq	r0, r0, ip, lsl r0
    15a0:	00001484 	andeq	r1, r0, r4, lsl #9
    15a4:	00016ac4 	andeq	r6, r1, r4, asr #21
    15a8:	0000008c 	andeq	r0, r0, ip, lsl #1
    15ac:	8b080e42 	blhi	204ebc <__bss_end__+0xbbe74>
    15b0:	42018e02 	andmi	r8, r1, #2, 28
    15b4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    15b8:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    15bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    15c0:	00001484 	andeq	r1, r0, r4, lsl #9
    15c4:	00016b50 	andeq	r6, r1, r0, asr fp
    15c8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    15cc:	8b080e42 	blhi	204edc <__bss_end__+0xbbe94>
    15d0:	42018e02 	andmi	r8, r1, #2, 28
    15d4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    15d8:	080d0c72 	stmdaeq	sp, {r1, r4, r5, r6, sl, fp}
    15dc:	0000002c 	andeq	r0, r0, ip, lsr #32
    15e0:	00001484 	andeq	r1, r0, r4, lsl #9
    15e4:	00016c40 	andeq	r6, r1, r0, asr #24
    15e8:	00000128 	andeq	r0, r0, r8, lsr #2
    15ec:	42080e42 	andmi	r0, r8, #1056	; 0x420
    15f0:	0584140e 	streq	r1, [r4, #1038]	; 0x40e
    15f4:	038e048b 	orreq	r0, lr, #-1962934272	; 0x8b000000
    15f8:	0c0b0c42 	stceq	12, cr0, [fp], {66}	; 0x42
    15fc:	0d0c8802 	stceq	8, cr8, [ip, #-8]
    1600:	cbce4214 	blgt	ff391e58 <__bss_end__+0xff248e10>
    1604:	42080ec4 	andmi	r0, r8, #196, 28	; 0xc40
    1608:	0000000e 	andeq	r0, r0, lr
    160c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1610:	00001484 	andeq	r1, r0, r4, lsl #9
    1614:	00016d68 	andeq	r6, r1, r8, ror #26
    1618:	00000038 	andeq	r0, r0, r8, lsr r0
    161c:	8b080e42 	blhi	204f2c <__bss_end__+0xbbee4>
    1620:	42018e02 	andmi	r8, r1, #2, 28
    1624:	56040b0c 	strpl	r0, [r4], -ip, lsl #22
    1628:	00080d0c 	andeq	r0, r8, ip, lsl #26
    162c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1630:	00001484 	andeq	r1, r0, r4, lsl #9
    1634:	00016da0 	andeq	r6, r1, r0, lsr #27
    1638:	0000014c 	andeq	r0, r0, ip, asr #2
    163c:	8b080e42 	blhi	204f4c <__bss_end__+0xbbf04>
    1640:	42018e02 	andmi	r8, r1, #2, 28
    1644:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1648:	080d0ca0 	stmdaeq	sp, {r5, r7, sl, fp}
    164c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1650:	00001484 	andeq	r1, r0, r4, lsl #9
    1654:	00016eec 	andeq	r6, r1, ip, ror #29
    1658:	00000194 	muleq	r0, r4, r1
    165c:	8b080e42 	blhi	204f6c <__bss_end__+0xbbf24>
    1660:	42018e02 	andmi	r8, r1, #2, 28
    1664:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1668:	080d0cc4 	stmdaeq	sp, {r2, r6, r7, sl, fp}
    166c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1670:	00001484 	andeq	r1, r0, r4, lsl #9
    1674:	00017080 	andeq	r7, r1, r0, lsl #1
    1678:	00000110 	andeq	r0, r0, r0, lsl r1
    167c:	8b080e42 	blhi	204f8c <__bss_end__+0xbbf44>
    1680:	42018e02 	andmi	r8, r1, #2, 28
    1684:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1688:	080d0c82 	stmdaeq	sp, {r1, r7, sl, fp}
    168c:	00000020 	andeq	r0, r0, r0, lsr #32
    1690:	00001484 	andeq	r1, r0, r4, lsl #9
    1694:	00017190 	muleq	r1, r0, r1
    1698:	00000168 	andeq	r0, r0, r8, ror #2
    169c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    16a0:	8e028b03 	vmlahi.f64	d8, d2, d3
    16a4:	0b0c4201 	bleq	311eb0 <__bss_end__+0x1c8e68>
    16a8:	0cae0204 	sfmeq	f0, 4, [lr], #16
    16ac:	00000c0d 	andeq	r0, r0, sp, lsl #24
    16b0:	00000020 	andeq	r0, r0, r0, lsr #32
    16b4:	00001484 	andeq	r1, r0, r4, lsl #9
    16b8:	000172f8 	strdeq	r7, [r1], -r8
    16bc:	00000168 	andeq	r0, r0, r8, ror #2
    16c0:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    16c4:	8e028b03 	vmlahi.f64	d8, d2, d3
    16c8:	0b0c4201 	bleq	311ed4 <__bss_end__+0x1c8e8c>
    16cc:	0cae0204 	sfmeq	f0, 4, [lr], #16
    16d0:	00000c0d 	andeq	r0, r0, sp, lsl #24
    16d4:	00000020 	andeq	r0, r0, r0, lsr #32
    16d8:	00001484 	andeq	r1, r0, r4, lsl #9
    16dc:	00017460 	andeq	r7, r1, r0, ror #8
    16e0:	00000114 	andeq	r0, r0, r4, lsl r1
    16e4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    16e8:	8e028b03 	vmlahi.f64	d8, d2, d3
    16ec:	0b0c4201 	bleq	311ef8 <__bss_end__+0x1c8eb0>
    16f0:	0c840204 	sfmeq	f0, 4, [r4], {4}
    16f4:	00000c0d 	andeq	r0, r0, sp, lsl #24
    16f8:	0000001c 	andeq	r0, r0, ip, lsl r0
    16fc:	00001484 	andeq	r1, r0, r4, lsl #9
    1700:	00017574 	andeq	r7, r1, r4, ror r5
    1704:	000000a8 	andeq	r0, r0, r8, lsr #1
    1708:	8b080e42 	blhi	205018 <__bss_end__+0xbbfd0>
    170c:	42018e02 	andmi	r8, r1, #2, 28
    1710:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1714:	080d0c4e 	stmdaeq	sp, {r1, r2, r3, r6, sl, fp}
    1718:	0000001c 	andeq	r0, r0, ip, lsl r0
    171c:	00001484 	andeq	r1, r0, r4, lsl #9
    1720:	0001761c 	andeq	r7, r1, ip, lsl r6
    1724:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1728:	8b080e42 	blhi	205038 <__bss_end__+0xbbff0>
    172c:	42018e02 	andmi	r8, r1, #2, 28
    1730:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1734:	080d0c52 	stmdaeq	sp, {r1, r4, r6, sl, fp}
    1738:	0000001c 	andeq	r0, r0, ip, lsl r0
    173c:	00001484 	andeq	r1, r0, r4, lsl #9
    1740:	000176cc 	andeq	r7, r1, ip, asr #13
    1744:	0000008c 	andeq	r0, r0, ip, lsl #1
    1748:	8b080e42 	blhi	205058 <__bss_end__+0xbc010>
    174c:	42018e02 	andmi	r8, r1, #2, 28
    1750:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1754:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    1758:	00000020 	andeq	r0, r0, r0, lsr #32
    175c:	00001484 	andeq	r1, r0, r4, lsl #9
    1760:	00017758 	andeq	r7, r1, r8, asr r7
    1764:	00000314 	andeq	r0, r0, r4, lsl r3
    1768:	8b080e42 	blhi	205078 <__bss_end__+0xbc030>
    176c:	42018e02 	andmi	r8, r1, #2, 28
    1770:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    1774:	0d0c0184 	stfeqs	f0, [ip, #-528]	; 0xfffffdf0
    1778:	00000008 	andeq	r0, r0, r8
    177c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1780:	00001484 	andeq	r1, r0, r4, lsl #9
    1784:	00017a6c 	andeq	r7, r1, ip, ror #20
    1788:	00000050 	andeq	r0, r0, r0, asr r0
    178c:	8b080e42 	blhi	20509c <__bss_end__+0xbc054>
    1790:	42018e02 	andmi	r8, r1, #2, 28
    1794:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    1798:	00080d0c 	andeq	r0, r8, ip, lsl #26
    179c:	0000001c 	andeq	r0, r0, ip, lsl r0
    17a0:	00001484 	andeq	r1, r0, r4, lsl #9
    17a4:	00017abc 			; <UNDEFINED> instruction: 0x00017abc
    17a8:	000000dc 	ldrdeq	r0, [r0], -ip
    17ac:	8b080e42 	blhi	2050bc <__bss_end__+0xbc074>
    17b0:	42018e02 	andmi	r8, r1, #2, 28
    17b4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    17b8:	080d0c68 	stmdaeq	sp, {r3, r5, r6, sl, fp}
    17bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    17c0:	00001484 	andeq	r1, r0, r4, lsl #9
    17c4:	00017b98 	muleq	r1, r8, fp
    17c8:	00000054 	andeq	r0, r0, r4, asr r0
    17cc:	8b080e42 	blhi	2050dc <__bss_end__+0xbc094>
    17d0:	42018e02 	andmi	r8, r1, #2, 28
    17d4:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    17d8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    17dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    17e0:	00001484 	andeq	r1, r0, r4, lsl #9
    17e4:	00017bec 	andeq	r7, r1, ip, ror #23
    17e8:	000000dc 	ldrdeq	r0, [r0], -ip
    17ec:	8b080e42 	blhi	2050fc <__bss_end__+0xbc0b4>
    17f0:	42018e02 	andmi	r8, r1, #2, 28
    17f4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    17f8:	080d0c68 	stmdaeq	sp, {r3, r5, r6, sl, fp}
    17fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1800:	00001484 	andeq	r1, r0, r4, lsl #9
    1804:	00017cc8 	andeq	r7, r1, r8, asr #25
    1808:	000001dc 	ldrdeq	r0, [r0], -ip
    180c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1810:	8e028b03 	vmlahi.f64	d8, d2, d3
    1814:	0b0c4201 	bleq	312020 <__bss_end__+0x1c8fd8>
    1818:	0ce80204 	sfmeq	f0, 2, [r8], #16
    181c:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1820:	00000020 	andeq	r0, r0, r0, lsr #32
    1824:	00001484 	andeq	r1, r0, r4, lsl #9
    1828:	00017ea4 	andeq	r7, r1, r4, lsr #29
    182c:	000001a8 	andeq	r0, r0, r8, lsr #3
    1830:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    1834:	8b038504 	blhi	e2c4c <morecore_area+0x99c4c>
    1838:	42018e02 	andmi	r8, r1, #2, 28
    183c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1840:	100d0cce 	andne	r0, sp, lr, asr #25
    1844:	0000001c 	andeq	r0, r0, ip, lsl r0
    1848:	00001484 	andeq	r1, r0, r4, lsl #9
    184c:	0001804c 	andeq	r8, r1, ip, asr #32
    1850:	0000009c 	muleq	r0, ip, r0
    1854:	8b080e42 	blhi	205164 <__bss_end__+0xbc11c>
    1858:	42018e02 	andmi	r8, r1, #2, 28
    185c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1860:	080d0c48 	stmdaeq	sp, {r3, r6, sl, fp}
    1864:	00000020 	andeq	r0, r0, r0, lsr #32
    1868:	00001484 	andeq	r1, r0, r4, lsl #9
    186c:	000180e8 	andeq	r8, r1, r8, ror #1
    1870:	00000114 	andeq	r0, r0, r4, lsl r1
    1874:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    1878:	8b038504 	blhi	e2c90 <morecore_area+0x99c90>
    187c:	42018e02 	andmi	r8, r1, #2, 28
    1880:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1884:	100d0c84 	andne	r0, sp, r4, lsl #25
    1888:	0000000c 	andeq	r0, r0, ip
    188c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1890:	7c020001 	stcvc	0, cr0, [r2], {1}
    1894:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1898:	00000028 	andeq	r0, r0, r8, lsr #32
    189c:	00001888 	andeq	r1, r0, r8, lsl #17
    18a0:	000181fc 	strdeq	r8, [r1], -ip
    18a4:	000000ac 	andeq	r0, r0, ip, lsr #1
    18a8:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    18ac:	87038504 	strhi	r8, [r3, -r4, lsl #10]
    18b0:	42018b02 	andmi	r8, r1, #2048	; 0x800
    18b4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    18b8:	100d0c4e 	andne	r0, sp, lr, asr #24
    18bc:	c5c7cb42 	strbgt	ip, [r7, #2882]	; 0xb42
    18c0:	00000ec4 	andeq	r0, r0, r4, asr #29
    18c4:	0000001c 	andeq	r0, r0, ip, lsl r0
    18c8:	00001888 	andeq	r1, r0, r8, lsl #17
    18cc:	000182a8 	andeq	r8, r1, r8, lsr #5
    18d0:	00000094 	muleq	r0, r4, r0
    18d4:	8b080e42 	blhi	2051e4 <__bss_end__+0xbc19c>
    18d8:	42018e02 	andmi	r8, r1, #2, 28
    18dc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    18e0:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
    18e4:	00000020 	andeq	r0, r0, r0, lsr #32
    18e8:	00001888 	andeq	r1, r0, r8, lsl #17
    18ec:	0001833c 	andeq	r8, r1, ip, lsr r3
    18f0:	00000064 	andeq	r0, r0, r4, rrx
    18f4:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    18f8:	8e028b03 	vmlahi.f64	d8, d2, d3
    18fc:	0b0c4201 	bleq	312108 <__bss_end__+0x1c90c0>
    1900:	0d0c6c04 	stceq	12, cr6, [ip, #-16]
    1904:	0000000c 	andeq	r0, r0, ip
    1908:	00000020 	andeq	r0, r0, r0, lsr #32
    190c:	00001888 	andeq	r1, r0, r8, lsl #17
    1910:	000183a0 	andeq	r8, r1, r0, lsr #7
    1914:	0000005c 	andeq	r0, r0, ip, asr r0
    1918:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    191c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1920:	0b0c4201 	bleq	31212c <__bss_end__+0x1c90e4>
    1924:	0d0c6804 	stceq	8, cr6, [ip, #-16]
    1928:	0000000c 	andeq	r0, r0, ip
    192c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1930:	00001888 	andeq	r1, r0, r8, lsl #17
    1934:	000183fc 	strdeq	r8, [r1], -ip
    1938:	0000007c 	andeq	r0, r0, ip, ror r0
    193c:	8b080e42 	blhi	20524c <__bss_end__+0xbc204>
    1940:	42018e02 	andmi	r8, r1, #2, 28
    1944:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
    1948:	00080d0c 	andeq	r0, r8, ip, lsl #26
    194c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1950:	00001888 	andeq	r1, r0, r8, lsl #17
    1954:	00018478 	andeq	r8, r1, r8, ror r4
    1958:	00000030 	andeq	r0, r0, r0, lsr r0
    195c:	8b040e42 	blhi	10526c <morecore_area+0xbc26c>
    1960:	0b0d4201 	bleq	35216c <__bss_end__+0x209124>
    1964:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    1968:	00000ecb 	andeq	r0, r0, fp, asr #29
    196c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1970:	00001888 	andeq	r1, r0, r8, lsl #17
    1974:	000184a8 	andeq	r8, r1, r8, lsr #9
    1978:	00000084 	andeq	r0, r0, r4, lsl #1
    197c:	8b080e42 	blhi	20528c <__bss_end__+0xbc244>
    1980:	42018e02 	andmi	r8, r1, #2, 28
    1984:	7c040b0c 			; <UNDEFINED> instruction: 0x7c040b0c
    1988:	00080d0c 	andeq	r0, r8, ip, lsl #26
    198c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1990:	00001888 	andeq	r1, r0, r8, lsl #17
    1994:	0001852c 	andeq	r8, r1, ip, lsr #10
    1998:	00000048 	andeq	r0, r0, r8, asr #32
    199c:	8b080e42 	blhi	2052ac <__bss_end__+0xbc264>
    19a0:	42018e02 	andmi	r8, r1, #2, 28
    19a4:	5e040b0c 	vmlapl.f64	d0, d4, d12
    19a8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    19ac:	00000018 	andeq	r0, r0, r8, lsl r0
    19b0:	00001888 	andeq	r1, r0, r8, lsl #17
    19b4:	00018574 	andeq	r8, r1, r4, ror r5
    19b8:	00000044 	andeq	r0, r0, r4, asr #32
    19bc:	8b080e42 	blhi	2052cc <__bss_end__+0xbc284>
    19c0:	42018e02 	andmi	r8, r1, #2, 28
    19c4:	00040b0c 	andeq	r0, r4, ip, lsl #22
    19c8:	0000000c 	andeq	r0, r0, ip
    19cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19d0:	7c020001 	stcvc	0, cr0, [r2], {1}
    19d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19d8:	0000002c 	andeq	r0, r0, ip, lsr #32
    19dc:	000019c8 	andeq	r1, r0, r8, asr #19
    19e0:	000185b8 			; <UNDEFINED> instruction: 0x000185b8
    19e4:	00000128 	andeq	r0, r0, r8, lsr #2
    19e8:	42080e42 	andmi	r0, r8, #1056	; 0x420
    19ec:	0584140e 	streq	r1, [r4, #1038]	; 0x40e
    19f0:	038e048b 	orreq	r0, lr, #-1962934272	; 0x8b000000
    19f4:	0c0b0c42 	stceq	12, cr0, [fp], {66}	; 0x42
    19f8:	0d0c8802 	stceq	8, cr8, [ip, #-8]
    19fc:	cbce4214 	blgt	ff392254 <__bss_end__+0xff24920c>
    1a00:	42080ec4 	andmi	r0, r8, #196, 28	; 0xc40
    1a04:	0000000e 	andeq	r0, r0, lr
    1a08:	00000020 	andeq	r0, r0, r0, lsr #32
    1a0c:	000019c8 	andeq	r1, r0, r8, asr #19
    1a10:	000186e0 	andeq	r8, r1, r0, ror #13
    1a14:	0000011c 	andeq	r0, r0, ip, lsl r1
    1a18:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1a1c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1a20:	0b0c4201 	bleq	31222c <__bss_end__+0x1c91e4>
    1a24:	0c880204 	sfmeq	f0, 4, [r8], {4}
    1a28:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1a2c:	00000024 	andeq	r0, r0, r4, lsr #32
    1a30:	000019c8 	andeq	r1, r0, r8, asr #19
    1a34:	000187fc 	strdeq	r8, [r1], -ip
    1a38:	00000120 	andeq	r0, r0, r0, lsr #2
    1a3c:	84140e42 	ldrhi	r0, [r4], #-3650	; 0xfffff1be
    1a40:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1a44:	8e028b03 	vmlahi.f64	d8, d2, d3
    1a48:	0b0c4201 	bleq	312254 <__bss_end__+0x1c920c>
    1a4c:	0c8a0204 	sfmeq	f0, 4, [sl], {4}
    1a50:	0000140d 	andeq	r1, r0, sp, lsl #8
    1a54:	0000000c 	andeq	r0, r0, ip
    1a58:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a5c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a60:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a64:	00000020 	andeq	r0, r0, r0, lsr #32
    1a68:	00001a54 	andeq	r1, r0, r4, asr sl
    1a6c:	0001891c 	andeq	r8, r1, ip, lsl r9
    1a70:	000000d8 	ldrdeq	r0, [r0], -r8
    1a74:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1a78:	8e028b03 	vmlahi.f64	d8, d2, d3
    1a7c:	0b0c4201 	bleq	312288 <__bss_end__+0x1c9240>
    1a80:	0c660204 	sfmeq	f0, 2, [r6], #-16
    1a84:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1a88:	0000001c 	andeq	r0, r0, ip, lsl r0
    1a8c:	00001a54 	andeq	r1, r0, r4, asr sl
    1a90:	000189f4 	strdeq	r8, [r1], -r4
    1a94:	00000068 	andeq	r0, r0, r8, rrx
    1a98:	8b080e42 	blhi	2053a8 <__bss_end__+0xbc360>
    1a9c:	42018e02 	andmi	r8, r1, #2, 28
    1aa0:	6e040b0c 	vmlavs.f64	d0, d4, d12
    1aa4:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1aa8:	0000000c 	andeq	r0, r0, ip
    1aac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ab0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ab4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ab8:	00000020 	andeq	r0, r0, r0, lsr #32
    1abc:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1ac0:	00018a5c 	andeq	r8, r1, ip, asr sl
    1ac4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1ac8:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1acc:	8e028b03 	vmlahi.f64	d8, d2, d3
    1ad0:	0b0c4201 	bleq	3122dc <__bss_end__+0x1c9294>
    1ad4:	0c520204 	lfmeq	f0, 2, [r2], {4}
    1ad8:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1adc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ae0:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1ae4:	00018b0c 	andeq	r8, r1, ip, lsl #22
    1ae8:	0000004c 	andeq	r0, r0, ip, asr #32
    1aec:	8b080e42 	blhi	2053fc <__bss_end__+0xbc3b4>
    1af0:	42018e02 	andmi	r8, r1, #2, 28
    1af4:	60040b0c 	andvs	r0, r4, ip, lsl #22
    1af8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1afc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b00:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1b04:	00018b58 	andeq	r8, r1, r8, asr fp
    1b08:	00000028 	andeq	r0, r0, r8, lsr #32
    1b0c:	8b040e42 	blhi	10541c <morecore_area+0xbc41c>
    1b10:	0b0d4201 	bleq	35231c <__bss_end__+0x2092d4>
    1b14:	420d0d4c 	andmi	r0, sp, #76, 26	; 0x1300
    1b18:	00000ecb 	andeq	r0, r0, fp, asr #29
    1b1c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b20:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1b24:	00018b80 	andeq	r8, r1, r0, lsl #23
    1b28:	00000048 	andeq	r0, r0, r8, asr #32
    1b2c:	8b040e42 	blhi	10543c <morecore_area+0xbc43c>
    1b30:	0b0d4201 	bleq	35233c <__bss_end__+0x2092f4>
    1b34:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    1b38:	00000ecb 	andeq	r0, r0, fp, asr #29
    1b3c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b40:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1b44:	00018bc8 	andeq	r8, r1, r8, asr #23
    1b48:	00000048 	andeq	r0, r0, r8, asr #32
    1b4c:	8b040e42 	blhi	10545c <morecore_area+0xbc45c>
    1b50:	0b0d4201 	bleq	35235c <__bss_end__+0x209314>
    1b54:	420d0d5c 	andmi	r0, sp, #92, 26	; 0x1700
    1b58:	00000ecb 	andeq	r0, r0, fp, asr #29
    1b5c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b60:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1b64:	00018c10 	andeq	r8, r1, r0, lsl ip
    1b68:	000000a4 	andeq	r0, r0, r4, lsr #1
    1b6c:	8b080e42 	blhi	20547c <__bss_end__+0xbc434>
    1b70:	42018e02 	andmi	r8, r1, #2, 28
    1b74:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1b78:	080d0c4c 	stmdaeq	sp, {r2, r3, r6, sl, fp}
    1b7c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1b80:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1b84:	00018cb4 			; <UNDEFINED> instruction: 0x00018cb4
    1b88:	000000f8 	strdeq	r0, [r0], -r8
    1b8c:	8b080e42 	blhi	20549c <__bss_end__+0xbc454>
    1b90:	42018e02 	andmi	r8, r1, #2, 28
    1b94:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1b98:	080d0c76 	stmdaeq	sp, {r1, r2, r4, r5, r6, sl, fp}
    1b9c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ba0:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1ba4:	00018dac 	andeq	r8, r1, ip, lsr #27
    1ba8:	00000034 	andeq	r0, r0, r4, lsr r0
    1bac:	8b080e42 	blhi	2054bc <__bss_end__+0xbc474>
    1bb0:	42018e02 	andmi	r8, r1, #2, 28
    1bb4:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    1bb8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1bbc:	00000020 	andeq	r0, r0, r0, lsr #32
    1bc0:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1bc4:	00018de0 	andeq	r8, r1, r0, ror #27
    1bc8:	00000228 	andeq	r0, r0, r8, lsr #4
    1bcc:	8b080e42 	blhi	2054dc <__bss_end__+0xbc494>
    1bd0:	42018e02 	andmi	r8, r1, #2, 28
    1bd4:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    1bd8:	0d0c010e 	stfeqs	f0, [ip, #-56]	; 0xffffffc8
    1bdc:	00000008 	andeq	r0, r0, r8
    1be0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1be4:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1be8:	00019008 	andeq	r9, r1, r8
    1bec:	00000114 	andeq	r0, r0, r4, lsl r1
    1bf0:	8b080e42 	blhi	205500 <__bss_end__+0xbc4b8>
    1bf4:	42018e02 	andmi	r8, r1, #2, 28
    1bf8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1bfc:	080d0c84 	stmdaeq	sp, {r2, r7, sl, fp}
    1c00:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c04:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1c08:	0001911c 	andeq	r9, r1, ip, lsl r1
    1c0c:	00000190 	muleq	r0, r0, r1
    1c10:	8b080e42 	blhi	205520 <__bss_end__+0xbc4d8>
    1c14:	42018e02 	andmi	r8, r1, #2, 28
    1c18:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1c1c:	080d0cc2 	stmdaeq	sp, {r1, r6, r7, sl, fp}
    1c20:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c24:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1c28:	000192ac 	andeq	r9, r1, ip, lsr #5
    1c2c:	000000e0 	andeq	r0, r0, r0, ror #1
    1c30:	8b080e42 	blhi	205540 <__bss_end__+0xbc4f8>
    1c34:	42018e02 	andmi	r8, r1, #2, 28
    1c38:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1c3c:	080d0c6a 	stmdaeq	sp, {r1, r3, r5, r6, sl, fp}
    1c40:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c44:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1c48:	0001938c 	andeq	r9, r1, ip, lsl #7
    1c4c:	0000014c 	andeq	r0, r0, ip, asr #2
    1c50:	8b080e42 	blhi	205560 <__bss_end__+0xbc518>
    1c54:	42018e02 	andmi	r8, r1, #2, 28
    1c58:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1c5c:	080d0ca0 	stmdaeq	sp, {r5, r7, sl, fp}
    1c60:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c64:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1c68:	000194d8 	ldrdeq	r9, [r1], -r8
    1c6c:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c70:	8b080e42 	blhi	205580 <__bss_end__+0xbc538>
    1c74:	42018e02 	andmi	r8, r1, #2, 28
    1c78:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1c7c:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
    1c80:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c84:	00001aa8 	andeq	r1, r0, r8, lsr #21
    1c88:	000195a8 	andeq	r9, r1, r8, lsr #11
    1c8c:	000000fc 	strdeq	r0, [r0], -ip
    1c90:	8b080e42 	blhi	2055a0 <__bss_end__+0xbc558>
    1c94:	42018e02 	andmi	r8, r1, #2, 28
    1c98:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1c9c:	080d0c78 	stmdaeq	sp, {r3, r4, r5, r6, sl, fp}
    1ca0:	0000000c 	andeq	r0, r0, ip
    1ca4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ca8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1cac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1cb0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cb4:	00001ca0 	andeq	r1, r0, r0, lsr #25
    1cb8:	000196a4 	andeq	r9, r1, r4, lsr #13
    1cbc:	0000008c 	andeq	r0, r0, ip, lsl #1
    1cc0:	8b080e42 	blhi	2055d0 <__bss_end__+0xbc588>
    1cc4:	42018e02 	andmi	r8, r1, #2, 28
    1cc8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1ccc:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    1cd0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1cd4:	00001ca0 	andeq	r1, r0, r0, lsr #25
    1cd8:	00019730 	andeq	r9, r1, r0, lsr r7
    1cdc:	00000094 	muleq	r0, r4, r0
    1ce0:	8b080e42 	blhi	2055f0 <__bss_end__+0xbc5a8>
    1ce4:	42018e02 	andmi	r8, r1, #2, 28
    1ce8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1cec:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
    1cf0:	0000000c 	andeq	r0, r0, ip
    1cf4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1cf8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1cfc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d00:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d04:	00001cf0 	strdeq	r1, [r0], -r0
    1d08:	000197c4 	andeq	r9, r1, r4, asr #15
    1d0c:	00000064 	andeq	r0, r0, r4, rrx
    1d10:	8b040e42 	blhi	105620 <morecore_area+0xbc620>
    1d14:	0b0d4201 	bleq	352520 <__bss_end__+0x2094d8>
    1d18:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    1d1c:	00000ecb 	andeq	r0, r0, fp, asr #29
    1d20:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d24:	00001cf0 	strdeq	r1, [r0], -r0
    1d28:	00019828 	andeq	r9, r1, r8, lsr #16
    1d2c:	00000040 	andeq	r0, r0, r0, asr #32
    1d30:	8b080e42 	blhi	205640 <__bss_end__+0xbc5f8>
    1d34:	42018e02 	andmi	r8, r1, #2, 28
    1d38:	5a040b0c 	bpl	104970 <morecore_area+0xbb970>
    1d3c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1d40:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d44:	00001cf0 	strdeq	r1, [r0], -r0
    1d48:	00019868 	andeq	r9, r1, r8, ror #16
    1d4c:	0000012c 	andeq	r0, r0, ip, lsr #2
    1d50:	8b080e42 	blhi	205660 <__bss_end__+0xbc618>
    1d54:	42018e02 	andmi	r8, r1, #2, 28
    1d58:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1d5c:	080d0c90 	stmdaeq	sp, {r4, r7, sl, fp}
    1d60:	00000020 	andeq	r0, r0, r0, lsr #32
    1d64:	00001cf0 	strdeq	r1, [r0], -r0
    1d68:	00019994 	muleq	r1, r4, r9
    1d6c:	00000274 	andeq	r0, r0, r4, ror r2
    1d70:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1d74:	8e028b03 	vmlahi.f64	d8, d2, d3
    1d78:	0b0c4201 	bleq	312584 <__bss_end__+0x1c953c>
    1d7c:	01340304 	teqeq	r4, r4, lsl #6
    1d80:	000c0d0c 	andeq	r0, ip, ip, lsl #26
    1d84:	0000000c 	andeq	r0, r0, ip
    1d88:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d8c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d90:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d94:	0000001c 	andeq	r0, r0, ip, lsl r0
    1d98:	00001d84 	andeq	r1, r0, r4, lsl #27
    1d9c:	00019c08 	andeq	r9, r1, r8, lsl #24
    1da0:	00000064 	andeq	r0, r0, r4, rrx
    1da4:	8b040e42 	blhi	1056b4 <morecore_area+0xbc6b4>
    1da8:	0b0d4201 	bleq	3525b4 <__bss_end__+0x20956c>
    1dac:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    1db0:	00000ecb 	andeq	r0, r0, fp, asr #29
    1db4:	0000001c 	andeq	r0, r0, ip, lsl r0
    1db8:	00001d84 	andeq	r1, r0, r4, lsl #27
    1dbc:	00019c6c 	andeq	r9, r1, ip, ror #24
    1dc0:	00000040 	andeq	r0, r0, r0, asr #32
    1dc4:	8b080e42 	blhi	2056d4 <__bss_end__+0xbc68c>
    1dc8:	42018e02 	andmi	r8, r1, #2, 28
    1dcc:	5a040b0c 	bpl	104a04 <morecore_area+0xbba04>
    1dd0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1dd4:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dd8:	00001d84 	andeq	r1, r0, r4, lsl #27
    1ddc:	00019cac 	andeq	r9, r1, ip, lsr #25
    1de0:	0000012c 	andeq	r0, r0, ip, lsr #2
    1de4:	8b080e42 	blhi	2056f4 <__bss_end__+0xbc6ac>
    1de8:	42018e02 	andmi	r8, r1, #2, 28
    1dec:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1df0:	080d0c90 	stmdaeq	sp, {r4, r7, sl, fp}
    1df4:	00000020 	andeq	r0, r0, r0, lsr #32
    1df8:	00001d84 	andeq	r1, r0, r4, lsl #27
    1dfc:	00019dd8 	ldrdeq	r9, [r1], -r8
    1e00:	000004e4 	andeq	r0, r0, r4, ror #9
    1e04:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1e08:	8e028b03 	vmlahi.f64	d8, d2, d3
    1e0c:	0b0c4201 	bleq	312618 <__bss_end__+0x1c95d0>
    1e10:	026c0304 	rsbeq	r0, ip, #4, 6	; 0x10000000
    1e14:	000c0d0c 	andeq	r0, ip, ip, lsl #26
    1e18:	0000000c 	andeq	r0, r0, ip
    1e1c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1e20:	7c020001 	stcvc	0, cr0, [r2], {1}
    1e24:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1e28:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e2c:	00001e18 	andeq	r1, r0, r8, lsl lr
    1e30:	0001a2bc 			; <UNDEFINED> instruction: 0x0001a2bc
    1e34:	00000064 	andeq	r0, r0, r4, rrx
    1e38:	8b040e42 	blhi	105748 <morecore_area+0xbc748>
    1e3c:	0b0d4201 	bleq	352648 <__bss_end__+0x209600>
    1e40:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    1e44:	00000ecb 	andeq	r0, r0, fp, asr #29
    1e48:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e4c:	00001e18 	andeq	r1, r0, r8, lsl lr
    1e50:	0001a320 	andeq	sl, r1, r0, lsr #6
    1e54:	00000040 	andeq	r0, r0, r0, asr #32
    1e58:	8b080e42 	blhi	205768 <__bss_end__+0xbc720>
    1e5c:	42018e02 	andmi	r8, r1, #2, 28
    1e60:	5a040b0c 	bpl	104a98 <morecore_area+0xbba98>
    1e64:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1e68:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e6c:	00001e18 	andeq	r1, r0, r8, lsl lr
    1e70:	0001a360 	andeq	sl, r1, r0, ror #6
    1e74:	0000012c 	andeq	r0, r0, ip, lsr #2
    1e78:	8b080e42 	blhi	205788 <__bss_end__+0xbc740>
    1e7c:	42018e02 	andmi	r8, r1, #2, 28
    1e80:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1e84:	080d0c90 	stmdaeq	sp, {r4, r7, sl, fp}
    1e88:	00000020 	andeq	r0, r0, r0, lsr #32
    1e8c:	00001e18 	andeq	r1, r0, r8, lsl lr
    1e90:	0001a48c 	andeq	sl, r1, ip, lsl #9
    1e94:	00000198 	muleq	r0, r8, r1
    1e98:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1e9c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1ea0:	0b0c4201 	bleq	3126ac <__bss_end__+0x1c9664>
    1ea4:	0cc60204 	sfmeq	f0, 2, [r6], {4}
    1ea8:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1eac:	0000000c 	andeq	r0, r0, ip
    1eb0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1eb4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1eb8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ebc:	00000020 	andeq	r0, r0, r0, lsr #32
    1ec0:	00001eac 	andeq	r1, r0, ip, lsr #29
    1ec4:	0001a624 	andeq	sl, r1, r4, lsr #12
    1ec8:	00000158 	andeq	r0, r0, r8, asr r1
    1ecc:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1ed0:	8e028b03 	vmlahi.f64	d8, d2, d3
    1ed4:	0b0c4201 	bleq	3126e0 <__bss_end__+0x1c9698>
    1ed8:	0ca60204 	sfmeq	f0, 4, [r6], #16
    1edc:	00000c0d 	andeq	r0, r0, sp, lsl #24
    1ee0:	0000000c 	andeq	r0, r0, ip
    1ee4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ee8:	7c020001 	stcvc	0, cr0, [r2], {1}
    1eec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ef0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1ef4:	00001ee0 	andeq	r1, r0, r0, ror #29
    1ef8:	0001a77c 	andeq	sl, r1, ip, ror r7
    1efc:	00000064 	andeq	r0, r0, r4, rrx
    1f00:	8b040e42 	blhi	105810 <morecore_area+0xbc810>
    1f04:	0b0d4201 	bleq	352710 <__bss_end__+0x2096c8>
    1f08:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    1f0c:	00000ecb 	andeq	r0, r0, fp, asr #29
    1f10:	00000028 	andeq	r0, r0, r8, lsr #32
    1f14:	00001ee0 	andeq	r1, r0, r0, ror #29
    1f18:	0001a7e0 	andeq	sl, r1, r0, ror #15
    1f1c:	000001c0 	andeq	r0, r0, r0, asr #3
    1f20:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1f24:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1f28:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1f2c:	8b038904 	blhi	e4344 <morecore_area+0x9b344>
    1f30:	42018e02 	andmi	r8, r1, #2, 28
    1f34:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1f38:	200d0cda 	ldrdcs	r0, [sp], -sl
    1f3c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f40:	00001ee0 	andeq	r1, r0, r0, ror #29
    1f44:	0001a9a0 	andeq	sl, r1, r0, lsr #19
    1f48:	00000040 	andeq	r0, r0, r0, asr #32
    1f4c:	8b080e42 	blhi	20585c <__bss_end__+0xbc814>
    1f50:	42018e02 	andmi	r8, r1, #2, 28
    1f54:	5a040b0c 	bpl	104b8c <morecore_area+0xbbb8c>
    1f58:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1f5c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f60:	00001ee0 	andeq	r1, r0, r0, ror #29
    1f64:	0001a9e0 	andeq	sl, r1, r0, ror #19
    1f68:	0000004c 	andeq	r0, r0, ip, asr #32
    1f6c:	8b080e42 	blhi	20587c <__bss_end__+0xbc834>
    1f70:	42018e02 	andmi	r8, r1, #2, 28
    1f74:	60040b0c 	andvs	r0, r4, ip, lsl #22
    1f78:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1f7c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1f80:	00001ee0 	andeq	r1, r0, r0, ror #29
    1f84:	0001aa2c 	andeq	sl, r1, ip, lsr #20
    1f88:	00000044 	andeq	r0, r0, r4, asr #32
    1f8c:	8b080e42 	blhi	20589c <__bss_end__+0xbc854>
    1f90:	42018e02 	andmi	r8, r1, #2, 28
    1f94:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    1f98:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1f9c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1fa0:	00001ee0 	andeq	r1, r0, r0, ror #29
    1fa4:	0001aa70 	andeq	sl, r1, r0, ror sl
    1fa8:	00000050 	andeq	r0, r0, r0, asr r0
    1fac:	8b080e42 	blhi	2058bc <__bss_end__+0xbc874>
    1fb0:	42018e02 	andmi	r8, r1, #2, 28
    1fb4:	62040b0c 	andvs	r0, r4, #12, 22	; 0x3000
    1fb8:	00080d0c 	andeq	r0, r8, ip, lsl #26
    1fbc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1fc0:	00001ee0 	andeq	r1, r0, r0, ror #29
    1fc4:	0001aac0 	andeq	sl, r1, r0, asr #21
    1fc8:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1fcc:	8b080e42 	blhi	2058dc <__bss_end__+0xbc894>
    1fd0:	42018e02 	andmi	r8, r1, #2, 28
    1fd4:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    1fd8:	080d0c72 	stmdaeq	sp, {r1, r4, r5, r6, sl, fp}
    1fdc:	00000020 	andeq	r0, r0, r0, lsr #32
    1fe0:	00001ee0 	andeq	r1, r0, r0, ror #29
    1fe4:	0001abb0 			; <UNDEFINED> instruction: 0x0001abb0
    1fe8:	00000280 	andeq	r0, r0, r0, lsl #5
    1fec:	8b080e42 	blhi	2058fc <__bss_end__+0xbc8b4>
    1ff0:	42018e02 	andmi	r8, r1, #2, 28
    1ff4:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    1ff8:	0d0c013a 	stfeqs	f0, [ip, #-232]	; 0xffffff18
    1ffc:	00000008 	andeq	r0, r0, r8
    2000:	0000001c 	andeq	r0, r0, ip, lsl r0
    2004:	00001ee0 	andeq	r1, r0, r0, ror #29
    2008:	0001ae30 	andeq	sl, r1, r0, lsr lr
    200c:	00000034 	andeq	r0, r0, r4, lsr r0
    2010:	8b080e42 	blhi	205920 <__bss_end__+0xbc8d8>
    2014:	42018e02 	andmi	r8, r1, #2, 28
    2018:	54040b0c 	strpl	r0, [r4], #-2828	; 0xfffff4f4
    201c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2020:	0000001c 	andeq	r0, r0, ip, lsl r0
    2024:	00001ee0 	andeq	r1, r0, r0, ror #29
    2028:	0001ae64 	andeq	sl, r1, r4, ror #28
    202c:	00000088 	andeq	r0, r0, r8, lsl #1
    2030:	8b080e42 	blhi	205940 <__bss_end__+0xbc8f8>
    2034:	42018e02 	andmi	r8, r1, #2, 28
    2038:	7e040b0c 	vmlavc.f64	d0, d4, d12
    203c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2040:	0000001c 	andeq	r0, r0, ip, lsl r0
    2044:	00001ee0 	andeq	r1, r0, r0, ror #29
    2048:	0001aeec 	andeq	sl, r1, ip, ror #29
    204c:	000000b4 	strheq	r0, [r0], -r4
    2050:	8b080e42 	blhi	205960 <__bss_end__+0xbc918>
    2054:	42018e02 	andmi	r8, r1, #2, 28
    2058:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    205c:	080d0c54 	stmdaeq	sp, {r2, r4, r6, sl, fp}
    2060:	0000001c 	andeq	r0, r0, ip, lsl r0
    2064:	00001ee0 	andeq	r1, r0, r0, ror #29
    2068:	0001afa0 	andeq	sl, r1, r0, lsr #31
    206c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    2070:	8b080e42 	blhi	205980 <__bss_end__+0xbc938>
    2074:	42018e02 	andmi	r8, r1, #2, 28
    2078:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    207c:	080d0c52 	stmdaeq	sp, {r1, r4, r6, sl, fp}
    2080:	0000001c 	andeq	r0, r0, ip, lsl r0
    2084:	00001ee0 	andeq	r1, r0, r0, ror #29
    2088:	0001b050 	andeq	fp, r1, r0, asr r0
    208c:	000000ac 	andeq	r0, r0, ip, lsr #1
    2090:	8b080e42 	blhi	2059a0 <__bss_end__+0xbc958>
    2094:	42018e02 	andmi	r8, r1, #2, 28
    2098:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    209c:	080d0c50 	stmdaeq	sp, {r4, r6, sl, fp}
    20a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    20a4:	00001ee0 	andeq	r1, r0, r0, ror #29
    20a8:	0001b0fc 	strdeq	fp, [r1], -ip
    20ac:	0000007c 	andeq	r0, r0, ip, ror r0
    20b0:	8b080e42 	blhi	2059c0 <__bss_end__+0xbc978>
    20b4:	42018e02 	andmi	r8, r1, #2, 28
    20b8:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
    20bc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    20c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    20c4:	00001ee0 	andeq	r1, r0, r0, ror #29
    20c8:	0001b178 	andeq	fp, r1, r8, ror r1
    20cc:	0000008c 	andeq	r0, r0, ip, lsl #1
    20d0:	8b080e42 	blhi	2059e0 <__bss_end__+0xbc998>
    20d4:	42018e02 	andmi	r8, r1, #2, 28
    20d8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    20dc:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    20e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    20e4:	00001ee0 	andeq	r1, r0, r0, ror #29
    20e8:	0001b204 	andeq	fp, r1, r4, lsl #4
    20ec:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    20f0:	8b080e42 	blhi	205a00 <__bss_end__+0xbc9b8>
    20f4:	42018e02 	andmi	r8, r1, #2, 28
    20f8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    20fc:	080d0c62 	stmdaeq	sp, {r1, r5, r6, sl, fp}
    2100:	0000001c 	andeq	r0, r0, ip, lsl r0
    2104:	00001ee0 	andeq	r1, r0, r0, ror #29
    2108:	0001b2d4 	ldrdeq	fp, [r1], -r4
    210c:	00000044 	andeq	r0, r0, r4, asr #32
    2110:	8b080e42 	blhi	205a20 <__bss_end__+0xbc9d8>
    2114:	42018e02 	andmi	r8, r1, #2, 28
    2118:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    211c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2120:	0000001c 	andeq	r0, r0, ip, lsl r0
    2124:	00001ee0 	andeq	r1, r0, r0, ror #29
    2128:	0001b318 	andeq	fp, r1, r8, lsl r3
    212c:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    2130:	8b080e42 	blhi	205a40 <__bss_end__+0xbc9f8>
    2134:	42018e02 	andmi	r8, r1, #2, 28
    2138:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    213c:	080d0cd2 	stmdaeq	sp, {r1, r4, r6, r7, sl, fp}
    2140:	0000001c 	andeq	r0, r0, ip, lsl r0
    2144:	00001ee0 	andeq	r1, r0, r0, ror #29
    2148:	0001b4c8 	andeq	fp, r1, r8, asr #9
    214c:	00000040 	andeq	r0, r0, r0, asr #32
    2150:	8b080e42 	blhi	205a60 <__bss_end__+0xbca18>
    2154:	42018e02 	andmi	r8, r1, #2, 28
    2158:	5a040b0c 	bpl	104d90 <morecore_area+0xbbd90>
    215c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2160:	0000001c 	andeq	r0, r0, ip, lsl r0
    2164:	00001ee0 	andeq	r1, r0, r0, ror #29
    2168:	0001b508 	andeq	fp, r1, r8, lsl #10
    216c:	00000110 	andeq	r0, r0, r0, lsl r1
    2170:	8b080e42 	blhi	205a80 <__bss_end__+0xbca38>
    2174:	42018e02 	andmi	r8, r1, #2, 28
    2178:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    217c:	080d0c82 	stmdaeq	sp, {r1, r7, sl, fp}
    2180:	0000001c 	andeq	r0, r0, ip, lsl r0
    2184:	00001ee0 	andeq	r1, r0, r0, ror #29
    2188:	0001b618 	andeq	fp, r1, r8, lsl r6
    218c:	00000054 	andeq	r0, r0, r4, asr r0
    2190:	8b080e42 	blhi	205aa0 <__bss_end__+0xbca58>
    2194:	42018e02 	andmi	r8, r1, #2, 28
    2198:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    219c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    21a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    21a4:	00001ee0 	andeq	r1, r0, r0, ror #29
    21a8:	0001b66c 	andeq	fp, r1, ip, ror #12
    21ac:	00000054 	andeq	r0, r0, r4, asr r0
    21b0:	8b080e42 	blhi	205ac0 <__bss_end__+0xbca78>
    21b4:	42018e02 	andmi	r8, r1, #2, 28
    21b8:	64040b0c 	strvs	r0, [r4], #-2828	; 0xfffff4f4
    21bc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    21c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    21c4:	00001ee0 	andeq	r1, r0, r0, ror #29
    21c8:	0001b6c0 	andeq	fp, r1, r0, asr #13
    21cc:	000000a0 	andeq	r0, r0, r0, lsr #1
    21d0:	8b080e42 	blhi	205ae0 <__bss_end__+0xbca98>
    21d4:	42018e02 	andmi	r8, r1, #2, 28
    21d8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    21dc:	080d0c4a 	stmdaeq	sp, {r1, r3, r6, sl, fp}
    21e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    21e4:	00001ee0 	andeq	r1, r0, r0, ror #29
    21e8:	0001b760 	andeq	fp, r1, r0, ror #14
    21ec:	00000074 	andeq	r0, r0, r4, ror r0
    21f0:	8b080e42 	blhi	205b00 <__bss_end__+0xbcab8>
    21f4:	42018e02 	andmi	r8, r1, #2, 28
    21f8:	74040b0c 	strvc	r0, [r4], #-2828	; 0xfffff4f4
    21fc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2200:	0000001c 	andeq	r0, r0, ip, lsl r0
    2204:	00001ee0 	andeq	r1, r0, r0, ror #29
    2208:	0001b7d4 	ldrdeq	fp, [r1], -r4
    220c:	000000f4 	strdeq	r0, [r0], -r4
    2210:	8b080e42 	blhi	205b20 <__bss_end__+0xbcad8>
    2214:	42018e02 	andmi	r8, r1, #2, 28
    2218:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    221c:	080d0c74 	stmdaeq	sp, {r2, r4, r5, r6, sl, fp}
    2220:	0000001c 	andeq	r0, r0, ip, lsl r0
    2224:	00001ee0 	andeq	r1, r0, r0, ror #29
    2228:	0001b8c8 	andeq	fp, r1, r8, asr #17
    222c:	0000008c 	andeq	r0, r0, ip, lsl #1
    2230:	8b080e42 	blhi	205b40 <__bss_end__+0xbcaf8>
    2234:	42018e02 	andmi	r8, r1, #2, 28
    2238:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    223c:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    2240:	0000001c 	andeq	r0, r0, ip, lsl r0
    2244:	00001ee0 	andeq	r1, r0, r0, ror #29
    2248:	0001b954 	andeq	fp, r1, r4, asr r9
    224c:	00000058 	andeq	r0, r0, r8, asr r0
    2250:	8b080e42 	blhi	205b60 <__bss_end__+0xbcb18>
    2254:	42018e02 	andmi	r8, r1, #2, 28
    2258:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
    225c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2260:	0000001c 	andeq	r0, r0, ip, lsl r0
    2264:	00001ee0 	andeq	r1, r0, r0, ror #29
    2268:	0001b9ac 	andeq	fp, r1, ip, lsr #19
    226c:	000000c8 	andeq	r0, r0, r8, asr #1
    2270:	8b080e42 	blhi	205b80 <__bss_end__+0xbcb38>
    2274:	42018e02 	andmi	r8, r1, #2, 28
    2278:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    227c:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
    2280:	0000001c 	andeq	r0, r0, ip, lsl r0
    2284:	00001ee0 	andeq	r1, r0, r0, ror #29
    2288:	0001ba74 	andeq	fp, r1, r4, ror sl
    228c:	00000124 	andeq	r0, r0, r4, lsr #2
    2290:	8b080e42 	blhi	205ba0 <__bss_end__+0xbcb58>
    2294:	42018e02 	andmi	r8, r1, #2, 28
    2298:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    229c:	080d0c8c 	stmdaeq	sp, {r2, r3, r7, sl, fp}
    22a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    22a4:	00001ee0 	andeq	r1, r0, r0, ror #29
    22a8:	0001bb98 	muleq	r1, r8, fp
    22ac:	00000058 	andeq	r0, r0, r8, asr r0
    22b0:	8b080e42 	blhi	205bc0 <__bss_end__+0xbcb78>
    22b4:	42018e02 	andmi	r8, r1, #2, 28
    22b8:	66040b0c 	strvs	r0, [r4], -ip, lsl #22
    22bc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    22c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    22c4:	00001ee0 	andeq	r1, r0, r0, ror #29
    22c8:	0001bbf0 	strdeq	fp, [r1], -r0
    22cc:	0000009c 	muleq	r0, ip, r0
    22d0:	8b080e42 	blhi	205be0 <__bss_end__+0xbcb98>
    22d4:	42018e02 	andmi	r8, r1, #2, 28
    22d8:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    22dc:	080d0c48 	stmdaeq	sp, {r3, r6, sl, fp}
    22e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    22e4:	00001ee0 	andeq	r1, r0, r0, ror #29
    22e8:	0001bc8c 	andeq	fp, r1, ip, lsl #25
    22ec:	0000006c 	andeq	r0, r0, ip, rrx
    22f0:	8b080e42 	blhi	205c00 <__bss_end__+0xbcbb8>
    22f4:	42018e02 	andmi	r8, r1, #2, 28
    22f8:	70040b0c 	andvc	r0, r4, ip, lsl #22
    22fc:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2300:	0000001c 	andeq	r0, r0, ip, lsl r0
    2304:	00001ee0 	andeq	r1, r0, r0, ror #29
    2308:	0001bcf8 	strdeq	fp, [r1], -r8
    230c:	00000040 	andeq	r0, r0, r0, asr #32
    2310:	8b080e42 	blhi	205c20 <__bss_end__+0xbcbd8>
    2314:	42018e02 	andmi	r8, r1, #2, 28
    2318:	5a040b0c 	bpl	104f50 <morecore_area+0xbbf50>
    231c:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2320:	00000020 	andeq	r0, r0, r0, lsr #32
    2324:	00001ee0 	andeq	r1, r0, r0, ror #29
    2328:	0001bd38 	andeq	fp, r1, r8, lsr sp
    232c:	00000238 	andeq	r0, r0, r8, lsr r2
    2330:	8b080e42 	blhi	205c40 <__bss_end__+0xbcbf8>
    2334:	42018e02 	andmi	r8, r1, #2, 28
    2338:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    233c:	0d0c0116 	stfeqs	f0, [ip, #-88]	; 0xffffffa8
    2340:	00000008 	andeq	r0, r0, r8
    2344:	0000001c 	andeq	r0, r0, ip, lsl r0
    2348:	00001ee0 	andeq	r1, r0, r0, ror #29
    234c:	0001bf70 	andeq	fp, r1, r0, ror pc
    2350:	00000144 	andeq	r0, r0, r4, asr #2
    2354:	8b080e42 	blhi	205c64 <__bss_end__+0xbcc1c>
    2358:	42018e02 	andmi	r8, r1, #2, 28
    235c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2360:	080d0c9c 	stmdaeq	sp, {r2, r3, r4, r7, sl, fp}
    2364:	0000001c 	andeq	r0, r0, ip, lsl r0
    2368:	00001ee0 	andeq	r1, r0, r0, ror #29
    236c:	0001c0b4 	strheq	ip, [r1], -r4
    2370:	00000064 	andeq	r0, r0, r4, rrx
    2374:	8b080e42 	blhi	205c84 <__bss_end__+0xbcc3c>
    2378:	42018e02 	andmi	r8, r1, #2, 28
    237c:	6c040b0c 			; <UNDEFINED> instruction: 0x6c040b0c
    2380:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2384:	0000001c 	andeq	r0, r0, ip, lsl r0
    2388:	00001ee0 	andeq	r1, r0, r0, ror #29
    238c:	0001c118 	andeq	ip, r1, r8, lsl r1
    2390:	00000060 	andeq	r0, r0, r0, rrx
    2394:	8b080e42 	blhi	205ca4 <__bss_end__+0xbcc5c>
    2398:	42018e02 	andmi	r8, r1, #2, 28
    239c:	6a040b0c 	bvs	104fd4 <morecore_area+0xbbfd4>
    23a0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    23a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    23a8:	00001ee0 	andeq	r1, r0, r0, ror #29
    23ac:	0001c178 	andeq	ip, r1, r8, ror r1
    23b0:	000000e0 	andeq	r0, r0, r0, ror #1
    23b4:	8b080e42 	blhi	205cc4 <__bss_end__+0xbcc7c>
    23b8:	42018e02 	andmi	r8, r1, #2, 28
    23bc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    23c0:	080d0c6a 	stmdaeq	sp, {r1, r3, r5, r6, sl, fp}
    23c4:	0000001c 	andeq	r0, r0, ip, lsl r0
    23c8:	00001ee0 	andeq	r1, r0, r0, ror #29
    23cc:	0001c258 	andeq	ip, r1, r8, asr r2
    23d0:	000000c0 	andeq	r0, r0, r0, asr #1
    23d4:	8b080e42 	blhi	205ce4 <__bss_end__+0xbcc9c>
    23d8:	42018e02 	andmi	r8, r1, #2, 28
    23dc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    23e0:	080d0c5a 	stmdaeq	sp, {r1, r3, r4, r6, sl, fp}
    23e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    23e8:	00001ee0 	andeq	r1, r0, r0, ror #29
    23ec:	0001c318 	andeq	ip, r1, r8, lsl r3
    23f0:	000000cc 	andeq	r0, r0, ip, asr #1
    23f4:	8b080e42 	blhi	205d04 <__bss_end__+0xbccbc>
    23f8:	42018e02 	andmi	r8, r1, #2, 28
    23fc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2400:	080d0c60 	stmdaeq	sp, {r5, r6, sl, fp}
    2404:	0000001c 	andeq	r0, r0, ip, lsl r0
    2408:	00001ee0 	andeq	r1, r0, r0, ror #29
    240c:	0001c3e4 	andeq	ip, r1, r4, ror #7
    2410:	000000ec 	andeq	r0, r0, ip, ror #1
    2414:	8b080e42 	blhi	205d24 <__bss_end__+0xbccdc>
    2418:	42018e02 	andmi	r8, r1, #2, 28
    241c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2420:	080d0c70 	stmdaeq	sp, {r4, r5, r6, sl, fp}
    2424:	0000001c 	andeq	r0, r0, ip, lsl r0
    2428:	00001ee0 	andeq	r1, r0, r0, ror #29
    242c:	0001c4d0 	ldrdeq	ip, [r1], -r0
    2430:	0000013c 	andeq	r0, r0, ip, lsr r1
    2434:	8b080e42 	blhi	205d44 <__bss_end__+0xbccfc>
    2438:	42018e02 	andmi	r8, r1, #2, 28
    243c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2440:	080d0c98 	stmdaeq	sp, {r3, r4, r7, sl, fp}
    2444:	0000001c 	andeq	r0, r0, ip, lsl r0
    2448:	00001ee0 	andeq	r1, r0, r0, ror #29
    244c:	0001c60c 	andeq	ip, r1, ip, lsl #12
    2450:	00000160 	andeq	r0, r0, r0, ror #2
    2454:	8b080e42 	blhi	205d64 <__bss_end__+0xbcd1c>
    2458:	42018e02 	andmi	r8, r1, #2, 28
    245c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2460:	080d0caa 	stmdaeq	sp, {r1, r3, r5, r7, sl, fp}
    2464:	0000001c 	andeq	r0, r0, ip, lsl r0
    2468:	00001ee0 	andeq	r1, r0, r0, ror #29
    246c:	0001c76c 	andeq	ip, r1, ip, ror #14
    2470:	0000007c 	andeq	r0, r0, ip, ror r0
    2474:	8b080e42 	blhi	205d84 <__bss_end__+0xbcd3c>
    2478:	42018e02 	andmi	r8, r1, #2, 28
    247c:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
    2480:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2484:	0000001c 	andeq	r0, r0, ip, lsl r0
    2488:	00001ee0 	andeq	r1, r0, r0, ror #29
    248c:	0001c7e8 	andeq	ip, r1, r8, ror #15
    2490:	000000c8 	andeq	r0, r0, r8, asr #1
    2494:	8b080e42 	blhi	205da4 <__bss_end__+0xbcd5c>
    2498:	42018e02 	andmi	r8, r1, #2, 28
    249c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    24a0:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
    24a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    24a8:	00001ee0 	andeq	r1, r0, r0, ror #29
    24ac:	0001c8b0 			; <UNDEFINED> instruction: 0x0001c8b0
    24b0:	000001c8 	andeq	r0, r0, r8, asr #3
    24b4:	8b080e42 	blhi	205dc4 <__bss_end__+0xbcd7c>
    24b8:	42018e02 	andmi	r8, r1, #2, 28
    24bc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    24c0:	080d0cde 	stmdaeq	sp, {r1, r2, r3, r4, r6, r7, sl, fp}
    24c4:	0000000c 	andeq	r0, r0, ip
    24c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    24cc:	7c020001 	stcvc	0, cr0, [r2], {1}
    24d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    24d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    24d8:	000024c4 	andeq	r2, r0, r4, asr #9
    24dc:	0001ca78 	andeq	ip, r1, r8, ror sl
    24e0:	00000064 	andeq	r0, r0, r4, rrx
    24e4:	8b040e42 	blhi	105df4 <morecore_area+0xbcdf4>
    24e8:	0b0d4201 	bleq	352cf4 <__bss_end__+0x209cac>
    24ec:	420d0d6a 	andmi	r0, sp, #6784	; 0x1a80
    24f0:	00000ecb 	andeq	r0, r0, fp, asr #29
    24f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    24f8:	000024c4 	andeq	r2, r0, r4, asr #9
    24fc:	0001cadc 	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
    2500:	00000040 	andeq	r0, r0, r0, asr #32
    2504:	8b080e42 	blhi	205e14 <__bss_end__+0xbcdcc>
    2508:	42018e02 	andmi	r8, r1, #2, 28
    250c:	5a040b0c 	bpl	105144 <morecore_area+0xbc144>
    2510:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2514:	0000001c 	andeq	r0, r0, ip, lsl r0
    2518:	000024c4 	andeq	r2, r0, r4, asr #9
    251c:	0001cb1c 	andeq	ip, r1, ip, lsl fp
    2520:	0000003c 	andeq	r0, r0, ip, lsr r0
    2524:	8b080e42 	blhi	205e34 <__bss_end__+0xbcdec>
    2528:	42018e02 	andmi	r8, r1, #2, 28
    252c:	58040b0c 	stmdapl	r4, {r2, r3, r8, r9, fp}
    2530:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2534:	0000001c 	andeq	r0, r0, ip, lsl r0
    2538:	000024c4 	andeq	r2, r0, r4, asr #9
    253c:	0001cb58 	andeq	ip, r1, r8, asr fp
    2540:	00000044 	andeq	r0, r0, r4, asr #32
    2544:	8b080e42 	blhi	205e54 <__bss_end__+0xbce0c>
    2548:	42018e02 	andmi	r8, r1, #2, 28
    254c:	5c040b0c 			; <UNDEFINED> instruction: 0x5c040b0c
    2550:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2554:	0000001c 	andeq	r0, r0, ip, lsl r0
    2558:	000024c4 	andeq	r2, r0, r4, asr #9
    255c:	0001cb9c 	muleq	r1, ip, fp
    2560:	000000d4 	ldrdeq	r0, [r0], -r4
    2564:	8b080e42 	blhi	205e74 <__bss_end__+0xbce2c>
    2568:	42018e02 	andmi	r8, r1, #2, 28
    256c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2570:	080d0c64 	stmdaeq	sp, {r2, r5, r6, sl, fp}
    2574:	0000001c 	andeq	r0, r0, ip, lsl r0
    2578:	000024c4 	andeq	r2, r0, r4, asr #9
    257c:	0001cc70 	andeq	ip, r1, r0, ror ip
    2580:	00000054 	andeq	r0, r0, r4, asr r0
    2584:	8b040e42 	blhi	105e94 <morecore_area+0xbce94>
    2588:	0b0d4201 	bleq	352d94 <__bss_end__+0x209d4c>
    258c:	420d0d62 	andmi	r0, sp, #6272	; 0x1880
    2590:	00000ecb 	andeq	r0, r0, fp, asr #29
    2594:	0000001c 	andeq	r0, r0, ip, lsl r0
    2598:	000024c4 	andeq	r2, r0, r4, asr #9
    259c:	0001ccc4 	andeq	ip, r1, r4, asr #25
    25a0:	000000a0 	andeq	r0, r0, r0, lsr #1
    25a4:	8b080e42 	blhi	205eb4 <__bss_end__+0xbce6c>
    25a8:	42018e02 	andmi	r8, r1, #2, 28
    25ac:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    25b0:	080d0c4a 	stmdaeq	sp, {r1, r3, r6, sl, fp}
    25b4:	0000001c 	andeq	r0, r0, ip, lsl r0
    25b8:	000024c4 	andeq	r2, r0, r4, asr #9
    25bc:	0001cd64 	andeq	ip, r1, r4, ror #26
    25c0:	00000074 	andeq	r0, r0, r4, ror r0
    25c4:	8b040e42 	blhi	105ed4 <morecore_area+0xbced4>
    25c8:	0b0d4201 	bleq	352dd4 <__bss_end__+0x209d8c>
    25cc:	420d0d72 	andmi	r0, sp, #7296	; 0x1c80
    25d0:	00000ecb 	andeq	r0, r0, fp, asr #29
    25d4:	00000024 	andeq	r0, r0, r4, lsr #32
    25d8:	000024c4 	andeq	r2, r0, r4, asr #9
    25dc:	0001cdd8 	ldrdeq	ip, [r1], -r8
    25e0:	00000284 	andeq	r0, r0, r4, lsl #5
    25e4:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    25e8:	8b038504 	blhi	e3a00 <morecore_area+0x9aa00>
    25ec:	42018e02 	andmi	r8, r1, #2, 28
    25f0:	03040b0c 	movweq	r0, #19212	; 0x4b0c
    25f4:	0d0c013c 	stfeqs	f0, [ip, #-240]	; 0xffffff10
    25f8:	00000010 	andeq	r0, r0, r0, lsl r0
    25fc:	00000020 	andeq	r0, r0, r0, lsr #32
    2600:	000024c4 	andeq	r2, r0, r4, asr #9
    2604:	0001d05c 	andeq	sp, r1, ip, asr r0
    2608:	00000110 	andeq	r0, r0, r0, lsl r1
    260c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    2610:	8e028b03 	vmlahi.f64	d8, d2, d3
    2614:	0b0c4201 	bleq	312e20 <__bss_end__+0x1c9dd8>
    2618:	0c820204 	sfmeq	f0, 4, [r2], {4}
    261c:	00000c0d 	andeq	r0, r0, sp, lsl #24
    2620:	00000020 	andeq	r0, r0, r0, lsr #32
    2624:	000024c4 	andeq	r2, r0, r4, asr #9
    2628:	0001d16c 	andeq	sp, r1, ip, ror #2
    262c:	00000238 	andeq	r0, r0, r8, lsr r2
    2630:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    2634:	8e028b03 	vmlahi.f64	d8, d2, d3
    2638:	0b0c4201 	bleq	312e44 <__bss_end__+0x1c9dfc>
    263c:	01160304 	tsteq	r6, r4, lsl #6
    2640:	000c0d0c 	andeq	r0, ip, ip, lsl #26
    2644:	0000001c 	andeq	r0, r0, ip, lsl r0
    2648:	000024c4 	andeq	r2, r0, r4, asr #9
    264c:	0001d3a4 	andeq	sp, r1, r4, lsr #7
    2650:	00000068 	andeq	r0, r0, r8, rrx
    2654:	8b080e42 	blhi	205f64 <__bss_end__+0xbcf1c>
    2658:	42018e02 	andmi	r8, r1, #2, 28
    265c:	6e040b0c 	vmlavs.f64	d0, d4, d12
    2660:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2664:	0000001c 	andeq	r0, r0, ip, lsl r0
    2668:	000024c4 	andeq	r2, r0, r4, asr #9
    266c:	0001d40c 	andeq	sp, r1, ip, lsl #8
    2670:	00000068 	andeq	r0, r0, r8, rrx
    2674:	8b080e42 	blhi	205f84 <__bss_end__+0xbcf3c>
    2678:	42018e02 	andmi	r8, r1, #2, 28
    267c:	6e040b0c 	vmlavs.f64	d0, d4, d12
    2680:	00080d0c 	andeq	r0, r8, ip, lsl #26
    2684:	0000001c 	andeq	r0, r0, ip, lsl r0
    2688:	000024c4 	andeq	r2, r0, r4, asr #9
    268c:	0001d474 	andeq	sp, r1, r4, ror r4
    2690:	00000164 	andeq	r0, r0, r4, ror #2
    2694:	8b080e42 	blhi	205fa4 <__bss_end__+0xbcf5c>
    2698:	42018e02 	andmi	r8, r1, #2, 28
    269c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    26a0:	080d0cac 	stmdaeq	sp, {r2, r3, r5, r7, sl, fp}
    26a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    26a8:	000024c4 	andeq	r2, r0, r4, asr #9
    26ac:	0001d5d8 	ldrdeq	sp, [r1], -r8
    26b0:	00000064 	andeq	r0, r0, r4, rrx
    26b4:	8b080e42 	blhi	205fc4 <__bss_end__+0xbcf7c>
    26b8:	42018e02 	andmi	r8, r1, #2, 28
    26bc:	6c040b0c 			; <UNDEFINED> instruction: 0x6c040b0c
    26c0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    26c4:	0000001c 	andeq	r0, r0, ip, lsl r0
    26c8:	000024c4 	andeq	r2, r0, r4, asr #9
    26cc:	0001d63c 	andeq	sp, r1, ip, lsr r6
    26d0:	00000070 	andeq	r0, r0, r0, ror r0
    26d4:	8b080e42 	blhi	205fe4 <__bss_end__+0xbcf9c>
    26d8:	42018e02 	andmi	r8, r1, #2, 28
    26dc:	72040b0c 	andvc	r0, r4, #12, 22	; 0x3000
    26e0:	00080d0c 	andeq	r0, r8, ip, lsl #26
    26e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    26e8:	000024c4 	andeq	r2, r0, r4, asr #9
    26ec:	0001d6ac 	andeq	sp, r1, ip, lsr #13
    26f0:	000000a4 	andeq	r0, r0, r4, lsr #1
    26f4:	8b080e42 	blhi	206004 <__bss_end__+0xbcfbc>
    26f8:	42018e02 	andmi	r8, r1, #2, 28
    26fc:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2700:	080d0c4c 	stmdaeq	sp, {r2, r3, r6, sl, fp}
    2704:	0000001c 	andeq	r0, r0, ip, lsl r0
    2708:	000024c4 	andeq	r2, r0, r4, asr #9
    270c:	0001d750 	andeq	sp, r1, r0, asr r7
    2710:	00000094 	muleq	r0, r4, r0
    2714:	8b080e42 	blhi	206024 <__bss_end__+0xbcfdc>
    2718:	42018e02 	andmi	r8, r1, #2, 28
    271c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2720:	080d0c44 	stmdaeq	sp, {r2, r6, sl, fp}
    2724:	0000000c 	andeq	r0, r0, ip
    2728:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    272c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2730:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2734:	0000001c 	andeq	r0, r0, ip, lsl r0
    2738:	00002724 	andeq	r2, r0, r4, lsr #14
    273c:	0001d7e4 	andeq	sp, r1, r4, ror #15
    2740:	00000058 	andeq	r0, r0, r8, asr r0
    2744:	8b040e42 	blhi	106054 <morecore_area+0xbd054>
    2748:	0b0d4201 	bleq	352f54 <__bss_end__+0x209f0c>
    274c:	420d0d64 	andmi	r0, sp, #100, 26	; 0x1900
    2750:	00000ecb 	andeq	r0, r0, fp, asr #29
    2754:	0000001c 	andeq	r0, r0, ip, lsl r0
    2758:	00002724 	andeq	r2, r0, r4, lsr #14
    275c:	0001d83c 	andeq	sp, r1, ip, lsr r8
    2760:	0000008c 	andeq	r0, r0, ip, lsl #1
    2764:	8b080e42 	blhi	206074 <__bss_end__+0xbd02c>
    2768:	42018e02 	andmi	r8, r1, #2, 28
    276c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2770:	080d0c40 	stmdaeq	sp, {r6, sl, fp}
    2774:	0000001c 	andeq	r0, r0, ip, lsl r0
    2778:	00002724 	andeq	r2, r0, r4, lsr #14
    277c:	0001d8c8 	andeq	sp, r1, r8, asr #17
    2780:	00000080 	andeq	r0, r0, r0, lsl #1
    2784:	8b040e42 	blhi	106094 <morecore_area+0xbd094>
    2788:	0b0d4201 	bleq	352f94 <__bss_end__+0x209f4c>
    278c:	420d0d78 	andmi	r0, sp, #120, 26	; 0x1e00
    2790:	00000ecb 	andeq	r0, r0, fp, asr #29
    2794:	0000001c 	andeq	r0, r0, ip, lsl r0
    2798:	00002724 	andeq	r2, r0, r4, lsr #14
    279c:	0001d948 	andeq	sp, r1, r8, asr #18
    27a0:	00000038 	andeq	r0, r0, r8, lsr r0
    27a4:	8b040e42 	blhi	1060b4 <morecore_area+0xbd0b4>
    27a8:	0b0d4201 	bleq	352fb4 <__bss_end__+0x209f6c>
    27ac:	420d0d54 	andmi	r0, sp, #84, 26	; 0x1500
    27b0:	00000ecb 	andeq	r0, r0, fp, asr #29
    27b4:	0000001c 	andeq	r0, r0, ip, lsl r0
    27b8:	00002724 	andeq	r2, r0, r4, lsr #14
    27bc:	0001d980 	andeq	sp, r1, r0, lsl #19
    27c0:	00000070 	andeq	r0, r0, r0, ror r0
    27c4:	8b040e42 	blhi	1060d4 <morecore_area+0xbd0d4>
    27c8:	0b0d4201 	bleq	352fd4 <__bss_end__+0x209f8c>
    27cc:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
    27d0:	00000ecb 	andeq	r0, r0, fp, asr #29
    27d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    27d8:	00002724 	andeq	r2, r0, r4, lsr #14
    27dc:	0001d9f0 	strdeq	sp, [r1], -r0
    27e0:	00000020 	andeq	r0, r0, r0, lsr #32
    27e4:	8b040e42 	blhi	1060f4 <morecore_area+0xbd0f4>
    27e8:	0b0d4201 	bleq	352ff4 <__bss_end__+0x209fac>
    27ec:	420d0d48 	andmi	r0, sp, #72, 26	; 0x1200
    27f0:	00000ecb 	andeq	r0, r0, fp, asr #29
    27f4:	0000001c 	andeq	r0, r0, ip, lsl r0
    27f8:	00002724 	andeq	r2, r0, r4, lsr #14
    27fc:	0001da10 	andeq	sp, r1, r0, lsl sl
    2800:	000001d4 	ldrdeq	r0, [r0], -r4
    2804:	8b040e42 	blhi	106114 <morecore_area+0xbd114>
    2808:	0b0d4201 	bleq	353014 <__bss_end__+0x209fcc>
    280c:	0d0de202 	sfmeq	f6, 1, [sp, #-8]
    2810:	000ecb42 	andeq	ip, lr, r2, asr #22
    2814:	00000020 	andeq	r0, r0, r0, lsr #32
    2818:	00002724 	andeq	r2, r0, r4, lsr #14
    281c:	0001dbe4 	andeq	sp, r1, r4, ror #23
    2820:	0000007c 	andeq	r0, r0, ip, ror r0
    2824:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    2828:	8b038504 	blhi	e3c40 <morecore_area+0x9ac40>
    282c:	42018e02 	andmi	r8, r1, #2, 28
    2830:	78040b0c 	stmdavc	r4, {r2, r3, r8, r9, fp}
    2834:	00100d0c 	andseq	r0, r0, ip, lsl #26
    2838:	00000020 	andeq	r0, r0, r0, lsr #32
    283c:	00002724 	andeq	r2, r0, r4, lsr #14
    2840:	0001dc60 	andeq	sp, r1, r0, ror #24
    2844:	00000068 	andeq	r0, r0, r8, rrx
    2848:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    284c:	8e028b03 	vmlahi.f64	d8, d2, d3
    2850:	0b0c4201 	bleq	31305c <__bss_end__+0x1ca014>
    2854:	0d0c6e04 	stceq	14, cr6, [ip, #-16]
    2858:	0000000c 	andeq	r0, r0, ip
    285c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2860:	00002724 	andeq	r2, r0, r4, lsr #14
    2864:	0001dcc8 	andeq	sp, r1, r8, asr #25
    2868:	00000200 	andeq	r0, r0, r0, lsl #4
    286c:	8b080e42 	blhi	20617c <__bss_end__+0xbd134>
    2870:	42018e02 	andmi	r8, r1, #2, 28
    2874:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2878:	080d0cfa 	stmdaeq	sp, {r1, r3, r4, r5, r6, r7, sl, fp}
    287c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2880:	00002724 	andeq	r2, r0, r4, lsr #14
    2884:	0001dec8 	andeq	sp, r1, r8, asr #29
    2888:	00000030 	andeq	r0, r0, r0, lsr r0
    288c:	8b040e42 	blhi	10619c <morecore_area+0xbd19c>
    2890:	0b0d4201 	bleq	35309c <__bss_end__+0x20a054>
    2894:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    2898:	00000ecb 	andeq	r0, r0, fp, asr #29
    289c:	0000001c 	andeq	r0, r0, ip, lsl r0
    28a0:	00002724 	andeq	r2, r0, r4, lsr #14
    28a4:	0001def8 	strdeq	sp, [r1], -r8
    28a8:	00000030 	andeq	r0, r0, r0, lsr r0
    28ac:	8b040e42 	blhi	1061bc <morecore_area+0xbd1bc>
    28b0:	0b0d4201 	bleq	3530bc <__bss_end__+0x20a074>
    28b4:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    28b8:	00000ecb 	andeq	r0, r0, fp, asr #29
    28bc:	0000001c 	andeq	r0, r0, ip, lsl r0
    28c0:	00002724 	andeq	r2, r0, r4, lsr #14
    28c4:	0001df28 	andeq	sp, r1, r8, lsr #30
    28c8:	00000030 	andeq	r0, r0, r0, lsr r0
    28cc:	8b040e42 	blhi	1061dc <morecore_area+0xbd1dc>
    28d0:	0b0d4201 	bleq	3530dc <__bss_end__+0x20a094>
    28d4:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    28d8:	00000ecb 	andeq	r0, r0, fp, asr #29
    28dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    28e0:	00002724 	andeq	r2, r0, r4, lsr #14
    28e4:	0001df58 	andeq	sp, r1, r8, asr pc
    28e8:	00000030 	andeq	r0, r0, r0, lsr r0
    28ec:	8b040e42 	blhi	1061fc <morecore_area+0xbd1fc>
    28f0:	0b0d4201 	bleq	3530fc <__bss_end__+0x20a0b4>
    28f4:	420d0d50 	andmi	r0, sp, #80, 26	; 0x1400
    28f8:	00000ecb 	andeq	r0, r0, fp, asr #29
    28fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    2900:	00002724 	andeq	r2, r0, r4, lsr #14
    2904:	0001df88 	andeq	sp, r1, r8, lsl #31
    2908:	000000b4 	strheq	r0, [r0], -r4
    290c:	8b080e42 	blhi	20621c <__bss_end__+0xbd1d4>
    2910:	42018e02 	andmi	r8, r1, #2, 28
    2914:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    2918:	080d0c54 	stmdaeq	sp, {r2, r4, r6, sl, fp}
    291c:	00000030 	andeq	r0, r0, r0, lsr r0
    2920:	00002724 	andeq	r2, r0, r4, lsr #14
    2924:	0001e03c 	andeq	lr, r1, ip, lsr r0
    2928:	000000a4 	andeq	r0, r0, r4, lsr #1
    292c:	82080e42 	andhi	r0, r8, #1056	; 0x420
    2930:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
    2934:	048b100e 	streq	r1, [fp], #14
    2938:	0c42038e 	mcrreq	3, 8, r0, r2, cr14
    293c:	46020c0b 	strmi	r0, [r2], -fp, lsl #24
    2940:	42100d0c 	andsmi	r0, r0, #12, 26	; 0x300
    2944:	080ecbce 	stmdaeq	lr, {r1, r2, r3, r6, r7, r8, r9, fp, lr, pc}
    2948:	0ec2c342 	cdpeq	3, 12, cr12, cr2, cr2, {2}
    294c:	00000000 	andeq	r0, r0, r0
    2950:	0000001c 	andeq	r0, r0, ip, lsl r0
    2954:	00002724 	andeq	r2, r0, r4, lsr #14
    2958:	0001e0e0 	andeq	lr, r1, r0, ror #1
    295c:	000000c8 	andeq	r0, r0, r8, asr #1
    2960:	8b080e42 	blhi	206270 <__bss_end__+0xbd228>
    2964:	42018e02 	andmi	r8, r1, #2, 28
    2968:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    296c:	080d0c5e 	stmdaeq	sp, {r1, r2, r3, r4, r6, sl, fp}
    2970:	0000001c 	andeq	r0, r0, ip, lsl r0
    2974:	00002724 	andeq	r2, r0, r4, lsr #14
    2978:	0001e1a8 	andeq	lr, r1, r8, lsr #3
    297c:	000000b4 	strheq	r0, [r0], -r4
    2980:	8b080e42 	blhi	206290 <__bss_end__+0xbd248>
    2984:	42018e02 	andmi	r8, r1, #2, 28
    2988:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
    298c:	080d0c54 	stmdaeq	sp, {r2, r4, r6, sl, fp}

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffff4c <__bss_end__+0xffeb6f04>
       4:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
       8:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
       c:	2f676e6f 	svccs	0x00676e6f
      10:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
      14:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
      18:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
      1c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
      20:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
      24:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
      28:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
      2c:	6f72702f 	svcvs	0x0072702f
      30:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
      34:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
      38:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
      3c:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
      40:	72632f65 	rsbvc	r2, r3, #404	; 0x194
      44:	65732f74 	ldrbvs	r2, [r3, #-3956]!	; 0xfffff08c
      48:	615f346c 	cmpvs	pc, ip, ror #8
      4c:	2f686372 	svccs	0x00686372
      50:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
      54:	2f323368 	svccs	0x00323368
      58:	30747263 	rsbscc	r7, r4, r3, ror #4
      5c:	2f00532e 	svccs	0x0000532e
      60:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
      64:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
      68:	6f647679 	svcvs	0x00647679
      6c:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
      70:	2f346c65 	svccs	0x00346c65
      74:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
      78:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
      7c:	6169726f 	cmnvs	r9, pc, ror #4
      80:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
      84:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
      88:	2f747365 	svccs	0x00747365
      8c:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
      90:	6f772d6f 	svcvs	0x00772d6f
      94:	5f646c72 	svcpl	0x00646c72
      98:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
      9c:	4e470064 	cdpmi	0, 4, cr0, cr7, cr4, {3}
      a0:	53412055 	movtpl	r2, #4181	; 0x1055
      a4:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
      a8:	682f0034 	stmdavs	pc!, {r2, r4, r5}	; <UNPREDICTABLE>
      ac:	2f656d6f 	svccs	0x00656d6f
      b0:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
      b4:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
      b8:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
      bc:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
      c0:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
      c4:	6f747574 	svcvs	0x00747574
      c8:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
      cc:	616d2d73 	smcvs	53971	; 0xd2d3
      d0:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
      d4:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
      d8:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
      dc:	2f737463 	svccs	0x00737463
      e0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
      e4:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
      e8:	2f656d69 	svccs	0x00656d69
      ec:	2f747263 	svccs	0x00747263
      f0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
      f4:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
      f8:	61612f68 	cmnvs	r1, r8, ror #30
      fc:	33686372 	cmncc	r8, #-939524095	; 0xc8000001
     100:	72632f32 	rsbvc	r2, r3, #50, 30	; 0xc8
     104:	532e6974 			; <UNDEFINED> instruction: 0x532e6974
     108:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     10c:	6f6c2067 	svcvs	0x006c2067
     110:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     114:	4700746e 	strmi	r7, [r0, -lr, ror #8]
     118:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
     11c:	39203131 	stmdbcc	r0!, {r0, r4, r5, r8, ip, sp}
     120:	302e342e 	eorcc	r3, lr, lr, lsr #8
     124:	616d2d20 	cmnvs	sp, r0, lsr #26
     128:	2d206d72 	stccs	13, cr6, [r0, #-456]!	; 0xfffffe38
     12c:	3d70746d 	cfldrdcc	mvd7, [r0, #-436]!	; 0xfffffe4c
     130:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
     134:	6e6d2d20 	cdpvs	13, 6, cr2, cr13, cr0, {1}
     138:	6e752d6f 	cdpvs	13, 7, cr2, cr5, cr15, {3}
     13c:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
     140:	2d64656e 	cfstr64cs	mvdx6, [r4, #-440]!	; 0xfffffe48
     144:	65636361 	strbvs	r6, [r3, #-865]!	; 0xfffffc9f
     148:	2d207373 	stccs	3, cr7, [r0, #-460]!	; 0xfffffe34
     14c:	6f6c666d 	svcvs	0x006c666d
     150:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
     154:	733d6962 	teqvc	sp, #1605632	; 0x188000
     158:	6674666f 	ldrbtvs	r6, [r4], -pc, ror #12
     15c:	6d2d2070 	stcvs	0, cr2, [sp, #-448]!	; 0xfffffe40
     160:	2d736c74 	ldclcs	12, cr6, [r3, #-464]!	; 0xfffffe30
     164:	6c616964 			; <UNDEFINED> instruction: 0x6c616964
     168:	3d746365 	ldclcc	3, cr6, [r4, #-404]!	; 0xfffffe6c
     16c:	20756e67 	rsbscs	r6, r5, r7, ror #28
     170:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
     174:	613d6863 	teqvs	sp, r3, ror #16
     178:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
     17c:	2d20612d 	stfcss	f6, [r0, #-180]!	; 0xffffff4c
     180:	732d2067 			; <UNDEFINED> instruction: 0x732d2067
     184:	673d6474 			; <UNDEFINED> instruction: 0x673d6474
     188:	3131756e 	teqcc	r1, lr, ror #10
     18c:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
     190:	69702d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp}^
     194:	662d2065 	strtvs	r2, [sp], -r5, rrx
     198:	732d6f6e 			; <UNDEFINED> instruction: 0x732d6f6e
     19c:	6b636174 	blvs	18d8774 <__bss_end__+0x178f72c>
     1a0:	6f72702d 	svcvs	0x0072702d
     1a4:	74636574 	strbtvc	r6, [r3], #-1396	; 0xfffffa8c
     1a8:	2d20726f 	sfmcs	f7, 4, [r0, #-444]!	; 0xfffffe44
     1ac:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 1c <errno+0x18>
     1b0:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
     1b4:	6f726863 	svcvs	0x00726863
     1b8:	73756f6e 	cmnvc	r5, #440	; 0x1b8
     1bc:	776e752d 	strbvc	r7, [lr, -sp, lsr #10]!
     1c0:	2d646e69 	stclcs	14, cr6, [r4, #-420]!	; 0xfffffe5c
     1c4:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     1c8:	2d207365 	stccs	3, cr7, [r0, #-404]!	; 0xfffffe6c
     1cc:	736c7466 	cmnvc	ip, #1711276032	; 0x66000000
     1d0:	646f6d2d 	strbtvs	r6, [pc], #-3373	; 1d8 <errno+0x1d4>
     1d4:	6c3d6c65 	ldcvs	12, cr6, [sp], #-404	; 0xfffffe6c
     1d8:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
     1dc:	6578652d 	ldrbvs	r6, [r8, #-1325]!	; 0xfffffad3
     1e0:	682f0063 	stmdavs	pc!, {r0, r1, r5, r6}	; <UNPREDICTABLE>
     1e4:	2f656d6f 	svccs	0x00656d6f
     1e8:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     1ec:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     1f0:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     1f4:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     1f8:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     1fc:	6f747574 	svcvs	0x00747574
     200:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     204:	616d2d73 	smcvs	53971	; 0xd2d3
     208:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     20c:	682f7473 	stmdavs	pc!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}	; <UNPREDICTABLE>
     210:	6f6c6c65 	svcvs	0x006c6c65
     214:	726f772d 	rsbvc	r7, pc, #11796480	; 0xb40000
     218:	732f646c 			; <UNDEFINED> instruction: 0x732f646c
     21c:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 5c <errno+0x58>
     220:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     224:	495f0063 	ldmdbmi	pc, {r0, r1, r5, r6}^	; <UNPREDICTABLE>
     228:	49465f4f 	stmdbmi	r6, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     22c:	7300454c 	movwvc	r4, #1356	; 0x54c
     230:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     234:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     238:	00727265 	rsbseq	r7, r2, r5, ror #4
     23c:	6f647473 	svcvs	0x00647473
     240:	2f007475 	svccs	0x00007475
     244:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
     248:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
     24c:	6f647679 	svcvs	0x00647679
     250:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
     254:	2f346c65 	svccs	0x00346c65
     258:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     25c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
     260:	6169726f 	cmnvs	r9, pc, ror #4
     264:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
     268:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
     26c:	2f747365 	svccs	0x00747365
     270:	6a6f7270 	bvs	1bdcc38 <__bss_end__+0x1a93bf0>
     274:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
     278:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     27c:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
     280:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     284:	7472632f 	ldrbtvc	r6, [r2], #-815	; 0xfffffcd1
     288:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     28c:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
     290:	612f6863 			; <UNDEFINED> instruction: 0x612f6863
     294:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     298:	732f3233 			; <UNDEFINED> instruction: 0x732f3233
     29c:	5f346c65 	svcpl	0x00346c65
     2a0:	30747263 	rsbscc	r7, r4, r3, ror #4
     2a4:	7300532e 	movwvc	r5, #814	; 0x32e
     2a8:	5f344c65 	svcpl	0x00344c65
     2ac:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
     2b0:	49656761 	stmdbmi	r5!, {r0, r5, r6, r8, r9, sl, sp, lr}^
     2b4:	006f666e 	rsbeq	r6, pc, lr, ror #12
     2b8:	63766e65 	cmnvs	r6, #1616	; 0x650
     2bc:	4c657300 	stclmi	3, cr7, [r5], #-0
     2c0:	6f4e5f34 	svcvs	0x004e5f34
     2c4:	6372416e 	cmnvs	r2, #-2147483621	; 0x8000001b
     2c8:	6a624f68 	bvs	1894070 <__bss_end__+0x174b028>
     2cc:	54746365 	ldrbtpl	r6, [r4], #-869	; 0xfffffc9b
     2d0:	43657079 	cmnmi	r5, #121	; 0x79
     2d4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     2d8:	735f5f00 	cmpvc	pc, #0, 30
     2dc:	5f346c65 	svcpl	0x00346c65
     2e0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     2e4:	00635f74 	rsbeq	r5, r3, r4, ror pc
     2e8:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
     2ec:	695f346c 	ldmdbvs	pc, {r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     2f0:	625f6370 	subsvs	r6, pc, #112, 6	; 0xc0000001
     2f4:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     2f8:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
     2fc:	006b6361 	rsbeq	r6, fp, r1, ror #6
     300:	65636572 	strbvs	r6, [r3, #-1394]!	; 0xfffffa8e
     304:	49657669 	stmdbmi	r5!, {r0, r3, r5, r6, r9, sl, ip, sp, lr}^
     308:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
     30c:	4c657300 	stclmi	3, cr7, [r5], #-0
     310:	69555f34 	ldmdbvs	r5, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     314:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
     318:	4c657300 	stclmi	3, cr7, [r5], #-0
     31c:	6e555f34 	mrcvs	15, 2, r5, cr5, cr4, {1}
     320:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     324:	6a624f64 	bvs	18940bc <__bss_end__+0x174b074>
     328:	00746365 	rsbseq	r6, r4, r5, ror #6
     32c:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     330:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     334:	61686320 	cmnvs	r8, r0, lsr #6
     338:	73750072 	cmnvc	r5, #114	; 0x72
     33c:	61447265 	cmpvs	r4, r5, ror #4
     340:	73006174 	movwvc	r6, #372	; 0x174
     344:	5f344c65 	svcpl	0x00344c65
     348:	42435049 	submi	r5, r3, #73	; 0x49
     34c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     350:	68730072 	ldmdavs	r3!, {r1, r4, r5, r6}^
     354:	2074726f 	rsbscs	r7, r4, pc, ror #4
     358:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     35c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     360:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     364:	63657200 	cmnvs	r5, #0, 4
     368:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
     36c:	646f4e43 	strbtvs	r4, [pc], #-3651	; 374 <errno+0x370>
     370:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
     374:	575f344c 	ldrbpl	r3, [pc, -ip, asr #8]
     378:	0064726f 	rsbeq	r7, r4, pc, ror #4
     37c:	73706163 	cmnvc	r0, #-1073741800	; 0xc0000018
     380:	5f726f5f 	svcpl	0x00726f5f
     384:	67646162 	strbvs	r6, [r4, -r2, ror #2]!
     388:	61007365 	tstvs	r0, r5, ror #6
     38c:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     390:	70610065 	rsbvc	r0, r1, r5, rrx
     394:	626f5f69 	rsbvs	r5, pc, #420	; 0x1a4
     398:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     39c:	4c657300 	stclmi	3, cr7, [r5], #-0
     3a0:	654d5f34 	strbvs	r5, [sp, #-3892]	; 0xfffff0cc
     3a4:	67617373 			; <UNDEFINED> instruction: 0x67617373
     3a8:	666e4965 	strbtvs	r4, [lr], -r5, ror #18
     3ac:	00745f6f 	rsbseq	r5, r4, pc, ror #30
     3b0:	64726f77 	ldrbtvs	r6, [r2], #-3959	; 0xfffff089
     3b4:	5f610073 	svcpl	0x00610073
     3b8:	6c006e75 	stcvs	14, cr6, [r0], {117}	; 0x75
     3bc:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     3c0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     3c4:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     3c8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     3cc:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     3d0:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
     3d4:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
     3d8:	00727450 	rsbseq	r7, r2, r0, asr r4
     3dc:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     3e0:	6a624f5f 	bvs	1894164 <__bss_end__+0x174b11c>
     3e4:	54746365 	ldrbtpl	r6, [r4], #-869	; 0xfffffc9b
     3e8:	00657079 	rsbeq	r7, r5, r9, ror r0
     3ec:	74705f61 	ldrbtvc	r5, [r0], #-3937	; 0xfffff09f
     3f0:	5f610072 	svcpl	0x00610072
     3f4:	006c6176 	rsbeq	r6, ip, r6, ror r1
     3f8:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     3fc:	646e455f 	strbtvs	r4, [lr], #-1375	; 0xfffffaa1
     400:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
     404:	6a624f74 	bvs	18941dc <__bss_end__+0x174b194>
     408:	00746365 	rsbseq	r6, r4, r5, ror #6
     40c:	65636572 	strbvs	r6, [r3, #-1394]!	; 0xfffffa8e
     410:	44657669 	strbtmi	r7, [r5], #-1641	; 0xfffff997
     414:	68747065 	ldmdavs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
     418:	6f682f00 	svcvs	0x00682f00
     41c:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
     420:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
     424:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
     428:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     42c:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
     430:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
     434:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
     438:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
     43c:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
     440:	73656669 	cmnvc	r5, #110100480	; 0x6900000
     444:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
     448:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
     44c:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
     450:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     454:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     458:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
     45c:	632f6372 			; <UNDEFINED> instruction: 0x632f6372
     460:	2e317472 	mrccs	4, 1, r7, cr1, cr2, {3}
     464:	68730063 	ldmdavs	r3!, {r0, r1, r5, r6}^
     468:	2074726f 	rsbscs	r7, r4, pc, ror #4
     46c:	00746e69 	rsbseq	r6, r4, r9, ror #28
     470:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     474:	4350495f 	cmpmi	r0, #1556480	; 0x17c000
     478:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     47c:	005f7265 	subseq	r7, pc, r5, ror #4
     480:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     484:	4243545f 	submi	r5, r3, #1593835520	; 0x5f000000
     488:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     48c:	73007463 	movwvc	r7, #1123	; 0x463
     490:	5f344c65 	svcpl	0x00344c65
     494:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     498:	61636966 	cmnvs	r3, r6, ror #18
     49c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     4a0:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     4a4:	61007463 	tstvs	r0, r3, ror #8
     4a8:	5f767875 	svcpl	0x00767875
     4ac:	5f610074 	svcpl	0x00610074
     4b0:	00636e66 	rsbeq	r6, r3, r6, ror #28
     4b4:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     4b8:	7973415f 	ldmdbvc	r3!, {r0, r1, r2, r3, r4, r6, r8, lr}^
     4bc:	6e45636e 	cdpvs	3, 4, cr6, cr5, cr14, {3}
     4c0:	696f7064 	stmdbvs	pc!, {r2, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
     4c4:	624f746e 	subvs	r7, pc, #1845493760	; 0x6e000000
     4c8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     4cc:	4c657300 	stclmi	3, cr7, [r5], #-0
     4d0:	61435f34 	cmpvs	r3, r4, lsr pc
     4d4:	62615470 	rsbvs	r5, r1, #112, 8	; 0x70000000
     4d8:	624f656c 	subvs	r6, pc, #108, 10	; 0x1b000000
     4dc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     4e0:	735f5f00 	cmpvc	pc, #0, 30
     4e4:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     4e8:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     4ec:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
     4f0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     4f4:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
     4f8:	682f006e 	stmdavs	pc!, {r1, r2, r3, r5, r6}	; <UNPREDICTABLE>
     4fc:	2f656d6f 	svccs	0x00656d6f
     500:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     504:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     508:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     50c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     510:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     514:	6f747574 	svcvs	0x00747574
     518:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     51c:	616d2d73 	smcvs	53971	; 0xd2d3
     520:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     524:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
     528:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     52c:	2f737463 	svccs	0x00737463
     530:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     534:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     538:	2f656d69 	svccs	0x00656d69
     53c:	2f637273 	svccs	0x00637273
     540:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     544:	00632e74 	rsbeq	r2, r3, r4, ror lr
     548:	5f666c45 	svcpl	0x00666c45
     54c:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     550:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
     554:	72685474 	rsbvc	r5, r8, #116, 8	; 0x74000000
     558:	44646165 	strbtmi	r6, [r4], #-357	; 0xfffffe9b
     55c:	69616d6f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
     560:	6c45006e 	mcrrvs	0, 6, r0, r5, cr14
     564:	5f323366 	svcpl	0x00323366
     568:	64726f57 	ldrbtvs	r6, [r2], #-3927	; 0xfffff0a9
     56c:	6d5f7000 	ldclvs	0, cr7, [pc, #-0]	; 574 <errno+0x570>
     570:	7a736d65 	bvc	1cdbb0c <__bss_end__+0x1b92ac4>
     574:	4c657300 	stclmi	3, cr7, [r5], #-0
     578:	6c535f34 	mrrcvs	15, 3, r5, r3, cr4
     57c:	6f50746f 	svcvs	0x0050746f
     580:	65730073 	ldrbvs	r0, [r3, #-115]!	; 0xffffff8d
     584:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     588:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     58c:	69755f65 	ldmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     590:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
     594:	7000745f 	andvc	r7, r0, pc, asr r4
     598:	6461705f 	strbtvs	r7, [r1], #-95	; 0xffffffa1
     59c:	75007264 	strvc	r7, [r0, #-612]	; 0xfffffd9c
     5a0:	7079746e 	rsbsvc	r7, r9, lr, ror #8
     5a4:	694c6465 	stmdbvs	ip, {r0, r2, r5, r6, sl, sp, lr}^
     5a8:	73007473 	movwvc	r7, #1139	; 0x473
     5ac:	42657a69 	rsbmi	r7, r5, #430080	; 0x69000
     5b0:	00737469 	rsbseq	r7, r3, r9, ror #8
     5b4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     5b8:	67616d49 	strbvs	r6, [r1, -r9, asr #26]!
     5bc:	67615065 	strbvs	r5, [r1, -r5, rrx]!
     5c0:	00676e69 	rsbeq	r6, r7, r9, ror #28
     5c4:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     5c8:	7061435f 	rsbvc	r4, r1, pc, asr r3
     5cc:	746f6f42 	strbtvc	r6, [pc], #-3906	; 5d4 <errno+0x5d0>
     5d0:	6f666e49 	svcvs	0x00666e49
     5d4:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
     5d8:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
     5dc:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
     5e0:	4d537061 	ldclmi	0, cr7, [r3, #-388]	; 0xfffffe7c
     5e4:	4953554d 	ldmdbmi	r3, {r0, r2, r3, r6, r8, sl, ip, lr}^
     5e8:	6e6f4344 	cdpvs	3, 6, cr4, cr15, cr4, {2}
     5ec:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 424 <errno+0x420>
     5f0:	65737500 	ldrbvs	r7, [r3, #-1280]!	; 0xfffffb00
     5f4:	616d4972 	smcvs	54418	; 0xd492
     5f8:	72466567 	subvc	r6, r6, #432013312	; 0x19c00000
     5fc:	73656d61 	cmnvc	r5, #6208	; 0x1840
     600:	4c657300 	stclmi	3, cr7, [r5], #-0
     604:	61435f34 	cmpvs	r3, r4, lsr pc
     608:	504f4970 	subpl	r4, pc, r0, ror r9	; <UNPREDICTABLE>
     60c:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
     610:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
     614:	73006c6f 	movwvc	r6, #3183	; 0xc6f
     618:	5f344c65 	svcpl	0x00344c65
     61c:	79746e55 	ldmdbvc	r4!, {r0, r2, r4, r6, r9, sl, fp, sp, lr}^
     620:	44646570 	strbtmi	r6, [r4], #-1392	; 0xfffffa90
     624:	00637365 	rsbeq	r7, r3, r5, ror #6
     628:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     62c:	7061435f 	rsbvc	r4, r1, pc, asr r3
     630:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     634:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     638:	53566461 	cmppl	r6, #1627389952	; 0x61000000
     63c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
     640:	4c657300 	stclmi	3, cr7, [r5], #-0
     644:	6f445f34 	svcvs	0x00445f34
     648:	6e69616d 	powvsez	f6, f1, #5.0
     64c:	4c657300 	stclmi	3, cr7, [r5], #-0
     650:	69555f34 	ldmdbvs	r5, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     654:	0038746e 	eorseq	r7, r8, lr, ror #8
     658:	42637069 	rsbmi	r7, r3, #105	; 0x69
     65c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     660:	5f700072 	svcpl	0x00700072
     664:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     668:	4c657300 	stclmi	3, cr7, [r5], #-0
     66c:	61435f34 	cmpvs	r3, r4, lsr pc
     670:	4d4d5370 	stclmi	3, cr5, [sp, #-448]	; 0xfffffe40
     674:	43424355 	movtmi	r4, #9045	; 0x2355
     678:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
     67c:	73006c6f 	movwvc	r6, #3183	; 0xc6f
     680:	5f344c65 	svcpl	0x00344c65
     684:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
     688:	6e006449 	cdpvs	4, 0, cr6, cr0, cr9, {2}
     68c:	4f496d75 	svcmi	0x00496d75
     690:	654c5450 	strbvs	r5, [ip, #-1104]	; 0xfffffbb0
     694:	736c6576 	cmnvc	ip, #494927872	; 0x1d800000
     698:	64745f00 	ldrbtvs	r5, [r4], #-3840	; 0xfffff100
     69c:	5f617461 	svcpl	0x00617461
     6a0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     6a4:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
     6a8:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
     6ac:	53417061 	movtpl	r7, #4193	; 0x1061
     6b0:	6f434449 	svcvs	0x00434449
     6b4:	6f72746e 	svcvs	0x0072746e
     6b8:	6d65006c 	stclvs	0, cr0, [r5, #-432]!	; 0xfffffe50
     6bc:	00797470 	rsbseq	r7, r9, r0, ror r4
     6c0:	33666c45 	cmncc	r6, #17664	; 0x4500
     6c4:	664f5f32 			; <UNDEFINED> instruction: 0x664f5f32
     6c8:	73690066 	cmnvc	r9, #102	; 0x66
     6cc:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     6d0:	45006563 	strmi	r6, [r0, #-1379]	; 0xfffffa9d
     6d4:	3233666c 	eorscc	r6, r3, #108, 12	; 0x6c00000
     6d8:	6468505f 	strbtvs	r5, [r8], #-95	; 0xffffffa1
     6dc:	65730072 	ldrbvs	r0, [r3, #-114]!	; 0xffffff8e
     6e0:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
     6e4:	754e7061 	strbvc	r7, [lr, #-97]	; 0xffffff9f
     6e8:	69006c6c 	stmdbvs	r0, {r2, r3, r5, r6, sl, fp, sp, lr}
     6ec:	6170536f 	cmnvs	r0, pc, ror #6
     6f0:	61436563 	cmpvs	r3, r3, ror #10
     6f4:	45007370 	strmi	r7, [r0, #-880]	; 0xfffffc90
     6f8:	505f666c 	subspl	r6, pc, ip, ror #12
     6fc:	00726468 	rsbseq	r6, r2, r8, ror #8
     700:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     704:	7061435f 	rsbvc	r4, r1, pc, asr r3
     708:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     70c:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     710:	53416461 	movtpl	r6, #5217	; 0x1461
     714:	6f504449 	svcvs	0x00504449
     718:	6e006c6f 	cdpvs	12, 0, cr6, cr0, cr15, {3}
     71c:	4965646f 	stmdbmi	r5!, {r0, r1, r2, r3, r5, r6, sl, sp, lr}^
     720:	65730044 	ldrbvs	r0, [r3, #-68]!	; 0xffffffbc
     724:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
     728:	6f447061 	svcvs	0x00447061
     72c:	6e69616d 	powvsez	f6, f1, #5.0
     730:	4c657300 	stclmi	3, cr7, [r5], #-0
     734:	6f525f34 	svcvs	0x00525f34
     738:	4e43746f 	cdpmi	4, 4, cr7, cr3, cr15, {3}
     73c:	4365646f 	cmnmi	r5, #1862270976	; 0x6f000000
     740:	6c537061 	mrrcvs	0, 6, r7, r3, cr1
     744:	0073746f 	rsbseq	r7, r3, pc, ror #8
     748:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     74c:	7061435f 	rsbvc	r4, r1, pc, asr r3
     750:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     754:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     758:	4e436461 	cdpmi	4, 4, cr6, cr3, cr1, {3}
     75c:	0065646f 	rsbeq	r6, r5, pc, ror #8
     760:	746f6f62 	strbtvc	r6, [pc], #-3938	; 768 <errno+0x764>
     764:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
     768:	6573006f 	ldrbvs	r0, [r3, #-111]!	; 0xffffff91
     76c:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
     770:	6e497061 	cdpvs	0, 4, cr7, cr9, cr1, {3}
     774:	68547469 	ldmdavs	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     778:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     77c:	00424354 	subeq	r4, r2, r4, asr r3
     780:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 6cc <errno+0x6c8>
     784:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
     788:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
     78c:	2f676e6f 	svccs	0x00676e6f
     790:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     794:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
     798:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
     79c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     7a0:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
     7a4:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     7a8:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
     7ac:	6f72702f 	svcvs	0x0072702f
     7b0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     7b4:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
     7b8:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     7bc:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     7c0:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
     7c4:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
     7c8:	5f747261 	svcpl	0x00747261
     7cc:	746f6f72 	strbtvc	r6, [pc], #-3954	; 7d4 <errno+0x7d0>
     7d0:	7300632e 	movwvc	r6, #814	; 0x32e
     7d4:	5f344c65 	svcpl	0x00344c65
     7d8:	746f6c53 	strbtvc	r6, [pc], #-3155	; 7e0 <errno+0x7dc>
     7dc:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
     7e0:	73006e6f 	movwvc	r6, #3695	; 0xe6f
     7e4:	5f344c65 	svcpl	0x00344c65
     7e8:	496d754e 	stmdbmi	sp!, {r1, r2, r3, r6, r8, sl, ip, sp, lr}^
     7ec:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     7f0:	61436c61 	cmpvs	r3, r1, ror #24
     7f4:	70007370 	andvc	r7, r0, r0, ror r3
     7f8:	616c665f 	cmnvs	ip, pc, asr r6
     7fc:	73007367 	movwvc	r7, #871	; 0x367
     800:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
     804:	61724664 	cmnvs	r2, r4, ror #12
     808:	0073656d 	rsbseq	r6, r3, sp, ror #10
     80c:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     810:	7061435f 	rsbvc	r4, r1, pc, asr r3
     814:	00434d53 	subeq	r4, r3, r3, asr sp
     818:	72747865 	rsbsvc	r7, r4, #6619136	; 0x650000
     81c:	50494261 	subpl	r4, r9, r1, ror #4
     820:	73656761 	cmnvc	r5, #25427968	; 0x1840000
     824:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
     828:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
     82c:	6e690073 	mcrvs	0, 3, r0, cr9, cr3, {3}
     830:	68547469 	ldmdavs	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     834:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     838:	646f4e43 	strbtvs	r4, [pc], #-3651	; 840 <errno+0x83c>
     83c:	7a695365 	bvc	1a555d8 <__bss_end__+0x190c590>
     840:	74694265 	strbtvc	r4, [r9], #-613	; 0xfffffd9b
     844:	61700073 	cmnvs	r0, r3, ror r0
     848:	6e696464 	cdpvs	4, 6, cr6, cr9, cr4, {3}
     84c:	5f5f0067 	svcpl	0x005f0067
     850:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     854:	6174735f 	cmnvs	r4, pc, asr r3
     858:	725f7472 	subsvc	r7, pc, #1912602624	; 0x72000000
     85c:	00746f6f 	rsbseq	r6, r4, pc, ror #30
     860:	666f5f70 	uqsub16vs	r5, pc, r0	; <UNPREDICTABLE>
     864:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
     868:	62745f00 	rsbsvs	r5, r4, #0, 30
     86c:	655f7373 	ldrbvs	r7, [pc, #-883]	; 501 <errno+0x4fd>
     870:	7000646e 	andvc	r6, r0, lr, ror #8
     874:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
     878:	007a7365 	rsbseq	r7, sl, r5, ror #6
     87c:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     880:	7061435f 	rsbvc	r4, r1, pc, asr r3
     884:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     888:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     88c:	50496461 	subpl	r6, r9, r1, ror #8
     890:	66754243 	ldrbtvs	r4, [r5], -r3, asr #4
     894:	00726566 	rsbseq	r6, r2, r6, ror #10
     898:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     89c:	7061435f 	rsbvc	r4, r1, pc, asr r3
     8a0:	43515249 	cmpmi	r1, #-1879048188	; 0x90000004
     8a4:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
     8a8:	73006c6f 	movwvc	r6, #3183	; 0xc6f
     8ac:	5f344c65 	svcpl	0x00344c65
     8b0:	49706143 	ldmdbmi	r0!, {r0, r1, r6, r8, sp, lr}^
     8b4:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     8b8:	61657268 	cmnvs	r5, r8, ror #4
     8bc:	00435364 	subeq	r5, r3, r4, ror #6
     8c0:	61765f70 	cmnvs	r6, r0, ror pc
     8c4:	00726464 	rsbseq	r6, r2, r4, ror #8
     8c8:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     8cc:	6f6f425f 	svcvs	0x006f425f
     8d0:	666e4974 			; <UNDEFINED> instruction: 0x666e4974
     8d4:	745f006f 	ldrbvc	r0, [pc], #-111	; 8dc <errno+0x8d8>
     8d8:	5f737362 	svcpl	0x00737362
     8dc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     8e0:	78650074 	stmdavc	r5!, {r2, r4, r5, r6}^
     8e4:	4c617274 	sfmmi	f7, 2, [r1], #-464	; 0xfffffe30
     8e8:	70006e65 	andvc	r6, r0, r5, ror #28
     8ec:	696c615f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
     8f0:	74006e67 	strvc	r6, [r0], #-3687	; 0xfffff199
     8f4:	685f736c 	ldmdavs	pc, {r2, r3, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     8f8:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
     8fc:	6c450072 	mcrrvs	0, 7, r0, r5, cr2
     900:	5f323366 	svcpl	0x00323366
     904:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     908:	64745f00 	ldrbtvs	r5, [r4], #-3840	; 0xfffff100
     90c:	5f617461 	svcpl	0x00617461
     910:	00646e65 	rsbeq	r6, r4, r5, ror #28
     914:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     918:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     91c:	5f656d69 	svcpl	0x00656d69
     920:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     924:	5f727470 	svcpl	0x00727470
     928:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
     92c:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
     930:	4f497061 	svcmi	0x00497061
     934:	63617053 	cmnvs	r1, #83	; 0x53
     938:	65720065 	ldrbvs	r0, [r2, #-101]!	; 0xffffff9b
     93c:	00796c70 	rsbseq	r6, r9, r0, ror ip
     940:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     944:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     948:	5f656d69 	svcpl	0x00656d69
     94c:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     950:	0062635f 	rsbeq	r6, r2, pc, asr r3
     954:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     958:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     95c:	5f656d69 	svcpl	0x00656d69
     960:	5f746573 	svcpl	0x00746573
     964:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     968:	6e496e00 	cdpvs	14, 4, cr6, cr9, cr0, {0}
     96c:	61636f76 	smcvs	14070	; 0x36f6
     970:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     974:	6562614c 	strbvs	r6, [r2, #-332]!	; 0xfffffeb4
     978:	7300736c 	movwvc	r7, #876	; 0x36c
     97c:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     980:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     984:	775f656d 	ldrbvc	r6, [pc, -sp, ror #10]
     988:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     98c:	6970745f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
     990:	655f7264 	ldrbvs	r7, [pc, #-612]	; 734 <errno+0x730>
     994:	7300306c 	movwvc	r3, #108	; 0x6c
     998:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     99c:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     9a0:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 7f4 <errno+0x7f0>
     9a4:	5f65766f 	svcpl	0x0065766f
     9a8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     9ac:	5f6c6169 	svcpl	0x006c6169
     9b0:	00736c74 	rsbseq	r6, r3, r4, ror ip
     9b4:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     9b8:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
     9bc:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     9c0:	616e5367 	cmnvs	lr, r7, ror #6
     9c4:	6f687370 	svcvs	0x00687370
     9c8:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
     9cc:	4d5f344c 	cfldrdmi	mvd3, [pc, #-304]	; 8a4 <errno+0x8a0>
     9d0:	654c6773 	strbvs	r6, [ip, #-1907]	; 0xfffff88d
     9d4:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     9d8:	73746942 	cmnvc	r4, #1081344	; 0x108000
     9dc:	5f6e6900 	svcpl	0x006e6900
     9e0:	5f74756f 	svcpl	0x0074756f
     9e4:	0030726d 	eorseq	r7, r0, sp, ror #4
     9e8:	6f5f6e69 	svcvs	0x005f6e69
     9ec:	6d5f7475 	cfldrdvs	mvd7, [pc, #-468]	; 820 <errno+0x81c>
     9f0:	69003172 	stmdbvs	r0, {r1, r4, r5, r6, r8, ip, sp}
     9f4:	756f5f6e 	strbvc	r5, [pc, #-3950]!	; fffffa8e <__bss_end__+0xffeb6a46>
     9f8:	726d5f74 	rsbvc	r5, sp, #116, 30	; 0x1d0
     9fc:	6e690032 	mcrvs	0, 3, r0, cr9, cr2, {1}
     a00:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     a04:	33726d5f 	cmncc	r2, #6080	; 0x17c0
     a08:	42435400 	submi	r5, r3, #0, 8
     a0c:	49746553 	ldmdbmi	r4!, {r0, r1, r4, r6, r8, sl, sp, lr}^
     a10:	75424350 	strbvc	r4, [r2, #-848]	; 0xfffffcb0
     a14:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     a18:	706d6500 	rsbvc	r6, sp, r0, lsl #10
     a1c:	745f7974 	ldrbvc	r7, [pc], #-2420	; a24 <errno+0xa20>
     a20:	7300736c 	movwvc	r7, #876	; 0x36c
     a24:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
     a28:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     a2c:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
     a30:	5f657a69 	svcpl	0x00657a69
     a34:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
     a38:	415f344c 	cmpmi	pc, ip, asr #8
     a3c:	505f4d52 	subspl	r4, pc, r2, asr sp	; <UNPREDICTABLE>
     a40:	44656761 	strbtmi	r6, [r5], #-1889	; 0xfffff89f
     a44:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
     a48:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
     a4c:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     a50:	73007463 	movwvc	r7, #1123	; 0x463
     a54:	5f344c65 	svcpl	0x00344c65
     a58:	44737953 	ldrbtmi	r7, [r3], #-2387	; 0xfffff6ad
     a5c:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     a60:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
     a64:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     a68:	73006461 	movwvc	r6, #1121	; 0x461
     a6c:	5f344c65 	svcpl	0x00344c65
     a70:	59737953 	ldmdbpl	r3!, {r0, r1, r4, r6, r8, fp, ip, sp, lr}^
     a74:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
     a78:	6f4e4300 	svcvs	0x004e4300
     a7c:	6f4d6564 	svcvs	0x004d6564
     a80:	73006576 	movwvc	r6, #1398	; 0x576
     a84:	5f344c65 	svcpl	0x00344c65
     a88:	52737953 	rsbspl	r7, r3, #1359872	; 0x14c000
     a8c:	796c7065 	stmdbvc	ip!, {r0, r2, r5, r6, ip, sp, lr}^
     a90:	76636552 			; <UNDEFINED> instruction: 0x76636552
     a94:	42435400 	submi	r5, r3, #0, 8
     a98:	53746553 	cmnpl	r4, #348127232	; 0x14c00000
     a9c:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
     aa0:	61726150 	cmnvs	r2, r0, asr r1
     aa4:	6900736d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, r9, ip, sp, lr}
     aa8:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     aac:	745f6c61 	ldrbvc	r6, [pc], #-3169	; ab4 <errno+0xab0>
     ab0:	61657268 	cmnvs	r5, r8, ror #4
     ab4:	70695f64 	rsbvc	r5, r9, r4, ror #30
     ab8:	75625f63 	strbvc	r5, [r2, #-3939]!	; 0xfffff09d
     abc:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     ac0:	766e4900 	strbtvc	r4, [lr], -r0, lsl #18
     ac4:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
     ac8:	6f766e49 	svcvs	0x00766e49
     acc:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     ad0:	6f006e6f 	svcvs	0x00006e6f
     ad4:	695f7475 	ldmdbvs	pc, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     ad8:	006f666e 	rsbeq	r6, pc, lr, ror #12
     adc:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
     ae0:	00737265 	rsbseq	r7, r3, r5, ror #4
     ae4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     ae8:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     aec:	5f656d69 	svcpl	0x00656d69
     af0:	70766e65 	rsbsvc	r6, r6, r5, ror #28
     af4:	6c657300 	stclvs	3, cr7, [r5], #-0
     af8:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
     afc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     b00:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
     b04:	736c745f 	cmnvc	ip, #1593835520	; 0x5f000000
     b08:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     b0c:	6d690065 	stclvs	0, cr0, [r9, #-404]!	; 0xfffffe6c
     b10:	5f656761 	svcpl	0x00656761
     b14:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     b18:	42435400 	submi	r5, r3, #0, 8
     b1c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     b20:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
     b24:	65730065 	ldrbvs	r0, [r3, #-101]!	; 0xffffff9b
     b28:	535f344c 	cmppl	pc, #76, 8	; 0x4c000000
     b2c:	65537379 	ldrbvs	r7, [r3, #-889]	; 0xfffffc87
     b30:	5400646e 	strpl	r6, [r0], #-1134	; 0xfffffb92
     b34:	65534243 	ldrbvs	r4, [r3, #-579]	; 0xfffffdbd
     b38:	50434d74 	subpl	r4, r3, r4, ror sp
     b3c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     b40:	00797469 	rsbseq	r7, r9, r9, ror #8
     b44:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     b48:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     b4c:	5f656d69 	svcpl	0x00656d69
     b50:	746f6f62 	strbtvc	r6, [pc], #-3938	; b58 <errno+0xb54>
     b54:	6f666e69 	svcvs	0x00666e69
     b58:	6d656d00 	stclvs	13, cr6, [r5, #-0]
     b5c:	5f79726f 	svcpl	0x0079726f
     b60:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     b64:	6f4e4300 	svcvs	0x004e4300
     b68:	61536564 	cmpvs	r3, r4, ror #10
     b6c:	61436576 	hvcvs	13910	; 0x3656
     b70:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
     b74:	6f4e4300 	svcvs	0x004e4300
     b78:	694d6564 	stmdbvs	sp, {r2, r5, r6, r8, sl, sp, lr}^
     b7c:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
     b80:	65524243 	ldrbvs	r4, [r2, #-579]	; 0xfffffdbd
     b84:	65526461 	ldrbvs	r6, [r2, #-1121]	; 0xfffffb9f
     b88:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
     b8c:	00737265 	rsbseq	r7, r3, r5, ror #4
     b90:	695f7369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     b94:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     b98:	745f6c61 	ldrbvc	r6, [pc], #-3169	; ba0 <errno+0xb9c>
     b9c:	61657268 	cmnvs	r5, r8, ror #4
     ba0:	65730064 	ldrbvs	r0, [r3, #-100]!	; 0xffffff9c
     ba4:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     ba8:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     bac:	65735f65 	ldrbvs	r5, [r3, #-3941]!	; 0xfffff09b
     bb0:	6c745f74 	ldclvs	15, cr5, [r4], #-464	; 0xfffffe30
     bb4:	61625f73 	smcvs	9715	; 0x25f3
     bb8:	73006573 	movwvc	r6, #1395	; 0x573
     bbc:	5f344c65 	svcpl	0x00344c65
     bc0:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
     bc4:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
     bc8:	79547463 	ldmdbvc	r4, {r0, r1, r5, r6, sl, ip, sp, lr}^
     bcc:	6f436570 	svcvs	0x00436570
     bd0:	00746e75 	rsbseq	r6, r4, r5, ror lr
     bd4:	646f4e43 	strbtvs	r4, [pc], #-3651	; bdc <errno+0xbd8>
     bd8:	6c654465 	cfstrdvs	mvd4, [r5], #-404	; 0xfffffe6c
     bdc:	00657465 	rsbeq	r7, r5, r5, ror #8
     be0:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     be4:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
     be8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     bec:	73656400 	cmnvc	r5, #0, 8
     bf0:	6c745f74 	ldclvs	15, cr5, [r4], #-464	; 0xfffffe30
     bf4:	65730073 	ldrbvs	r0, [r3, #-115]!	; 0xffffff8d
     bf8:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     bfc:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     c00:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     c04:	70007469 	andvc	r7, r0, r9, ror #8
     c08:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     c0c:	685f6d61 	ldmdavs	pc, {r0, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     c10:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
     c14:	6f6c0072 	svcvs	0x006c0072
     c18:	5f6c6163 	svcpl	0x006c6163
     c1c:	5f736c74 	svcpl	0x00736c74
     c20:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
     c24:	6f4e4300 	svcvs	0x004e4300
     c28:	6f526564 	svcvs	0x00526564
     c2c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     c30:	6d656d00 	stclvs	13, cr6, [r5, #-0]
     c34:	7a69735f 	bvc	1a5d9b8 <__bss_end__+0x1914970>
     c38:	682f0065 	stmdavs	pc!, {r0, r2, r5, r6}	; <UNPREDICTABLE>
     c3c:	2f656d6f 	svccs	0x00656d6f
     c40:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     c44:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
     c48:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
     c4c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
     c50:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
     c54:	6f747574 	svcvs	0x00747574
     c58:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
     c5c:	616d2d73 	smcvs	53971	; 0xd2d3
     c60:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
     c64:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
     c68:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     c6c:	2f737463 	svccs	0x00737463
     c70:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     c74:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     c78:	2f656d69 	svccs	0x00656d69
     c7c:	2f637273 	svccs	0x00637273
     c80:	2e766e65 	cdpcs	14, 7, cr6, cr6, cr5, {3}
     c84:	52490063 	subpl	r0, r9, #99	; 0x63
     c88:	74655351 	strbtvc	r5, [r5], #-849	; 0xfffffcaf
     c8c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c90:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c94:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     c98:	73495152 	movtvc	r5, #37202	; 0x9152
     c9c:	49657573 	stmdbmi	r5!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
     ca0:	61485152 	cmpvs	r8, r2, asr r1
     ca4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     ca8:	6e690072 	mcrvs	0, 3, r0, cr9, cr2, {3}
     cac:	61697469 	cmnvs	r9, r9, ror #8
     cb0:	68745f6c 	ldmdavs	r4!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     cb4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     cb8:	736c745f 	cmnvc	ip, #1593835520	; 0x5f000000
     cbc:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
     cc0:	4e430065 	cdpmi	0, 4, cr0, cr3, cr5, {3}
     cc4:	5265646f 	rsbpl	r6, r5, #1862270976	; 0x6f000000
     cc8:	6b6f7665 	blvs	1bde664 <__bss_end__+0x1a9561c>
     ccc:	65640065 	strbvs	r0, [r4, #-101]!	; 0xffffff9b
     cd0:	74707473 	ldrbtvc	r7, [r0], #-1139	; 0xfffffb8d
     cd4:	6f630072 	svcvs	0x00630072
     cd8:	73006564 	movwvc	r6, #1380	; 0x564
     cdc:	5f344c65 	svcpl	0x00344c65
     ce0:	44737953 	ldrbtmi	r7, [r3], #-2387	; 0xfffff6ad
     ce4:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     ce8:	746c6148 	strbtvc	r6, [ip], #-328	; 0xfffffeb8
     cec:	42435400 	submi	r5, r3, #0, 8
     cf0:	70737553 	rsbsvc	r7, r3, r3, asr r5
     cf4:	00646e65 	rsbeq	r6, r4, r5, ror #28
     cf8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     cfc:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     d00:	5f656d69 	svcpl	0x00656d69
     d04:	76787561 	ldrbtvc	r7, [r8], -r1, ror #10
     d08:	6e637300 	cdpvs	3, 6, cr7, cr3, cr0, {0}
     d0c:	6573006f 	ldrbvs	r0, [r3, #-111]!	; 0xffffff91
     d10:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     d14:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     d18:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
     d1c:	745f6461 	ldrbvc	r6, [pc], #-1121	; d24 <errno+0xd20>
     d20:	72646970 	rsbvc	r6, r4, #112, 18	; 0x1c0000
     d24:	306c655f 	rsbcc	r6, ip, pc, asr r5
     d28:	4c657300 	stclmi	3, cr7, [r5], #-0
     d2c:	734d5f34 	movtvc	r5, #57140	; 0xdf34
     d30:	6d694c67 	stclvs	12, cr4, [r9, #-412]!	; 0xfffffe64
     d34:	00737469 	rsbseq	r7, r3, r9, ror #8
     d38:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     d3c:	6c5f6461 	cfldrdvs	mvd6, [pc], {97}	; 0x61
     d40:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
     d44:	72665f70 	rsbvc	r5, r6, #112, 30	; 0x1c0
     d48:	745f6d6f 	ldrbvc	r6, [pc], #-3439	; d50 <errno+0xd4c>
     d4c:	725f736c 	subsvc	r7, pc, #108, 6	; 0xb0000001
     d50:	6f696765 	svcvs	0x00696765
     d54:	6573006e 	ldrbvs	r0, [r3, #-110]!	; 0xffffff92
     d58:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     d5c:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     d60:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
     d64:	6c745f74 	ldclvs	15, cr5, [r4], #-464	; 0xfffffe30
     d68:	69735f73 	ldmdbvs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     d6c:	6300657a 	movwvs	r6, #1402	; 0x57a
     d70:	5f79706f 	svcpl	0x0079706f
     d74:	5f736c74 	svcpl	0x00736c74
     d78:	61746164 	cmnvs	r4, r4, ror #2
     d7c:	6c657300 	stclvs	3, cr7, [r5], #-0
     d80:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
     d84:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     d88:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
     d8c:	745f6574 	ldrbvc	r6, [pc], #-1396	; d94 <errno+0xd90>
     d90:	695f736c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     d94:	6567616d 	strbvs	r6, [r7, #-365]!	; 0xfffffe93
     d98:	6d726100 	ldfvse	f6, [r2, #-0]
     d9c:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
     da0:	6e65735f 	mcrvs	3, 3, r7, cr5, cr15, {2}
     da4:	65725f64 	ldrbvs	r5, [r2, #-3940]!	; 0xfffff09c
     da8:	6c007663 	stcvs	6, cr7, [r0], {99}	; 0x63
     dac:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
     db0:	65730070 	ldrbvs	r0, [r3, #-112]!	; 0xffffff90
     db4:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
     db8:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
     dbc:	72615f65 	rsbvc	r5, r1, #404	; 0x194
     dc0:	73006367 	movwvc	r6, #871	; 0x367
     dc4:	5f344c65 	svcpl	0x00344c65
     dc8:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
     dcc:	75424350 	strbvc	r4, [r2, #-848]	; 0xfffffcb0
     dd0:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
     dd4:	6c657300 	stclvs	3, cr7, [r5], #-0
     dd8:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
     ddc:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     de0:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
     de4:	52410076 	subpl	r0, r1, #118	; 0x76
     de8:	4344504d 	movtmi	r5, #16461	; 0x404d
     dec:	6e61656c 	cdpvs	5, 6, cr6, cr1, cr12, {3}
     df0:	7461445f 	strbtvc	r4, [r1], #-1119	; 0xfffffba1
     df4:	65730061 	ldrbvs	r0, [r3, #-97]!	; 0xffffff9f
     df8:	4d5f344c 	cfldrdmi	mvd3, [pc, #-304]	; cd0 <errno+0xccc>
     dfc:	614d6773 	hvcvs	54899	; 0xd673
     e00:	6e654c78 	mcrvs	12, 3, r4, cr5, cr8, {3}
     e04:	00687467 	rsbeq	r7, r8, r7, ror #8
     e08:	73756e75 	cmnvc	r5, #1872	; 0x750
     e0c:	00306465 	eorseq	r6, r0, r5, ror #8
     e10:	73756e75 	cmnvc	r5, #1872	; 0x750
     e14:	00316465 	eorseq	r6, r1, r5, ror #8
     e18:	73756e75 	cmnvc	r5, #1872	; 0x750
     e1c:	00336465 	eorseq	r6, r3, r5, ror #8
     e20:	73756e75 	cmnvc	r5, #1872	; 0x750
     e24:	00346465 	eorseq	r6, r4, r5, ror #8
     e28:	73756e75 	cmnvc	r5, #1872	; 0x750
     e2c:	00356465 	eorseq	r6, r5, r5, ror #8
     e30:	73726170 	cmnvc	r2, #112, 2
     e34:	75615f65 	strbvc	r5, [r1, #-3941]!	; 0xfffff09b
     e38:	74007678 	strvc	r7, [r0], #-1656	; 0xfffff988
     e3c:	625f736c 	subsvs	r7, pc, #108, 6	; 0xb0000001
     e40:	5f657361 	svcpl	0x00657361
     e44:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; cb4 <errno+0xcb0>
     e48:	736c745f 	cmnvc	ip, #1593835520	; 0x5f000000
     e4c:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
     e50:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     e54:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     e58:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
     e5c:	6552424e 	ldrbvs	r4, [r2, #-590]	; 0xfffffdb2
     e60:	5f007663 	svcpl	0x00007663
     e64:	6d756e65 	ldclvs	14, cr6, [r5, #-404]!	; 0xfffffe6c
     e68:	6461705f 	strbtvs	r7, [r1], #-95	; 0xffffffa1
     e6c:	4c65735f 	stclmi	3, cr7, [r5], #-380	; 0xfffffe84
     e70:	79535f34 	ldmdbvc	r3, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     e74:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
     e78:	44495f6c 	strbmi	r5, [r9], #-3948	; 0xfffff094
     e7c:	616f6c00 	cmnvs	pc, r0, lsl #24
     e80:	6c745f64 	ldclvs	15, cr5, [r4], #-400	; 0xfffffe70
     e84:	61645f73 	smcvs	17907	; 0x45f3
     e88:	41006174 	tstmi	r0, r4, ror r1
     e8c:	44504d52 	ldrbmi	r4, [r0], #-3410	; 0xfffff2ae
     e90:	61656c43 	cmnvs	r5, r3, asr #24
     e94:	766e496e 	strbtvc	r4, [lr], -lr, ror #18
     e98:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
     e9c:	5f657461 	svcpl	0x00657461
     ea0:	61746144 	cmnvs	r4, r4, asr #2
     ea4:	636f6c00 	cmnvs	pc, #0, 24
     ea8:	745f6c61 	ldrbvc	r6, [pc], #-3169	; eb0 <errno+0xeac>
     eac:	625f736c 	subsvs	r7, pc, #108, 6	; 0xb0000001
     eb0:	00657361 	rsbeq	r7, r5, r1, ror #6
     eb4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     eb8:	6c5f6461 	cfldrdvs	mvd6, [pc], {97}	; 0x61
     ebc:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
     ec0:	00745f70 	rsbseq	r5, r4, r0, ror pc
     ec4:	616d6f44 	cmnvs	sp, r4, asr #30
     ec8:	65536e69 	ldrbvs	r6, [r3, #-3689]	; 0xfffff197
     ecc:	74655374 	strbtvc	r5, [r5], #-884	; 0xfffffc8c
     ed0:	6f4e4300 	svcvs	0x004e4300
     ed4:	61436564 	cmpvs	r3, r4, ror #10
     ed8:	6c65636e 	stclvs	3, cr6, [r5], #-440	; 0xfffffe48
     edc:	67646142 	strbvs	r6, [r4, -r2, asr #2]!
     ee0:	65536465 	ldrbvs	r6, [r3, #-1125]	; 0xfffffb9b
     ee4:	0073646e 	rsbseq	r6, r3, lr, ror #8
     ee8:	646f6d5f 	strbtvs	r6, [pc], #-3423	; ef0 <errno+0xeec>
     eec:	626f5f65 	rsbvs	r5, pc, #404	; 0x194
     ef0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     ef4:	4c657300 	stclmi	3, cr7, [r5], #-0
     ef8:	734d5f34 	movtvc	r5, #57140	; 0xdf34
     efc:	74784567 	ldrbtvc	r4, [r8], #-1383	; 0xfffffa99
     f00:	61436172 	hvcvs	13842	; 0x3612
     f04:	74694270 	strbtvc	r4, [r9], #-624	; 0xfffffd90
     f08:	52410073 	subpl	r0, r1, #115	; 0x73
     f0c:	4944504d 	stmdbmi	r4, {r0, r2, r3, r6, ip, lr}^
     f10:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
     f14:	74616469 	strbtvc	r6, [r1], #-1129	; 0xfffffb97
     f18:	61445f65 	cmpvs	r4, r5, ror #30
     f1c:	64006174 	strvs	r6, [r0], #-372	; 0xfffffe8c
     f20:	5f747365 	svcpl	0x00747365
     f24:	5f736c74 	svcpl	0x00736c74
     f28:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     f2c:	42435400 	submi	r5, r3, #0, 8
     f30:	53746553 	cmnpl	r4, #348127232	; 0x14c00000
     f34:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
     f38:	736c7400 	cmnvc	ip, #0, 8
     f3c:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
     f40:	5f5f0072 	svcpl	0x005f0072
     f44:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
     f48:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
     f4c:	5f656d69 	svcpl	0x00656d69
     f50:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
     f54:	766e655f 			; <UNDEFINED> instruction: 0x766e655f
     f58:	4c657300 	stclmi	3, cr7, [r5], #-0
     f5c:	79535f34 	ldmdbvc	r3, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     f60:	70655273 	rsbvc	r5, r5, r3, ror r2
     f64:	4900796c 	stmdbmi	r0, {r2, r3, r5, r6, r8, fp, ip, sp, lr}
     f68:	6c435152 	stfvse	f5, [r3], {82}	; 0x52
     f6c:	49726165 	ldmdbmi	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     f70:	61485152 	cmpvs	r8, r2, asr r1
     f74:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     f78:	72740072 	rsbsvc	r0, r4, #114	; 0x72
     f7c:	6e695f79 	mcrvs	15, 3, r5, cr9, cr9, {3}
     f80:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
     f84:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
     f88:	6c745f63 	ldclvs	15, cr5, [r4], #-396	; 0xfffffe74
     f8c:	43540073 	cmpmi	r4, #115	; 0x73
     f90:	69725742 	ldmdbvs	r2!, {r1, r6, r8, r9, sl, ip, lr}^
     f94:	65526574 	ldrbvs	r6, [r2, #-1396]	; 0xfffffa8c
     f98:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
     f9c:	00737265 	rsbseq	r7, r3, r5, ror #4
     fa0:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
     fa4:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
     fa8:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     fac:	70614367 	rsbvc	r4, r1, r7, ror #6
     fb0:	6e656449 	cdpvs	4, 6, cr6, cr5, cr9, {2}
     fb4:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
     fb8:	42435400 	submi	r5, r3, #0, 8
     fbc:	50746553 	rsbspl	r6, r4, r3, asr r5
     fc0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     fc4:	00797469 	rsbseq	r7, r9, r9, ror #8
     fc8:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     fcc:	65730073 	ldrbvs	r0, [r3, #-115]!	; 0xffffff8d
     fd0:	535f344c 	cmppl	pc, #76, 8	; 0x4c000000
     fd4:	65447379 	strbvs	r7, [r4, #-889]	; 0xfffffc87
     fd8:	50677562 	rsbpl	r7, r7, r2, ror #10
     fdc:	68437475 	stmdavs	r3, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     fe0:	54007261 	strpl	r7, [r0], #-609	; 0xfffffd9f
     fe4:	69424243 	stmdbvs	r2, {r0, r1, r6, r9, lr}^
     fe8:	6f4e646e 	svcvs	0x004e646e
     fec:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
     ff0:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     ff4:	43006e6f 	movwmi	r6, #3695	; 0xe6f
     ff8:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
     ffc:	6174754d 	cmnvs	r4, sp, asr #10
    1000:	73006574 	movwvc	r6, #1396	; 0x574
    1004:	5f346c65 	svcpl	0x00346c65
    1008:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    100c:	766e695f 			; <UNDEFINED> instruction: 0x766e695f
    1010:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    1014:	5f6e6f69 	svcpl	0x006e6f69
    1018:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
    101c:	6c74006c 	ldclvs	0, cr0, [r4], #-432	; 0xfffffe50
    1020:	72665f73 	rsbvc	r5, r6, #460	; 0x1cc
    1024:	745f6d6f 	ldrbvc	r6, [pc], #-3439	; 102c <errno+0x1028>
    1028:	725f736c 	subsvc	r7, pc, #108, 6	; 0xb0000001
    102c:	6f696765 	svcvs	0x00696765
    1030:	5f5f006e 	svcpl	0x005f006e
    1034:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1038:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    103c:	5f656d69 	svcpl	0x00656d69
    1040:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1044:	6c745f65 	ldclvs	15, cr5, [r4], #-404	; 0xfffffe6c
    1048:	61765f73 	cmnvs	r6, r3, ror pc
    104c:	62616972 	rsbvs	r6, r1, #1867776	; 0x1c8000
    1050:	7400656c 	strvc	r6, [r0], #-1388	; 0xfffffa94
    1054:	6d5f736c 	ldclvs	3, cr7, [pc, #-432]	; eac <errno+0xea8>
    1058:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    105c:	6f6c0079 	svcvs	0x006c0079
    1060:	5f6c6163 	svcpl	0x006c6163
    1064:	00736c74 	rsbseq	r6, r3, r4, ror ip
    1068:	52424354 	subpl	r4, r2, #84, 6	; 0x50000001
    106c:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    1070:	6e750065 	cdpvs	0, 7, cr0, cr5, cr5, {3}
    1074:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
    1078:	65730032 	ldrbvs	r0, [r3, #-50]!	; 0xffffffce
    107c:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1080:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1084:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
    1088:	61697469 	cmnvs	r9, r9, ror #8
    108c:	6c745f6c 	ldclvs	15, cr5, [r4], #-432	; 0xfffffe50
    1090:	6e655f73 	mcrvs	15, 3, r5, cr5, cr3, {3}
    1094:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1098:	43540064 	cmpmi	r4, #100	; 0x64
    109c:	706f4342 	rsbvc	r4, pc, r2, asr #6
    10a0:	67655279 			; <UNDEFINED> instruction: 0x67655279
    10a4:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    10a8:	54007372 	strpl	r7, [r0], #-882	; 0xfffffc8e
    10ac:	6e554243 	cdpvs	2, 5, cr4, cr5, cr3, {2}
    10b0:	646e6962 	strbtvs	r6, [lr], #-2402	; 0xfffff69e
    10b4:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    10b8:	61636966 	cmnvs	r3, r6, ror #18
    10bc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    10c0:	736c7400 	cmnvc	ip, #0, 8
    10c4:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    10c8:	5f6e6f69 	svcpl	0x006e6f69
    10cc:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    10d0:	736c7400 	cmnvc	ip, #0, 8
    10d4:	6f72665f 	svcvs	0x0072665f
    10d8:	6c745f6d 	ldclvs	15, cr5, [r4], #-436	; 0xfffffe4c
    10dc:	61625f73 	smcvs	9715	; 0x25f3
    10e0:	73006573 	movwvc	r6, #1395	; 0x573
    10e4:	5f344c65 	svcpl	0x00344c65
    10e8:	4e737953 			; <UNDEFINED> instruction: 0x4e737953
    10ec:	6e655342 	cdpvs	3, 6, cr5, cr5, cr2, {2}
    10f0:	6e690064 	cdpvs	0, 6, cr0, cr9, cr4, {3}
    10f4:	615f6f66 	cmpvs	pc, r6, ror #30
    10f8:	73006772 	movwvc	r6, #1906	; 0x772
    10fc:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
    1100:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1104:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
    1108:	705f7465 	subsvc	r7, pc, r5, ror #8
    110c:	655f6572 	ldrbvs	r6, [pc, #-1394]	; ba2 <errno+0xb9e>
    1110:	00746978 	rsbseq	r6, r4, r8, ror r9
    1114:	3367736d 	cmncc	r7, #-1275068415	; 0xb4000001
    1118:	4c657300 	stclmi	3, cr7, [r5], #-0
    111c:	65445f34 	strbvs	r5, [r4, #-3892]	; 0xfffff0cc
    1120:	4e677562 	cdpmi	5, 6, cr7, cr7, cr2, {3}
    1124:	54656d61 	strbtpl	r6, [r5], #-3425	; 0xfffff29f
    1128:	61657268 	cmnvs	r5, r8, ror #4
    112c:	616e0064 	cmnvs	lr, r4, rrx
    1130:	705f656d 	subsvc	r6, pc, sp, ror #10
    1134:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    1138:	6d007373 	stcvs	3, cr7, [r0, #-460]	; 0xfffffe34
    113c:	00306773 	eorseq	r6, r0, r3, ror r7
    1140:	3167736d 	cmncc	r7, sp, ror #6
    1144:	67736d00 	ldrbvs	r6, [r3, -r0, lsl #26]!
    1148:	65730032 	ldrbvs	r0, [r3, #-50]!	; 0xffffffce
    114c:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1150:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1154:	72705f65 	rsbsvc	r5, r0, #404	; 0x194
    1158:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    115c:	616e5f73 	smcvs	58867	; 0xe5f3
    1160:	4100656d 	tstmi	r0, sp, ror #10
    1164:	44504d52 	ldrbmi	r4, [r0], #-3410	; 0xfffff2ae
    1168:	66696e55 			; <UNDEFINED> instruction: 0x66696e55
    116c:	6e495f79 	mcrvs	15, 2, r5, cr9, cr9, {3}
    1170:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
    1174:	6f697463 	svcvs	0x00697463
    1178:	5249006e 	subpl	r0, r9, #110	; 0x6e
    117c:	6b634151 	blvs	18d16c8 <__bss_end__+0x1788680>
    1180:	00515249 	subseq	r5, r1, r9, asr #4
    1184:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1188:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    118c:	5f656d69 	svcpl	0x00656d69
    1190:	5f657270 	svcpl	0x00657270
    1194:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
    1198:	0062635f 	rsbeq	r6, r2, pc, asr r3
    119c:	73736274 	cmnvc	r3, #116, 4	; 0x40000007
    11a0:	4c657300 	stclmi	3, cr7, [r5], #-0
    11a4:	79535f34 	ldmdbvc	r3, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    11a8:	63655273 	cmnvs	r5, #805306375	; 0x30000007
    11ac:	756f0076 	strbvc	r0, [pc, #-118]!	; 113e <errno+0x113a>
    11b0:	61625f74 	smcvs	9716	; 0x25f4
    11b4:	00656764 	rsbeq	r6, r5, r4, ror #14
    11b8:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
    11bc:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    11c0:	6e690072 	mcrvs	0, 3, r0, cr9, cr2, {3}
    11c4:	61697469 	cmnvs	r9, r9, ror #8
    11c8:	68745f6c 	ldmdavs	r4!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    11cc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    11d0:	6263745f 	rsbvs	r7, r3, #1593835520	; 0x5f000000
    11d4:	4c657300 	stclmi	3, cr7, [r5], #-0
    11d8:	79535f34 	ldmdbvc	r3, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    11dc:	62654473 	rsbvs	r4, r5, #1929379840	; 0x73000000
    11e0:	75446775 	strbvc	r6, [r4, #-1909]	; 0xfffff88b
    11e4:	6353706d 	cmpvs	r3, #109	; 0x6d
    11e8:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    11ec:	0072656c 	rsbseq	r6, r2, ip, ror #10
    11f0:	53424354 	movtpl	r4, #9044	; 0x2354
    11f4:	4c547465 	cfldrdmi	mvd7, [r4], {101}	; 0x65
    11f8:	73614253 	cmnvc	r1, #805306373	; 0x30000005
    11fc:	61700065 	cmnvs	r0, r5, rrx
    1200:	5f657372 	svcpl	0x00657372
    1204:	72646870 	rsbvc	r6, r4, #112, 16	; 0x700000
    1208:	4e430073 	mcrmi	0, 2, r0, cr3, cr3, {3}
    120c:	4365646f 	cmnmi	r5, #1862270976	; 0x6f000000
    1210:	0079706f 	rsbseq	r7, r9, pc, rrx
    1214:	4c65536e 	stclmi	3, cr5, [r5], #-440	; 0xfffffe48
    1218:	63724134 	cmnvs	r2, #52, 2
    121c:	766e4968 	strbtvc	r4, [lr], -r8, ror #18
    1220:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    1224:	4c6e6f69 	stclmi	15, cr6, [lr], #-420	; 0xfffffe5c
    1228:	6c656261 	sfmvs	f6, 2, [r5], #-388	; 0xfffffe7c
    122c:	6e550073 	mrcvs	0, 2, r0, cr5, cr3, {3}
    1230:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    1234:	74655264 	strbtvc	r5, [r5], #-612	; 0xfffffd9c
    1238:	00657079 	rsbeq	r7, r5, r9, ror r0
    123c:	69665f5f 	stmdbvs	r6!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1240:	615f696e 	cmpvs	pc, lr, ror #18
    1244:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    1248:	6174735f 	cmnvs	r4, pc, asr r3
    124c:	72007472 	andvc	r7, r0, #1912602624	; 0x72000000
    1250:	6974756f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    1254:	5f00656e 	svcpl	0x0000656e
    1258:	6c65735f 	stclvs	3, cr7, [r5], #-380	; 0xfffffe84
    125c:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
    1260:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1264:	6e75725f 	mrcvs	2, 3, r7, cr5, cr15, {2}
    1268:	7365645f 	cmnvc	r5, #1593835520	; 0x5f000000
    126c:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    1270:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
    1274:	735f5f00 	cmpvc	pc, #0, 30
    1278:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
    127c:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1280:	725f656d 	subsvc	r6, pc, #457179136	; 0x1b400000
    1284:	635f6e75 	cmpvs	pc, #1872	; 0x750
    1288:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    128c:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    1290:	0073726f 	rsbseq	r7, r3, pc, ror #4
    1294:	69657270 	stmdbvs	r5!, {r4, r5, r6, r9, ip, sp, lr}^
    1298:	5f74696e 	svcpl	0x0074696e
    129c:	61727261 	cmnvs	r2, r1, ror #4
    12a0:	656c5f79 	strbvs	r5, [ip, #-3961]!	; 0xfffff087
    12a4:	682f006e 	stmdavs	pc!, {r1, r2, r3, r5, r6}	; <UNPREDICTABLE>
    12a8:	2f656d6f 	svccs	0x00656d6f
    12ac:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    12b0:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    12b4:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    12b8:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    12bc:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    12c0:	6f747574 	svcvs	0x00747574
    12c4:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    12c8:	616d2d73 	smcvs	53971	; 0xd2d3
    12cc:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    12d0:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    12d4:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    12d8:	2f737463 	svccs	0x00737463
    12dc:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    12e0:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    12e4:	2f656d69 	svccs	0x00656d69
    12e8:	2f637273 	svccs	0x00637273
    12ec:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    12f0:	5f00632e 	svcpl	0x0000632e
    12f4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    12f8:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    12fc:	5f796172 	svcpl	0x00796172
    1300:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    1304:	5f5f0074 	svcpl	0x005f0074
    1308:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    130c:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    1310:	655f7961 	ldrbvs	r7, [pc, #-2401]	; 9b7 <errno+0x9b3>
    1314:	5f00646e 	svcpl	0x0000646e
    1318:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    131c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    1320:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    1324:	735f7961 	cmpvc	pc, #1589248	; 0x184000
    1328:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    132c:	705f5f00 	subsvc	r5, pc, r0, lsl #30
    1330:	6e696572 	mcrvs	5, 3, r6, cr9, cr2, {3}
    1334:	615f7469 	cmpvs	pc, r9, ror #8
    1338:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    133c:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    1340:	6e696600 	cdpvs	6, 6, cr6, cr9, cr0, {0}
    1344:	72615f69 	rsbvc	r5, r1, #420	; 0x1a4
    1348:	5f796172 	svcpl	0x00796172
    134c:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1350:	69665f5f 	stmdbvs	r6!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1354:	615f696e 	cmpvs	pc, lr, ror #18
    1358:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    135c:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    1360:	735f5f00 	cmpvc	pc, #0, 30
    1364:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
    1368:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    136c:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 11c0 <errno+0x11bc>
    1370:	65736d65 	ldrbvs	r6, [r3, #-3429]!	; 0xfffff29b
    1374:	682f0074 	stmdavs	pc!, {r2, r4, r5, r6}	; <UNPREDICTABLE>
    1378:	2f656d6f 	svccs	0x00656d6f
    137c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1380:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1384:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    1388:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    138c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1390:	6f747574 	svcvs	0x00747574
    1394:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    1398:	616d2d73 	smcvs	53971	; 0xd2d3
    139c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    13a0:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    13a4:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    13a8:	2f737463 	svccs	0x00737463
    13ac:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    13b0:	746e7572 	strbtvc	r7, [lr], #-1394	; 0xfffffa8e
    13b4:	2f656d69 	svccs	0x00656d69
    13b8:	2f637273 	svccs	0x00637273
    13bc:	736d656d 	cmnvc	sp, #457179136	; 0x1b400000
    13c0:	632e7465 			; <UNDEFINED> instruction: 0x632e7465
    13c4:	6f682f00 	svcvs	0x00682f00
    13c8:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    13cc:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    13d0:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    13d4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    13d8:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    13dc:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    13e0:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    13e4:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    13e8:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    13ec:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    13f0:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    13f4:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    13f8:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    13fc:	72346c65 	eorsvc	r6, r4, #25856	; 0x6500
    1400:	69746e75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    1404:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    1408:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 1248 <errno+0x1244>
    140c:	70636d65 	rsbvc	r6, r3, r5, ror #26
    1410:	00632e79 	rsbeq	r2, r3, r9, ror lr
    1414:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
    1418:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    141c:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1420:	656d5f65 	strbvs	r5, [sp, #-3941]!	; 0xfffff09b
    1424:	7970636d 	ldmdbvc	r0!, {r0, r2, r3, r5, r6, r8, r9, sp, lr}^
    1428:	73797300 	cmnvc	r9, #0, 6
    142c:	006d756e 	rsbeq	r7, sp, lr, ror #10
    1430:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
    1434:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1438:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    143c:	73765f65 	cmnvc	r6, #404	; 0x194
    1440:	61637379 	smcvs	14137	; 0x3739
    1444:	2f006c6c 	svccs	0x00006c6c
    1448:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    144c:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    1450:	6f647679 	svcvs	0x00647679
    1454:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    1458:	2f346c65 	svccs	0x00346c65
    145c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1460:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    1464:	6169726f 	cmnvs	r9, pc, ror #4
    1468:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    146c:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    1470:	2f747365 	svccs	0x00747365
    1474:	6a6f7270 	bvs	1bdde3c <__bss_end__+0x1a94df4>
    1478:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    147c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1480:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
    1484:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1488:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    148c:	7973762f 	ldmdbvc	r3!, {r0, r1, r2, r3, r5, r9, sl, ip, sp, lr}^
    1490:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    1494:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    1498:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 13e4 <errno+0x13e0>
    149c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    14a0:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    14a4:	2f676e6f 	svccs	0x00676e6f
    14a8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    14ac:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    14b0:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    14b4:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    14b8:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    14bc:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    14c0:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    14c4:	6f72702f 	svcvs	0x0072702f
    14c8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    14cc:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    14d0:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    14d4:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    14d8:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
    14dc:	65732f63 	ldrbvs	r2, [r3, #-3939]!	; 0xfffff09d
    14e0:	615f346c 	cmpvs	pc, ip, ror #8
    14e4:	2f686372 	svccs	0x00686372
    14e8:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    14ec:	2f323368 	svccs	0x00323368
    14f0:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
    14f4:	5f696261 	svcpl	0x00696261
    14f8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    14fc:	2e70745f 	mrccs	4, 3, r7, cr0, cr15, {2}
    1500:	5f5f0053 	svcpl	0x005f0053
    1504:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
    1508:	65725f69 	ldrbvs	r5, [r2, #-3945]!	; 0xfffff097
    150c:	745f6461 	ldrbvc	r6, [pc], #-1121	; 1514 <errno+0x1510>
    1510:	00635f70 	rsbeq	r5, r3, r0, ror pc
    1514:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1460 <errno+0x145c>
    1518:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    151c:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    1520:	2f676e6f 	svccs	0x00676e6f
    1524:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1528:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    152c:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    1530:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    1534:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    1538:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    153c:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    1540:	6f72702f 	svcvs	0x0072702f
    1544:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1548:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    154c:	7572346c 	ldrbvc	r3, [r2, #-1132]!	; 0xfffffb94
    1550:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
    1554:	72732f65 	rsbsvc	r2, r3, #404	; 0x194
    1558:	65732f63 	ldrbvs	r2, [r3, #-3939]!	; 0xfffff09d
    155c:	615f346c 	cmpvs	pc, ip, ror #8
    1560:	2f686372 	svccs	0x00686372
    1564:	63726161 	cmnvs	r2, #1073741848	; 0x40000018
    1568:	2f323368 	svccs	0x00323368
    156c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
    1570:	5f696261 	svcpl	0x00696261
    1574:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1578:	5f70745f 	svcpl	0x0070745f
    157c:	00632e63 	rsbeq	r2, r3, r3, ror #28
    1580:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    1584:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1588:	746f6f42 	strbtvc	r6, [pc], #-3906	; 1590 <errno+0x158c>
    158c:	6f666e49 	svcvs	0x00666e49
    1590:	4c657300 	stclmi	3, cr7, [r5], #-0
    1594:	6e495f34 	mcrvs	15, 2, r5, cr9, cr4, {1}
    1598:	6f427469 	svcvs	0x00427469
    159c:	6e49746f 	cdpvs	4, 4, cr7, cr9, cr15, {3}
    15a0:	2f006f66 	svccs	0x00006f66
    15a4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    15a8:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    15ac:	6f647679 	svcvs	0x00647679
    15b0:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    15b4:	2f346c65 	svccs	0x00346c65
    15b8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    15bc:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    15c0:	6169726f 	cmnvs	r9, pc, ror #4
    15c4:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    15c8:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    15cc:	2f747365 	svccs	0x00747365
    15d0:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    15d4:	6c2f6c65 	stcvs	12, cr6, [pc], #-404	; 1448 <errno+0x1444>
    15d8:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    15dc:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    15e0:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    15e4:	5f346c65 	svcpl	0x00346c65
    15e8:	746f6f62 	strbtvc	r6, [pc], #-3938	; 15f0 <errno+0x15ec>
    15ec:	6f666e69 	svcvs	0x00666e69
    15f0:	6c00632e 	stcvs	3, cr6, [r0], {46}	; 0x2e
    15f4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
    15f8:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
    15fc:	6e00656c 	cfsh32vs	mvfx6, mvfx0, #60
    1600:	5f656d61 	svcpl	0x00656d61
    1604:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1608:	72006461 	andvc	r6, r0, #1627389952	; 0x61000000
    160c:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    1610:	5f726574 	svcpl	0x00726574
    1614:	75626564 	strbvc	r6, [r2, #-1380]!	; 0xfffffa9c
    1618:	75705f67 	ldrbvc	r5, [r0, #-3943]!	; 0xfffff099
    161c:	61686374 	smcvs	34356	; 0x8634
    1620:	65730072 	ldrbvs	r0, [r3, #-114]!	; 0xffffff8e
    1624:	445f344c 	ldrbmi	r3, [pc], #-1100	; 162c <errno+0x1628>
    1628:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
    162c:	43747550 	cmnmi	r4, #80, 10	; 0x14000000
    1630:	00726168 	rsbseq	r6, r2, r8, ror #2
    1634:	74616463 	strbtvc	r6, [r1], #-1123	; 0xfffffb9d
    1638:	682f0061 	stmdavs	pc!, {r0, r5, r6}	; <UNPREDICTABLE>
    163c:	2f656d6f 	svccs	0x00656d6f
    1640:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    1644:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    1648:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    164c:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    1650:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    1654:	6f747574 	svcvs	0x00747574
    1658:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    165c:	616d2d73 	smcvs	53971	; 0xd2d3
    1660:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    1664:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    1668:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    166c:	2f737463 	svccs	0x00737463
    1670:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1674:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    1678:	6169726f 	cmnvs	r9, pc, ror #4
    167c:	6c2f736c 	stcvs	3, cr7, [pc], #-432	; 14d4 <errno+0x14d0>
    1680:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    1684:	7574346c 	ldrbvc	r3, [r4, #-1132]!	; 0xfffffb94
    1688:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    168c:	2f736c61 	svccs	0x00736c61
    1690:	2f637273 	svccs	0x00637273
    1694:	736e6f63 	cmnvc	lr, #396	; 0x18c
    1698:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    169c:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
    16a0:	6b00632e 	blvs	1a360 <get_interrupts_prop>
    16a4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    16a8:	75705f6c 	ldrbvc	r5, [r0, #-3948]!	; 0xfffff094
    16ac:	61686374 	smcvs	34356	; 0x8634
    16b0:	72775f72 	rsbsvc	r5, r7, #456	; 0x1c8
    16b4:	00657469 	rsbeq	r7, r5, r9, ror #8
    16b8:	6d696c72 	stclvs	12, cr6, [r9, #-456]!	; 0xfffffe38
    16bc:	6300745f 	movwvs	r7, #1119	; 0x45f
    16c0:	5f6f6970 	svcpl	0x006f6970
    16c4:	5f746567 	svcpl	0x00746567
    16c8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    16cc:	706d695f 	rsbvc	r6, sp, pc, asr r9
    16d0:	6572006c 	ldrbvs	r0, [r2, #-108]!	; 0xffffff94
    16d4:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
    16d8:	79730074 	ldmdbvc	r3!, {r2, r4, r5, r6}^
    16dc:	6f695f73 	svcvs	0x00695f73
    16e0:	006c7463 	rsbeq	r7, ip, r3, ror #8
    16e4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    16e8:	7561665f 	strbvc	r6, [r1, #-1631]!	; 0xfffff9a1
    16ec:	696c746c 	stmdbvs	ip!, {r2, r3, r5, r6, sl, ip, sp, lr}^
    16f0:	73007473 	movwvc	r7, #1139	; 0x473
    16f4:	5f5f7379 	svcpl	0x005f7379
    16f8:	65736c6c 	ldrbvs	r6, [r3, #-3180]!	; 0xfffff394
    16fc:	69006b65 	stmdbvs	r0, {r0, r2, r5, r6, r8, r9, fp, sp, lr}
    1700:	6e63766f 	cdpvs	6, 6, cr7, cr3, cr15, {3}
    1704:	79730074 	ldmdbvc	r3!, {r2, r4, r5, r6}^
    1708:	63615f73 	cmnvs	r1, #460	; 0x1cc
    170c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1710:	65687700 	strbvs	r7, [r8, #-1792]!	; 0xfffff900
    1714:	0065636e 	rsbeq	r6, r5, lr, ror #6
    1718:	6f74706f 	svcvs	0x0074706f
    171c:	67007470 	smlsdxvs	r0, r0, r4, r7
    1720:	5f776f72 	svcpl	0x00776f72
    1724:	00736466 	rsbseq	r6, r3, r6, ror #8
    1728:	5f737973 	svcpl	0x00737973
    172c:	736f6c63 	cmnvc	pc, #25344	; 0x6300
    1730:	72650065 	rsbvc	r0, r5, #101	; 0x65
    1734:	006f6e72 	rsbeq	r6, pc, r2, ror lr	; <UNPREDICTABLE>
    1738:	6c616572 	cfstr64vs	mvdx6, [r1], #-456	; 0xfffffe38
    173c:	61746164 	cmnvs	r4, r4, ror #2
    1740:	65726600 	ldrbvs	r6, [r2, #-1536]!	; 0xfffffa00
    1744:	64665f65 	strbtvs	r5, [r6], #-3941	; 0xfffff09b
    1748:	6261745f 	rsbvs	r7, r1, #1593835520	; 0x5f000000
    174c:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    1750:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    1754:	73797300 	cmnvc	r9, #0, 6
    1758:	616c705f 	qdsubvs	r7, pc, ip	; <UNPREDICTABLE>
    175c:	726f6674 	rsbvc	r6, pc, #116, 12	; 0x7400000
    1760:	72775f6d 	rsbsvc	r5, r7, #436	; 0x1b4
    1764:	00657469 	rsbeq	r7, r5, r9, ror #8
    1768:	5f746567 	svcpl	0x00746567
    176c:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
    1770:	0064665f 	rsbeq	r6, r4, pc, asr r6
    1774:	6f697063 	svcvs	0x00697063
    1778:	6d79735f 	ldclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
    177c:	006c6f62 	rsbeq	r6, ip, r2, ror #30
    1780:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
    1784:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    1788:	6f697469 	svcvs	0x00697469
    178c:	706f006e 	rsbvc	r0, pc, lr, rrx
    1790:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    1794:	6c6c6100 	stfvse	f6, [ip], #-0
    1798:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    179c:	69665f65 	stmdbvs	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    17a0:	745f656c 	ldrbvc	r6, [pc], #-1388	; 17a8 <errno+0x17a4>
    17a4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    17a8:	73797300 	cmnvc	r9, #0, 6
    17ac:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    17b0:	72006574 	andvc	r6, r0, #116, 10	; 0x1d000000
    17b4:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
    17b8:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
    17bc:	7300656c 	movwvc	r6, #1388	; 0x56c
    17c0:	725f7379 	subsvc	r7, pc, #-469762047	; 0xe4000001
    17c4:	76646165 	strbtvc	r6, [r4], -r5, ror #2
    17c8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    17cc:	775f6f69 	ldrbvc	r6, [pc, -r9, ror #30]
    17d0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    17d4:	6c617600 	stclvs	6, cr7, [r1], #-0
    17d8:	665f6469 	ldrbvs	r6, [pc], -r9, ror #8
    17dc:	656e0064 	strbvs	r0, [lr, #-100]!	; 0xffffff9c
    17e0:	696c5f77 	stmdbvs	ip!, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    17e4:	0074696d 	rsbseq	r6, r4, sp, ror #18
    17e8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    17ec:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
    17f0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    17f4:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
    17f8:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    17fc:	00746573 	rsbseq	r6, r4, r3, ror r5
    1800:	6f736572 	svcvs	0x00736572
    1804:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
    1808:	73756d00 	cmnvc	r5, #0, 26
    180c:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    1810:	64665f73 	strbtvs	r5, [r6], #-3955	; 0xfffff08d
    1814:	6c696600 	stclvs	6, cr6, [r9], #-0
    1818:	00736564 	rsbseq	r6, r3, r4, ror #10
    181c:	5f737973 	svcpl	0x00737973
    1820:	6e65706f 	cdpvs	0, 6, cr7, cr5, cr15, {3}
    1824:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
    1828:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    182c:	64665f65 	strbtvs	r5, [r6], #-3941	; 0xfffff09b
    1830:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
    1834:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    1838:	64665f65 	strbtvs	r5, [r6], #-3941	; 0xfffff09b
    183c:	6261745f 	rsbvs	r7, r1, #1593835520	; 0x5f000000
    1840:	6300656c 	movwvs	r6, #1388	; 0x56c
    1844:	5f6f6970 	svcpl	0x006f6970
    1848:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    184c:	5f657669 	svcpl	0x00657669
    1850:	626d7973 	rsbvs	r7, sp, #1884160	; 0x1cc000
    1854:	6d006c6f 	stcvs	12, cr6, [r0, #-444]	; 0xfffffe44
    1858:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    185c:	5f737973 	svcpl	0x00737973
    1860:	6f697063 	svcvs	0x00697063
    1864:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    1868:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
    186c:	6e665f65 	cdpvs	15, 6, cr5, cr6, cr5, {3}
    1870:	6d00745f 	cfstrsvs	mvf7, [r0, #-380]	; 0xfffffe84
    1874:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    1878:	5f737973 	svcpl	0x00737973
    187c:	74736e69 	ldrbtvc	r6, [r3], #-3689	; 0xfffff197
    1880:	5f6c6c61 	svcpl	0x006c6c61
    1884:	6f697063 	svcvs	0x00697063
    1888:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    188c:	61667265 	cmnvs	r6, r5, ror #4
    1890:	70006563 	andvc	r6, r0, r3, ror #10
    1894:	6e687461 	cdpvs	4, 6, cr7, cr8, cr1, {3}
    1898:	00656d61 	rsbeq	r6, r5, r1, ror #26
    189c:	5f667a5f 	svcpl	0x00667a5f
    18a0:	5f676f6c 	svcpl	0x00676f6c
    18a4:	7074756f 	rsbsvc	r7, r4, pc, ror #10
    18a8:	6c5f7475 	cfldrdvs	mvd7, [pc], {117}	; 0x75
    18ac:	63006c76 	movwvs	r6, #3190	; 0xc76
    18b0:	5f6f6970 	svcpl	0x006f6970
    18b4:	73006466 	movwvc	r6, #1126	; 0x466
    18b8:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    18bc:	6900745f 	stmdbvs	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    18c0:	625f766f 	subsvs	r7, pc, #116391936	; 0x6f00000
    18c4:	00657361 	rsbeq	r7, r5, r1, ror #6
    18c8:	5f737973 	svcpl	0x00737973
    18cc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    18d0:	73797300 	cmnvc	r9, #0, 6
    18d4:	65706f5f 	ldrbvs	r6, [r0, #-3935]!	; 0xfffff0a1
    18d8:	0074616e 	rsbseq	r6, r4, lr, ror #2
    18dc:	6d696c72 	stclvs	12, cr6, [r9, #-456]!	; 0xfffffe38
    18e0:	7275635f 	rsbsvc	r6, r5, #2080374785	; 0x7c000001
    18e4:	64697000 	strbtvs	r7, [r9], #-0
    18e8:	5f00745f 	svcpl	0x0000745f
    18ec:	4e55465f 	mrcmi	6, 2, r4, cr5, cr15, {2}
    18f0:	4f495443 	svcmi	0x00495443
    18f4:	005f5f4e 	subseq	r5, pc, lr, asr #30
    18f8:	5f766f69 	svcpl	0x00766f69
    18fc:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1900:	6974706f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr}^
    1904:	5f00646e 	svcpl	0x0000646e
    1908:	0070615f 	rsbseq	r6, r0, pc, asr r1
    190c:	5f77656e 	svcpl	0x0077656e
    1910:	5f6d756e 	svcpl	0x006d756e
    1914:	00736466 	rsbseq	r6, r3, r6, ror #8
    1918:	5f646c6f 	svcpl	0x00646c6f
    191c:	696d696c 	stmdbvs	sp!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    1920:	69660074 	stmdbvs	r6!, {r2, r4, r5, r6}^
    1924:	7974656c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1928:	6f006570 	svcvs	0x00006570
    192c:	72617470 	rsbvc	r7, r1, #112, 8	; 0x70000000
    1930:	70630067 	rsbvc	r0, r3, r7, rrx
    1934:	665f6f69 	ldrbvs	r6, [pc], -r9, ror #30
    1938:	5f656c69 	svcpl	0x00656c69
    193c:	61746164 	cmnvs	r4, r4, ror #2
    1940:	6f682f00 	svcvs	0x00682f00
    1944:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    1948:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    194c:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    1950:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1954:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    1958:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    195c:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    1960:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    1964:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    1968:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    196c:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    1970:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    1974:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    1978:	5f344c65 	svcpl	0x00344c65
    197c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    1980:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1984:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1988:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    198c:	73797363 	cmnvc	r9, #-1946157055	; 0x8c000001
    1990:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1994:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    1998:	2e6f695f 			; <UNDEFINED> instruction: 0x2e6f695f
    199c:	64660063 	strbtvs	r0, [r6], #-99	; 0xffffff9d
    19a0:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    19a4:	6c720061 	ldclvs	0, cr0, [r2], #-388	; 0xfffffe7c
    19a8:	6d5f6d69 	ldclvs	13, cr6, [pc, #-420]	; 180c <errno+0x1808>
    19ac:	63007861 	movwvs	r7, #2145	; 0x861
    19b0:	5f6f6970 	svcpl	0x006f6970
    19b4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
    19b8:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
    19bc:	00745f61 	rsbseq	r5, r4, r1, ror #30
    19c0:	5f77656e 	svcpl	0x0077656e
    19c4:	745f6466 	ldrbvc	r6, [pc], #-1126	; 19cc <errno+0x19c8>
    19c8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    19cc:	696c7200 	stmdbvs	ip!, {r9, ip, sp, lr}^
    19d0:	0074696d 	rsbseq	r6, r4, sp, ror #18
    19d4:	66726964 	ldrbtvs	r6, [r2], -r4, ror #18
    19d8:	6c610064 	stclvs	0, cr0, [r1], #-400	; 0xfffffe70
    19dc:	61636f6c 	cmnvs	r3, ip, ror #30
    19e0:	665f6574 			; <UNDEFINED> instruction: 0x665f6574
    19e4:	666f0064 	strbtvs	r0, [pc], -r4, rrx
    19e8:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    19ec:	776f6c5f 			; <UNDEFINED> instruction: 0x776f6c5f
    19f0:	73797300 	cmnvc	r9, #0, 6
    19f4:	6c72705f 	ldclvs	0, cr7, [r2], #-380	; 0xfffffe84
    19f8:	74696d69 	strbtvc	r6, [r9], #-3433	; 0xfffff297
    19fc:	63003436 	movwvs	r3, #1078	; 0x436
    1a00:	5f6f6970 	svcpl	0x006f6970
    1a04:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    1a08:	5f657669 	svcpl	0x00657669
    1a0c:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1a10:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    1a14:	685f7465 	ldmdavs	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1a18:	00686769 	rsbeq	r6, r8, r9, ror #14
    1a1c:	61765f5f 	cmnvs	r6, pc, asr pc
    1a20:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    1a24:	79730074 	ldmdbvc	r3!, {r2, r4, r5, r6}^
    1a28:	706f5f73 	rsbvc	r5, pc, r3, ror pc	; <UNPREDICTABLE>
    1a2c:	695f6e65 	ldmdbvs	pc, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    1a30:	006c706d 	rsbeq	r7, ip, sp, rrx
    1a34:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    1a38:	64665f63 	strbtvs	r5, [r6], #-3939	; 0xfffff09d
    1a3c:	6c657300 	stclvs	3, cr7, [r5], #-0
    1a40:	73756d34 	cmnvc	r5, #52, 26	; 0xd00
    1a44:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    1a48:	65725f73 	ldrbvs	r5, [r2, #-3955]!	; 0xfffff08d
    1a4c:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1a50:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    1a54:	6f696474 	svcvs	0x00696474
    1a58:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    1a5c:	665f6574 			; <UNDEFINED> instruction: 0x665f6574
    1a60:	6573006e 	ldrbvs	r0, [r3, #-110]!	; 0xffffff92
    1a64:	705f346c 	subsvc	r3, pc, ip, ror #8
    1a68:	5f656761 	svcpl	0x00656761
    1a6c:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    1a70:	65670073 	strbvs	r0, [r7, #-115]!	; 0xffffff8d
    1a74:	64665f74 	strbtvs	r5, [r6], #-3956	; 0xfffff08c
    1a78:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    1a7c:	00746375 	rsbseq	r6, r4, r5, ror r3
    1a80:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    1a84:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
    1a88:	6e665f66 	cdpvs	15, 6, cr5, cr6, cr6, {3}
    1a8c:	73756d00 	cmnvc	r5, #0, 26
    1a90:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    1a94:	64665f73 	strbtvs	r5, [r6], #-3955	; 0xfffff08d
    1a98:	6f00745f 	svcvs	0x0000745f
    1a9c:	745f6666 	ldrbvc	r6, [pc], #-1638	; 1aa4 <errno+0x1aa0>
    1aa0:	646f6d00 	strbtvs	r6, [pc], #-3328	; 1aa8 <errno+0x1aa4>
    1aa4:	00745f65 	rsbseq	r5, r4, r5, ror #30
    1aa8:	65766f69 	ldrbvs	r6, [r6, #-3945]!	; 0xfffff097
    1aac:	75630063 	strbvc	r0, [r3, #-99]!	; 0xffffff9d
    1ab0:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1ab4:	5f5f0074 	svcpl	0x005f0074
    1ab8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    1abc:	63005f5f 	movwvs	r5, #3935	; 0xf5f
    1ac0:	5f6f6970 	svcpl	0x006f6970
    1ac4:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1ac8:	5f776f68 	svcpl	0x00776f68
    1acc:	6863756d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    1ad0:	73797300 	cmnvc	r9, #0, 6
    1ad4:	65736c5f 	ldrbvs	r6, [r3, #-3167]!	; 0xfffff3a1
    1ad8:	73006b65 	movwvc	r6, #2917	; 0xb65
    1adc:	5f344c65 	svcpl	0x00344c65
    1ae0:	6f766552 	svcvs	0x00766552
    1ae4:	6946656b 	stmdbvs	r6, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
    1ae8:	00747372 	rsbseq	r7, r4, r2, ror r3
    1aec:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
    1af0:	6170735f 	cmnvs	r0, pc, asr r3
    1af4:	5f657372 	svcpl	0x00657372
    1af8:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    1afc:	006c6c61 	rsbeq	r6, ip, r1, ror #24
    1b00:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    1b04:	6e61525f 	mcrvs	2, 3, r5, cr1, cr15, {2}
    1b08:	72456567 	subvc	r6, r5, #432013312	; 0x19c00000
    1b0c:	00726f72 	rsbseq	r6, r2, r2, ror pc
    1b10:	72747865 	rsbsvc	r7, r4, #6619136	; 0x650000
    1b14:	70614361 	rsbvc	r4, r1, r1, ror #6
    1b18:	65730073 	ldrbvs	r0, [r3, #-115]!	; 0xffffff8d
    1b1c:	545f344c 	ldrbpl	r3, [pc], #-1100	; 1b24 <errno+0x1b20>
    1b20:	73004243 	movwvc	r4, #579	; 0x243
    1b24:	5f344c65 	svcpl	0x00344c65
    1b28:	45746f4e 	ldrbmi	r6, [r4, #-3918]!	; 0xfffff0b2
    1b2c:	67756f6e 	ldrbvs	r6, [r5, -lr, ror #30]!
    1b30:	6d654d68 	stclvs	13, cr4, [r5, #-416]!	; 0xfffffe60
    1b34:	0079726f 	rsbseq	r7, r9, pc, ror #4
    1b38:	79735f5f 	ldmdbvc	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    1b3c:	666e6973 			; <UNDEFINED> instruction: 0x666e6973
    1b40:	6f62006f 	svcvs	0x0062006f
    1b44:	735f746f 	cmpvc	pc, #1862270976	; 0x6f000000
    1b48:	745f7465 	ldrbvc	r7, [pc], #-1125	; 1b50 <errno+0x1b4c>
    1b4c:	615f6469 	cmpvs	pc, r9, ror #8
    1b50:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    1b54:	685f7373 	ldmdavs	pc, {r0, r1, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    1b58:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
    1b5c:	0064656e 	rsbeq	r6, r4, lr, ror #10
    1b60:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    1b64:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1b68:	7300524d 	movwvc	r5, #589	; 0x24d
    1b6c:	73726170 	cmnvc	r2, #112, 2
    1b70:	79735f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b74:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    1b78:	61745f6c 	cmnvs	r4, ip, ror #30
    1b7c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1b80:	746f6f62 	strbtvc	r6, [pc], #-3938	; 1b88 <errno+0x1b84>
    1b84:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
    1b88:	6469745f 	strbtvs	r7, [r9], #-1119	; 0xfffffba1
    1b8c:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    1b90:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1b94:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
    1b98:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1b9c:	73765f74 	cmnvc	r6, #116, 30	; 0x1d0
    1ba0:	61637379 	smcvs	14137	; 0x3739
    1ba4:	6d006c6c 	stcvs	12, cr6, [r0, #-432]	; 0xfffffe50
    1ba8:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    1bac:	5f737973 	svcpl	0x00737973
    1bb0:	5f746567 	svcpl	0x00746567
    1bb4:	746f6f62 	strbtvc	r6, [pc], #-3938	; 1bbc <errno+0x1bb8>
    1bb8:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
    1bbc:	6469745f 	strbtvs	r7, [r9], #-1119	; 0xfffffba1
    1bc0:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    1bc4:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1bc8:	6f425f00 	svcvs	0x00425f00
    1bcc:	73006c6f 	movwvc	r6, #3183	; 0xc6f
    1bd0:	5f344c65 	svcpl	0x00344c65
    1bd4:	67696c41 	strbvs	r6, [r9, -r1, asr #24]!
    1bd8:	6e656d6e 	cdpvs	13, 6, cr6, cr5, cr14, {3}
    1bdc:	72724574 	rsbsvc	r4, r2, #116, 10	; 0x1d000000
    1be0:	6f00726f 	svcvs	0x0000726f
    1be4:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
    1be8:	61745f74 	cmnvs	r4, r4, ror pc
    1bec:	756d0067 	strbvc	r0, [sp, #-103]!	; 0xffffff99
    1bf0:	73636c73 	cmnvc	r3, #29440	; 0x7300
    1bf4:	675f7379 			; <UNDEFINED> instruction: 0x675f7379
    1bf8:	625f7465 	subsvs	r7, pc, #1694498816	; 0x65000000
    1bfc:	5f746f6f 	svcpl	0x00746f6f
    1c00:	5f746573 	svcpl	0x00746573
    1c04:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1c08:	615f6461 	cmpvs	pc, r1, ror #8
    1c0c:	00616572 	rsbeq	r6, r1, r2, ror r5
    1c10:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    1c14:	73654d5f 	cmnvc	r5, #6080	; 0x17c0
    1c18:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    1c1c:	6f666e49 	svcvs	0x00666e49
    1c20:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
    1c24:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
    1c28:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    1c2c:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    1c30:	61707300 	cmnvs	r0, r0, lsl #6
    1c34:	5f657372 	svcpl	0x00657372
    1c38:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    1c3c:	5f6c6c61 	svcpl	0x006c6c61
    1c40:	735f0074 	cmpvc	pc, #116	; 0x74
    1c44:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    1c48:	6d006563 	cfstr32vs	mvfx6, [r0, #-396]	; 0xfffffe74
    1c4c:	6e496773 	mcrvs	7, 2, r6, cr9, cr3, {3}
    1c50:	73006f66 	movwvc	r6, #3942	; 0xf66
    1c54:	5f344c65 	svcpl	0x00344c65
    1c58:	656c6c49 	strbvs	r6, [ip, #-3145]!	; 0xfffff3b7
    1c5c:	4f6c6167 	svcmi	0x006c6167
    1c60:	61726570 	cmnvs	r2, r0, ror r5
    1c64:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1c68:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
    1c6c:	79735f74 	ldmdbvc	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c70:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    1c74:	61745f6c 	cmnvs	r4, ip, ror #30
    1c78:	00656c62 	rsbeq	r6, r5, r2, ror #24
    1c7c:	73765f5f 	cmnvc	r6, #380	; 0x17c
    1c80:	61637379 	smcvs	14137	; 0x3739
    1c84:	705f6c6c 	subsvc	r6, pc, ip, ror #24
    1c88:	6d007274 	sfmvs	f7, 4, [r0, #-464]	; 0xfffffe30
    1c8c:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    1c90:	5f737973 	svcpl	0x00737973
    1c94:	74736e69 	ldrbtvc	r6, [r3], #-3689	; 0xfffff197
    1c98:	5f6c6c61 	svcpl	0x006c6c61
    1c9c:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    1ca0:	006c6c61 	rsbeq	r6, ip, r1, ror #24
    1ca4:	746f6f62 	strbtvc	r6, [pc], #-3938	; 1cac <errno+0x1ca8>
    1ca8:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
    1cac:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1cb0:	5f646165 	svcpl	0x00646165
    1cb4:	61657261 	cmnvs	r5, r1, ror #4
    1cb8:	7061685f 	rsbvc	r6, r1, pc, asr r8
    1cbc:	656e6570 	strbvs	r6, [lr, #-1392]!	; 0xfffffa90
    1cc0:	65730064 	ldrbvs	r0, [r3, #-100]!	; 0xffffff9c
    1cc4:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
    1cc8:	576c6c61 	strbpl	r6, [ip, -r1, ror #24]!
    1ccc:	4d687469 	cfstrdmi	mvd7, [r8, #-420]!	; 0xfffffe5c
    1cd0:	73007352 	movwvc	r7, #850	; 0x352
    1cd4:	5f344c65 	svcpl	0x00344c65
    1cd8:	456d754e 	strbmi	r7, [sp, #-1358]!	; 0xfffffab2
    1cdc:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1ce0:	65730073 	ldrbvs	r0, [r3, #-115]!	; 0xffffff8d
    1ce4:	4e5f344c 	cdpmi	4, 5, cr3, cr15, cr12, {2}
    1ce8:	7272456f 	rsbsvc	r4, r2, #465567744	; 0x1bc00000
    1cec:	7300726f 	movwvc	r7, #623	; 0x26f
    1cf0:	5f344c65 	svcpl	0x00344c65
    1cf4:	6c696146 	stfvse	f6, [r9], #-280	; 0xfffffee8
    1cf8:	6f4c6465 	svcvs	0x004c6465
    1cfc:	70756b6f 	rsbsvc	r6, r5, pc, ror #22
    1d00:	4c657300 	stclmi	3, cr7, [r5], #-0
    1d04:	43545f34 	cmpmi	r4, #52, 30	; 0xd0
    1d08:	65535f42 	ldrbvs	r5, [r3, #-3906]	; 0xfffff0be
    1d0c:	534c5474 	movtpl	r5, #50292	; 0xc474
    1d10:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    1d14:	4c657300 	stclmi	3, cr7, [r5], #-0
    1d18:	654d5f34 	strbvs	r5, [sp, #-3892]	; 0xfffff0cc
    1d1c:	67617373 			; <UNDEFINED> instruction: 0x67617373
    1d20:	666e4965 	strbtvs	r4, [lr], -r5, ror #18
    1d24:	65675f6f 	strbvs	r5, [r7, #-3951]!	; 0xfffff091
    1d28:	656c5f74 	strbvs	r5, [ip, #-3956]!	; 0xfffff08c
    1d2c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    1d30:	6f6f6200 	svcvs	0x006f6200
    1d34:	79735f74 	ldmdbvc	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d38:	72775f73 	rsbsvc	r5, r7, #460	; 0x1cc
    1d3c:	76657469 	strbtvc	r7, [r5], -r9, ror #8
    1d40:	62637400 	rsbvs	r7, r3, #0, 8
    1d44:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    1d48:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1d4c:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    1d50:	73797363 	cmnvc	r9, #-1946157055	; 0x8c000001
    1d54:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    1d58:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    1d5c:	6200745f 	andvs	r7, r0, #1593835520	; 0x5f000000
    1d60:	5f746f6f 	svcpl	0x00746f6f
    1d64:	5f746573 	svcpl	0x00746573
    1d68:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1d6c:	615f6461 	cmpvs	pc, r1, ror #8
    1d70:	5f616572 	svcpl	0x00616572
    1d74:	00677261 	rsbeq	r7, r7, r1, ror #4
    1d78:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    1d7c:	7572545f 	ldrbvc	r5, [r2, #-1119]!	; 0xfffffba1
    1d80:	7461636e 	strbtvc	r6, [r1], #-878	; 0xfffffc92
    1d84:	654d6465 	strbvs	r6, [sp, #-1125]	; 0xfffffb9b
    1d88:	67617373 			; <UNDEFINED> instruction: 0x67617373
    1d8c:	61630065 	cmnvs	r3, r5, rrx
    1d90:	6e557370 	mrcvs	3, 2, r7, cr5, cr0, {3}
    1d94:	70617277 	rsbvc	r7, r1, r7, ror r2
    1d98:	00646570 	rsbeq	r6, r4, r0, ror r5
    1d9c:	75626564 	strbvc	r6, [r2, #-1380]!	; 0xfffffa9c
    1da0:	72655f67 	rsbvc	r5, r5, #412	; 0x19c
    1da4:	00726f72 	rsbseq	r6, r2, r2, ror pc
    1da8:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    1dac:	766e495f 			; <UNDEFINED> instruction: 0x766e495f
    1db0:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
    1db4:	61706143 	cmnvs	r0, r3, asr #2
    1db8:	696c6962 	stmdbvs	ip!, {r1, r5, r6, r8, fp, sp, lr}^
    1dbc:	73007974 	movwvc	r7, #2420	; 0x974
    1dc0:	5f344c65 	svcpl	0x00344c65
    1dc4:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    1dc8:	49656761 	stmdbmi	r5!, {r0, r5, r6, r8, r9, sl, sp, lr}^
    1dcc:	5f6f666e 	svcpl	0x006f666e
    1dd0:	5f746567 	svcpl	0x00746567
    1dd4:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
    1dd8:	7075006c 	rsbsvc	r0, r5, ip, rrx
    1ddc:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    1de0:	6370695f 	cmnvs	r0, #1556480	; 0x17c000
    1de4:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
    1de8:	00726566 	rsbseq	r6, r2, r6, ror #10
    1dec:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    1df0:	766e495f 			; <UNDEFINED> instruction: 0x766e495f
    1df4:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
    1df8:	75677241 	strbvc	r7, [r7, #-577]!	; 0xfffffdbf
    1dfc:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    1e00:	73756d00 	cmnvc	r5, #0, 26
    1e04:	7973636c 	ldmdbvc	r3!, {r2, r3, r5, r6, r8, r9, sp, lr}^
    1e08:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
    1e0c:	6d5f7469 	cfldrdvs	mvd7, [pc, #-420]	; 1c70 <errno+0x1c6c>
    1e10:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    1e14:	6c657300 	stclvs	3, cr7, [r5], #-0
    1e18:	73765f34 	cmnvc	r6, #52, 30	; 0xd0
    1e1c:	61637379 	smcvs	14137	; 0x3739
    1e20:	2f006c6c 	svccs	0x00006c6c
    1e24:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    1e28:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    1e2c:	6f647679 	svcvs	0x00647679
    1e30:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    1e34:	2f346c65 	svccs	0x00346c65
    1e38:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1e3c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    1e40:	6169726f 	cmnvs	r9, pc, ror #4
    1e44:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    1e48:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    1e4c:	2f747365 	svccs	0x00747365
    1e50:	6a6f7270 	bvs	1bde818 <__bss_end__+0x1a957d0>
    1e54:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    1e58:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    1e5c:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    1e60:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 1ce0 <errno+0x1cdc>
    1e64:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    1e68:	756d346c 	strbvc	r3, [sp, #-1132]!	; 0xfffffb94
    1e6c:	73636c73 	cmnvc	r3, #29440	; 0x7300
    1e70:	732f7379 			; <UNDEFINED> instruction: 0x732f7379
    1e74:	762f6372 			; <UNDEFINED> instruction: 0x762f6372
    1e78:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
    1e7c:	2e6c6c61 	cdpcs	12, 6, cr6, cr12, cr1, {3}
    1e80:	65730063 	ldrbvs	r0, [r3, #-99]!	; 0xffffff9d
    1e84:	445f344c 	ldrbmi	r3, [pc], #-1100	; 1e8c <errno+0x1e88>
    1e88:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    1e8c:	72694665 	rsbvc	r4, r9, #105906176	; 0x6500000
    1e90:	73007473 	movwvc	r7, #1139	; 0x473
    1e94:	5f344c65 	svcpl	0x00344c65
    1e98:	6f727245 	svcvs	0x00727245
    1e9c:	79730072 	ldmdbvc	r3!, {r1, r4, r5, r6}^
    1ea0:	65675f73 	strbvs	r5, [r7, #-3955]!	; 0xfffff08d
    1ea4:	64697474 	strbtvs	r7, [r9], #-1140	; 0xfffffb8c
    1ea8:	73797300 	cmnvc	r9, #0, 6
    1eac:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
    1eb0:	79730074 	ldmdbvc	r3!, {r2, r4, r5, r6}^
    1eb4:	74725f73 	ldrbtvc	r5, [r2], #-3955	; 0xfffff08d
    1eb8:	6769735f 			; <UNDEFINED> instruction: 0x6769735f
    1ebc:	636f7270 	cmnvs	pc, #112, 4
    1ec0:	6b73616d 	blvs	1cda47c <__bss_end__+0x1b91434>
    1ec4:	6f682f00 	svcvs	0x00682f00
    1ec8:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    1ecc:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    1ed0:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    1ed4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    1ed8:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    1edc:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    1ee0:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    1ee4:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    1ee8:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    1eec:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    1ef0:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    1ef4:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    1ef8:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    1efc:	5f344c65 	svcpl	0x00344c65
    1f00:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    1f04:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1f08:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    1f0c:	6c73756d 	cfldr64vs	mvdx7, [r3], #-436	; 0xfffffe4c
    1f10:	73797363 	cmnvc	r9, #-1946157055	; 0x8c000001
    1f14:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1f18:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    1f1c:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
    1f20:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1f24:	5f737973 	svcpl	0x00737973
    1f28:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
    1f2c:	6f72675f 	svcvs	0x0072675f
    1f30:	73007075 	movwvc	r7, #117	; 0x75
    1f34:	745f7379 	ldrbvc	r7, [pc], #-889	; 1f3c <errno+0x1f38>
    1f38:	6c696b67 			; <UNDEFINED> instruction: 0x6c696b67
    1f3c:	7973006c 	ldmdbvc	r3!, {r2, r3, r5, r6}^
    1f40:	6b745f73 	blvs	1d19d14 <__bss_end__+0x1bd0ccc>
    1f44:	006c6c69 	rsbeq	r6, ip, r9, ror #24
    1f48:	5f737973 	svcpl	0x00737973
    1f4c:	70746567 	rsbsvc	r6, r4, r7, ror #10
    1f50:	73006469 	movwvc	r6, #1129	; 0x469
    1f54:	5f346c65 	svcpl	0x00346c65
    1f58:	726f6261 	rsbvc	r6, pc, #268435462	; 0x10000006
    1f5c:	4f4b0074 	svcmi	0x004b0074
    1f60:	43454a42 	movtmi	r4, #23106	; 0x5a42
    1f64:	52415f54 	subpl	r5, r1, #84, 30	; 0x150
    1f68:	4e5f4843 	cdpmi	8, 5, cr4, cr15, cr3, {2}
    1f6c:	545f4d55 	ldrbpl	r4, [pc], #-3413	; 1f74 <errno+0x1f70>
    1f70:	53455059 	movtpl	r5, #20569	; 0x5059
    1f74:	4d554e00 	ldclmi	14, cr4, [r5, #-0]
    1f78:	424f4b5f 	submi	r4, pc, #97280	; 0x17c00
    1f7c:	5443454a 	strbpl	r4, [r3], #-1354	; 0xfffffab6
    1f80:	5059545f 	subspl	r5, r9, pc, asr r4
    1f84:	4b005345 	blmi	16ca0 <simple_get_IRQ_handler+0x60>
    1f88:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
    1f8c:	535f5443 	cmppl	pc, #1124073472	; 0x43000000
    1f90:	44454843 	strbmi	r4, [r5], #-2115	; 0xfffff7bd
    1f94:	4e4f435f 	mcrmi	3, 2, r4, cr15, cr15, {2}
    1f98:	54584554 	ldrbpl	r4, [r8], #-1364	; 0xfffffaac
    1f9c:	6f727000 	svcvs	0x00727000
    1fa0:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1fa4:	766e695f 			; <UNDEFINED> instruction: 0x766e695f
    1fa8:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    1fac:	5f6e6f69 	svcpl	0x006e6f69
    1fb0:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
    1fb4:	616e5f74 	smcvs	58868	; 0xe5f4
    1fb8:	7300656d 	movwvc	r6, #1389	; 0x56d
    1fbc:	625f7379 	subsvs	r7, pc, #-469762047	; 0xe4000001
    1fc0:	4b006b72 	blmi	1cd90 <fdt_header_size_+0x2c>
    1fc4:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
    1fc8:	415f5443 	cmpmi	pc, r3, asr #8
    1fcc:	434e5953 	movtmi	r5, #59731	; 0xe953
    1fd0:	444e455f 	strbmi	r4, [lr], #-1375	; 0xfffffaa1
    1fd4:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
    1fd8:	6f6d0054 	svcvs	0x006d0054
    1fdc:	6f636572 	svcvs	0x00636572
    1fe0:	745f6572 	ldrbvc	r6, [pc], #-1394	; 1fe8 <errno+0x1fe4>
    1fe4:	7300706f 	movwvc	r7, #111	; 0x6f
    1fe8:	6d5f7379 	ldclvs	3, cr7, [pc, #-484]	; 1e0c <errno+0x1e08>
    1fec:	69766461 	ldmdbvs	r6!, {r0, r5, r6, sl, sp, lr}^
    1ff0:	73006573 	movwvc	r6, #1395	; 0x573
    1ff4:	6d5f7379 	ldclvs	3, cr7, [pc, #-484]	; 1e18 <errno+0x1e14>
    1ff8:	5f70616d 	svcpl	0x0070616d
    1ffc:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    2000:	626f6b00 	rsbvs	r6, pc, #0, 22
    2004:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    2008:	7300745f 	movwvc	r7, #1119	; 0x45f
    200c:	6d5f7379 	ldclvs	3, cr7, [pc, #-484]	; 1e30 <errno+0x1e2c>
    2010:	616d6572 	smcvs	54866	; 0xd652
    2014:	72700070 	rsbsvc	r0, r0, #112	; 0x70
    2018:	6172676f 	cmnvs	r2, pc, ror #14
    201c:	6e695f6d 	cdpvs	15, 6, cr5, cr9, cr13, {3}
    2020:	61636f76 	smcvs	14070	; 0x36f6
    2024:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2028:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    202c:	615f0065 	cmpvs	pc, r5, rrx
    2030:	6b5f6d72 	blvs	17dd600 <__bss_end__+0x16945b8>
    2034:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    2038:	745f7463 	ldrbvc	r7, [pc], #-1123	; 2040 <errno+0x203c>
    203c:	00657079 	rsbeq	r7, r5, r9, ror r0
    2040:	65726f6d 	ldrbvs	r6, [r2, #-3949]!	; 0xfffff093
    2044:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    2048:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
    204c:	615f0065 	cmpvs	pc, r5, rrx
    2050:	6d5f6d72 	ldclvs	13, cr6, [pc, #-456]	; 1e90 <errno+0x1e8c>
    2054:	5f65646f 	svcpl	0x0065646f
    2058:	6a626f6b 	bvs	189de0c <__bss_end__+0x1754dc4>
    205c:	5f746365 	svcpl	0x00746365
    2060:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2064:	424f4b00 	submi	r4, pc, #0, 22
    2068:	5443454a 	strbpl	r4, [r3], #-1354	; 0xfffffab6
    206c:	544e555f 	strbpl	r5, [lr], #-1375	; 0xfffffaa1
    2070:	44455059 	strbmi	r5, [r5], #-89	; 0xffffffa7
    2074:	73797300 	cmnvc	r9, #0, 6
    2078:	6e756d5f 	mrcvs	13, 3, r6, cr5, cr15, {2}
    207c:	0070616d 	rsbseq	r6, r0, sp, ror #2
    2080:	4a424f4b 	bmi	1095db4 <__bss_end__+0xf4cd6c>
    2084:	5f544345 	svcpl	0x00544345
    2088:	444f4e43 	strbmi	r4, [pc], #-3651	; 2090 <errno+0x208c>
    208c:	79730045 	ldmdbvc	r3!, {r0, r2, r6}^
    2090:	6d6d5f73 	stclvs	15, cr5, [sp, #-460]!	; 0xfffffe34
    2094:	00327061 	eorseq	r7, r2, r1, rrx
    2098:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 1fe4 <errno+0x1fe0>
    209c:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    20a0:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    20a4:	2f676e6f 	svccs	0x00676e6f
    20a8:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    20ac:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    20b0:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    20b4:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    20b8:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    20bc:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    20c0:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    20c4:	6f72702f 	svcvs	0x0072702f
    20c8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    20cc:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    20d0:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    20d4:	2f736269 	svccs	0x00736269
    20d8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    20dc:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    20e0:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    20e4:	2f737973 	svccs	0x00737973
    20e8:	2f637273 	svccs	0x00637273
    20ec:	5f737973 	svcpl	0x00737973
    20f0:	65726f6d 	ldrbvs	r6, [r2, #-3949]!	; 0xfffff093
    20f4:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    20f8:	7000632e 	andvc	r6, r0, lr, lsr #6
    20fc:	00746f72 	rsbseq	r6, r4, r2, ror pc
    2100:	4a424f4b 	bmi	1095e34 <__bss_end__+0xf4cdec>
    2104:	5f544345 	svcpl	0x00544345
    2108:	45474150 	strbmi	r4, [r7, #-336]	; 0xfffffeb0
    210c:	5249445f 	subpl	r4, r9, #1593835520	; 0x5f000000
    2110:	4f544345 	svcmi	0x00544345
    2114:	4b005952 	blmi	18664 <arch_simple_get_IRQ_trigger+0xac>
    2118:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
    211c:	535f5443 	cmppl	pc, #1124073472	; 0x43000000
    2120:	5f434e59 	svcpl	0x00434e59
    2124:	50444e45 	subpl	r4, r4, r5, asr #28
    2128:	544e494f 	strbpl	r4, [lr], #-2383	; 0xfffff6b1
    212c:	726f6d00 	rsbvc	r6, pc, #0, 26
    2130:	726f6365 	rsbvc	r6, pc, #-1811939327	; 0x94000001
    2134:	72615f65 	rsbvc	r5, r1, #404	; 0x194
    2138:	6e006165 	adfvssz	f6, f0, f5
    213c:	72627765 	rsbvc	r7, r2, #26476544	; 0x1940000
    2140:	4f4b006b 	svcmi	0x004b006b
    2144:	43454a42 	movtmi	r4, #23106	; 0x5a42
    2148:	52465f54 	subpl	r5, r6, #84, 30	; 0x150
    214c:	00454d41 	subeq	r4, r5, r1, asr #26
    2150:	65726f6d 	ldrbvs	r6, [r2, #-3949]!	; 0xfffff093
    2154:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    2158:	7a69735f 	bvc	1a5eedc <__bss_end__+0x1915e94>
    215c:	4f4b0065 	svcmi	0x004b0065
    2160:	43454a42 	movtmi	r4, #23106	; 0x5a42
    2164:	43545f54 	cmpmi	r4, #84, 30	; 0x150
    2168:	79730042 	ldmdbvc	r3!, {r1, r6}^
    216c:	6d6d5f73 	stclvs	15, cr5, [sp, #-460]!	; 0xfffffe34
    2170:	4b007061 	blmi	1e2fc <__init_libc+0x98>
    2174:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
    2178:	435f5443 	cmpmi	pc, #1124073472	; 0x43000000
    217c:	544f4c53 	strbpl	r4, [pc], #-3155	; 2184 <errno+0x2180>
    2180:	424f4b00 	submi	r4, pc, #0, 22
    2184:	5443454a 	strbpl	r4, [r3], #-1354	; 0xfffffab6
    2188:	5045525f 	subpl	r5, r5, pc, asr r2
    218c:	4b00594c 	blmi	186c4 <arch_simple_get_IRQ_trigger+0x10c>
    2190:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
    2194:	455f5443 	ldrbmi	r5, [pc, #-1091]	; 1d59 <errno+0x1d55>
    2198:	4f50444e 	svcmi	0x0050444e
    219c:	00544e49 	subseq	r4, r4, r9, asr #28
    21a0:	4a424f4b 	bmi	1095ed4 <__bss_end__+0xf4ce8c>
    21a4:	5f544345 	svcpl	0x00544345
    21a8:	45474150 	strbmi	r4, [r7, #-336]	; 0xfffffeb0
    21ac:	4241545f 	submi	r5, r1, #1593835520	; 0x5f000000
    21b0:	4b00454c 	blmi	136e8 <sys_prlimit64+0xd8>
    21b4:	454a424f 	strbmi	r4, [sl, #-591]	; 0xfffffdb1
    21b8:	4d5f5443 	cfldrdmi	mvd5, [pc, #-268]	; 20b4 <errno+0x20b0>
    21bc:	5f45444f 	svcpl	0x0045444f
    21c0:	5f4d554e 	svcpl	0x004d554e
    21c4:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    21c8:	4f4b0053 	svcmi	0x004b0053
    21cc:	43454a42 	movtmi	r4, #23106	; 0x5a42
    21d0:	4f4e5f54 	svcmi	0x004e5f54
    21d4:	49464954 	stmdbmi	r6, {r2, r4, r6, r8, fp, lr}^
    21d8:	49544143 	ldmdbmi	r4, {r0, r1, r6, r8, lr}^
    21dc:	73004e4f 	movwvc	r4, #3663	; 0xe4f
    21e0:	735f7379 	cmpvc	pc, #-469762047	; 0xe4000001
    21e4:	745f7465 	ldrbvc	r7, [pc], #-1125	; 21ec <errno+0x21e8>
    21e8:	615f6469 	cmpvs	pc, r9, ror #8
    21ec:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    21f0:	2f007373 	svccs	0x00007373
    21f4:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    21f8:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    21fc:	6f647679 	svcvs	0x00647679
    2200:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    2204:	2f346c65 	svccs	0x00346c65
    2208:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    220c:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    2210:	6169726f 	cmnvs	r9, pc, ror #4
    2214:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    2218:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    221c:	2f747365 	svccs	0x00747365
    2220:	6a6f7270 	bvs	1bdebe8 <__bss_end__+0x1a95ba0>
    2224:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    2228:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    222c:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    2230:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 20b0 <errno+0x20ac>
    2234:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    2238:	756d346c 	strbvc	r3, [sp, #-1132]!	; 0xfffffb94
    223c:	73636c73 	cmnvc	r3, #29440	; 0x7300
    2240:	732f7379 			; <UNDEFINED> instruction: 0x732f7379
    2244:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    2248:	745f7379 	ldrbvc	r7, [pc], #-889	; 2250 <errno+0x224c>
    224c:	61657268 	cmnvs	r5, r8, ror #4
    2250:	00632e64 	rsbeq	r2, r3, r4, ror #28
    2254:	5f737973 	svcpl	0x00737973
    2258:	5f746573 	svcpl	0x00746573
    225c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2260:	615f6461 	cmpvs	pc, r1, ror #8
    2264:	00616572 	rsbeq	r6, r1, r2, ror r5
    2268:	5f737973 	svcpl	0x00737973
    226c:	65686373 	strbvs	r6, [r8, #-883]!	; 0xfffffc8d
    2270:	69795f64 	ldmdbvs	r9!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2274:	00646c65 	rsbeq	r6, r4, r5, ror #24
    2278:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    227c:	6569595f 	strbvs	r5, [r9, #-2399]!	; 0xfffff6a1
    2280:	6100646c 	tstvs	r0, ip, ror #8
    2284:	735f6d72 	cmpvc	pc, #7296	; 0x1c80
    2288:	6e5f7379 	mrcvs	3, 2, r7, cr15, cr9, {3}
    228c:	006c6c75 	rsbeq	r6, ip, r5, ror ip
    2290:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 21dc <errno+0x21d8>
    2294:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    2298:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    229c:	2f676e6f 	svccs	0x00676e6f
    22a0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    22a4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    22a8:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    22ac:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    22b0:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    22b4:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    22b8:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    22bc:	6f72702f 	svcvs	0x0072702f
    22c0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    22c4:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    22c8:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    22cc:	2f736269 	svccs	0x00736269
    22d0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    22d4:	6d346c65 	ldcvs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    22d8:	636c7375 	cmnvs	ip, #-738197503	; 0xd4000001
    22dc:	2f737973 	svccs	0x00737973
    22e0:	2f637273 	svccs	0x00637273
    22e4:	5f737973 	svcpl	0x00737973
    22e8:	6c656979 			; <UNDEFINED> instruction: 0x6c656979
    22ec:	00632e64 	rsbeq	r2, r3, r4, ror #28
    22f0:	5f6b6c63 	svcpl	0x006b6c63
    22f4:	69006469 	stmdbvs	r0, {r0, r3, r5, r6, sl, sp, lr}
    22f8:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    22fc:	65636166 	strbvs	r6, [r3, #-358]!	; 0xfffffe9a
    2300:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    2304:	72747369 	rsbsvc	r7, r4, #-1543503871	; 0xa4000001
    2308:	6f697461 	svcvs	0x00697461
    230c:	706f5f6e 	rsbvc	r5, pc, lr, ror #30
    2310:	72660073 	rsbvc	r0, r6, #115	; 0x73
    2314:	725f6565 	subsvc	r6, pc, #423624704	; 0x19400000
    2318:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    231c:	69746176 	ldmdbvs	r4!, {r1, r2, r4, r5, r6, r8, sp, lr}^
    2320:	625f6e6f 	subsvs	r6, pc, #1776	; 0x6f0
    2324:	61765f79 	cmnvs	r6, r9, ror pc
    2328:	00726464 	rsbseq	r6, r2, r4, ror #8
    232c:	61707376 	cmnvs	r0, r6, ror r3
    2330:	645f6563 	ldrbvs	r6, [pc], #-1379	; 2338 <errno+0x2334>
    2334:	72656665 	rsbvc	r6, r5, #105906176	; 0x6500000
    2338:	5f646572 	svcpl	0x00646572
    233c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2340:	6d5f7374 	ldclvs	3, cr7, [pc, #-464]	; 2178 <errno+0x2174>
    2344:	705f7061 	subsvc	r7, pc, r1, rrx
    2348:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    234c:	5f74615f 	svcpl	0x0074615f
    2350:	64646176 	strbtvs	r6, [r4], #-374	; 0xfffffe8a
    2354:	6e665f72 	mcrvs	15, 3, r5, cr6, cr2, {3}
    2358:	68746e00 	ldmdavs	r4!, {r9, sl, fp, sp, lr}^
    235c:	6573755f 	ldrbvs	r7, [r3, #-1375]!	; 0xfffffaa1
    2360:	616d6972 	smcvs	54930	; 0xd692
    2364:	70006567 	andvc	r6, r0, r7, ror #10
    2368:	72616c6f 	rsbvc	r6, r1, #28416	; 0x6f00
    236c:	00797469 	rsbseq	r7, r9, r9, ror #8
    2370:	5f78756d 	svcpl	0x0078756d
    2374:	74616566 	strbtvc	r6, [r1], #-1382	; 0xfffffa9a
    2378:	5f657275 	svcpl	0x00657275
    237c:	73760074 	cmnvc	r6, #116	; 0x74
    2380:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2384:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    2388:	7061635f 	rsbvc	r6, r1, pc, asr r3
    238c:	006e665f 	rsbeq	r6, lr, pc, asr r6
    2390:	4f494453 	svcmi	0x00494453
    2394:	4c435f30 	mcrrmi	15, 3, r5, r3, cr0
    2398:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    239c:	4c430045 	mcrrmi	0, 4, r0, r3, cr5
    23a0:	50435f4b 	subpl	r5, r3, fp, asr #30
    23a4:	58315f55 	ldmdapl	r1!, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}
    23a8:	73657200 	cmnvc	r5, #0, 4
    23ac:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    23b0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    23b4:	65727265 	ldrbvs	r7, [r2, #-613]!	; 0xfffffd9b
    23b8:	69725f64 	ldmdbvs	r2!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    23bc:	73746867 	cmnvc	r4, #6750208	; 0x670000
    23c0:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
    23c4:	615f6567 	cmpvs	pc, r7, ror #10
    23c8:	72690074 	rsbvc	r0, r9, #116	; 0x74
    23cc:	6e755f71 	mrcvs	15, 3, r5, cr5, cr1, {3}
    23d0:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    23d4:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    23d8:	006e665f 	rsbeq	r6, lr, pc, asr r6
    23dc:	5f616d64 	svcpl	0x00616d64
    23e0:	68636163 	stmdavs	r3!, {r0, r1, r5, r6, r8, sp, lr}^
    23e4:	706f5f65 	rsbvc	r5, pc, r5, ror #30
    23e8:	6400745f 	strvs	r7, [r0], #-1119	; 0xfffffba1
    23ec:	6d5f616d 	ldfvse	f6, [pc, #-436]	; 2240 <errno+0x223c>
    23f0:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
    23f4:	5f007265 	svcpl	0x00007265
    23f8:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    23fc:	72775f68 	rsbsvc	r5, r7, #104, 30	; 0x1a0
    2400:	00657469 	rsbeq	r7, r5, r9, ror #8
    2404:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    2408:	6f705f6f 	svcvs	0x00705f6f
    240c:	6f5f7472 	svcvs	0x005f7472
    2410:	745f7370 	ldrbvc	r7, [pc], #-880	; 2418 <errno+0x2414>
    2414:	6d697300 	stclvs	3, cr7, [r9, #-0]
    2418:	5f656c70 	svcpl	0x00656c70
    241c:	5f746567 	svcpl	0x00746567
    2420:	79746e75 	ldmdbvc	r4!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    2424:	5f646570 	svcpl	0x00646570
    2428:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    242c:	6e665f74 	mcrvs	15, 3, r5, cr6, cr4, {3}
    2430:	61687300 	cmnvs	r8, r0, lsl #6
    2434:	6d5f6572 	cfldr64vs	mvdx6, [pc, #-456]	; 2274 <errno+0x2270>
    2438:	615f6d65 	cmpvs	pc, r5, ror #26
    243c:	61765f74 	cmnvs	r6, r4, ror pc
    2440:	00726464 	rsbseq	r6, r2, r4, ror #8
    2444:	304e4143 	subcc	r4, lr, r3, asr #2
    2448:	4b4c435f 	blmi	13131cc <__bss_end__+0x11ca184>
    244c:	45544147 	ldrbmi	r4, [r4, #-327]	; 0xfffffeb9
    2450:	5f737000 	svcpl	0x00737000
    2454:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
    2458:	5f6e665f 	svcpl	0x006e665f
    245c:	69770074 	ldmdbvs	r7!, {r2, r4, r5, r6}^
    2460:	776f646e 	strbvc	r6, [pc, -lr, ror #8]!
    2464:	616d6400 	cmnvs	sp, r0, lsl #8
    2468:	6361635f 	cmnvs	r1, #2080374785	; 0x7c000001
    246c:	6f5f6568 	svcvs	0x005f6568
    2470:	73760070 	cmnvc	r6, #112	; 0x70
    2474:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2478:	4100745f 	tstmi	r0, pc, asr r4
    247c:	5f444953 	svcpl	0x00444953
    2480:	69737361 	ldmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    2484:	6d006e67 	stcvs	14, cr6, [r0, #-412]	; 0xfffffe64
    2488:	735f7875 	cmpvc	pc, #7667712	; 0x750000
    248c:	73007379 	movwvc	r7, #889	; 0x379
    2490:	5f344c65 	svcpl	0x00344c65
    2494:	646f4e43 	strbtvs	r4, [pc], #-3651	; 249c <errno+0x2498>
    2498:	53500065 	cmppl	r0, #101	; 0x65
    249c:	4c554e5f 	mrrcmi	14, 5, r4, r5, cr15
    24a0:	4e495f4c 	cdpmi	15, 4, cr5, cr9, cr12, {2}
    24a4:	46524554 			; <UNDEFINED> instruction: 0x46524554
    24a8:	00454341 	subeq	r4, r5, r1, asr #6
    24ac:	61707376 	cmnvs	r0, r6, ror r3
    24b0:	735f6563 	cmpvc	pc, #415236096	; 0x18c00000
    24b4:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    24b8:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
    24bc:	5f74615f 	svcpl	0x0074615f
    24c0:	64646176 	strbtvs	r6, [r4], #-374	; 0xfffffe8a
    24c4:	6e665f72 	mcrvs	15, 3, r5, cr6, cr2, {3}
    24c8:	616b7600 	cmnvs	fp, r0, lsl #12
    24cc:	7073635f 	rsbsvc	r6, r3, pc, asr r3
    24d0:	5f656361 	svcpl	0x00656361
    24d4:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
    24d8:	5f535000 	svcpl	0x00535000
    24dc:	454e4f4e 	strbmi	r4, [lr, #-3918]	; 0xfffff0b2
    24e0:	67697200 	strbvs	r7, [r9, -r0, lsl #4]!
    24e4:	00737468 	rsbseq	r7, r3, r8, ror #8
    24e8:	645f7370 	ldrbvs	r7, [pc], #-880	; 24f0 <errno+0x24ec>
    24ec:	705f616d 	subsvc	r6, pc, sp, ror #2
    24f0:	665f6e69 	ldrbvs	r6, [pc], -r9, ror #28
    24f4:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    24f8:	435f5350 	cmpmi	pc, #80, 6	; 0x40000001
    24fc:	70004b4c 	andvc	r4, r0, ip, asr #22
    2500:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
    2504:	66726574 			; <UNDEFINED> instruction: 0x66726574
    2508:	5f656361 	svcpl	0x00656361
    250c:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2510:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    2514:	5f6e665f 	svcpl	0x006e665f
    2518:	52410074 	subpl	r0, r1, #116	; 0x74
    251c:	6761504d 	strbvs	r5, [r1, -sp, asr #32]!
    2520:	696e5565 	stmdbvs	lr!, {r0, r2, r5, r6, r8, sl, ip, lr}^
    2524:	495f7966 	ldmdbmi	pc, {r1, r2, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    2528:	7274736e 	rsbsvc	r7, r4, #-1207959551	; 0xb8000001
    252c:	69746375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, sp, lr}^
    2530:	67006e6f 	strvs	r6, [r0, -pc, ror #28]
    2534:	5f657461 	svcpl	0x00657461
    2538:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
    253c:	4300656c 	movwmi	r6, #1388	; 0x56c
    2540:	4d5f4b4c 	vldrmi	d20, [pc, #-304]	; 2418 <errno+0x2414>
    2544:	45545341 	ldrbmi	r5, [r4, #-833]	; 0xfffffcbf
    2548:	6c630052 	stclvs	0, cr0, [r3], #-328	; 0xfffffeb8
    254c:	5f6b636f 	svcpl	0x006b636f
    2550:	5f737973 	svcpl	0x00737973
    2554:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
    2558:	415f344c 	cmpmi	pc, ip, asr #8
    255c:	505f4d52 	subspl	r4, pc, r2, asr sp	; <UNPREDICTABLE>
    2560:	43656761 	cmnmi	r5, #25427968	; 0x1840000
    2564:	65686361 	strbvs	r6, [r8, #-865]!	; 0xfffffc9f
    2568:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    256c:	5f737000 	svcpl	0x00737000
    2570:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    2574:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    2578:	69665f65 	stmdbvs	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    257c:	665f646e 	ldrbvs	r6, [pc], -lr, ror #8
    2580:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    2584:	68636163 	stmdavs	r3!, {r0, r1, r5, r6, r8, sp, lr}^
    2588:	6c626165 	stfvse	f6, [r2], #-404	; 0xfffffe6c
    258c:	70630065 	rsbvc	r0, r3, r5, rrx
    2590:	66007274 			; <UNDEFINED> instruction: 0x66007274
    2594:	5f716572 	svcpl	0x00716572
    2598:	73700074 	cmnvc	r0, #116	; 0x74
    259c:	6c61635f 	stclvs	3, cr6, [r1], #-380	; 0xfffffe84
    25a0:	5f636f6c 	svcpl	0x00636f6c
    25a4:	745f6e66 	ldrbvc	r6, [pc], #-3686	; 25ac <errno+0x25a8>
    25a8:	4b4c4300 	blmi	13131b0 <__bss_end__+0x11ca168>
    25ac:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    25b0:	4c4c505f 	mcrrmi	0, 5, r5, ip, cr15
    25b4:	5f737000 	svcpl	0x00737000
    25b8:	5f717269 	svcpl	0x00717269
    25bc:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    25c0:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    25c4:	5f6e665f 	svcpl	0x006e665f
    25c8:	73700074 	cmnvc	r0, #116	; 0x74
    25cc:	616d645f 	cmnvs	sp, pc, asr r4
    25d0:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    25d4:	6e665f65 	cdpvs	15, 6, cr5, cr6, cr5, {3}
    25d8:	7200745f 	andvc	r7, r0, #1593835520	; 0x5f000000
    25dc:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    25e0:	69746176 	ldmdbvs	r4!, {r1, r2, r4, r5, r6, r8, sp, lr}^
    25e4:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 25ec <errno+0x25e8>
    25e8:	6d697300 	stclvs	3, cr7, [r9, #-0]
    25ec:	5f656c70 	svcpl	0x00656c70
    25f0:	5f746567 	svcpl	0x00746567
    25f4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    25f8:	7061635f 	rsbvc	r6, r1, pc, asr r3
    25fc:	006e665f 	rsbeq	r6, lr, pc, asr r6
    2600:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    2604:	6d69735f 	stclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
    2608:	5f656c70 	svcpl	0x00656c70
    260c:	69730074 	ldmdbvs	r3!, {r2, r4, r5, r6}^
    2610:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2614:	4953415f 	ldmdbmi	r3, {r0, r1, r2, r3, r4, r6, r8, lr}^
    2618:	6f6f5044 	svcvs	0x006f5044
    261c:	73615f6c 	cmnvc	r1, #108, 30	; 0x1b0
    2620:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
    2624:	006e665f 	rsbeq	r6, lr, pc, asr r6
    2628:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    262c:	70707573 	rsbsvc	r7, r0, r3, ror r5
    2630:	5f74726f 	svcpl	0x0074726f
    2634:	69726573 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
    2638:	735f6c61 	cmpvc	pc, #24832	; 0x6100
    263c:	70757465 	rsbsvc	r7, r5, r5, ror #8
    2640:	5f6f695f 	svcpl	0x006f695f
    2644:	0073706f 	rsbseq	r7, r3, pc, rrx
    2648:	5f616b76 	svcpl	0x00616b76
    264c:	70737475 	rsbsvc	r7, r3, r5, ror r4
    2650:	5f656361 	svcpl	0x00656361
    2654:	6f6c6c61 	svcvs	0x006c6c61
    2658:	616d5f63 	cmnvs	sp, r3, ror #30
    265c:	5f656279 	svcpl	0x00656279
    2660:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
    2664:	665f6563 	ldrbvs	r6, [pc], -r3, ror #10
    2668:	7266006e 	rsbvc	r0, r6, #110	; 0x6e
    266c:	5f656d61 	svcpl	0x00656d61
    2670:	7070616d 	rsbsvc	r6, r0, sp, ror #2
    2674:	00676e69 	rsbeq	r6, r7, r9, ror #28
    2678:	755f6f69 	ldrbvc	r6, [pc, #-3945]	; 1717 <errno+0x1713>
    267c:	70616d6e 	rsbvc	r6, r1, lr, ror #26
    2680:	006e665f 	rsbeq	r6, lr, pc, asr r6
    2684:	61636572 	smcvs	13906	; 0x3652
    2688:	5053006c 	subspl	r0, r3, ip, rrx
    268c:	435f3049 	cmpmi	pc, #73	; 0x49
    2690:	41474b4c 	cmpmi	r7, ip, asr #22
    2694:	70004554 	andvc	r4, r0, r4, asr r5
    2698:	7374616c 	cmnvc	r4, #108, 2
    269c:	6f707075 	svcvs	0x00707075
    26a0:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
    26a4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    26a8:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    26ac:	5f656369 	svcpl	0x00656369
    26b0:	64646176 	strbtvs	r6, [r4], #-374	; 0xfffffe8a
    26b4:	72690072 	rsbvc	r0, r9, #114	; 0x72
    26b8:	64695f71 	strbtvs	r5, [r9], #-3953	; 0xfffff08f
    26bc:	7600745f 			; <UNDEFINED> instruction: 0x7600745f
    26c0:	635f616b 	cmpvs	pc, #-1073741798	; 0xc000001a
    26c4:	63617073 	cmnvs	r1, #115	; 0x73
    26c8:	72665f65 	rsbvc	r5, r6, #404	; 0x194
    26cc:	665f6565 	ldrbvs	r6, [pc], -r5, ror #10
    26d0:	6567006e 	strbvs	r0, [r7, #-110]!	; 0xffffff92
    26d4:	6e665f74 	mcrvs	15, 3, r5, cr6, cr4, {3}
    26d8:	70616300 	rsbvc	r6, r1, r0, lsl #6
    26dc:	00727450 	rsbseq	r7, r2, r0, asr r4
    26e0:	706d6973 	rsbvc	r6, sp, r3, ror r9
    26e4:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
    26e8:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
    26ec:	635f7061 	cmpvs	pc, #97	; 0x61
    26f0:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    26f4:	006e665f 	rsbeq	r6, lr, pc, asr r6
    26f8:	61707376 	cmnvs	r0, r6, ror r3
    26fc:	675f6563 	ldrbvs	r6, [pc, -r3, ror #10]
    2700:	725f7465 	subsvc	r7, pc, #1694498816	; 0x65000000
    2704:	5f746f6f 	svcpl	0x00746f6f
    2708:	63006e66 	movwvs	r6, #3686	; 0xe66
    270c:	65447061 	strbvs	r7, [r4, #-97]	; 0xffffff9f
    2710:	00687470 	rsbeq	r7, r8, r0, ror r4
    2714:	5f4b4c43 	svcpl	0x004b4c43
    2718:	5053514c 	subspl	r5, r3, ip, asr #2
    271c:	6c700049 	ldclvs	0, cr0, [r0], #-292	; 0xfffffedc
    2720:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    2724:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    2728:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
    272c:	735f6f64 	cmpvc	pc, #100, 30	; 0x190
    2730:	61697265 	cmnvs	r9, r5, ror #4
    2734:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
    2738:	00707574 	rsbseq	r7, r0, r4, ror r5
    273c:	645f7370 	ldrbvs	r7, [pc], #-880	; 2744 <errno+0x2740>
    2740:	6d5f616d 	ldfvse	f6, [pc, #-436]	; 2594 <errno+0x2590>
    2744:	745f6e61 	ldrbvc	r6, [pc], #-3681	; 274c <errno+0x2748>
    2748:	70616300 	rsbvc	r6, r1, r0, lsl #6
    274c:	6f6c6c41 	svcvs	0x006c6c41
    2750:	69725777 	ldmdbvs	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, sl, ip, lr}^
    2754:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
    2758:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    275c:	4c00745f 	cfstrsmi	mvf7, [r0], {95}	; 0x5f
    2760:	49505351 	ldmdbmi	r0, {r0, r4, r6, r8, r9, ip, lr}^
    2764:	4b4c435f 	blmi	13134e8 <__bss_end__+0x11ca4a0>
    2768:	45544147 	ldrbmi	r4, [r4, #-327]	; 0xfffffeb9
    276c:	4d454700 	stclmi	7, cr4, [r5, #-0]
    2770:	4c435f30 	mcrrmi	15, 3, r5, r3, cr0
    2774:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    2778:	6e750045 	cdpvs	0, 7, cr0, cr5, cr5, {2}
    277c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2780:	6f635f64 	svcvs	0x00635f64
    2784:	00746e75 	rsbseq	r6, r4, r5, ror lr
    2788:	706d6973 	rsbvc	r6, sp, r3, ror r9
    278c:	705f656c 	subsvc	r6, pc, ip, ror #10
    2790:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
    2794:	006e665f 	rsbeq	r6, lr, pc, asr r6
    2798:	504d5241 	subpl	r5, sp, r1, asr #4
    279c:	55656761 	strbpl	r6, [r5, #-1889]!	; 0xfffff89f
    27a0:	70616d6e 	rsbvc	r6, r1, lr, ror #26
    27a4:	6d697300 	stclvs	3, cr7, [r9, #-0]
    27a8:	5f656c70 	svcpl	0x00656c70
    27ac:	5f746567 	svcpl	0x00746567
    27b0:	5f515249 	svcpl	0x00515249
    27b4:	67697274 			; <UNDEFINED> instruction: 0x67697274
    27b8:	5f726567 	svcpl	0x00726567
    27bc:	43006e66 	movwmi	r6, #3686	; 0xe66
    27c0:	435f4b4c 	cmpmi	pc, #76, 22	; 0x13000
    27c4:	335f5550 	cmpcc	pc, #80, 10	; 0x14000000
    27c8:	5832524f 	ldmdapl	r2!, {r0, r1, r2, r3, r6, r9, ip, lr}
    27cc:	615f5f00 	cmpvs	pc, r0, lsl #30
    27d0:	5f686372 	svcpl	0x00686372
    27d4:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
    27d8:	00726168 	rsbseq	r6, r2, r8, ror #2
    27dc:	504d5241 	subpl	r5, sp, r1, asr #4
    27e0:	43656761 	cmnmi	r5, #25427968	; 0x1840000
    27e4:	6e61656c 	cdpvs	5, 6, cr6, cr1, cr12, {3}
    27e8:	61766e49 	cmnvs	r6, r9, asr #28
    27ec:	6164696c 	cmnvs	r4, ip, ror #18
    27f0:	445f6574 	ldrbmi	r6, [pc], #-1396	; 27f8 <errno+0x27f4>
    27f4:	00617461 	rsbeq	r7, r1, r1, ror #8
    27f8:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
    27fc:	635f6563 	cmpvs	pc, #415236096	; 0x18c00000
    2800:	70007061 	andvc	r7, r0, r1, rrx
    2804:	6f695f73 	svcvs	0x00695f73
    2808:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    280c:	5f6e665f 	svcpl	0x006e665f
    2810:	4c430074 	mcrrmi	0, 7, r0, r3, cr4
    2814:	42445f4b 	submi	r5, r4, #300	; 0x12c
    2818:	72610047 	rsbvc	r0, r1, #71	; 0x47
    281c:	735f6863 	cmpvc	pc, #6488064	; 0x630000
    2820:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    2824:	72660065 	rsbvc	r0, r6, #101	; 0x65
    2828:	725f6565 	subsvc	r6, pc, #423624704	; 0x19400000
    282c:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    2830:	69746176 	ldmdbvs	r4!, {r1, r2, r4, r5, r6, r8, sp, lr}^
    2834:	73006e6f 	movwvc	r6, #3695	; 0xe6f
    2838:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    283c:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
    2840:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
    2844:	6d697265 	sfmvs	f7, 2, [r9, #-404]!	; 0xfffffe6c
    2848:	5f656761 	svcpl	0x00656761
    284c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    2850:	6e665f74 	mcrvs	15, 3, r5, cr6, cr4, {3}
    2854:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
    2858:	61667265 	cmnvs	r6, r5, ror #4
    285c:	725f6563 	subsvc	r6, pc, #415236096	; 0x18c00000
    2860:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    2864:	5f726574 	svcpl	0x00726574
    2868:	43006e66 	movwmi	r6, #3686	; 0xe66
    286c:	445f4b4c 	ldrbmi	r4, [pc], #-2892	; 2874 <errno+0x2870>
    2870:	70004943 	andvc	r4, r0, r3, asr #18
    2874:	72695f73 	rsbvc	r5, r9, #460	; 0x1cc
    2878:	63615f71 	cmnvs	r1, #452	; 0x1c4
    287c:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
    2880:	6764656c 	strbvs	r6, [r4, -ip, ror #10]!
    2884:	6e665f65 	cdpvs	15, 6, cr5, cr6, cr5, {3}
    2888:	4300745f 	movwmi	r7, #1119	; 0x45f
    288c:	505f4b4c 	subspl	r4, pc, ip, asr #22
    2890:	00504143 	subseq	r4, r0, r3, asr #2
    2894:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    2898:	7061435f 	rsbvc	r4, r1, pc, asr r3
    289c:	68676952 	stmdavs	r7!, {r1, r4, r6, r8, fp, sp, lr}^
    28a0:	66007374 			; <UNDEFINED> instruction: 0x66007374
    28a4:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    28a8:	666e695f 			; <UNDEFINED> instruction: 0x666e695f
    28ac:	4143006f 	cmpmi	r3, pc, rrx
    28b0:	435f314e 	cmpmi	pc, #-2147483629	; 0x80000013
    28b4:	41474b4c 	cmpmi	r7, ip, asr #22
    28b8:	67004554 	smlsdvs	r0, r4, r5, r4
    28bc:	665f7465 	ldrbvs	r7, [pc], -r5, ror #8
    28c0:	00716572 	rsbseq	r6, r1, r2, ror r5
    28c4:	72616574 	rsbvc	r6, r1, #116, 10	; 0x1d000000
    28c8:	776f645f 			; <UNDEFINED> instruction: 0x776f645f
    28cc:	4c43006e 	mcrrmi	0, 6, r0, r3, cr14
    28d0:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    28d4:	464f5f45 	strbmi	r5, [pc], -r5, asr #30
    28d8:	65730046 	ldrbvs	r0, [r3, #-70]!	; 0xffffffba
    28dc:	415f344c 	cmpmi	pc, ip, asr #8
    28e0:	505f4d52 	subspl	r4, pc, r2, asr sp	; <UNPREDICTABLE>
    28e4:	00656761 	rsbeq	r6, r5, r1, ror #14
    28e8:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    28ec:	6f705f6f 	svcvs	0x00705f6f
    28f0:	6f5f7472 	svcvs	0x005f7472
    28f4:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
    28f8:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    28fc:	505f5350 	subspl	r5, pc, r0, asr r3	; <UNPREDICTABLE>
    2900:	435f5245 	cmpmi	pc, #1342177284	; 0x50000004
    2904:	63005550 	movwvs	r5, #1360	; 0x550
    2908:	695f7570 	ldmdbvs	pc, {r4, r5, r6, r8, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    290c:	50007864 	andpl	r7, r0, r4, ror #16
    2910:	4f495f53 	svcmi	0x00495f53
    2914:	43495041 	movtmi	r5, #36929	; 0x9041
    2918:	68746f00 	ldmdavs	r4!, {r8, r9, sl, fp, sp, lr}^
    291c:	61007265 	tstvs	r0, r5, ror #4
    2920:	00727474 	rsbseq	r7, r2, r4, ror r4
    2924:	5f77656e 	svcpl	0x0077656e
    2928:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    292c:	72690073 	rsbvc	r0, r9, #115	; 0x73
    2930:	61635f71 	smcvs	13809	; 0x35f1
    2934:	61626c6c 	cmnvs	r2, ip, ror #24
    2938:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    293c:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    2940:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    2944:	6265445f 	rsbvs	r4, r5, #1593835520	; 0x5f000000
    2948:	61436775 	hvcvs	13941	; 0x3675
    294c:	65644970 	strbvs	r4, [r4, #-2416]!	; 0xfffff690
    2950:	6669746e 	strbtvs	r7, [r9], -lr, ror #8
    2954:	32490079 	subcc	r0, r9, #121	; 0x79
    2958:	435f3043 	cmpmi	pc, #67	; 0x43
    295c:	41474b4c 	cmpmi	r7, ip, asr #22
    2960:	6e004554 	cfrshl32vs	mvfx0, mvfx4, r4
    2964:	705f6d75 	subsvc	r6, pc, r5, ror sp	; <UNPREDICTABLE>
    2968:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    296c:	6d697300 	stclvs	3, cr7, [r9, #-0]
    2970:	5f656c70 	svcpl	0x00656c70
    2974:	5f746567 	svcpl	0x00746567
    2978:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    297c:	61635f65 	cmnvs	r3, r5, ror #30
    2980:	6e665f70 	mcrvs	15, 3, r5, cr6, cr0, {3}
    2984:	5f737000 	svcpl	0x00737000
    2988:	5f616d64 	svcpl	0x00616d64
    298c:	69706e75 	ldmdbvs	r0!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    2990:	6e665f6e 	cdpvs	15, 6, cr5, cr6, cr14, {3}
    2994:	7300745f 	movwvc	r7, #1119	; 0x45f
    2998:	5f344c65 	svcpl	0x00344c65
    299c:	5f4d5241 	svcpl	0x004d5241
    29a0:	69726150 	ldmdbvs	r2!, {r4, r6, r8, sp, lr}^
    29a4:	6e457974 			; <UNDEFINED> instruction: 0x6e457974
    29a8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    29ac:	73760064 	cmnvc	r6, #100	; 0x64
    29b0:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    29b4:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    29b8:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
    29bc:	76726573 			; <UNDEFINED> instruction: 0x76726573
    29c0:	6f697461 	svcvs	0x00697461
    29c4:	79625f6e 	stmdbvc	r2!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    29c8:	6461765f 	strbtvs	r7, [r1], #-1631	; 0xfffff9a1
    29cc:	665f7264 	ldrbvs	r7, [pc], -r4, ror #4
    29d0:	6b76006e 	blvs	1d82b90 <__bss_end__+0x1c39b48>
    29d4:	74755f61 	ldrbtvc	r5, [r5], #-3937	; 0xfffff09f
    29d8:	63617073 	cmnvs	r1, #115	; 0x73
    29dc:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    29e0:	5f636f6c 	svcpl	0x00636f6c
    29e4:	50006e66 	andpl	r6, r0, r6, ror #28
    29e8:	45525f53 	ldrbmi	r5, [r2, #-3923]	; 0xfffff0ad
    29ec:	5f544553 	svcpl	0x00544553
    29f0:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xfffff1b7
    29f4:	43414652 	movtmi	r4, #5714	; 0x1652
    29f8:	61630045 	cmnvs	r3, r5, asr #32
    29fc:	6c6c4170 	stfvse	f4, [ip], #-448	; 0xfffffe40
    2a00:	6552776f 	ldrbvs	r7, [r2, #-1903]	; 0xfffff891
    2a04:	6d006461 	cfstrsvs	mvf6, [r0, #-388]	; 0xfffffe7c
    2a08:	6f6c6c61 	svcvs	0x006c6c61
    2a0c:	5f5f0063 	svcpl	0x005f0063
    2a10:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    2a14:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    2a18:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    2a1c:	6c6c6100 	stfvse	f6, [ip], #-0
    2a20:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    2a24:	6f5f6465 	svcvs	0x005f6465
    2a28:	63656a62 	cmnvs	r5, #401408	; 0x62000
    2a2c:	6f635f74 	svcvs	0x00635f74
    2a30:	65696b6f 	strbvs	r6, [r9, #-2927]!	; 0xfffff491
    2a34:	6c6c6100 	stfvse	f6, [ip], #-0
    2a38:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
    2a3c:	6f5f6465 	svcvs	0x005f6465
    2a40:	63656a62 	cmnvs	r5, #401408	; 0x62000
    2a44:	61630074 	smcvs	12292	; 0x3004
    2a48:	5f007370 	svcpl	0x00007370
    2a4c:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    2a50:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    2a54:	5f656369 	svcpl	0x00656369
    2a58:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    2a5c:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    2a60:	72616c75 	rsbvc	r6, r1, #29952	; 0x7500
    2a64:	65737500 	ldrbvs	r7, [r3, #-1280]!	; 0xfffffb00
    2a68:	616d6972 	smcvs	54930	; 0xd692
    2a6c:	635f6567 	cmpvs	pc, #432013312	; 0x19c00000
    2a70:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2a74:	6f6c6300 	svcvs	0x006c6300
    2a78:	675f6b63 	ldrbvs	r6, [pc, -r3, ror #22]
    2a7c:	5f657461 	svcpl	0x00657461
    2a80:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
    2a84:	616b7600 	cmnvs	fp, r0, lsl #12
    2a88:	7374755f 	cmnvc	r4, #398458880	; 0x17c00000
    2a8c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2a90:	6461705f 	strbtvs	r7, [r1], #-95	; 0xffffffa1
    2a94:	665f7264 	ldrbvs	r7, [pc], -r4, ror #4
    2a98:	7370006e 	cmnvc	r0, #110	; 0x6e
    2a9c:	5f6f695f 	svcpl	0x006f695f
    2aa0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2aa4:	73706f5f 	cmnvc	r0, #380	; 0x17c
    2aa8:	544f4e00 	strbpl	r4, [pc], #-3584	; 2ab0 <errno+0x2aac>
    2aac:	494e495f 	stmdbmi	lr, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    2ab0:	4c414954 	mcrrmi	9, 5, r4, r1, cr4	; <UNPREDICTABLE>
    2ab4:	44455a49 	strbmi	r5, [r5], #-2633	; 0xfffff5b7
    2ab8:	71726900 	cmnvc	r2, r0, lsl #18
    2abc:	73706f5f 	cmnvc	r0, #380	; 0x17c
    2ac0:	616b7600 	cmnvs	fp, r0, lsl #12
    2ac4:	7073635f 	rsbsvc	r6, r3, pc, asr r3
    2ac8:	5f656361 	svcpl	0x00656361
    2acc:	656b616d 	strbvs	r6, [fp, #-365]!	; 0xfffffe93
    2ad0:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
    2ad4:	6e665f68 	cdpvs	15, 6, cr5, cr6, cr8, {3}
    2ad8:	70737600 	rsbsvc	r7, r3, r0, lsl #12
    2adc:	5f656361 	svcpl	0x00656361
    2ae0:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0xfffffa8e
    2ae4:	5f657672 	svcpl	0x00657672
    2ae8:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
    2aec:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    2af0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
    2af4:	6e665f64 	cdpvs	15, 6, cr5, cr6, cr4, {3}
    2af8:	62656400 	rsbvs	r6, r5, #0, 8
    2afc:	635f6775 	cmpvs	pc, #30670848	; 0x1d40000
    2b00:	695f7061 	ldmdbvs	pc, {r0, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    2b04:	61765f73 	cmnvs	r6, r3, ror pc
    2b08:	0064696c 	rsbeq	r6, r4, ip, ror #18
    2b0c:	65666564 	strbvs	r6, [r6, #-1380]!	; 0xfffffa9c
    2b10:	64657272 	strbtvs	r7, [r5], #-626	; 0xfffffd8e
    2b14:	6769725f 			; <UNDEFINED> instruction: 0x6769725f
    2b18:	5f737468 	svcpl	0x00737468
    2b1c:	5f70616d 	svcpl	0x0070616d
    2b20:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    2b24:	74615f73 	strbtvc	r5, [r1], #-3955	; 0xfffff08d
    2b28:	6461765f 	strbtvs	r7, [r1], #-1631	; 0xfffff9a1
    2b2c:	76007264 	strvc	r7, [r0], -r4, ror #4
    2b30:	745f616b 	ldrbvc	r6, [pc], #-363	; 2b38 <errno+0x2b34>
    2b34:	69637000 	stmdbvs	r3!, {ip, sp, lr}^
    2b38:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
    2b3c:	73700063 	cmnvc	r0, #99	; 0x63
    2b40:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    2b44:	61667265 	cmnvs	r6, r5, ror #4
    2b48:	755f6563 	ldrbvc	r6, [pc, #-1379]	; 25ed <errno+0x25e9>
    2b4c:	6765726e 	strbvs	r7, [r5, -lr, ror #4]!
    2b50:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2b54:	6e665f72 	mcrvs	15, 3, r5, cr6, cr2, {3}
    2b58:	4400745f 	strmi	r7, [r0], #-1119	; 0xfffffba1
    2b5c:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    2b60:	45484341 	strbmi	r4, [r8, #-833]	; 0xfffffcbf
    2b64:	5f504f5f 	svcpl	0x00504f5f
    2b68:	41564e49 	cmpmi	r6, r9, asr #28
    2b6c:	4144494c 	cmpmi	r4, ip, asr #18
    2b70:	5f004554 	svcpl	0x00004554
    2b74:	00616b76 	rsbeq	r6, r1, r6, ror fp
    2b78:	504d5241 	subpl	r5, sp, r1, asr #4
    2b7c:	54656761 	strbtpl	r6, [r5], #-1889	; 0xfffff89f
    2b80:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2b84:	616d6e55 	cmnvs	sp, r5, asr lr
    2b88:	73760070 	cmnvc	r6, #112	; 0x70
    2b8c:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    2b90:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    2b94:	6761705f 			; <UNDEFINED> instruction: 0x6761705f
    2b98:	615f7365 	cmpvs	pc, r5, ror #6
    2b9c:	61765f74 	cmnvs	r6, r4, ror pc
    2ba0:	5f726464 	svcpl	0x00726464
    2ba4:	4d006e66 	stcmi	14, cr6, [r0, #-408]	; 0xfffffe68
    2ba8:	445f5855 	ldrbmi	r5, [pc], #-2133	; 2bb0 <errno+0x2bac>
    2bac:	4e5f5249 	cdpmi	2, 5, cr5, cr15, cr9, {2}
    2bb0:	415f544f 	cmpmi	pc, pc, asr #8
    2bb4:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    2bb8:	655f004f 	ldrbvs	r0, [pc, #-79]	; 2b71 <errno+0x2b6d>
    2bbc:	5f6d756e 	svcpl	0x006d756e
    2bc0:	5f646170 	svcpl	0x00646170
    2bc4:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    2bc8:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    2bcc:	414d565f 	cmpmi	sp, pc, asr r6
    2bd0:	69727474 	ldmdbvs	r2!, {r2, r4, r5, r6, sl, ip, sp, lr}^
    2bd4:	65747562 	ldrbvs	r7, [r4, #-1378]!	; 0xfffffa9e
    2bd8:	4d440073 	stclmi	0, cr0, [r4, #-460]	; 0xfffffe34
    2bdc:	435f4341 	cmpmi	pc, #67108865	; 0x4000001
    2be0:	41474b4c 	cmpmi	r7, ip, asr #22
    2be4:	73004554 	movwvc	r4, #1364	; 0x554
    2be8:	61697265 	cmnvs	r9, r5, ror #4
    2bec:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
    2bf0:	5f707574 	svcpl	0x00707574
    2bf4:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    2bf8:	50007375 	andpl	r7, r0, r5, ror r3
    2bfc:	534d5f53 	movtpl	r5, #57171	; 0xdf53
    2c00:	416e0049 	cmnmi	lr, r9, asr #32
    2c04:	49686372 	stmdbmi	r8!, {r1, r4, r5, r6, r8, r9, sp, lr}^
    2c08:	636f766e 	cmnvs	pc, #115343360	; 0x6e00000
    2c0c:	6f697461 	svcvs	0x00697461
    2c10:	62614c6e 	rsbvs	r4, r1, #28160	; 0x6e00
    2c14:	00736c65 	rsbseq	r6, r3, r5, ror #24
    2c18:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    2c1c:	616d5f6f 	cmnvs	sp, pc, ror #30
    2c20:	72657070 	rsbvc	r7, r5, #112	; 0x70
    2c24:	4d454700 	stclmi	7, cr4, [r5, #-0]
    2c28:	4c435f31 	mcrrmi	15, 3, r5, r3, cr1
    2c2c:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    2c30:	4c430045 	mcrrmi	0, 4, r0, r3, cr5
    2c34:	44445f4b 	strbmi	r5, [r4], #-3915	; 0xfffff0b5
    2c38:	58325f52 	ldmdapl	r2!, {r1, r4, r6, r8, r9, sl, fp, ip, lr}
    2c3c:	5f535000 	svcpl	0x00535000
    2c40:	45485445 	strbmi	r5, [r8, #-1093]	; 0xfffffbbb
    2c44:	54454e52 	strbpl	r4, [r5], #-3666	; 0xfffff1ae
    2c48:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
    2c4c:	41465245 	cmpmi	r6, r5, asr #4
    2c50:	73004543 	movwvc	r4, #1347	; 0x543
    2c54:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    2c58:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
    2c5c:	78655f74 	stmdavc	r5!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2c60:	646e6574 	strbtvs	r6, [lr], #-1396	; 0xfffffa8c
    2c64:	625f6465 	subsvs	r6, pc, #1694498816	; 0x65000000
    2c68:	69746f6f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2c6c:	5f6f666e 	svcpl	0x006f666e
    2c70:	5f6e656c 	svcpl	0x006e656c
    2c74:	53006e66 	movwpl	r6, #3686	; 0xe66
    2c78:	5f314950 	svcpl	0x00314950
    2c7c:	474b4c43 	strbmi	r4, [fp, -r3, asr #24]
    2c80:	00455441 	subeq	r5, r5, r1, asr #8
    2c84:	4f5f5350 	svcmi	0x005f5350
    2c88:	52454854 	subpl	r4, r5, #84, 16	; 0x540000
    2c8c:	5f737000 	svcpl	0x00737000
    2c90:	6f5f6f69 	svcvs	0x005f6f69
    2c94:	745f7370 	ldrbvc	r7, [pc], #-880	; 2c9c <errno+0x2c98>
    2c98:	616d6400 	cmnvs	sp, r0, lsl #8
    2c9c:	6361635f 	cmnvs	r1, #2080374785	; 0x7c000001
    2ca0:	6f5f6568 	svcvs	0x005f6568
    2ca4:	6e665f70 	mcrvs	15, 3, r5, cr6, cr0, {3}
    2ca8:	52415500 	subpl	r5, r1, #0, 10
    2cac:	435f3054 	cmpmi	pc, #84	; 0x54
    2cb0:	41474b4c 	cmpmi	r7, ip, asr #22
    2cb4:	73004554 	movwvc	r4, #1364	; 0x554
    2cb8:	5f344c65 	svcpl	0x00344c65
    2cbc:	52706143 	rsbspl	r6, r0, #-1073741808	; 0xc0000010
    2cc0:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
    2cc4:	00745f73 	rsbseq	r5, r4, r3, ror pc
    2cc8:	4f4c434e 	svcmi	0x004c434e
    2ccc:	00534b43 	subseq	r4, r3, r3, asr #22
    2cd0:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    2cd4:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    2cd8:	6665445f 			; <UNDEFINED> instruction: 0x6665445f
    2cdc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2ce0:	414d565f 	cmpmi	sp, pc, asr r6
    2ce4:	69727474 	ldmdbvs	r2!, {r2, r4, r5, r6, sl, ip, sp, lr}^
    2ce8:	65747562 	ldrbvs	r7, [r4, #-1378]!	; 0xfffffa9e
    2cec:	72690073 	rsbvc	r0, r9, #115	; 0x73
    2cf0:	72745f71 	rsbsvc	r5, r4, #452	; 0x1c4
    2cf4:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
    2cf8:	6d640072 	stclvs	0, cr0, [r4, #-456]!	; 0xfffffe38
    2cfc:	6c615f61 	stclvs	15, cr5, [r1], #-388	; 0xfffffe7c
    2d00:	5f636f6c 	svcpl	0x00636f6c
    2d04:	70006e66 	andvc	r6, r0, r6, ror #28
    2d08:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
    2d0c:	66726574 			; <UNDEFINED> instruction: 0x66726574
    2d10:	5f656361 	svcpl	0x00656361
    2d14:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    2d18:	4b4c4300 	blmi	1313920 <__bss_end__+0x11ca8d8>
    2d1c:	5244445f 	subpl	r4, r4, #1593835520	; 0x5f000000
    2d20:	0058335f 	subseq	r3, r8, pc, asr r3
    2d24:	5f4b4c43 	svcpl	0x004b4c43
    2d28:	5f555043 	svcpl	0x00555043
    2d2c:	69005832 	stmdbvs	r0, {r1, r4, r5, fp, ip, lr}
    2d30:	6f705f6f 	svcvs	0x00705f6f
    2d34:	6f5f7472 	svcvs	0x005f7472
    2d38:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
    2d3c:	5f5f006e 	svcpl	0x005f006e
    2d40:	5f70616d 	svcpl	0x0070616d
    2d44:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
    2d48:	705f6563 	subsvc	r6, pc, r3, ror #10
    2d4c:	00656761 	rsbeq	r6, r5, r1, ror #14
    2d50:	61707376 	cmnvs	r0, r6, ror r3
    2d54:	725f6563 	subsvc	r6, pc, #415236096	; 0x18c00000
    2d58:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    2d5c:	645f6576 	ldrbvs	r6, [pc], #-1398	; 2d64 <errno+0x2d60>
    2d60:	72656665 	rsbvc	r6, r5, #105906176	; 0x6500000
    2d64:	5f646572 	svcpl	0x00646572
    2d68:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2d6c:	725f7374 	subsvc	r7, pc, #116, 6	; 0xd0000001
    2d70:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
    2d74:	5f74615f 	svcpl	0x0074615f
    2d78:	76006e66 	strvc	r6, [r0], -r6, ror #28
    2d7c:	635f616b 	cmpvs	pc, #-1073741798	; 0xc000001a
    2d80:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    2d84:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
    2d88:	00657465 	rsbeq	r7, r5, r5, ror #8
    2d8c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    2d90:	5f646574 	svcpl	0x00646574
    2d94:	75676572 	strbvc	r6, [r7, #-1394]!	; 0xfffffa8e
    2d98:	0072616c 	rsbseq	r6, r2, ip, ror #2
    2d9c:	706d6973 	rsbvc	r6, sp, r3, ror r9
    2da0:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
    2da4:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
    2da8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    2dac:	7a69735f 	bvc	1a5fb30 <__bss_end__+0x1916ae8>
    2db0:	6e665f65 	cdpvs	15, 6, cr5, cr6, cr5, {3}
    2db4:	5f737000 	svcpl	0x00737000
    2db8:	5f6d656d 	svcpl	0x006d656d
    2dbc:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    2dc0:	00745f73 	rsbseq	r5, r4, r3, ror pc
    2dc4:	5f325854 	svcpl	0x00325854
    2dc8:	504d5042 	subpl	r5, sp, r2, asr #32
    2dcc:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
    2dd0:	41465245 	cmpmi	r6, r5, asr #4
    2dd4:	70004543 	andvc	r4, r0, r3, asr #10
    2dd8:	6d645f73 	stclvs	15, cr5, [r4, #-460]!	; 0xfffffe34
    2ddc:	616d5f61 	cmnvs	sp, r1, ror #30
    2de0:	6973006e 	ldmdbvs	r3!, {r1, r2, r3, r5, r6}^
    2de4:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2de8:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    2dec:	6863735f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    2df0:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    2df4:	5f6c7274 	svcpl	0x006c7274
    2df8:	6e006e66 	cdpvs	14, 0, cr6, cr0, cr6, {3}
    2dfc:	705f7765 	subsvc	r7, pc, r5, ror #14
    2e00:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    2e04:	5f74615f 	svcpl	0x0074615f
    2e08:	64646176 	strbtvs	r6, [r4], #-374	; 0xfffffe8a
    2e0c:	53500072 	cmppl	r0, #114	; 0x72
    2e10:	4952545f 	ldmdbmi	r2, {r0, r1, r2, r3, r4, r6, sl, ip, lr}^
    2e14:	52454747 	subpl	r4, r5, #18612224	; 0x11c0000
    2e18:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
    2e1c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    2e20:	6f625f64 	svcvs	0x00625f64
    2e24:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
    2e28:	43006f66 	movwmi	r6, #3942	; 0xf66
    2e2c:	475f4b4c 	ldrbmi	r4, [pc, -ip, asr #22]
    2e30:	00304d45 	eorseq	r4, r0, r5, asr #26
    2e34:	5f4b4c43 	svcpl	0x004b4c43
    2e38:	314d4547 	cmpcc	sp, r7, asr #10
    2e3c:	4d524100 	ldfmie	f4, [r2, #-0]
    2e40:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    2e44:	0070614d 	rsbseq	r6, r0, sp, asr #2
    2e48:	5f58554d 	svcpl	0x0058554d
    2e4c:	5f524944 	svcpl	0x00524944
    2e50:	4f495047 	svcmi	0x00495047
    2e54:	544f425f 	strbpl	r4, [pc], #-607	; 2e5c <errno+0x2e58>
    2e58:	72690048 	rsbvc	r0, r9, #72	; 0x48
    2e5c:	79745f71 	ldmdbvc	r4!, {r0, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2e60:	63006570 	movwvs	r6, #1392	; 0x570
    2e64:	646c6968 	strbtvs	r6, [ip], #-2408	; 0xfffff698
    2e68:	70737600 	rsbsvc	r7, r3, r0, lsl #12
    2e6c:	5f656361 	svcpl	0x00656361
    2e70:	5f70616d 	svcpl	0x0070616d
    2e74:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    2e78:	6e665f73 	mcrvs	15, 3, r5, cr6, cr3, {3}
    2e7c:	54455300 	strbpl	r5, [r5], #-768	; 0xfffffd00
    2e80:	435f5055 	cmpmi	pc, #85	; 0x55
    2e84:	4c504d4f 	mrrcmi	13, 4, r4, r0, cr15
    2e88:	00455445 	subeq	r5, r5, r5, asr #8
    2e8c:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 2dd8 <errno+0x2dd4>
    2e90:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    2e94:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    2e98:	2f676e6f 	svccs	0x00676e6f
    2e9c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    2ea0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    2ea4:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    2ea8:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2eac:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    2eb0:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    2eb4:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    2eb8:	6f72702f 	svcvs	0x0072702f
    2ebc:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    2ec0:	65732f73 	ldrbvs	r2, [r3, #-3955]!	; 0xfffff08d
    2ec4:	6c5f344c 	cfldrdvs	mvd3, [pc], {76}	; 0x4c
    2ec8:	2f736269 	svccs	0x00736269
    2ecc:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    2ed0:	70346c65 	eorsvc	r6, r4, r5, ror #24
    2ed4:	7374616c 	cmnvc	r4, #108, 2
    2ed8:	6f707075 	svcvs	0x00707075
    2edc:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    2ee0:	632f6372 			; <UNDEFINED> instruction: 0x632f6372
    2ee4:	6f6d6d6f 	svcvs	0x006d6d6f
    2ee8:	00632e6e 	rsbeq	r2, r3, lr, ror #28
    2eec:	52415453 	subpl	r5, r1, #1392508928	; 0x53000000
    2ef0:	41465f54 	cmpmi	r6, r4, asr pc
    2ef4:	41534c49 	cmpmi	r3, r9, asr #24
    2ef8:	535f4546 	cmppl	pc, #293601280	; 0x11800000
    2efc:	50555445 	subspl	r5, r5, r5, asr #8
    2f00:	5f6f6900 	svcpl	0x006f6900
    2f04:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2f08:	5f6e695f 	svcpl	0x006e695f
    2f0c:	66006e66 	strvs	r6, [r0], -r6, ror #28
    2f10:	75746165 	ldrbvc	r6, [r4, #-357]!	; 0xfffffe9b
    2f14:	645f6572 	ldrbvs	r6, [pc], #-1394	; 2f1c <errno+0x2f18>
    2f18:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    2f1c:	7300656c 	movwvc	r6, #1388	; 0x56c
    2f20:	5f344c65 	svcpl	0x00344c65
    2f24:	5f4d5241 	svcpl	0x004d5241
    2f28:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    2f2c:	70614d5f 	rsbvc	r4, r1, pc, asr sp
    2f30:	69637000 	stmdbvs	r3!, {ip, sp, lr}^
    2f34:	7375625f 	cmnvc	r5, #-268435451	; 0xf0000005
    2f38:	616d6400 	cmnvs	sp, r0, lsl #8
    2f3c:	706e755f 	rsbvc	r7, lr, pc, asr r5
    2f40:	665f6e69 	ldrbvs	r6, [pc], -r9, ror #28
    2f44:	6170006e 	cmnvs	r0, lr, rrx
    2f48:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    2f4c:	5f737000 	svcpl	0x00737000
    2f50:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    2f54:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    2f58:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
    2f5c:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2f60:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2f64:	6f5f6e6f 	svcvs	0x005f6e6f
    2f68:	745f7370 	ldrbvc	r7, [pc], #-880	; 2f70 <errno+0x2f6c>
    2f6c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    2f70:	4c435f4f 	mcrrmi	15, 4, r5, r3, cr15
    2f74:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    2f78:	65730045 	ldrbvs	r0, [r3, #-69]!	; 0xffffffbb
    2f7c:	435f344c 	cmpmi	pc, #76, 8	; 0x4c000000
    2f80:	69527061 	ldmdbvs	r2, {r0, r5, r6, ip, sp, lr}^
    2f84:	73746867 	cmnvc	r4, #6750208	; 0x670000
    2f88:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
    2f8c:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
    2f90:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2f94:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
    2f98:	43324900 	teqmi	r2, #0, 18
    2f9c:	4c435f31 	mcrrmi	15, 3, r5, r3, cr1
    2fa0:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    2fa4:	6f690045 	svcvs	0x00690045
    2fa8:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    2fac:	006e665f 	rsbeq	r6, lr, pc, asr r6
    2fb0:	4b4c434e 	blmi	1313cf0 <__bss_end__+0x11caca8>
    2fb4:	45544147 	ldrbmi	r4, [r4, #-327]	; 0xfffffeb9
    2fb8:	6b760053 	blvs	1d8310c <__bss_end__+0x1c3a0c4>
    2fbc:	74755f61 	ldrbtvc	r5, [r5], #-3937	; 0xfffff09f
    2fc0:	63617073 	cmnvs	r1, #115	; 0x73
    2fc4:	72665f65 	rsbvc	r5, r6, #404	; 0x194
    2fc8:	665f6565 	ldrbvs	r6, [pc], -r5, ror #10
    2fcc:	5350006e 	cmppl	r0, #110	; 0x6e
    2fd0:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
    2fd4:	55525245 	ldrbpl	r5, [r2, #-581]	; 0xfffffdbb
    2fd8:	67005450 	smlsdvs	r0, r0, r4, r5
    2fdc:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 2e50 <errno+0x2e4c>
    2fe0:	765f7875 			; <UNDEFINED> instruction: 0x765f7875
    2fe4:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
    2fe8:	5f535000 	svcpl	0x00535000
    2fec:	4f495047 	svcmi	0x00495047
    2ff0:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
    2ff4:	41465245 	cmpmi	r6, r5, asr #4
    2ff8:	5f004543 	svcpl	0x00004543
    2ffc:	61707363 	cmnvs	r0, r3, ror #6
    3000:	61706563 	cmnvs	r0, r3, ror #10
    3004:	745f6874 	ldrbvc	r6, [pc], #-2164	; 300c <errno+0x3008>
    3008:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
    300c:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    3010:	69730071 	ldmdbvs	r3!, {r0, r4, r5, r6}^
    3014:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3018:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    301c:	6172665f 	cmnvs	r2, pc, asr r6
    3020:	695f656d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    3024:	5f6f666e 	svcpl	0x006f666e
    3028:	63006e66 	movwvs	r6, #3686	; 0xe66
    302c:	6b636f6c 	blvs	18dede4 <__bss_end__+0x1795d9c>
    3030:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    3034:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
    3038:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    303c:	6f625f64 	svcvs	0x00625f64
    3040:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
    3044:	6c5f6f66 	mrrcvs	15, 6, r6, pc, cr6	; <UNPREDICTABLE>
    3048:	70006e65 	andvc	r6, r0, r5, ror #28
    304c:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
    3050:	66726574 			; <UNDEFINED> instruction: 0x66726574
    3054:	5f656361 	svcpl	0x00656361
    3058:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    305c:	7000745f 	andvc	r7, r0, pc, asr r4
    3060:	6f695f73 	svcvs	0x00695f73
    3064:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    3068:	5f726570 	svcpl	0x00726570
    306c:	73700074 	cmnvc	r0, #116	; 0x74
    3070:	5f6f695f 	svcpl	0x006f695f
    3074:	5f746466 	svcpl	0x00746466
    3078:	5f746567 	svcpl	0x00746567
    307c:	745f6e66 	ldrbvc	r6, [pc], #-3686	; 3084 <errno+0x3080>
    3080:	73747500 	cmnvc	r4, #0, 10
    3084:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    3088:	6c6c615f 	stfvse	f6, [ip], #-380	; 0xfffffe84
    308c:	7600636f 	strvc	r6, [r0], -pc, ror #6
    3090:	63617073 	cmnvs	r1, #115	; 0x73
    3094:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
    3098:	76726573 			; <UNDEFINED> instruction: 0x76726573
    309c:	61725f65 	cmnvs	r2, r5, ror #30
    30a0:	5f65676e 	svcpl	0x0065676e
    30a4:	665f7461 	ldrbvs	r7, [pc], -r1, ror #8
    30a8:	6567006e 	strbvs	r0, [r7, #-110]!	; 0xffffff92
    30ac:	61635f74 	smcvs	13812	; 0x35f4
    30b0:	4c430070 	mcrrmi	0, 7, r0, r3, cr0
    30b4:	44445f4b 	strbmi	r5, [r4], #-3915	; 0xfffff0b5
    30b8:	4c505f52 	mrrcmi	15, 5, r5, r0, cr2
    30bc:	7370004c 	cmnvc	r0, #76	; 0x4c
    30c0:	7172695f 	cmnvc	r2, pc, asr r9
    30c4:	7300745f 	movwvc	r7, #1119	; 0x45f
    30c8:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    30cc:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
    30d0:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
    30d4:	61685f51 	cmnvs	r8, r1, asr pc
    30d8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    30dc:	6e665f72 	mcrvs	15, 3, r5, cr6, cr2, {3}
    30e0:	616b7600 	cmnvs	fp, r0, lsl #12
    30e4:	7073635f 	rsbsvc	r6, r3, pc, asr r3
    30e8:	5f656361 	svcpl	0x00656361
    30ec:	6f6c6c61 	svcvs	0x006c6c61
    30f0:	6e665f63 	cdpvs	15, 6, cr5, cr6, cr3, {3}
    30f4:	42535500 	subsmi	r5, r3, #0, 10
    30f8:	4c435f30 	mcrrmi	15, 3, r5, r3, cr0
    30fc:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    3100:	6d640045 	stclvs	0, cr0, [r4, #-276]!	; 0xfffffeec
    3104:	72665f61 	rsbvc	r5, r6, #388	; 0x184
    3108:	665f6565 	ldrbvs	r6, [pc], -r5, ror #10
    310c:	6572006e 	ldrbvs	r0, [r2, #-110]!	; 0xffffff92
    3110:	76726573 			; <UNDEFINED> instruction: 0x76726573
    3114:	61725f65 	cmnvs	r2, r5, ror #30
    3118:	5f65676e 	svcpl	0x0065676e
    311c:	63007461 	movwvs	r7, #1121	; 0x461
    3120:	745f6b6c 	ldrbvc	r6, [pc], #-2924	; 3128 <errno+0x3124>
    3124:	4b4c4300 	blmi	1313d2c <__bss_end__+0x11cace4>
    3128:	434d535f 	movtmi	r5, #54111	; 0xd35f
    312c:	616d6400 	cmnvs	sp, r0, lsl #8
    3130:	6e69705f 	mcrvs	0, 3, r7, cr9, cr15, {2}
    3134:	006e665f 	rsbeq	r6, lr, pc, asr r6
    3138:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
    313c:	73700074 	cmnvc	r0, #116	; 0x74
    3140:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    3144:	61667265 	cmnvs	r6, r5, ror #4
    3148:	735f6563 	cmpvc	pc, #415236096	; 0x18c00000
    314c:	63726165 	cmnvs	r2, #1073741849	; 0x40000019
    3150:	61685f68 	cmnvs	r8, r8, ror #30
    3154:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3158:	6e665f72 	mcrvs	15, 3, r5, cr6, cr2, {3}
    315c:	5300745f 	movwpl	r7, #1119	; 0x45f
    3160:	54524154 	ldrbpl	r4, [r2], #-340	; 0xfffffeac
    3164:	4745525f 	smlsldmi	r5, r5, pc, r2	; <UNPREDICTABLE>
    3168:	52414c55 	subpl	r4, r1, #21760	; 0x5500
    316c:	5445535f 	strbpl	r5, [r5], #-863	; 0xfffffca1
    3170:	69005055 	stmdbvs	r0, {r0, r2, r4, r6, ip, lr}
    3174:	5f74696e 	svcpl	0x0074696e
    3178:	00706163 	rsbseq	r6, r0, r3, ror #2
    317c:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    3180:	4300636f 	movwmi	r6, #879	; 0x36f
    3184:	41474b4c 	cmpmi	r7, ip, asr #22
    3188:	4f5f4554 	svcmi	0x005f4554
    318c:	7370004e 	cmnvc	r0, #78	; 0x4e
    3190:	7172695f 	cmnvc	r2, pc, asr r9
    3194:	726e755f 	rsbvc	r7, lr, #398458880	; 0x17c00000
    3198:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    319c:	5f726574 	svcpl	0x00726574
    31a0:	745f6e66 	ldrbvc	r6, [pc], #-3686	; 31a8 <errno+0x31a4>
    31a4:	5f737000 	svcpl	0x00737000
    31a8:	755f6f69 	ldrbvc	r6, [pc, #-3945]	; 2247 <errno+0x2243>
    31ac:	70616d6e 	rsbvc	r6, r1, lr, ror #26
    31b0:	5f6e665f 	svcpl	0x006e665f
    31b4:	4c430074 	mcrrmi	0, 7, r0, r3, cr4
    31b8:	50535f4b 	subspl	r5, r3, fp, asr #30
    31bc:	43003049 	movwmi	r3, #73	; 0x49
    31c0:	535f4b4c 	cmppl	pc, #76, 22	; 0x13000
    31c4:	00314950 	eorseq	r4, r1, r0, asr r9
    31c8:	5f68746e 	svcpl	0x0068746e
    31cc:	00706163 	rsbseq	r6, r0, r3, ror #2
    31d0:	6d5f7370 	ldclvs	3, cr7, [pc, #-448]	; 3018 <errno+0x3014>
    31d4:	665f6d65 	ldrbvs	r6, [pc], -r5, ror #26
    31d8:	7367616c 	cmnvc	r7, #108, 2
    31dc:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
    31e0:	6f6f725f 	svcvs	0x006f725f
    31e4:	6e750074 	mrcvs	0, 3, r0, cr5, cr4, {3}
    31e8:	5f70616d 	svcpl	0x0070616d
    31ec:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    31f0:	6b760073 	blvs	1d833c4 <__bss_end__+0x1c3a37c>
    31f4:	73635f61 	cmnvc	r3, #388	; 0x184
    31f8:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    31fc:	6b616d5f 	blvs	185e780 <__bss_end__+0x1715738>
    3200:	61705f65 	cmnvs	r0, r5, ror #30
    3204:	55006874 	strpl	r6, [r0, #-2164]	; 0xfffff78c
    3208:	31545241 	cmpcc	r4, r1, asr #4
    320c:	4b4c435f 	blmi	1313f90 <__bss_end__+0x11caf48>
    3210:	45544147 	ldrbmi	r4, [r4, #-327]	; 0xfffffeb9
    3214:	61656600 	cmnvs	r5, r0, lsl #12
    3218:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
    321c:	616e655f 	cmnvs	lr, pc, asr r5
    3220:	00656c62 	rsbeq	r6, r5, r2, ror #24
    3224:	435f5350 	cmpmi	pc, #80, 6	; 0x40000001
    3228:	4b434f4c 	blmi	10d6f60 <__bss_end__+0xf8df18>
    322c:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
    3230:	41465245 	cmpmi	r6, r5, asr #4
    3234:	70004543 	andvc	r4, r0, r3, asr #10
    3238:	7374616c 	cmnvc	r4, #108, 2
    323c:	6f707075 	svcvs	0x00707075
    3240:	735f7472 	cmpvc	pc, #1912602624	; 0x72000000
    3244:	61697265 	cmnvs	r9, r5, ror #4
    3248:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
    324c:	5f707574 	svcpl	0x00707574
    3250:	746f6f62 	strbtvc	r6, [pc], #-3938	; 3258 <errno+0x3254>
    3254:	6f666e69 	svcvs	0x00666e69
    3258:	6961665f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
    325c:	6661736c 	strbtvs	r7, [r1], -ip, ror #6
    3260:	69730065 	ldmdbvs	r3!, {r0, r2, r5, r6}^
    3264:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3268:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    326c:	68746e5f 	ldmdavs	r4!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    3270:	6573755f 	ldrbvs	r7, [r3, #-1375]!	; 0xfffffaa1
    3274:	616d6972 	smcvs	54930	; 0xd692
    3278:	665f6567 	ldrbvs	r6, [pc], -r7, ror #10
    327c:	4c43006e 	mcrrmi	0, 6, r0, r3, cr14
    3280:	5441474b 	strbpl	r4, [r1], #-1867	; 0xfffff8b5
    3284:	4c535f45 	mrrcmi	15, 4, r5, r3, cr5
    3288:	00504545 	subseq	r4, r0, r5, asr #10
    328c:	7073765f 	rsbsvc	r7, r3, pc, asr r6
    3290:	00656361 	rsbeq	r6, r5, r1, ror #6
    3294:	665f6f69 	ldrbvs	r6, [pc], -r9, ror #30
    3298:	41007464 	tstmi	r0, r4, ror #8
    329c:	53414d52 	movtpl	r4, #7506	; 0x1d52
    32a0:	6f504449 	svcvs	0x00504449
    32a4:	73416c6f 	movtvc	r6, #7279	; 0x1c6f
    32a8:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
    32ac:	5f535000 	svcpl	0x00535000
    32b0:	5f4d454d 	svcpl	0x004d454d
    32b4:	73005248 	movwvc	r5, #584	; 0x248
    32b8:	5f346c65 	svcpl	0x00346c65
    32bc:	696c6176 	stmdbvs	ip!, {r1, r2, r4, r5, r6, r8, sp, lr}^
    32c0:	69735f64 	ldmdbvs	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    32c4:	625f657a 	subsvs	r6, pc, #511705088	; 0x1e800000
    32c8:	00737469 	rsbseq	r7, r3, r9, ror #8
    32cc:	6b6f6f63 	blvs	1bdf060 <__bss_end__+0x1a96018>
    32d0:	00736569 	rsbseq	r6, r3, r9, ror #10
    32d4:	61707376 	cmnvs	r0, r6, ror r3
    32d8:	6d5f6563 	cfldr64vs	mvdx6, [pc, #-396]	; 3154 <errno+0x3150>
    32dc:	705f7061 	subsvc	r7, pc, r1, rrx
    32e0:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    32e4:	414d4400 	cmpmi	sp, r0, lsl #8
    32e8:	4341435f 	movtmi	r4, #4959	; 0x135f
    32ec:	4f5f4548 	svcmi	0x005f4548
    32f0:	4c435f50 	mcrrmi	15, 5, r5, r3, cr0
    32f4:	004e4145 	subeq	r4, lr, r5, asr #2
    32f8:	504d5241 	subpl	r5, sp, r1, asr #4
    32fc:	49656761 	stmdbmi	r5!, {r0, r5, r6, r8, r9, sl, sp, lr}^
    3300:	6c61766e 	stclvs	6, cr7, [r1], #-440	; 0xfffffe48
    3304:	74616469 	strbtvc	r6, [r1], #-1129	; 0xfffffb97
    3308:	61445f65 	cmpvs	r4, r5, ror #30
    330c:	63006174 	movwvs	r6, #372	; 0x174
    3310:	6b636f6c 	blvs	18df0c8 <__bss_end__+0x1796080>
    3314:	7461675f 	strbtvc	r6, [r1], #-1887	; 0xfffff8a1
    3318:	4c430065 	mcrrmi	0, 6, r0, r3, cr5
    331c:	41435f4b 	cmpmi	r3, fp, asr #30
    3320:	4300304e 	movwmi	r3, #78	; 0x4e
    3324:	435f4b4c 	cmpmi	pc, #76, 22	; 0x13000
    3328:	00314e41 	eorseq	r4, r1, r1, asr #28
    332c:	706d6973 	rsbvc	r6, sp, r3, ror r9
    3330:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
    3334:	655f7465 	ldrbvs	r7, [pc, #-1125]	; 2ed7 <errno+0x2ed3>
    3338:	6e657478 	mcrvs	4, 3, r7, cr5, cr8, {3}
    333c:	5f646564 	svcpl	0x00646564
    3340:	746f6f62 	strbtvc	r6, [pc], #-3938	; 3348 <errno+0x3344>
    3344:	6f666e69 	svcvs	0x00666e69
    3348:	006e665f 	rsbeq	r6, lr, pc, asr r6
    334c:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    3350:	706f5f6f 	rsbvc	r5, pc, pc, ror #30
    3354:	52410073 	subpl	r0, r1, #115	; 0x73
    3358:	5152494d 	cmppl	r2, sp, asr #18
    335c:	75737349 	ldrbvc	r7, [r3, #-841]!	; 0xfffffcb7
    3360:	51524965 	cmppl	r2, r5, ror #18
    3364:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    3368:	5472656c 	ldrbtpl	r6, [r2], #-1388	; 0xfffffa94
    336c:	67676972 			; <UNDEFINED> instruction: 0x67676972
    3370:	76007265 	strvc	r7, [r0], -r5, ror #4
    3374:	63617073 	cmnvs	r1, #115	; 0x73
    3378:	656e5f65 	strbvs	r5, [lr, #-3941]!	; 0xfffff09b
    337c:	61705f77 	cmnvs	r0, r7, ror pc
    3380:	5f736567 	svcpl	0x00736567
    3384:	765f7461 	ldrbvc	r7, [pc], -r1, ror #8
    3388:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
    338c:	006e665f 	rsbeq	r6, lr, pc, asr r6
    3390:	74636576 	strbtvc	r6, [r3], #-1398	; 0xfffffa8a
    3394:	6700726f 	strvs	r7, [r0, -pc, ror #4]
    3398:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
    339c:	6b636f6c 	blvs	18df154 <__bss_end__+0x179610c>
    33a0:	5f535000 	svcpl	0x00535000
    33a4:	5f4d454d 	svcpl	0x004d454d
    33a8:	4d524f4e 	ldclmi	15, cr4, [r2, #-312]	; 0xfffffec8
    33ac:	5f004c41 	svcpl	0x00004c41
    33b0:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
    33b4:	5f6c6169 	svcpl	0x006c6169
    33b8:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
    33bc:	74750070 	ldrbtvc	r0, [r5], #-112	; 0xffffff90
    33c0:	63617073 	cmnvs	r1, #115	; 0x73
    33c4:	61705f65 	cmnvs	r0, r5, ror #30
    33c8:	00726464 	rsbseq	r6, r2, r4, ror #8
    33cc:	706d6973 	rsbvc	r6, sp, r3, ror r9
    33d0:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
    33d4:	6e5f7465 	cdpvs	4, 5, cr7, cr15, cr5, {3}
    33d8:	755f6874 	ldrbvc	r6, [pc, #-2164]	; 2b6c <errno+0x2b68>
    33dc:	7079746e 	rsbsvc	r7, r9, lr, ror #8
    33e0:	665f6465 	ldrbvs	r6, [pc], -r5, ror #8
    33e4:	6973006e 	ldmdbvs	r3!, {r1, r2, r3, r5, r6}^
    33e8:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    33ec:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    33f0:	68746e5f 	ldmdavs	r4!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    33f4:	7061635f 	rsbvc	r6, r1, pc, asr r3
    33f8:	006e665f 	rsbeq	r6, lr, pc, asr r6
    33fc:	5f746567 	svcpl	0x00746567
    3400:	6b6f6f63 	blvs	1bdf194 <__bss_end__+0x1a9614c>
    3404:	76006569 	strvc	r6, [r0], -r9, ror #10
    3408:	63617073 	cmnvs	r1, #115	; 0x73
    340c:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
    3410:	6f635f74 	svcvs	0x00635f74
    3414:	65696b6f 	strbvs	r6, [r9, #-2927]!	; 0xfffff491
    3418:	006e665f 	rsbeq	r6, lr, pc, asr r6
    341c:	5f716572 	svcpl	0x00716572
    3420:	71657266 	cmnvc	r5, r6, ror #4
    3424:	616c7000 	cmnvs	ip, r0
    3428:	70757374 	rsbsvc	r7, r5, r4, ror r3
    342c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3430:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
    3434:	5f6c6169 	svcpl	0x006c6169
    3438:	75746573 	ldrbvc	r6, [r4, #-1395]!	; 0xfffffa8d
    343c:	69735f70 	ldmdbvs	r3!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3440:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    3444:	616b7600 	cmnvs	fp, r0, lsl #12
    3448:	6a626f5f 	bvs	189f1cc <__bss_end__+0x1756184>
    344c:	00746365 	rsbseq	r6, r4, r5, ror #6
    3450:	5f6b6c63 	svcpl	0x006b6c63
    3454:	00737973 	rsbseq	r7, r3, r3, ror r9
    3458:	706d6973 	rsbvc	r6, sp, r3, ror r9
    345c:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
    3460:	665f7465 	ldrbvs	r7, [pc], -r5, ror #8
    3464:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    3468:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    346c:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
    3470:	006e665f 	rsbeq	r6, lr, pc, asr r6
    3474:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    3478:	63616672 	cmnvs	r1, #119537664	; 0x7200000
    347c:	6e755f65 	cdpvs	15, 7, cr5, cr5, cr5, {3}
    3480:	69676572 	stmdbvs	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    3484:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    3488:	006e665f 	rsbeq	r6, lr, pc, asr r6
    348c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    3490:	6f5f636f 	svcvs	0x005f636f
    3494:	6e007370 	mcrvs	3, 0, r7, cr0, cr0, {3}
    3498:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    349c:	73700072 	cmnvc	r0, #114	; 0x72
    34a0:	5f6f695f 	svcpl	0x006f695f
    34a4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    34a8:	5f6e695f 	svcpl	0x006e695f
    34ac:	745f6e66 	ldrbvc	r6, [pc], #-3686	; 34b4 <errno+0x34b0>
    34b0:	49445300 	stmdbmi	r4, {r8, r9, ip, lr}^
    34b4:	435f314f 	cmpmi	pc, #-1073741805	; 0xc0000013
    34b8:	41474b4c 	cmpmi	r7, ip, asr #22
    34bc:	6e004554 	cfrshl32vs	mvfx0, mvfx4, r4
    34c0:	755f6874 	ldrbvc	r6, [pc, #-2164]	; 2c54 <errno+0x2c50>
    34c4:	7079746e 	rsbsvc	r7, r9, lr, ror #8
    34c8:	73006465 	movwvc	r6, #1125	; 0x465
    34cc:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    34d0:	7274635f 	rsbsvc	r6, r4, #2080374785	; 0x7c000001
    34d4:	7370006c 	cmnvc	r0, #108	; 0x6c
    34d8:	616d645f 	cmnvs	sp, pc, asr r4
    34dc:	6361635f 	cmnvs	r1, #2080374785	; 0x7c000001
    34e0:	6f5f6568 	svcvs	0x005f6568
    34e4:	6e665f70 	mcrvs	15, 3, r5, cr6, cr0, {3}
    34e8:	4300745f 	movwmi	r7, #1119	; 0x45f
    34ec:	535f4b4c 	cmppl	pc, #76, 22	; 0x13000
    34f0:	304f4944 	subcc	r4, pc, r4, asr #18
    34f4:	4b4c4300 	blmi	13140fc <__bss_end__+0x11cb0b4>
    34f8:	4944535f 	stmdbmi	r4, {r0, r1, r2, r3, r4, r6, r8, r9, ip, lr}^
    34fc:	7600314f 	strvc	r3, [r0], -pc, asr #2
    3500:	755f616b 	ldrbvc	r6, [pc, #-363]	; 339d <errno+0x3399>
    3504:	61707374 	cmnvs	r0, r4, ror r3
    3508:	615f6563 	cmpvs	pc, r3, ror #10
    350c:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    3510:	5f74615f 	svcpl	0x0074615f
    3514:	5f006e66 	svcpl	0x00006e66
    3518:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    351c:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    3520:	5f656369 	svcpl	0x00656369
    3524:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    3528:	6961665f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
    352c:	6661736c 	strbtvs	r7, [r1], -ip, ror #6
    3530:	65720065 	ldrbvs	r0, [r2, #-101]!	; 0xffffff9b
    3534:	76726573 			; <UNDEFINED> instruction: 0x76726573
    3538:	61725f65 	cmnvs	r2, r5, ror #30
    353c:	5f65676e 	svcpl	0x0065676e
    3540:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
    3544:	0064656e 	rsbeq	r6, r4, lr, ror #10
    3548:	706d6973 	rsbvc	r6, sp, r3, ror r9
    354c:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
    3550:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
    3554:	5f65726f 	svcpl	0x0065726f
    3558:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    355c:	6e665f74 	mcrvs	15, 3, r5, cr6, cr4, {3}
    3560:	62697300 	rsbvs	r7, r9, #0, 6
    3564:	676e696c 	strbvs	r6, [lr, -ip, ror #18]!
    3568:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
    356c:	5f343674 	svcpl	0x00343674
    3570:	53550074 	cmppl	r5, #116	; 0x74
    3574:	435f3142 	cmpmi	pc, #-2147483632	; 0x80000010
    3578:	41474b4c 	cmpmi	r7, ip, asr #22
    357c:	76004554 			; <UNDEFINED> instruction: 0x76004554
    3580:	63617073 	cmnvs	r1, #115	; 0x73
    3584:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    3588:	61636f6c 	cmnvs	r3, ip, ror #30
    358c:	5f646574 	svcpl	0x00646574
    3590:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    3594:	665f7463 	ldrbvs	r7, [pc], -r3, ror #8
    3598:	4c43006e 	mcrrmi	0, 6, r0, r3, cr14
    359c:	50435f4b 	subpl	r5, r3, fp, asr #30
    35a0:	4f365f55 	svcmi	0x00365f55
    35a4:	00583452 	subseq	r3, r8, r2, asr r4
    35a8:	4d5f5350 	ldclmi	3, cr5, [pc, #-320]	; 3470 <errno+0x346c>
    35ac:	485f4d45 	ldmdami	pc, {r0, r2, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
    35b0:	65730057 	ldrbvs	r0, [r3, #-87]!	; 0xffffffa9
    35b4:	535f344c 	cmppl	pc, #76, 8	; 0x4c000000
    35b8:	61437465 	cmpvs	r3, r5, ror #8
    35bc:	73700070 	cmnvc	r0, #112	; 0x70
    35c0:	7464665f 	strbtvc	r6, [r4], #-1631	; 0xfffff9a1
    35c4:	70737600 	rsbsvc	r7, r3, r0, lsl #12
    35c8:	5f656361 	svcpl	0x00656361
    35cc:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
    35d0:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    35d4:	61767265 	cmnvs	r6, r5, ror #4
    35d8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    35dc:	006e665f 	rsbeq	r6, lr, pc, asr r6
    35e0:	474b4c43 	strbmi	r4, [fp, -r3, asr #24]
    35e4:	5f455441 	svcpl	0x00455441
    35e8:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
    35ec:	4d524100 	ldfmie	f4, [r2, #-0]
    35f0:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    35f4:	61656c43 	cmnvs	r5, r3, asr #24
    35f8:	61445f6e 	cmpvs	r4, lr, ror #30
    35fc:	70006174 	andvc	r6, r0, r4, ror r1
    3600:	645f6963 	ldrbvs	r6, [pc], #-2403	; 3608 <errno+0x3604>
    3604:	41007665 	tstmi	r0, r5, ror #12
    3608:	53414d52 	movtpl	r4, #7506	; 0x1d52
    360c:	6f434449 	svcvs	0x00434449
    3610:	6f72746e 	svcvs	0x0072746e
    3614:	6b614d6c 	blvs	1856bcc <__bss_end__+0x170db84>
    3618:	6f6f5065 	svcvs	0x006f5065
    361c:	4d44006c 	stclmi	0, cr0, [r4, #-432]	; 0xfffffe50
    3620:	41435f41 	cmpmi	r3, r1, asr #30
    3624:	5f454843 	svcpl	0x00454843
    3628:	435f504f 	cmpmi	pc, #79	; 0x4f
    362c:	4e41454c 	cdpmi	5, 4, cr4, cr1, cr12, {2}
    3630:	564e495f 			; <UNDEFINED> instruction: 0x564e495f
    3634:	44494c41 	strbmi	r4, [r9], #-3137	; 0xfffff3bf
    3638:	00455441 	subeq	r5, r5, r1, asr #8
    363c:	5f78756d 	svcpl	0x0078756d
    3640:	5f737973 	svcpl	0x00737973
    3644:	4c430074 	mcrrmi	0, 7, r0, r3, cr4
    3648:	50465f4b 	subpl	r5, r6, fp, asr #30
    364c:	505f4147 	subspl	r4, pc, r7, asr #2
    3650:	4300304c 	movwmi	r3, #76	; 0x4c
    3654:	465f4b4c 	ldrbmi	r4, [pc], -ip, asr #22
    3658:	5f414750 	svcpl	0x00414750
    365c:	00314c50 	eorseq	r4, r1, r0, asr ip
    3660:	5f4b4c43 	svcpl	0x004b4c43
    3664:	41475046 	cmpmi	r7, r6, asr #32
    3668:	324c505f 	subcc	r5, ip, #95	; 0x5f
    366c:	4b4c4300 	blmi	1314274 <__bss_end__+0x11cb22c>
    3670:	4750465f 			; <UNDEFINED> instruction: 0x4750465f
    3674:	4c505f41 	mrrcmi	15, 4, r5, r0, cr1
    3678:	72690033 	rsbvc	r0, r9, #51	; 0x33
    367c:	79745f71 	ldmdbvc	r4!, {r0, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3680:	745f6570 	ldrbvc	r6, [pc], #-1392	; 3688 <errno+0x3684>
    3684:	616f6900 	cmnvs	pc, r0, lsl #18
    3688:	00636970 	rsbeq	r6, r3, r0, ror r9
    368c:	5f706163 	svcpl	0x00706163
    3690:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    3694:	61630074 	smcvs	12292	; 0x3004
    3698:	6c6c4170 	stfvse	f4, [ip], #-448	; 0xfffffe40
    369c:	7247776f 	subvc	r7, r7, #29097984	; 0x1bc0000
    36a0:	00746e61 	rsbseq	r6, r4, r1, ror #28
    36a4:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    36a8:	6f5f7172 	svcvs	0x005f7172
    36ac:	745f7370 	ldrbvc	r7, [pc], #-880	; 36b4 <errno+0x36b0>
    36b0:	58554d00 	ldmdapl	r5, {r8, sl, fp, lr}^
    36b4:	5249445f 	subpl	r4, r9, #1593835520	; 0x5f000000
    36b8:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    36bc:	554f5f4f 	strbpl	r5, [pc, #-3919]	; 2775 <errno+0x2771>
    36c0:	72660054 	rsbvc	r0, r6, #84	; 0x54
    36c4:	5f656d61 	svcpl	0x00656d61
    36c8:	00706163 	rsbseq	r6, r0, r3, ror #2
    36cc:	41706163 	cmnmi	r0, r3, ror #2
    36d0:	776f6c6c 	strbvc	r6, [pc, -ip, ror #24]!
    36d4:	6e617247 	cdpvs	2, 6, cr7, cr1, cr7, {2}
    36d8:	70655274 	rsbvc	r5, r5, r4, ror r2
    36dc:	4100796c 	tstmi	r0, ip, ror #18
    36e0:	61504d52 	cmpvs	r0, r2, asr sp
    36e4:	61546567 	cmpvs	r4, r7, ror #10
    36e8:	4d656c62 	stclmi	12, cr6, [r5, #-392]!	; 0xfffffe78
    36ec:	64007061 	strvs	r7, [r0], #-97	; 0xffffff9f
    36f0:	44747365 	ldrbtmi	r7, [r4], #-869	; 0xfffffc9b
    36f4:	68747065 	ldmdavs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    36f8:	70737600 	rsbsvc	r7, r3, r0, lsl #12
    36fc:	5f656361 	svcpl	0x00656361
    3700:	5f77656e 	svcpl	0x0077656e
    3704:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    3708:	6e665f73 	mcrvs	15, 3, r5, cr6, cr3, {3}
    370c:	58554d00 	ldmdapl	r5, {r8, sl, fp, lr}^
    3710:	5249445f 	subpl	r4, r9, #1593835520	; 0x5f000000
    3714:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    3718:	4e495f4f 	cdpmi	15, 4, cr5, cr9, cr15, {2}
    371c:	5f737000 	svcpl	0x00737000
    3720:	5f616d64 	svcpl	0x00616d64
    3724:	6f6c6c61 	svcvs	0x006c6c61
    3728:	6e665f63 	cdpvs	15, 6, cr5, cr6, cr3, {3}
    372c:	7300745f 	movwvc	r7, #1119	; 0x45f
    3730:	00746f6c 	rsbseq	r6, r4, ip, ror #30
    3734:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    3738:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    373c:	6578455f 	ldrbvs	r4, [r8, #-1375]!	; 0xfffffaa1
    3740:	65747563 	ldrbvs	r7, [r4, #-1379]!	; 0xfffffa9d
    3744:	6576654e 	ldrbvs	r6, [r6, #-1358]!	; 0xfffffab2
    3748:	6c700072 	ldclvs	0, cr0, [r0], #-456	; 0xfffffe38
    374c:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    3750:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    3754:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    3758:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    375c:	706e695f 	rsbvc	r6, lr, pc, asr r9
    3760:	695f7475 	ldmdbvs	pc, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    3764:	5f74696e 	svcpl	0x0074696e
    3768:	00515249 	subseq	r5, r1, r9, asr #4
    376c:	68636163 	stmdavs	r3!, {r0, r1, r5, r6, r8, sp, lr}^
    3770:	43006465 	movwmi	r6, #1125	; 0x465
    3774:	555f4b4c 	ldrbpl	r4, [pc, #-2892]	; 2c30 <errno+0x2c2c>
    3778:	30545241 	subscc	r5, r4, r1, asr #4
    377c:	4b4c4300 	blmi	1314384 <__bss_end__+0x11cb33c>
    3780:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    3784:	70003154 	andvc	r3, r0, r4, asr r1
    3788:	616d5f73 	smcvs	54771	; 0xd5f3
    378c:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    3790:	5f6e665f 	svcpl	0x006e665f
    3794:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
    3798:	66726574 			; <UNDEFINED> instruction: 0x66726574
    379c:	5f656361 	svcpl	0x00656361
    37a0:	646e6966 	strbtvs	r6, [lr], #-2406	; 0xfffff69a
    37a4:	006e665f 	rsbeq	r6, lr, pc, asr r6
    37a8:	6d5f7370 	ldclvs	3, cr7, [pc, #-448]	; 35f0 <errno+0x35ec>
    37ac:	6f6c6c61 	svcvs	0x006c6c61
    37b0:	706f5f63 	rsbvc	r5, pc, r3, ror #30
    37b4:	00745f73 	rsbseq	r5, r4, r3, ror pc
    37b8:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    37bc:	756f635f 	strbvc	r6, [pc, #-863]!	; 3465 <errno+0x3461>
    37c0:	6900746e 	stmdbvs	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    37c4:	725f7172 	subsvc	r7, pc, #-2147483620	; 0x8000001c
    37c8:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    37cc:	5f726574 	svcpl	0x00726574
    37d0:	76006e66 	strvc	r6, [r0], -r6, ror #28
    37d4:	6f5f616b 	svcvs	0x005f616b
    37d8:	63656a62 	cmnvs	r5, #401408	; 0x62000
    37dc:	00745f74 	rsbseq	r5, r4, r4, ror pc
    37e0:	61707376 	cmnvs	r0, r6, ror r3
    37e4:	745f6563 	ldrbvc	r6, [pc], #-1379	; 37ec <errno+0x37e8>
    37e8:	5f726165 	svcpl	0x00726165
    37ec:	6e776f64 	cdpvs	15, 7, cr6, cr7, cr4, {3}
    37f0:	006e665f 	rsbeq	r6, lr, pc, asr r6
    37f4:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    37f8:	64665f6f 	strbtvs	r5, [r6], #-3951	; 0xfffff091
    37fc:	00745f74 	rsbseq	r5, r4, r4, ror pc
    3800:	5f78756d 	svcpl	0x0078756d
    3804:	6f697067 	svcvs	0x00697067
    3808:	7269645f 	rsbvc	r6, r9, #1593835520	; 0x5f000000
    380c:	434d5300 	movtmi	r5, #54016	; 0xd300
    3810:	4b4c435f 	blmi	1314594 <__bss_end__+0x11cb54c>
    3814:	45544147 	ldrbmi	r4, [r4, #-327]	; 0xfffffeb9
    3818:	6f6e6300 	svcvs	0x006e6300
    381c:	735f6564 	cmpvc	pc, #100, 10	; 0x19000000
    3820:	00657a69 	rsbeq	r7, r5, r9, ror #20
    3824:	344c6573 	strbcc	r6, [ip], #-1395	; 0xfffffa8d
    3828:	6f4e435f 	svcvs	0x004e435f
    382c:	445f6564 	ldrbmi	r6, [pc], #-1380	; 3834 <errno+0x3830>
    3830:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    3834:	5f5f0065 	svcpl	0x005f0065
    3838:	63657865 	cmnvs	r5, #6619136	; 0x650000
    383c:	62617475 	rsbvs	r7, r1, #1962934272	; 0x75000000
    3840:	735f656c 	cmpvc	pc, #108, 10	; 0x1b000000
    3844:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    3848:	4c657300 	stclmi	3, cr7, [r5], #-0
    384c:	52415f34 	subpl	r5, r1, #52, 30	; 0xd0
    3850:	61505f4d 	cmpvs	r0, sp, asr #30
    3854:	555f6567 	ldrbpl	r6, [pc, #-1383]	; 32f5 <errno+0x32f1>
    3858:	70616d6e 	rsbvc	r6, r1, lr, ror #26
    385c:	4d524100 	ldfmie	f4, [r2, #-0]
    3860:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    3864:	41746547 	cmnmi	r4, r7, asr #10
    3868:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    386c:	5f007373 	svcpl	0x00007373
    3870:	5f616b76 	svcpl	0x00616b76
    3874:	006d656d 	rsbeq	r6, sp, sp, ror #10
    3878:	5f4b4c43 	svcpl	0x004b4c43
    387c:	505f4f49 	subspl	r4, pc, r9, asr #30
    3880:	76004c4c 	strvc	r4, [r0], -ip, asr #24
    3884:	63617073 	cmnvs	r1, #115	; 0x73
    3888:	6e755f65 	cdpvs	15, 7, cr5, cr5, cr5, {3}
    388c:	5f70616d 	svcpl	0x0070616d
    3890:	65676170 	strbvs	r6, [r7, #-368]!	; 0xfffffe90
    3894:	6e665f73 	mcrvs	15, 3, r5, cr6, cr3, {3}
    3898:	4c657300 	stclmi	3, cr7, [r5], #-0
    389c:	52415f34 	subpl	r5, r1, #52, 30	; 0xd0
    38a0:	75535f4d 	ldrbvc	r5, [r3, #-3917]	; 0xfffff0b3
    38a4:	53726570 	cmnpl	r2, #112, 10	; 0x1c000000
    38a8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    38ac:	624f6e6f 	subvs	r6, pc, #1776	; 0x6f0
    38b0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    38b4:	616b7600 	cmnvs	fp, r0, lsl #12
    38b8:	7374755f 	cmnvc	r4, #398458880	; 0x17c00000
    38bc:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    38c0:	6c6c615f 	stfvse	f6, [ip], #-380	; 0xfffffe84
    38c4:	615f636f 	cmpvs	pc, pc, ror #6
    38c8:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
    38cc:	415f344c 	cmpmi	pc, ip, asr #8
    38d0:	4c5f4d52 	mrrcmi	13, 5, r4, pc, cr2	; <UNPREDICTABLE>
    38d4:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
    38d8:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    38dc:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
    38e0:	73007463 	movwvc	r7, #1123	; 0x463
    38e4:	70346c65 	eorsvc	r6, r4, r5, ror #24
    38e8:	7374616c 	cmnvc	r4, #108, 2
    38ec:	6f707075 	svcvs	0x00707075
    38f0:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
    38f4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    38f8:	6172665f 	cmnvs	r2, pc, asr r6
    38fc:	615f656d 	cmpvs	pc, sp, ror #10
    3900:	6b760074 	blvs	1d83ad8 <__bss_end__+0x1c3aa90>
    3904:	6c615f61 	stclvs	15, cr5, [r1], #-388	; 0xfffffe7c
    3908:	5f636f6c 	svcpl	0x00636f6c
    390c:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    3910:	74615f65 	strbtvc	r5, [r1], #-3941	; 0xfffff09b
    3914:	6c657300 	stclvs	3, cr7, [r5], #-0
    3918:	616c7034 	cmnvs	ip, r4, lsr r0
    391c:	70757374 	rsbsvc	r7, r5, r4, ror r3
    3920:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3924:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    3928:	6172665f 	cmnvs	r2, pc, asr r6
    392c:	615f656d 	cmpvs	pc, sp, ror #10
    3930:	6b760074 	blvs	1d83b08 <__bss_end__+0x1c3aac0>
    3934:	73635f61 	cmnvc	r3, #388	; 0x184
    3938:	65636170 	strbvs	r6, [r3, #-368]!	; 0xfffffe90
    393c:	6c6c615f 	stfvse	f6, [ip], #-380	; 0xfffffe84
    3940:	7300636f 	movwvc	r6, #879	; 0x36f
    3944:	70346c65 	eorsvc	r6, r4, r5, ror #24
    3948:	7374616c 	cmnvc	r4, #108, 2
    394c:	6f707075 	svcvs	0x00707075
    3950:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
    3954:	5f79706f 	svcpl	0x0079706f
    3958:	5f717269 	svcpl	0x00717269
    395c:	00706163 	rsbseq	r6, r0, r3, ror #2
    3960:	5f6d7261 	svcpl	0x006d7261
    3964:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
    3968:	626f6b5f 	rsbvs	r6, pc, #97280	; 0x17c00
    396c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    3970:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    3974:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    3978:	6b760065 	blvs	1d83b14 <__bss_end__+0x1c3aacc>
    397c:	6c615f61 	stclvs	15, cr5, [r1], #-388	; 0xfffffe7c
    3980:	5f636f6c 	svcpl	0x00636f6c
    3984:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
    3988:	615f7463 	cmpvs	pc, r3, ror #8
    398c:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
    3990:	415f344c 	cmpmi	pc, ip, asr #8
    3994:	535f4d52 	cmppl	pc, #5248	; 0x1480
    3998:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    399c:	65676150 	strbvs	r6, [r7, #-336]!	; 0xfffffeb0
    39a0:	656a624f 	strbvs	r6, [sl, #-591]!	; 0xfffffdb1
    39a4:	74007463 	strvc	r7, [r0], #-1123	; 0xfffffb9d
    39a8:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
    39ac:	6b760074 	blvs	1d83b84 <__bss_end__+0x1c3ab3c>
    39b0:	72665f61 	rsbvc	r5, r6, #388	; 0x184
    39b4:	6f5f6565 	svcvs	0x005f6565
    39b8:	63656a62 	cmnvs	r5, #401408	; 0x62000
    39bc:	626f0074 	rsbvs	r0, pc, #116	; 0x74
    39c0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    39c4:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    39c8:	61726600 	cmnvs	r2, r0, lsl #12
    39cc:	7600656d 	strvc	r6, [r0], -sp, ror #10
    39d0:	615f616b 	cmpvs	pc, fp, ror #2
    39d4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    39d8:	6a626f5f 	bvs	189f75c <__bss_end__+0x1756714>
    39dc:	5f746365 	svcpl	0x00746365
    39e0:	6d5f7461 	cfldrdvs	mvd7, [pc, #-388]	; 3864 <errno+0x3860>
    39e4:	65627961 	strbvs	r7, [r2, #-2401]!	; 0xfffff69f
    39e8:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    39ec:	4c657300 	stclmi	3, cr7, [r5], #-0
    39f0:	52415f34 	subpl	r5, r1, #52, 30	; 0xd0
    39f4:	61505f4d 	cmpvs	r0, sp, asr #30
    39f8:	61546567 	cmpvs	r4, r7, ror #10
    39fc:	4f656c62 	svcmi	0x00656c62
    3a00:	63656a62 	cmnvs	r5, #401408	; 0x62000
    3a04:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
    3a08:	4f5f344c 	svcmi	0x005f344c
    3a0c:	63656a62 	cmnvs	r5, #401408	; 0x62000
    3a10:	70795474 	rsbsvc	r5, r9, r4, ror r4
    3a14:	756f4365 	strbvc	r4, [pc, #-869]!	; 36b7 <errno+0x36b3>
    3a18:	6300746e 	movwvs	r7, #1134	; 0x46e
    3a1c:	755f6e61 	ldrbvc	r6, [pc, #-3681]	; 2bc3 <errno+0x2bbf>
    3a20:	645f6573 	ldrbvs	r6, [pc], #-1395	; 3a28 <errno+0x3a24>
    3a24:	73007665 	movwvc	r7, #1637	; 0x665
    3a28:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    3a2c:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
    3a30:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
    3a34:	61685f51 	cmnvs	r8, r1, asr pc
    3a38:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3a3c:	65730072 	ldrbvs	r0, [r3, #-114]!	; 0xffffff8e
    3a40:	415f344c 	cmpmi	pc, ip, asr #8
    3a44:	535f4d52 	cmppl	pc, #5248	; 0x1480
    3a48:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    3a4c:	624f6e6f 	subvs	r6, pc, #1776	; 0x6f0
    3a50:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    3a54:	63726100 	cmnvs	r2, #0, 2
    3a58:	6f6b5f68 	svcvs	0x006b5f68
    3a5c:	63656a62 	cmnvs	r5, #401408	; 0x62000
    3a60:	65675f74 	strbvs	r5, [r7, #-3956]!	; 0xfffff08c
    3a64:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3a68:	76006570 			; <UNDEFINED> instruction: 0x76006570
    3a6c:	755f616b 	ldrbvc	r6, [pc, #-363]	; 3909 <errno+0x3905>
    3a70:	61707374 	cmnvs	r0, r4, ror r3
    3a74:	665f6563 	ldrbvs	r6, [pc], -r3, ror #10
    3a78:	00656572 	rsbeq	r6, r5, r2, ror r5
    3a7c:	5f616b76 	svcpl	0x00616b76
    3a80:	70737475 	rsbsvc	r7, r3, r5, ror r4
    3a84:	5f656361 	svcpl	0x00656361
    3a88:	6f6c6c61 	svcvs	0x006c6c61
    3a8c:	616d5f63 	cmnvs	sp, r3, ror #30
    3a90:	5f656279 	svcpl	0x00656279
    3a94:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
    3a98:	2f006563 	svccs	0x00006563
    3a9c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    3aa0:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    3aa4:	6f647679 	svcvs	0x00647679
    3aa8:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    3aac:	2f346c65 	svccs	0x00346c65
    3ab0:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3ab4:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    3ab8:	6169726f 	cmnvs	r9, pc, ror #4
    3abc:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    3ac0:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    3ac4:	2f747365 	svccs	0x00747365
    3ac8:	6a6f7270 	bvs	1be0490 <__bss_end__+0x1a97448>
    3acc:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    3ad0:	4c65732f 	stclmi	3, cr7, [r5], #-188	; 0xffffff44
    3ad4:	696c5f34 	stmdbvs	ip!, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
    3ad8:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 3958 <errno+0x3954>
    3adc:	65736269 	ldrbvs	r6, [r3, #-617]!	; 0xfffffd97
    3ae0:	6c70346c 	cfldrdvs	mvd3, [r0], #-432	; 0xfffffe50
    3ae4:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    3ae8:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    3aec:	72732f74 	rsbsvc	r2, r3, #116, 30	; 0x1d0
    3af0:	65642f63 	strbvs	r2, [r4, #-3939]!	; 0xfffff09d
    3af4:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    3af8:	6300632e 	movwvs	r6, #814	; 0x32e
    3afc:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
    3b00:	635f7665 	cmpvs	pc, #105906176	; 0x6500000
    3b04:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    3b08:	5f6b6361 	svcpl	0x006b6361
    3b0c:	68630074 	stmdavs	r3!, {r2, r4, r5, r6}^
    3b10:	65647261 	strbvs	r7, [r4, #-609]!	; 0xfffffd9f
    3b14:	6d785f76 	ldclvs	15, cr5, [r8, #-472]!	; 0xfffffe28
    3b18:	645f7469 	ldrbvs	r7, [pc], #-1129	; 3b20 <errno+0x3b1c>
    3b1c:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    3b20:	6f747069 	svcvs	0x00747069
    3b24:	72770072 	rsbsvc	r0, r7, #114	; 0x72
    3b28:	5f657469 	svcpl	0x00657469
    3b2c:	63736564 	cmnvs	r3, #100, 10	; 0x19000000
    3b30:	74706972 	ldrbtvc	r6, [r0], #-2418	; 0xfffff68e
    3b34:	5000726f 	andpl	r7, r0, pc, ror #4
    3b38:	45535f53 	ldrbmi	r5, [r3, #-3923]	; 0xfffff0ad
    3b3c:	4c414952 	mcrrmi	9, 5, r4, r1, cr2	; <UNPREDICTABLE>
    3b40:	73750030 	cmnvc	r5, #48	; 0x30
    3b44:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    3b48:	6f736e6f 	svcvs	0x00736e6f
    3b4c:	7000656c 	andvc	r6, r0, ip, ror #10
    3b50:	68635f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3b54:	65647261 	strbvs	r7, [r4, #-609]!	; 0xfffffd9f
    3b58:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    3b5c:	6300745f 	movwvs	r7, #1119	; 0x45f
    3b60:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
    3b64:	735f7665 	cmpvc	pc, #105906176	; 0x6500000
    3b68:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    3b6c:	65720073 	ldrbvs	r0, [r2, #-115]!	; 0xffffff8d
    3b70:	645f6461 	ldrbvs	r6, [pc], #-1121	; 3b78 <errno+0x3b74>
    3b74:	72637365 	rsbvc	r7, r3, #-1811939327	; 0x94000001
    3b78:	6f747069 	svcvs	0x00747069
    3b7c:	65720072 	ldrbvs	r0, [r2, #-114]!	; 0xffffff8e
    3b80:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    3b84:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    3b88:	6f736e6f 	svcvs	0x00736e6f
    3b8c:	6400656c 	strvs	r6, [r0], #-1388	; 0xfffffa94
    3b90:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
    3b94:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    3b98:	62006574 	andvs	r6, r0, #116, 10	; 0x1d000000
    3b9c:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    3ba0:	6172745f 	cmnvs	r2, pc, asr r4
    3ba4:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
    3ba8:	00646572 	rsbeq	r6, r4, r2, ror r5
    3bac:	746e6573 	strbtvc	r6, [lr], #-1395	; 0xfffffa8d
    3bb0:	61686300 	cmnvs	r8, r0, lsl #6
    3bb4:	76656472 			; <UNDEFINED> instruction: 0x76656472
    3bb8:	0064695f 	rsbeq	r6, r4, pc, asr r9
    3bbc:	52414843 	subpl	r4, r1, #4390912	; 0x430000
    3bc0:	5f564544 	svcpl	0x00564544
    3bc4:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
    3bc8:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; 3a54 <errno+0x3a50>
    3bcc:	54454c50 	strbpl	r4, [r5], #-3152	; 0xfffff3b0
    3bd0:	5f5f0045 	svcpl	0x005f0045
    3bd4:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    3bd8:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    3bdc:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    3be0:	6f682f00 	svcvs	0x00682f00
    3be4:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3be8:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    3bec:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    3bf0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3bf4:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3bf8:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    3bfc:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    3c00:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    3c04:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3c08:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    3c0c:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    3c10:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    3c14:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    3c18:	5f344c65 	svcpl	0x00344c65
    3c1c:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3c20:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3c24:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3c28:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    3c2c:	70707573 	rsbsvc	r7, r0, r3, ror r5
    3c30:	2f74726f 	svccs	0x0074726f
    3c34:	2f637273 	svccs	0x00637273
    3c38:	69726573 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
    3c3c:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    3c40:	41484300 	mrsmi	r4, (UNDEF: 120)
    3c44:	56454452 			; <UNDEFINED> instruction: 0x56454452
    3c48:	4154535f 	cmpmi	r4, pc, asr r3
    3c4c:	41435f54 	cmpmi	r3, r4, asr pc
    3c50:	4c45434e 	mcrrmi	3, 4, r4, r5, cr14
    3c54:	0044454c 	subeq	r4, r4, ip, asr #10
    3c58:	635f7370 	cmpvs	pc, #112, 6	; 0xc0000001
    3c5c:	5f766564 	svcpl	0x00766564
    3c60:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
    3c64:	00726168 	rsbseq	r6, r2, r8, ror #2
    3c68:	514e595a 	cmppl	lr, sl, asr r9
    3c6c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    3c70:	5a003054 	bpl	fdc8 <errno+0xfdc4>
    3c74:	5f514e59 	svcpl	0x00514e59
    3c78:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    3c7c:	64760031 	ldrbtvs	r0, [r6], #-49	; 0xffffffcf
    3c80:	00617461 	rsbeq	r7, r1, r1, ror #8
    3c84:	635f7370 	cmpvs	pc, #112, 6	; 0xc0000001
    3c88:	5f766564 	svcpl	0x00766564
    3c8c:	63746567 	cmnvs	r4, #432013312	; 0x19c00000
    3c90:	00726168 	rsbseq	r6, r2, r8, ror #2
    3c94:	6c705f5f 	ldclvs	15, cr5, [r0], #-380	; 0xfffffe84
    3c98:	705f7461 	subsvc	r7, pc, r1, ror #8
    3c9c:	68637475 	stmdavs	r3!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    3ca0:	70007261 	andvc	r7, r0, r1, ror #4
    3ca4:	68635f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3ca8:	65647261 	strbvs	r7, [r4, #-609]!	; 0xfffffd9f
    3cac:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    3cb0:	5f737000 	svcpl	0x00737000
    3cb4:	006b6c63 	rsbeq	r6, fp, r3, ror #24
    3cb8:	706d6574 	rsbvc	r6, sp, r4, ror r5
    3cbc:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    3cc0:	00656369 	rsbeq	r6, r5, r9, ror #6
    3cc4:	535f5350 	cmppl	pc, #80, 6	; 0x40000001
    3cc8:	41495245 	cmpmi	r9, r5, asr #4
    3ccc:	45445f4c 	strbmi	r5, [r4, #-3916]	; 0xfffff0b4
    3cd0:	4c554146 	ldfmie	f4, [r5], {70}	; 0x46
    3cd4:	6f630054 	svcvs	0x00630054
    3cd8:	6c6f736e 	stclvs	3, cr7, [pc], #-440	; 3b28 <errno+0x3b24>
    3cdc:	65645f65 	strbvs	r5, [r4, #-3941]!	; 0xfffff09b
    3ce0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    3ce4:	74796200 	ldrbtvc	r6, [r9], #-512	; 0xfffffe00
    3ce8:	725f7365 	subsvc	r7, pc, #-1811939327	; 0x94000001
    3cec:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    3cf0:	64657473 	strbtvs	r7, [r5], #-1139	; 0xfffffb8d
    3cf4:	5f535000 	svcpl	0x00535000
    3cf8:	49524553 	ldmdbmi	r2, {r0, r1, r4, r6, r8, sl, lr}^
    3cfc:	00314c41 	eorseq	r4, r1, r1, asr #24
    3d00:	706f6f69 	rsbvc	r6, pc, r9, ror #30
    3d04:	48430073 	stmdami	r3, {r0, r1, r4, r5, r6}^
    3d08:	45445241 	strbmi	r5, [r4, #-577]	; 0xfffffdbf
    3d0c:	54535f56 	ldrbpl	r5, [r3], #-3926	; 0xfffff0aa
    3d10:	455f5441 	ldrbmi	r5, [pc, #-1089]	; 38d7 <errno+0x38d3>
    3d14:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
    3d18:	41484300 	mrsmi	r4, (UNDEF: 120)
    3d1c:	56454452 			; <UNDEFINED> instruction: 0x56454452
    3d20:	4154535f 	cmpmi	r4, pc, asr r3
    3d24:	4e495f54 	mcrmi	15, 2, r5, cr9, cr4, {2}
    3d28:	504d4f43 	subpl	r4, sp, r3, asr #30
    3d2c:	4554454c 	ldrbmi	r4, [r4, #-1356]	; 0xfffffab4
    3d30:	6b6f7400 	blvs	1be0d38 <__bss_end__+0x1a97cf0>
    3d34:	5f006e65 	svcpl	0x00006e65
    3d38:	616c705f 	qdsubvs	r7, pc, ip	; <UNPREDICTABLE>
    3d3c:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    3d40:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    3d44:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    3d48:	65730074 	ldrbvs	r0, [r3, #-116]!	; 0xffffff8c
    3d4c:	6c70346c 	cfldrdvs	mvd3, [r0], #-432	; 0xfffffe50
    3d50:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    3d54:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    3d58:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    3d5c:	635f6863 	cmpvs	pc, #6488064	; 0x630000
    3d60:	5f79706f 	svcpl	0x0079706f
    3d64:	5f717269 	svcpl	0x00717269
    3d68:	00706163 	rsbseq	r6, r0, r3, ror #2
    3d6c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    3d70:	6d69735f 	stclvs	3, cr7, [r9, #-380]!	; 0xfffffe84
    3d74:	5f656c70 	svcpl	0x00656c70
    3d78:	5f746567 	svcpl	0x00746567
    3d7c:	5f515249 	svcpl	0x00515249
    3d80:	67697274 			; <UNDEFINED> instruction: 0x67697274
    3d84:	5f726567 	svcpl	0x00726567
    3d88:	00757063 	rsbseq	r7, r5, r3, rrx
    3d8c:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    3d90:	6f682f00 	svcvs	0x00682f00
    3d94:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    3d98:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    3d9c:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    3da0:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3da4:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    3da8:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    3dac:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    3db0:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    3db4:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    3db8:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    3dbc:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    3dc0:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    3dc4:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
    3dc8:	5f344c65 	svcpl	0x00344c65
    3dcc:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    3dd0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3dd4:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3dd8:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    3ddc:	70707573 	rsbsvc	r7, r0, r3, ror r5
    3de0:	2f74726f 	svccs	0x0074726f
    3de4:	2f637273 	svccs	0x00637273
    3de8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    3dec:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    3df0:	7665642f 	strbtvc	r6, [r5], -pc, lsr #8
    3df4:	2e656369 	cdpcs	3, 6, cr6, cr5, cr9, {3}
    3df8:	72610063 	rsbvc	r0, r1, #99	; 0x63
    3dfc:	735f6863 	cmpvc	pc, #6488064	; 0x630000
    3e00:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
    3e04:	65675f65 	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
    3e08:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
    3e0c:	72745f51 	rsbsvc	r5, r4, #324	; 0x144
    3e10:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
    3e14:	61700072 	cmnvs	r0, r2, ror r0
    3e18:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
    3e1c:	72617500 	rsbvc	r7, r1, #0, 10
    3e20:	695f3074 	ldmdbvs	pc, {r2, r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
    3e24:	00737172 	rsbseq	r7, r3, r2, ror r1
    3e28:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    3e2c:	006e665f 	rsbeq	r6, lr, pc, asr r6
    3e30:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3d7c <errno+0x3d78>
    3e34:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    3e38:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    3e3c:	2f676e6f 	svccs	0x00676e6f
    3e40:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3e44:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3e48:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    3e4c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    3e50:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    3e54:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3e58:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    3e5c:	6f72702f 	svcvs	0x0072702f
    3e60:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    3e64:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    3e68:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    3e6c:	2f736269 	svccs	0x00736269
    3e70:	7062696c 	rsbvc	r6, r2, ip, ror #18
    3e74:	7374616c 	cmnvc	r4, #108, 2
    3e78:	6f707075 	svcvs	0x00707075
    3e7c:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    3e80:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 3cc0 <errno+0x3cbc>
    3e84:	2f686361 	svccs	0x00686361
    3e88:	716e797a 	smcvc	59290	; 0xe79a
    3e8c:	6168632f 	cmnvs	r8, pc, lsr #6
    3e90:	76656472 			; <UNDEFINED> instruction: 0x76656472
    3e94:	7000632e 	andvc	r6, r0, lr, lsr #6
    3e98:	64635f73 	strbtvs	r5, [r3], #-3955	; 0xfffff08d
    3e9c:	695f7665 	ldmdbvs	pc, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    3ea0:	0074696e 	rsbseq	r6, r4, lr, ror #18
    3ea4:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    3ea8:	72695f31 	rsbvc	r5, r9, #49, 30	; 0xc4
    3eac:	70007371 	andvc	r7, r0, r1, ror r3
    3eb0:	64635f73 	strbtvs	r5, [r3], #-3955	; 0xfffff08d
    3eb4:	735f7665 	cmpvc	pc, #105906176	; 0x6500000
    3eb8:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    3ebc:	6e695f63 	cdpvs	15, 6, cr5, cr9, cr3, {3}
    3ec0:	64007469 	strvs	r7, [r0], #-1129	; 0xfffffb97
    3ec4:	645f7665 	ldrbvs	r7, [pc], #-1637	; 3ecc <errno+0x3ec8>
    3ec8:	006e6665 	rsbeq	r6, lr, r5, ror #12
    3ecc:	49524150 	ldmdbmi	r2, {r4, r6, r8, lr}^
    3ed0:	4f5f5954 	svcmi	0x005f5954
    3ed4:	7a004444 	bvc	14fec <seL4_CapRights_new+0x124>
    3ed8:	5f716e79 	svcpl	0x00716e79
    3edc:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    3ee0:	616e655f 	cmnvs	lr, pc, asr r5
    3ee4:	5f656c62 	svcpl	0x00656c62
    3ee8:	66007874 			; <UNDEFINED> instruction: 0x66007874
    3eec:	64776f6c 	ldrbtvs	r6, [r7], #-3948	; 0xfffff094
    3ef0:	75006c65 	strvc	r6, [r0, #-3173]	; 0xfffff39b
    3ef4:	5f747261 	svcpl	0x00747261
    3ef8:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
    3efc:	00726168 	rsbseq	r6, r2, r8, ror #2
    3f00:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; 3e4c <errno+0x3e48>
    3f04:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xfffff09b
    3f08:	6476796e 	ldrbtvs	r7, [r6], #-2414	; 0xfffff692
    3f0c:	2f676e6f 	svccs	0x00676e6f
    3f10:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    3f14:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    3f18:	75742d34 	ldrbvc	r2, [r4, #-3380]!	; 0xfffff2cc
    3f1c:	69726f74 	ldmdbvs	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    3f20:	2d736c61 	ldclcs	12, cr6, [r3, #-388]!	; 0xfffffe7c
    3f24:	696e616d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    3f28:	74736566 	ldrbtvc	r6, [r3], #-1382	; 0xfffffa9a
    3f2c:	6f72702f 	svcvs	0x0072702f
    3f30:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    3f34:	74752f73 	ldrbtvc	r2, [r5], #-3955	; 0xfffff08d
    3f38:	6c5f6c69 	mrrcvs	12, 6, r6, pc, cr9	; <UNPREDICTABLE>
    3f3c:	2f736269 	svccs	0x00736269
    3f40:	7062696c 	rsbvc	r6, r2, ip, ror #18
    3f44:	7374616c 	cmnvc	r4, #108, 2
    3f48:	6f707075 	svcvs	0x00707075
    3f4c:	732f7472 			; <UNDEFINED> instruction: 0x732f7472
    3f50:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 3d90 <errno+0x3d8c>
    3f54:	2f686361 	svccs	0x00686361
    3f58:	716e797a 	smcvc	59290	; 0xe79a
    3f5c:	7265732f 	rsbvc	r7, r5, #-1140850688	; 0xbc000000
    3f60:	2e6c6169 	powcsez	f6, f4, #1.0
    3f64:	797a0063 	ldmdbvc	sl!, {r0, r1, r5, r6}^
    3f68:	755f716e 	ldrbvc	r7, [pc, #-366]	; 3e02 <errno+0x3dfe>
    3f6c:	5f747261 	svcpl	0x00747261
    3f70:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    3f74:	6e797a00 	vaddvs.f32	s15, s18, s0
    3f78:	61755f71 	cmnvs	r5, r1, ror pc
    3f7c:	645f7472 	ldrbvs	r7, [pc], #-1138	; 3f84 <errno+0x3f80>
    3f80:	695f7665 	ldmdbvs	pc, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    3f84:	0074696e 	rsbseq	r6, r4, lr, ror #18
    3f88:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    3f8c:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    3f90:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    3f94:	61686300 	cmnvs	r8, r0, lsl #6
    3f98:	69735f72 	ldmdbvs	r3!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3f9c:	7000657a 	andvc	r6, r0, sl, ror r5
    3fa0:	6f695f73 	svcvs	0x00695f73
    3fa4:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    3fa8:	75616200 	strbvc	r6, [r1, #-512]!	; 0xfffffe00
    3fac:	6e656764 	cdpvs	7, 6, cr6, cr5, cr4, {3}
    3fb0:	64627200 	strbtvs	r7, [r2], #-512	; 0xfffffe00
    3fb4:	7a007669 	bvc	21960 <loop16+0x2c>
    3fb8:	5f716e79 	svcpl	0x00716e79
    3fbc:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    3fc0:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    3fc4:	00745f73 	rsbseq	r5, r4, r3, ror pc
    3fc8:	716e797a 	smcvc	59290	; 0xe79a
    3fcc:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    3fd0:	6e655f74 	mcrvs	15, 3, r5, cr5, cr4, {3}
    3fd4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    3fd8:	0078725f 	rsbseq	r7, r8, pc, asr r2
    3fdc:	6f747872 	svcvs	0x00747872
    3fe0:	62007475 	andvs	r7, r0, #1962934272	; 0x75000000
    3fe4:	5f747365 	svcpl	0x00747365
    3fe8:	64756162 	ldrbtvs	r6, [r5], #-354	; 0xfffffe9e
    3fec:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
    3ff0:	7500726f 	strvc	r7, [r0, #-623]	; 0xfffffd91
    3ff4:	5f747261 	svcpl	0x00747261
    3ff8:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    3ffc:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    4000:	63007172 	movwvs	r7, #370	; 0x172
    4004:	5f636c61 	svcpl	0x00636c61
    4008:	64756162 	ldrbtvs	r6, [r5], #-354	; 0xfffffe9e
    400c:	52415000 	subpl	r5, r1, #0
    4010:	5f595449 	svcpl	0x00595449
    4014:	454e4f4e 	strbmi	r4, [lr, #-3918]	; 0xfffff0b2
    4018:	72657300 	rsbvc	r7, r5, #0, 6
    401c:	5f6c6169 	svcpl	0x006c6169
    4020:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    4024:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
    4028:	797a0065 	ldmdbvc	sl!, {r0, r2, r5, r6}^
    402c:	755f716e 	ldrbvc	r7, [pc, #-366]	; 3ec6 <errno+0x3ec2>
    4030:	5f747261 	svcpl	0x00747261
    4034:	5f746567 	svcpl	0x00746567
    4038:	76697270 			; <UNDEFINED> instruction: 0x76697270
    403c:	646f6d00 	strbtvs	r6, [pc], #-3328	; 4044 <errno+0x4040>
    4040:	72636d65 	rsbvc	r6, r3, #6464	; 0x1940
    4044:	6e797a00 	vaddvs.f32	s15, s18, s0
    4048:	61755f71 	cmnvs	r5, r1, ror pc
    404c:	725f7472 	subsvc	r7, pc, #1912602624	; 0x72000000
    4050:	00736765 	rsbseq	r6, r3, r5, ror #14
    4054:	706f7473 	rsbvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    4058:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    405c:	6f6d0073 	svcvs	0x006d0073
    4060:	736d6564 	cmnvc	sp, #100, 10	; 0x19000000
    4064:	78720072 	ldmdavc	r2!, {r1, r4, r5, r6}^
    4068:	62006d77 	andvs	r6, r0, #7616	; 0x1dc0
    406c:	64647561 	strbtvs	r7, [r4], #-1377	; 0xfffffa9f
    4070:	63007669 	movwvs	r7, #1641	; 0x669
    4074:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
    4078:	6d5f7665 	ldclvs	6, cr7, [pc, #-404]	; 3eec <errno+0x3ee8>
    407c:	66007061 	strvs	r7, [r0], -r1, rrx
    4080:	006f6669 	rsbeq	r6, pc, r9, ror #12
    4084:	76696472 			; <UNDEFINED> instruction: 0x76696472
    4088:	65730038 	ldrbvs	r0, [r3, #-56]!	; 0xffffffc8
    408c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    4090:	7261705f 	rsbvc	r7, r1, #95	; 0x5f
    4094:	00797469 	rsbseq	r7, r9, r9, ror #8
    4098:	6d777874 	ldclvs	8, cr7, [r7, #-464]!	; 0xfffffe30
    409c:	6e797a00 	vaddvs.f32	s15, s18, s0
    40a0:	61755f71 	cmnvs	r5, r1, ror pc
    40a4:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
    40a8:	5f636c61 	svcpl	0x00636c61
    40ac:	64756162 	ldrbtvs	r6, [r5], #-354	; 0xfffffe9e
    40b0:	7669645f 			; <UNDEFINED> instruction: 0x7669645f
    40b4:	62720073 	rsbsvs	r0, r2, #115	; 0x73
    40b8:	00647561 	rsbeq	r7, r4, r1, ror #10
    40bc:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    40c0:	6174735f 	cmnvs	r4, pc, asr r3
    40c4:	5f636974 	svcpl	0x00636974
    40c8:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    40cc:	52415000 	subpl	r5, r1, #0
    40d0:	5f595449 	svcpl	0x00595449
    40d4:	4e455645 	cdpmi	6, 4, cr5, cr5, cr5, {2}
    40d8:	6e797a00 	vaddvs.f32	s15, s18, s0
    40dc:	61755f71 	cmnvs	r5, r1, ror pc
    40e0:	735f7472 	cmpvc	pc, #1912602624	; 0x72000000
    40e4:	625f7465 	subsvs	r7, pc, #1694498816	; 0x65000000
    40e8:	00647561 	rsbeq	r7, r4, r1, ror #10
    40ec:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    40f0:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
    40f4:	2f006574 	svccs	0x00006574
    40f8:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    40fc:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4100:	6f647679 	svcvs	0x00647679
    4104:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    4108:	2f346c65 	svccs	0x00346c65
    410c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4110:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    4114:	6169726f 	cmnvs	r9, pc, ror #4
    4118:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    411c:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    4120:	2f747365 	svccs	0x00747365
    4124:	6a6f7270 	bvs	1be0aec <__bss_end__+0x1a97aa4>
    4128:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    412c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    4130:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4134:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 3fb4 <errno+0x3fb0>
    4138:	6c706269 	lfmvs	f6, 2, [r0], #-420	; 0xfffffe5c
    413c:	75737461 	ldrbvc	r7, [r3, #-1121]!	; 0xfffffb9f
    4140:	726f7070 	rsbvc	r7, pc, #112	; 0x70
    4144:	72732f74 	rsbsvc	r2, r3, #116, 30	; 0x1d0
    4148:	65732f63 	ldrbvs	r2, [r3, #-3939]!	; 0xfffff09d
    414c:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    4150:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
    4154:	5f747261 	svcpl	0x00747261
    4158:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    415c:	72617000 	rsbvc	r7, r1, #0
    4160:	615f6573 	cmpvs	pc, r3, ror r5	; <UNPREDICTABLE>
    4164:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    4168:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    416c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    4170:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    4174:	64660073 	strbtvs	r0, [r6], #-115	; 0xffffff8d
    4178:	5f323374 	svcpl	0x00323374
    417c:	635f6f74 	cmpvs	pc, #116, 30	; 0x1d0
    4180:	64007570 	strvs	r7, [r0], #-1392	; 0xfffffa90
    4184:	625f6274 	subsvs	r6, pc, #116, 4	; 0x40000007
    4188:	00626f6c 	rsbeq	r6, r2, ip, ror #30
    418c:	706f7270 	rsbvc	r7, pc, r0, ror r2	; <UNPREDICTABLE>
    4190:	6e656c5f 	mcrvs	12, 3, r6, cr5, cr15, {2}
    4194:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    4198:	544e495f 	strbpl	r4, [lr], #-2399	; 0xfffff6a1
    419c:	46464f5f 			; <UNDEFINED> instruction: 0x46464f5f
    41a0:	00544553 	subseq	r4, r4, r3, asr r5
    41a4:	5f6d7261 	svcpl	0x006d7261
    41a8:	5f636967 	svcpl	0x00636967
    41ac:	00727470 	rsbseq	r7, r2, r0, ror r4
    41b0:	5f6d7261 	svcpl	0x006d7261
    41b4:	5f636967 	svcpl	0x00636967
    41b8:	706d6f63 	rsbvc	r6, sp, r3, ror #30
    41bc:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
    41c0:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
    41c4:	00747369 	rsbseq	r7, r4, r9, ror #6
    41c8:	5f545845 	svcpl	0x00545845
    41cc:	5f544e49 	svcpl	0x00544e49
    41d0:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    41d4:	46464f5f 			; <UNDEFINED> instruction: 0x46464f5f
    41d8:	00544553 	subseq	r4, r4, r3, asr r5
    41dc:	73726170 	cmnvc	r2, #112, 2
    41e0:	665f7265 	ldrbvs	r7, [pc], -r5, ror #4
    41e4:	7261006e 	rsbvc	r0, r1, #110	; 0x6e
    41e8:	69675f6d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    41ec:	64660063 	strbtvs	r0, [r6], #-99	; 0xffffff9d
    41f0:	5f323374 	svcpl	0x00323374
    41f4:	6700646c 	strvs	r6, [r0, -ip, ror #8]
    41f8:	695f7465 	ldmdbvs	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    41fc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    4200:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    4204:	72705f73 	rsbsvc	r5, r0, #460	; 0x1cc
    4208:	7000706f 	andvc	r7, r0, pc, rrx
    420c:	72695f73 	rsbvc	r5, r9, #460	; 0x1cc
    4210:	69686371 	stmdbvs	r8!, {r0, r4, r5, r6, r8, r9, sp, lr}^
    4214:	682f0070 	stmdavs	pc!, {r4, r5, r6}	; <UNPREDICTABLE>
    4218:	2f656d6f 	svccs	0x00656d6f
    421c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    4220:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    4224:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    4228:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    422c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    4230:	6f747574 	svcvs	0x00747574
    4234:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    4238:	616d2d73 	smcvs	53971	; 0xd2d3
    423c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    4240:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    4244:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    4248:	2f737463 	svccs	0x00737463
    424c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    4250:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    4254:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4258:	616c7062 	cmnvs	ip, r2, rrx
    425c:	70757374 	rsbsvc	r7, r5, r4, ror r3
    4260:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4264:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    4268:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    426c:	72612f68 	rsbvc	r2, r1, #104, 30	; 0x1a0
    4270:	72692f6d 	rsbvc	r2, r9, #436	; 0x1b4
    4274:	69686371 	stmdbvs	r8!, {r0, r4, r5, r6, r8, r9, sp, lr}^
    4278:	69672f70 	stmdbvs	r7!, {r4, r5, r6, r8, r9, sl, fp, sp}^
    427c:	00632e63 	rsbeq	r2, r3, r3, ror #28
    4280:	5f717269 	svcpl	0x00717269
    4284:	6b6c6177 	blvs	1b1c868 <__bss_end__+0x19d3820>
    4288:	5f62635f 	svcpl	0x0062635f
    428c:	745f6e66 	ldrbvc	r6, [pc], #-3686	; 4294 <errno+0x4290>
    4290:	5f737000 	svcpl	0x00737000
    4294:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
    4298:	5f706968 	svcpl	0x00706968
    429c:	73726170 	cmnvc	r2, #112, 2
    42a0:	6e665f65 	cdpvs	15, 6, cr5, cr6, cr5, {3}
    42a4:	6e00745f 	cfmvsrvs	mvf0, r7
    42a8:	695f6d75 	ldmdbvs	pc, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    42ac:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    42b0:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    42b4:	64660073 	strbtvs	r0, [r6], #-115	; 0xffffff8d
    42b8:	5f323374 	svcpl	0x00323374
    42bc:	6e690074 	mcrvs	0, 3, r0, cr9, cr4, {3}
    42c0:	635f7274 	cmpvs	pc, #116, 4	; 0x40000007
    42c4:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    42c8:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
    42cc:	68705f72 	ldmdavs	r0!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    42d0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    42d4:	6f740065 	svcvs	0x00740065
    42d8:	5f6c6174 	svcpl	0x006c6174
    42dc:	6c6c6563 	cfstr64vs	mvdx6, [ip], #-396	; 0xfffffe74
    42e0:	75630073 	strbvc	r0, [r3, #-115]!	; 0xffffff8d
    42e4:	45007272 	strmi	r7, [r0, #-626]	; 0xfffffd8e
    42e8:	495f5458 	ldmdbmi	pc, {r3, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    42ec:	435f544e 	cmpmi	pc, #1308622848	; 0x4e000000
    42f0:	52544e4f 	subspl	r4, r4, #1264	; 0x4f0
    42f4:	454c4c4f 	strbmi	r4, [ip, #-3151]	; 0xfffff3b1
    42f8:	464f5f52 			; <UNDEFINED> instruction: 0x464f5f52
    42fc:	54455346 	strbpl	r5, [r5], #-838	; 0xfffffcba
    4300:	72747300 	rsbsvc	r7, r4, #0, 6
    4304:	00656469 	rsbeq	r6, r5, r9, ror #8
    4308:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    430c:	7172695f 	cmnvc	r2, pc, asr r9
    4310:	5f737000 	svcpl	0x00737000
    4314:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
    4318:	5f706968 	svcpl	0x00706968
    431c:	73690074 	cmnvc	r9, #116	; 0x74
    4320:	7478655f 	ldrbtvc	r6, [r8], #-1375	; 0xfffffaa1
    4324:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    4328:	756e0064 	strbvc	r0, [lr, #-100]!	; 0xffffff9c
    432c:	6e695f6d 	cdpvs	15, 6, cr5, cr9, cr13, {3}
    4330:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    4334:	5f747075 	svcpl	0x00747075
    4338:	6c6c6563 	cfstr64vs	mvdx6, [ip], #-396	; 0xfffffe74
    433c:	58450073 	stmdapl	r5, {r0, r1, r4, r5, r6}^
    4340:	4e495f54 	mcrmi	15, 2, r5, cr9, cr4, {2}
    4344:	46415f54 			; <UNDEFINED> instruction: 0x46415f54
    4348:	494e4946 	stmdbmi	lr, {r1, r2, r6, r8, fp, lr}^
    434c:	4f5f5954 	svcmi	0x005f5954
    4350:	45534646 	ldrbmi	r4, [r3, #-1606]	; 0xfffff9ba
    4354:	72610054 	rsbvc	r0, r1, #84	; 0x54
    4358:	69675f6d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    435c:	5f337663 	svcpl	0x00337663
    4360:	706d6f63 	rsbvc	r6, sp, r3, ror #30
    4364:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
    4368:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
    436c:	00747369 	rsbseq	r7, r4, r9, ror #6
    4370:	5f545845 	svcpl	0x00545845
    4374:	5f544e49 	svcpl	0x00544e49
    4378:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
    437c:	46464f5f 			; <UNDEFINED> instruction: 0x46464f5f
    4380:	00544553 	subseq	r4, r4, r3, asr r5
    4384:	5f717269 	svcpl	0x00717269
    4388:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    438c:	6f682f00 	svcvs	0x00682f00
    4390:	732f656d 			; <UNDEFINED> instruction: 0x732f656d
    4394:	76796e75 			; <UNDEFINED> instruction: 0x76796e75
    4398:	676e6f64 	strbvs	r6, [lr, -r4, ror #30]!
    439c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    43a0:	65732f34 	ldrbvs	r2, [r3, #-3892]!	; 0xfffff0cc
    43a4:	742d346c 	strtvc	r3, [sp], #-1132	; 0xfffffb94
    43a8:	726f7475 	rsbvc	r7, pc, #1962934272	; 0x75000000
    43ac:	736c6169 	cmnvc	ip, #1073741850	; 0x4000001a
    43b0:	6e616d2d 	cdpvs	13, 6, cr6, cr1, cr13, {1}
    43b4:	73656669 	cmnvc	r5, #110100480	; 0x6900000
    43b8:	72702f74 	rsbsvc	r2, r0, #116, 30	; 0x1d0
    43bc:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    43c0:	752f7374 	strvc	r7, [pc, #-884]!	; 4054 <errno+0x4050>
    43c4:	5f6c6974 	svcpl	0x006c6974
    43c8:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
    43cc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    43d0:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    43d4:	70707573 	rsbsvc	r7, r0, r3, ror r5
    43d8:	2f74726f 	svccs	0x0074726f
    43dc:	2f637273 	svccs	0x00637273
    43e0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    43e4:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    43e8:	7172692f 	cmnvc	r2, pc, lsr #18
    43ec:	70696863 	rsbvc	r6, r9, r3, ror #16
    43f0:	6369672f 	cmnvs	r9, #12320768	; 0xbc0000
    43f4:	632e3376 			; <UNDEFINED> instruction: 0x632e3376
    43f8:	71726900 	cmnvc	r2, r0, lsl #18
    43fc:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    4400:	66615f65 	strbtvs	r5, [r1], -r5, ror #30
    4404:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
    4408:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
    440c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    4410:	6900656c 	stmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    4414:	5f72746e 	svcpl	0x0072746e
    4418:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    441c:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
    4420:	6f5f7265 	svcvs	0x005f7265
    4424:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
    4428:	72610074 	rsbvc	r0, r1, #116	; 0x74
    442c:	69675f6d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4430:	5f337663 	svcpl	0x00337663
    4434:	00727470 	rsbseq	r7, r2, r0, ror r4
    4438:	73726170 	cmnvc	r2, #112, 2
    443c:	72615f65 	rsbvc	r5, r1, #404	; 0x194
    4440:	69675f6d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4444:	5f337663 	svcpl	0x00337663
    4448:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    444c:	70757272 	rsbsvc	r7, r5, r2, ror r2
    4450:	69007374 	stmdbvs	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    4454:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    4458:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    445c:	6c65635f 	stclvs	3, cr6, [r5], #-380	; 0xfffffe84
    4460:	705f736c 	subsvc	r7, pc, ip, ror #6
    4464:	00706f72 	rsbseq	r6, r0, r2, ror pc
    4468:	5f6d7261 	svcpl	0x006d7261
    446c:	76636967 	strbtvc	r6, [r3], -r7, ror #18
    4470:	682f0033 	stmdavs	pc!, {r0, r1, r4, r5}	; <UNPREDICTABLE>
    4474:	2f656d6f 	svccs	0x00656d6f
    4478:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    447c:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    4480:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    4484:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    4488:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    448c:	6f747574 	svcvs	0x00747574
    4490:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    4494:	616d2d73 	smcvs	53971	; 0xd2d3
    4498:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    449c:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    44a0:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    44a4:	2f737463 	svccs	0x00737463
    44a8:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    44ac:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    44b0:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    44b4:	616c7062 	cmnvs	ip, r2, rrx
    44b8:	70757374 	rsbsvc	r7, r5, r4, ror r3
    44bc:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    44c0:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    44c4:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    44c8:	72612f68 	rsbvc	r2, r1, #104, 30	; 0x1a0
    44cc:	72692f6d 	rsbvc	r2, r9, #436	; 0x1b4
    44d0:	69686371 	stmdbvs	r8!, {r0, r4, r5, r6, r8, r9, sp, lr}^
    44d4:	6d6f2f70 	stclvs	15, cr2, [pc, #-448]!	; 431c <errno+0x4318>
    44d8:	2e337061 	cdpcs	0, 3, cr7, cr3, cr1, {3}
    44dc:	69740063 	ldmdbvs	r4!, {r0, r1, r5, r6}^
    44e0:	616d6f5f 	cmnvs	sp, pc, asr pc
    44e4:	74003370 	strvc	r3, [r0], #-880	; 0xfffffc90
    44e8:	6d6f5f69 	stclvs	15, cr5, [pc, #-420]!	; 434c <errno+0x4348>
    44ec:	5f337061 	svcpl	0x00337061
    44f0:	00727470 	rsbseq	r7, r2, r0, ror r4
    44f4:	6f5f6974 	svcvs	0x005f6974
    44f8:	3370616d 	cmncc	r0, #1073741851	; 0x4000001b
    44fc:	6d6f635f 	stclvs	3, cr6, [pc, #-380]!	; 4388 <errno+0x4384>
    4500:	69746170 	ldmdbvs	r4!, {r4, r5, r6, r8, sp, lr}^
    4504:	5f656c62 	svcpl	0x00656c62
    4508:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    450c:	72617000 	rsbvc	r7, r1, #0
    4510:	745f6573 	ldrbvc	r6, [pc], #-1395	; 4518 <errno+0x4514>
    4514:	6d6f5f69 	stclvs	15, cr5, [pc, #-420]!	; 4378 <errno+0x4374>
    4518:	5f337061 	svcpl	0x00337061
    451c:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    4520:	70757272 	rsbsvc	r7, r5, r2, ror r2
    4524:	63007374 	movwvs	r7, #884	; 0x374
    4528:	61706d6f 	cmnvs	r0, pc, ror #26
    452c:	6c5f6572 	cfldr64vs	mvdx6, [pc], {114}	; 0x72
    4530:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    4534:	65740068 	ldrbvs	r0, [r4, #-104]!	; 0xffffff98
    4538:	5f617267 	svcpl	0x00617267
    453c:	6c746369 	ldclvs	3, cr6, [r4], #-420	; 0xfffffe5c
    4540:	74705f72 	ldrbtvc	r5, [r0], #-3954	; 0xfffff08e
    4544:	682f0072 	stmdavs	pc!, {r1, r4, r5, r6}	; <UNPREDICTABLE>
    4548:	2f656d6f 	svccs	0x00656d6f
    454c:	796e7573 	stmdbvc	lr!, {r0, r1, r4, r5, r6, r8, sl, ip, sp, lr}^
    4550:	6e6f6476 	mcrvs	4, 3, r6, cr15, cr6, {3}
    4554:	65732f67 	ldrbvs	r2, [r3, #-3943]!	; 0xfffff099
    4558:	732f346c 			; <UNDEFINED> instruction: 0x732f346c
    455c:	2d346c65 	ldccs	12, cr6, [r4, #-404]!	; 0xfffffe6c
    4560:	6f747574 	svcvs	0x00747574
    4564:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    4568:	616d2d73 	smcvs	53971	; 0xd2d3
    456c:	6566696e 	strbvs	r6, [r6, #-2414]!	; 0xfffff692
    4570:	702f7473 	eorvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    4574:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    4578:	2f737463 	svccs	0x00737463
    457c:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    4580:	62696c5f 	rsbvs	r6, r9, #24320	; 0x5f00
    4584:	696c2f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4588:	616c7062 	cmnvs	ip, r2, rrx
    458c:	70757374 	rsbsvc	r7, r5, r4, ror r3
    4590:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4594:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    4598:	6372612f 	cmnvs	r2, #-1073741813	; 0xc000000b
    459c:	72612f68 	rsbvc	r2, r1, #104, 30	; 0x1a0
    45a0:	72692f6d 	rsbvc	r2, r9, #436	; 0x1b4
    45a4:	69686371 	stmdbvs	r8!, {r0, r4, r5, r6, r8, r9, sp, lr}^
    45a8:	65742f70 	ldrbvs	r2, [r4, #-3952]!	; 0xfffff090
    45ac:	2e617267 	cdpcs	2, 6, cr7, cr1, cr7, {3}
    45b0:	6f630063 	svcvs	0x00630063
    45b4:	7461706d 	strbtvc	r7, [r1], #-109	; 0xffffff93
    45b8:	656c6269 	strbvs	r6, [ip, #-617]!	; 0xfffffd97
    45bc:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    45c0:	72617000 	rsbvc	r7, r1, #0
    45c4:	745f6573 	ldrbvc	r6, [pc], #-1395	; 45cc <errno+0x45c8>
    45c8:	61726765 	cmnvs	r2, r5, ror #14
    45cc:	7463695f 	strbtvc	r6, [r3], #-2399	; 0xfffff6a1
    45d0:	695f726c 	ldmdbvs	pc, {r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    45d4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    45d8:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
    45dc:	65740073 	ldrbvs	r0, [r4, #-115]!	; 0xffffff8d
    45e0:	5f617267 	svcpl	0x00617267
    45e4:	6c746369 	ldclvs	3, cr6, [r4], #-420	; 0xfffffe5c
    45e8:	65740072 	ldrbvs	r0, [r4, #-114]!	; 0xffffff8e
    45ec:	5f617267 	svcpl	0x00617267
    45f0:	6c746369 	ldclvs	3, cr6, [r4], #-420	; 0xfffffe5c
    45f4:	6f635f72 	svcvs	0x00635f72
    45f8:	7461706d 	strbtvc	r7, [r1], #-109	; 0xffffff93
    45fc:	656c6269 	strbvs	r6, [ip, #-617]!	; 0xfffffd97
    4600:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    4604:	5f5f0074 	svcpl	0x005f0074
    4608:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    460c:	705f5f74 	subsvc	r5, pc, r4, ror pc	; <UNPREDICTABLE>
    4610:	72695f73 	rsbvc	r5, r9, #460	; 0x1cc
    4614:	69686371 	stmdbvs	r8!, {r0, r4, r5, r6, r8, r9, sp, lr}^
    4618:	64007370 	strvs	r7, [r0], #-880	; 0xfffffc90
    461c:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    4620:	5f73705f 	svcpl	0x0073705f
    4624:	63717269 	cmnvs	r1, #-1879048186	; 0x90000006
    4628:	73706968 	cmnvc	r0, #104, 18	; 0x1a0000
    462c:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 4634 <errno+0x4630>
    4630:	5f746170 	svcpl	0x00746170
    4634:	5f727473 	svcpl	0x00727473
    4638:	006e656c 	rsbeq	r6, lr, ip, ror #10
    463c:	74735f5f 	ldrbtvc	r5, [r3], #-3935	; 0xfffff0a1
    4640:	5f5f706f 	svcpl	0x005f706f
    4644:	695f7370 	ldmdbvs	pc, {r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    4648:	68637172 	stmdavs	r3!, {r1, r4, r5, r6, r8, ip, sp, lr}^
    464c:	00737069 	rsbseq	r7, r3, r9, rrx
    4650:	706e656c 	rsbvc	r6, lr, ip, ror #10
    4654:	6d616e00 	stclvs	14, cr6, [r1, #-0]
    4658:	66666f65 	strbtvs	r6, [r6], -r5, ror #30
    465c:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4660:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    4664:	6c676e69 	stclvs	14, cr6, [r7], #-420	; 0xfffffe5c
    4668:	5f747369 	svcpl	0x00747369
    466c:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
    4670:	736e6961 	cmnvc	lr, #1589248	; 0x184000
    4674:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4678:	6f72705f 	svcvs	0x0072705f
    467c:	74726570 	ldrbtvc	r6, [r2], #-1392	; 0xfffffa90
    4680:	616e0079 	smcvs	57353	; 0xe009
    4684:	7470656d 	ldrbtvc	r6, [r0], #-1389	; 0xfffffa93
    4688:	6f740072 	svcvs	0x00740072
    468c:	736c6174 	cmnvc	ip, #116, 2
    4690:	00657a69 	rsbeq	r7, r5, r9, ror #20
    4694:	6e656c73 	mcrvs	12, 3, r6, cr5, cr3, {3}
    4698:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    469c:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    46a0:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    46a4:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    46a8:	6f5f7974 	svcvs	0x005f7974
    46ac:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
    46b0:	616c0074 	smcvs	49156	; 0xc004
    46b4:	635f7473 	cmpvs	pc, #1929379840	; 0x73000000
    46b8:	5f706d6f 	svcpl	0x00706d6f
    46bc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    46c0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    46c4:	5f746466 	svcpl	0x00746466
    46c8:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0xfffffa8e
    46cc:	5f657672 	svcpl	0x00657672
    46d0:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
    46d4:	756e0079 	strbvc	r0, [lr, #-121]!	; 0xffffff87
    46d8:	656d5f6d 	strbvs	r5, [sp, #-3949]!	; 0xfffff093
    46dc:	7673726d 	ldrbtvc	r7, [r3], -sp, ror #4
    46e0:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    46e4:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    46e8:	706f7270 	rsbvc	r7, pc, r0, ror r2	; <UNPREDICTABLE>
    46ec:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    46f0:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
    46f4:	666f5f68 	strbtvs	r5, [pc], -r8, ror #30
    46f8:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    46fc:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    4700:	6e656c65 	cdpvs	12, 6, cr6, cr5, cr5, {3}
    4704:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4708:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    470c:	6f72705f 	svcvs	0x0072705f
    4710:	74726570 	ldrbtvc	r6, [r2], #-1392	; 0xfffffa90
    4714:	79625f79 	stmdbvc	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4718:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    471c:	00746573 	rsbseq	r6, r4, r3, ror r5
    4720:	5f746466 	svcpl	0x00746466
    4724:	5f746567 	svcpl	0x00746567
    4728:	706f7270 	rsbvc	r7, pc, r0, ror r2	; <UNPREDICTABLE>
    472c:	79747265 	ldmdbvc	r4!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    4730:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4734:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 473c <errno+0x4738>
    4738:	68635f65 	stmdavs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    473c:	5f6b6365 	svcpl	0x006b6365
    4740:	706d6f63 	rsbvc	r6, sp, r3, ror #30
    4744:	62697461 	rsbvs	r7, r9, #1627389952	; 0x61000000
    4748:	6600656c 	strvs	r6, [r0], -ip, ror #10
    474c:	675f7464 	ldrbvs	r7, [pc, -r4, ror #8]
    4750:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 45c4 <errno+0x45c0>
    4754:	705f7861 	subsvc	r7, pc, r1, ror #16
    4758:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    475c:	6600656c 	strvs	r6, [r0], -ip, ror #10
    4760:	6d5f7464 	cfldrdvs	mvd7, [pc, #-400]	; 45d8 <errno+0x45d4>
    4764:	725f6d65 	subsvc	r6, pc, #6464	; 0x1940
    4768:	61007673 	tstvs	r0, r3, ror r6
    476c:	7361696c 	cmnvc	r1, #108, 18	; 0x1b0000
    4770:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    4774:	66007465 	strvs	r7, [r0], -r5, ror #8
    4778:	6e5f7464 	cdpvs	4, 5, cr7, cr15, cr4, {3}
    477c:	5f65646f 	svcpl	0x0065646f
    4780:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    4784:	625f7465 	subsvs	r7, pc, #1694498816	; 0x65000000
    4788:	6f635f79 	svcvs	0x00635f79
    478c:	7461706d 	strbtvc	r7, [r1], #-109	; 0xffffff93
    4790:	656c6269 	strbvs	r6, [ip, #-617]!	; 0xfffffd97
    4794:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
    4798:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    479c:	73626100 	cmnvc	r2, #0, 2
    47a0:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    47a4:	66007465 	strvs	r7, [r0], -r5, ror #8
    47a8:	675f7464 	ldrbvs	r7, [pc, -r4, ror #8]
    47ac:	72707465 	rsbsvc	r7, r0, #1694498816	; 0x65000000
    47b0:	6e5f706f 	cdpvs	0, 5, cr7, cr15, cr15, {3}
    47b4:	6c656d61 	stclvs	13, cr6, [r5], #-388	; 0xfffffe7c
    47b8:	66006e65 	strvs	r6, [r0], -r5, ror #28
    47bc:	675f7464 	ldrbvs	r7, [pc, -r4, ror #8]
    47c0:	705f7465 	subsvc	r7, pc, r5, ror #8
    47c4:	65706f72 	ldrbvs	r6, [r0, #-3954]!	; 0xfffff08e
    47c8:	5f797472 	svcpl	0x00797472
    47cc:	6f5f7962 	svcvs	0x005f7962
    47d0:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
    47d4:	66005f74 			; <UNDEFINED> instruction: 0x66005f74
    47d8:	675f7464 	ldrbvs	r7, [pc, -r4, ror #8]
    47dc:	6d5f7465 	cfldrdvs	mvd7, [pc, #-404]	; 4650 <errno+0x464c>
    47e0:	725f6d65 	subsvc	r6, pc, #6464	; 0x1940
    47e4:	66007673 			; <UNDEFINED> instruction: 0x66007673
    47e8:	34367464 	ldrtcc	r7, [r6], #-1124	; 0xfffffb9c
    47ec:	6c00745f 	cfstrsvs	mvf7, [r0], {95}	; 0x5f
    47f0:	00666165 	rsbeq	r6, r6, r5, ror #2
    47f4:	66666f70 	uqsub16vs	r6, r6, r0
    47f8:	00746573 	rsbseq	r6, r4, r3, ror r5
    47fc:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    4800:	706f7270 	rsbvc	r7, pc, r0, ror r2	; <UNPREDICTABLE>
    4804:	6466005f 	strbtvs	r0, [r6], #-95	; 0xffffffa1
    4808:	65675f74 	strbvs	r5, [r7, #-3956]!	; 0xfffff08c
    480c:	6c615f74 	stclvs	15, cr5, [r1], #-464	; 0xfffffe30
    4810:	00736169 	rsbseq	r6, r3, r9, ror #2
    4814:	706f7270 	rsbvc	r7, pc, r0, ror r2	; <UNPREDICTABLE>
    4818:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    481c:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4820:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 4828 <errno+0x4824>
    4824:	65645f65 	strbvs	r5, [r4, #-3941]!	; 0xfffff09b
    4828:	00687470 	rsbeq	r7, r8, r0, ror r4
    482c:	5f746466 	svcpl	0x00746466
    4830:	6e627573 	mcrvs	5, 3, r7, cr2, cr3, {3}
    4834:	5f65646f 	svcpl	0x0065646f
    4838:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    483c:	6e5f7465 	cdpvs	4, 5, cr7, cr15, cr5, {3}
    4840:	6c656d61 	stclvs	13, cr6, [r5], #-388	; 0xfffffe7c
    4844:	66006e65 	strvs	r6, [r0], -r5, ror #28
    4848:	6d5f7464 	cfldrdvs	mvd7, [pc, #-400]	; 46c0 <errno+0x46bc>
    484c:	725f6d65 	subsvc	r6, pc, #6464	; 0x1940
    4850:	005f7673 	subseq	r7, pc, r3, ror r6	; <UNPREDICTABLE>
    4854:	65707573 	ldrbvs	r7, [r0, #-1395]!	; 0xfffffa8d
    4858:	646f6e72 	strbtvs	r6, [pc], #-3698	; 4860 <errno+0x485c>
    485c:	70656465 	rsbvc	r6, r5, r5, ror #8
    4860:	6f006874 	svcvs	0x00006874
    4864:	645f6666 	ldrbvs	r6, [pc], #-1638	; 486c <errno+0x4868>
    4868:	74735f74 	ldrbtvc	r5, [r3], #-3956	; 0xfffff08c
    486c:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    4870:	64660073 	strbtvs	r0, [r6], #-115	; 0xffffff8d
    4874:	75735f74 	ldrbvc	r5, [r3, #-3956]!	; 0xfffff08c
    4878:	646f6e62 	strbtvs	r6, [pc], #-3682	; 4880 <errno+0x487c>
    487c:	666f5f65 	strbtvs	r5, [pc], -r5, ror #30
    4880:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    4884:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4888:	7269665f 	rsbvc	r6, r9, #99614720	; 0x5f00000
    488c:	705f7473 	subsvc	r7, pc, r3, ror r4	; <UNPREDICTABLE>
    4890:	65706f72 	ldrbvs	r6, [r0, #-3954]!	; 0xfffff08e
    4894:	5f797472 	svcpl	0x00797472
    4898:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    489c:	66007465 	strvs	r7, [r0], -r5, ror #8
    48a0:	675f7464 	ldrbvs	r7, [pc, -r4, ror #8]
    48a4:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
    48a8:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    48ac:	61700067 	cmnvs	r0, r7, rrx
    48b0:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    48b4:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    48b8:	70007465 	andvc	r7, r0, r5, ror #8
    48bc:	76706f72 	uhsub16vc	r6, r0, r2
    48c0:	66006c61 	strvs	r6, [r0], -r1, ror #24
    48c4:	6e5f7464 	cdpvs	4, 5, cr7, cr15, cr4, {3}
    48c8:	5f65646f 	svcpl	0x0065646f
    48cc:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
    48d0:	73007265 	movwvc	r7, #613	; 0x265
    48d4:	72657075 	rsbvc	r7, r5, #117	; 0x75
    48d8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    48dc:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    48e0:	73007465 	movwvc	r7, #1125	; 0x465
    48e4:	5f657a69 	svcpl	0x00657a69
    48e8:	735f7464 	cmpvc	pc, #100, 8	; 0x64000000
    48ec:	63757274 	cmnvs	r5, #116, 4	; 0x40000007
    48f0:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
    48f4:	756e5f74 	strbvc	r5, [lr, #-3956]!	; 0xfffff08c
    48f8:	656d5f6d 	strbvs	r5, [sp, #-3949]!	; 0xfffff093
    48fc:	73725f6d 	cmnvc	r2, #436	; 0x1b4
    4900:	64660076 	strbtvs	r0, [r6], #-118	; 0xffffff8a
    4904:	75735f74 	ldrbvc	r5, [r3, #-3956]!	; 0xfffff08c
    4908:	6e726570 	mrcvs	5, 3, r6, cr2, cr0, {3}
    490c:	5f65646f 	svcpl	0x0065646f
    4910:	65647461 	strbvs	r7, [r4, #-1121]!	; 0xfffffb9f
    4914:	5f687470 	svcpl	0x00687470
    4918:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    491c:	66007465 	strvs	r7, [r0], -r5, ror #8
    4920:	705f7464 	subsvc	r7, pc, r4, ror #8
    4924:	5f687461 	svcpl	0x00687461
    4928:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    492c:	66007465 	strvs	r7, [r0], -r5, ror #8
    4930:	735f7464 	cmpvc	pc, #100, 8	; 0x64000000
    4934:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    4938:	73696c67 	cmnvc	r9, #26368	; 0x6700
    493c:	65675f74 	strbvs	r5, [r7, #-3956]!	; 0xfffff08c
    4940:	666f0074 			; <UNDEFINED> instruction: 0x666f0074
    4944:	74645f66 	strbtvc	r5, [r4], #-3942	; 0xfffff09a
    4948:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    494c:	00746375 	rsbseq	r6, r4, r5, ror r3
    4950:	5f746466 	svcpl	0x00746466
    4954:	5f746567 	svcpl	0x00746567
    4958:	68746170 	ldmdavs	r4!, {r4, r5, r6, r8, sp, lr}^
    495c:	7a697300 	bvc	1a61564 <__bss_end__+0x191851c>
    4960:	74645f65 	strbtvc	r5, [r4], #-3941	; 0xfffff09b
    4964:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    4968:	73676e69 	cmnvc	r7, #1680	; 0x690
    496c:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4970:	6c5f3436 	cfldrdvs	mvd3, [pc], {54}	; 0x36
    4974:	74730064 	ldrbtvc	r0, [r3], #-100	; 0xffffff9c
    4978:	73696c72 	cmnvc	r9, #29184	; 0x7200
    497c:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
    4980:	74735f74 	ldrbtvc	r5, [r3], #-3956	; 0xfffff08c
    4984:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    4988:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    498c:	756f635f 	strbvc	r6, [pc, #-863]!	; 4635 <errno+0x4631>
    4990:	6f00746e 	svcvs	0x0000746e
    4994:	6d5f6666 	ldclvs	6, cr6, [pc, #-408]	; 4804 <errno+0x4800>
    4998:	725f6d65 	subsvc	r6, pc, #6464	; 0x1940
    499c:	616d7673 	smcvs	55139	; 0xd763
    49a0:	64660070 	strbtvs	r0, [r6], #-112	; 0xffffff90
    49a4:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    49a8:	5f6b6365 	svcpl	0x006b6365
    49ac:	6c6c7566 	cfstr64vs	mvdx7, [ip], #-408	; 0xfffffe68
    49b0:	67616d00 	strbvs	r6, [r1, -r0, lsl #26]!
    49b4:	70006369 	andvc	r6, r0, r9, ror #6
    49b8:	74706564 	ldrbtvc	r6, [r0], #-1380	; 0xfffffa9c
    49bc:	72700068 	rsbsvc	r0, r0, #104	; 0x68
    49c0:	656c706f 	strbvs	r7, [ip, #-111]!	; 0xffffff91
    49c4:	7562006e 	strbvc	r0, [r2, #-110]!	; 0xffffff92
    49c8:	6e656c66 	cdpvs	12, 6, cr6, cr5, cr6, {3}
    49cc:	6d616e00 	stclvs	14, cr6, [r1, #-0]
    49d0:	73007065 	movwvc	r7, #101	; 0x65
    49d4:	666f7274 			; <UNDEFINED> instruction: 0x666f7274
    49d8:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    49dc:	69616600 	stmdbvs	r1!, {r9, sl, sp, lr}^
    49e0:	656e006c 	strbvs	r0, [lr, #-108]!	; 0xffffff94
    49e4:	666f7478 			; <UNDEFINED> instruction: 0x666f7478
    49e8:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    49ec:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    49f0:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    49f4:	6f72705f 	svcvs	0x0072705f
    49f8:	74726570 	ldrbtvc	r6, [r2], #-1392	; 0xfffffa90
    49fc:	616e5f79 	smcvs	58873	; 0xe5f9
    4a00:	656c656d 	strbvs	r6, [ip, #-1389]!	; 0xfffffa93
    4a04:	66005f6e 	strvs	r5, [r0], -lr, ror #30
    4a08:	705f7464 	subsvc	r7, pc, r4, ror #8
    4a0c:	6e657261 	cdpvs	2, 6, cr7, cr5, cr1, {3}
    4a10:	666f5f74 	uqsub16vs	r5, pc, r4	; <UNPREDICTABLE>
    4a14:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    4a18:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4a1c:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    4a20:	696c615f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    4a24:	6e5f7361 	cdpvs	3, 5, cr7, cr15, cr1, {3}
    4a28:	6c656d61 	stclvs	13, cr6, [r5], #-388	; 0xfffffe7c
    4a2c:	66006e65 	strvs	r6, [r0], -r5, ror #28
    4a30:	735f7464 	cmpvc	pc, #100, 8	; 0x64000000
    4a34:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    4a38:	73696c67 	cmnvc	r9, #26368	; 0x6700
    4a3c:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    4a40:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4a44:	76737200 	ldrbtvc	r7, [r3], -r0, lsl #4
    4a48:	6261745f 	rsbvs	r7, r1, #1593835520	; 0x5f000000
    4a4c:	6c00656c 	cfstr32vs	mvfx6, [r0], {108}	; 0x6c
    4a50:	6c747369 	ldclvs	3, cr7, [r4], #-420	; 0xfffffe5c
    4a54:	66006e65 	strvs	r6, [r0], -r5, ror #28
    4a58:	6e5f7464 	cdpvs	4, 5, cr7, cr15, cr4, {3}
    4a5c:	5f65646f 	svcpl	0x0065646f
    4a60:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    4a64:	625f7465 	subsvs	r7, pc, #1694498816	; 0x65000000
    4a68:	72705f79 	rsbsvc	r5, r0, #484	; 0x1e4
    4a6c:	765f706f 	ldrbvc	r7, [pc], -pc, rrx
    4a70:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    4a74:	656c6f00 	strbvs	r6, [ip, #-3840]!	; 0xfffff100
    4a78:	6466006e 	strbtvs	r0, [r6], #-110	; 0xffffff92
    4a7c:	65685f74 	strbvs	r5, [r8, #-3956]!	; 0xfffff08c
    4a80:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
    4a84:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4a88:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    4a8c:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    4a90:	64660065 	strbtvs	r0, [r6], #-101	; 0xffffff9b
    4a94:	5f343674 	svcpl	0x00343674
    4a98:	635f6f74 	cmpvs	pc, #116, 30	; 0x1d0
    4a9c:	66007570 			; <UNDEFINED> instruction: 0x66007570
    4aa0:	6e5f7464 	cdpvs	4, 5, cr7, cr15, cr4, {3}
    4aa4:	6e65646f 	cdpvs	4, 6, cr6, cr5, cr15, {3}
    4aa8:	5f656d61 	svcpl	0x00656d61
    4aac:	005f7165 	subseq	r7, pc, r5, ror #2
    4ab0:	5f746466 	svcpl	0x00746466
    4ab4:	5f746567 	svcpl	0x00746567
    4ab8:	6e616870 	mcrvs	8, 3, r6, cr1, cr0, {3}
    4abc:	00656c64 	rsbeq	r6, r5, r4, ror #24
    4ac0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    4ac4:	66666f74 	uqsub16vs	r6, r6, r4
    4ac8:	00746573 	rsbseq	r6, r4, r3, ror r5
    4acc:	5f746466 	svcpl	0x00746466
    4ad0:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    4ad4:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    4ad8:	5f746573 	svcpl	0x00746573
    4adc:	705f7962 	subsvc	r7, pc, r2, ror #18
    4ae0:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    4ae4:	6600656c 	strvs	r6, [r0], -ip, ror #10
    4ae8:	735f7464 	cmpvc	pc, #100, 8	; 0x64000000
    4aec:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    4af0:	64660067 	strbtvs	r0, [r6], #-103	; 0xffffff99
    4af4:	65675f74 	strbvs	r5, [r7, #-3956]!	; 0xfffff08c
    4af8:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    4afc:	7265706f 	rsbvc	r7, r5, #111	; 0x6f
    4b00:	6e5f7974 			; <UNDEFINED> instruction: 0x6e5f7974
    4b04:	6c656d61 	stclvs	13, cr6, [r5], #-388	; 0xfffffe7c
    4b08:	62006e65 	andvs	r6, r0, #1616	; 0x650
    4b0c:	5f746f6f 	svcpl	0x00746f6f
    4b10:	69757063 	ldmdbvs	r5!, {r0, r1, r5, r6, ip, sp, lr}^
    4b14:	68705f64 	ldmdavs	r0!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    4b18:	66007379 			; <UNDEFINED> instruction: 0x66007379
    4b1c:	735f7464 	cmpvc	pc, #100, 8	; 0x64000000
    4b20:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    4b24:	71655f67 	cmnvc	r5, r7, ror #30
    4b28:	7265005f 	rsbvc	r0, r5, #95	; 0x5f
    4b2c:	66005f72 			; <UNDEFINED> instruction: 0x66005f72
    4b30:	6f5f7464 	svcvs	0x005f7464
    4b34:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
    4b38:	74705f74 	ldrbtvc	r5, [r0], #-3956	; 0xfffff08c
    4b3c:	2f005f72 	svccs	0x00005f72
    4b40:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    4b44:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4b48:	6f647679 	svcvs	0x00647679
    4b4c:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    4b50:	2f346c65 	svccs	0x00346c65
    4b54:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4b58:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    4b5c:	6169726f 	cmnvs	r9, pc, ror #4
    4b60:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    4b64:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    4b68:	2f747365 	svccs	0x00747365
    4b6c:	6a6f7270 	bvs	1be1534 <__bss_end__+0x1a984ec>
    4b70:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    4b74:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    4b78:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4b7c:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 49fc <errno+0x49f8>
    4b80:	64666269 	strbtvs	r6, [r6], #-617	; 0xfffffd97
    4b84:	64662f74 	strbtvs	r2, [r6], #-3956	; 0xfffff08c
    4b88:	6f725f74 	svcvs	0x00725f74
    4b8c:	6600632e 	strvs	r6, [r0], -lr, lsr #6
    4b90:	675f7464 	ldrbvs	r7, [pc, -r4, ror #8]
    4b94:	72707465 	rsbsvc	r7, r0, #1694498816	; 0x65000000
    4b98:	625f706f 	subsvs	r7, pc, #111	; 0x6f
    4b9c:	666f5f79 	uqsub16vs	r5, pc, r9	; <UNPREDICTABLE>
    4ba0:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    4ba4:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4ba8:	6568635f 	strbvs	r6, [r8, #-863]!	; 0xfffffca1
    4bac:	705f6b63 	subsvc	r6, pc, r3, ror #22
    4bb0:	5f706f72 	svcpl	0x00706f72
    4bb4:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    4bb8:	005f7465 	subseq	r7, pc, r5, ror #8
    4bbc:	5f746466 	svcpl	0x00746466
    4bc0:	63656863 	cmnvs	r5, #6488064	; 0x630000
    4bc4:	65685f6b 	strbvs	r5, [r8, #-3947]!	; 0xfffff095
    4bc8:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
    4bcc:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4bd0:	6165685f 	cmnvs	r5, pc, asr r8
    4bd4:	5f726564 	svcpl	0x00726564
    4bd8:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    4bdc:	74646600 	strbtvc	r6, [r4], #-1536	; 0xfffffa00
    4be0:	6165685f 	cmnvs	r5, pc, asr r8
    4be4:	5f726564 	svcpl	0x00726564
    4be8:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    4bec:	6466005f 	strbtvs	r0, [r6], #-95	; 0xffffffa1
    4bf0:	656e5f74 	strbvs	r5, [lr, #-3956]!	; 0xfffff08c
    4bf4:	6e5f7478 	mrcvs	4, 2, r7, cr15, cr8, {3}
    4bf8:	0065646f 	rsbeq	r6, r5, pc, ror #8
    4bfc:	73726468 	cmnvc	r2, #104, 8	; 0x68000000
    4c00:	00657a69 	rsbeq	r7, r5, r9, ror #20
    4c04:	5f746466 	svcpl	0x00746466
    4c08:	63656863 	cmnvs	r5, #6488064	; 0x630000
    4c0c:	6f6e5f6b 	svcvs	0x006e5f6b
    4c10:	6f5f6564 	svcvs	0x005f6564
    4c14:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
    4c18:	66005f74 			; <UNDEFINED> instruction: 0x66005f74
    4c1c:	665f7464 	ldrbvs	r7, [pc], -r4, ror #8
    4c20:	5f646e69 	svcpl	0x00646e69
    4c24:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    4c28:	005f676e 	subseq	r6, pc, lr, ror #14
    4c2c:	5f746466 	svcpl	0x00746466
    4c30:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    4c34:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    4c38:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    4c3c:	65686300 	strbvs	r6, [r8, #-768]!	; 0xfffffd00
    4c40:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    4c44:	6b636f6c 	blvs	18e09fc <__bss_end__+0x17979b4>
    4c48:	6466005f 	strbtvs	r0, [r6], #-95	; 0xffffffa1
    4c4c:	656e5f74 	strbvs	r5, [lr, #-3956]!	; 0xfffff08c
    4c50:	745f7478 	ldrbvc	r7, [pc], #-1144	; 4c58 <errno+0x4c54>
    4c54:	6c006761 	stcvs	7, cr6, [r0], {97}	; 0x61
    4c58:	00747361 	rsbseq	r7, r4, r1, ror #6
    4c5c:	74727473 	ldrbtvc	r7, [r2], #-1139	; 0xfffffb8d
    4c60:	74006261 	strvc	r6, [r0], #-609	; 0xfffffd9f
    4c64:	69736261 	ldmdbvs	r3!, {r0, r5, r6, r9, sp, lr}^
    4c68:	2f00657a 	svccs	0x0000657a
    4c6c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    4c70:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4c74:	6f647679 	svcvs	0x00647679
    4c78:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    4c7c:	2f346c65 	svccs	0x00346c65
    4c80:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4c84:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    4c88:	6169726f 	cmnvs	r9, pc, ror #4
    4c8c:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    4c90:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    4c94:	2f747365 	svccs	0x00747365
    4c98:	6a6f7270 	bvs	1be1660 <__bss_end__+0x1a98618>
    4c9c:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    4ca0:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    4ca4:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4ca8:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 4b28 <errno+0x4b24>
    4cac:	64666269 	strbtvs	r6, [r6], #-617	; 0xfffffd97
    4cb0:	64662f74 	strbtvs	r2, [r6], #-3956	; 0xfffff08c
    4cb4:	00632e74 	rsbeq	r2, r3, r4, ror lr
    4cb8:	5f746466 	svcpl	0x00746466
    4cbc:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
    4cc0:	705f7465 	subsvc	r7, pc, r5, ror #8
    4cc4:	63007274 	movwvs	r7, #628	; 0x274
    4cc8:	6b636568 	blvs	18de270 <__bss_end__+0x1795228>
    4ccc:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
    4cd0:	6466005f 	strbtvs	r0, [r6], #-95	; 0xffffffa1
    4cd4:	6f6d5f74 	svcvs	0x006d5f74
    4cd8:	66006576 			; <UNDEFINED> instruction: 0x66006576
    4cdc:	665f7464 	ldrbvs	r7, [pc], -r4, ror #8
    4ce0:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    4ce4:	6275735f 	rsbsvs	r7, r5, #2080374785	; 0x7c000001
    4ce8:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    4cec:	67617400 	strbvs	r7, [r1, -r0, lsl #8]!
    4cf0:	64660070 	strbtvs	r0, [r6], #-112	; 0xffffff90
    4cf4:	6f725f74 	svcvs	0x00725f74
    4cf8:	6f72705f 	svcvs	0x0072705f
    4cfc:	005f6562 	subseq	r6, pc, r2, ror #10
    4d00:	5f6d656d 	svcpl	0x006d656d
    4d04:	00747563 	rsbseq	r7, r4, r3, ror #10
    4d08:	5f6d656d 	svcpl	0x006d656d
    4d0c:	5f670065 	svcpl	0x00670065
    4d10:	5f667562 	svcpl	0x00667562
    4d14:	66007a73 			; <UNDEFINED> instruction: 0x66007a73
    4d18:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
    4d1c:	00656d61 	rsbeq	r6, r5, r1, ror #26
    4d20:	66667562 	strbtvs	r7, [r6], -r2, ror #10
    4d24:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    4d28:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    4d2c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    4d30:	5f676174 	svcpl	0x00676174
    4d34:	61740062 	cmnvs	r4, r2, rrx
    4d38:	00655f67 	rsbeq	r5, r5, r7, ror #30
    4d3c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4d40:	656e6f7a 	strbvs	r6, [lr, #-3962]!	; 0xfffff086
    4d44:	6d656d00 	stclvs	13, cr6, [r5, #-0]
    4d48:	6400705f 	strvs	r7, [r0], #-95	; 0xffffffa1
    4d4c:	696c7961 	stmdbvs	ip!, {r0, r5, r6, r8, fp, ip, sp, lr}^
    4d50:	00746867 	rsbseq	r6, r4, r7, ror #16
    4d54:	61745f67 	cmnvs	r4, r7, ror #30
    4d58:	72705f67 	rsbsvc	r5, r0, #412	; 0x19c
    4d5c:	78696665 	stmdavc	r9!, {r0, r2, r5, r6, r9, sl, sp, lr}^
    4d60:	5f667a00 	svcpl	0x00667a00
    4d64:	5f676f6c 	svcpl	0x00676f6c
    4d68:	5f746573 	svcpl	0x00746573
    4d6c:	5f6d656d 	svcpl	0x006d656d
    4d70:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
    4d74:	75700068 	ldrbvc	r0, [r0, #-104]!	; 0xffffff98
    4d78:	736d5f74 	cmnvc	sp, #116, 30	; 0x1d0
    4d7c:	75700067 	ldrbvc	r0, [r0, #-103]!	; 0xffffff99
    4d80:	72735f74 	rsbsvc	r5, r3, #116, 30	; 0x1d0
    4d84:	667a0063 	ldrbtvs	r0, [sl], -r3, rrx
    4d88:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    4d8c:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
    4d90:	6761745f 			; <UNDEFINED> instruction: 0x6761745f
    4d94:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    4d98:	00786966 	rsbseq	r6, r8, r6, ror #18
    4d9c:	6c5f667a 	mrrcvs	6, 7, r6, pc, cr10	; <UNPREDICTABLE>
    4da0:	6f5f676f 	svcvs	0x005f676f
    4da4:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
    4da8:	62635f74 	rsbvs	r5, r3, #116, 30	; 0x1d0
    4dac:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
    4db0:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    4db4:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
    4db8:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
    4dbc:	7a5f0065 	bvc	17c4f58 <__bss_end__+0x167bf10>
    4dc0:	6f6c5f66 	svcvs	0x006c5f66
    4dc4:	72775f67 	rsbsvc	r5, r7, #412	; 0x19c
    4dc8:	5f657469 	svcpl	0x00657469
    4dcc:	7a5f0064 	bvc	17c4f64 <__bss_end__+0x167bf1c>
    4dd0:	6f6c5f66 	svcvs	0x006c5f66
    4dd4:	72775f67 	rsbsvc	r5, r7, #412	; 0x19c
    4dd8:	5f657469 	svcpl	0x00657469
    4ddc:	5f6d656d 	svcpl	0x006d656d
    4de0:	5f670064 	svcpl	0x00670064
    4de4:	5f6d656d 	svcpl	0x006d656d
    4de8:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
    4dec:	667a0068 	ldrbtvs	r0, [sl], -r8, rrx
    4df0:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    4df4:	7465735f 	strbtvc	r7, [r5], #-863	; 0xfffffca1
    4df8:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
    4dfc:	5f747570 	svcpl	0x00747570
    4e00:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
    4e04:	5f67006c 	svcpl	0x0067006c
    4e08:	66667562 	strbtvs	r7, [r6], -r2, ror #10
    4e0c:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    4e10:	73610062 	cmnvc	r1, #98	; 0x62
    4e14:	00696963 	rsbeq	r6, r9, r3, ror #18
    4e18:	6c5f667a 	mrrcvs	6, 7, r6, pc, cr10	; <UNPREDICTABLE>
    4e1c:	6f5f676f 	svcvs	0x005f676f
    4e20:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
    4e24:	74635f74 	strbtvc	r5, [r3], #-3956	; 0xfffff08c
    4e28:	65680078 	strbvs	r0, [r8, #-120]!	; 0xffffff88
    4e2c:	00625f78 	rsbeq	r5, r2, r8, ror pc
    4e30:	616e7a74 	smcvs	59300	; 0xe7a4
    4e34:	2f00656d 	svccs	0x0000656d
    4e38:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    4e3c:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4e40:	6f647679 	svcvs	0x00647679
    4e44:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    4e48:	2f346c65 	svccs	0x00346c65
    4e4c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4e50:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    4e54:	6169726f 	cmnvs	r9, pc, ror #4
    4e58:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    4e5c:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    4e60:	2f747365 	svccs	0x00747365
    4e64:	6a6f7270 	bvs	1be182c <__bss_end__+0x1a987e4>
    4e68:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    4e6c:	6974752f 	ldmdbvs	r4!, {r0, r1, r2, r3, r5, r8, sl, ip, sp, lr}^
    4e70:	696c5f6c 	stmdbvs	ip!, {r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4e74:	6c2f7362 	stcvs	3, cr7, [pc], #-392	; 4cf4 <errno+0x4cf0>
    4e78:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    4e7c:	2f736c69 	svccs	0x00736c69
    4e80:	2f637273 	svccs	0x00637273
    4e84:	6c5f667a 	mrrcvs	6, 7, r6, pc, cr10	; <UNPREDICTABLE>
    4e88:	632e676f 			; <UNDEFINED> instruction: 0x632e676f
    4e8c:	5f667a00 	svcpl	0x00667a00
    4e90:	5f676f6c 	svcpl	0x00676f6c
    4e94:	5f746573 	svcpl	0x00746573
    4e98:	7074756f 	rsbsvc	r7, r4, pc, ror #10
    4e9c:	635f7475 	cmpvs	pc, #1962934272	; 0x75000000
    4ea0:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    4ea4:	006b6361 	rsbeq	r6, fp, r1, ror #6
    4ea8:	5f667a5f 	svcpl	0x00667a5f
    4eac:	5f676f6c 	svcpl	0x00676f6c
    4eb0:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    4eb4:	706e0065 	rsbvc	r0, lr, r5, rrx
    4eb8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
    4ebc:	69735f66 	ldmdbvs	r3!, {r1, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    4ec0:	6400657a 	strvs	r6, [r0], #-1402	; 0xfffffa86
    4ec4:	007a735f 	rsbseq	r7, sl, pc, asr r3
    4ec8:	65685f63 	strbvs	r5, [r8, #-3939]!	; 0xfffff09d
    4ecc:	7a5f0078 	bvc	17c50b4 <__bss_end__+0x167c06c>
    4ed0:	6f6c5f66 	svcvs	0x006c5f66
    4ed4:	72775f67 	rsbsvc	r5, r7, #412	; 0x19c
    4ed8:	5f657469 	svcpl	0x00657469
    4edc:	006d656d 	rsbeq	r6, sp, sp, ror #10
    4ee0:	5f747570 	svcpl	0x00747570
    4ee4:	6972706e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, sp, lr}^
    4ee8:	0066746e 	rsbeq	r7, r6, lr, ror #8
    4eec:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    4ef0:	00625f69 	rsbeq	r5, r2, r9, ror #30
    4ef4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    4ef8:	00655f69 	rsbeq	r5, r5, r9, ror #30
    4efc:	5f67736d 	svcpl	0x0067736d
    4f00:	756f0062 	strbvc	r0, [pc, #-98]!	; 4ea6 <errno+0x4ea2>
    4f04:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
    4f08:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
    4f0c:	72747000 	rsbsvc	r7, r4, #0
    4f10:	66666964 	strbtvs	r6, [r6], -r4, ror #18
    4f14:	2f00745f 	svccs	0x0000745f
    4f18:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
    4f1c:	6e75732f 	cdpvs	3, 7, cr7, cr5, cr15, {1}
    4f20:	6f647679 	svcvs	0x00647679
    4f24:	732f676e 			; <UNDEFINED> instruction: 0x732f676e
    4f28:	2f346c65 	svccs	0x00346c65
    4f2c:	346c6573 	strbtcc	r6, [ip], #-1395	; 0xfffffa8d
    4f30:	7475742d 	ldrbtvc	r7, [r5], #-1069	; 0xfffffbd3
    4f34:	6169726f 	cmnvs	r9, pc, ror #4
    4f38:	6d2d736c 	stcvs	3, cr7, [sp, #-432]!	; 0xfffffe50
    4f3c:	66696e61 	strbtvs	r6, [r9], -r1, ror #28
    4f40:	2f747365 	svccs	0x00747365
    4f44:	6a6f7270 	bvs	1be190c <__bss_end__+0x1a988c4>
    4f48:	73746365 	cmnvc	r4, #-1811939327	; 0x94000001
    4f4c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    4f50:	6e757234 	mrcvs	2, 3, r7, cr5, cr4, {1}
    4f54:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4f58:	7472632f 	ldrbtvc	r6, [r2], #-815	; 0xfffffcd1
    4f5c:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
    4f60:	72615f34 	rsbvc	r5, r1, #52, 30	; 0xd0
    4f64:	612f6863 			; <UNDEFINED> instruction: 0x612f6863
    4f68:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4f6c:	632f3233 			; <UNDEFINED> instruction: 0x632f3233
    4f70:	2e6e7472 	mcrcs	4, 3, r7, cr14, cr2, {3}
    4f74:	Address 0x0000000000004f74 is out of bounds.


Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   4:	00000000 	andeq	r0, r0, r0
   8:	00010118 	andeq	r0, r1, r8, lsl r1
   c:	00010120 	andeq	r0, r1, r0, lsr #2
  10:	00027648 	andeq	r7, r2, r8, asr #12
  14:	00027650 	andeq	r7, r2, r0, asr r6
	...
  20:	00000838 	andeq	r0, r0, r8, lsr r8
  24:	00000894 	muleq	r0, r4, r8
  28:	000008e8 	andeq	r0, r0, r8, ror #17
  2c:	000008ec 	andeq	r0, r0, ip, ror #17
	...
  38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  3c:	00000000 	andeq	r0, r0, r0
  40:	00010120 	andeq	r0, r1, r0, lsr #2
  44:	00010128 	andeq	r0, r1, r8, lsr #2
  48:	00027650 	andeq	r7, r2, r0, asr r6
  4c:	00027658 	andeq	r7, r2, r8, asr r6
	...
